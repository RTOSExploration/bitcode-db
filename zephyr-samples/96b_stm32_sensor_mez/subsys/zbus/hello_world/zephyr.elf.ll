; ModuleID = 'build/96b_stm32_sensor_mez/subsys/zbus/hello_world/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%struct._thread_arch = type { i32, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.zbus_observer = type { i8*, i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231749 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231729 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231719 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231819 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231809 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231799 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231789 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231779 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231769 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231759 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233736 to i8*), void (i8*)* inttoptr (i32 134231739 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [59 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_subscriber_task_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_acc_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_simple_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_bar_sub to i8*), i8* bitcast (%struct.zbus_channel* @acc_data_chan to i8*), i8* bitcast (%struct.zbus_observer* @bar_sub to i8*), i8* bitcast (%struct.zbus_observer* @foo_lis to i8*), i8* bitcast (%struct.zbus_channel* @simple_chan to i8*), i8* bitcast (%struct.zbus_channel* @version_chan to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !25
@.str = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 2 }, align 2, !dbg !358
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer*] zeroinitializer, align 4, !dbg !365
@version_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer** getelementptr inbounds ([1 x %struct.zbus_observer*], [1 x %struct.zbus_observer*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !112
@_zbus_mutex_acc_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_acc_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_acc_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_acc_data_chan", align 4, !dbg !295
@.str.1 = private unnamed_addr constant [14 x i8] c"acc_data_chan\00", align 1
@_zbus_message_acc_data_chan = internal global %struct._thread_stack_info zeroinitializer, align 4, !dbg !370
@_zbus_observers_acc_data_chan = internal constant [3 x %struct.zbus_observer*] [%struct.zbus_observer* @foo_lis, %struct.zbus_observer* @bar_sub, %struct.zbus_observer* null], align 4, !dbg !377
@acc_data_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i16 12, i8* null, i8* bitcast (%struct._thread_stack_info* @_zbus_message_acc_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_acc_data_chan, %struct.zbus_observer** getelementptr inbounds ([3 x %struct.zbus_observer*], [3 x %struct.zbus_observer*]* @_zbus_observers_acc_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.acc_data_chan", align 4, !dbg !297
@_zbus_mutex_simple_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_simple_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_simple_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_simple_chan", align 4, !dbg !299
@.str.2 = private unnamed_addr constant [12 x i8] c"simple_chan\00", align 1
@_zbus_message_simple_chan = internal global i32 0, align 4, !dbg !382
@_zbus_observers_simple_chan = internal constant [1 x %struct.zbus_observer*] zeroinitializer, align 4, !dbg !384
@simple_chan = dso_local constant %struct.zbus_channel { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i16 4, i8* null, i8* bitcast (i32* @_zbus_message_simple_chan to i8*), i1 (i8*, i32)* @simple_chan_validator, %struct.k_mutex* @_zbus_mutex_simple_chan, %struct.zbus_observer** getelementptr inbounds ([1 x %struct.zbus_observer*], [1 x %struct.zbus_observer*]* @_zbus_observers_simple_chan, i32 0, i32 0) }, section "._zbus_channel.static.simple_chan", align 4, !dbg !301
@.str.3 = private unnamed_addr constant [8 x i8] c"foo_lis\00", align 1
@foo_lis = dso_local global %struct.zbus_observer { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @listener_callback_example }, section "._zbus_observer.static.foo_lis", align 4, !dbg !303
@_zbus_observer_queue_bar_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bar_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_bar_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_bar_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_bar_sub", align 4, !dbg !305
@_k_fifo_buf__zbus_observer_queue_bar_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !344
@.str.4 = private unnamed_addr constant [8 x i8] c"bar_sub\00", align 1
@bar_sub = dso_local global %struct.zbus_observer { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8 1, %struct.k_msgq* @_zbus_observer_queue_bar_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.bar_sub", align 4, !dbg !307
@_k_thread_obj_subscriber_task_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !354
@_k_thread_stack_subscriber_task_id = dso_local global [576 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !349
@.str.5 = private unnamed_addr constant [19 x i8] c"subscriber_task_id\00", align 1
@_k_thread_data_subscriber_task_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_subscriber_task_id, %struct.z_thread_stack_element* getelementptr inbounds ([576 x %struct.z_thread_stack_element], [576 x %struct.z_thread_stack_element]* @_k_thread_stack_subscriber_task_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @subscriber_task to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_subscriber_task_id", align 4, !dbg !309
@subscriber_task_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_subscriber_task_id, align 4, !dbg !340
@__const.main.acc1 = private unnamed_addr constant %struct._thread_stack_info { i32 1, i32 1, i32 1 }, align 4
@.str.6 = private unnamed_addr constant [58 x i8] c"%c: Sensor sample started raw reading, version %u.%u-%u!\0A\00", align 1
@count = internal unnamed_addr global i32 0, align 4, !dbg !356
@.str.7 = private unnamed_addr constant [19 x i8] c"%c: Channel list:\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"%c: Observers list:\0A\00", align 1
@.str.9 = private unnamed_addr constant [65 x i8] c"%c: Pub a valid value to a channel with validator successfully.\0A\00", align 1
@.str.10 = private unnamed_addr constant [68 x i8] c"%c: Pub an invalid value to a channel with validator successfully.\0A\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"%c: From listener -> Acc x=%d, y=%d, z=%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"%c: From subscriber -> Acc x=%d, y=%d, z=%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"%c: %d - Channel %s:\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"%c:       Message size: %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"%c:       Observers:\0A\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"%c:       - %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"%c: %d - %s %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"Subscriber\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"Listener\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !386
@.str.1.22 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !410
@.str.25 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !420
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !470
@.str.30 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.32 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.33 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.31 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.35 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.36 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.34 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.37 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.39 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.40 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.64 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.59 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.60 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.61 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.62 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.63 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.54 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.55 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.48 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.56 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.57 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.58 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.53 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.47 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.49 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.50 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.51 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.52 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.43 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.44 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.45 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !499
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !628
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !505
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !637
@.str.76 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !673
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.89, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !683
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !688
@.str.88 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.89 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.90 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !708
@.str.1.94 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@_zbus_channel_list_start = external dso_local global [0 x %struct.zbus_channel], align 4
@_zbus_channel_list_end = external dso_local global [0 x %struct.zbus_channel], align 4
@_zbus_observer_list_start = external dso_local global [0 x %struct.zbus_observer], align 4
@_zbus_observer_list_end = external dso_local global [0 x %struct.zbus_observer], align 4
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !720
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !921
@.str.103 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !883
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !866
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.103, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !839
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !855
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !898
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !900
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !902
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !904
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !908
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !916
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !957
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1055
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1044
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1096
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1162
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1440
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1341
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.1.115 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1442
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1355
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !942
@.str.2.116 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1455
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1361
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.3.117 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1457
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1420
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1370
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.4.118 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1459
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1376
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.5.119 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1461
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1382
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.6.120 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1463
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.7.121 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1465
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@.str.125 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.125, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1467
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !954
@.str.1.126 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1647
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1702
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1639
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1704
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.126, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1612
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1614
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.2.129 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1710
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1641
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1720
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.129, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1623
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1625
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.3.130 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1722
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1643
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1732
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.130, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1629
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1631
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.4.133 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1734
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1645
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1744
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.133, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1635
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1637
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1691
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1694
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1696
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1699
@.str.5.128 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.136 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.7.138 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.8.139 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1028
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1712
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1714
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1716
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1718
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1724
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1726
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1728
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1730
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1736
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1738
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1740
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1742
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.9 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1751
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1860
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1862
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1858
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1829
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1864
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1339
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1353
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1359
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1368
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1374
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1380
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1954
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1998
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2001
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2006
@.str.174 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.178 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.179 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.180 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.184 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.185 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.186 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.187 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.188 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.183 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.182 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.184, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.185, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.186, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.187, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.188, i32 0, i32 0)], align 4
@.str.190 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2013
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2235
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2222
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2230
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2242
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2247
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.199 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.205, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.206, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.207, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.208, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.209, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.203, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.210, i32 0, i32 0)], align 4, !dbg !2277
@.str.204 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.205 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.206 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.207 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.208 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.209 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.203 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.210 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2389
@.str.8.202 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2402
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2510
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2618
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2621
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2623
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2240
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2232
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2625
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2661
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2100
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2659
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2664
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3397 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3403, !srcloc !3404
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #26, !dbg !3405, !srcloc !3406
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3407, !srcloc !3408
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3409, !srcloc !3410
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #26, !dbg !3411, !srcloc !3412
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3413, !srcloc !3414
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #26, !dbg !3415, !srcloc !3416
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3417, !srcloc !3418
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3453, !srcloc !3456
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3459, !srcloc !3460
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3461, !srcloc !3462
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3463, !srcloc !3464
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3465, !srcloc !3466
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3467, !srcloc !3468
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3469, !srcloc !3470
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3471, !srcloc !3472
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3473, !srcloc !3474
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3475, !srcloc !3476
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3477, !srcloc !3478
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3479, !srcloc !3480
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3481, !srcloc !3482
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3483, !srcloc !3484
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3485, !srcloc !3486
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3487, !srcloc !3488
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3489, !srcloc !3490
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3491, !srcloc !3492
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3493, !srcloc !3494
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3495, !srcloc !3496
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3497, !srcloc !3498
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3499, !srcloc !3500
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3501, !srcloc !3502
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3503, !srcloc !3504
  ret void, !dbg !3505
}

; Function Attrs: noinline nounwind optsize
define internal void @listener_callback_example(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3508 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3510, metadata !DIExpression()), !dbg !3514
  %2 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #27, !dbg !3515
  call void @llvm.dbg.value(metadata i8* %2, metadata !3511, metadata !DIExpression()), !dbg !3514
  %3 = bitcast i8* %2 to i32*, !dbg !3516
  %4 = load i32, i32* %3, align 4, !dbg !3516
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3516
  %6 = bitcast i8* %5 to i32*, !dbg !3516
  %7 = load i32, i32* %6, align 4, !dbg !3516
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3516
  %9 = bitcast i8* %8 to i32*, !dbg !3516
  %10 = load i32, i32* %9, align 4, !dbg !3516
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i32 0, i32 0), i32 noundef 73, i32 noundef %4, i32 noundef %7, i32 noundef %10) #28, !dbg !3516
  ret void, !dbg !3521
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3522 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3526, metadata !DIExpression()), !dbg !3527
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !3528
  %3 = load i8*, i8** %2, align 4, !dbg !3528
  ret i8* %3, !dbg !3529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal zeroext i1 @simple_chan_validator(i8* nocapture noundef readonly %0, i32 noundef %1) #3 !dbg !3530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3532, metadata !DIExpression()), !dbg !3536
  call void @llvm.dbg.value(metadata i32 %1, metadata !3533, metadata !DIExpression()), !dbg !3536
  %3 = bitcast i8* %0 to i32*, !dbg !3537
  call void @llvm.dbg.value(metadata i32* %3, metadata !3534, metadata !DIExpression()), !dbg !3536
  %4 = load i32, i32* %3, align 4, !dbg !3538
  %5 = icmp ult i32 %4, 10, !dbg !3540
  ret i1 %5, !dbg !3541
}

; Function Attrs: noinline nounwind optsize
define internal void @subscriber_task() #1 !dbg !3542 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3547
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3547
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3544, metadata !DIExpression(DW_OP_deref)), !dbg !3548
  %4 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @bar_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #28, !dbg !3549
  %5 = icmp eq i32 %4, 0, !dbg !3550
  br i1 %5, label %6, label %24, !dbg !3551

6:                                                ; preds = %0
  %7 = bitcast %struct._thread_stack_info* %2 to i8*
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2
  br label %11, !dbg !3551

11:                                               ; preds = %6, %21
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #26, !dbg !3552
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !3545, metadata !DIExpression()), !dbg !3553
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3554
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !3544, metadata !DIExpression()), !dbg !3548
  %13 = icmp eq %struct.zbus_channel* %12, @acc_data_chan, !dbg !3556
  br i1 %13, label %14, label %21, !dbg !3557

14:                                               ; preds = %11
  %15 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #27, !dbg !3558
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !3560
  %17 = call i32 @zbus_chan_read(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %7, [1 x i64] %16) #28, !dbg !3560
  %18 = load i32, i32* %8, align 4, !dbg !3561
  %19 = load i32, i32* %9, align 4, !dbg !3561
  %20 = load i32, i32* %10, align 4, !dbg !3561
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i32 0, i32 0), i32 noundef 73, i32 noundef %18, i32 noundef %19, i32 noundef %20) #28, !dbg !3561
  br label %21, !dbg !3566

21:                                               ; preds = %14, %11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #26, !dbg !3567
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3544, metadata !DIExpression(DW_OP_deref)), !dbg !3548
  %22 = call i32 @zbus_sub_wait(%struct.zbus_observer* noundef nonnull @bar_sub, %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #28, !dbg !3549
  %23 = icmp eq i32 %22, 0, !dbg !3550
  br i1 %23, label %11, label %24, !dbg !3551, !llvm.loop !3568

24:                                               ; preds = %21, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3569
  ret void, !dbg !3569
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !3570 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3575, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 %0, metadata !3577, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 1000, metadata !3582, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i32 10000, metadata !3583, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8 1, metadata !3584, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8 0, metadata !3585, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8 1, metadata !3586, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8 0, metadata !3587, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8 1, metadata !3588, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i8 0, metadata !3589, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i64 0, metadata !3590, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.value(metadata i64 0, metadata !3590, metadata !DIExpression()), !dbg !3594
  %2 = mul i64 %0, 10, !dbg !3596
  ret i64 %2, !dbg !3602
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3603 {
  %1 = alloca i32, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3611
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3611
  %4 = bitcast %struct._thread_stack_info* %2 to i8*, !dbg !3612
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !3612
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !3607, metadata !DIExpression()), !dbg !3613
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %4, i8* noundef nonnull align 4 dereferenceable(12) bitcast (%struct._thread_stack_info* @__const.main.acc1 to i8*), i32 12, i1 false), !dbg !3613
  %5 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef nonnull @version_chan) #27, !dbg !3614
  call void @llvm.dbg.value(metadata i8* %5, metadata !3608, metadata !DIExpression()), !dbg !3615
  %6 = load i8, i8* %5, align 2, !dbg !3616
  %7 = zext i8 %6 to i32, !dbg !3616
  %8 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !3616
  %9 = load i8, i8* %8, align 1, !dbg !3616
  %10 = zext i8 %9 to i32, !dbg !3616
  %11 = getelementptr inbounds i8, i8* %5, i32 2, !dbg !3616
  %12 = bitcast i8* %11 to i16*, !dbg !3616
  %13 = load i16, i16* %12, align 2, !dbg !3616
  %14 = zext i16 %13 to i32, !dbg !3616
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i32 0, i32 0), i32 noundef 73, i32 noundef %7, i32 noundef %10, i32 noundef %14) #28, !dbg !3616
  store i32 0, i32* @count, align 4, !dbg !3621
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0), i32 noundef 73) #28, !dbg !3622
  %15 = tail call zeroext i1 @zbus_iterate_over_channels(i1 (%struct.zbus_channel*)* noundef nonnull @print_channel_data_iterator) #28, !dbg !3627
  store i32 0, i32* @count, align 4, !dbg !3628
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i32 noundef 73) #28, !dbg !3629
  %16 = tail call zeroext i1 @zbus_iterate_over_observers(i1 (%struct.zbus_observer*)* noundef nonnull @print_observer_data_iterator) #28, !dbg !3634
  %17 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #27, !dbg !3635
  %18 = insertvalue [1 x i64] poison, i64 %17, 0, !dbg !3636
  %19 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %4, [1 x i64] %18) #28, !dbg !3636
  call fastcc void @k_msleep() #27, !dbg !3637
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !3638
  store i32 2, i32* %20, align 4, !dbg !3639
  %21 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !3640
  store i32 2, i32* %21, align 4, !dbg !3641
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !3642
  store i32 2, i32* %22, align 4, !dbg !3643
  %23 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @acc_data_chan, i8* noundef nonnull %4, [1 x i64] %18) #28, !dbg !3644
  call void @llvm.dbg.value(metadata i32 5, metadata !3606, metadata !DIExpression()), !dbg !3615
  store i32 5, i32* %1, align 4, !dbg !3645
  %24 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #27, !dbg !3646
  %25 = insertvalue [1 x i64] poison, i64 %24, 0, !dbg !3647
  call void @llvm.dbg.value(metadata i32* %1, metadata !3606, metadata !DIExpression(DW_OP_deref)), !dbg !3615
  %26 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @simple_chan, i8* noundef nonnull %3, [1 x i64] %25) #28, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %26, metadata !3605, metadata !DIExpression()), !dbg !3615
  %27 = icmp eq i32 %26, 0, !dbg !3648
  br i1 %27, label %28, label %29, !dbg !3650

28:                                               ; preds = %0
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9, i32 0, i32 0), i32 noundef 73) #28, !dbg !3651
  br label %29, !dbg !3657

29:                                               ; preds = %28, %0
  call void @llvm.dbg.value(metadata i32 15, metadata !3606, metadata !DIExpression()), !dbg !3615
  store i32 15, i32* %1, align 4, !dbg !3658
  call void @llvm.dbg.value(metadata i32* %1, metadata !3606, metadata !DIExpression(DW_OP_deref)), !dbg !3615
  %30 = call i32 @zbus_chan_pub(%struct.zbus_channel* noundef nonnull @simple_chan, i8* noundef nonnull %3, [1 x i64] %25) #28, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %30, metadata !3605, metadata !DIExpression()), !dbg !3615
  %31 = icmp eq i32 %30, -35, !dbg !3660
  br i1 %31, label %32, label %33, !dbg !3662

32:                                               ; preds = %29
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.10, i32 0, i32 0), i32 noundef 73) #28, !dbg !3663
  br label %33, !dbg !3669

33:                                               ; preds = %32, %29
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !3670
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !3670
  ret void, !dbg !3670
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal zeroext i1 @print_channel_data_iterator(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3671 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3675, metadata !DIExpression()), !dbg !3678
  %2 = load i32, i32* @count, align 4, !dbg !3679
  %3 = tail call fastcc i8* @zbus_chan_name(%struct.zbus_channel* noundef %0) #27, !dbg !3679
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i32 0, i32 0), i32 noundef 73, i32 noundef %2, i8* noundef %3) #28, !dbg !3679
  %4 = tail call fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* noundef %0) #27, !dbg !3684
  %5 = zext i16 %4 to i32, !dbg !3684
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0), i32 noundef 73, i32 noundef %5) #28, !dbg !3684
  %6 = load i32, i32* @count, align 4, !dbg !3689
  %7 = add nsw i32 %6, 1, !dbg !3689
  store i32 %7, i32* @count, align 4, !dbg !3689
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i32 0, i32 0), i32 noundef 73) #28, !dbg !3690
  %8 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 6, !dbg !3695
  %9 = load %struct.zbus_observer**, %struct.zbus_observer*** %8, align 4, !dbg !3695
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %9, metadata !3676, metadata !DIExpression()), !dbg !3696
  %10 = load %struct.zbus_observer*, %struct.zbus_observer** %9, align 4, !dbg !3697
  %11 = icmp eq %struct.zbus_observer* %10, null, !dbg !3699
  br i1 %11, label %12, label %13, !dbg !3700

12:                                               ; preds = %13, %1
  ret i1 true, !dbg !3701

13:                                               ; preds = %1, %13
  %14 = phi %struct.zbus_observer* [ %19, %13 ], [ %10, %1 ]
  %15 = phi %struct.zbus_observer** [ %18, %13 ], [ %9, %1 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %15, metadata !3676, metadata !DIExpression()), !dbg !3696
  %16 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %14, i32 0, i32 0, !dbg !3702
  %17 = load i8*, i8** %16, align 4, !dbg !3702
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i32 noundef 73, i8* noundef %17) #28, !dbg !3702
  %18 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %15, i32 1, !dbg !3708
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !3676, metadata !DIExpression()), !dbg !3696
  %19 = load %struct.zbus_observer*, %struct.zbus_observer** %18, align 4, !dbg !3697
  %20 = icmp eq %struct.zbus_observer* %19, null, !dbg !3699
  br i1 %20, label %12, label %13, !dbg !3700, !llvm.loop !3709
}

; Function Attrs: noinline nounwind optsize
define internal zeroext i1 @print_observer_data_iterator(%struct.zbus_observer* nocapture noundef readonly %0) #1 !dbg !3711 {
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !3715, metadata !DIExpression()), !dbg !3716
  %2 = load i32, i32* @count, align 4, !dbg !3717
  %3 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 2, !dbg !3717
  %4 = load %struct.k_msgq*, %struct.k_msgq** %3, align 4, !dbg !3717
  %5 = icmp eq %struct.k_msgq* %4, null, !dbg !3717
  %6 = select i1 %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), !dbg !3717
  %7 = tail call fastcc i8* @zbus_obs_name(%struct.zbus_observer* noundef %0) #27, !dbg !3717
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i32 noundef 73, i32 noundef %2, i8* noundef %6, i8* noundef %7) #28, !dbg !3717
  %8 = load i32, i32* @count, align 4, !dbg !3722
  %9 = add nsw i32 %8, 1, !dbg !3722
  store i32 %9, i32* @count, align 4, !dbg !3722
  ret i1 true, !dbg !3723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3724 {
  call void @llvm.dbg.value(metadata i32 1000, metadata !3728, metadata !DIExpression()), !dbg !3729
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #27, !dbg !3730
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !3731
  tail call fastcc void @k_sleep([1 x i64] %2) #27, !dbg !3731
  ret void, !dbg !3732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3733 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3742, metadata !DIExpression()), !dbg !3743
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3744, !srcloc !3746
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #28, !dbg !3747
  ret void, !dbg !3748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_obs_name(%struct.zbus_observer* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3749 {
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !3753, metadata !DIExpression()), !dbg !3754
  %2 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 0, !dbg !3755
  %3 = load i8*, i8** %2, align 4, !dbg !3755
  ret i8* %3, !dbg !3756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_name(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3757 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3761, metadata !DIExpression()), !dbg !3762
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !3763
  %3 = load i8*, i8** %2, align 4, !dbg !3763
  ret i8* %3, !dbg !3764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i16 @zbus_chan_msg_size(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #3 !dbg !3765 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3769, metadata !DIExpression()), !dbg !3770
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !3771
  %3 = load i16, i16* %2, align 4, !dbg !3771
  ret i16 %3, !dbg !3772
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3773 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %0, metadata !3784, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %1, metadata !3785, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %2, metadata !3786, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %3, metadata !3787, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %0, metadata !3789, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %0, metadata !3790, metadata !DIExpression()), !dbg !3851
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3852
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !3852
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3793, metadata !DIExpression()), !dbg !3853
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3854
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !3854
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3795, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 0, metadata !3796, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 0, metadata !3797, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 0, metadata !3798, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 -1, metadata !3799, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 0, metadata !3802, metadata !DIExpression()), !dbg !3851
  %12 = and i32 %2, 4, !dbg !3856
  %13 = icmp eq i32 %12, 0, !dbg !3857
  call void @llvm.dbg.value(metadata i1 %13, metadata !3803, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3851
  %14 = lshr i32 %2, 3, !dbg !3858
  %15 = and i32 %14, 7, !dbg !3858
  %16 = add nuw nsw i32 %15, 1, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %16, metadata !3804, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 0, metadata !3805, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %0, metadata !3806, metadata !DIExpression()), !dbg !3851
  %17 = ptrtoint i8* %0 to i32, !dbg !3860
  %18 = and i32 %17, 3, !dbg !3862
  %19 = icmp eq i32 %18, 0, !dbg !3862
  br i1 %19, label %20, label %316, !dbg !3863

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3864
  call void @llvm.dbg.value(metadata i8* %21, metadata !3790, metadata !DIExpression()), !dbg !3851
  %22 = icmp eq i8* %0, null, !dbg !3865
  %23 = and i32 %1, 7, !dbg !3867
  %24 = sub nuw nsw i32 8, %23, !dbg !3867
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3867
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3867
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %27, metadata !3785, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %26, metadata !3790, metadata !DIExpression()), !dbg !3851
  br i1 %22, label %33, label %28, !dbg !3868

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3870
  %30 = sub i32 4, %17, !dbg !3870
  %31 = add i32 %30, %29, !dbg !3871
  %32 = icmp ugt i32 %31, %27, !dbg !3872
  br i1 %32, label %316, label %33, !dbg !3873

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3874
  call void @llvm.dbg.value(metadata i8* %34, metadata !3787, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %3, metadata !3801, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 4, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 4, metadata !3791, metadata !DIExpression()), !dbg !3851
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3875

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %42, metadata !3787, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %43, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %44, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %45, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %72, metadata !3799, metadata !DIExpression()), !dbg !3851
  br i1 %46, label %73, label %47, !dbg !3876

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3877
  %49 = zext i1 %48 to i32, !dbg !3881
  %50 = add nsw i32 %72, %49, !dbg !3881
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3881
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3881
  call void @llvm.dbg.value(metadata i32 %52, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %51, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3802, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %50, metadata !3799, metadata !DIExpression()), !dbg !3851
  br label %53, !dbg !3882

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %40, metadata !3787, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %58, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %57, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %56, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3802, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %54, metadata !3799, metadata !DIExpression()), !dbg !3851
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3883
  call void @llvm.dbg.value(metadata i8* %60, metadata !3787, metadata !DIExpression()), !dbg !3851
  %61 = load i8, i8* %60, align 1, !dbg !3885
  %62 = icmp eq i8 %61, 0, !dbg !3886
  br i1 %62, label %223, label %63, !dbg !3887, !llvm.loop !3888

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3876

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3891

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3802, metadata !DIExpression()), !dbg !3851
  %75 = add nsw i32 %72, -1, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %75, metadata !3799, metadata !DIExpression()), !dbg !3851
  br label %53, !dbg !3893

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3894

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 4, metadata !3791, metadata !DIExpression()), !dbg !3851
  br label %53, !dbg !3895

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 4, metadata !3791, metadata !DIExpression()), !dbg !3851
  br label %53, !dbg !3896

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3897
  %81 = icmp eq i8 %80, 108, !dbg !3899
  br i1 %81, label %82, label %109, !dbg !3900

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3901
  %84 = load i8, i8* %83, align 1, !dbg !3901
  %85 = icmp eq i8 %84, 108, !dbg !3904
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3905
  %89 = add i32 %88, 7, !dbg !3905
  %90 = and i32 %89, -8, !dbg !3905
  %91 = inttoptr i32 %90 to i8*, !dbg !3905
  %92 = inttoptr i32 %90 to double*, !dbg !3905
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3905
  %94 = load double, double* %92, align 8, !dbg !3905
  call void @llvm.dbg.value(metadata i8* %93, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 8, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 8, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata double %94, metadata !3819, metadata !DIExpression()), !dbg !3907
  %95 = ptrtoint i8* %43 to i32, !dbg !3908
  %96 = add i32 %95, 7, !dbg !3908
  %97 = and i32 %96, -8, !dbg !3908
  %98 = inttoptr i32 %97 to i8*, !dbg !3909
  call void @llvm.dbg.value(metadata i8* %98, metadata !3790, metadata !DIExpression()), !dbg !3851
  br i1 %22, label %104, label %99, !dbg !3910

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3911
  %101 = icmp ugt i32 %100, %194, !dbg !3915
  br i1 %101, label %316, label %102, !dbg !3916

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3917
  store double %94, double* %103, align 8, !dbg !3917
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3920
  call void @llvm.dbg.value(metadata i8* %105, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3802, metadata !DIExpression()), !dbg !3851
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3802, metadata !DIExpression()), !dbg !3851
  br label %53, !dbg !3921

107:                                              ; preds = %73, %73
  br label %109, !dbg !3922

108:                                              ; preds = %73
  br label %109, !dbg !3922

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3851
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3851
  call void @llvm.dbg.value(metadata i32 %113, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %112, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3805, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3802, metadata !DIExpression()), !dbg !3851
  %114 = ptrtoint i8* %43 to i32, !dbg !3922
  %115 = add i32 %114, -1, !dbg !3922
  %116 = add i32 %115, %112, !dbg !3922
  %117 = sub i32 0, %112, !dbg !3922
  %118 = and i32 %116, %117, !dbg !3922
  %119 = inttoptr i32 %118 to i8*, !dbg !3923
  call void @llvm.dbg.value(metadata i8* %119, metadata !3790, metadata !DIExpression()), !dbg !3851
  br i1 %22, label %124, label %120, !dbg !3924

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3926
  %122 = add i32 %121, %118, !dbg !3927
  %123 = icmp ugt i32 %122, %194, !dbg !3928
  br i1 %123, label %316, label %124, !dbg !3929

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3930

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3923
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3931
  call void @llvm.dbg.value(metadata i8* %127, metadata !3788, metadata !DIExpression()), !dbg !3851
  %128 = bitcast i8* %41 to i8**, !dbg !3931
  %129 = load i8*, i8** %128, align 4, !dbg !3931
  call void @llvm.dbg.value(metadata i8* %129, metadata !3801, metadata !DIExpression()), !dbg !3851
  br label %130, !dbg !3932

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3933
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3934
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3851
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3935
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3851
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3936
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3851
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3851
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3851
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3851
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3937
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %142, metadata !3785, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %141, metadata !3787, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %140, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %139, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %138, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %137, metadata !3796, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %136, metadata !3804, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %135, metadata !3797, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3802, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %133, metadata !3801, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %132, metadata !3799, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %131, metadata !3798, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.label(metadata !3850), !dbg !3939
  br i1 %22, label %146, label %144, !dbg !3940

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3941
  store i8* %133, i8** %145, align 4, !dbg !3944
  br label %146, !dbg !3945

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3946
  call void @llvm.dbg.value(metadata i32 %147, metadata !3804, metadata !DIExpression()), !dbg !3851
  %148 = icmp sgt i32 %136, 0, !dbg !3947
  br i1 %148, label %152, label %149, !dbg !3948

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !3949
  %151 = zext i1 %150 to i32, !dbg !3949
  br label %152, !dbg !3948

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3948
  %154 = icmp eq i32 %153, 0, !dbg !3948
  call void @llvm.dbg.value(metadata i1 %154, metadata !3828, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3950
  call void @llvm.dbg.value(metadata i1 %36, metadata !3831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3950
  %155 = or i1 %36, %154, !dbg !3951
  br i1 %155, label %156, label %190, !dbg !3951

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3952
  %158 = sub i32 %157, %17, !dbg !3952
  %159 = lshr i32 %158, 2, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %159, metadata !3832, metadata !DIExpression()), !dbg !3954
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3955
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3955
  br i1 %163, label %316, label %164, !dbg !3955

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3957

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3958
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3961
  store i8 %166, i8* %167, align 1, !dbg !3962
  %168 = trunc i32 %132 to i8, !dbg !3963
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3964
  store i8 %168, i8* %169, align 1, !dbg !3965
  br i1 %154, label %173, label %170, !dbg !3966

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3967
  store i8 %171, i8* %167, align 1, !dbg !3967
  %172 = add i32 %131, 1, !dbg !3970
  call void @llvm.dbg.value(metadata i32 %172, metadata !3798, metadata !DIExpression()), !dbg !3851
  br label %185, !dbg !3971

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %174, metadata !3797, metadata !DIExpression()), !dbg !3851
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3974

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3975
  call void @llvm.dbg.value(metadata i32 %177, metadata !3785, metadata !DIExpression()), !dbg !3851
  br label %185, !dbg !3978

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3979

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3980
  call void @llvm.dbg.value(metadata i32 %180, metadata !3785, metadata !DIExpression()), !dbg !3851
  br label %185, !dbg !3983

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #28, !dbg !3984
  %183 = add i32 %142, 2, !dbg !3986
  %184 = add i32 %183, %182, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %184, metadata !3785, metadata !DIExpression()), !dbg !3851
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3851
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3851
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3851
  call void @llvm.dbg.value(metadata i32 %188, metadata !3785, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %187, metadata !3797, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %186, metadata !3798, metadata !DIExpression()), !dbg !3851
  %189 = add nuw nsw i32 %137, 1, !dbg !3988
  call void @llvm.dbg.value(metadata i32 undef, metadata !3785, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 undef, metadata !3796, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 undef, metadata !3797, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 undef, metadata !3798, metadata !DIExpression()), !dbg !3851
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3933
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3935
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3936
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3937
  call void @llvm.dbg.value(metadata i32 %194, metadata !3785, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %193, metadata !3796, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %192, metadata !3797, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %191, metadata !3798, metadata !DIExpression()), !dbg !3851
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3989
  call void @llvm.dbg.value(metadata i8* %195, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %143, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %141, metadata !3787, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %139, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %138, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3805, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3802, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %132, metadata !3799, metadata !DIExpression()), !dbg !3851
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3883
  call void @llvm.dbg.value(metadata i8* %196, metadata !3787, metadata !DIExpression()), !dbg !3851
  %197 = load i8, i8* %196, align 1, !dbg !3885
  %198 = icmp eq i8 %197, 0, !dbg !3886
  br i1 %198, label %223, label %63, !dbg !3887

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3990

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3991
  call void @llvm.dbg.value(metadata i8* %201, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 undef, metadata !3835, metadata !DIExpression()), !dbg !3992
  br i1 %22, label %216, label %202, !dbg !3993

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3991
  %204 = load i32, i32* %203, align 4, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %204, metadata !3835, metadata !DIExpression()), !dbg !3992
  %205 = inttoptr i32 %118 to i32*, !dbg !3994
  store i32 %204, i32* %205, align 4, !dbg !3997
  br label %216, !dbg !3998

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3999
  %208 = add i32 %207, 7, !dbg !3999
  %209 = and i32 %208, -8, !dbg !3999
  %210 = inttoptr i32 %209 to i8*, !dbg !3999
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3999
  call void @llvm.dbg.value(metadata i8* %211, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i64 undef, metadata !3841, metadata !DIExpression()), !dbg !4000
  br i1 %22, label %216, label %212, !dbg !4001

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3999
  %214 = load i64, i64* %213, align 8, !dbg !3999
  call void @llvm.dbg.value(metadata i64 %214, metadata !3841, metadata !DIExpression()), !dbg !4000
  %215 = inttoptr i32 %118 to i64*, !dbg !4002
  store i64 %214, i64* %215, align 8, !dbg !4007
  br label %216, !dbg !4008

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4009
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %218, metadata !3788, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %40, metadata !3787, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %219, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %113, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %112, metadata !3792, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3805, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8 poison, metadata !3802, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %72, metadata !3799, metadata !DIExpression()), !dbg !3851
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3883
  call void @llvm.dbg.value(metadata i8* %220, metadata !3787, metadata !DIExpression()), !dbg !3851
  %221 = load i8, i8* %220, align 1, !dbg !3885
  %222 = icmp eq i8 %221, 0, !dbg !3886
  br i1 %222, label %223, label %38, !dbg !3887

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4010
  %225 = ptrtoint i8* %224 to i32, !dbg !4011
  %226 = sub i32 %225, %17, !dbg !4011
  %227 = lshr i32 %226, 2, !dbg !4013
  %228 = icmp ugt i32 %226, 1023, !dbg !4014
  br i1 %228, label %316, label %229, !dbg !4015

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4016

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4017
  %232 = add i32 %231, %226, !dbg !4020
  br label %316, !dbg !4021

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4022
  store i8 %234, i8* %0, align 1, !dbg !4023
  %235 = trunc i32 %192 to i8, !dbg !4024
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4026
  store i8 %236, i8* %238, align 1, !dbg !4028
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4029
  store i8 %237, i8* %239, align 1, !dbg !4030
  %240 = trunc i32 %191 to i8, !dbg !4031
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4032
  store i8 %240, i8* %241, align 1, !dbg !4033
  %242 = icmp eq i32 %191, 0, !dbg !4034
  %243 = xor i1 %242, true, !dbg !4035
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4035
  call void @llvm.dbg.value(metadata i8* %224, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 0, metadata !3800, metadata !DIExpression()), !dbg !3851
  br i1 %245, label %246, label %265, !dbg !4035

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4036

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %250, metadata !3800, metadata !DIExpression()), !dbg !3851
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4037
  %252 = load i8, i8* %251, align 1, !dbg !4037
  %253 = icmp sgt i8 %252, -1, !dbg !4039
  br i1 %253, label %261, label %254, !dbg !4040

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3844, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4041
  %255 = ptrtoint i8* %249 to i32, !dbg !4042
  %256 = add i32 %247, %255, !dbg !4044
  %257 = icmp ugt i32 %256, %194, !dbg !4045
  br i1 %257, label %316, label %258, !dbg !4046

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4047
  call void @llvm.dbg.value(metadata i8 %259, metadata !3844, metadata !DIExpression()), !dbg !4041
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %260, metadata !3790, metadata !DIExpression()), !dbg !3851
  store i8 %259, i8* %249, align 1, !dbg !4049
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3989
  call void @llvm.dbg.value(metadata i8* %262, metadata !3790, metadata !DIExpression()), !dbg !3851
  %263 = add nuw i32 %250, 1, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %263, metadata !3800, metadata !DIExpression()), !dbg !3851
  %264 = icmp eq i32 %263, %193, !dbg !4051
  br i1 %264, label %265, label %248, !dbg !4036, !llvm.loop !4052

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3989
  call void @llvm.dbg.value(metadata i8* %266, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 0, metadata !3800, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %133, metadata !3801, metadata !DIExpression()), !dbg !3851
  %267 = icmp eq i32 %193, 0, !dbg !4054
  br i1 %267, label %312, label %268, !dbg !4057

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4057

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %272, metadata !3801, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %273, metadata !3800, metadata !DIExpression()), !dbg !3851
  br i1 %242, label %278, label %274, !dbg !4058

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4061
  %276 = load i8, i8* %275, align 1, !dbg !4061
  %277 = icmp sgt i8 %276, -1, !dbg !4062
  br i1 %277, label %278, label %307, !dbg !4063

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4064

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3791, metadata !DIExpression()), !dbg !3851
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4065
  %281 = load i8, i8* %280, align 1, !dbg !4065
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4068
  call void @llvm.dbg.value(metadata i8* %282, metadata !3790, metadata !DIExpression()), !dbg !3851
  store i8 %281, i8* %271, align 1, !dbg !4069
  br label %293, !dbg !4070

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4071
  %285 = load i8, i8* %284, align 1, !dbg !4071
  %286 = zext i8 %285 to i32, !dbg !4071
  %287 = shl nuw nsw i32 %286, 2, !dbg !4073
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4074
  %289 = bitcast i8* %288 to i8**, !dbg !4075
  %290 = load i8*, i8** %289, align 4, !dbg !4075
  call void @llvm.dbg.value(metadata i8* %290, metadata !3801, metadata !DIExpression()), !dbg !3851
  store i8* null, i8** %289, align 4, !dbg !4076
  %291 = tail call i32 @strlen(i8* noundef %290) #28, !dbg !4077
  %292 = add i32 %291, 1, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %292, metadata !3791, metadata !DIExpression()), !dbg !3851
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3851
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4079
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3851
  call void @llvm.dbg.value(metadata i8* %296, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 %295, metadata !3791, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %294, metadata !3801, metadata !DIExpression()), !dbg !3851
  %297 = ptrtoint i8* %296 to i32, !dbg !4080
  %298 = add i32 %269, %295, !dbg !4082
  %299 = add i32 %298, %297, !dbg !4083
  %300 = icmp ugt i32 %299, %194, !dbg !4084
  br i1 %300, label %316, label %301, !dbg !4085

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4086
  %303 = load i8, i8* %302, align 1, !dbg !4086
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4087
  call void @llvm.dbg.value(metadata i8* %304, metadata !3790, metadata !DIExpression()), !dbg !3851
  store i8 %303, i8* %296, align 1, !dbg !4088
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #28, !dbg !4089
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4090
  call void @llvm.dbg.value(metadata i8* %306, metadata !3790, metadata !DIExpression()), !dbg !3851
  br label %307, !dbg !4091

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4092
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3851
  call void @llvm.dbg.value(metadata i8* %309, metadata !3790, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i8* %308, metadata !3801, metadata !DIExpression()), !dbg !3851
  %310 = add nuw i32 %273, 1, !dbg !4093
  call void @llvm.dbg.value(metadata i32 %310, metadata !3800, metadata !DIExpression()), !dbg !3851
  %311 = icmp eq i32 %310, %193, !dbg !4054
  br i1 %311, label %312, label %270, !dbg !4057, !llvm.loop !4094

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3989
  %314 = ptrtoint i8* %313 to i32, !dbg !4096
  %315 = sub i32 %314, %17, !dbg !4096
  br label %316, !dbg !4097

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3851
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4098
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4098
  ret i32 %317, !dbg !4098
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4103, metadata !DIExpression()), !dbg !4104
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4105
  ret i1 %2, !dbg !4106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4107 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4112, metadata !DIExpression()), !dbg !4113
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4114
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4115
  %4 = and i1 %2, %3, !dbg !4115
  ret i1 %4, !dbg !4116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4117 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4121, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.value(metadata i32 %1, metadata !4122, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.value(metadata i32 %2, metadata !4123, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.value(metadata i8* %3, metadata !4124, metadata !DIExpression()), !dbg !4127
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4128
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4128
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4125, metadata !DIExpression()), !dbg !4129
  call void @llvm.va_start(i8* nonnull %6), !dbg !4130
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4131
  %8 = load i32, i32* %7, align 4, !dbg !4131
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4131
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4131
  call void @llvm.dbg.value(metadata i32 %10, metadata !4126, metadata !DIExpression()), !dbg !4127
  call void @llvm.va_end(i8* nonnull %6), !dbg !4132
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4133
  ret i32 %10, !dbg !4134
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4135 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4147, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4148, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i8* %2, metadata !4149, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i8* %3, metadata !4150, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i8* %3, metadata !4151, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i8* %3, metadata !4152, metadata !DIExpression()), !dbg !4166
  %5 = icmp eq i8* %3, null, !dbg !4167
  br i1 %5, label %45, label %6, !dbg !4169

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4161, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4166
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4170
  %8 = load i8, i8* %7, align 1, !dbg !4170
  %9 = zext i8 %8 to i32, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %9, metadata !4162, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i8 undef, metadata !4163, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata i8 undef, metadata !4164, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata i32 0, metadata !4160, metadata !DIExpression()), !dbg !4166
  %10 = icmp eq i8 %8, 0, !dbg !4172
  br i1 %10, label %39, label %11, !dbg !4175

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4176
  call void @llvm.dbg.value(metadata i8 %12, metadata !4161, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %13 = zext i8 %12 to i32, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %13, metadata !4161, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %14 = shl nuw nsw i32 %13, 2, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %14, metadata !4161, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4179
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4180
  %17 = load i8, i8* %16, align 1, !dbg !4180
  call void @llvm.dbg.value(metadata i8 %17, metadata !4163, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %18 = zext i8 %17 to i32, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %18, metadata !4163, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4182
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4183
  %21 = load i8, i8* %20, align 1, !dbg !4183
  call void @llvm.dbg.value(metadata i8 %21, metadata !4164, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %22 = zext i8 %21 to i32, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %22, metadata !4164, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %23 = shl nuw nsw i32 %22, 1, !dbg !4185
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4158, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4166
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4186
  call void @llvm.dbg.value(metadata i8* %24, metadata !4158, metadata !DIExpression()), !dbg !4166
  br label %25, !dbg !4175

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4158, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.value(metadata i32 %27, metadata !4160, metadata !DIExpression()), !dbg !4166
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4187
  call void @llvm.dbg.value(metadata i8* %28, metadata !4158, metadata !DIExpression()), !dbg !4166
  %29 = load i8, i8* %26, align 1, !dbg !4189
  %30 = zext i8 %29 to i32, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %30, metadata !4165, metadata !DIExpression()), !dbg !4166
  %31 = shl nuw nsw i32 %30, 2, !dbg !4190
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4191
  %33 = bitcast i8* %32 to i8**, !dbg !4192
  call void @llvm.dbg.value(metadata i8** %33, metadata !4159, metadata !DIExpression()), !dbg !4166
  store i8* %28, i8** %33, align 4, !dbg !4193
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #28, !dbg !4194
  %35 = add i32 %34, 1, !dbg !4195
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4196
  call void @llvm.dbg.value(metadata i8* %36, metadata !4158, metadata !DIExpression()), !dbg !4166
  %37 = add nuw nsw i32 %27, 1, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %37, metadata !4160, metadata !DIExpression()), !dbg !4166
  %38 = icmp eq i32 %37, %9, !dbg !4172
  br i1 %38, label %39, label %25, !dbg !4175, !llvm.loop !4198

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4200
  call void @llvm.dbg.value(metadata i8* %40, metadata !4151, metadata !DIExpression()), !dbg !4166
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4201
  %42 = bitcast i8* %41 to i8**, !dbg !4201
  %43 = load i8*, i8** %42, align 1, !dbg !4201
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4202
  br label %45, !dbg !4203

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4166
  ret i32 %46, !dbg !4204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4205 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4209, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4210, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i8* %2, metadata !4211, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i8* %3, metadata !4212, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i8* %4, metadata !4213, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i8* %4, metadata !4214, metadata !DIExpression()), !dbg !4219
  %6 = ptrtoint i8* %4 to i32, !dbg !4220
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4220
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #28, !dbg !4220
  ret i32 %8, !dbg !4221
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4226, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i32 %1, metadata !4227, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i8 0, metadata !4229, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i32 0, metadata !4230, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i8 poison, metadata !4229, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i8* %0, metadata !4226, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4231
  %3 = load i8, i8* %0, align 1, !dbg !4232
  call void @llvm.dbg.value(metadata i8 %3, metadata !4228, metadata !DIExpression()), !dbg !4231
  %4 = icmp eq i8 %3, 0, !dbg !4233
  br i1 %4, label %29, label %5, !dbg !4234

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %8, metadata !4230, metadata !DIExpression()), !dbg !4231
  br i1 %9, label %11, label %22, !dbg !4236

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4238
  br i1 %12, label %13, label %17, !dbg !4242

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4243
  br i1 %14, label %29, label %15, !dbg !4246

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4247
  br i1 %16, label %29, label %22, !dbg !4249

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4250
  %19 = xor i1 %18, true, !dbg !4252
  %20 = zext i1 %18 to i32, !dbg !4252
  %21 = add nsw i32 %8, %20, !dbg !4252
  br label %22, !dbg !4252

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4231
  call void @llvm.dbg.value(metadata i32 %24, metadata !4230, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i8 poison, metadata !4229, metadata !DIExpression()), !dbg !4231
  %25 = icmp eq i8 %6, 37, !dbg !4253
  %26 = xor i1 %25, %23, !dbg !4255
  call void @llvm.dbg.value(metadata i8* %10, metadata !4226, metadata !DIExpression()), !dbg !4231
  call void @llvm.dbg.value(metadata i8* %10, metadata !4226, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4231
  %27 = load i8, i8* %10, align 1, !dbg !4232
  call void @llvm.dbg.value(metadata i8 %27, metadata !4228, metadata !DIExpression()), !dbg !4231
  %28 = icmp eq i8 %27, 0, !dbg !4233
  br i1 %28, label %29, label %5, !dbg !4234, !llvm.loop !4256

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4231
  ret i1 %30, !dbg !4258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4259 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4263, metadata !DIExpression()), !dbg !4264
  %2 = add i8 %0, -64, !dbg !4265
  %3 = icmp ult i8 %2, 59, !dbg !4265
  ret i1 %3, !dbg !4266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4267 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4275, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %1, metadata !4276, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4277, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %3, metadata !4278, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %4, metadata !4279, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i16* %5, metadata !4280, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %6, metadata !4281, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %0, metadata !4282, metadata !DIExpression()), !dbg !4344
  %11 = bitcast i8* %0 to i32*, !dbg !4345
  call void @llvm.dbg.value(metadata i32* %11, metadata !4283, metadata !DIExpression()), !dbg !4344
  %12 = and i32 %4, 8, !dbg !4346
  %13 = icmp eq i32 %12, 0, !dbg !4347
  call void @llvm.dbg.value(metadata i1 %13, metadata !4287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %0, metadata !4290, metadata !DIExpression()), !dbg !4344
  %14 = icmp eq i32 %1, 0, !dbg !4348
  br i1 %14, label %15, label %17, !dbg !4349

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #27, !dbg !4350
  br label %17, !dbg !4349

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4349
  call void @llvm.dbg.value(metadata i32 %18, metadata !4276, metadata !DIExpression()), !dbg !4344
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4351
  %20 = load i8, i8* %19, align 1, !dbg !4351
  %21 = zext i8 %20 to i32, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %21, metadata !4285, metadata !DIExpression()), !dbg !4344
  %22 = icmp ne i8 %20, 0, !dbg !4353
  %23 = and i32 %4, 1, !dbg !4354
  %24 = icmp ne i32 %23, 0, !dbg !4354
  %25 = and i1 %24, %22, !dbg !4354
  call void @llvm.dbg.value(metadata i1 %25, metadata !4289, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4344
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4355
  %27 = load i8, i8* %26, align 1, !dbg !4355
  %28 = zext i8 %27 to i32, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %28, metadata !4286, metadata !DIExpression()), !dbg !4344
  %29 = icmp ne i8 %27, 0, !dbg !4357
  %30 = and i32 %4, 2, !dbg !4358
  %31 = icmp ne i32 %30, 0, !dbg !4358
  %32 = and i1 %31, %29, !dbg !4358
  call void @llvm.dbg.value(metadata i1 %32, metadata !4288, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4344
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4359
  br i1 %33, label %38, label %34, !dbg !4359

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4361
  br i1 %35, label %267, label %36, !dbg !4364

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #28, !dbg !4365
  br label %267, !dbg !4367

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4368
  %40 = zext i8 %39 to i32, !dbg !4369
  %41 = shl nuw nsw i32 %40, 2, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %41, metadata !4284, metadata !DIExpression()), !dbg !4344
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4371
  %43 = bitcast i8* %42 to i8**, !dbg !4372
  %44 = load i8*, i8** %43, align 4, !dbg !4372
  call void @llvm.dbg.value(metadata i8* %44, metadata !4293, metadata !DIExpression()), !dbg !4344
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %45, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4295, metadata !DIExpression()), !dbg !4344
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4374
  br i1 %46, label %47, label %132, !dbg !4375

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4292, metadata !DIExpression()), !dbg !4344
  br i1 %25, label %48, label %73, !dbg !4376

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %45, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4295, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4296, metadata !DIExpression()), !dbg !4377
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4378

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %52, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %53, metadata !4295, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %54, metadata !4296, metadata !DIExpression()), !dbg !4377
  %55 = load i8, i8* %52, align 1, !dbg !4379
  %56 = zext i8 %55 to i32, !dbg !4380
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4380
  %58 = bitcast i32* %57 to i8**, !dbg !4381
  %59 = load i8*, i8** %58, align 4, !dbg !4381
  call void @llvm.dbg.value(metadata i8* %59, metadata !4302, metadata !DIExpression()), !dbg !4382
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #27, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %60, metadata !4305, metadata !DIExpression()), !dbg !4382
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4384
  br i1 %62, label %63, label %67, !dbg !4384

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4386
  %65 = add nuw i32 %53, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %65, metadata !4295, metadata !DIExpression()), !dbg !4344
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4389
  store i16 %64, i16* %66, align 2, !dbg !4390
  br label %67, !dbg !4391

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4344
  call void @llvm.dbg.value(metadata i32 %68, metadata !4295, metadata !DIExpression()), !dbg !4344
  %69 = add nsw i32 %60, %51, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %69, metadata !4292, metadata !DIExpression()), !dbg !4344
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4393
  call void @llvm.dbg.value(metadata i8* %70, metadata !4294, metadata !DIExpression()), !dbg !4344
  %71 = add nuw nsw i32 %54, 1, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %71, metadata !4296, metadata !DIExpression()), !dbg !4377
  %72 = icmp eq i32 %71, %21, !dbg !4395
  br i1 %72, label %79, label %50, !dbg !4378, !llvm.loop !4396

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4398
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4398
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4398
  br label %79, !dbg !4398

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4401
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4344
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4402
  call void @llvm.dbg.value(metadata i1 undef, metadata !4306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4403
  call void @llvm.dbg.value(metadata i32 0, metadata !4307, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i32 %82, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %81, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %80, metadata !4295, metadata !DIExpression()), !dbg !4344
  %83 = icmp eq i8 %27, 0, !dbg !4405
  br i1 %83, label %267, label %84, !dbg !4406

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4407
  %86 = icmp eq i32 %85, 0, !dbg !4408
  call void @llvm.dbg.value(metadata i1 %86, metadata !4306, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4403
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4406

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8* %93, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %94, metadata !4295, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %95, metadata !4307, metadata !DIExpression()), !dbg !4404
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4409
  call void @llvm.dbg.value(metadata i8* %96, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 undef, metadata !4309, metadata !DIExpression()), !dbg !4410
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4411
  call void @llvm.dbg.value(metadata i8* %97, metadata !4294, metadata !DIExpression()), !dbg !4344
  %98 = load i8, i8* %96, align 1, !dbg !4412
  call void @llvm.dbg.value(metadata i8 %98, metadata !4312, metadata !DIExpression()), !dbg !4410
  %99 = zext i8 %98 to i32, !dbg !4413
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4413
  %101 = bitcast i32* %100 to i8**, !dbg !4414
  %102 = load i8*, i8** %101, align 4, !dbg !4414
  call void @llvm.dbg.value(metadata i8* %102, metadata !4313, metadata !DIExpression()), !dbg !4410
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #27, !dbg !4415
  call void @llvm.dbg.value(metadata i1 %103, metadata !4314, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4410
  br i1 %13, label %110, label %104, !dbg !4416

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4418
  call void @llvm.dbg.value(metadata i8 %105, metadata !4309, metadata !DIExpression()), !dbg !4410
  %106 = zext i8 %105 to i32, !dbg !4419
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #27, !dbg !4420
  br i1 %107, label %108, label %110, !dbg !4421

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #28, !dbg !4422
  %109 = add nsw i32 %92, -2, !dbg !4428
  call void @llvm.dbg.value(metadata i32 %109, metadata !4292, metadata !DIExpression()), !dbg !4344
  br label %127, !dbg !4429

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4430

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4431

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %113, metadata !4292, metadata !DIExpression()), !dbg !4344
  br label %127, !dbg !4436

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4437

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4340), !dbg !4438
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #27, !dbg !4439
  call void @llvm.dbg.value(metadata i32 %116, metadata !4315, metadata !DIExpression()), !dbg !4410
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4440
  br i1 %118, label %119, label %123, !dbg !4440

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4442
  %121 = add nuw i32 %94, 1, !dbg !4444
  call void @llvm.dbg.value(metadata i32 %121, metadata !4295, metadata !DIExpression()), !dbg !4344
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4445
  store i16 %120, i16* %122, align 2, !dbg !4446
  br label %123, !dbg !4447

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4344
  call void @llvm.dbg.value(metadata i32 %124, metadata !4295, metadata !DIExpression()), !dbg !4344
  %125 = add i32 %92, -1, !dbg !4448
  %126 = add i32 %125, %116, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %126, metadata !4292, metadata !DIExpression()), !dbg !4344
  br label %127, !dbg !4450

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4344
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4410
  call void @llvm.dbg.value(metadata i32 %129, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %128, metadata !4295, metadata !DIExpression()), !dbg !4344
  %130 = add nuw nsw i32 %95, 1, !dbg !4451
  call void @llvm.dbg.value(metadata i8* %97, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %130, metadata !4307, metadata !DIExpression()), !dbg !4404
  %131 = icmp eq i32 %130, %28, !dbg !4405
  br i1 %131, label %267, label %91, !dbg !4406, !llvm.loop !4452

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4317, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4318, metadata !DIExpression()), !dbg !4455
  br i1 %25, label %133, label %135, !dbg !4456

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4319, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 0, metadata !4320, metadata !DIExpression()), !dbg !4344
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4457
  call void @llvm.dbg.value(metadata i8* %134, metadata !4321, metadata !DIExpression()), !dbg !4344
  br label %140, !dbg !4460

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4461
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4461

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4321, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 undef, metadata !4320, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 0, metadata !4319, metadata !DIExpression()), !dbg !4344
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #28, !dbg !4463
  br label %145, !dbg !4466

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4467
  call void @llvm.dbg.value(metadata i8* %148, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4323, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.value(metadata i8 %146, metadata !4320, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 %147, metadata !4319, metadata !DIExpression()), !dbg !4344
  %149 = icmp eq i8 %27, 0, !dbg !4469
  br i1 %149, label %150, label %152, !dbg !4470

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4471
  br label %157, !dbg !4470

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4470

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4471
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4472
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4473
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4344
  call void @llvm.dbg.value(metadata i8 undef, metadata !4316, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4344
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4474
  %163 = load i8, i8* %162, align 1, !dbg !4474
  %164 = zext i8 %159 to i32, !dbg !4475
  %165 = add i8 %163, %159, !dbg !4476
  call void @llvm.dbg.value(metadata i8 %165, metadata !4316, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4344
  %166 = icmp eq i32 %30, 0, !dbg !4477
  %167 = lshr i8 %160, 1, !dbg !4478
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4478
  call void @llvm.dbg.value(metadata i8 %168, metadata !4316, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4344
  %169 = icmp eq i32 %23, 0, !dbg !4479
  %170 = icmp eq i32 %158, 0, !dbg !4471
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4471
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4471
  call void @llvm.dbg.value(metadata i8 %172, metadata !4316, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4344
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4331, metadata !DIExpression()), !dbg !4480
  %173 = load i32, i32* %11, align 1, !dbg !4481
  store i8 %165, i8* %162, align 1, !dbg !4482
  store i8 %172, i8* %19, align 1, !dbg !4482
  store i8 %168, i8* %26, align 1, !dbg !4482
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #28, !dbg !4483
  call void @llvm.dbg.value(metadata i32 %174, metadata !4322, metadata !DIExpression()), !dbg !4344
  %175 = icmp slt i32 %174, 0, !dbg !4484
  br i1 %175, label %267, label %220, !dbg !4486

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %178, metadata !4323, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.value(metadata i8 %179, metadata !4320, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 %180, metadata !4319, metadata !DIExpression()), !dbg !4344
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4487
  call void @llvm.dbg.value(metadata i8* %181, metadata !4294, metadata !DIExpression()), !dbg !4344
  %182 = load i8, i8* %177, align 1, !dbg !4488
  call void @llvm.dbg.value(metadata i8 %182, metadata !4325, metadata !DIExpression()), !dbg !4489
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4490
  call void @llvm.dbg.value(metadata i8* %183, metadata !4294, metadata !DIExpression()), !dbg !4344
  %184 = load i8, i8* %181, align 1, !dbg !4491
  call void @llvm.dbg.value(metadata i8 %184, metadata !4328, metadata !DIExpression()), !dbg !4489
  %185 = zext i8 %184 to i32, !dbg !4492
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4492
  %187 = bitcast i32* %186 to i8**, !dbg !4493
  %188 = load i8*, i8** %187, align 4, !dbg !4493
  call void @llvm.dbg.value(metadata i8* %188, metadata !4329, metadata !DIExpression()), !dbg !4489
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #27, !dbg !4494
  call void @llvm.dbg.value(metadata i1 %189, metadata !4330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4489
  br i1 %13, label %193, label %190, !dbg !4495

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4497
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #27, !dbg !4498
  br i1 %192, label %215, label %193, !dbg !4499

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4500

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4501

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4504
  call void @llvm.dbg.value(metadata i8 %196, metadata !4319, metadata !DIExpression()), !dbg !4344
  br label %208, !dbg !4507

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4508

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4509
  call void @llvm.dbg.value(metadata i8 %199, metadata !4320, metadata !DIExpression()), !dbg !4344
  br label %208, !dbg !4512

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4513

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4515
  call void @llvm.dbg.value(metadata i8 %202, metadata !4319, metadata !DIExpression()), !dbg !4344
  br label %208, !dbg !4518

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4519
  call void @llvm.dbg.value(metadata i8 %204, metadata !4320, metadata !DIExpression()), !dbg !4344
  %205 = zext i8 %179 to i32, !dbg !4521
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4521
  store i8 %182, i8* %206, align 1, !dbg !4522
  %207 = add i8 %179, 2, !dbg !4523
  call void @llvm.dbg.value(metadata i8 %207, metadata !4320, metadata !DIExpression()), !dbg !4344
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4524
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4524
  store i8 %184, i8* %214, align 1, !dbg !4524
  br label %215, !dbg !4525

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4344
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4473
  call void @llvm.dbg.value(metadata i8 %217, metadata !4320, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i8 %216, metadata !4319, metadata !DIExpression()), !dbg !4344
  %218 = add nuw nsw i32 %178, 1, !dbg !4525
  call void @llvm.dbg.value(metadata i8* %183, metadata !4294, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %218, metadata !4323, metadata !DIExpression()), !dbg !4468
  %219 = icmp eq i32 %218, %28, !dbg !4469
  br i1 %219, label %157, label %176, !dbg !4470, !llvm.loop !4526

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4478
  call void @llvm.dbg.value(metadata i32 %174, metadata !4292, metadata !DIExpression()), !dbg !4344
  store i32 %173, i32* %11, align 1, !dbg !4528
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4529
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #28, !dbg !4530
  call void @llvm.dbg.value(metadata i32 %223, metadata !4322, metadata !DIExpression()), !dbg !4344
  %224 = icmp slt i32 %223, 0, !dbg !4531
  br i1 %224, label %267, label %225, !dbg !4533

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4292, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4344
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4534
  %228 = add nuw nsw i32 %41, %21, !dbg !4534
  %229 = sub i32 %227, %228, !dbg !4534
  call void @llvm.dbg.value(metadata i32 %229, metadata !4332, metadata !DIExpression()), !dbg !4344
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #28, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %230, metadata !4322, metadata !DIExpression()), !dbg !4344
  %231 = icmp slt i32 %230, 0, !dbg !4536
  br i1 %231, label %267, label %232, !dbg !4538

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4539
  call void @llvm.dbg.value(metadata i32 %233, metadata !4292, metadata !DIExpression()), !dbg !4344
  %234 = add nuw nsw i32 %233, %230, !dbg !4540
  call void @llvm.dbg.value(metadata i32 %234, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4333, metadata !DIExpression()), !dbg !4541
  %235 = icmp eq i8 %159, 0, !dbg !4542
  br i1 %235, label %264, label %236, !dbg !4543

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4543

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4333, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 %240, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4544
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4545
  %242 = load i8, i8* %241, align 1, !dbg !4545
  call void @llvm.dbg.value(metadata i8 %242, metadata !4335, metadata !DIExpression()), !dbg !4546
  store i8 %242, i8* %10, align 1, !dbg !4547
  %243 = zext i8 %242 to i32, !dbg !4548
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4548
  %245 = bitcast i32* %244 to i8**, !dbg !4549
  %246 = load i8*, i8** %245, align 4, !dbg !4549
  call void @llvm.dbg.value(metadata i8* %246, metadata !4338, metadata !DIExpression()), !dbg !4546
  br i1 %237, label %250, label %247, !dbg !4550

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4551
  %249 = load i16, i16* %248, align 2, !dbg !4551
  br label %250, !dbg !4550

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4550
  call void @llvm.dbg.value(metadata i32 undef, metadata !4339, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4546
  call void @llvm.dbg.value(metadata i8* %10, metadata !4335, metadata !DIExpression(DW_OP_deref)), !dbg !4546
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #28, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %252, metadata !4322, metadata !DIExpression()), !dbg !4344
  %253 = icmp slt i32 %252, 0, !dbg !4553
  br i1 %253, label %257, label %254, !dbg !4555

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4339, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4292, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4344
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #27, !dbg !4556
  call void @llvm.dbg.value(metadata i32 %255, metadata !4322, metadata !DIExpression()), !dbg !4344
  %256 = icmp slt i32 %255, 0, !dbg !4557
  br i1 %256, label %257, label %259, !dbg !4559

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4560
  call void @llvm.dbg.value(metadata i32 undef, metadata !4292, metadata !DIExpression()), !dbg !4344
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %260, metadata !4292, metadata !DIExpression()), !dbg !4344
  %261 = add nsw i32 %260, %255, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %261, metadata !4292, metadata !DIExpression()), !dbg !4344
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4560
  %262 = add nuw nsw i32 %239, 1, !dbg !4563
  call void @llvm.dbg.value(metadata i32 %262, metadata !4333, metadata !DIExpression()), !dbg !4541
  %263 = icmp eq i32 %262, %164, !dbg !4542
  br i1 %263, label %264, label %238, !dbg !4543, !llvm.loop !4564

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4540
  call void @llvm.dbg.value(metadata i32 %265, metadata !4292, metadata !DIExpression()), !dbg !4344
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #28, !dbg !4566
  br label %267, !dbg !4567

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4344
  ret i32 %268, !dbg !4568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4569 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4573, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i8* %0, metadata !4574, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i8* %0, metadata !4575, metadata !DIExpression()), !dbg !4581
  %2 = load i8, i8* %0, align 1, !dbg !4582
  %3 = zext i8 %2 to i32, !dbg !4582
  %4 = shl nuw nsw i32 %3, 2, !dbg !4583
  call void @llvm.dbg.value(metadata i32 %4, metadata !4576, metadata !DIExpression()), !dbg !4581
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4584
  %6 = load i8, i8* %5, align 1, !dbg !4584
  %7 = zext i8 %6 to i32, !dbg !4584
  call void @llvm.dbg.value(metadata i32 %7, metadata !4577, metadata !DIExpression()), !dbg !4581
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4585
  %9 = load i8, i8* %8, align 1, !dbg !4585
  %10 = zext i8 %9 to i32, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %10, metadata !4578, metadata !DIExpression()), !dbg !4581
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4586
  call void @llvm.dbg.value(metadata i8* %11, metadata !4574, metadata !DIExpression()), !dbg !4581
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4587
  call void @llvm.dbg.value(metadata i8* %12, metadata !4574, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i32 0, metadata !4579, metadata !DIExpression()), !dbg !4588
  %13 = icmp eq i8 %6, 0, !dbg !4589
  br i1 %13, label %14, label %19, !dbg !4591

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4581
  %16 = ptrtoint i8* %15 to i32, !dbg !4592
  %17 = ptrtoint i8* %0 to i32, !dbg !4592
  %18 = sub i32 %16, %17, !dbg !4592
  ret i32 %18, !dbg !4593

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4579, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata i8* %21, metadata !4574, metadata !DIExpression()), !dbg !4581
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4594
  call void @llvm.dbg.value(metadata i8* %22, metadata !4574, metadata !DIExpression()), !dbg !4581
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #28, !dbg !4596
  %24 = add i32 %23, 1, !dbg !4597
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4598
  call void @llvm.dbg.value(metadata i8* %25, metadata !4574, metadata !DIExpression()), !dbg !4581
  %26 = add nuw nsw i32 %20, 1, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %26, metadata !4579, metadata !DIExpression()), !dbg !4588
  %27 = icmp eq i32 %26, %7, !dbg !4589
  br i1 %27, label %14, label %19, !dbg !4591, !llvm.loop !4600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4602 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4606, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8* %1, metadata !4607, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i8* %2, metadata !4608, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata i16 %3, metadata !4609, metadata !DIExpression()), !dbg !4610
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4611
  br i1 %5, label %6, label %9, !dbg !4613

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #28, !dbg !4614
  %8 = add i32 %7, 1, !dbg !4616
  br label %20, !dbg !4617

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4618
  br i1 %10, label %13, label %11, !dbg !4619

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4619
  br label %16, !dbg !4619

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #28, !dbg !4620
  %15 = add i32 %14, 1, !dbg !4621
  br label %16, !dbg !4619

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4619
  %18 = and i32 %17, 65535, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %17, metadata !4609, metadata !DIExpression()), !dbg !4610
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #28, !dbg !4623
  br label %20, !dbg !4624

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4610
  ret i32 %21, !dbg !4625
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4628, metadata !DIExpression()), !dbg !4629
  ret i32 0, !dbg !4630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4631 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4635, metadata !DIExpression()), !dbg !4636
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4637
  ret void, !dbg !4638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #3 !dbg !4639 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4642
  ret i8* %1, !dbg !4643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4644 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4655, metadata !DIExpression()), !dbg !4664
  call void @llvm.dbg.value(metadata i8* %0, metadata !4654, metadata !DIExpression()), !dbg !4664
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !4665
  ret void, !dbg !4667
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4672, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.value(metadata i8* %1, metadata !4673, metadata !DIExpression()), !dbg !4674
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4675
  %4 = tail call i32 %3(i32 noundef %0) #28, !dbg !4675
  ret i32 %4, !dbg !4676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4677 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4684, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4681, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata i8* %1, metadata !4682, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.value(metadata i8* %2, metadata !4683, metadata !DIExpression()), !dbg !4685
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #28, !dbg !4686
  ret void, !dbg !4687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4688 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4692, metadata !DIExpression()), !dbg !4695
  call void @llvm.dbg.value(metadata i32 %1, metadata !4693, metadata !DIExpression()), !dbg !4695
  call void @llvm.dbg.value(metadata i32 0, metadata !4694, metadata !DIExpression()), !dbg !4695
  %3 = icmp eq i32 %1, 0, !dbg !4696
  br i1 %3, label %13, label %4, !dbg !4699

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4694, metadata !DIExpression()), !dbg !4695
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4700
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4702
  %8 = load i8, i8* %7, align 1, !dbg !4702
  %9 = zext i8 %8 to i32, !dbg !4702
  %10 = tail call i32 %6(i32 noundef %9) #28, !dbg !4700
  %11 = add nuw i32 %5, 1, !dbg !4703
  call void @llvm.dbg.value(metadata i32 %11, metadata !4694, metadata !DIExpression()), !dbg !4695
  %12 = icmp eq i32 %11, %1, !dbg !4696
  br i1 %12, label %13, label %4, !dbg !4699, !llvm.loop !4704

13:                                               ; preds = %4, %2
  ret void, !dbg !4706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4707 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4711, metadata !DIExpression()), !dbg !4713
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4714
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4714
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4712, metadata !DIExpression()), !dbg !4715
  call void @llvm.va_start(i8* nonnull %3), !dbg !4716
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4717
  %5 = load i32, i32* %4, align 4, !dbg !4717
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4717
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !4717
  call void @llvm.va_end(i8* nonnull %3), !dbg !4718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4719
  ret void, !dbg !4719
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4720 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4724, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %1, metadata !4725, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %2, metadata !4726, metadata !DIExpression()), !dbg !4729
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4730
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4730
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4727, metadata !DIExpression()), !dbg !4731
  call void @llvm.va_start(i8* nonnull %5), !dbg !4732
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4733
  %7 = load i32, i32* %6, align 4, !dbg !4733
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4733
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %9, metadata !4728, metadata !DIExpression()), !dbg !4729
  call void @llvm.va_end(i8* nonnull %5), !dbg !4734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4735
  ret i32 %9, !dbg !4736
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4737 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4744, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata i8* %0, metadata !4741, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata i32 %1, metadata !4742, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata i8* %2, metadata !4743, metadata !DIExpression()), !dbg !4751
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4752
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !4752
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4745, metadata !DIExpression()), !dbg !4753
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4754
  store i8* %0, i8** %7, align 4, !dbg !4754
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4754
  store i32 %1, i32* %8, align 4, !dbg !4754
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4754
  store i32 0, i32* %9, align 4, !dbg !4754
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !4755
  %10 = load i32, i32* %9, align 4, !dbg !4756
  %11 = load i32, i32* %8, align 4, !dbg !4758
  %12 = icmp slt i32 %10, %11, !dbg !4759
  br i1 %12, label %13, label %15, !dbg !4760

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4761
  store i8 0, i8* %14, align 1, !dbg !4763
  br label %15, !dbg !4764

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !4765
  ret i32 %10, !dbg !4766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !4767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4772, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4773, metadata !DIExpression()), !dbg !4774
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4775
  %4 = load i8*, i8** %3, align 4, !dbg !4775
  %5 = icmp eq i8* %4, null, !dbg !4777
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4778
  br i1 %5, label %12, label %8, !dbg !4779

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4780
  %10 = load i32, i32* %9, align 4, !dbg !4780
  %11 = icmp slt i32 %7, %10, !dbg !4781
  br i1 %11, label %15, label %12, !dbg !4782

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4783
  %14 = add nsw i32 %7, 1, !dbg !4785
  store i32 %14, i32* %13, align 4, !dbg !4785
  br label %25, !dbg !4786

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4787
  %17 = icmp eq i32 %7, %16, !dbg !4789
  br i1 %17, label %18, label %21, !dbg !4790

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4791
  store i32 %19, i32* %6, align 4, !dbg !4791
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4793
  store i8 0, i8* %20, align 1, !dbg !4794
  br label %25, !dbg !4795

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4796
  %23 = add nsw i32 %7, 1, !dbg !4798
  store i32 %23, i32* %6, align 4, !dbg !4798
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4799
  store i8 %22, i8* %24, align 1, !dbg !4800
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4801
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #11 !dbg !4802 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4807, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.value(metadata i8* %1, metadata !4808, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.value(metadata i8* %2, metadata !4809, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.value(metadata i8* %3, metadata !4810, metadata !DIExpression()), !dbg !4811
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !4812
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !4813
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !4814
  unreachable, !dbg !4815
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !4816 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !4920
  ret %struct.k_thread* %1, !dbg !4921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4922 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4926, metadata !DIExpression()), !dbg !4927
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4928, !srcloc !4930
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !4931
  ret void, !dbg !4932
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !4933 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !4934, !srcloc !4936
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #28, !dbg !4937
  ret %struct.k_thread* %1, !dbg !4938
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !4939 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4950, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.value(metadata i8* %1, metadata !4951, metadata !DIExpression()), !dbg !4954
  %3 = icmp eq i8* %1, null, !dbg !4955
  br i1 %3, label %8, label %4, !dbg !4957

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4958
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4958
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4952, metadata !DIExpression()), !dbg !4954
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4959, !range !4960
  call void @llvm.dbg.value(metadata i32 %7, metadata !4953, metadata !DIExpression()), !dbg !4954
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !4961
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !4962
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4964 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4968, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %1, metadata !4969, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.value(metadata i8* %1, metadata !4970, metadata !DIExpression()), !dbg !4972
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4973
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4971, metadata !DIExpression()), !dbg !4972
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4974
  %5 = ptrtoint i8* %4 to i32, !dbg !4975
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4975
  %7 = sub i32 %5, %6, !dbg !4975
  %8 = lshr i32 %7, 3, !dbg !4976
  ret i32 %8, !dbg !4977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #10 !dbg !4978 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4982, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i32 %1, metadata !4983, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata i1 %2, metadata !4984, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4987
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4988
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4985, metadata !DIExpression()), !dbg !4987
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4987
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4989
  %6 = bitcast i8* %5 to i16*, !dbg !4989
  %7 = load i16, i16* %6, align 2, !dbg !4989
  %8 = and i16 %7, -2, !dbg !4993
  %9 = zext i1 %2 to i16, !dbg !4993
  %10 = or i16 %8, %9, !dbg !4993
  store i16 %10, i16* %6, align 2, !dbg !4989
  ret void, !dbg !4994
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4995 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4999, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.value(metadata i32 %1, metadata !5000, metadata !DIExpression()), !dbg !5001
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5002
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5004
  br i1 %4, label %7, label %5, !dbg !5005

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5006
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5008
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5009
  br label %7, !dbg !5010

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5011, !range !5013
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5014
  br i1 %9, label %13, label %10, !dbg !5015

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5016
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5018, !range !5013
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !5019
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %12, metadata !5000, metadata !DIExpression()), !dbg !5001
  br label %13, !dbg !5021

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5000, metadata !DIExpression()), !dbg !5001
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !5022
  ret void, !dbg !5023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5024 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i32 %1, metadata !5029, metadata !DIExpression()), !dbg !5030
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5031
  %4 = add i32 %3, %1, !dbg !5032
  ret i32 %4, !dbg !5033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5034 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5038, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i32 %1, metadata !5039, metadata !DIExpression()), !dbg !5040
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5041
  %4 = and i32 %3, 1, !dbg !5042
  %5 = icmp ne i32 %4, 0, !dbg !5041
  ret i1 %5, !dbg !5043
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5044 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5046, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata i32 %1, metadata !5047, metadata !DIExpression()), !dbg !5051
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5052, !range !5053
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5054
  call void @llvm.dbg.value(metadata i32 %4, metadata !5048, metadata !DIExpression()), !dbg !5055
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5056
  ret void, !dbg !5057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5058 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5062, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 %1, metadata !5063, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i32 %2, metadata !5064, metadata !DIExpression()), !dbg !5067
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5068
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5069
  %6 = add i32 %5, %4, !dbg !5070
  call void @llvm.dbg.value(metadata i32 %6, metadata !5065, metadata !DIExpression()), !dbg !5067
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5071
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5072
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5073
  ret void, !dbg !5074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5075 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5077, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i32 %1, metadata !5078, metadata !DIExpression()), !dbg !5079
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5080
  %4 = sub i32 %1, %3, !dbg !5081
  ret i32 %4, !dbg !5082
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5083 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5085, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %1, metadata !5086, metadata !DIExpression()), !dbg !5090
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5091, !range !5053
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5092
  call void @llvm.dbg.value(metadata i32 %4, metadata !5087, metadata !DIExpression()), !dbg !5093
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5094
  ret void, !dbg !5095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !5096 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5100, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.value(metadata i32 %1, metadata !5101, metadata !DIExpression()), !dbg !5102
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5103
  %4 = lshr i32 %3, 1, !dbg !5104
  ret i32 %4, !dbg !5105
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #12 !dbg !5106 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5110, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i32 %1, metadata !5111, metadata !DIExpression()), !dbg !5113
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5114
  %4 = add i32 %1, 1, !dbg !5115
  %5 = sub i32 %4, %3, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %5, metadata !5112, metadata !DIExpression()), !dbg !5113
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5117, !range !5118
  %7 = sub nsw i32 31, %6, !dbg !5119
  ret i32 %7, !dbg !5120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5121 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5125, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %1, metadata !5126, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %2, metadata !5127, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5128, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5134
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5135
  %5 = load i32, i32* %4, align 4, !dbg !5135
  %6 = icmp eq i32 %5, 0, !dbg !5136
  br i1 %6, label %7, label %12, !dbg !5137

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5138
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5140
  %10 = load i32, i32* %9, align 4, !dbg !5141
  %11 = or i32 %10, %8, !dbg !5141
  store i32 %11, i32* %9, align 4, !dbg !5141
  store i32 %1, i32* %4, align 4, !dbg !5142
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5143
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5144
  br label %14, !dbg !5145

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5130, metadata !DIExpression()), !dbg !5146
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5147, !range !5148
  call void @llvm.dbg.value(metadata i32 %13, metadata !5133, metadata !DIExpression()), !dbg !5146
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5149
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5150
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5151
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5152
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5154 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5156, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 %1, metadata !5157, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 %2, metadata !5158, metadata !DIExpression()), !dbg !5159
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5160
  ret void, !dbg !5161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5162 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5164, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i32 %1, metadata !5165, metadata !DIExpression()), !dbg !5167
  call void @llvm.dbg.value(metadata i32 %2, metadata !5166, metadata !DIExpression()), !dbg !5167
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5168
  ret void, !dbg !5169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5170 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5172, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i32 %1, metadata !5173, metadata !DIExpression()), !dbg !5174
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5175
  ret i32 %3, !dbg !5176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !5177 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5181, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata i32 %1, metadata !5182, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata i32 %2, metadata !5183, metadata !DIExpression()), !dbg !5186
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5187
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5184, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5185, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5186
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5185, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5186
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5188
  call void @llvm.dbg.value(metadata i8* %5, metadata !5185, metadata !DIExpression()), !dbg !5186
  %6 = bitcast i8* %5 to i16*, !dbg !5189
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5192
  %8 = load i16, i16* %7, align 2, !dbg !5192
  %9 = zext i16 %8 to i32, !dbg !5192
  ret i32 %9, !dbg !5193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5194 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5198, metadata !DIExpression()), !dbg !5199
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5200
  ret %struct.chunk_unit_t* %2, !dbg !5201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !5202 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5206, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i32 %1, metadata !5207, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i32 %2, metadata !5208, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata i32 %3, metadata !5209, metadata !DIExpression()), !dbg !5212
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5213
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5210, metadata !DIExpression()), !dbg !5212
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5211, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5212
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %6, metadata !5211, metadata !DIExpression()), !dbg !5212
  %7 = trunc i32 %3 to i16, !dbg !5215
  %8 = bitcast i8* %6 to i16*, !dbg !5218
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5219
  store i16 %7, i16* %9, align 2, !dbg !5220
  ret void, !dbg !5221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5222 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5226, metadata !DIExpression()), !dbg !5227
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !5228
  ret i32 %2, !dbg !5229
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5230 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5234, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i32 %1, metadata !5235, metadata !DIExpression()), !dbg !5236
  %3 = add i32 %1, 4, !dbg !5237
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !5238
  ret i32 %4, !dbg !5239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5244, metadata !DIExpression()), !dbg !5245
  %2 = add i32 %0, 7, !dbg !5246
  %3 = lshr i32 %2, 3, !dbg !5247
  ret i32 %3, !dbg !5248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5249 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5253, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.value(metadata i32 %1, metadata !5254, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.value(metadata i32 %2, metadata !5255, metadata !DIExpression()), !dbg !5256
  %4 = shl i32 %2, 1, !dbg !5257
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !5258
  ret void, !dbg !5259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5260 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5262, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i32 %1, metadata !5263, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i32 %2, metadata !5264, metadata !DIExpression()), !dbg !5265
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !5266
  ret void, !dbg !5267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5268 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5270, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %1, metadata !5271, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i32 %2, metadata !5272, metadata !DIExpression()), !dbg !5278
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5279
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5273, metadata !DIExpression()), !dbg !5278
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5280
  %6 = icmp eq i32 %5, %1, !dbg !5281
  br i1 %6, label %7, label %14, !dbg !5282

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5283
  %9 = xor i32 %8, -1, !dbg !5285
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5286
  %11 = load i32, i32* %10, align 4, !dbg !5287
  %12 = and i32 %11, %9, !dbg !5287
  store i32 %12, i32* %10, align 4, !dbg !5287
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5288
  store i32 0, i32* %13, align 4, !dbg !5289
  br label %17, !dbg !5290

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5291
  call void @llvm.dbg.value(metadata i32 %15, metadata !5274, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i32 %5, metadata !5277, metadata !DIExpression()), !dbg !5292
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5293
  store i32 %5, i32* %16, align 4, !dbg !5294
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !5295
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !5296
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5298 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5300, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.value(metadata i32 %1, metadata !5301, metadata !DIExpression()), !dbg !5302
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !5303
  ret i32 %3, !dbg !5304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #3 !dbg !5305 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5309, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8* %1, metadata !5310, metadata !DIExpression()), !dbg !5316
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5317
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5317
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5311, metadata !DIExpression()), !dbg !5316
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !5318
  call void @llvm.dbg.value(metadata i32 %5, metadata !5312, metadata !DIExpression()), !dbg !5316
  %6 = ptrtoint i8* %1 to i32, !dbg !5319
  call void @llvm.dbg.value(metadata i32 %6, metadata !5313, metadata !DIExpression()), !dbg !5316
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !5320
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5320
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5321
  call void @llvm.dbg.value(metadata i32 %9, metadata !5314, metadata !DIExpression()), !dbg !5316
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !5322
  %11 = shl i32 %10, 3, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %11, metadata !5315, metadata !DIExpression()), !dbg !5316
  %12 = sub i32 %9, %6, !dbg !5324
  %13 = add i32 %12, %11, !dbg !5325
  ret i32 %13, !dbg !5326
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #14 !dbg !5327 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5331, metadata !DIExpression()), !dbg !5337
  call void @llvm.dbg.value(metadata i32 %1, metadata !5332, metadata !DIExpression()), !dbg !5337
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5338
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5338
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5333, metadata !DIExpression()), !dbg !5337
  %5 = icmp eq i32 %1, 0, !dbg !5339
  br i1 %5, label %19, label %6, !dbg !5341

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5342
  br i1 %7, label %19, label %8, !dbg !5343

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5344, !range !4960
  call void @llvm.dbg.value(metadata i32 %9, metadata !5335, metadata !DIExpression()), !dbg !5337
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %10, metadata !5336, metadata !DIExpression()), !dbg !5337
  %11 = icmp eq i32 %10, 0, !dbg !5346
  br i1 %11, label %19, label %12, !dbg !5348

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5349
  %14 = icmp ugt i32 %13, %9, !dbg !5351
  br i1 %14, label %15, label %17, !dbg !5352

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5353
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !5355
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !5356
  br label %17, !dbg !5357

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !5358
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5359
  call void @llvm.dbg.value(metadata i8* %18, metadata !5334, metadata !DIExpression()), !dbg !5337
  br label %19, !dbg !5360

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5337
  ret i8* %20, !dbg !5361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #3 !dbg !5362 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5366, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %1, metadata !5367, metadata !DIExpression()), !dbg !5368
  %3 = lshr i32 %1, 3, !dbg !5369
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5370
  %5 = load i32, i32* %4, align 4, !dbg !5370
  %6 = icmp uge i32 %3, %5, !dbg !5371
  ret i1 %6, !dbg !5372
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5373 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5377, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 %1, metadata !5378, metadata !DIExpression()), !dbg !5392
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5393
  call void @llvm.dbg.value(metadata i32 %3, metadata !5379, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5380, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5392
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5394
  %5 = load i32, i32* %4, align 4, !dbg !5394
  %6 = icmp eq i32 %5, 0, !dbg !5395
  br i1 %6, label %19, label %7, !dbg !5396

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5397
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5398
  call void @llvm.dbg.value(metadata i32 %9, metadata !5384, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i32 %8, metadata !5385, metadata !DIExpression()), !dbg !5399
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5400
  %11 = icmp ult i32 %10, %1, !dbg !5402
  br i1 %11, label %13, label %12, !dbg !5403

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !5404
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5406
  store i32 %14, i32* %4, align 4, !dbg !5407
  %15 = add nsw i32 %9, -1, !dbg !5408
  call void @llvm.dbg.value(metadata i32 %15, metadata !5384, metadata !DIExpression()), !dbg !5398
  %16 = icmp eq i32 %15, 0, !dbg !5408
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5409
  br i1 %18, label %19, label %7, !dbg !5409, !llvm.loop !5410

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5413
  %21 = load i32, i32* %20, align 4, !dbg !5413
  %22 = add nsw i32 %3, 1, !dbg !5414
  %23 = shl nsw i32 -1, %22, !dbg !5414
  %24 = and i32 %21, %23, !dbg !5415
  call void @llvm.dbg.value(metadata i32 %24, metadata !5387, metadata !DIExpression()), !dbg !5392
  %25 = icmp eq i32 %24, 0, !dbg !5416
  br i1 %25, label %30, label %26, !dbg !5417

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5418, !range !5118
  call void @llvm.dbg.value(metadata i32 %27, metadata !5388, metadata !DIExpression()), !dbg !5419
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5420
  %29 = load i32, i32* %28, align 4, !dbg !5420
  call void @llvm.dbg.value(metadata i32 %29, metadata !5391, metadata !DIExpression()), !dbg !5419
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !5421
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5392
  ret i32 %31, !dbg !5422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5423 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5425, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 %1, metadata !5426, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.value(metadata i32 %2, metadata !5427, metadata !DIExpression()), !dbg !5431
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5432
  call void @llvm.dbg.value(metadata i32 %4, metadata !5428, metadata !DIExpression()), !dbg !5431
  %5 = sub i32 %2, %1, !dbg !5433
  call void @llvm.dbg.value(metadata i32 %5, metadata !5429, metadata !DIExpression()), !dbg !5431
  %6 = sub i32 %4, %5, !dbg !5434
  call void @llvm.dbg.value(metadata i32 %6, metadata !5430, metadata !DIExpression()), !dbg !5431
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5435
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !5436
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !5437
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5438
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5439
  ret void, !dbg !5440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5441 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5445, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %1, metadata !5446, metadata !DIExpression()), !dbg !5449
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5450
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5447, metadata !DIExpression()), !dbg !5449
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5451
  call void @llvm.dbg.value(metadata i8* %4, metadata !5448, metadata !DIExpression()), !dbg !5449
  ret i8* %4, !dbg !5452
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !5453 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5457, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata i32 %1, metadata !5458, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata i32 %2, metadata !5459, metadata !DIExpression()), !dbg !5469
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5470
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5470
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5460, metadata !DIExpression()), !dbg !5469
  %6 = sub i32 0, %1, !dbg !5471
  %7 = and i32 %6, %1, !dbg !5472
  call void @llvm.dbg.value(metadata i32 %7, metadata !5462, metadata !DIExpression()), !dbg !5469
  %8 = icmp eq i32 %7, %1, !dbg !5473
  br i1 %8, label %13, label %9, !dbg !5475

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5476
  call void @llvm.dbg.value(metadata i32 %10, metadata !5458, metadata !DIExpression()), !dbg !5469
  %11 = icmp ult i32 %7, 4, !dbg !5478
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5478
  br label %17, !dbg !5478

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5479
  br i1 %14, label %15, label %17, !dbg !5482

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !5483
  br label %57, !dbg !5485

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5469
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5486
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5458, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata i32 %19, metadata !5461, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.value(metadata i32 %18, metadata !5462, metadata !DIExpression()), !dbg !5469
  %21 = icmp eq i32 %2, 0, !dbg !5487
  br i1 %21, label %57, label %22, !dbg !5489

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !5490
  br i1 %23, label %57, label %24, !dbg !5491

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5492
  %26 = add i32 %25, %20, !dbg !5493
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !5494, !range !4960
  call void @llvm.dbg.value(metadata i32 %27, metadata !5463, metadata !DIExpression()), !dbg !5469
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %28, metadata !5464, metadata !DIExpression()), !dbg !5469
  %29 = icmp eq i32 %28, 0, !dbg !5496
  br i1 %29, label %57, label %30, !dbg !5498

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !5499
  call void @llvm.dbg.value(metadata i8* %31, metadata !5465, metadata !DIExpression()), !dbg !5469
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5500
  %33 = ptrtoint i8* %32 to i32, !dbg !5500
  %34 = add i32 %20, -1, !dbg !5500
  %35 = add i32 %34, %33, !dbg !5500
  %36 = sub i32 0, %20, !dbg !5500
  %37 = and i32 %35, %36, !dbg !5500
  %38 = inttoptr i32 %37 to i8*, !dbg !5501
  %39 = sub i32 0, %18, !dbg !5502
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5502
  call void @llvm.dbg.value(metadata i8* %40, metadata !5465, metadata !DIExpression()), !dbg !5469
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5503
  %42 = ptrtoint i8* %41 to i32, !dbg !5503
  %43 = add i32 %42, 7, !dbg !5503
  %44 = and i32 %43, -8, !dbg !5503
  call void @llvm.dbg.value(metadata i32 %44, metadata !5466, metadata !DIExpression()), !dbg !5469
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !5504
  call void @llvm.dbg.value(metadata i32 %45, metadata !5467, metadata !DIExpression()), !dbg !5469
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !5505
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5506
  %48 = sub i32 %44, %47, !dbg !5506
  %49 = ashr exact i32 %48, 3, !dbg !5506
  call void @llvm.dbg.value(metadata i32 %49, metadata !5468, metadata !DIExpression()), !dbg !5469
  %50 = icmp ugt i32 %45, %28, !dbg !5507
  br i1 %50, label %51, label %52, !dbg !5509

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !5510
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !5512
  br label %52, !dbg !5513

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !5514
  %54 = icmp ugt i32 %53, %49, !dbg !5516
  br i1 %54, label %55, label %56, !dbg !5517

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !5518
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !5520
  br label %56, !dbg !5521

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !5522
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5469
  ret i8* %58, !dbg !5523
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5524 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5528, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.value(metadata i8* %1, metadata !5529, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.value(metadata i32 %2, metadata !5530, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.value(metadata i32 %3, metadata !5531, metadata !DIExpression()), !dbg !5547
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5548
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5548
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5532, metadata !DIExpression()), !dbg !5547
  %7 = icmp eq i8* %1, null, !dbg !5549
  br i1 %7, label %8, label %10, !dbg !5551

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5552
  br label %59, !dbg !5554

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5555
  br i1 %11, label %12, label %13, !dbg !5557

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5558
  br label %59, !dbg !5560

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !5561
  br i1 %14, label %59, label %15, !dbg !5563

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5564, !range !4960
  call void @llvm.dbg.value(metadata i32 %16, metadata !5533, metadata !DIExpression()), !dbg !5547
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %17, metadata !5534, metadata !DIExpression()), !dbg !5547
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5566
  %19 = ptrtoint i8* %1 to i32, !dbg !5567
  %20 = ptrtoint i8* %18 to i32, !dbg !5567
  %21 = sub i32 %19, %20, !dbg !5567
  call void @llvm.dbg.value(metadata i32 %21, metadata !5535, metadata !DIExpression()), !dbg !5547
  %22 = add i32 %21, %3, !dbg !5568
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5569
  call void @llvm.dbg.value(metadata i32 %23, metadata !5536, metadata !DIExpression()), !dbg !5547
  %24 = icmp eq i32 %2, 0, !dbg !5570
  br i1 %24, label %29, label %25, !dbg !5571

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5572
  %27 = and i32 %26, %19, !dbg !5573
  %28 = icmp eq i32 %27, 0, !dbg !5573
  br i1 %28, label %29, label %49, !dbg !5574

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5575
  %31 = icmp eq i32 %23, %30, !dbg !5576
  br i1 %31, label %59, label %32, !dbg !5577

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5578
  br i1 %33, label %34, label %36, !dbg !5579

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5580
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !5582
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !5583
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !5584
  br label %59, !dbg !5585

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5586
  br i1 %37, label %49, label %38, !dbg !5587

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5588
  %40 = add i32 %39, %30, !dbg !5589
  %41 = icmp ult i32 %40, %23, !dbg !5590
  br i1 %41, label %49, label %42, !dbg !5591

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %43, metadata !5537, metadata !DIExpression()), !dbg !5593
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5594
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !5595
  %45 = icmp ult i32 %43, %44, !dbg !5597
  br i1 %45, label %46, label %48, !dbg !5598

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5599
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !5601
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !5602
  br label %48, !dbg !5603

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !5604
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !5605
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5606
  call void @llvm.dbg.value(metadata i8* %50, metadata !5543, metadata !DIExpression()), !dbg !5547
  %51 = icmp eq i8* %50, null, !dbg !5607
  br i1 %51, label %59, label %52, !dbg !5608

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !5609, !range !5053
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !5610
  %55 = sub i32 %54, %21, !dbg !5611
  call void @llvm.dbg.value(metadata i32 %55, metadata !5544, metadata !DIExpression()), !dbg !5612
  %56 = icmp ult i32 %55, %3, !dbg !5613
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5613
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #28, !dbg !5614
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5615
  br label %59, !dbg !5616

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5547
  ret i8* %60, !dbg !5617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5618 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5622, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata i32 %1, metadata !5623, metadata !DIExpression()), !dbg !5624
  %3 = shl i32 %1, 3, !dbg !5625
  %4 = add i32 %3, -4, !dbg !5626
  ret i32 %4, !dbg !5627
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !5628 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5632, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.value(metadata i8* %1, metadata !5633, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.value(metadata i32 %2, metadata !5634, metadata !DIExpression()), !dbg !5643
  %4 = add i32 %2, -4, !dbg !5644
  call void @llvm.dbg.value(metadata i32 %4, metadata !5634, metadata !DIExpression()), !dbg !5643
  %5 = ptrtoint i8* %1 to i32, !dbg !5645
  %6 = add i32 %5, 7, !dbg !5645
  %7 = and i32 %6, -8, !dbg !5645
  call void @llvm.dbg.value(metadata i32 %7, metadata !5635, metadata !DIExpression()), !dbg !5643
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5646
  %9 = ptrtoint i8* %8 to i32, !dbg !5646
  %10 = and i32 %9, -8, !dbg !5646
  call void @llvm.dbg.value(metadata i32 %10, metadata !5636, metadata !DIExpression()), !dbg !5643
  %11 = sub i32 %10, %7, !dbg !5647
  %12 = lshr exact i32 %11, 3, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %12, metadata !5637, metadata !DIExpression()), !dbg !5643
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5649
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5638, metadata !DIExpression()), !dbg !5643
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5650
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5651
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5652
  store i32 %12, i32* %15, align 8, !dbg !5653
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5654
  store i32 0, i32* %16, align 4, !dbg !5655
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %17, metadata !5639, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5643
  %18 = shl i32 %17, 2, !dbg !5657
  %19 = add i32 %18, 20, !dbg !5658
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %20, metadata !5640, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.value(metadata i32 0, metadata !5641, metadata !DIExpression()), !dbg !5660
  %21 = icmp slt i32 %17, 0, !dbg !5661
  br i1 %21, label %22, label %24, !dbg !5663

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !5664
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !5665
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !5666
  %23 = sub i32 %12, %20, !dbg !5667
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !5668
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !5669
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !5670
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !5671
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !5672
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !5673
  ret void, !dbg !5674

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5641, metadata !DIExpression()), !dbg !5660
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5675
  store i32 0, i32* %26, align 4, !dbg !5677
  %27 = add nuw i32 %25, 1, !dbg !5678
  call void @llvm.dbg.value(metadata i32 %27, metadata !5641, metadata !DIExpression()), !dbg !5660
  %28 = icmp eq i32 %25, %17, !dbg !5661
  br i1 %28, label %22, label %24, !dbg !5663, !llvm.loop !5679
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5681 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5694, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5691, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8* %1, metadata !5692, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8* %2, metadata !5693, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %4, metadata !5695, metadata !DIExpression()), !dbg !5820
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5821
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !5821
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5696, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i32 0, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i1 undef, metadata !5702, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5820
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5823

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5823

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5824
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5694, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8* %30, metadata !5693, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %29, metadata !5700, metadata !DIExpression()), !dbg !5820
  %31 = load i8, i8* %30, align 1, !dbg !5825
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5823

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5825
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5826
  call void @llvm.dbg.value(metadata i8* %34, metadata !5693, metadata !DIExpression()), !dbg !5820
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #28, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %35, metadata !5704, metadata !DIExpression()), !dbg !5827
  %36 = icmp slt i32 %35, 0, !dbg !5828
  %37 = add i32 %29, 1, !dbg !5826
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %36, label %365, label %28, !llvm.loop !5830

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5832
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5709, metadata !DIExpression()), !dbg !5833
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5833
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5752, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5755, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8* %30, metadata !5758, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 -1, metadata !5759, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 -1, metadata !5760, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8* null, metadata !5761, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8* %14, metadata !5762, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8 0, metadata !5763, metadata !DIExpression()), !dbg !5834
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !5835
  call void @llvm.dbg.value(metadata i8* %39, metadata !5693, metadata !DIExpression()), !dbg !5820
  %40 = load i24, i24* %15, align 8, !dbg !5836
  %41 = and i24 %40, 256, !dbg !5836
  %42 = icmp eq i24 %41, 0, !dbg !5836
  br i1 %42, label %51, label %43, !dbg !5838

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5839
  call void @llvm.dbg.value(metadata i8* %44, metadata !5694, metadata !DIExpression()), !dbg !5820
  %45 = bitcast i8* %27 to i32*, !dbg !5839
  %46 = load i32, i32* %45, align 4, !dbg !5839
  call void @llvm.dbg.value(metadata i32 %46, metadata !5759, metadata !DIExpression()), !dbg !5834
  %47 = icmp slt i32 %46, 0, !dbg !5841
  br i1 %47, label %48, label %56, !dbg !5843

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5844
  store i24 %49, i24* %15, align 8, !dbg !5844
  %50 = sub nsw i32 0, %46, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %50, metadata !5759, metadata !DIExpression()), !dbg !5834
  br label %56, !dbg !5847

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5848
  %53 = icmp eq i24 %52, 0, !dbg !5848
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5850
  br label %56, !dbg !5850

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5851
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5834
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5694, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %58, metadata !5759, metadata !DIExpression()), !dbg !5834
  %60 = and i24 %57, 1024, !dbg !5851
  %61 = icmp eq i24 %60, 0, !dbg !5851
  br i1 %61, label %69, label %62, !dbg !5852

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5853
  call void @llvm.dbg.value(metadata i8* %63, metadata !5694, metadata !DIExpression()), !dbg !5820
  %64 = bitcast i8* %59 to i32*, !dbg !5853
  %65 = load i32, i32* %64, align 4, !dbg !5853
  call void @llvm.dbg.value(metadata i32 %65, metadata !5764, metadata !DIExpression()), !dbg !5854
  %66 = icmp slt i32 %65, 0, !dbg !5855
  br i1 %66, label %67, label %74, !dbg !5857

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5858
  store i24 %68, i24* %15, align 8, !dbg !5858
  br label %74, !dbg !5860

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5861
  %71 = icmp eq i24 %70, 0, !dbg !5861
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5863
  br label %74, !dbg !5863

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5864
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5834
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5834
  call void @llvm.dbg.value(metadata i8* %77, metadata !5694, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %76, metadata !5760, metadata !DIExpression()), !dbg !5834
  store i32 0, i32* %16, align 4, !dbg !5865
  store i32 0, i32* %17, align 8, !dbg !5866
  %78 = lshr i24 %75, 16, !dbg !5864
  call void @llvm.dbg.value(metadata i24 %78, metadata !5767, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5834
  %79 = lshr i24 %75, 11, !dbg !5867
  %80 = and i24 %79, 15, !dbg !5867
  %81 = zext i24 %80 to i32, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %81, metadata !5768, metadata !DIExpression()), !dbg !5834
  %82 = trunc i24 %78 to i3, !dbg !5868
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5868

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5869

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5872
  call void @llvm.dbg.value(metadata i8* %85, metadata !5694, metadata !DIExpression()), !dbg !5820
  %86 = bitcast i8* %77 to i32*, !dbg !5872
  %87 = load i32, i32* %86, align 4, !dbg !5872
  %88 = sext i32 %87 to i64, !dbg !5872
  store i64 %88, i64* %20, align 8, !dbg !5874
  br label %115, !dbg !5875

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5876
  call void @llvm.dbg.value(metadata i8* %90, metadata !5694, metadata !DIExpression()), !dbg !5820
  %91 = bitcast i8* %77 to i32*, !dbg !5876
  %92 = load i32, i32* %91, align 4, !dbg !5876
  %93 = sext i32 %92 to i64, !dbg !5876
  store i64 %93, i64* %20, align 8, !dbg !5879
  br label %115, !dbg !5880

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5881
  %96 = add i32 %95, 7, !dbg !5881
  %97 = and i32 %96, -8, !dbg !5881
  %98 = inttoptr i32 %97 to i8*, !dbg !5881
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5881
  call void @llvm.dbg.value(metadata i8* %99, metadata !5694, metadata !DIExpression()), !dbg !5820
  %100 = inttoptr i32 %97 to i64*, !dbg !5881
  %101 = load i64, i64* %100, align 8, !dbg !5881
  store i64 %101, i64* %20, align 8, !dbg !5882
  br label %115, !dbg !5883

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5884
  %104 = add i32 %103, 7, !dbg !5884
  %105 = and i32 %104, -8, !dbg !5884
  %106 = inttoptr i32 %105 to i8*, !dbg !5884
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5884
  call void @llvm.dbg.value(metadata i8* %107, metadata !5694, metadata !DIExpression()), !dbg !5820
  %108 = inttoptr i32 %105 to i64*, !dbg !5884
  %109 = load i64, i64* %108, align 8, !dbg !5884
  store i64 %109, i64* %20, align 8, !dbg !5885
  br label %115, !dbg !5886

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5887
  call void @llvm.dbg.value(metadata i8* %111, metadata !5694, metadata !DIExpression()), !dbg !5820
  %112 = bitcast i8* %77 to i32*, !dbg !5887
  %113 = load i32, i32* %112, align 4, !dbg !5887
  %114 = sext i32 %113 to i64, !dbg !5888
  store i64 %114, i64* %20, align 8, !dbg !5889
  br label %115, !dbg !5890

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5891
  call void @llvm.dbg.value(metadata i8* %117, metadata !5694, metadata !DIExpression()), !dbg !5820
  %118 = trunc i24 %79 to i4, !dbg !5892
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5892

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5893
  %121 = ashr exact i64 %120, 56, !dbg !5893
  store i64 %121, i64* %20, align 8, !dbg !5896
  br label %177, !dbg !5897

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5898
  %124 = ashr exact i64 %123, 48, !dbg !5898
  store i64 %124, i64* %20, align 8, !dbg !5901
  br label %177, !dbg !5902

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5903

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5906
  call void @llvm.dbg.value(metadata i8* %127, metadata !5694, metadata !DIExpression()), !dbg !5820
  %128 = bitcast i8* %77 to i32*, !dbg !5906
  %129 = load i32, i32* %128, align 4, !dbg !5906
  %130 = zext i32 %129 to i64, !dbg !5906
  store i64 %130, i64* %20, align 8, !dbg !5908
  br label %157, !dbg !5909

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5910
  call void @llvm.dbg.value(metadata i8* %132, metadata !5694, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8* %132, metadata !5694, metadata !DIExpression()), !dbg !5820
  %133 = bitcast i8* %77 to i32*, !dbg !5910
  %134 = load i32, i32* %133, align 4, !dbg !5910
  %135 = zext i32 %134 to i64, !dbg !5910
  store i64 %135, i64* %20, align 8, !dbg !5910
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5912
  %138 = add i32 %137, 7, !dbg !5912
  %139 = and i32 %138, -8, !dbg !5912
  %140 = inttoptr i32 %139 to i8*, !dbg !5912
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5912
  call void @llvm.dbg.value(metadata i8* %141, metadata !5694, metadata !DIExpression()), !dbg !5820
  %142 = inttoptr i32 %139 to i64*, !dbg !5912
  %143 = load i64, i64* %142, align 8, !dbg !5912
  store i64 %143, i64* %20, align 8, !dbg !5913
  br label %157, !dbg !5914

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5915
  %146 = add i32 %145, 7, !dbg !5915
  %147 = and i32 %146, -8, !dbg !5915
  %148 = inttoptr i32 %147 to i8*, !dbg !5915
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5915
  call void @llvm.dbg.value(metadata i8* %149, metadata !5694, metadata !DIExpression()), !dbg !5820
  %150 = inttoptr i32 %147 to i64*, !dbg !5915
  %151 = load i64, i64* %150, align 8, !dbg !5915
  store i64 %151, i64* %20, align 8, !dbg !5916
  br label %157, !dbg !5917

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5918
  call void @llvm.dbg.value(metadata i8* %153, metadata !5694, metadata !DIExpression()), !dbg !5820
  %154 = bitcast i8* %77 to i32*, !dbg !5918
  %155 = load i32, i32* %154, align 4, !dbg !5918
  %156 = zext i32 %155 to i64, !dbg !5919
  store i64 %156, i64* %20, align 8, !dbg !5920
  br label %157, !dbg !5921

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5922
  call void @llvm.dbg.value(metadata i8* %159, metadata !5694, metadata !DIExpression()), !dbg !5820
  %160 = trunc i24 %79 to i4, !dbg !5923
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5923

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5924
  store i64 %162, i64* %20, align 8, !dbg !5927
  br label %177, !dbg !5928

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5929
  store i64 %164, i64* %20, align 8, !dbg !5932
  br label %177, !dbg !5933

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5934
  %167 = add i32 %166, 7, !dbg !5934
  %168 = and i32 %167, -8, !dbg !5934
  %169 = inttoptr i32 %168 to i8*, !dbg !5934
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5934
  call void @llvm.dbg.value(metadata i8* %170, metadata !5694, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8* %170, metadata !5694, metadata !DIExpression()), !dbg !5820
  %171 = inttoptr i32 %168 to double*, !dbg !5934
  %172 = load double, double* %171, align 8, !dbg !5934
  store double %172, double* %19, align 8, !dbg !5934
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5938
  call void @llvm.dbg.value(metadata i8* %174, metadata !5694, metadata !DIExpression()), !dbg !5820
  %175 = bitcast i8* %77 to i8**, !dbg !5938
  %176 = load i8*, i8** %175, align 4, !dbg !5938
  store i8* %176, i8** %18, align 8, !dbg !5941
  br label %177, !dbg !5942

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5834
  call void @llvm.dbg.value(metadata i8* %178, metadata !5694, metadata !DIExpression()), !dbg !5820
  %179 = and i24 %75, 3, !dbg !5943
  %180 = icmp eq i24 %179, 0, !dbg !5943
  br i1 %180, label %185, label %181, !dbg !5943

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !5944
  call void @llvm.dbg.value(metadata i32 %182, metadata !5769, metadata !DIExpression()), !dbg !5945
  %183 = icmp slt i32 %182, 0, !dbg !5946
  %184 = add i32 %182, %29, !dbg !5944
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5948
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5949

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #28, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %188, metadata !5773, metadata !DIExpression()), !dbg !5951
  %189 = icmp slt i32 %188, 0, !dbg !5952
  %190 = add i32 %29, 1, !dbg !5950
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5954
  call void @llvm.dbg.value(metadata i8* %192, metadata !5761, metadata !DIExpression()), !dbg !5834
  %193 = icmp sgt i32 %76, -1, !dbg !5955
  br i1 %193, label %194, label %196, !dbg !5957

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #28, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %195, metadata !5776, metadata !DIExpression()), !dbg !5960
  br label %241, !dbg !5961

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #28, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %197, metadata !5776, metadata !DIExpression()), !dbg !5960
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5761, metadata !DIExpression()), !dbg !5834
  %199 = load i64, i64* %20, align 8, !dbg !5964
  %200 = trunc i64 %199 to i8, !dbg !5965
  store i8 %200, i8* %10, align 1, !dbg !5966
  call void @llvm.dbg.value(metadata i8* %23, metadata !5762, metadata !DIExpression()), !dbg !5834
  br label %245, !dbg !5967

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5968
  %203 = icmp eq i24 %202, 0, !dbg !5968
  %204 = trunc i24 %75 to i8, !dbg !5970
  %205 = shl i8 %204, 1, !dbg !5970
  %206 = and i8 %205, 32, !dbg !5970
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5970
  call void @llvm.dbg.value(metadata i8 %207, metadata !5763, metadata !DIExpression()), !dbg !5834
  %208 = load i64, i64* %20, align 8, !dbg !5971
  call void @llvm.dbg.value(metadata i64 %208, metadata !5701, metadata !DIExpression()), !dbg !5820
  %209 = icmp slt i64 %208, 0, !dbg !5972
  br i1 %209, label %210, label %212, !dbg !5974

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5763, metadata !DIExpression()), !dbg !5834
  %211 = sub nsw i64 0, %208, !dbg !5975
  store i64 %211, i64* %20, align 8, !dbg !5977
  br label %212, !dbg !5978

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5834
  call void @llvm.dbg.value(metadata i8 %213, metadata !5763, metadata !DIExpression()), !dbg !5834
  %214 = load i64, i64* %20, align 8, !dbg !5979
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !5980
  call void @llvm.dbg.value(metadata i8* %215, metadata !5761, metadata !DIExpression()), !dbg !5834
  br label %216, !dbg !5981

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5982
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5983
  call void @llvm.dbg.value(metadata i8* %218, metadata !5761, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8 %217, metadata !5763, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.label(metadata !5819), !dbg !5984
  %219 = icmp sgt i32 %76, -1, !dbg !5985
  br i1 %219, label %222, label %220, !dbg !5986

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5987
  br label %245, !dbg !5986

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5989
  %224 = sub i32 %22, %223, !dbg !5989
  call void @llvm.dbg.value(metadata i32 %224, metadata !5778, metadata !DIExpression()), !dbg !5990
  %225 = load i24, i24* %15, align 8, !dbg !5991
  %226 = and i24 %225, -65, !dbg !5991
  store i24 %226, i24* %15, align 8, !dbg !5991
  %227 = icmp ugt i32 %76, %224, !dbg !5992
  br i1 %227, label %228, label %245, !dbg !5994

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5995
  store i32 %229, i32* %16, align 4, !dbg !5997
  br label %245, !dbg !5998

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5999
  %232 = icmp eq i8* %231, null, !dbg !6001
  br i1 %232, label %245, label %233, !dbg !6002

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6003
  %235 = zext i32 %234 to i64, !dbg !6003
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6005
  call void @llvm.dbg.value(metadata i8* %236, metadata !5761, metadata !DIExpression()), !dbg !5834
  %237 = load i24, i24* %15, align 8, !dbg !6006
  %238 = or i24 %237, 1048576, !dbg !6006
  store i24 %238, i24* %15, align 8, !dbg !6006
  store i8 120, i8* %21, align 1, !dbg !6007
  br label %216, !dbg !6008

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6009
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !6012
  br label %363, !dbg !6013

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6014
  call void @llvm.dbg.value(metadata i32 %242, metadata !5776, metadata !DIExpression()), !dbg !5960
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6015
  call void @llvm.dbg.value(metadata i32 -1, metadata !5760, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 %29, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8* %192, metadata !5761, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8* %243, metadata !5762, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8 0, metadata !5763, metadata !DIExpression()), !dbg !5834
  %244 = icmp eq i8* %192, null, !dbg !6016
  br i1 %244, label %363, label %245, !dbg !6018, !llvm.loop !5830

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5987
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5834
  call void @llvm.dbg.value(metadata i32 0, metadata !5782, metadata !DIExpression()), !dbg !5834
  %250 = zext i8 %249 to i32, !dbg !6019
  %251 = icmp eq i8 %249, 0, !dbg !6021
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  call void @llvm.dbg.value(metadata i32 undef, metadata !5781, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  call void @llvm.dbg.value(metadata i32 undef, metadata !5781, metadata !DIExpression()), !dbg !5834
  %252 = icmp sgt i32 %58, 0, !dbg !6022
  br i1 %252, label %253, label %302, !dbg !6023

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5987
  %255 = icmp eq i24 %254, 0, !dbg !5987
  %256 = ptrtoint i8* %248 to i32, !dbg !6024
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  %257 = ptrtoint i8* %247 to i32, !dbg !6024
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  %258 = xor i1 %251, true, !dbg !6025
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  %259 = sext i1 %258 to i32, !dbg !6025
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  %260 = lshr i24 %246, 19, !dbg !6026
  %261 = and i24 %260, 1, !dbg !6026
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6026
  %263 = zext i24 %262 to i32, !dbg !6026
  %264 = add i32 %257, %259, !dbg !6026
  %265 = add i32 %256, %263, !dbg !6026
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  %266 = and i24 %246, 4194304, !dbg !6027
  %267 = icmp eq i24 %266, 0, !dbg !6027
  %268 = load i32, i32* %16, align 4, !dbg !6029
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5781, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5834
  call void @llvm.dbg.value(metadata i32 undef, metadata !5781, metadata !DIExpression()), !dbg !5834
  %269 = load i32, i32* %17, align 8, !dbg !6030
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6030
  call void @llvm.dbg.value(metadata i32 undef, metadata !5781, metadata !DIExpression()), !dbg !5834
  %271 = add i32 %264, %58, !dbg !6030
  %272 = add i32 %265, %268, !dbg !6030
  %273 = add i32 %272, %270, !dbg !6031
  %274 = sub i32 %271, %273, !dbg !6031
  call void @llvm.dbg.value(metadata i32 %274, metadata !5759, metadata !DIExpression()), !dbg !5834
  %275 = and i24 %246, 4, !dbg !6032
  %276 = icmp eq i24 %275, 0, !dbg !6032
  br i1 %276, label %277, label %302, !dbg !6033

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5783, metadata !DIExpression()), !dbg !6034
  %278 = and i24 %246, 64, !dbg !6035
  %279 = icmp eq i24 %278, 0, !dbg !6035
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6036
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6036
  %282 = select i1 %279, i32 32, i32 48, !dbg !6036
  br i1 %280, label %287, label %283, !dbg !6036

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #28, !dbg !6037
  call void @llvm.dbg.value(metadata i32 %284, metadata !5788, metadata !DIExpression()), !dbg !6038
  %285 = icmp slt i32 %284, 0, !dbg !6039
  %286 = add i32 %29, 1, !dbg !6037
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5834
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %290, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8 undef, metadata !5783, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata i8 %288, metadata !5763, metadata !DIExpression()), !dbg !5834
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6041
  %292 = add i32 %291, -1, !dbg !6041
  br label %293, !dbg !6041

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6042
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %295, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %294, metadata !5759, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 %294, metadata !5759, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5834
  %296 = icmp sgt i32 %294, 0, !dbg !6043
  br i1 %296, label %297, label %302, !dbg !6041

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6044
  call void @llvm.dbg.value(metadata i32 %298, metadata !5759, metadata !DIExpression()), !dbg !5834
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #28, !dbg !6045
  call void @llvm.dbg.value(metadata i32 %299, metadata !5794, metadata !DIExpression()), !dbg !6046
  %300 = icmp slt i32 %299, 0, !dbg !6047
  %301 = add i32 %295, 1, !dbg !6045
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %300, label %361, label %293, !llvm.loop !6049

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5834
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5834
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %305, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %304, metadata !5759, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8 %303, metadata !5763, metadata !DIExpression()), !dbg !5834
  %306 = icmp eq i8 %303, 0, !dbg !6051
  br i1 %306, label %312, label %307, !dbg !6052

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6053
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #28, !dbg !6054
  call void @llvm.dbg.value(metadata i32 %309, metadata !5797, metadata !DIExpression()), !dbg !6055
  %310 = icmp slt i32 %309, 0, !dbg !6056
  %311 = add i32 %305, 1, !dbg !6054
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %313, metadata !5700, metadata !DIExpression()), !dbg !5820
  %314 = lshr i24 %246, 20, !dbg !6058
  %315 = lshr i24 %246, 19, !dbg !6059
  %316 = or i24 %314, %315, !dbg !6060
  %317 = and i24 %316, 1, !dbg !6060
  %318 = icmp eq i24 %317, 0, !dbg !6060
  br i1 %318, label %323, label %319, !dbg !6061

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #28, !dbg !6062
  call void @llvm.dbg.value(metadata i32 %320, metadata !5801, metadata !DIExpression()), !dbg !6063
  %321 = icmp slt i32 %320, 0, !dbg !6064
  %322 = add i32 %313, 1, !dbg !6062
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %324, metadata !5700, metadata !DIExpression()), !dbg !5820
  %325 = and i24 %246, 1048576, !dbg !6066
  %326 = icmp eq i24 %325, 0, !dbg !6066
  br i1 %326, label %333, label %327, !dbg !6067

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6068
  %329 = zext i8 %328 to i32, !dbg !6068
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #28, !dbg !6068
  call void @llvm.dbg.value(metadata i32 %330, metadata !5807, metadata !DIExpression()), !dbg !6069
  %331 = icmp slt i32 %330, 0, !dbg !6070
  %332 = add i32 %324, 1, !dbg !6068
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %334, metadata !5700, metadata !DIExpression()), !dbg !5820
  %335 = load i32, i32* %16, align 4, !dbg !6072
  call void @llvm.dbg.value(metadata i32 %335, metadata !5782, metadata !DIExpression()), !dbg !5834
  br label %336, !dbg !6073

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6074
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %338, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %337, metadata !5782, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5834
  %339 = icmp sgt i32 %337, 0, !dbg !6075
  br i1 %339, label %340, label %345, !dbg !6073

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6076
  call void @llvm.dbg.value(metadata i32 %341, metadata !5782, metadata !DIExpression()), !dbg !5834
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #28, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %342, metadata !5811, metadata !DIExpression()), !dbg !6078
  %343 = icmp slt i32 %342, 0, !dbg !6079
  %344 = add i32 %338, 1, !dbg !6077
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %343, label %361, label %336, !llvm.loop !6081

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6083
  call void @llvm.dbg.value(metadata i32 %346, metadata !5814, metadata !DIExpression()), !dbg !6084
  %347 = icmp slt i32 %346, 0, !dbg !6085
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6083
  call void @llvm.dbg.value(metadata i32 %349, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %304, metadata !5759, metadata !DIExpression()), !dbg !5834
  %350 = icmp sgt i32 %304, 0, !dbg !6087
  br i1 %350, label %351, label %363, !dbg !6088

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6088
  %353 = add i32 %352, %338, !dbg !6088
  br label %354, !dbg !6088

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %355, metadata !5759, metadata !DIExpression()), !dbg !5834
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #28, !dbg !6089
  call void @llvm.dbg.value(metadata i32 %356, metadata !5816, metadata !DIExpression()), !dbg !6090
  %357 = icmp slt i32 %356, 0, !dbg !6091
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6093
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %359, metadata !5759, metadata !DIExpression()), !dbg !5834
  %360 = icmp sgt i32 %355, 1, !dbg !6087
  br i1 %360, label %354, label %363, !dbg !6088, !llvm.loop !6094

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5831
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5824
  call void @llvm.dbg.value(metadata i32 %364, metadata !5700, metadata !DIExpression()), !dbg !5820
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !5831
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5820
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6096
  ret i32 %366, !dbg !6096
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6097 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata i8* %1, metadata !6102, metadata !DIExpression()), !dbg !6103
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6104
  store i24 0, i24* %3, align 4, !dbg !6104
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6104
  store i8 0, i8* %4, align 1, !dbg !6104
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6104
  store i32 0, i32* %5, align 4, !dbg !6104
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6104
  store i32 0, i32* %6, align 4, !dbg !6104
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6105
  call void @llvm.dbg.value(metadata i8* %7, metadata !6102, metadata !DIExpression()), !dbg !6103
  %8 = load i8, i8* %7, align 1, !dbg !6106
  %9 = icmp eq i8 %8, 37, !dbg !6108
  br i1 %9, label %10, label %12, !dbg !6109

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6110
  call void @llvm.dbg.value(metadata i8* %11, metadata !6102, metadata !DIExpression()), !dbg !6103
  store i8 37, i8* %4, align 1, !dbg !6112
  br label %18, !dbg !6113

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6114
  call void @llvm.dbg.value(metadata i8* %13, metadata !6102, metadata !DIExpression()), !dbg !6103
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6115
  call void @llvm.dbg.value(metadata i8* %14, metadata !6102, metadata !DIExpression()), !dbg !6103
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6116
  call void @llvm.dbg.value(metadata i8* %15, metadata !6102, metadata !DIExpression()), !dbg !6103
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6117
  call void @llvm.dbg.value(metadata i8* %16, metadata !6102, metadata !DIExpression()), !dbg !6103
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6118
  call void @llvm.dbg.value(metadata i8* %17, metadata !6102, metadata !DIExpression()), !dbg !6103
  br label %18, !dbg !6119

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6103
  ret i8* %19, !dbg !6120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6121 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6125, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i8* %1, metadata !6126, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i8* %2, metadata !6127, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i8* %3, metadata !6128, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i32 0, metadata !6129, metadata !DIExpression()), !dbg !6132
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6133

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6134
  call void @llvm.dbg.value(metadata i32 %9, metadata !6129, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i8* %8, metadata !6127, metadata !DIExpression()), !dbg !6132
  %10 = icmp ult i8* %8, %3, !dbg !6135
  br i1 %10, label %11, label %13, !dbg !6136

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6137
  br label %17, !dbg !6136

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6138

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6139
  %16 = icmp eq i8 %15, 0, !dbg !6138
  br i1 %16, label %24, label %17, !dbg !6133

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6137
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6140
  call void @llvm.dbg.value(metadata i8* %19, metadata !6127, metadata !DIExpression()), !dbg !6132
  %20 = zext i8 %18 to i32, !dbg !6141
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #28, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %21, metadata !6130, metadata !DIExpression()), !dbg !6143
  %22 = icmp slt i32 %21, 0, !dbg !6144
  %23 = add i32 %9, 1, !dbg !6146
  call void @llvm.dbg.value(metadata i32 undef, metadata !6129, metadata !DIExpression()), !dbg !6132
  br i1 %22, label %24, label %7, !llvm.loop !6147

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6132
  ret i32 %25, !dbg !6149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #16 !dbg !6150 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6154, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6155, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %2, metadata !6156, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %3, metadata !6157, metadata !DIExpression()), !dbg !6164
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6165
  %6 = load i8, i8* %5, align 1, !dbg !6165
  %7 = zext i8 %6 to i32, !dbg !6166
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !6167
  %9 = icmp eq i32 %8, 0, !dbg !6167
  call void @llvm.dbg.value(metadata i1 %9, metadata !6158, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6164
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !6168
  call void @llvm.dbg.value(metadata i32 %10, metadata !6159, metadata !DIExpression()), !dbg !6164
  %11 = ptrtoint i8* %3 to i32, !dbg !6169
  %12 = ptrtoint i8* %2 to i32, !dbg !6169
  %13 = sub i32 %11, %12, !dbg !6169
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6170
  call void @llvm.dbg.value(metadata i8* %14, metadata !6161, metadata !DIExpression()), !dbg !6164
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6171

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6164
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6154, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %18, metadata !6161, metadata !DIExpression()), !dbg !6164
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6172
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %25, metadata !6162, metadata !DIExpression()), !dbg !6174
  %26 = icmp ult i32 %25, 10, !dbg !6175
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6176
  %28 = add i32 %27, %25, !dbg !6174
  %29 = trunc i32 %28 to i8, !dbg !6176
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6177
  call void @llvm.dbg.value(metadata i8* %30, metadata !6161, metadata !DIExpression()), !dbg !6164
  store i8 %29, i8* %30, align 1, !dbg !6178
  call void @llvm.dbg.value(metadata i64 %22, metadata !6154, metadata !DIExpression()), !dbg !6164
  %31 = icmp uge i64 %19, %15, !dbg !6179
  %32 = icmp ugt i8* %30, %2, !dbg !6180
  %33 = and i1 %31, %32, !dbg !6180
  br i1 %33, label %17, label %34, !dbg !6181, !llvm.loop !6182

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6184
  %36 = load i24, i24* %35, align 4, !dbg !6184
  %37 = and i24 %36, 32, !dbg !6184
  %38 = icmp eq i24 %37, 0, !dbg !6184
  br i1 %38, label %44, label %39, !dbg !6186

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6187

40:                                               ; preds = %39
  br label %41, !dbg !6189

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6193
  store i24 %43, i24* %35, align 4, !dbg !6193
  br label %44, !dbg !6194

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6195 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6201, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i8* %1, metadata !6202, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i32 %2, metadata !6203, metadata !DIExpression()), !dbg !6204
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6205
  %5 = load i24, i24* %4, align 4, !dbg !6205
  %6 = lshr i24 %5, 11, !dbg !6205
  %7 = and i24 %6, 15, !dbg !6205
  %8 = zext i24 %7 to i32, !dbg !6205
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6206

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6207
  store i32 %2, i32* %10, align 4, !dbg !6209
  br label %28, !dbg !6210

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6211
  store i8 %12, i8* %1, align 1, !dbg !6212
  br label %28, !dbg !6213

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6214
  %15 = bitcast i8* %1 to i16*, !dbg !6215
  store i16 %14, i16* %15, align 2, !dbg !6216
  br label %28, !dbg !6217

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6218
  store i32 %2, i32* %17, align 4, !dbg !6219
  br label %28, !dbg !6220

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6221
  %20 = bitcast i8* %1 to i64*, !dbg !6222
  store i64 %19, i64* %20, align 8, !dbg !6223
  br label %28, !dbg !6224

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6225
  %23 = bitcast i8* %1 to i64*, !dbg !6226
  store i64 %22, i64* %23, align 8, !dbg !6227
  br label %28, !dbg !6228

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6229
  store i32 %2, i32* %25, align 4, !dbg !6230
  br label %28, !dbg !6231

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6232
  store i32 %2, i32* %27, align 4, !dbg !6233
  br label %28, !dbg !6234

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6235
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6239, metadata !DIExpression()), !dbg !6240
  %2 = add i32 %0, -65, !dbg !6241
  %3 = icmp ult i32 %2, 26, !dbg !6242
  %4 = zext i1 %3 to i32, !dbg !6242
  ret i32 %4, !dbg !6243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6244 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6248, metadata !DIExpression()), !dbg !6249
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6250

2:                                                ; preds = %1
  br label %4, !dbg !6251

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6253

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6254
  ret i32 %5, !dbg !6255
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #16 !dbg !6256 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6258, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %1, metadata !6259, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8 1, metadata !6260, metadata !DIExpression()), !dbg !6261
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6262

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6260, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %5, metadata !6259, metadata !DIExpression()), !dbg !6261
  %6 = load i8, i8* %5, align 1, !dbg !6263
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6265

7:                                                ; preds = %4
  br label %11, !dbg !6266

8:                                                ; preds = %4
  br label %11, !dbg !6268

9:                                                ; preds = %4
  br label %11, !dbg !6269

10:                                               ; preds = %4
  br label %11, !dbg !6270

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6271
  %14 = or i24 %13, %12, !dbg !6271
  store i24 %14, i24* %3, align 4, !dbg !6271
  call void @llvm.dbg.value(metadata i8 poison, metadata !6260, metadata !DIExpression()), !dbg !6261
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6259, metadata !DIExpression()), !dbg !6261
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6260, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i8* %15, metadata !6259, metadata !DIExpression()), !dbg !6261
  %17 = load i24, i24* %3, align 4, !dbg !6272
  %18 = and i24 %17, 68, !dbg !6274
  %19 = icmp eq i24 %18, 68, !dbg !6274
  br i1 %19, label %20, label %22, !dbg !6274

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6275
  store i24 %21, i24* %3, align 4, !dbg !6275
  br label %22, !dbg !6277

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6278
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6279 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6281, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i8* %1, metadata !6282, metadata !DIExpression()), !dbg !6285
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6286
  %5 = load i24, i24* %4, align 4, !dbg !6287
  %6 = or i24 %5, 128, !dbg !6287
  store i24 %6, i24* %4, align 4, !dbg !6287
  call void @llvm.dbg.value(metadata i8* %1, metadata !6282, metadata !DIExpression()), !dbg !6285
  %7 = load i8, i8* %1, align 1, !dbg !6288
  %8 = icmp eq i8 %7, 42, !dbg !6290
  br i1 %8, label %9, label %12, !dbg !6291

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6292
  store i24 %10, i24* %4, align 4, !dbg !6292
  call void @llvm.dbg.value(metadata i8* %1, metadata !6282, metadata !DIExpression()), !dbg !6285
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6294
  call void @llvm.dbg.value(metadata i8* %11, metadata !6282, metadata !DIExpression()), !dbg !6285
  store i8* %11, i8** %3, align 4, !dbg !6294
  br label %29, !dbg !6295

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6283, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i8** %3, metadata !6282, metadata !DIExpression(DW_OP_deref)), !dbg !6285
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6296
  call void @llvm.dbg.value(metadata i32 %13, metadata !6284, metadata !DIExpression()), !dbg !6285
  %14 = load i8*, i8** %3, align 4, !dbg !6297
  call void @llvm.dbg.value(metadata i8* %14, metadata !6282, metadata !DIExpression()), !dbg !6285
  %15 = icmp eq i8* %14, %1, !dbg !6299
  br i1 %15, label %29, label %16, !dbg !6300

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6301
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6303
  store i32 %13, i32* %18, align 4, !dbg !6304
  %19 = lshr i32 %13, 31, !dbg !6305
  %20 = lshr i24 %17, 1, !dbg !6306
  %21 = and i24 %20, 1, !dbg !6306
  %22 = zext i24 %21 to i32, !dbg !6306
  %23 = or i32 %19, %22, !dbg !6306
  %24 = trunc i32 %23 to i24, !dbg !6306
  %25 = shl nuw nsw i24 %24, 1, !dbg !6306
  %26 = and i24 %17, -131, !dbg !6306
  %27 = or i24 %26, 128, !dbg !6306
  %28 = or i24 %25, %27, !dbg !6306
  store i24 %28, i24* %4, align 4, !dbg !6306
  br label %29, !dbg !6307

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6285
  ret i8* %30, !dbg !6308
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #16 !dbg !6309 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6311, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata i8* %1, metadata !6312, metadata !DIExpression()), !dbg !6314
  %4 = load i8, i8* %1, align 1, !dbg !6315
  %5 = icmp eq i8 %4, 46, !dbg !6316
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6317
  %7 = load i24, i24* %6, align 4, !dbg !6318
  %8 = select i1 %5, i24 512, i24 0, !dbg !6318
  %9 = and i24 %7, -513, !dbg !6318
  %10 = or i24 %9, %8, !dbg !6318
  store i24 %10, i24* %6, align 4, !dbg !6318
  br i1 %5, label %11, label %32, !dbg !6319

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6312, metadata !DIExpression()), !dbg !6314
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6320
  call void @llvm.dbg.value(metadata i8* %12, metadata !6312, metadata !DIExpression()), !dbg !6314
  store i8* %12, i8** %3, align 4, !dbg !6320
  %13 = load i8, i8* %12, align 1, !dbg !6321
  %14 = icmp eq i8 %13, 42, !dbg !6323
  br i1 %14, label %15, label %18, !dbg !6324

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6325
  store i24 %16, i24* %6, align 4, !dbg !6325
  call void @llvm.dbg.value(metadata i8* %12, metadata !6312, metadata !DIExpression()), !dbg !6314
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6327
  call void @llvm.dbg.value(metadata i8* %17, metadata !6312, metadata !DIExpression()), !dbg !6314
  store i8* %17, i8** %3, align 4, !dbg !6327
  br label %32, !dbg !6328

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6312, metadata !DIExpression(DW_OP_deref)), !dbg !6314
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6329
  call void @llvm.dbg.value(metadata i32 %19, metadata !6313, metadata !DIExpression()), !dbg !6314
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6330
  store i32 %19, i32* %20, align 4, !dbg !6331
  %21 = lshr i32 %19, 31, !dbg !6332
  %22 = load i24, i24* %6, align 4, !dbg !6333
  %23 = lshr i24 %22, 1, !dbg !6333
  %24 = and i24 %23, 1, !dbg !6333
  %25 = zext i24 %24 to i32, !dbg !6333
  %26 = or i32 %21, %25, !dbg !6333
  %27 = trunc i32 %26 to i24, !dbg !6333
  %28 = shl nuw nsw i24 %27, 1, !dbg !6333
  %29 = and i24 %22, -3, !dbg !6333
  %30 = or i24 %28, %29, !dbg !6333
  store i24 %30, i24* %6, align 4, !dbg !6333
  %31 = load i8*, i8** %3, align 4, !dbg !6334
  call void @llvm.dbg.value(metadata i8* %31, metadata !6312, metadata !DIExpression()), !dbg !6314
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6314
  ret i8* %33, !dbg !6335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6336 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6338, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i8* %1, metadata !6339, metadata !DIExpression()), !dbg !6340
  %3 = load i8, i8* %1, align 1, !dbg !6341
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6342

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6343
  call void @llvm.dbg.value(metadata i8* %5, metadata !6339, metadata !DIExpression()), !dbg !6340
  %6 = load i8, i8* %5, align 1, !dbg !6346
  %7 = icmp eq i8 %6, 104, !dbg !6347
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6348
  %9 = load i24, i24* %8, align 4, !dbg !6348
  %10 = and i24 %9, -30721, !dbg !6348
  br i1 %7, label %11, label %14, !dbg !6349

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6350
  store i24 %12, i24* %8, align 4, !dbg !6350
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6352
  call void @llvm.dbg.value(metadata i8* %13, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %56, !dbg !6353

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6354
  store i24 %15, i24* %8, align 4, !dbg !6354
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6356
  call void @llvm.dbg.value(metadata i8* %17, metadata !6339, metadata !DIExpression()), !dbg !6340
  %18 = load i8, i8* %17, align 1, !dbg !6358
  %19 = icmp eq i8 %18, 108, !dbg !6359
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6360
  %21 = load i24, i24* %20, align 4, !dbg !6360
  %22 = and i24 %21, -30721, !dbg !6360
  br i1 %19, label %23, label %26, !dbg !6361

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6362
  store i24 %24, i24* %20, align 4, !dbg !6362
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6364
  call void @llvm.dbg.value(metadata i8* %25, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %56, !dbg !6365

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6366
  store i24 %27, i24* %20, align 4, !dbg !6366
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6368
  %30 = load i24, i24* %29, align 4, !dbg !6369
  %31 = and i24 %30, -30721, !dbg !6369
  %32 = or i24 %31, 10240, !dbg !6369
  store i24 %32, i24* %29, align 4, !dbg !6369
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6370
  call void @llvm.dbg.value(metadata i8* %33, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %56, !dbg !6371

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6372
  %36 = load i24, i24* %35, align 4, !dbg !6373
  %37 = and i24 %36, -30721, !dbg !6373
  %38 = or i24 %37, 12288, !dbg !6373
  store i24 %38, i24* %35, align 4, !dbg !6373
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6374
  call void @llvm.dbg.value(metadata i8* %39, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %56, !dbg !6375

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6376
  %42 = load i24, i24* %41, align 4, !dbg !6377
  %43 = and i24 %42, -30721, !dbg !6377
  %44 = or i24 %43, 14336, !dbg !6377
  store i24 %44, i24* %41, align 4, !dbg !6377
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6378
  call void @llvm.dbg.value(metadata i8* %45, metadata !6339, metadata !DIExpression()), !dbg !6340
  br label %56, !dbg !6379

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6380
  %48 = load i24, i24* %47, align 4, !dbg !6381
  %49 = and i24 %48, -30723, !dbg !6381
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6382
  call void @llvm.dbg.value(metadata i8* %50, metadata !6339, metadata !DIExpression()), !dbg !6340
  %51 = or i24 %49, 16386, !dbg !6383
  store i24 %51, i24* %47, align 4, !dbg !6383
  br label %56, !dbg !6384

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6385
  %54 = load i24, i24* %53, align 4, !dbg !6386
  %55 = and i24 %54, -30721, !dbg !6386
  store i24 %55, i24* %53, align 4, !dbg !6386
  br label %56, !dbg !6387

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6339, metadata !DIExpression()), !dbg !6340
  ret i8* %57, !dbg !6388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !6389 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6391, metadata !DIExpression()), !dbg !6396
  call void @llvm.dbg.value(metadata i8* %1, metadata !6392, metadata !DIExpression()), !dbg !6396
  call void @llvm.dbg.value(metadata i8 0, metadata !6393, metadata !DIExpression()), !dbg !6396
  call void @llvm.dbg.value(metadata i8* %1, metadata !6392, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6396
  %3 = load i8, i8* %1, align 1, !dbg !6397
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6398
  store i8 %3, i8* %4, align 1, !dbg !6399
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6400

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6401

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6402
  %9 = load i24, i24* %8, align 4, !dbg !6402
  %10 = and i24 %9, -458753, !dbg !6402
  %11 = or i24 %10, %7, !dbg !6402
  call void @llvm.dbg.label(metadata !6394), !dbg !6403
  %12 = and i24 %9, 30720, !dbg !6404
  %13 = icmp eq i24 %12, 16384, !dbg !6404
  %14 = zext i1 %13 to i24, !dbg !6406
  %15 = or i24 %11, %14, !dbg !6406
  %16 = icmp eq i8 %3, 99, !dbg !6407
  br i1 %16, label %17, label %43, !dbg !6409

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6410
  %19 = icmp ne i24 %18, 0, !dbg !6410
  call void @llvm.dbg.value(metadata i1 %19, metadata !6393, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6396
  br label %43, !dbg !6412

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6413
  %22 = load i24, i24* %21, align 4, !dbg !6414
  %23 = and i24 %22, -458753, !dbg !6414
  %24 = or i24 %23, 262144, !dbg !6414
  call void @llvm.dbg.value(metadata i8 1, metadata !6393, metadata !DIExpression()), !dbg !6396
  br label %43, !dbg !6415

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6418
  %27 = load i24, i24* %26, align 4, !dbg !6419
  %28 = and i24 %27, -458753, !dbg !6419
  %29 = or i24 %28, 196608, !dbg !6419
  %30 = and i24 %27, 30720, !dbg !6420
  %31 = icmp eq i24 %30, 16384, !dbg !6420
  br label %43, !dbg !6422

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6423
  %34 = load i24, i24* %33, align 4, !dbg !6424
  %35 = and i24 %34, -458753, !dbg !6424
  %36 = or i24 %35, 196608, !dbg !6424
  %37 = and i24 %34, 30720, !dbg !6425
  %38 = icmp ne i24 %37, 0, !dbg !6425
  br label %43, !dbg !6427

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6428
  %41 = load i24, i24* %40, align 4, !dbg !6429
  %42 = or i24 %41, 1, !dbg !6429
  br label %43, !dbg !6430

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6431
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6432
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6433
  call void @llvm.dbg.value(metadata i8* %48, metadata !6392, metadata !DIExpression()), !dbg !6396
  call void @llvm.dbg.value(metadata i8 poison, metadata !6393, metadata !DIExpression()), !dbg !6396
  %49 = lshr i24 %44, 1, !dbg !6431
  %50 = and i24 %49, 1, !dbg !6431
  %51 = zext i24 %50 to i32, !dbg !6431
  %52 = or i32 %51, %47, !dbg !6431
  %53 = trunc i32 %52 to i24, !dbg !6431
  %54 = shl nuw nsw i24 %53, 1, !dbg !6431
  %55 = and i24 %44, -3, !dbg !6431
  %56 = or i24 %54, %55, !dbg !6431
  store i24 %56, i24* %46, align 4, !dbg !6431
  ret i8* %48, !dbg !6434
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #16 !dbg !6435 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6439, metadata !DIExpression()), !dbg !6442
  %2 = load i8*, i8** %0, align 4, !dbg !6443
  call void @llvm.dbg.value(metadata i8* %2, metadata !6440, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata i32 0, metadata !6441, metadata !DIExpression()), !dbg !6442
  %3 = load i8, i8* %2, align 1, !dbg !6444
  %4 = zext i8 %3 to i32, !dbg !6445
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !6446
  %6 = icmp eq i32 %5, 0, !dbg !6447
  br i1 %6, label %19, label %7, !dbg !6447

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata i8* %10, metadata !6440, metadata !DIExpression()), !dbg !6442
  %11 = mul i32 %9, 10, !dbg !6448
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6450
  call void @llvm.dbg.value(metadata i8* %12, metadata !6440, metadata !DIExpression()), !dbg !6442
  %13 = add i32 %11, -48, !dbg !6451
  %14 = add i32 %13, %8, !dbg !6452
  call void @llvm.dbg.value(metadata i32 %14, metadata !6441, metadata !DIExpression()), !dbg !6442
  %15 = load i8, i8* %12, align 1, !dbg !6444
  %16 = zext i8 %15 to i32, !dbg !6445
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !6446
  %18 = icmp eq i32 %17, 0, !dbg !6447
  br i1 %18, label %19, label %7, !dbg !6447, !llvm.loop !6453

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6442
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6442
  store i8* %20, i8** %0, align 4, !dbg !6455
  ret i32 %21, !dbg !6456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6459, metadata !DIExpression()), !dbg !6460
  %2 = add i32 %0, -48, !dbg !6461
  %3 = icmp ult i32 %2, 10, !dbg !6462
  %4 = zext i1 %3 to i32, !dbg !6462
  ret i32 %4, !dbg !6463
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6464 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #26, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #26, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #26, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #26, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #26, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #26, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #26, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #26, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #26, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #26, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #26, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,5\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #26, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #26, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #26, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #26, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_OBSERVER_NAME\0A\09.equ\09CONFIG_ZBUS_OBSERVER_NAME,1\0A\09.type\09CONFIG_ZBUS_OBSERVER_NAME,%object", ""() #26, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #26, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #26, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #26, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7106, !srcloc !7107
  ret void, !dbg !7108
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7109 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7111, metadata !DIExpression()), !dbg !7113
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !7114
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !7115
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7116, !srcloc !7125
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %3, metadata !7122, metadata !DIExpression()) #26, !dbg !7126
  call void @llvm.dbg.value(metadata i32 undef, metadata !7123, metadata !DIExpression()) #26, !dbg !7126
  call void @llvm.dbg.value(metadata i32 %3, metadata !7112, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.value(metadata i32 %3, metadata !7127, metadata !DIExpression()) #26, !dbg !7132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7134, !srcloc !7135
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7136
  ret i32 0, !dbg !7137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #17 !dbg !7138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7140
  %2 = or i32 %1, 512, !dbg !7140
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7140
  ret void, !dbg !7141
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #17 !dbg !7142 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7143
  %2 = or i32 %1, 1024, !dbg !7143
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7143
  ret void, !dbg !7144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7145 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7147, metadata !DIExpression()), !dbg !7148
  ret i32 0, !dbg !7149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7150 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7153, metadata !DIExpression()), !dbg !7161
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7162
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7162
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7154, metadata !DIExpression()), !dbg !7163
  call void @llvm.va_start(i8* nonnull %3), !dbg !7164
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7165
  %5 = load i32, i32* %4, align 4, !dbg !7165
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7165
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !7165
  call void @llvm.va_end(i8* nonnull %3), !dbg !7166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7167
  ret void, !dbg !7167
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7168 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7173, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i8* %0, metadata !7172, metadata !DIExpression()), !dbg !7174
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #28, !dbg !7175
  ret void, !dbg !7176
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7181, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i8* %1, metadata !7182, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i32 %2, metadata !7183, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i8* %1, metadata !7184, metadata !DIExpression()), !dbg !7185
  %4 = icmp eq i32 %2, 0, !dbg !7186
  br i1 %4, label %14, label %5, !dbg !7187

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !7185
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7187

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7184, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i32 %10, metadata !7183, metadata !DIExpression()), !dbg !7185
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i32 noundef %7) #28, !dbg !7188
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !7190
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7191
  call void @llvm.dbg.value(metadata i32 %11, metadata !7183, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.value(metadata i8* %12, metadata !7184, metadata !DIExpression()), !dbg !7185
  br i1 %13, label %14, label %8, !dbg !7191, !llvm.loop !7192

14:                                               ; preds = %8, %3
  ret void, !dbg !7194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !7195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7200, metadata !DIExpression()), !dbg !7201
  %2 = add i32 %0, -1, !dbg !7202
  %3 = icmp ult i32 %2, 4, !dbg !7202
  %4 = shl i32 %2, 3, !dbg !7202
  %5 = lshr i32 1145657157, %4, !dbg !7202
  %6 = trunc i32 %5 to i8, !dbg !7202
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7202
  ret i8 %7, !dbg !7203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7208, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata i32 %1, metadata !7209, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.value(metadata i32 0, metadata !7210, metadata !DIExpression()), !dbg !7220
  br label %4, !dbg !7221

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.31, i32 0, i32 0)) #28, !dbg !7222
  call void @llvm.dbg.value(metadata i32 0, metadata !7212, metadata !DIExpression()), !dbg !7223
  br label %16, !dbg !7224

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7210, metadata !DIExpression()), !dbg !7220
  %6 = icmp ult i32 %5, %1, !dbg !7225
  br i1 %6, label %7, label %11, !dbg !7229

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7230
  %9 = load i8, i8* %8, align 1, !dbg !7230
  %10 = zext i8 %9 to i32, !dbg !7232
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.32, i32 0, i32 0), i32 noundef %10) #28, !dbg !7233
  br label %12, !dbg !7234

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.33, i32 0, i32 0)) #28, !dbg !7235
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7237
  call void @llvm.dbg.value(metadata i32 %13, metadata !7210, metadata !DIExpression()), !dbg !7220
  %14 = icmp eq i32 %13, 8, !dbg !7238
  br i1 %14, label %3, label %4, !dbg !7221, !llvm.loop !7239

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.34, i32 0, i32 0)) #28, !dbg !7241
  ret void, !dbg !7242

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7212, metadata !DIExpression()), !dbg !7223
  %18 = icmp ult i32 %17, %1, !dbg !7243
  br i1 %18, label %19, label %26, !dbg !7244

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7245
  %21 = load i8, i8* %20, align 1, !dbg !7245
  call void @llvm.dbg.value(metadata i8 %21, metadata !7214, metadata !DIExpression()), !dbg !7246
  %22 = zext i8 %21 to i32, !dbg !7247
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !7248
  %24 = icmp eq i32 %23, 0, !dbg !7249
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7248
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.35, i32 0, i32 0), i32 noundef %25) #28, !dbg !7250
  br label %27, !dbg !7251

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.36, i32 0, i32 0)) #28, !dbg !7252
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7254
  call void @llvm.dbg.value(metadata i32 %28, metadata !7212, metadata !DIExpression()), !dbg !7223
  %29 = icmp eq i32 %28, 8, !dbg !7255
  br i1 %29, label %15, label %16, !dbg !7224, !llvm.loop !7256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7260, metadata !DIExpression()), !dbg !7261
  %2 = add i32 %0, -32, !dbg !7262
  %3 = icmp ult i32 %2, 95, !dbg !7262
  %4 = zext i1 %3 to i32, !dbg !7262
  ret i32 %4, !dbg !7263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7313, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7314, metadata !DIExpression()), !dbg !7315
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7316
  br i1 %3, label %5, label %4, !dbg !7318

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !7319
  br label %5, !dbg !7321

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !7322
  ret void, !dbg !7323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7324 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7328, metadata !DIExpression()), !dbg !7329
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7330
  %3 = load i32, i32* %2, align 4, !dbg !7330
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7330
  %5 = load i32, i32* %4, align 4, !dbg !7330
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7330
  %7 = load i32, i32* %6, align 4, !dbg !7330
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.37, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #28, !dbg !7330
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7335
  %9 = load i32, i32* %8, align 4, !dbg !7335
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7335
  %11 = load i32, i32* %10, align 4, !dbg !7335
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7335
  %13 = load i32, i32* %12, align 4, !dbg !7335
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.38, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #28, !dbg !7335
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7340
  %15 = load i32, i32* %14, align 4, !dbg !7340
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #28, !dbg !7340
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7345
  %17 = load i32, i32* %16, align 4, !dbg !7345
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.40, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #28, !dbg !7345
  ret void, !dbg !7350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7351 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7368, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7369, metadata !DIExpression()), !dbg !7371
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7372
  %4 = load i32, i32* %3, align 4, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %4, metadata !7370, metadata !DIExpression()), !dbg !7371
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !7373
  ret void, !dbg !7374
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !7375 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7379, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i8* %0, metadata !7380, metadata !DIExpression()), !dbg !7382
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7383
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7383
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7381, metadata !DIExpression()), !dbg !7384
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7384
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7385
  %5 = bitcast i8* %4 to i32*, !dbg !7385
  %6 = load i32, i32* %5, align 4, !dbg !7385
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7386
  store i32 %6, i32* %7, align 4, !dbg !7387
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !7388
  unreachable, !dbg !7389
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7393, metadata !DIExpression()), !dbg !7394
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !7395
  ret void, !dbg !7396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7401, metadata !DIExpression()), !dbg !7402
  %2 = icmp sgt i32 %0, -1, !dbg !7403
  br i1 %2, label %3, label %8, !dbg !7405

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7406, !srcloc !7408
  %4 = and i32 %0, 31, !dbg !7409
  %5 = shl nuw i32 1, %4, !dbg !7410
  %6 = lshr i32 %0, 5, !dbg !7411
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7412
  store volatile i32 %5, i32* %7, align 4, !dbg !7413
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7414, !srcloc !7415
  br label %8, !dbg !7416

8:                                                ; preds = %3, %1
  ret void, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7420, metadata !DIExpression()), !dbg !7421
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !7422
  ret void, !dbg !7423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7426, metadata !DIExpression()), !dbg !7427
  %2 = icmp sgt i32 %0, -1, !dbg !7428
  br i1 %2, label %3, label %8, !dbg !7430

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7431
  %5 = shl nuw i32 1, %4, !dbg !7433
  %6 = lshr i32 %0, 5, !dbg !7434
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7435
  store volatile i32 %5, i32* %7, align 4, !dbg !7436
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7437, !srcloc !7441
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7442, !srcloc !7445
  br label %8, !dbg !7446

8:                                                ; preds = %3, %1
  ret void, !dbg !7447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !7448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7452, metadata !DIExpression()), !dbg !7453
  %2 = lshr i32 %0, 5, !dbg !7454
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7455
  %4 = load volatile i32, i32* %3, align 4, !dbg !7455
  %5 = and i32 %0, 31, !dbg !7456
  %6 = shl nuw i32 1, %5, !dbg !7456
  %7 = and i32 %4, %6, !dbg !7457
  ret i32 %7, !dbg !7458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !7459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7463, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i32 %1, metadata !7464, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i32 %2, metadata !7465, metadata !DIExpression()), !dbg !7466
  %4 = add i32 %1, 1, !dbg !7467
  call void @llvm.dbg.value(metadata i32 %4, metadata !7464, metadata !DIExpression()), !dbg !7466
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !7470
  ret void, !dbg !7471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !7472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7476, metadata !DIExpression()), !dbg !7478
  call void @llvm.dbg.value(metadata i32 %1, metadata !7477, metadata !DIExpression()), !dbg !7478
  %3 = trunc i32 %1 to i8, !dbg !7479
  %4 = shl i8 %3, 4, !dbg !7479
  %5 = and i32 %0, 15, !dbg !7481
  %6 = add nsw i32 %5, -4, !dbg !7481
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7481
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7481
  %9 = icmp slt i32 %0, 0, !dbg !7481
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7481
  store volatile i8 %4, i8* %10, align 1, !dbg !7479
  ret void, !dbg !7482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7485, metadata !DIExpression()), !dbg !7486
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #28, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7489 {
  tail call void @z_SysNmiOnReset() #28, !dbg !7491
  tail call void @z_arm_int_exit() #28, !dbg !7492
  ret void, !dbg !7493
}

; Function Attrs: optsize
declare !dbg !7494 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7495 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #11 !dbg !7497 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !7499
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !7500
  tail call void @z_bss_zero() #28, !dbg !7501
  tail call void @z_data_copy() #28, !dbg !7502
  tail call void @z_arm_interrupt_init() #28, !dbg !7503
  tail call void @z_cstart() #30, !dbg !7504
  unreachable, !dbg !7504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7505 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7506
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7507, !srcloc !7510
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7511, !srcloc !7514
  ret void, !dbg !7515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7516 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7517
  %2 = and i32 %1, -15728641, !dbg !7517
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7517
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7518, !srcloc !7525
  call void @llvm.dbg.value(metadata i32 %3, metadata !7523, metadata !DIExpression()) #26, !dbg !7526
  %4 = and i32 %3, -5, !dbg !7527
  call void @llvm.dbg.value(metadata i32 %4, metadata !7528, metadata !DIExpression()) #26, !dbg !7533
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7535, !srcloc !7536
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7537, !srcloc !7514
  ret void, !dbg !7539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7543, metadata !DIExpression()), !dbg !7544
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7545
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7546
  store i32 %0, i32* %3, align 4, !dbg !7547
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7548
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7549
  store i32 %4, i32* %5, align 4, !dbg !7550
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7551
  %7 = or i32 %6, 268435456, !dbg !7551
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7551
  call void @llvm.dbg.value(metadata i32 0, metadata !7552, metadata !DIExpression()) #26, !dbg !7555
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7557, !srcloc !7558
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7559
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7560
  %10 = load i32, i32* %9, align 4, !dbg !7560
  ret i32 %10, !dbg !7561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !7562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7672, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7673, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %2, metadata !7674, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7675, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %4, metadata !7676, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %5, metadata !7677, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %6, metadata !7678, metadata !DIExpression()), !dbg !7680
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7681
  call void @llvm.dbg.value(metadata i8* %8, metadata !7679, metadata !DIExpression()), !dbg !7680
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7682
  %10 = bitcast i8* %9 to i32*, !dbg !7682
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7683
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7684
  %12 = bitcast i8* %8 to i32*, !dbg !7685
  store i32 %11, i32* %12, align 4, !dbg !7686
  %13 = ptrtoint i8* %4 to i32, !dbg !7687
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7688
  %15 = bitcast i8* %14 to i32*, !dbg !7688
  store i32 %13, i32* %15, align 4, !dbg !7689
  %16 = ptrtoint i8* %5 to i32, !dbg !7690
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7691
  %18 = bitcast i8* %17 to i32*, !dbg !7691
  store i32 %16, i32* %18, align 4, !dbg !7692
  %19 = ptrtoint i8* %6 to i32, !dbg !7693
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7694
  %21 = bitcast i8* %20 to i32*, !dbg !7694
  store i32 %19, i32* %21, align 4, !dbg !7695
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7696
  %23 = bitcast i8* %22 to i32*, !dbg !7696
  store i32 16777216, i32* %23, align 4, !dbg !7697
  %24 = ptrtoint i8* %8 to i32, !dbg !7698
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7699
  store i32 %24, i32* %25, align 8, !dbg !7700
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7701
  store i32 0, i32* %26, align 4, !dbg !7702
  ret void, !dbg !7703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !7704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7709, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.value(metadata i32 %1, metadata !7710, metadata !DIExpression()), !dbg !7715
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7716
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7711, metadata !DIExpression()), !dbg !7715
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7717
  br i1 %4, label %19, label %5, !dbg !7719

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7714, metadata !DIExpression()), !dbg !7715
  %6 = icmp eq i32 %0, -22, !dbg !7720
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7720
  %8 = load i32, i32* %7, align 4, !dbg !7720
  br i1 %6, label %16, label %9, !dbg !7722

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7720
  %11 = icmp ule i32 %10, %0, !dbg !7720
  %12 = icmp ugt i32 %8, %0, !dbg !7720
  %13 = and i1 %12, %11, !dbg !7720
  %14 = icmp ugt i32 %8, %1, !dbg !7720
  %15 = and i1 %14, %13, !dbg !7720
  br i1 %15, label %18, label %19, !dbg !7720

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7720
  br i1 %17, label %18, label %19, !dbg !7722

18:                                               ; preds = %9, %16
  br label %19, !dbg !7723

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7715
  ret i32 %20, !dbg !7725
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #11 !dbg !7726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7730, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata i8* %1, metadata !7731, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7732, metadata !DIExpression()), !dbg !7733
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7734
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #28, !dbg !7735
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !7736, !srcloc !7737
  unreachable, !dbg !7738
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7739 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7757, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i32 %1, metadata !7758, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i32 %2, metadata !7759, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7760, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i32 0, metadata !7761, metadata !DIExpression()), !dbg !7767
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7768
  %9 = and i32 %8, 511, !dbg !7769
  call void @llvm.dbg.value(metadata i32 %9, metadata !7762, metadata !DIExpression()), !dbg !7767
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !7770
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !7770
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7771
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #26, !dbg !7771
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7766, metadata !DIExpression()), !dbg !7772
  call void @llvm.dbg.value(metadata i32 0, metadata !7773, metadata !DIExpression()) #26, !dbg !7776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7778, !srcloc !7779
  call void @llvm.dbg.value(metadata i8* %6, metadata !7764, metadata !DIExpression(DW_OP_deref)), !dbg !7767
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !7780
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7765, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i8* %5, metadata !7763, metadata !DIExpression(DW_OP_deref)), !dbg !7767
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !7781
  call void @llvm.dbg.value(metadata i32 %12, metadata !7761, metadata !DIExpression()), !dbg !7767
  %13 = load i8, i8* %5, align 1, !dbg !7782, !range !7784
  call void @llvm.dbg.value(metadata i8 %13, metadata !7763, metadata !DIExpression()), !dbg !7767
  %14 = icmp eq i8 %13, 0, !dbg !7782
  br i1 %14, label %15, label %32, !dbg !7785

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7786
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #28, !dbg !7787
  %18 = load i8, i8* %6, align 1, !dbg !7788, !range !7784
  call void @llvm.dbg.value(metadata i8 %18, metadata !7764, metadata !DIExpression()), !dbg !7767
  %19 = icmp eq i8 %18, 0, !dbg !7788
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7790
  %21 = load i32, i32* %20, align 4, !dbg !7790
  br i1 %19, label %27, label %22, !dbg !7791

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7792
  %24 = icmp eq i32 %23, 0, !dbg !7795
  br i1 %24, label %25, label %31, !dbg !7796

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7797
  br label %29, !dbg !7799

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7800
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7790
  br label %31, !dbg !7802

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #28, !dbg !7802
  br label %32, !dbg !7803

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #26, !dbg !7803
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !7803
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !7803
  ret void, !dbg !7803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7809, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i32 %1, metadata !7810, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i32 %2, metadata !7811, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i8* %3, metadata !7812, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i8 0, metadata !7813, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7814, metadata !DIExpression()), !dbg !7815
  store i8 0, i8* %3, align 1, !dbg !7816
  %5 = icmp ugt i32 %2, -16777217, !dbg !7817
  br i1 %5, label %6, label %17, !dbg !7819

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7820
  %8 = icmp eq i32 %7, 8, !dbg !7820
  br i1 %8, label %9, label %10, !dbg !7820

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.64, i32 0, i32 0), i32 noundef 69) #28, !dbg !7822
  br label %17, !dbg !7828

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7829
  %12 = icmp eq i32 %11, 0, !dbg !7829
  br i1 %12, label %13, label %14, !dbg !7830

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7814, metadata !DIExpression()), !dbg !7815
  store i8 1, i8* %3, align 1, !dbg !7833
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7815
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7814, metadata !DIExpression()), !dbg !7815
  br label %17, !dbg !7836

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7815
  ret %struct.__esf* %18, !dbg !7837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7838 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7842, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %1, metadata !7843, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i8* %2, metadata !7844, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 0, metadata !7845, metadata !DIExpression()), !dbg !7846
  store i8 0, i8* %2, align 1, !dbg !7847
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7848

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !7849
  call void @llvm.dbg.value(metadata i32 %5, metadata !7845, metadata !DIExpression()), !dbg !7846
  br label %12, !dbg !7851

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !7852
  call void @llvm.dbg.value(metadata i32 %7, metadata !7845, metadata !DIExpression()), !dbg !7846
  br label %12, !dbg !7853

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !7854
  call void @llvm.dbg.value(metadata i32 0, metadata !7845, metadata !DIExpression()), !dbg !7846
  br label %12, !dbg !7855

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !7856
  call void @llvm.dbg.value(metadata i32 0, metadata !7845, metadata !DIExpression()), !dbg !7846
  br label %12, !dbg !7857

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !7858
  br label %12, !dbg !7859

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !7860
  br label %12, !dbg !7861

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7846
  call void @llvm.dbg.value(metadata i32 %13, metadata !7845, metadata !DIExpression()), !dbg !7846
  ret i32 %13, !dbg !7862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7863 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7867, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i8* %1, metadata !7868, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i32 0, metadata !7869, metadata !DIExpression()), !dbg !7870
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.59, i32 0, i32 0), i32 noundef 69) #28, !dbg !7871
  store i8 0, i8* %1, align 1, !dbg !7876
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7877
  %4 = and i32 %3, 2, !dbg !7879
  %5 = icmp eq i32 %4, 0, !dbg !7880
  br i1 %5, label %7, label %6, !dbg !7881

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.60, i32 0, i32 0), i32 noundef 69) #28, !dbg !7882
  br label %36, !dbg !7888

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7889
  %9 = icmp sgt i32 %8, -1, !dbg !7891
  br i1 %9, label %11, label %10, !dbg !7892

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.61, i32 0, i32 0), i32 noundef 69) #28, !dbg !7893
  br label %36, !dbg !7899

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7900
  %13 = and i32 %12, 1073741824, !dbg !7902
  %14 = icmp eq i32 %13, 0, !dbg !7903
  br i1 %14, label %36, label %15, !dbg !7904

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.62, i32 0, i32 0), i32 noundef 69) #28, !dbg !7905
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !7911
  br i1 %16, label %17, label %21, !dbg !7913

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7914
  %19 = load i32, i32* %18, align 4, !dbg !7914
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.63, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #28, !dbg !7914
  %20 = load i32, i32* %18, align 4, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %20, metadata !7869, metadata !DIExpression()), !dbg !7870
  br label %36, !dbg !7921

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7922
  %23 = and i32 %22, 255, !dbg !7924
  %24 = icmp eq i32 %23, 0, !dbg !7925
  br i1 %24, label %27, label %25, !dbg !7926

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %26, metadata !7869, metadata !DIExpression()), !dbg !7870
  br label %36, !dbg !7929

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7930
  %29 = and i32 %28, 65280, !dbg !7932
  %30 = icmp eq i32 %29, 0, !dbg !7933
  br i1 %30, label %32, label %31, !dbg !7934

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !7935
  call void @llvm.dbg.value(metadata i32 0, metadata !7869, metadata !DIExpression()), !dbg !7870
  br label %36, !dbg !7937

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7938
  %34 = icmp ult i32 %33, 65536, !dbg !7940
  br i1 %34, label %36, label %35, !dbg !7941

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !7942
  call void @llvm.dbg.value(metadata i32 0, metadata !7869, metadata !DIExpression()), !dbg !7870
  br label %36, !dbg !7944

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7870
  call void @llvm.dbg.value(metadata i32 %37, metadata !7869, metadata !DIExpression()), !dbg !7870
  ret i32 %37, !dbg !7945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7946 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7948, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i32 %1, metadata !7949, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i8* %2, metadata !7950, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i32 0, metadata !7951, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i32 -22, metadata !7952, metadata !DIExpression()), !dbg !7961
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.54, i32 0, i32 0), i32 noundef 69) #28, !dbg !7962
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7967
  %5 = and i32 %4, 16, !dbg !7969
  %6 = icmp eq i32 %5, 0, !dbg !7970
  br i1 %6, label %8, label %7, !dbg !7971

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.55, i32 0, i32 0), i32 noundef 69) #28, !dbg !7972
  br label %8, !dbg !7978

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7979
  %10 = and i32 %9, 8, !dbg !7981
  %11 = icmp eq i32 %10, 0, !dbg !7982
  br i1 %11, label %13, label %12, !dbg !7983

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.48, i32 0, i32 0), i32 noundef 69) #28, !dbg !7984
  br label %13, !dbg !7990

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7991
  %15 = and i32 %14, 2, !dbg !7992
  %16 = icmp eq i32 %15, 0, !dbg !7993
  br i1 %16, label %27, label %17, !dbg !7994

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.56, i32 0, i32 0), i32 noundef 69) #28, !dbg !7995
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8000
  call void @llvm.dbg.value(metadata i32 %18, metadata !7953, metadata !DIExpression()), !dbg !8001
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8002
  %20 = and i32 %19, 128, !dbg !8004
  %21 = icmp eq i32 %20, 0, !dbg !8005
  br i1 %21, label %27, label %22, !dbg !8006

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7952, metadata !DIExpression()), !dbg !7961
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.57, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #28, !dbg !8007
  %23 = icmp eq i32 %1, 0, !dbg !8013
  br i1 %23, label %27, label %24, !dbg !8015

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8016
  %26 = and i32 %25, -129, !dbg !8016
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8016
  br label %27, !dbg !8018

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7961
  call void @llvm.dbg.value(metadata i32 %28, metadata !7952, metadata !DIExpression()), !dbg !7961
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8019
  %30 = and i32 %29, 1, !dbg !8021
  %31 = icmp eq i32 %30, 0, !dbg !8022
  br i1 %31, label %33, label %32, !dbg !8023

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.58, i32 0, i32 0), i32 noundef 69) #28, !dbg !8024
  br label %33, !dbg !8030

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8031
  %35 = and i32 %34, 32, !dbg !8033
  %36 = icmp eq i32 %35, 0, !dbg !8034
  br i1 %36, label %38, label %37, !dbg !8035

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.53, i32 0, i32 0), i32 noundef 69) #28, !dbg !8036
  br label %38, !dbg !8042

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8043
  %40 = and i32 %39, 16, !dbg !8044
  %41 = icmp eq i32 %40, 0, !dbg !8044
  br i1 %41, label %42, label %46, !dbg !8045

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8046
  %44 = and i32 %43, 2, !dbg !8047
  %45 = icmp eq i32 %44, 0, !dbg !8047
  br i1 %45, label %55, label %46, !dbg !8048

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8049
  %48 = and i32 %47, 2048, !dbg !8050
  %49 = icmp eq i32 %48, 0, !dbg !8050
  br i1 %49, label %55, label %50, !dbg !8051

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8052
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #28, !dbg !8053
  call void @llvm.dbg.value(metadata i32 %52, metadata !7956, metadata !DIExpression()), !dbg !8054
  %53 = icmp eq i32 %52, 0, !dbg !8055
  br i1 %53, label %55, label %54, !dbg !8057

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8058, metadata !DIExpression()) #26, !dbg !8061
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !8064, !srcloc !8065
  call void @llvm.dbg.value(metadata i32 2, metadata !7951, metadata !DIExpression()), !dbg !7961
  br label %55, !dbg !8066

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7961
  call void @llvm.dbg.value(metadata i32 %56, metadata !7951, metadata !DIExpression()), !dbg !7961
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8067
  %58 = and i32 %57, 32, !dbg !8069
  %59 = icmp eq i32 %58, 0, !dbg !8070
  br i1 %59, label %63, label %60, !dbg !8071

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8072
  %62 = and i32 %61, -8193, !dbg !8072
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8072
  br label %63, !dbg !8074

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8075
  %65 = or i32 %64, 255, !dbg !8075
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8075
  store i8 0, i8* %2, align 1, !dbg !8076
  ret i32 %56, !dbg !8077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8078 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8082, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %0, metadata !8083, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i8* %1, metadata !8084, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 0, metadata !8085, metadata !DIExpression()), !dbg !8089
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #28, !dbg !8090
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8095
  %4 = and i32 %3, 4096, !dbg !8097
  %5 = icmp eq i32 %4, 0, !dbg !8097
  br i1 %5, label %7, label %6, !dbg !8098

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.47, i32 0, i32 0), i32 noundef 69) #28, !dbg !8099
  br label %7, !dbg !8105

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8106
  %9 = and i32 %8, 2048, !dbg !8108
  %10 = icmp eq i32 %9, 0, !dbg !8108
  br i1 %10, label %12, label %11, !dbg !8109

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.48, i32 0, i32 0), i32 noundef 69) #28, !dbg !8110
  br label %12, !dbg !8116

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8117
  %14 = and i32 %13, 512, !dbg !8118
  %15 = icmp eq i32 %14, 0, !dbg !8118
  br i1 %15, label %26, label %16, !dbg !8119

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.49, i32 0, i32 0), i32 noundef 69) #28, !dbg !8120
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %17, metadata !8086, metadata !DIExpression()), !dbg !8126
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8127
  %19 = and i32 %18, 32768, !dbg !8129
  %20 = icmp eq i32 %19, 0, !dbg !8130
  br i1 %20, label %26, label %21, !dbg !8131

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.50, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #28, !dbg !8132
  %22 = icmp eq i32 %0, 0, !dbg !8138
  br i1 %22, label %26, label %23, !dbg !8140

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8141
  %25 = and i32 %24, -32769, !dbg !8141
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8141
  br label %26, !dbg !8143

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8144
  %28 = and i32 %27, 1024, !dbg !8146
  %29 = icmp eq i32 %28, 0, !dbg !8146
  br i1 %29, label %31, label %30, !dbg !8147

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.51, i32 0, i32 0), i32 noundef 69) #28, !dbg !8148
  br label %31, !dbg !8154

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8155
  %33 = and i32 %32, 256, !dbg !8157
  %34 = icmp eq i32 %33, 0, !dbg !8158
  br i1 %34, label %35, label %39, !dbg !8159

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8160
  %37 = and i32 %36, 8192, !dbg !8162
  %38 = icmp eq i32 %37, 0, !dbg !8162
  br i1 %38, label %41, label %39, !dbg !8163

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.52, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.53, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #28, !dbg !8164
  br label %41, !dbg !8165

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8165
  %43 = or i32 %42, 65280, !dbg !8165
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8165
  store i8 0, i8* %1, align 1, !dbg !8166
  ret void, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8168 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8174, metadata !DIExpression()), !dbg !8176
  call void @llvm.dbg.value(metadata i32 0, metadata !8175, metadata !DIExpression()), !dbg !8176
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.43, i32 0, i32 0), i32 noundef 69) #28, !dbg !8177
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8182
  %2 = and i32 %1, 33554432, !dbg !8184
  %3 = icmp eq i32 %2, 0, !dbg !8185
  br i1 %3, label %5, label %4, !dbg !8186

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.44, i32 0, i32 0), i32 noundef 69) #28, !dbg !8187
  br label %5, !dbg !8193

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8194
  %7 = and i32 %6, 16777216, !dbg !8196
  %8 = icmp eq i32 %7, 0, !dbg !8197
  br i1 %8, label %10, label %9, !dbg !8198

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #28, !dbg !8199
  br label %10, !dbg !8205

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8206
  %12 = and i32 %11, 524288, !dbg !8208
  %13 = icmp eq i32 %12, 0, !dbg !8209
  br i1 %13, label %15, label %14, !dbg !8210

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #28, !dbg !8211
  br label %15, !dbg !8217

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8218
  %17 = and i32 %16, 262144, !dbg !8220
  %18 = icmp eq i32 %17, 0, !dbg !8221
  br i1 %18, label %20, label %19, !dbg !8222

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #28, !dbg !8223
  br label %20, !dbg !8229

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8230
  %22 = and i32 %21, 131072, !dbg !8232
  %23 = icmp eq i32 %22, 0, !dbg !8233
  br i1 %23, label %25, label %24, !dbg !8234

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #28, !dbg !8235
  br label %25, !dbg !8241

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8242
  %27 = and i32 %26, 65536, !dbg !8244
  %28 = icmp eq i32 %27, 0, !dbg !8245
  br i1 %28, label %30, label %29, !dbg !8246

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.45, i32 0, i32 0), i32 noundef 69) #28, !dbg !8247
  br label %30, !dbg !8253

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8254
  %32 = or i32 %31, -65536, !dbg !8254
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8254
  ret void, !dbg !8255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8256 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8260, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata i8* %0, metadata !8261, metadata !DIExpression()), !dbg !8262
  store i8 0, i8* %0, align 1, !dbg !8263
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #28, !dbg !8264
  ret void, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8270 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8274, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.value(metadata i32 %0, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = icmp slt i32 %0, 16, !dbg !8277
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8277
  %4 = add nsw i32 %0, -16, !dbg !8277
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #28, !dbg !8277
  ret void, !dbg !8282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8283 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8287, metadata !DIExpression()), !dbg !8290
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8291
  %3 = load i32, i32* %2, align 4, !dbg !8291
  %4 = inttoptr i32 %3 to i16*, !dbg !8292
  call void @llvm.dbg.value(metadata i16* %4, metadata !8288, metadata !DIExpression()), !dbg !8290
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8293
  %6 = or i32 %5, 256, !dbg !8293
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8293
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8294, !srcloc !8297
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8298, !srcloc !8301
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8302
  %8 = load i16, i16* %7, align 2, !dbg !8303
  call void @llvm.dbg.value(metadata i16 %8, metadata !8289, metadata !DIExpression()), !dbg !8290
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8304
  %10 = and i32 %9, -257, !dbg !8304
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8304
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8305, !srcloc !8297
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8307, !srcloc !8301
  %11 = icmp eq i16 %8, -8446, !dbg !8309
  ret i1 %11, !dbg !8311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #17 !dbg !8312 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8313
  %2 = or i32 %1, 16, !dbg !8313
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8313
  ret void, !dbg !8314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #17 !dbg !8315 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8318, metadata !DIExpression()), !dbg !8319
  br label %1, !dbg !8320

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8318, metadata !DIExpression()), !dbg !8319
  tail call fastcc void @__NVIC_SetPriority.67(i32 noundef %2) #27, !dbg !8322
  %3 = add nuw nsw i32 %2, 1, !dbg !8325
  call void @llvm.dbg.value(metadata i32 %3, metadata !8318, metadata !DIExpression()), !dbg !8319
  %4 = icmp eq i32 %3, 97, !dbg !8326
  br i1 %4, label %5, label %1, !dbg !8320, !llvm.loop !8327

5:                                                ; preds = %1
  ret void, !dbg !8329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.67(i32 noundef %0) unnamed_addr #17 !dbg !8330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 1, metadata !8333, metadata !DIExpression()), !dbg !8334
  %2 = and i32 %0, 15, !dbg !8335
  %3 = add nsw i32 %2, -4, !dbg !8335
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8335
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8335
  %6 = icmp slt i32 %0, 0, !dbg !8335
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8335
  store volatile i8 16, i8* %7, align 1, !dbg !8336
  ret void, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8339 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8445, metadata !DIExpression()), !dbg !8446
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8447
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8449
  br i1 %3, label %4, label %12, !dbg !8450

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8451, !srcloc !8463
  call void @llvm.dbg.value(metadata i32 %5, metadata !8454, metadata !DIExpression()) #26, !dbg !8464
  %6 = icmp eq i32 %5, 0, !dbg !8465
  br i1 %6, label %12, label %7, !dbg !8466

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8467
  %9 = or i32 %8, 268435456, !dbg !8467
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8467
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8469
  %11 = and i32 %10, -32769, !dbg !8469
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8469
  br label %12, !dbg !8470

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !8471
  ret void, !dbg !8472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8473 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #28, !dbg !8474
  ret void, !dbg !8475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !612, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.value(metadata i8 0, metadata !613, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.value(metadata i32 64, metadata !615, metadata !DIExpression()), !dbg !8476
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8477
  %3 = load i32, i32* %2, align 4, !dbg !8477
  %4 = add i32 %3, -64, !dbg !8479
  call void @llvm.dbg.value(metadata i32 %4, metadata !614, metadata !DIExpression()), !dbg !8476
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8480
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8481
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8482
  call void @llvm.dbg.value(metadata i8 1, metadata !613, metadata !DIExpression()), !dbg !8476
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #28, !dbg !8483
  ret void, !dbg !8484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8485 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8486
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8487, !srcloc !8490
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8491, !srcloc !8494
  ret void, !dbg !8495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8496 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8497, !srcloc !8500
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8501
  ret void, !dbg !8502
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8503 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8518, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i8 %1, metadata !8519, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %2, metadata !8520, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %3, metadata !8521, metadata !DIExpression()), !dbg !8522
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8523
  ret void, !dbg !8525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8526 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8531, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i8 %1, metadata !8532, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i32 undef, metadata !8533, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i32 undef, metadata !8534, metadata !DIExpression()), !dbg !8536
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8537
  call void @llvm.dbg.value(metadata i8 %3, metadata !8535, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8536
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !8538
  call void @llvm.dbg.value(metadata i32 %4, metadata !8535, metadata !DIExpression()), !dbg !8536
  %5 = trunc i32 %4 to i8, !dbg !8539
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8540
  ret void, !dbg !8541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8542 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8546, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8 %1, metadata !8547, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8 %2, metadata !8548, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i1 %3, metadata !8549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8552
  %5 = zext i8 %2 to i32, !dbg !8553
  call void @llvm.dbg.value(metadata i32 %5, metadata !8551, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 0, metadata !8550, metadata !DIExpression()), !dbg !8552
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8551, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 0, metadata !8550, metadata !DIExpression()), !dbg !8552
  %7 = icmp eq i8 %1, 0, !dbg !8554
  br i1 %7, label %30, label %8, !dbg !8557

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8551, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 %10, metadata !8550, metadata !DIExpression()), !dbg !8552
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8558
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8561
  %13 = load i32, i32* %12, align 4, !dbg !8561
  %14 = icmp eq i32 %13, 0, !dbg !8562
  br i1 %14, label %26, label %15, !dbg !8563

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8564

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8566
  %18 = icmp eq i32 %17, 0, !dbg !8566
  br i1 %18, label %19, label %20, !dbg !8567

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #28, !dbg !8568
  br label %30, !dbg !8574

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8575
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8576
  call void @llvm.dbg.value(metadata i32 %22, metadata !8551, metadata !DIExpression()), !dbg !8552
  %23 = icmp eq i32 %22, -22, !dbg !8577
  br i1 %23, label %30, label %24, !dbg !8579

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %25, metadata !8551, metadata !DIExpression()), !dbg !8552
  br label %26, !dbg !8581

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8552
  call void @llvm.dbg.value(metadata i32 %27, metadata !8551, metadata !DIExpression()), !dbg !8552
  %28 = add nuw nsw i32 %10, 1, !dbg !8582
  call void @llvm.dbg.value(metadata i32 %28, metadata !8550, metadata !DIExpression()), !dbg !8552
  %29 = icmp eq i32 %28, %6, !dbg !8554
  br i1 %29, label %30, label %8, !dbg !8557, !llvm.loop !8583

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8552
  ret i32 %31, !dbg !8585
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8586 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8590, metadata !DIExpression()), !dbg !8592
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8593
  %3 = load i32, i32* %2, align 4, !dbg !8593
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8594, !range !5118
  %5 = icmp ult i32 %4, 2, !dbg !8594
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8595
  br i1 %7, label %8, label %15, !dbg !8595

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8596
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8597
  %11 = load i32, i32* %10, align 4, !dbg !8597
  %12 = and i32 %11, %9, !dbg !8598
  %13 = icmp eq i32 %12, 0, !dbg !8599
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8591, metadata !DIExpression()), !dbg !8592
  ret i32 %16, !dbg !8600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8601 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8605, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8606, metadata !DIExpression()), !dbg !8608
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8609
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8609
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8607, metadata !DIExpression()), !dbg !8610
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8611
  %6 = load i32, i32* %5, align 4, !dbg !8611
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8612
  store i32 %6, i32* %7, align 4, !dbg !8613
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8614
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8615
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8616
  %11 = load i32, i32* %10, align 4, !dbg !8616
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !8617
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !8618
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8619
  ret i32 %12, !dbg !8620
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #13 !dbg !8621 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8628, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8629, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i32 undef, metadata !8630, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i32 %2, metadata !8631, metadata !DIExpression()), !dbg !8632
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8633
  %5 = load i32, i32* %4, align 4, !dbg !8633
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !8634
  %7 = or i32 %6, %5, !dbg !8635
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8636
  store i32 %7, i32* %8, align 4, !dbg !8637
  ret void, !dbg !8638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8639 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8643, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8644, metadata !DIExpression()), !dbg !8645
  %3 = zext i8 %0 to i32, !dbg !8646
  %4 = icmp ugt i8 %0, 7, !dbg !8648
  br i1 %4, label %5, label %6, !dbg !8649

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #28, !dbg !8650
  br label %7, !dbg !8656

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !8657
  br label %7, !dbg !8658

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8645
  ret i32 %8, !dbg !8659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #17 !dbg !8660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8664, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8665, metadata !DIExpression()), !dbg !8666
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !8667
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8668
  %4 = load i32, i32* %3, align 4, !dbg !8668
  %5 = and i32 %4, -32, !dbg !8669
  %6 = or i32 %5, %0, !dbg !8670
  %7 = or i32 %6, 16, !dbg !8670
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8671
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8672
  %9 = load i32, i32* %8, align 4, !dbg !8672
  %10 = or i32 %9, 1, !dbg !8673
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8674
  ret void, !dbg !8675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #17 !dbg !8676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8679, metadata !DIExpression()), !dbg !8680
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8681
  ret void, !dbg !8682
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !8683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8687, metadata !DIExpression()), !dbg !8688
  %2 = icmp ult i32 %0, 33, !dbg !8689
  br i1 %2, label %11, label %3, !dbg !8691

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8692
  br i1 %4, label %11, label %5, !dbg !8694

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8695
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8696, !range !5118
  %8 = mul nsw i32 %7, -2, !dbg !8697
  %9 = add nsw i32 %8, 62, !dbg !8697
  %10 = and i32 %9, 62, !dbg !8698
  br label %11, !dbg !8699

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8688
  ret i32 %12, !dbg !8700
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8701 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8705, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8 %1, metadata !8706, metadata !DIExpression()), !dbg !8707
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8708
  ret void, !dbg !8710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8711 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8715, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i8 %1, metadata !8716, metadata !DIExpression()), !dbg !8722
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8723
  call void @llvm.dbg.value(metadata i8 %3, metadata !8717, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8722
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !8724
  call void @llvm.dbg.value(metadata i32 %4, metadata !8717, metadata !DIExpression()), !dbg !8722
  %5 = icmp ne i32 %4, -22, !dbg !8725
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8726
  call void @llvm.dbg.value(metadata i32 %4, metadata !8718, metadata !DIExpression()), !dbg !8727
  br i1 %7, label %8, label %12, !dbg !8726

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8718, metadata !DIExpression()), !dbg !8727
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !8728
  %10 = add i32 %9, 1, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %10, metadata !8718, metadata !DIExpression()), !dbg !8727
  %11 = icmp eq i32 %10, 8, !dbg !8732
  br i1 %11, label %12, label %8, !dbg !8733, !llvm.loop !8734

12:                                               ; preds = %8, %2
  ret void, !dbg !8736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #17 !dbg !8737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8740, metadata !DIExpression()), !dbg !8741
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8742
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8743
  ret void, !dbg !8744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8745 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8750
  %2 = icmp ugt i32 %1, 8, !dbg !8752
  br i1 %2, label %14, label %3, !dbg !8753

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !8754
  call void @llvm.dbg.value(metadata i32 0, metadata !8749, metadata !DIExpression()), !dbg !8755
  %4 = icmp eq i32 %1, 0, !dbg !8756
  br i1 %4, label %12, label %5, !dbg !8759

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8759

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8749, metadata !DIExpression()), !dbg !8755
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8760
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !8762
  %10 = add nuw i32 %8, 1, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %10, metadata !8749, metadata !DIExpression()), !dbg !8755
  %11 = icmp eq i32 %10, %1, !dbg !8756
  br i1 %11, label %12, label %7, !dbg !8759, !llvm.loop !8764

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8766
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8767
  tail call void @arm_core_mpu_enable() #27, !dbg !8768
  br label %14, !dbg !8769

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8755
  ret i32 %15, !dbg !8770
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !8771 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8778, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i8* %1, metadata !8779, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i8* %0, metadata !8780, metadata !DIExpression()), !dbg !8781
  %3 = load i8, i8* %1, align 1, !dbg !8782
  %4 = icmp eq i8 %3, 0, !dbg !8783
  br i1 %4, label %13, label %5, !dbg !8784

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8778, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i8* %8, metadata !8779, metadata !DIExpression()), !dbg !8781
  store i8 %6, i8* %7, align 1, !dbg !8785
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8787
  call void @llvm.dbg.value(metadata i8* %9, metadata !8778, metadata !DIExpression()), !dbg !8781
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8788
  call void @llvm.dbg.value(metadata i8* %10, metadata !8779, metadata !DIExpression()), !dbg !8781
  %11 = load i8, i8* %10, align 1, !dbg !8782
  %12 = icmp eq i8 %11, 0, !dbg !8783
  br i1 %12, label %13, label %5, !dbg !8784, !llvm.loop !8789

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8791
  ret i8* %0, !dbg !8792
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8793 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8797, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i8* %1, metadata !8798, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32 %2, metadata !8799, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i8* %0, metadata !8800, metadata !DIExpression()), !dbg !8801
  %4 = icmp eq i32 %2, 0, !dbg !8802
  br i1 %4, label %22, label %5, !dbg !8803

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8797, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32 %7, metadata !8799, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i8* %8, metadata !8798, metadata !DIExpression()), !dbg !8801
  %9 = load i8, i8* %8, align 1, !dbg !8804
  %10 = icmp eq i8 %9, 0, !dbg !8805
  br i1 %10, label %16, label %11, !dbg !8806

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8807
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8809
  call void @llvm.dbg.value(metadata i8* %12, metadata !8798, metadata !DIExpression()), !dbg !8801
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8810
  call void @llvm.dbg.value(metadata i8* %13, metadata !8797, metadata !DIExpression()), !dbg !8801
  %14 = add i32 %7, -1, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %14, metadata !8799, metadata !DIExpression()), !dbg !8801
  %15 = icmp eq i32 %14, 0, !dbg !8802
  br i1 %15, label %22, label %5, !dbg !8803, !llvm.loop !8812

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8797, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32 %18, metadata !8799, metadata !DIExpression()), !dbg !8801
  store i8 0, i8* %17, align 1, !dbg !8814
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8816
  call void @llvm.dbg.value(metadata i8* %19, metadata !8797, metadata !DIExpression()), !dbg !8801
  %20 = add i32 %18, -1, !dbg !8817
  call void @llvm.dbg.value(metadata i32 %20, metadata !8799, metadata !DIExpression()), !dbg !8801
  %21 = icmp eq i32 %20, 0, !dbg !8818
  br i1 %21, label %22, label %16, !dbg !8819, !llvm.loop !8820

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8822
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8823 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8827, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.value(metadata i32 %1, metadata !8828, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.value(metadata i32 %1, metadata !8829, metadata !DIExpression()), !dbg !8830
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8831

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8827, metadata !DIExpression()), !dbg !8830
  %6 = load i8, i8* %5, align 1, !dbg !8832
  %7 = icmp eq i8 %6, %3, !dbg !8833
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8834
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8835
  call void @llvm.dbg.value(metadata i8* %10, metadata !8827, metadata !DIExpression()), !dbg !8830
  br i1 %9, label %11, label %4, !dbg !8834, !llvm.loop !8837

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8839
  ret i8* %12, !dbg !8840
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8843, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i32 %1, metadata !8844, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i8* null, metadata !8845, metadata !DIExpression()), !dbg !8846
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8847

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8846
  call void @llvm.dbg.value(metadata i8* %6, metadata !8845, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.value(metadata i8* %5, metadata !8843, metadata !DIExpression()), !dbg !8846
  %7 = load i8, i8* %5, align 1, !dbg !8848
  %8 = icmp eq i8 %7, %3, !dbg !8851
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8852
  call void @llvm.dbg.value(metadata i8* %9, metadata !8845, metadata !DIExpression()), !dbg !8846
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8853
  call void @llvm.dbg.value(metadata i8* %10, metadata !8843, metadata !DIExpression()), !dbg !8846
  %11 = icmp eq i8 %7, 0, !dbg !8854
  br i1 %11, label %12, label %4, !dbg !8854, !llvm.loop !8855

12:                                               ; preds = %4
  ret i8* %9, !dbg !8857
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !8858 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8862, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.value(metadata i32 0, metadata !8863, metadata !DIExpression()), !dbg !8864
  %2 = load i8, i8* %0, align 1, !dbg !8865
  %3 = icmp eq i8 %2, 0, !dbg !8866
  br i1 %3, label %11, label %4, !dbg !8867

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8863, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.value(metadata i8* %6, metadata !8862, metadata !DIExpression()), !dbg !8864
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8868
  call void @llvm.dbg.value(metadata i8* %7, metadata !8862, metadata !DIExpression()), !dbg !8864
  %8 = add i32 %5, 1, !dbg !8870
  call void @llvm.dbg.value(metadata i32 %8, metadata !8863, metadata !DIExpression()), !dbg !8864
  %9 = load i8, i8* %7, align 1, !dbg !8865
  %10 = icmp eq i8 %9, 0, !dbg !8866
  br i1 %10, label %11, label %4, !dbg !8867, !llvm.loop !8871

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8864
  ret i32 %12, !dbg !8873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8878, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32 %1, metadata !8879, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i32 0, metadata !8880, metadata !DIExpression()), !dbg !8881
  %3 = load i8, i8* %0, align 1, !dbg !8882
  %4 = icmp ne i8 %3, 0, !dbg !8883
  %5 = icmp ne i32 %1, 0, !dbg !8884
  %6 = and i1 %4, %5, !dbg !8884
  br i1 %6, label %7, label %16, !dbg !8885

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8880, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.value(metadata i8* %9, metadata !8878, metadata !DIExpression()), !dbg !8881
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8886
  call void @llvm.dbg.value(metadata i8* %10, metadata !8878, metadata !DIExpression()), !dbg !8881
  %11 = add nuw i32 %8, 1, !dbg !8888
  call void @llvm.dbg.value(metadata i32 %11, metadata !8880, metadata !DIExpression()), !dbg !8881
  %12 = load i8, i8* %10, align 1, !dbg !8882
  %13 = icmp ne i8 %12, 0, !dbg !8883
  %14 = icmp ult i32 %11, %1, !dbg !8884
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8884
  br i1 %15, label %7, label %16, !dbg !8885, !llvm.loop !8889

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8881
  ret i32 %17, !dbg !8891
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !8892 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8896, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i8* %1, metadata !8897, metadata !DIExpression()), !dbg !8898
  %3 = load i8, i8* %0, align 1, !dbg !8899
  %4 = load i8, i8* %1, align 1, !dbg !8900
  %5 = icmp ne i8 %3, %4, !dbg !8901
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8902
  br i1 %7, label %18, label %8, !dbg !8902

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8897, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i8* %10, metadata !8896, metadata !DIExpression()), !dbg !8898
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8903
  call void @llvm.dbg.value(metadata i8* %11, metadata !8896, metadata !DIExpression()), !dbg !8898
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8905
  call void @llvm.dbg.value(metadata i8* %12, metadata !8897, metadata !DIExpression()), !dbg !8898
  %13 = load i8, i8* %11, align 1, !dbg !8899
  %14 = load i8, i8* %12, align 1, !dbg !8900
  %15 = icmp ne i8 %13, %14, !dbg !8901
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8902
  br i1 %17, label %18, label %8, !dbg !8902, !llvm.loop !8906

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8899
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8900
  %21 = zext i8 %19 to i32, !dbg !8909
  %22 = zext i8 %20 to i32, !dbg !8910
  %23 = sub nsw i32 %21, %22, !dbg !8911
  ret i32 %23, !dbg !8912
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8917, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.value(metadata i8* %1, metadata !8918, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.value(metadata i32 %2, metadata !8919, metadata !DIExpression()), !dbg !8920
  %4 = icmp eq i32 %2, 0, !dbg !8921
  br i1 %4, label %23, label %5, !dbg !8921

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8919, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.value(metadata i8* %7, metadata !8918, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.value(metadata i8* %8, metadata !8917, metadata !DIExpression()), !dbg !8920
  %9 = load i8, i8* %8, align 1, !dbg !8922
  %10 = load i8, i8* %7, align 1, !dbg !8923
  %11 = icmp ne i8 %9, %10, !dbg !8924
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8925
  br i1 %13, label %19, label %14, !dbg !8925

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8926
  call void @llvm.dbg.value(metadata i8* %15, metadata !8917, metadata !DIExpression()), !dbg !8920
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8928
  call void @llvm.dbg.value(metadata i8* %16, metadata !8918, metadata !DIExpression()), !dbg !8920
  %17 = add i32 %6, -1, !dbg !8929
  call void @llvm.dbg.value(metadata i32 %17, metadata !8919, metadata !DIExpression()), !dbg !8920
  %18 = icmp eq i32 %17, 0, !dbg !8921
  br i1 %18, label %23, label %5, !dbg !8921, !llvm.loop !8930

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8933
  %21 = zext i8 %10 to i32, !dbg !8934
  %22 = sub nsw i32 %20, %21, !dbg !8935
  br label %23, !dbg !8936

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8936
  ret i32 %24, !dbg !8937
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #16 !dbg !8938 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8942, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.value(metadata i8* %1, metadata !8943, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.value(metadata i8** %2, metadata !8944, metadata !DIExpression()), !dbg !8947
  %4 = icmp eq i8* %0, null, !dbg !8948
  br i1 %4, label %5, label %7, !dbg !8948

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8949
  br label %7, !dbg !8948

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8948
  call void @llvm.dbg.value(metadata i8* %8, metadata !8945, metadata !DIExpression()), !dbg !8947
  %9 = load i8, i8* %8, align 1, !dbg !8950
  %10 = icmp eq i8 %9, 0, !dbg !8950
  br i1 %10, label %33, label %11, !dbg !8951

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8945, metadata !DIExpression()), !dbg !8947
  %14 = zext i8 %12 to i32, !dbg !8950
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !8952
  %16 = icmp eq i8* %15, null, !dbg !8951
  br i1 %16, label %21, label %17, !dbg !8953

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8954
  call void @llvm.dbg.value(metadata i8* %18, metadata !8945, metadata !DIExpression()), !dbg !8947
  %19 = load i8, i8* %18, align 1, !dbg !8950
  %20 = icmp eq i8 %19, 0, !dbg !8950
  br i1 %20, label %33, label %11, !dbg !8951, !llvm.loop !8956

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8946, metadata !DIExpression()), !dbg !8947
  %24 = zext i8 %22 to i32, !dbg !8958
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !8959
  %26 = icmp eq i8* %25, null, !dbg !8960
  br i1 %26, label %27, label %31, !dbg !8961

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8962
  call void @llvm.dbg.value(metadata i8* %28, metadata !8946, metadata !DIExpression()), !dbg !8947
  %29 = load i8, i8* %28, align 1, !dbg !8958
  %30 = icmp eq i8 %29, 0, !dbg !8958
  br i1 %30, label %33, label %21, !dbg !8964, !llvm.loop !8965

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8967
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8970
  br label %33, !dbg !8971

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8947
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8947
  store i8* %34, i8** %2, align 4, !dbg !8947
  ret i8* %35, !dbg !8972
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !8973 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8975, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i8* %1, metadata !8976, metadata !DIExpression()), !dbg !8977
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !8978
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8979
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !8980
  ret i8* %0, !dbg !8981
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !8982 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8984, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i8* %1, metadata !8985, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i8* %0, metadata !8987, metadata !DIExpression()), !dbg !8989
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !8990
  call void @llvm.dbg.value(metadata i32 %4, metadata !8988, metadata !DIExpression()), !dbg !8989
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8991
  call void @llvm.dbg.value(metadata i8* %5, metadata !8984, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i8* %1, metadata !8985, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8989
  %6 = icmp eq i32 %2, 0, !dbg !8992
  br i1 %6, label %18, label %7, !dbg !8993

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8994
  call void @llvm.dbg.value(metadata i8* %9, metadata !8984, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i8* %10, metadata !8985, metadata !DIExpression()), !dbg !8989
  %12 = load i8, i8* %10, align 1, !dbg !8995
  %13 = icmp eq i8 %12, 0, !dbg !8996
  br i1 %13, label %18, label %14, !dbg !8997

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8998
  call void @llvm.dbg.value(metadata i8* %15, metadata !8985, metadata !DIExpression()), !dbg !8989
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9000
  call void @llvm.dbg.value(metadata i8* %16, metadata !8984, metadata !DIExpression()), !dbg !8989
  store i8 %12, i8* %9, align 1, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %11, metadata !8986, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %11, metadata !8986, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8989
  %17 = icmp eq i32 %11, 0, !dbg !8992
  br i1 %17, label %18, label %7, !dbg !8993, !llvm.loop !9002

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8989
  store i8 0, i8* %19, align 1, !dbg !9004
  ret i8* %0, !dbg !9005
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9010, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i8* %1, metadata !9011, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i32 %2, metadata !9012, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i8* %0, metadata !9013, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i8* %1, metadata !9014, metadata !DIExpression()), !dbg !9015
  %4 = icmp eq i32 %2, 0, !dbg !9016
  br i1 %4, label %31, label %5, !dbg !9018

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9014, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i8* %0, metadata !9013, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i32 %2, metadata !9012, metadata !DIExpression()), !dbg !9015
  %6 = add i32 %2, -1, !dbg !9019
  call void @llvm.dbg.value(metadata i32 %6, metadata !9012, metadata !DIExpression()), !dbg !9015
  %7 = icmp eq i32 %6, 0, !dbg !9020
  br i1 %7, label %23, label %8, !dbg !9021

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9022
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9022
  br label %11, !dbg !9022

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9014, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i8* %14, metadata !9013, metadata !DIExpression()), !dbg !9015
  %15 = load i8, i8* %14, align 1, !dbg !9023
  %16 = load i8, i8* %13, align 1, !dbg !9024
  %17 = icmp eq i8 %15, %16, !dbg !9025
  br i1 %17, label %18, label %23, !dbg !9022

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9026
  call void @llvm.dbg.value(metadata i8* %19, metadata !9013, metadata !DIExpression()), !dbg !9015
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9028
  call void @llvm.dbg.value(metadata i8* %20, metadata !9014, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i32 %12, metadata !9012, metadata !DIExpression()), !dbg !9015
  %21 = add i32 %12, -1, !dbg !9019
  call void @llvm.dbg.value(metadata i32 %21, metadata !9012, metadata !DIExpression()), !dbg !9015
  %22 = icmp eq i32 %21, 0, !dbg !9020
  br i1 %22, label %23, label %11, !dbg !9021, !llvm.loop !9029

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9015
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9015
  %26 = load i8, i8* %24, align 1, !dbg !9031
  %27 = zext i8 %26 to i32, !dbg !9031
  %28 = load i8, i8* %25, align 1, !dbg !9032
  %29 = zext i8 %28 to i32, !dbg !9032
  %30 = sub nsw i32 %27, %29, !dbg !9033
  br label %31, !dbg !9034

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9015
  ret i32 %32, !dbg !9035
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !9036 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9040, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %1, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !9042, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %0, metadata !9043, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %1, metadata !9044, metadata !DIExpression()), !dbg !9045
  %4 = ptrtoint i8* %0 to i32, !dbg !9046
  %5 = ptrtoint i8* %1 to i32, !dbg !9046
  %6 = sub i32 %4, %5, !dbg !9046
  %7 = icmp ult i32 %6, %2, !dbg !9048
  br i1 %7, label %10, label %8, !dbg !9049

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9044, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %0, metadata !9043, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !9042, metadata !DIExpression()), !dbg !9045
  %9 = icmp eq i32 %2, 0, !dbg !9050
  br i1 %9, label %26, label %17, !dbg !9052

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9042, metadata !DIExpression()), !dbg !9045
  %12 = add i32 %11, -1, !dbg !9053
  call void @llvm.dbg.value(metadata i32 %12, metadata !9042, metadata !DIExpression()), !dbg !9045
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9056
  %14 = load i8, i8* %13, align 1, !dbg !9056
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9057
  store i8 %14, i8* %15, align 1, !dbg !9058
  %16 = icmp eq i32 %12, 0, !dbg !9059
  br i1 %16, label %26, label %10, !dbg !9060, !llvm.loop !9061

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9044, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %19, metadata !9043, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %20, metadata !9042, metadata !DIExpression()), !dbg !9045
  %21 = load i8, i8* %18, align 1, !dbg !9063
  store i8 %21, i8* %19, align 1, !dbg !9065
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9066
  call void @llvm.dbg.value(metadata i8* %22, metadata !9043, metadata !DIExpression()), !dbg !9045
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9067
  call void @llvm.dbg.value(metadata i8* %23, metadata !9044, metadata !DIExpression()), !dbg !9045
  %24 = add i32 %20, -1, !dbg !9068
  call void @llvm.dbg.value(metadata i32 %24, metadata !9042, metadata !DIExpression()), !dbg !9045
  %25 = icmp eq i32 %24, 0, !dbg !9050
  br i1 %25, label %26, label %17, !dbg !9052, !llvm.loop !9069

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9071
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #16 !dbg !9072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9078, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8* %1, metadata !9079, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i32 %2, metadata !9080, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8* %0, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8* %1, metadata !9082, metadata !DIExpression()), !dbg !9083
  %4 = icmp eq i32 %2, 0, !dbg !9084
  br i1 %4, label %14, label %5, !dbg !9085

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9082, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8* %7, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i32 %8, metadata !9080, metadata !DIExpression()), !dbg !9083
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9086
  call void @llvm.dbg.value(metadata i8* %9, metadata !9082, metadata !DIExpression()), !dbg !9083
  %10 = load i8, i8* %6, align 1, !dbg !9088
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9089
  call void @llvm.dbg.value(metadata i8* %11, metadata !9081, metadata !DIExpression()), !dbg !9083
  store i8 %10, i8* %7, align 1, !dbg !9090
  %12 = add i32 %8, -1, !dbg !9091
  call void @llvm.dbg.value(metadata i32 %12, metadata !9080, metadata !DIExpression()), !dbg !9083
  %13 = icmp eq i32 %12, 0, !dbg !9084
  br i1 %13, label %14, label %5, !dbg !9085, !llvm.loop !9092

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9099, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %1, metadata !9100, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %2, metadata !9101, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i8* %0, metadata !9102, metadata !DIExpression()), !dbg !9104
  %4 = trunc i32 %1 to i8, !dbg !9105
  call void @llvm.dbg.value(metadata i8 %4, metadata !9103, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %2, metadata !9101, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i8* %0, metadata !9102, metadata !DIExpression()), !dbg !9104
  %5 = icmp eq i32 %2, 0, !dbg !9106
  br i1 %5, label %12, label %6, !dbg !9107

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9101, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i8* %8, metadata !9102, metadata !DIExpression()), !dbg !9104
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9108
  call void @llvm.dbg.value(metadata i8* %9, metadata !9102, metadata !DIExpression()), !dbg !9104
  store i8 %4, i8* %8, align 1, !dbg !9110
  %10 = add i32 %7, -1, !dbg !9111
  call void @llvm.dbg.value(metadata i32 %10, metadata !9101, metadata !DIExpression()), !dbg !9104
  %11 = icmp eq i32 %10, 0, !dbg !9106
  br i1 %11, label %12, label %6, !dbg !9107, !llvm.loop !9112

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9114
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9119, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i32 %1, metadata !9120, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i32 %2, metadata !9121, metadata !DIExpression()), !dbg !9125
  %4 = icmp eq i32 %2, 0, !dbg !9126
  br i1 %4, label %17, label %5, !dbg !9127

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9128

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9129
  call void @llvm.dbg.value(metadata i8* %9, metadata !9122, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.value(metadata i32 %8, metadata !9121, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i8* %9, metadata !9122, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9129
  %10 = load i8, i8* %9, align 1, !dbg !9130
  %11 = icmp eq i8 %10, %6, !dbg !9133
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9134
  call void @llvm.dbg.value(metadata i8* %12, metadata !9122, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.value(metadata i32 %13, metadata !9121, metadata !DIExpression()), !dbg !9125
  br i1 %15, label %16, label %7, !dbg !9134, !llvm.loop !9135

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9137

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9125
  ret i8* %19, !dbg !9138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9139 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9141, metadata !DIExpression()), !dbg !9142
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9147, metadata !DIExpression()), !dbg !9148
  ret i32 -1, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9154, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i32* %1, metadata !9155, metadata !DIExpression()), !dbg !9156
  %3 = ptrtoint i32* %1 to i32, !dbg !9157
  %4 = and i32 %3, -2, !dbg !9157
  %5 = icmp eq i32 %4, 2, !dbg !9157
  br i1 %5, label %6, label %9, !dbg !9157

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9158
  %8 = tail call i32 %7(i32 noundef %0) #28, !dbg !9158
  br label %9, !dbg !9159

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9159
  ret i32 %10, !dbg !9160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9163, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.value(metadata i32* %1, metadata !9164, metadata !DIExpression()), !dbg !9165
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9166
  ret i32 %3, !dbg !9167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9171, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i32* %1, metadata !9172, metadata !DIExpression()), !dbg !9173
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9174, !srcloc !9176
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9177
  ret i32 %3, !dbg !9178
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9179 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9184, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata i32* %1, metadata !9185, metadata !DIExpression()), !dbg !9188
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %3, metadata !9186, metadata !DIExpression()), !dbg !9188
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !9190
  call void @llvm.dbg.value(metadata i32 %4, metadata !9187, metadata !DIExpression()), !dbg !9188
  %5 = icmp ne i32 %3, %4, !dbg !9191
  %6 = sext i1 %5 to i32, !dbg !9192
  ret i32 %6, !dbg !9193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9198, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata i32 %1, metadata !9199, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata i32 %2, metadata !9200, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.value(metadata i32* %3, metadata !9201, metadata !DIExpression()), !dbg !9202
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9203
  ret i32 %5, !dbg !9204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9205 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9207, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %1, metadata !9208, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %2, metadata !9209, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32* %3, metadata !9210, metadata !DIExpression()), !dbg !9211
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9212, !srcloc !9214
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9215
  ret i32 %5, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9219, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %1, metadata !9220, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %2, metadata !9221, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32* %3, metadata !9222, metadata !DIExpression()), !dbg !9227
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9228
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9230
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9230
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9230
  br i1 %11, label %33, label %12, !dbg !9230

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9227
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9227
  call void @llvm.dbg.value(metadata i8* %14, metadata !9225, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %13, metadata !9223, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %1, metadata !9224, metadata !DIExpression()), !dbg !9227
  br label %15, !dbg !9231

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9233
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9227
  call void @llvm.dbg.value(metadata i8* %17, metadata !9225, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %16, metadata !9224, metadata !DIExpression()), !dbg !9227
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9234
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9237
  call void @llvm.dbg.value(metadata i8* %19, metadata !9225, metadata !DIExpression()), !dbg !9227
  %20 = load i8, i8* %17, align 1, !dbg !9238
  %21 = zext i8 %20 to i32, !dbg !9239
  %22 = tail call i32 %18(i32 noundef %21) #28, !dbg !9234
  %23 = icmp eq i32 %22, -1, !dbg !9240
  br i1 %23, label %30, label %24, !dbg !9241

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9242
  call void @llvm.dbg.value(metadata i32 %25, metadata !9224, metadata !DIExpression()), !dbg !9227
  %26 = icmp eq i32 %25, 0, !dbg !9243
  br i1 %26, label %27, label %15, !dbg !9244, !llvm.loop !9245

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9247
  call void @llvm.dbg.value(metadata i32 %28, metadata !9223, metadata !DIExpression()), !dbg !9227
  %29 = icmp eq i32 %28, 0, !dbg !9248
  br i1 %29, label %30, label %12, !dbg !9249, !llvm.loop !9250

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9227
  call void @llvm.dbg.value(metadata i32 %31, metadata !9223, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.label(metadata !9226), !dbg !9253
  %32 = sub i32 %2, %31, !dbg !9254
  br label %33, !dbg !9255

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9227
  ret i32 %34, !dbg !9256
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9257 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9261, metadata !DIExpression()), !dbg !9262
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9263
  %3 = icmp eq i32 %2, -1, !dbg !9265
  br i1 %3, label %8, label %4, !dbg !9266

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9267
  %6 = icmp eq i32 %5, -1, !dbg !9268
  %7 = sext i1 %6 to i32, !dbg !9267
  br label %8, !dbg !9269

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9262
  ret i32 %9, !dbg !9270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9271 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9279, metadata !DIExpression()), !dbg !9281
  %3 = tail call i64 @sys_clock_tick_get() #28, !dbg !9282
  call void @llvm.dbg.value(metadata i64 %3, metadata !9280, metadata !DIExpression()), !dbg !9281
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9283
  %5 = sub i64 %1, %3, !dbg !9283
  store i64 %5, i64* %4, align 8, !dbg !9283
  ret void, !dbg !9284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9285 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9437, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9435, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i8* %1, metadata !9436, metadata !DIExpression()), !dbg !9440
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #28, !dbg !9441
  call void @llvm.dbg.value(metadata i64 %4, metadata !9439, metadata !DIExpression()), !dbg !9440
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9442
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9442
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9444
  br i1 %7, label %13, label %8, !dbg !9445

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9446
  %10 = load i16, i16* %9, align 4, !dbg !9446
  %11 = zext i16 %10 to i32, !dbg !9447
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #28, !dbg !9448
  br i1 %12, label %13, label %28, !dbg !9449

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9450
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9450
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #27, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %16, metadata !9438, metadata !DIExpression()), !dbg !9440
  %17 = icmp eq i32 %16, 0, !dbg !9452
  br i1 %17, label %18, label %28, !dbg !9454

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9455
  %20 = load i8*, i8** %19, align 4, !dbg !9455
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9456
  %22 = load i16, i16* %21, align 4, !dbg !9456
  %23 = zext i16 %22 to i32, !dbg !9457
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #28, !dbg !9458
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #27, !dbg !9459
  call void @llvm.dbg.value(metadata i32 %25, metadata !9438, metadata !DIExpression()), !dbg !9440
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9460
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #27, !dbg !9461
  br label %28, !dbg !9462

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9440
  ret i32 %29, !dbg !9463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9464 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9469, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9468, metadata !DIExpression()), !dbg !9470
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9471, !srcloc !9473
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #28, !dbg !9474
  ret i32 %3, !dbg !9475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9476 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9480, metadata !DIExpression()), !dbg !9488
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9481, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i32 0, metadata !9482, metadata !DIExpression()), !dbg !9488
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 6, !dbg !9489
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9489
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9484, metadata !DIExpression()), !dbg !9490
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9491
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9493
  br i1 %8, label %31, label %16, !dbg !9494

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9495
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9496
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9480, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9486, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata i32 0, metadata !9482, metadata !DIExpression()), !dbg !9488
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9499
  br i1 %12, label %31, label %13, !dbg !9500

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9500

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9484, metadata !DIExpression()), !dbg !9490
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 1, !dbg !9501
  %20 = load i8, i8* %19, align 4, !dbg !9501, !range !7784
  %21 = icmp eq i8 %20, 0, !dbg !9501
  br i1 %21, label %27, label %22, !dbg !9504

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 3, !dbg !9505
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9505
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9506
  br i1 %25, label %27, label %26, !dbg !9507

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9480, metadata !DIExpression()), !dbg !9488
  tail call void %24(%struct.zbus_channel* noundef %0) #28, !dbg !9508
  br label %27, !dbg !9510

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9511
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9484, metadata !DIExpression()), !dbg !9490
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9491
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9493
  br i1 %30, label %9, label %16, !dbg !9494, !llvm.loop !9512

31:                                               ; preds = %53, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %54, %53 ], !dbg !9488
  ret i32 %32, !dbg !9514

33:                                               ; preds = %13, %53
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %56, %53 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %55, %53 ]
  %36 = phi i32 [ 0, %13 ], [ %54, %53 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9486, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata i32 %36, metadata !9482, metadata !DIExpression()), !dbg !9488
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9515
  %38 = load i8, i8* %37, align 4, !dbg !9515, !range !7784
  %39 = icmp eq i8 %38, 0, !dbg !9515
  br i1 %39, label %53, label %40, !dbg !9518

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 2, !dbg !9519
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9519
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9520
  br i1 %43, label %53, label %44, !dbg !9521

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !9522
  %45 = load i64, i64* %15, align 8, !dbg !9524
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9524
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9480, metadata !DIExpression(DW_OP_deref)), !dbg !9488
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #27, !dbg !9524
  call void @llvm.dbg.value(metadata i32 %47, metadata !9483, metadata !DIExpression()), !dbg !9488
  %48 = icmp eq i32 %47, 0, !dbg !9525
  br i1 %48, label %53, label %49, !dbg !9527

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9528
  %51 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %50, i32 0, i32 0, !dbg !9528
  %52 = load i8*, i8** %51, align 4, !dbg !9528
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.94, i32 0, i32 0), i32 noundef 69, i8* noundef %52, %struct.zbus_observer* noundef %50, i32 noundef %47) #28, !dbg !9528
  call void @llvm.dbg.value(metadata i32 %47, metadata !9482, metadata !DIExpression()), !dbg !9488
  br label %53, !dbg !9534

53:                                               ; preds = %33, %40, %49, %44
  %54 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9488
  call void @llvm.dbg.value(metadata i32 %54, metadata !9482, metadata !DIExpression()), !dbg !9488
  %55 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9535
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %55, metadata !9486, metadata !DIExpression()), !dbg !9498
  %56 = load %struct.zbus_observer*, %struct.zbus_observer** %55, align 4, !dbg !9496
  %57 = icmp eq %struct.zbus_observer* %56, null, !dbg !9499
  br i1 %57, label %31, label %33, !dbg !9500, !llvm.loop !9536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9538 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9542, metadata !DIExpression()), !dbg !9543
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9544, !srcloc !9546
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #28, !dbg !9547
  ret i32 %2, !dbg !9548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9549 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9555, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9553, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i8* %1, metadata !9554, metadata !DIExpression()), !dbg !9556
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9557, !srcloc !9559
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #28, !dbg !9560
  ret i32 %4, !dbg !9561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9562 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9568, metadata !DIExpression()), !dbg !9570
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9566, metadata !DIExpression()), !dbg !9570
  call void @llvm.dbg.value(metadata i8* %1, metadata !9567, metadata !DIExpression()), !dbg !9570
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9571
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9571
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #27, !dbg !9572
  call void @llvm.dbg.value(metadata i32 %6, metadata !9569, metadata !DIExpression()), !dbg !9570
  %7 = icmp eq i32 %6, 0, !dbg !9573
  br i1 %7, label %8, label %17, !dbg !9575

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9576
  %10 = load i8*, i8** %9, align 4, !dbg !9576
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 1, !dbg !9577
  %12 = load i16, i16* %11, align 4, !dbg !9577
  %13 = zext i16 %12 to i32, !dbg !9578
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #28, !dbg !9579
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9580
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !9581
  br label %17, !dbg !9582

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9570
  ret i32 %18, !dbg !9583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9584 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9589, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9588, metadata !DIExpression()), !dbg !9592
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #28, !dbg !9593
  call void @llvm.dbg.value(metadata i64 %3, metadata !9591, metadata !DIExpression()), !dbg !9592
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9594
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9594
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #27, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %6, metadata !9590, metadata !DIExpression()), !dbg !9592
  %7 = icmp eq i32 %6, 0, !dbg !9596
  br i1 %7, label %8, label %12, !dbg !9598

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #27, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %9, metadata !9590, metadata !DIExpression()), !dbg !9592
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9600
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #27, !dbg !9601
  br label %12, !dbg !9602

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9592
  ret i32 %13, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9604 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9607, metadata !DIExpression()), !dbg !9609
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9606, metadata !DIExpression()), !dbg !9609
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9610
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9610
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #27, !dbg !9611
  call void @llvm.dbg.value(metadata i32 %5, metadata !9608, metadata !DIExpression()), !dbg !9609
  ret i32 %5, !dbg !9612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9613 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9617, metadata !DIExpression()), !dbg !9619
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9620
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9620
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #27, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %4, metadata !9618, metadata !DIExpression()), !dbg !9619
  ret i32 %4, !dbg !9622
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9623 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9630, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9628, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9629, metadata !DIExpression()), !dbg !9631
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 2, !dbg !9632
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9632
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9634
  br i1 %6, label %10, label %7, !dbg !9635

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9636
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #27, !dbg !9637
  br label %10, !dbg !9638

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9631
  ret i32 %11, !dbg !9639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9640 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9644, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i8* %1, metadata !9645, metadata !DIExpression()), !dbg !9647
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9648, !srcloc !9650
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #28, !dbg !9651
  ret i32 %4, !dbg !9652
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @zbus_iterate_over_channels(i1 (%struct.zbus_channel*)* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9653 {
  call void @llvm.dbg.value(metadata i1 (%struct.zbus_channel*)* %0, metadata !9807, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), metadata !9808, metadata !DIExpression()), !dbg !9812
  br i1 icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), label %2, label %10, !dbg !9813

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), metadata !9808, metadata !DIExpression()), !dbg !9812
  %3 = tail call zeroext i1 %0(%struct.zbus_channel* noundef nonnull getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0)) #28, !dbg !9814
  call void @llvm.dbg.value(metadata %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 1), metadata !9808, metadata !DIExpression()), !dbg !9812
  br i1 %3, label %4, label %10, !dbg !9818

4:                                                ; preds = %2, %7
  %5 = phi %struct.zbus_channel* [ %9, %7 ], [ getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 1), %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %5, metadata !9808, metadata !DIExpression()), !dbg !9812
  %6 = icmp ult %struct.zbus_channel* %5, getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0), !dbg !9819
  br i1 %6, label %7, label %10, !dbg !9813, !llvm.loop !9821

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %5, metadata !9808, metadata !DIExpression()), !dbg !9812
  %8 = tail call zeroext i1 %0(%struct.zbus_channel* noundef nonnull %5) #28, !dbg !9814
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %5, i32 1, !dbg !9823
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %9, metadata !9808, metadata !DIExpression()), !dbg !9812
  br i1 %8, label %4, label %10, !dbg !9818, !llvm.loop !9821

10:                                               ; preds = %7, %4, %2, %1
  %11 = phi i1 [ icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), %1 ], [ icmp ult (%struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_start, i32 0, i32 0), %struct.zbus_channel* getelementptr inbounds ([0 x %struct.zbus_channel], [0 x %struct.zbus_channel]* @_zbus_channel_list_end, i32 0, i32 0)), %2 ], [ %6, %4 ], [ %6, %7 ], !dbg !9819
  %12 = xor i1 %11, true, !dbg !9824
  ret i1 %12, !dbg !9824
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @zbus_iterate_over_observers(i1 (%struct.zbus_observer*)* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9825 {
  call void @llvm.dbg.value(metadata i1 (%struct.zbus_observer*)* %0, metadata !9832, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), metadata !9833, metadata !DIExpression()), !dbg !9837
  br i1 icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), label %2, label %10, !dbg !9838

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), metadata !9833, metadata !DIExpression()), !dbg !9837
  %3 = tail call zeroext i1 %0(%struct.zbus_observer* noundef nonnull getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0)) #28, !dbg !9839
  call void @llvm.dbg.value(metadata %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 1), metadata !9833, metadata !DIExpression()), !dbg !9837
  br i1 %3, label %4, label %10, !dbg !9843

4:                                                ; preds = %2, %7
  %5 = phi %struct.zbus_observer* [ %9, %7 ], [ getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 1), %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %5, metadata !9833, metadata !DIExpression()), !dbg !9837
  %6 = icmp ult %struct.zbus_observer* %5, getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0), !dbg !9844
  br i1 %6, label %7, label %10, !dbg !9838, !llvm.loop !9846

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %5, metadata !9833, metadata !DIExpression()), !dbg !9837
  %8 = tail call zeroext i1 %0(%struct.zbus_observer* noundef nonnull %5) #28, !dbg !9839
  %9 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %5, i32 1, !dbg !9848
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %9, metadata !9833, metadata !DIExpression()), !dbg !9837
  br i1 %8, label %4, label %10, !dbg !9843, !llvm.loop !9846

10:                                               ; preds = %7, %4, %2, %1
  %11 = phi i1 [ icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), %1 ], [ icmp ult (%struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_start, i32 0, i32 0), %struct.zbus_observer* getelementptr inbounds ([0 x %struct.zbus_observer], [0 x %struct.zbus_observer]* @_zbus_observer_list_end, i32 0, i32 0)), %2 ], [ %6, %4 ], [ %6, %7 ], !dbg !9844
  %12 = xor i1 %11, true, !dbg !9849
  ret i1 %12, !dbg !9849
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9852, metadata !DIExpression()), !dbg !9853
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !9854
  ret void, !dbg !9855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9860, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %1, metadata !9861, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9862, metadata !DIExpression()), !dbg !9866
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9867
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9867
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9867
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9863, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %0, metadata !9865, metadata !DIExpression()), !dbg !9866
  %7 = icmp slt i32 %0, %1, !dbg !9868
  br i1 %7, label %8, label %22, !dbg !9871

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9865, metadata !DIExpression()), !dbg !9866
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !9872
  %11 = icmp eq i32 %10, 0, !dbg !9872
  br i1 %11, label %19, label %12, !dbg !9875

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !9876
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9878
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9878
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9880
  br i1 %15, label %19, label %16, !dbg !9881

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9882
  %18 = load i8*, i8** %17, align 4, !dbg !9882
  tail call void %14(i32 noundef %9, i8* noundef %18) #28, !dbg !9883
  br label %19, !dbg !9884

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9885
  call void @llvm.dbg.value(metadata i32 %20, metadata !9865, metadata !DIExpression()), !dbg !9866
  %21 = icmp eq i32 %20, %1, !dbg !9868
  br i1 %21, label %22, label %8, !dbg !9871, !llvm.loop !9886

22:                                               ; preds = %19, %3
  ret void, !dbg !9888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #18 !dbg !9889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9891, metadata !DIExpression()), !dbg !9892
  %2 = shl nuw i32 1, %0, !dbg !9893
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !9896
  ret i32 %3, !dbg !9897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #17 !dbg !9898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9902, metadata !DIExpression()), !dbg !9903
  %2 = shl nuw i32 1, %0, !dbg !9904
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !9907
  ret void, !dbg !9908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9912, metadata !DIExpression()), !dbg !9913
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9914
  ret void, !dbg !9915
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9918, metadata !DIExpression()), !dbg !9919
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9920
  %3 = and i32 %2, %0, !dbg !9920
  %4 = icmp eq i32 %3, %0, !dbg !9921
  %5 = zext i1 %4 to i32, !dbg !9921
  ret i32 %5, !dbg !9922
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9925, metadata !DIExpression()), !dbg !9926
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !9927
  ret void, !dbg !9928
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9931, metadata !DIExpression()), !dbg !9932
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !9933
  ret void, !dbg !9934
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9935 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9937, metadata !DIExpression()), !dbg !9938
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !9939
  ret void, !dbg !9940
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9943, metadata !DIExpression()), !dbg !9944
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !9945
  ret void, !dbg !9946
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9947 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9949, metadata !DIExpression()), !dbg !9950
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !9951
  ret void, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9953 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9955, metadata !DIExpression()), !dbg !9956
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !9957
  ret void, !dbg !9958
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9961, metadata !DIExpression()), !dbg !9962
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !9963
  ret void, !dbg !9964
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9965 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9967, metadata !DIExpression()), !dbg !9968
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !9969
  ret void, !dbg !9970
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9973, metadata !DIExpression()), !dbg !9974
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !9975
  ret void, !dbg !9976
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9977 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9979, metadata !DIExpression()), !dbg !9980
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !9981
  ret void, !dbg !9982
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9985, metadata !DIExpression()), !dbg !9986
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !9987
  ret i32 0, !dbg !9988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !887 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !891, metadata !DIExpression()), !dbg !9989
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #28, !dbg !9990
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #28, !dbg !9992
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #28, !dbg !9994
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #28, !dbg !9996
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #28, !dbg !9998
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #28, !dbg !10000
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #28, !dbg !10002
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #28, !dbg !10004
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #28, !dbg !10006
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #28, !dbg !10008
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #28, !dbg !10010
  ret void, !dbg !10012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10015, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.value(metadata i32 0, metadata !10016, metadata !DIExpression()), !dbg !10017
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10018
  %3 = load i32, i32* %2, align 4, !dbg !10018
  call void @llvm.dbg.value(metadata i32 %3, metadata !10016, metadata !DIExpression()), !dbg !10017
  %4 = shl nuw i32 1, %0, !dbg !10019
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !10020
  tail call void @arch_irq_enable(i32 noundef %3) #28, !dbg !10021
  ret void, !dbg !10022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10025, metadata !DIExpression()), !dbg !10026
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10027
  %3 = or i32 %2, %0, !dbg !10027
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10027
  ret void, !dbg !10028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #17 !dbg !10029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10031, metadata !DIExpression()), !dbg !10032
  %2 = icmp slt i32 %0, 32, !dbg !10033
  br i1 %2, label %3, label %5, !dbg !10035

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10036
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !10038
  br label %5, !dbg !10039

5:                                                ; preds = %1, %3
  ret void, !dbg !10040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10043, metadata !DIExpression()), !dbg !10044
  %2 = xor i32 %0, -1, !dbg !10045
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10045
  %4 = and i32 %3, %2, !dbg !10045
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10045
  ret void, !dbg !10046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !10047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10051, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.value(metadata i32 %1, metadata !10052, metadata !DIExpression()), !dbg !10053
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10054

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10055
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !10057
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !10058
  br label %11, !dbg !10059

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10060
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !10061
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !10062
  br label %11, !dbg !10063

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10064
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !10065
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !10066
  br label %11, !dbg !10067

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10068
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !10069
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !10070
  br label %11, !dbg !10071

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10075, metadata !DIExpression()), !dbg !10076
  %2 = xor i32 %0, -1, !dbg !10077
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10077
  %4 = and i32 %3, %2, !dbg !10077
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10077
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10081, metadata !DIExpression()), !dbg !10082
  %2 = xor i32 %0, -1, !dbg !10083
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10083
  %4 = and i32 %3, %2, !dbg !10083
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10089
  %3 = or i32 %2, %0, !dbg !10089
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10089
  ret void, !dbg !10090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10093, metadata !DIExpression()), !dbg !10094
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10095
  %3 = or i32 %2, %0, !dbg !10095
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10095
  ret void, !dbg !10096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #10 !dbg !10097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10101, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10102, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata i8* %2, metadata !10103, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !10104, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10106, metadata !DIExpression()), !dbg !10107
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10108
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10108
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10110
  br i1 %6, label %7, label %9, !dbg !10111

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10112
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10113
  store i8* %2, i8** %8, align 4, !dbg !10114
  br label %9, !dbg !10115

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10107
  ret i32 %10, !dbg !10116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10119, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10121, metadata !DIExpression()), !dbg !10122
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10123
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10124
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10125
  store i8* null, i8** %3, align 4, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10130, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.value(metadata i8* %1, metadata !10131, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.value(metadata i8* %1, metadata !10132, metadata !DIExpression()), !dbg !10135
  %3 = bitcast i8* %1 to i32*, !dbg !10136
  %4 = load i32, i32* %3, align 4, !dbg !10136
  %5 = add i32 %4, -169, !dbg !10136
  %6 = icmp ult i32 %5, -121, !dbg !10136
  br i1 %6, label %15, label %7, !dbg !10138

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10139
  %9 = inttoptr i32 %8 to i32*, !dbg !10140
  call void @llvm.dbg.value(metadata i32* %9, metadata !10133, metadata !DIExpression()), !dbg !10135
  %10 = load volatile i32, i32* %9, align 4, !dbg !10141
  call void @llvm.dbg.value(metadata i32 %10, metadata !10134, metadata !DIExpression()), !dbg !10135
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10142
  %12 = bitcast i8* %11 to i32*, !dbg !10142
  %13 = load i32, i32* %12, align 4, !dbg !10142
  %14 = or i32 %13, %10, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %14, metadata !10134, metadata !DIExpression()), !dbg !10135
  store volatile i32 %14, i32* %9, align 4, !dbg !10144
  br label %15, !dbg !10145

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10135
  ret i32 %16, !dbg !10146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10149, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata i8* %1, metadata !10150, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata i8* %1, metadata !10151, metadata !DIExpression()), !dbg !10154
  %3 = bitcast i8* %1 to i32*, !dbg !10155
  %4 = load i32, i32* %3, align 4, !dbg !10155
  %5 = add i32 %4, -169, !dbg !10155
  %6 = icmp ult i32 %5, -121, !dbg !10155
  br i1 %6, label %16, label %7, !dbg !10157

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10158
  %9 = inttoptr i32 %8 to i32*, !dbg !10159
  call void @llvm.dbg.value(metadata i32* %9, metadata !10152, metadata !DIExpression()), !dbg !10154
  %10 = load volatile i32, i32* %9, align 4, !dbg !10160
  call void @llvm.dbg.value(metadata i32 %10, metadata !10153, metadata !DIExpression()), !dbg !10154
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10161
  %12 = bitcast i8* %11 to i32*, !dbg !10161
  %13 = load i32, i32* %12, align 4, !dbg !10161
  %14 = xor i32 %13, -1, !dbg !10162
  %15 = and i32 %10, %14, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %15, metadata !10153, metadata !DIExpression()), !dbg !10154
  store volatile i32 %15, i32* %9, align 4, !dbg !10164
  br label %16, !dbg !10165

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10154
  ret i32 %17, !dbg !10166
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10167 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10169, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i8* %1, metadata !10170, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i32* %2, metadata !10171, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i8* %1, metadata !10172, metadata !DIExpression()), !dbg !10177
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10178
  call void @llvm.dbg.value(metadata i32 %4, metadata !10173, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i32 undef, metadata !10174, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i32 undef, metadata !10175, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i32 %4, metadata !10176, metadata !DIExpression()), !dbg !10177
  %5 = bitcast i8* %1 to i32*, !dbg !10179
  %6 = load i32, i32* %5, align 4, !dbg !10179
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !10180

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !10181
  call void @llvm.dbg.value(metadata i32 %8, metadata !10174, metadata !DIExpression()), !dbg !10177
  br label %19, !dbg !10182

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #27, !dbg !10184
  call void @llvm.dbg.value(metadata i32 %10, metadata !10175, metadata !DIExpression()), !dbg !10177
  br label %19, !dbg !10185

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #28, !dbg !10186
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !10187
  br label %19, !dbg !10188

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #28, !dbg !10189
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #27, !dbg !10190
  br label %19, !dbg !10191

17:                                               ; preds = %3
  br label %19, !dbg !10192

18:                                               ; preds = %3
  br label %19, !dbg !10193

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !10194
  br label %21, !dbg !10195

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !10177
  ret i32 %22, !dbg !10195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #17 !dbg !10196 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10198, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i8* %1, metadata !10199, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i8* %2, metadata !10200, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i8* %1, metadata !10201, metadata !DIExpression()), !dbg !10206
  %4 = bitcast i8* %1 to i32*, !dbg !10207
  %5 = load i32, i32* %4, align 4, !dbg !10207
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !10208
  call void @llvm.dbg.value(metadata i32 %6, metadata !10205, metadata !DIExpression()), !dbg !10206
  %7 = icmp slt i32 %6, 0, !dbg !10209
  br i1 %7, label %22, label %8, !dbg !10211

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10201, metadata !DIExpression()), !dbg !10206
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10212
  %10 = bitcast i8* %9 to i32*, !dbg !10212
  %11 = load i32, i32* %10, align 4, !dbg !10212
  %12 = lshr i32 %11, 16, !dbg !10212
  %13 = and i32 %12, 7, !dbg !10212
  %14 = lshr i32 %11, 8, !dbg !10213
  %15 = and i32 %14, 31, !dbg !10213
  %16 = shl i32 %13, %15, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %16, metadata !10204, metadata !DIExpression()), !dbg !10206
  %17 = and i32 %11, 255, !dbg !10215
  %18 = or i32 %17, 1073887232, !dbg !10216
  %19 = inttoptr i32 %18 to i32*, !dbg !10217
  call void @llvm.dbg.value(metadata i32* %19, metadata !10202, metadata !DIExpression()), !dbg !10206
  %20 = load volatile i32, i32* %19, align 4, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %20, metadata !10203, metadata !DIExpression()), !dbg !10206
  %21 = or i32 %16, %20, !dbg !10219
  call void @llvm.dbg.value(metadata i32 %21, metadata !10203, metadata !DIExpression()), !dbg !10206
  store volatile i32 %21, i32* %19, align 4, !dbg !10220
  br label %22, !dbg !10221

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10206
  ret i32 %23, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10227, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.value(metadata i32 0, metadata !10228, metadata !DIExpression()), !dbg !10229
  %2 = add i32 %0, -1, !dbg !10230
  %3 = icmp ult i32 %2, 6, !dbg !10230
  br i1 %3, label %4, label %7, !dbg !10230

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10230
  %6 = load i32, i32* %5, align 4, !dbg !10230
  call void @llvm.dbg.value(metadata i32 %6, metadata !10228, metadata !DIExpression()), !dbg !10229
  br label %7, !dbg !10231

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10229
  ret i32 %8, !dbg !10232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10237, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata i32 %1, metadata !10238, metadata !DIExpression()), !dbg !10239
  %3 = udiv i32 %0, %1, !dbg !10240
  ret i32 %3, !dbg !10241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10246, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.value(metadata i32 8, metadata !10247, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.value(metadata i32 84, metadata !10248, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.value(metadata i32 %1, metadata !10249, metadata !DIExpression()), !dbg !10250
  %3 = mul i32 %0, 84, !dbg !10251
  %4 = shl nsw i32 %1, 3, !dbg !10252
  %5 = udiv i32 %3, %4, !dbg !10253
  ret i32 %5, !dbg !10254
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10257, metadata !DIExpression()), !dbg !10260
  tail call void @config_enable_default_clocks() #28, !dbg !10261
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !10262
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !10262
  %4 = lshr i32 %3, 4, !dbg !10262
  %5 = and i32 %4, 15, !dbg !10262
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10262
  %7 = load i8, i8* %6, align 1, !dbg !10262
  %8 = zext i8 %7 to i32, !dbg !10262
  %9 = lshr i32 %2, %8, !dbg !10262
  call void @llvm.dbg.value(metadata i32 %9, metadata !10258, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10259, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10260
  %10 = icmp ult i32 %9, 84000000, !dbg !10263
  br i1 %10, label %11, label %13, !dbg !10265

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #28, !dbg !10266
  br label %13, !dbg !10268

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !10269
  tail call fastcc void @set_up_plls() #27, !dbg !10270
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10271
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !10274
  br label %14, !dbg !10275

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10276
  %16 = icmp eq i32 %15, 8, !dbg !10277
  br i1 %16, label %17, label %14, !dbg !10275, !llvm.loop !10278

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10280
  br i1 %18, label %19, label %21, !dbg !10282

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #28, !dbg !10283
  br label %21, !dbg !10285

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10286
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !10287
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !10288
  ret i32 0, !dbg !10289
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #18 !dbg !10290 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10292
  %2 = and i32 %1, 240, !dbg !10292
  ret i32 %2, !dbg !10293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #17 !dbg !10294 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !10295
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !10300
  br label %1, !dbg !10301

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !10302
  %3 = icmp eq i32 %2, 1, !dbg !10303
  br i1 %3, label %4, label %1, !dbg !10301, !llvm.loop !10304

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !10306
  br label %5, !dbg !10309

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !10310
  %7 = icmp eq i32 %6, 1, !dbg !10311
  br i1 %7, label %8, label %5, !dbg !10309, !llvm.loop !10312

8:                                                ; preds = %5
  ret void, !dbg !10314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10315 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10316
  %2 = icmp eq i32 %1, 8, !dbg !10318
  br i1 %2, label %3, label %4, !dbg !10319

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10320
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !10322
  br label %4, !dbg !10323

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !10324
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10325
  %6 = and i32 %5, -196609, !dbg !10325
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10325
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10326
  %8 = and i32 %7, -251658241, !dbg !10326
  %9 = or i32 %8, 134217728, !dbg !10326
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10326
  tail call void @config_pll_sysclock() #28, !dbg !10327
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !10328
  br label %10, !dbg !10329

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !10330
  %12 = icmp eq i32 %11, 1, !dbg !10331
  br i1 %12, label %13, label %10, !dbg !10329, !llvm.loop !10332

13:                                               ; preds = %10
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #17 !dbg !10335 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10337, metadata !DIExpression()), !dbg !10338
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10339
  %2 = and i32 %1, -241, !dbg !10339
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10339
  ret void, !dbg !10340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #17 !dbg !10341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10343, metadata !DIExpression()), !dbg !10344
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10345
  %3 = and i32 %2, -4, !dbg !10345
  %4 = or i32 %3, %0, !dbg !10345
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10345
  ret void, !dbg !10346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #18 !dbg !10347 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10348
  %2 = and i32 %1, 12, !dbg !10348
  ret i32 %2, !dbg !10349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #17 !dbg !10350 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10352, metadata !DIExpression()), !dbg !10353
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10354
  %2 = and i32 %1, -7169, !dbg !10354
  %3 = or i32 %2, 4096, !dbg !10354
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10354
  ret void, !dbg !10355
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #17 !dbg !10356 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10358, metadata !DIExpression()), !dbg !10359
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10360
  %2 = and i32 %1, -57345, !dbg !10360
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10360
  ret void, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #17 !dbg !10362 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10363
  %2 = icmp eq i32 %1, 1, !dbg !10365
  br i1 %2, label %7, label %3, !dbg !10366

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !10367
  br label %4, !dbg !10369

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10370
  %6 = icmp eq i32 %5, 1, !dbg !10371
  br i1 %6, label %7, label %4, !dbg !10369, !llvm.loop !10372

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !10374
  br label %8, !dbg !10375

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10376
  %10 = icmp eq i32 %9, 0, !dbg !10377
  br i1 %10, label %11, label %8, !dbg !10375, !llvm.loop !10378

11:                                               ; preds = %8
  ret void, !dbg !10380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #17 !dbg !10381 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10382
  %2 = and i32 %1, -16777217, !dbg !10382
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10382
  ret void, !dbg !10383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #17 !dbg !10384 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10385
  %2 = or i32 %1, 16777216, !dbg !10385
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10385
  ret void, !dbg !10386
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #18 !dbg !10387 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10388
  %2 = lshr i32 %1, 25, !dbg !10389
  %3 = and i32 %2, 1, !dbg !10389
  ret i32 %3, !dbg !10390
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #18 !dbg !10391 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10392
  %2 = lshr i32 %1, 1, !dbg !10393
  %3 = and i32 %2, 1, !dbg !10393
  ret i32 %3, !dbg !10394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #17 !dbg !10395 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10396
  %2 = or i32 %1, 1, !dbg !10396
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10396
  ret void, !dbg !10397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #17 !dbg !10398 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10399
  %2 = and i32 %1, -262145, !dbg !10399
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10399
  ret void, !dbg !10400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #17 !dbg !10401 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10402
  %2 = or i32 %1, 65536, !dbg !10402
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10402
  ret void, !dbg !10403
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #18 !dbg !10404 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10405
  %2 = lshr i32 %1, 17, !dbg !10406
  %3 = and i32 %2, 1, !dbg !10406
  ret i32 %3, !dbg !10407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #17 !dbg !10408 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10409
  %2 = or i32 %1, 1, !dbg !10409
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10409
  ret void, !dbg !10410
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #18 !dbg !10411 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10412
  %2 = lshr i32 %1, 1, !dbg !10413
  %3 = and i32 %2, 1, !dbg !10413
  ret i32 %3, !dbg !10414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10415 {
  ret i32 16000000, !dbg !10417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #17 !dbg !10421 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !10422
  ret void, !dbg !10423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #17 !dbg !10424 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10428, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 8, metadata !10429, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 84, metadata !10430, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 0, metadata !10431, metadata !DIExpression()), !dbg !10432
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10433
  %2 = and i32 %1, -4227072, !dbg !10433
  %3 = or i32 %2, 4199688, !dbg !10433
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10433
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10434
  %5 = and i32 %4, -196609, !dbg !10434
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10434
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10435
  %7 = and i32 %6, -1879048193, !dbg !10435
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10435
  ret void, !dbg !10436
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10437 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !10438
  ret void, !dbg !10439
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10440 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10443, metadata !DIExpression()), !dbg !10445
  %2 = bitcast i32* %1 to i8*, !dbg !10446
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10446
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10444, metadata !DIExpression()), !dbg !10447
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10448
  %4 = or i32 %3, 268435456, !dbg !10448
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10448
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10449
  %6 = and i32 %5, 268435456, !dbg !10449
  store volatile i32 %6, i32* %1, align 4, !dbg !10450
  %7 = load volatile i32, i32* %1, align 4, !dbg !10451
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10452
  ret void, !dbg !10452
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10455, metadata !DIExpression()), !dbg !10456
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !10457
  br i1 %2, label %3, label %4, !dbg !10459

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !10460
  br label %4, !dbg !10461

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10456
  ret i32 %5, !dbg !10462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10468, metadata !DIExpression()), !dbg !10469
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10470, !srcloc !10472
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !10473
  ret i1 %1, !dbg !10474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10475 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #28, !dbg !10476
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #28, !dbg !10477
  ret void, !dbg !10478
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10481, metadata !DIExpression()), !dbg !10482
  %2 = icmp eq i32 %0, 10, !dbg !10483
  br i1 %2, label %3, label %4, !dbg !10485

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !10486
  br label %4, !dbg !10488

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10489
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !10490
  ret i32 %0, !dbg !10491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10492 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10495, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i8 %0, metadata !10496, metadata !DIExpression()), !dbg !10497
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10498, !srcloc !10500
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !10501
  ret void, !dbg !10502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10505, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i8 %0, metadata !10506, metadata !DIExpression()), !dbg !10508
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10507, metadata !DIExpression()), !dbg !10508
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10510
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10510
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #28, !dbg !10511
  ret void, !dbg !10512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10513 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10515, metadata !DIExpression()), !dbg !10516
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #28, !dbg !10517
  ret i1 %1, !dbg !10518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10566, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10567, metadata !DIExpression()), !dbg !10569
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10568, metadata !DIExpression()), !dbg !10569
  ret void, !dbg !10570
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10571 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10573, metadata !DIExpression()), !dbg !10578
  call void @llvm.dbg.value(metadata i8 %1, metadata !10574, metadata !DIExpression()), !dbg !10578
  call void @llvm.dbg.value(metadata i32 %2, metadata !10575, metadata !DIExpression()), !dbg !10578
  %5 = bitcast i32* %4 to i8*, !dbg !10579
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10579
  call void @llvm.dbg.value(metadata i32* %4, metadata !10577, metadata !DIExpression(DW_OP_deref)), !dbg !10578
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %6, metadata !10576, metadata !DIExpression()), !dbg !10578
  %7 = icmp eq i32 %6, 0, !dbg !10581
  br i1 %7, label %8, label %31, !dbg !10583

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10576, metadata !DIExpression()), !dbg !10578
  %9 = and i32 %2, 131072, !dbg !10584
  %10 = icmp eq i32 %9, 0, !dbg !10586
  br i1 %10, label %28, label %11, !dbg !10587

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10588
  %13 = icmp eq i32 %12, 0, !dbg !10591
  br i1 %13, label %18, label %14, !dbg !10592

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10593
  %16 = shl nuw i32 1, %15, !dbg !10593
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !10595
  br label %25, !dbg !10596

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10597
  %20 = icmp eq i32 %19, 0, !dbg !10599
  %21 = zext i8 %1 to i32, !dbg !10578
  br i1 %20, label %25, label %22, !dbg !10600

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10601
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !10603
  br label %25, !dbg !10604

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10605
  %27 = load i32, i32* %4, align 4, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %30, metadata !10577, metadata !DIExpression()), !dbg !10578
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !10607
  br label %31, !dbg !10608

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10605
  %30 = load i32, i32* %4, align 4, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %30, metadata !10577, metadata !DIExpression()), !dbg !10578
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !10607
  call void @llvm.dbg.value(metadata i32 0, metadata !10576, metadata !DIExpression()), !dbg !10578
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10609
  ret i32 %6, !dbg !10609
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #18 !dbg !10610 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10614, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.value(metadata i32* %1, metadata !10615, metadata !DIExpression()), !dbg !10619
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10620
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10620
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10620
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10616, metadata !DIExpression()), !dbg !10619
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10621
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10621
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10621
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10618, metadata !DIExpression()), !dbg !10619
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !10622
  store i32 %9, i32* %1, align 4, !dbg !10623
  ret i32 0, !dbg !10624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #17 !dbg !10625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10627, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 %1, metadata !10628, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 %2, metadata !10629, metadata !DIExpression()), !dbg !10633
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10634
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10634
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10634
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10630, metadata !DIExpression()), !dbg !10633
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10635
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10635
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10635
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10631, metadata !DIExpression()), !dbg !10633
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %10, metadata !10632, metadata !DIExpression()), !dbg !10633
  %11 = xor i32 %1, -1, !dbg !10637
  %12 = and i32 %10, %11, !dbg !10638
  %13 = and i32 %2, %1, !dbg !10639
  %14 = or i32 %12, %13, !dbg !10640
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !10641
  ret i32 0, !dbg !10642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10645, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.value(metadata i32 %1, metadata !10646, metadata !DIExpression()), !dbg !10649
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10650
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10650
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10650
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10647, metadata !DIExpression()), !dbg !10649
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10651
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10651
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10651
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10648, metadata !DIExpression()), !dbg !10649
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10652
  store volatile i32 %1, i32* %9, align 4, !dbg !10652
  ret i32 0, !dbg !10653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10656, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata i32 %1, metadata !10657, metadata !DIExpression()), !dbg !10660
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10661
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10661
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10661
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10658, metadata !DIExpression()), !dbg !10660
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10662
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10662
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10662
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10659, metadata !DIExpression()), !dbg !10660
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !10663
  ret i32 0, !dbg !10664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !10665 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10667, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i32 %1, metadata !10668, metadata !DIExpression()), !dbg !10671
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10672
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10672
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10672
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10669, metadata !DIExpression()), !dbg !10671
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10673
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10673
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10673
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10670, metadata !DIExpression()), !dbg !10671
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10674
  %10 = load volatile i32, i32* %9, align 4, !dbg !10674
  %11 = xor i32 %10, %1, !dbg !10674
  store volatile i32 %11, i32* %9, align 4, !dbg !10674
  ret i32 0, !dbg !10675
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10676 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10678, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i8 %1, metadata !10679, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i32 %2, metadata !10680, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i32 %3, metadata !10681, metadata !DIExpression()), !dbg !10688
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10689
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10689
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10689
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10682, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i8* undef, metadata !10683, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i32 0, metadata !10685, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.value(metadata i32 0, metadata !10686, metadata !DIExpression()), !dbg !10688
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10690

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10691
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !10695
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10696
  %12 = load i32, i32* %11, align 4, !dbg !10696
  %13 = icmp eq i32 %10, %12, !dbg !10697
  br i1 %13, label %14, label %29, !dbg !10698

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #28, !dbg !10699
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #28, !dbg !10701
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #28, !dbg !10702
  br label %29, !dbg !10703

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10704
  %17 = load i8*, i8** %16, align 4, !dbg !10704
  call void @llvm.dbg.value(metadata i8* %17, metadata !10683, metadata !DIExpression()), !dbg !10688
  %18 = zext i8 %1 to i32, !dbg !10705
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #28, !dbg !10707
  %20 = icmp eq i32 %19, 0, !dbg !10708
  br i1 %20, label %21, label %29, !dbg !10709

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10710
  %23 = load i32, i32* %22, align 4, !dbg !10710
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !10711
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10712

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10685, metadata !DIExpression()), !dbg !10688
  br label %27, !dbg !10713

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10685, metadata !DIExpression()), !dbg !10688
  br label %27, !dbg !10715

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10685, metadata !DIExpression()), !dbg !10688
  br label %27, !dbg !10716

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10688
  call void @llvm.dbg.value(metadata i32 %28, metadata !10685, metadata !DIExpression()), !dbg !10688
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #28, !dbg !10717
  tail call void @stm32_exti_enable(i32 noundef %18) #28, !dbg !10718
  br label %29, !dbg !10718

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10688
  call void @llvm.dbg.value(metadata i32 %30, metadata !10686, metadata !DIExpression()), !dbg !10688
  call void @llvm.dbg.label(metadata !10687), !dbg !10719
  ret i32 %30, !dbg !10720
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #16 !dbg !10721 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10723, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10724, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i1 %2, metadata !10725, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10727
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10728
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10728
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10728
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10726, metadata !DIExpression()), !dbg !10727
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10729
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !10730
  ret i32 %8, !dbg !10731
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #16 !dbg !10732 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10738, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10739, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata i1 %2, metadata !10740, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10741
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !10742
  br i1 %4, label %10, label %5, !dbg !10744

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10745
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !10748
  %8 = or i1 %7, %2, !dbg !10749
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10749
  br i1 %2, label %11, label %13, !dbg !10749

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10750

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10751
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !10754
  br label %13, !dbg !10755

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10741
  ret i32 %14, !dbg !10756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10761, metadata !DIExpression()), !dbg !10762
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10763
  %3 = icmp eq %struct._snode* %2, null, !dbg !10763
  ret i1 %3, !dbg !10763
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #16 !dbg !10764 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10768, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10769, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10770, metadata !DIExpression()), !dbg !10772
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10773
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10770, metadata !DIExpression()), !dbg !10772
  %4 = icmp eq %struct._snode* %3, null, !dbg !10775
  br i1 %4, label %15, label %5, !dbg !10773

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10770, metadata !DIExpression()), !dbg !10772
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10777
  br i1 %6, label %9, label %11, !dbg !10780

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10770, metadata !DIExpression()), !dbg !10772
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10777
  br i1 %8, label %9, label %11, !dbg !10780, !llvm.loop !10781

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !10782
  br label %15, !dbg !10782

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10770, metadata !DIExpression()), !dbg !10772
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !10775
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10771, metadata !DIExpression()), !dbg !10772
  %14 = icmp eq %struct._snode* %13, null, !dbg !10775
  br i1 %14, label %15, label %7, !dbg !10773, !llvm.loop !10781

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !10785 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10789, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10790, metadata !DIExpression()), !dbg !10791
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10792
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !10792
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10792
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10793
  %5 = icmp eq %struct._snode* %4, null, !dbg !10793
  br i1 %5, label %6, label %8, !dbg !10792

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10795
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !10795
  br label %8, !dbg !10795

8:                                                ; preds = %6, %2
  ret void, !dbg !10792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10797 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10801, metadata !DIExpression()), !dbg !10802
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10803
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10803
  ret %struct._snode* %3, !dbg !10804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10805 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10809, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10810, metadata !DIExpression()), !dbg !10811
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10812
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10813
  ret void, !dbg !10814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10815 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10817, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10818, metadata !DIExpression()), !dbg !10819
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10820
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10825, metadata !DIExpression()), !dbg !10826
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10827
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10827
  ret %struct._snode* %3, !dbg !10828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10831, metadata !DIExpression()), !dbg !10833
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10832, metadata !DIExpression()), !dbg !10833
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10834
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10835
  ret void, !dbg !10836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !10837 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10841, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10842, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10843, metadata !DIExpression()), !dbg !10844
  %4 = icmp eq %struct._snode* %1, null, !dbg !10845
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !10847
  br i1 %4, label %6, label %11, !dbg !10848

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !10849
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10851
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10851
  br i1 %8, label %9, label %15, !dbg !10849

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10853
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !10853
  br label %15, !dbg !10853

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !10855
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10857
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10857
  br i1 %13, label %14, label %15, !dbg !10855

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !10859
  br label %15, !dbg !10859

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !10848
  ret void, !dbg !10848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #3 !dbg !10861 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10865, metadata !DIExpression()), !dbg !10866
  %2 = icmp eq %struct._snode* %0, null, !dbg !10867
  br i1 %2, label %5, label %3, !dbg !10867

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !10867
  br label %5, !dbg !10867

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10867
  ret %struct._snode* %6, !dbg !10867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10868 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10870, metadata !DIExpression()), !dbg !10871
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !10872
  ret %struct._snode* %2, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10875, metadata !DIExpression()), !dbg !10876
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10877
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10877
  ret %struct._snode* %3, !dbg !10878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10881, metadata !DIExpression()), !dbg !10884
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !10885, !range !10886
  call void @llvm.dbg.value(metadata i32 %2, metadata !10882, metadata !DIExpression()), !dbg !10884
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %3, metadata !10883, metadata !DIExpression()), !dbg !10884
  ret i32 %3, !dbg !10888
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10891, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i8* %1, metadata !10892, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i8* %1, metadata !10893, metadata !DIExpression()), !dbg !10894
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10895
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10895
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10896
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10896
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10896
  %8 = shl nuw i32 1, %0, !dbg !10897
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !10898
  ret void, !dbg !10899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10900 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10904, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %1, metadata !10905, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10906, metadata !DIExpression()), !dbg !10910
  %4 = bitcast i64* %3 to i8*, !dbg !10911
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10911
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10908, metadata !DIExpression()), !dbg !10910
  store i64 70368744177732, i64* %3, align 8, !dbg !10912
  call void @llvm.dbg.value(metadata i64* %3, metadata !10908, metadata !DIExpression(DW_OP_deref)), !dbg !10910
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !10913
  call void @llvm.dbg.value(metadata i32 %5, metadata !10909, metadata !DIExpression()), !dbg !10910
  %6 = icmp eq i32 %5, 0, !dbg !10914
  br i1 %6, label %7, label %8, !dbg !10916

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !10917
  br label %8, !dbg !10918

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10919
  ret void, !dbg !10919
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10920 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10922, metadata !DIExpression()), !dbg !10925
  call void @llvm.dbg.value(metadata i8* %0, metadata !10923, metadata !DIExpression()), !dbg !10925
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10926
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10924, metadata !DIExpression()), !dbg !10925
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10927
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10927
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #28, !dbg !10928
  ret i32 %5, !dbg !10929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10932, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.value(metadata i32 %1, metadata !10933, metadata !DIExpression()), !dbg !10935
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %3, metadata !10934, metadata !DIExpression()), !dbg !10935
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !10937
  ret void, !dbg !10938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10943, metadata !DIExpression()), !dbg !10944
  %2 = sdiv i32 %0, 4, !dbg !10945
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10946
  %6 = add nsw i32 %5, 16, !dbg !10947
  %7 = shl i32 15, %6, !dbg !10948
  %8 = or i32 %7, %2, !dbg !10949
  ret i32 %8, !dbg !10950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10955, metadata !DIExpression()), !dbg !10957
  call void @llvm.dbg.value(metadata i32 %1, metadata !10956, metadata !DIExpression()), !dbg !10957
  %3 = and i32 %1, 255, !dbg !10958
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10958
  %5 = load volatile i32, i32* %4, align 4, !dbg !10958
  %6 = lshr i32 %1, 16, !dbg !10958
  %7 = xor i32 %6, -1, !dbg !10958
  %8 = and i32 %5, %7, !dbg !10958
  call void @llvm.dbg.value(metadata i32 %6, metadata !10959, metadata !DIExpression()) #26, !dbg !10963
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10965, !srcloc !10966
  call void @llvm.dbg.value(metadata i32 %9, metadata !10962, metadata !DIExpression()) #26, !dbg !10963
  call void @llvm.dbg.value(metadata i32 %9, metadata !10967, metadata !DIExpression()) #26, !dbg !10972
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10974, !range !5118
  %11 = shl i32 %0, %10, !dbg !10958
  %12 = or i32 %11, %8, !dbg !10958
  store volatile i32 %12, i32* %4, align 4, !dbg !10958
  ret void, !dbg !10975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10976 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10980, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10981, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata i32 %2, metadata !10982, metadata !DIExpression()), !dbg !10985
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !10986
  %5 = icmp eq %struct._snode* %4, null, !dbg !10986
  br i1 %5, label %21, label %6, !dbg !10986

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !10988
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10984, metadata !DIExpression()), !dbg !10985
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10983, metadata !DIExpression()), !dbg !10985
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10989
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10989
  %11 = load i32, i32* %10, align 4, !dbg !10989
  %12 = and i32 %11, %2, !dbg !10993
  %13 = icmp eq i32 %12, 0, !dbg !10993
  br i1 %13, label %19, label %14, !dbg !10994

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10983, metadata !DIExpression()), !dbg !10985
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10995
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10995
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10995
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #28, !dbg !10997
  br label %19, !dbg !10998

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10983, metadata !DIExpression()), !dbg !10985
  %20 = icmp eq %struct._snode* %8, null, !dbg !10999
  br i1 %20, label %21, label %6, !dbg !10999

21:                                               ; preds = %19, %3
  ret void, !dbg !11000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11003, metadata !DIExpression()), !dbg !11004
  %2 = and i32 %0, 255, !dbg !11005
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11005
  %4 = load volatile i32, i32* %3, align 4, !dbg !11005
  %5 = lshr i32 %0, 16, !dbg !11005
  %6 = and i32 %4, %5, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %5, metadata !10959, metadata !DIExpression()) #26, !dbg !11006
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !11008, !srcloc !10966
  call void @llvm.dbg.value(metadata i32 %7, metadata !10962, metadata !DIExpression()) #26, !dbg !11006
  call void @llvm.dbg.value(metadata i32 %7, metadata !10967, metadata !DIExpression()) #26, !dbg !11009
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11011, !range !5118
  %9 = lshr i32 %6, %8, !dbg !11012
  ret i32 %9, !dbg !11013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11019, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.value(metadata i32 %1, metadata !11020, metadata !DIExpression()), !dbg !11021
  %3 = shl i32 %1, 16, !dbg !11022
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11022
  store volatile i32 %3, i32* %4, align 4, !dbg !11022
  ret void, !dbg !11023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !11024 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11028, metadata !DIExpression()), !dbg !11029
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11030
  %3 = load volatile i32, i32* %2, align 4, !dbg !11030
  ret i32 %3, !dbg !11031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11032 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11034, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i32 %1, metadata !11035, metadata !DIExpression()), !dbg !11036
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11037
  store volatile i32 %1, i32* %3, align 4, !dbg !11037
  ret void, !dbg !11038
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !11039 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11041, metadata !DIExpression()), !dbg !11042
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11043
  %3 = load volatile i32, i32* %2, align 4, !dbg !11043
  ret i32 %3, !dbg !11044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #10 !dbg !11045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11049, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32* %1, metadata !11050, metadata !DIExpression()), !dbg !11051
  %3 = and i32 %0, 131072, !dbg !11052
  %4 = icmp eq i32 %3, 0, !dbg !11054
  br i1 %4, label %22, label %5, !dbg !11055

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11056
  %6 = and i32 %0, 2, !dbg !11058
  %7 = icmp eq i32 %6, 0, !dbg !11060
  br i1 %7, label %11, label %8, !dbg !11061

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11062
  %10 = icmp eq i32 %9, 0, !dbg !11062
  br i1 %10, label %33, label %11, !dbg !11065

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11066
  store i32 %12, i32* %1, align 4, !dbg !11066
  %13 = and i32 %0, 16, !dbg !11067
  %14 = icmp eq i32 %13, 0, !dbg !11069
  br i1 %14, label %17, label %15, !dbg !11070

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11071
  br label %31, !dbg !11073

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11074
  %19 = icmp eq i32 %18, 0, !dbg !11076
  br i1 %19, label %33, label %20, !dbg !11077

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11078
  br label %31, !dbg !11080

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11081
  %24 = icmp eq i32 %23, 0, !dbg !11083
  br i1 %24, label %31, label %25, !dbg !11084

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11085
  %27 = icmp eq i32 %26, 0, !dbg !11088
  br i1 %27, label %28, label %31, !dbg !11089

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11090
  br label %33, !dbg !11091

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11051
  ret i32 %34, !dbg !11091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11096, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %1, metadata !11097, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %2, metadata !11098, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %3, metadata !11099, metadata !DIExpression()), !dbg !11107
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11108
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11108
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11108
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11100, metadata !DIExpression()), !dbg !11107
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11109
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11109
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11109
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11101, metadata !DIExpression()), !dbg !11107
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !11110
  call void @llvm.dbg.value(metadata i32 %11, metadata !11102, metadata !DIExpression()), !dbg !11107
  %12 = and i32 %2, 48, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %12, metadata !11103, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %2, metadata !11104, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %2, metadata !11105, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %2, metadata !11106, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11107
  %13 = lshr i32 %2, 6, !dbg !11112
  %14 = and i32 %13, 1, !dbg !11112
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !11113
  %15 = lshr i32 %2, 7, !dbg !11114
  %16 = and i32 %15, 3, !dbg !11114
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !11115
  %17 = lshr i32 %2, 9, !dbg !11116
  %18 = and i32 %17, 3, !dbg !11116
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !11117
  %19 = icmp eq i32 %12, 32, !dbg !11118
  br i1 %19, label %20, label %24, !dbg !11120

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11121
  br i1 %21, label %22, label %23, !dbg !11124

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11125
  br label %24, !dbg !11127

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11128
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11130
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !11131
  ret void, !dbg !11132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !11133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11135, metadata !DIExpression()), !dbg !11137
  %2 = shl nuw i32 1, %0, !dbg !11138
  call void @llvm.dbg.value(metadata i32 %2, metadata !11136, metadata !DIExpression()), !dbg !11137
  ret i32 %2, !dbg !11139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11140 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11144, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %1, metadata !11145, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i32 %2, metadata !11146, metadata !DIExpression()), !dbg !11147
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11148
  %5 = load volatile i32, i32* %4, align 4, !dbg !11148
  %6 = xor i32 %1, -1, !dbg !11148
  %7 = and i32 %5, %6, !dbg !11148
  %8 = mul i32 %2, %1, !dbg !11148
  %9 = or i32 %7, %8, !dbg !11148
  store volatile i32 %9, i32* %4, align 4, !dbg !11148
  ret void, !dbg !11149
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11150 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11152, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i32 %1, metadata !11153, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i32 %2, metadata !11154, metadata !DIExpression()), !dbg !11155
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11156
  %5 = load volatile i32, i32* %4, align 4, !dbg !11156
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11157
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11159, !srcloc !10966
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11160
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11162, !range !5118
  %8 = shl nuw nsw i32 %7, 1, !dbg !11156
  %9 = shl i32 3, %8, !dbg !11156
  %10 = xor i32 %9, -1, !dbg !11156
  %11 = and i32 %5, %10, !dbg !11156
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11165
  %12 = shl i32 %2, %8, !dbg !11156
  %13 = or i32 %11, %12, !dbg !11156
  store volatile i32 %13, i32* %4, align 4, !dbg !11156
  ret void, !dbg !11167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11168 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11170, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i32 %1, metadata !11171, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i32 %2, metadata !11172, metadata !DIExpression()), !dbg !11173
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11174
  %5 = load volatile i32, i32* %4, align 4, !dbg !11174
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11175
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11177, !srcloc !10966
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11175
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11178
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11180, !range !5118
  %8 = shl nuw nsw i32 %7, 1, !dbg !11174
  %9 = shl i32 3, %8, !dbg !11174
  %10 = xor i32 %9, -1, !dbg !11174
  %11 = and i32 %5, %10, !dbg !11174
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11181
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11181
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11183
  %12 = shl i32 %2, %8, !dbg !11174
  %13 = or i32 %11, %12, !dbg !11174
  store volatile i32 %13, i32* %4, align 4, !dbg !11174
  ret void, !dbg !11185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11186 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11188, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.value(metadata i32 %1, metadata !11189, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.value(metadata i32 %2, metadata !11190, metadata !DIExpression()), !dbg !11191
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11192
  %5 = load volatile i32, i32* %4, align 4, !dbg !11192
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11193
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11195, !srcloc !10966
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11196
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11198, !range !5118
  %8 = shl nuw nsw i32 %7, 2, !dbg !11192
  %9 = shl i32 15, %8, !dbg !11192
  %10 = xor i32 %9, -1, !dbg !11192
  %11 = and i32 %5, %10, !dbg !11192
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11199
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11199
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11201
  %12 = shl i32 %2, %8, !dbg !11192
  %13 = or i32 %11, %12, !dbg !11192
  store volatile i32 %13, i32* %4, align 4, !dbg !11192
  ret void, !dbg !11203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11204 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11206, metadata !DIExpression()), !dbg !11209
  call void @llvm.dbg.value(metadata i32 %1, metadata !11207, metadata !DIExpression()), !dbg !11209
  call void @llvm.dbg.value(metadata i32 %2, metadata !11208, metadata !DIExpression()), !dbg !11209
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11210
  %5 = load volatile i32, i32* %4, align 4, !dbg !11210
  %6 = lshr i32 %1, 8, !dbg !11210
  call void @llvm.dbg.value(metadata i32 %6, metadata !10959, metadata !DIExpression()) #26, !dbg !11211
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11213, !srcloc !10966
  call void @llvm.dbg.value(metadata i32 %7, metadata !10962, metadata !DIExpression()) #26, !dbg !11211
  call void @llvm.dbg.value(metadata i32 %7, metadata !10967, metadata !DIExpression()) #26, !dbg !11214
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11216, !range !5118
  %9 = shl nuw nsw i32 %8, 2, !dbg !11210
  %10 = shl i32 15, %9, !dbg !11210
  %11 = xor i32 %10, -1, !dbg !11210
  %12 = and i32 %5, %11, !dbg !11210
  call void @llvm.dbg.value(metadata i32 %6, metadata !10959, metadata !DIExpression()) #26, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %7, metadata !10962, metadata !DIExpression()) #26, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %7, metadata !10967, metadata !DIExpression()) #26, !dbg !11219
  %13 = shl i32 %2, %9, !dbg !11210
  %14 = or i32 %12, %13, !dbg !11210
  store volatile i32 %14, i32* %4, align 4, !dbg !11210
  ret void, !dbg !11221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11222 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11224, metadata !DIExpression()), !dbg !11227
  call void @llvm.dbg.value(metadata i32 %1, metadata !11225, metadata !DIExpression()), !dbg !11227
  call void @llvm.dbg.value(metadata i32 %2, metadata !11226, metadata !DIExpression()), !dbg !11227
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11228
  %5 = load volatile i32, i32* %4, align 4, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11229
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11231, !srcloc !10966
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11229
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11232
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11234, !range !5118
  %8 = shl nuw nsw i32 %7, 1, !dbg !11228
  %9 = shl i32 3, %8, !dbg !11228
  %10 = xor i32 %9, -1, !dbg !11228
  %11 = and i32 %5, %10, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %1, metadata !10959, metadata !DIExpression()) #26, !dbg !11235
  call void @llvm.dbg.value(metadata i32 %6, metadata !10962, metadata !DIExpression()) #26, !dbg !11235
  call void @llvm.dbg.value(metadata i32 %6, metadata !10967, metadata !DIExpression()) #26, !dbg !11237
  %12 = shl i32 %2, %8, !dbg !11228
  %13 = or i32 %11, %12, !dbg !11228
  store volatile i32 %13, i32* %4, align 4, !dbg !11228
  ret void, !dbg !11239
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11240 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11242, metadata !DIExpression()), !dbg !11245
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11246
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11246
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11246
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11243, metadata !DIExpression()), !dbg !11245
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11247
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11248
  %6 = tail call fastcc zeroext i1 @device_is_ready.123() #27, !dbg !11249
  br i1 %6, label %7, label %11, !dbg !11251

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %8, metadata !11244, metadata !DIExpression()), !dbg !11245
  %9 = icmp slt i32 %8, 0, !dbg !11253
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11255
  br label %11, !dbg !11255

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11245
  ret i32 %12, !dbg !11256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.123() unnamed_addr #1 !dbg !11257 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11261, metadata !DIExpression()), !dbg !11262
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11263, !srcloc !11265
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.124() #27, !dbg !11266
  ret i1 %1, !dbg !11267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11268 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11272, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.value(metadata i8 1, metadata !11273, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11274, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.value(metadata i32 0, metadata !11275, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11276, metadata !DIExpression()), !dbg !11277
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11278
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11278
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11278
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11274, metadata !DIExpression()), !dbg !11277
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11279
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11282
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !11283
  call void @llvm.dbg.value(metadata i32 %7, metadata !11275, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.value(metadata i32 %7, metadata !11275, metadata !DIExpression()), !dbg !11277
  ret i32 %7, !dbg !11284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.124() unnamed_addr #1 !dbg !11285 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11287, metadata !DIExpression()), !dbg !11288
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #28, !dbg !11289
  ret i1 %1, !dbg !11290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11291 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11295, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 %1, metadata !11296, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 %2, metadata !11297, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 %3, metadata !11298, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 0, metadata !11299, metadata !DIExpression()), !dbg !11303
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !11304
  %5 = icmp eq i32 %3, 17, !dbg !11305
  br i1 %5, label %6, label %14, !dbg !11306

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11307
  call void @llvm.dbg.value(metadata i32 %7, metadata !11300, metadata !DIExpression()), !dbg !11308
  %8 = icmp eq i32 %7, 0, !dbg !11309
  %9 = shl nuw i32 1, %1, !dbg !11311
  br i1 %8, label %12, label %10, !dbg !11312

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11313
  br label %14, !dbg !11315

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11316
  br label %14, !dbg !11319

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11320
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11323, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i8* %1, metadata !11324, metadata !DIExpression()), !dbg !11327
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11328
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11328
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11328
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11325, metadata !DIExpression()), !dbg !11327
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11329
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11329
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !11331
  %9 = icmp eq i32 %8, 0, !dbg !11331
  br i1 %9, label %12, label %10, !dbg !11332

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11333
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !11335
  br label %12, !dbg !11336

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11337
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11339
  %15 = icmp eq i32 %14, 0, !dbg !11339
  br i1 %15, label %19, label %16, !dbg !11340

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11341
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !11342
  store i8 %18, i8* %1, align 1, !dbg !11343
  br label %19, !dbg !11344

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11327
  ret i32 %20, !dbg !11345
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11346 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11348, metadata !DIExpression()), !dbg !11352
  call void @llvm.dbg.value(metadata i8 %1, metadata !11349, metadata !DIExpression()), !dbg !11352
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11353
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11353
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11353
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11350, metadata !DIExpression()), !dbg !11352
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11354

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11355
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !11358
  %10 = icmp eq i32 %9, 0, !dbg !11358
  br i1 %10, label %18, label %11, !dbg !11359

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11360, !srcloc !11367
  call void @llvm.dbg.value(metadata i32 undef, metadata !11363, metadata !DIExpression()) #26, !dbg !11368
  call void @llvm.dbg.value(metadata i32 undef, metadata !11364, metadata !DIExpression()) #26, !dbg !11368
  call void @llvm.dbg.value(metadata i32 undef, metadata !11351, metadata !DIExpression()), !dbg !11352
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11369
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11371
  %15 = icmp eq i32 %14, 0, !dbg !11371
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11360
  br i1 %15, label %17, label %19, !dbg !11372

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11363, metadata !DIExpression()) #26, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %16, metadata !11351, metadata !DIExpression()), !dbg !11352
  call void @llvm.dbg.value(metadata i32 undef, metadata !11373, metadata !DIExpression()) #26, !dbg !11376
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11378, !srcloc !11379
  br label %18, !dbg !11380

18:                                               ; preds = %17, %7
  br label %7, !dbg !11355, !llvm.loop !11381

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11360
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11383
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !11384
  call void @llvm.dbg.value(metadata i32 %20, metadata !11373, metadata !DIExpression()) #26, !dbg !11385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11387, !srcloc !11379
  ret void, !dbg !11388
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11391, metadata !DIExpression()), !dbg !11394
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11395
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11395
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11395
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11392, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata i32 0, metadata !11393, metadata !DIExpression()), !dbg !11394
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11396
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11396
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !11398
  %8 = icmp ne i32 %7, 0, !dbg !11398
  %9 = zext i1 %8 to i32, !dbg !11399
  call void @llvm.dbg.value(metadata i32 %9, metadata !11393, metadata !DIExpression()), !dbg !11394
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11400
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !11402
  %12 = icmp eq i32 %11, 0, !dbg !11402
  %13 = or i32 %9, 2, !dbg !11403
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %14, metadata !11393, metadata !DIExpression()), !dbg !11394
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11404
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !11406
  %17 = icmp eq i32 %16, 0, !dbg !11406
  %18 = or i32 %14, 4, !dbg !11407
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11407
  call void @llvm.dbg.value(metadata i32 %19, metadata !11393, metadata !DIExpression()), !dbg !11394
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11408
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !11410
  %22 = icmp eq i32 %21, 0, !dbg !11410
  %23 = or i32 %19, 8, !dbg !11411
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11411
  call void @llvm.dbg.value(metadata i32 %24, metadata !11393, metadata !DIExpression()), !dbg !11394
  %25 = and i32 %24, 8, !dbg !11412
  %26 = icmp eq i32 %25, 0, !dbg !11412
  br i1 %26, label %29, label %27, !dbg !11414

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11415
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !11417
  br label %29, !dbg !11418

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11419
  %31 = icmp eq i32 %30, 0, !dbg !11419
  br i1 %31, label %34, label %32, !dbg !11421

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11422
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !11424
  br label %34, !dbg !11425

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11426
  %36 = icmp eq i32 %35, 0, !dbg !11426
  br i1 %36, label %39, label %37, !dbg !11428

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11429
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !11431
  br label %39, !dbg !11432

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11433
  %41 = icmp eq i32 %40, 0, !dbg !11433
  br i1 %41, label %44, label %42, !dbg !11435

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11436
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !11438
  br label %44, !dbg !11439

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11440
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !11441
  ret i32 %24, !dbg !11442
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11445, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11446, metadata !DIExpression()), !dbg !11454
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11455
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11455
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11455
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11447, metadata !DIExpression()), !dbg !11454
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11456
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11456
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11448, metadata !DIExpression()), !dbg !11454
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11457
  %10 = load i8, i8* %9, align 4, !dbg !11457
  %11 = zext i8 %10 to i32, !dbg !11458
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !11459
  call void @llvm.dbg.value(metadata i32 %12, metadata !11450, metadata !DIExpression()), !dbg !11454
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11460
  %14 = load i8, i8* %13, align 1, !dbg !11460
  %15 = zext i8 %14 to i32, !dbg !11461
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !11462
  call void @llvm.dbg.value(metadata i32 %16, metadata !11451, metadata !DIExpression()), !dbg !11454
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11463
  %18 = load i8, i8* %17, align 2, !dbg !11463
  %19 = zext i8 %18 to i32, !dbg !11464
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !11465
  call void @llvm.dbg.value(metadata i32 %20, metadata !11452, metadata !DIExpression()), !dbg !11454
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11466
  %22 = load i8, i8* %21, align 1, !dbg !11466
  %23 = zext i8 %22 to i32, !dbg !11467
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !11468
  call void @llvm.dbg.value(metadata i32 %24, metadata !11453, metadata !DIExpression()), !dbg !11454
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11469

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11471
  br i1 %26, label %69, label %27, !dbg !11473

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11474

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11475
  br i1 %29, label %65, label %30, !dbg !11475

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11477
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11454
  br i1 %31, label %38, label %34, !dbg !11479

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11480
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !11480

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11483
  br i1 %37, label %38, label %69, !dbg !11484

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11485
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !11486
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !11487
  %41 = icmp eq i32 %12, %40, !dbg !11489
  br i1 %41, label %43, label %42, !dbg !11490

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !11491
  br label %43, !dbg !11493

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !11494
  %45 = icmp eq i32 %16, %44, !dbg !11496
  br i1 %45, label %47, label %46, !dbg !11497

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !11498
  br label %47, !dbg !11500

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !11501
  %49 = icmp eq i32 %20, %48, !dbg !11503
  br i1 %49, label %51, label %50, !dbg !11504

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !11505
  br label %51, !dbg !11507

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !11508
  %53 = icmp eq i32 %24, %52, !dbg !11510
  br i1 %53, label %55, label %54, !dbg !11511

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !11512
  br label %55, !dbg !11514

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11515
  %57 = load i32, i32* %56, align 4, !dbg !11515
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11517
  %59 = load i32, i32* %58, align 4, !dbg !11517
  %60 = icmp eq i32 %57, %59, !dbg !11518
  br i1 %60, label %63, label %61, !dbg !11519

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !11520
  %62 = load i32, i32* %56, align 4, !dbg !11522
  store i32 %62, i32* %58, align 4, !dbg !11523
  br label %63, !dbg !11524

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11525
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !11526
  br label %69, !dbg !11527

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11475
  %67 = and i8 %66, 1, !dbg !11475
  %68 = icmp eq i8 %67, 0, !dbg !11475
  br i1 %68, label %30, label %69, !dbg !11475

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11454
  ret i32 %70, !dbg !11528
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11529 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11531, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11532, metadata !DIExpression()), !dbg !11534
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11535
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11535
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11535
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11533, metadata !DIExpression()), !dbg !11534
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11536
  %7 = load i32, i32* %6, align 4, !dbg !11536
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11537
  store i32 %7, i32* %8, align 4, !dbg !11538
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11539, !range !11540
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !11541
  %11 = trunc i32 %10 to i8, !dbg !11541
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11542
  store i8 %11, i8* %12, align 4, !dbg !11543
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !11544, !range !11545
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !11546
  %15 = trunc i32 %14 to i8, !dbg !11546
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11547
  store i8 %15, i8* %16, align 1, !dbg !11548
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !11549
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11550, !range !11540
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !11551
  %20 = trunc i32 %19 to i8, !dbg !11551
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11552
  store i8 %20, i8* %21, align 2, !dbg !11553
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !11554, !range !11555
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !11556
  %24 = trunc i32 %23 to i8, !dbg !11556
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11557
  store i8 %24, i8* %25, align 1, !dbg !11558
  ret i32 0, !dbg !11559
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11564, metadata !DIExpression()), !dbg !11566
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11567
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11567
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11567
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11565, metadata !DIExpression()), !dbg !11566
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11568
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11568
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !11569
  ret i32 %7, !dbg !11570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11575, metadata !DIExpression()), !dbg !11576
  %2 = icmp eq i32 %0, 1024, !dbg !11577
  %3 = select i1 %2, i32 2, i32 0, !dbg !11577
  %4 = icmp eq i32 %0, 1536, !dbg !11577
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11577
  ret i32 %5, !dbg !11578
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11581, metadata !DIExpression()), !dbg !11583
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11584
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11584
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11584
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11582, metadata !DIExpression()), !dbg !11583
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11585
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11585
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !11586
  ret i32 %7, !dbg !11587
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !11588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11592, metadata !DIExpression()), !dbg !11593
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11594
  %3 = icmp ult i32 %2, 4, !dbg !11594
  br i1 %3, label %4, label %7, !dbg !11594

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11594
  %6 = load i32, i32* %5, align 4, !dbg !11594
  br label %7, !dbg !11594

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11595
  ret i32 %8, !dbg !11597
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11598 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11600, metadata !DIExpression()), !dbg !11602
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11603
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11603
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11603
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11601, metadata !DIExpression()), !dbg !11602
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11604
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11604
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !11605
  ret i32 %7, !dbg !11606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11611, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata i32 %1, metadata !11612, metadata !DIExpression()), !dbg !11613
  %3 = icmp eq i32 %0, 4096, !dbg !11614
  %4 = icmp eq i32 %1, 0, !dbg !11614
  %5 = select i1 %4, i32 4, i32 3, !dbg !11614
  %6 = select i1 %4, i32 3, i32 2, !dbg !11614
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11614
  ret i32 %7, !dbg !11615
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11618, metadata !DIExpression()), !dbg !11620
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11621
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11621
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11621
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11619, metadata !DIExpression()), !dbg !11620
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11622
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11622
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !11623
  ret i32 %7, !dbg !11624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11625 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11629, metadata !DIExpression()), !dbg !11630
  %2 = icmp eq i32 %0, 768, !dbg !11631
  %3 = zext i1 %2 to i32, !dbg !11630
  ret i32 %3, !dbg !11633
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11634 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11639, metadata !DIExpression()), !dbg !11640
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11641
  %3 = load volatile i32, i32* %2, align 4, !dbg !11641
  %4 = and i32 %3, 768, !dbg !11641
  ret i32 %4, !dbg !11642
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11643 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11645, metadata !DIExpression()), !dbg !11646
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11647
  %3 = load volatile i32, i32* %2, align 4, !dbg !11647
  %4 = and i32 %3, 4096, !dbg !11647
  ret i32 %4, !dbg !11648
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11649 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11653
  %3 = load volatile i32, i32* %2, align 4, !dbg !11653
  %4 = and i32 %3, 12288, !dbg !11653
  ret i32 %4, !dbg !11654
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11655 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11657, metadata !DIExpression()), !dbg !11658
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11659
  %3 = load volatile i32, i32* %2, align 4, !dbg !11659
  %4 = and i32 %3, 1536, !dbg !11659
  ret i32 %4, !dbg !11660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11665, metadata !DIExpression()), !dbg !11666
  %2 = icmp eq i32 %0, 2, !dbg !11667
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11667
  %4 = icmp eq i32 %0, 1, !dbg !11667
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11667
  ret i32 %5, !dbg !11668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11673, metadata !DIExpression()), !dbg !11674
  %2 = icmp ult i32 %0, 3, !dbg !11675
  br i1 %2, label %3, label %6, !dbg !11675

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11675
  %5 = load i32, i32* %4, align 4, !dbg !11675
  br label %6, !dbg !11675

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11676
  ret i32 %7, !dbg !11678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11683, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i32 %1, metadata !11684, metadata !DIExpression()), !dbg !11685
  %3 = icmp eq i32 %0, 4, !dbg !11686
  %4 = icmp eq i32 %1, 0, !dbg !11686
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11686
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11686
  ret i32 %6, !dbg !11687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11692, metadata !DIExpression()), !dbg !11693
  %2 = icmp eq i32 %0, 1, !dbg !11694
  %3 = select i1 %2, i32 768, i32 0, !dbg !11693
  ret i32 %3, !dbg !11696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11701, metadata !DIExpression()), !dbg !11702
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11703
  %3 = load volatile i32, i32* %2, align 4, !dbg !11703
  %4 = and i32 %3, -8193, !dbg !11703
  store volatile i32 %4, i32* %2, align 4, !dbg !11703
  ret void, !dbg !11704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11709, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 %1, metadata !11710, metadata !DIExpression()), !dbg !11712
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11713
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11713
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11713
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11711, metadata !DIExpression()), !dbg !11712
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11714
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11714
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11715
  ret void, !dbg !11716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11719, metadata !DIExpression()), !dbg !11722
  call void @llvm.dbg.value(metadata i32 %1, metadata !11720, metadata !DIExpression()), !dbg !11722
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11723
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11723
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11723
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11721, metadata !DIExpression()), !dbg !11722
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11724
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11724
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11729, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i32 %1, metadata !11730, metadata !DIExpression()), !dbg !11732
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11733
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11733
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11733
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11731, metadata !DIExpression()), !dbg !11732
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11734
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11734
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11735
  ret void, !dbg !11736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !11737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11739, metadata !DIExpression()), !dbg !11742
  call void @llvm.dbg.value(metadata i32 %1, metadata !11740, metadata !DIExpression()), !dbg !11742
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11743
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11743
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11743
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11741, metadata !DIExpression()), !dbg !11742
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11744
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11744
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !11745
  ret void, !dbg !11746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11747 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11749, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata i32 %1, metadata !11750, metadata !DIExpression()), !dbg !11754
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11755
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11755
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11755
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11751, metadata !DIExpression()), !dbg !11754
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11756
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11756
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11756
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11752, metadata !DIExpression()), !dbg !11754
  %10 = bitcast i32* %3 to i8*, !dbg !11757
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11757
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11758
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11758
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11762
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11762
  %15 = load i8*, i8** %14, align 4, !dbg !11762
  call void @llvm.dbg.value(metadata i32* %3, metadata !11753, metadata !DIExpression(DW_OP_deref)), !dbg !11754
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !11763
  %17 = icmp slt i32 %16, 0, !dbg !11764
  br i1 %17, label %18, label %21, !dbg !11765

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.127(i32 noundef 1) #27, !dbg !11766
  %20 = zext i8 %19 to i32, !dbg !11766
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.128, i32 0, i32 0), i32 noundef %20) #28, !dbg !11766
  br label %26, !dbg !11772

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11773
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11773
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !11774
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11775
  %25 = load i32, i32* %3, align 4, !dbg !11776
  call void @llvm.dbg.value(metadata i32 %25, metadata !11753, metadata !DIExpression()), !dbg !11754
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !11777
  br label %26, !dbg !11778

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11778
  ret void, !dbg !11778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11779 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11782
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11783
  %3 = load volatile i32, i32* %2, align 4, !dbg !11783
  %4 = or i32 %3, 8192, !dbg !11783
  store volatile i32 %4, i32* %2, align 4, !dbg !11783
  ret void, !dbg !11784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11785 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11787, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.value(metadata i8* %1, metadata !11788, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.value(metadata i32* %2, metadata !11789, metadata !DIExpression()), !dbg !11791
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11792
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11792
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11792
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11790, metadata !DIExpression()), !dbg !11791
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11793
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11793
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11795
  br i1 %9, label %12, label %10, !dbg !11796

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #28, !dbg !11797
  br label %12, !dbg !11798

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11791
  ret i32 %13, !dbg !11799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.127(i32 noundef %0) unnamed_addr #5 !dbg !11800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11802, metadata !DIExpression()), !dbg !11803
  %2 = icmp eq i32 %0, 2, !dbg !11804
  %3 = select i1 %2, i8 87, i8 63, !dbg !11804
  %4 = icmp eq i32 %0, 1, !dbg !11804
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11804
  ret i8 %5, !dbg !11805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11806 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11810, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 0, metadata !11811, metadata !DIExpression()), !dbg !11812
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11813
  %3 = load volatile i32, i32* %2, align 4, !dbg !11813
  %4 = and i32 %3, -32769, !dbg !11813
  store volatile i32 %4, i32* %2, align 4, !dbg !11813
  ret void, !dbg !11814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11815 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11819, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 %1, metadata !11820, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 0, metadata !11821, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 %2, metadata !11822, metadata !DIExpression()), !dbg !11823
  %4 = zext i32 %1 to i64, !dbg !11824
  %5 = mul nuw nsw i64 %4, 25, !dbg !11824
  %6 = zext i32 %2 to i64, !dbg !11824
  %7 = shl nuw nsw i64 %6, 2, !dbg !11824
  %8 = udiv i64 %5, %7, !dbg !11824
  %9 = trunc i64 %8 to i32, !dbg !11824
  %10 = udiv i32 %9, 100, !dbg !11824
  %11 = shl nuw nsw i32 %10, 4, !dbg !11824
  %12 = mul i32 %10, -100, !dbg !11824
  %13 = add i32 %12, %9, !dbg !11824
  %14 = shl i32 %13, 4, !dbg !11824
  %15 = add i32 %14, 50, !dbg !11824
  %16 = udiv i32 %15, 100, !dbg !11824
  %17 = and i32 %16, 240, !dbg !11824
  %18 = add nuw nsw i32 %17, %11, !dbg !11824
  %19 = and i32 %16, 15, !dbg !11824
  %20 = and i32 %18, 65520, !dbg !11827
  %21 = or i32 %20, %19, !dbg !11827
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11828
  store volatile i32 %21, i32* %22, align 4, !dbg !11829
  ret void, !dbg !11830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11831 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11833, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i32 %1, metadata !11834, metadata !DIExpression()), !dbg !11835
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11836
  %4 = load volatile i32, i32* %3, align 4, !dbg !11836
  %5 = and i32 %4, -769, !dbg !11836
  %6 = or i32 %5, %1, !dbg !11836
  store volatile i32 %6, i32* %3, align 4, !dbg !11836
  ret void, !dbg !11837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11838 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11840, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 %1, metadata !11841, metadata !DIExpression()), !dbg !11842
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11843
  %4 = load volatile i32, i32* %3, align 4, !dbg !11843
  %5 = and i32 %4, -4097, !dbg !11843
  %6 = or i32 %5, %1, !dbg !11843
  store volatile i32 %6, i32* %3, align 4, !dbg !11843
  ret void, !dbg !11844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11845 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11847, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 %1, metadata !11848, metadata !DIExpression()), !dbg !11849
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11850
  %4 = load volatile i32, i32* %3, align 4, !dbg !11850
  %5 = and i32 %4, -12289, !dbg !11850
  %6 = or i32 %5, %1, !dbg !11850
  store volatile i32 %6, i32* %3, align 4, !dbg !11850
  ret void, !dbg !11851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11852 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11854, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 %1, metadata !11855, metadata !DIExpression()), !dbg !11856
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11857
  %4 = load volatile i32, i32* %3, align 4, !dbg !11857
  %5 = and i32 %4, -1537, !dbg !11857
  %6 = or i32 %5, %1, !dbg !11857
  store volatile i32 %6, i32* %3, align 4, !dbg !11857
  ret void, !dbg !11858
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11859 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11861, metadata !DIExpression()), !dbg !11862
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11863
  %3 = load volatile i32, i32* %2, align 4, !dbg !11863
  %4 = lshr i32 %3, 3, !dbg !11864
  %5 = and i32 %4, 1, !dbg !11864
  ret i32 %5, !dbg !11865
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11866 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11868, metadata !DIExpression()), !dbg !11869
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11870
  %3 = load volatile i32, i32* %2, align 4, !dbg !11870
  %4 = and i32 %3, 1, !dbg !11870
  ret i32 %4, !dbg !11871
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11872 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11874, metadata !DIExpression()), !dbg !11875
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11876
  %3 = load volatile i32, i32* %2, align 4, !dbg !11876
  %4 = lshr i32 %3, 1, !dbg !11877
  %5 = and i32 %4, 1, !dbg !11877
  ret i32 %5, !dbg !11878
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11879 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11881, metadata !DIExpression()), !dbg !11882
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11883
  %3 = load volatile i32, i32* %2, align 4, !dbg !11883
  %4 = lshr i32 %3, 8, !dbg !11884
  %5 = and i32 %4, 1, !dbg !11884
  ret i32 %5, !dbg !11885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11886 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11888, metadata !DIExpression()), !dbg !11889
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11890
  store volatile i32 -257, i32* %2, align 4, !dbg !11890
  ret void, !dbg !11891
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11892 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11894, metadata !DIExpression()), !dbg !11896
  %3 = bitcast i32* %2 to i8*, !dbg !11897
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11897
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11895, metadata !DIExpression()), !dbg !11898
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11899
  %5 = load volatile i32, i32* %4, align 4, !dbg !11899
  store volatile i32 %5, i32* %2, align 4, !dbg !11900
  %6 = load volatile i32, i32* %2, align 4, !dbg !11901
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11902
  %8 = load volatile i32, i32* %7, align 4, !dbg !11902
  store volatile i32 %8, i32* %2, align 4, !dbg !11903
  %9 = load volatile i32, i32* %2, align 4, !dbg !11904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11905
  ret void, !dbg !11905
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11906 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11908, metadata !DIExpression()), !dbg !11910
  %3 = bitcast i32* %2 to i8*, !dbg !11911
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11911
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11909, metadata !DIExpression()), !dbg !11912
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11913
  %5 = load volatile i32, i32* %4, align 4, !dbg !11913
  store volatile i32 %5, i32* %2, align 4, !dbg !11914
  %6 = load volatile i32, i32* %2, align 4, !dbg !11915
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11916
  %8 = load volatile i32, i32* %7, align 4, !dbg !11916
  store volatile i32 %8, i32* %2, align 4, !dbg !11917
  %9 = load volatile i32, i32* %2, align 4, !dbg !11918
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11919
  ret void, !dbg !11919
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11920 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11922, metadata !DIExpression()), !dbg !11924
  %3 = bitcast i32* %2 to i8*, !dbg !11925
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11925
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11923, metadata !DIExpression()), !dbg !11926
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11927
  %5 = load volatile i32, i32* %4, align 4, !dbg !11927
  store volatile i32 %5, i32* %2, align 4, !dbg !11928
  %6 = load volatile i32, i32* %2, align 4, !dbg !11929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11930
  %8 = load volatile i32, i32* %7, align 4, !dbg !11930
  store volatile i32 %8, i32* %2, align 4, !dbg !11931
  %9 = load volatile i32, i32* %2, align 4, !dbg !11932
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11933
  ret void, !dbg !11933
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11934 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11936, metadata !DIExpression()), !dbg !11938
  %3 = bitcast i32* %2 to i8*, !dbg !11939
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11939
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11937, metadata !DIExpression()), !dbg !11940
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11941
  %5 = load volatile i32, i32* %4, align 4, !dbg !11941
  store volatile i32 %5, i32* %2, align 4, !dbg !11942
  %6 = load volatile i32, i32* %2, align 4, !dbg !11943
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11944
  %8 = load volatile i32, i32* %7, align 4, !dbg !11944
  store volatile i32 %8, i32* %2, align 4, !dbg !11945
  %9 = load volatile i32, i32* %2, align 4, !dbg !11946
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11947
  ret void, !dbg !11947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11948 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11950, metadata !DIExpression()), !dbg !11951
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11952
  %3 = load volatile i32, i32* %2, align 4, !dbg !11952
  %4 = lshr i32 %3, 7, !dbg !11953
  %5 = and i32 %4, 1, !dbg !11953
  ret i32 %5, !dbg !11954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !11955 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11959, metadata !DIExpression()), !dbg !11961
  call void @llvm.dbg.value(metadata i8 %1, metadata !11960, metadata !DIExpression()), !dbg !11961
  %3 = zext i8 %1 to i32, !dbg !11962
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11963
  store volatile i32 %3, i32* %4, align 4, !dbg !11964
  ret void, !dbg !11965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11966 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11968, metadata !DIExpression()), !dbg !11969
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11970
  %3 = load volatile i32, i32* %2, align 4, !dbg !11970
  %4 = lshr i32 %3, 5, !dbg !11971
  %5 = and i32 %4, 1, !dbg !11971
  ret i32 %5, !dbg !11972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11973 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11977, metadata !DIExpression()), !dbg !11978
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11979
  %3 = load volatile i32, i32* %2, align 4, !dbg !11979
  %4 = trunc i32 %3 to i8, !dbg !11980
  ret i8 %4, !dbg !11981
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11984, metadata !DIExpression()), !dbg !11990
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11991
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11991
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11991
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11985, metadata !DIExpression()), !dbg !11990
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11992
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11992
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11992
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11986, metadata !DIExpression()), !dbg !11990
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !11993
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11994
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11994
  %10 = tail call fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %9) #27, !dbg !11996
  br i1 %10, label %14, label %11, !dbg !11997

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.127(i32 noundef 1) #27, !dbg !11998
  %13 = zext i8 %12 to i32, !dbg !11998
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6.136, i32 0, i32 0), i32 noundef %13) #28, !dbg !11998
  br label %62, !dbg !12004

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12005
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12006
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12006
  %18 = load i8*, i8** %17, align 4, !dbg !12006
  %19 = tail call fastcc i32 @clock_control_on.137(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !12007
  call void @llvm.dbg.value(metadata i32 %19, metadata !11989, metadata !DIExpression()), !dbg !11990
  %20 = icmp eq i32 %19, 0, !dbg !12008
  br i1 %20, label %24, label %21, !dbg !12010

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.127(i32 noundef 1) #27, !dbg !12011
  %23 = zext i8 %22 to i32, !dbg !12011
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.138, i32 0, i32 0), i32 noundef %23) #28, !dbg !12011
  br label %62, !dbg !12017

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12018
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12018
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %27, metadata !11989, metadata !DIExpression()), !dbg !11990
  %28 = icmp slt i32 %27, 0, !dbg !12020
  br i1 %28, label %62, label %29, !dbg !12022

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12023
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12023
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !12024
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12025
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !12026
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12027
  %34 = load i32, i32* %33, align 4, !dbg !12027
  %35 = icmp ult i32 %34, 3, !dbg !12029
  br i1 %35, label %39, label %36, !dbg !12029

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.127(i32 noundef 2) #27, !dbg !12030
  %38 = zext i8 %37 to i32, !dbg !12030
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8.139, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #28, !dbg !12030
  call void @llvm.dbg.value(metadata i32 0, metadata !11987, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.value(metadata i32 0, metadata !11988, metadata !DIExpression()), !dbg !11990
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12029
  %41 = load i32, i32* %40, align 4, !dbg !12029
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.9, i32 0, i32 %34, !dbg !12029
  %43 = load i32, i32* %42, align 4, !dbg !12029
  br label %44, !dbg !12029

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12039
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12039
  call void @llvm.dbg.value(metadata i32 %46, metadata !11988, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.value(metadata i32 %45, metadata !11987, metadata !DIExpression()), !dbg !11990
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12040
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !12041
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12042
  %49 = load i8, i8* %48, align 4, !dbg !12042, !range !7784
  %50 = icmp eq i8 %49, 0, !dbg !12042
  br i1 %50, label %52, label %51, !dbg !12044

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !12045
  br label %52, !dbg !12047

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12048
  %54 = load i32, i32* %53, align 4, !dbg !12048
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !12049
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12050
  %56 = load i8, i8* %55, align 4, !dbg !12050, !range !7784
  %57 = icmp eq i8 %56, 0, !dbg !12050
  br i1 %57, label %60, label %58, !dbg !12052

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12053
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !12055
  br label %60, !dbg !12056

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12057
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !12058
  br label %62, !dbg !12059

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11990
  ret i32 %63, !dbg !12060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #10 !dbg !12061 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12065, metadata !DIExpression()), !dbg !12069
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12070
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12070
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12070
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12066, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12067, metadata !DIExpression()), !dbg !12069
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12071
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !12072
  ret void, !dbg !12073
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %0) unnamed_addr #1 !dbg !12074 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12078, metadata !DIExpression()), !dbg !12079
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12080, !srcloc !12082
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) #27, !dbg !12083
  ret i1 %2, !dbg !12084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.137(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12087, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata i8* %1, metadata !12088, metadata !DIExpression()), !dbg !12090
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12091
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12091
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12091
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12089, metadata !DIExpression()), !dbg !12090
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12092
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12092
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #28, !dbg !12093
  ret i32 %8, !dbg !12094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12095 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12099, metadata !DIExpression()), !dbg !12103
  call void @llvm.dbg.value(metadata i8 0, metadata !12100, metadata !DIExpression()), !dbg !12103
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12104
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12104
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12102, metadata !DIExpression(DW_OP_deref)), !dbg !12103
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #28, !dbg !12105
  call void @llvm.dbg.value(metadata i32 %4, metadata !12101, metadata !DIExpression()), !dbg !12103
  %5 = icmp slt i32 %4, 0, !dbg !12106
  br i1 %5, label %9, label %6, !dbg !12108

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12109
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12102, metadata !DIExpression()), !dbg !12103
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !12110
  br label %9, !dbg !12111

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !12112
  ret i32 %10, !dbg !12112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12113 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12115, metadata !DIExpression()), !dbg !12119
  call void @llvm.dbg.value(metadata i32 12, metadata !12116, metadata !DIExpression()), !dbg !12119
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12120

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12121, metadata !DIExpression()) #26, !dbg !12127
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !12130, !srcloc !12131
  call void @llvm.dbg.value(metadata i32 %4, metadata !12126, metadata !DIExpression()) #26, !dbg !12127
  %5 = or i32 %4, 12, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %5, metadata !12117, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata i32 %5, metadata !12134, metadata !DIExpression()) #26, !dbg !12141
  call void @llvm.dbg.value(metadata i32* %2, metadata !12139, metadata !DIExpression()) #26, !dbg !12141
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !12143, !srcloc !12144
  call void @llvm.dbg.value(metadata i32 %6, metadata !12140, metadata !DIExpression()) #26, !dbg !12141
  %7 = icmp eq i32 %6, 0, !dbg !12120
  br i1 %7, label %8, label %3, !dbg !12132, !llvm.loop !12145

8:                                                ; preds = %3
  ret void, !dbg !12146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !12147 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12149, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i32 %1, metadata !12150, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i32 %2, metadata !12151, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i32 0, metadata !12152, metadata !DIExpression()), !dbg !12153
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12154
  %5 = load volatile i32, i32* %4, align 4, !dbg !12154
  %6 = and i32 %5, -5633, !dbg !12154
  %7 = or i32 %2, %1, !dbg !12154
  %8 = or i32 %7, %6, !dbg !12154
  store volatile i32 %8, i32* %4, align 4, !dbg !12154
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12155
  %10 = load volatile i32, i32* %9, align 4, !dbg !12155
  %11 = and i32 %10, -12289, !dbg !12155
  store volatile i32 %11, i32* %9, align 4, !dbg !12155
  ret void, !dbg !12156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12157 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12159, metadata !DIExpression()), !dbg !12160
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12161
  %3 = load volatile i32, i32* %2, align 4, !dbg !12161
  %4 = or i32 %3, 8, !dbg !12161
  store volatile i32 %4, i32* %2, align 4, !dbg !12161
  ret void, !dbg !12162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12163 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12167, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12168, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.value(metadata i32 0, metadata !12169, metadata !DIExpression()), !dbg !12170
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12171
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12171
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12172
  %5 = load i8, i8* %4, align 4, !dbg !12172
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #28, !dbg !12173
  ret i32 %6, !dbg !12174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !12175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12177, metadata !DIExpression()), !dbg !12178
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #28, !dbg !12179
  ret i1 %2, !dbg !12180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #17 !dbg !12181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12183, metadata !DIExpression()), !dbg !12184
  tail call fastcc void @__NVIC_SetPriority.142() #27, !dbg !12185
  store i32 8399, i32* @last_load, align 4, !dbg !12186
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12187
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12188
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12189
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12190
  %3 = or i32 %2, 7, !dbg !12190
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12190
  ret i32 0, !dbg !12191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.142() unnamed_addr #17 !dbg !12192 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12194, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 1, metadata !12195, metadata !DIExpression()), !dbg !12196
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12197
  ret void, !dbg !12200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12203, metadata !DIExpression()), !dbg !12205
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !12206
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12207
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12208
  %5 = add i32 %4, %3, !dbg !12208
  store i32 %5, i32* @cycle_count, align 4, !dbg !12208
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12209
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12210
  %7 = sub i32 %5, %6, !dbg !12213
  %8 = udiv i32 %7, 8400, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %8, metadata !12204, metadata !DIExpression()), !dbg !12205
  %9 = mul nuw i32 %8, 8400, !dbg !12215
  %10 = add i32 %9, %6, !dbg !12216
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12216
  tail call void @sys_clock_announce(i32 noundef %8) #28, !dbg !12217
  tail call void @z_arm_int_exit() #28, !dbg !12218
  ret void, !dbg !12219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #17 !dbg !12220 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12225
  call void @llvm.dbg.value(metadata i32 %1, metadata !12222, metadata !DIExpression()), !dbg !12226
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12227
  call void @llvm.dbg.value(metadata i32 %2, metadata !12223, metadata !DIExpression()), !dbg !12226
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12228
  call void @llvm.dbg.value(metadata i32 %3, metadata !12224, metadata !DIExpression()), !dbg !12226
  %4 = and i32 %2, 65536, !dbg !12229
  %5 = icmp ne i32 %4, 0, !dbg !12229
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12231
  %8 = load i32, i32* @last_load, align 4, !dbg !12226
  br i1 %7, label %9, label %13, !dbg !12231

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12232
  %11 = add i32 %10, %8, !dbg !12232
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12232
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12234
  br label %13, !dbg !12235

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12236
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12237
  %16 = add i32 %14, %15, !dbg !12238
  ret i32 %16, !dbg !12239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12244, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i1 %1, metadata !12245, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12257
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12258
  br i1 %4, label %5, label %8, !dbg !12258

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12260
  %7 = and i32 %6, -2, !dbg !12260
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12260
  store i32 -16777216, i32* @last_load, align 4, !dbg !12262
  br label %54, !dbg !12263

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12264
  call void @llvm.dbg.value(metadata i32 %9, metadata !12249, metadata !DIExpression()), !dbg !12257
  br i1 %3, label %18, label %10, !dbg !12265

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12265
  call void @llvm.dbg.value(metadata i32 undef, metadata !12244, metadata !DIExpression()), !dbg !12257
  %12 = icmp slt i32 %11, 1, !dbg !12266
  br i1 %12, label %18, label %13, !dbg !12266

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12266
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12266
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12266
  %17 = add nuw nsw i32 %16, 8399, !dbg !12266
  br label %18, !dbg !12266

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12244, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #26, !dbg !12274
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12276, !srcloc !12282
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12276
  call void @llvm.dbg.value(metadata i32 %21, metadata !12279, metadata !DIExpression()) #26, !dbg !12283
  call void @llvm.dbg.value(metadata i32 undef, metadata !12280, metadata !DIExpression()) #26, !dbg !12283
  call void @llvm.dbg.value(metadata i32 %21, metadata !12273, metadata !DIExpression()) #26, !dbg !12274
  call void @llvm.dbg.value(metadata i32 %21, metadata !12250, metadata !DIExpression()), !dbg !12257
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !12284
  call void @llvm.dbg.value(metadata i32 %22, metadata !12255, metadata !DIExpression()), !dbg !12257
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %23, metadata !12247, metadata !DIExpression()), !dbg !12257
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12286
  %25 = add i32 %24, %22, !dbg !12286
  store i32 %25, i32* @cycle_count, align 4, !dbg !12286
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12287
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12288
  %27 = sub i32 %25, %26, !dbg !12289
  call void @llvm.dbg.value(metadata i32 %27, metadata !12256, metadata !DIExpression()), !dbg !12257
  %28 = icmp slt i32 %27, 0, !dbg !12290
  br i1 %28, label %38, label %29, !dbg !12292

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12246, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.value(metadata i32 undef, metadata !12246, metadata !DIExpression()), !dbg !12257
  %30 = add nuw i32 %19, %27, !dbg !12293
  %31 = urem i32 %30, 8400, !dbg !12295
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12246, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12257
  %32 = sub nuw nsw i32 %19, %31, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %32, metadata !12246, metadata !DIExpression()), !dbg !12257
  %33 = icmp ugt i32 %32, 1024, !dbg !12297
  br i1 %33, label %34, label %36, !dbg !12297

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12246, metadata !DIExpression()), !dbg !12257
  %35 = icmp ugt i32 %32, 16766400, !dbg !12298
  br i1 %35, label %38, label %36, !dbg !12300

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12301
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %40, metadata !12248, metadata !DIExpression()), !dbg !12257
  %41 = add nsw i32 %39, -1, !dbg !12303
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12304
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12305
  %42 = icmp ult i32 %23, %40, !dbg !12306
  br i1 %42, label %43, label %48, !dbg !12308

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12309
  %45 = add i32 %23, %9, !dbg !12311
  %46 = sub i32 %45, %40, !dbg !12312
  %47 = add i32 %46, %44, !dbg !12309
  br label %52, !dbg !12313

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12314
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12316
  %51 = add i32 %49, %50, !dbg !12316
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12317
  store i32 %53, i32* @cycle_count, align 4, !dbg !12317
  call void @llvm.dbg.value(metadata i32 %21, metadata !12318, metadata !DIExpression()) #26, !dbg !12324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12323, metadata !DIExpression()) #26, !dbg !12324
  call void @llvm.dbg.value(metadata i32 %21, metadata !12326, metadata !DIExpression()) #26, !dbg !12329
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #26, !dbg !12331, !srcloc !12332
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12333
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12334 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #26, !dbg !12338
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12340, !srcloc !12282
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %2, metadata !12279, metadata !DIExpression()) #26, !dbg !12342
  call void @llvm.dbg.value(metadata i32 undef, metadata !12280, metadata !DIExpression()) #26, !dbg !12342
  call void @llvm.dbg.value(metadata i32 %2, metadata !12273, metadata !DIExpression()) #26, !dbg !12338
  call void @llvm.dbg.value(metadata i32 %2, metadata !12336, metadata !DIExpression()), !dbg !12343
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !12344
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12345
  %5 = add i32 %4, %3, !dbg !12346
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12347
  %7 = sub i32 %5, %6, !dbg !12348
  call void @llvm.dbg.value(metadata i32 %7, metadata !12337, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 %2, metadata !12318, metadata !DIExpression()) #26, !dbg !12349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12323, metadata !DIExpression()) #26, !dbg !12349
  call void @llvm.dbg.value(metadata i32 %2, metadata !12326, metadata !DIExpression()) #26, !dbg !12351
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !12353, !srcloc !12332
  %8 = udiv i32 %7, 8400, !dbg !12354
  ret i32 %8, !dbg !12355
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12356 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12267, metadata !DIExpression()) #26, !dbg !12360
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12362, !srcloc !12282
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12362
  call void @llvm.dbg.value(metadata i32 %2, metadata !12279, metadata !DIExpression()) #26, !dbg !12364
  call void @llvm.dbg.value(metadata i32 undef, metadata !12280, metadata !DIExpression()) #26, !dbg !12364
  call void @llvm.dbg.value(metadata i32 %2, metadata !12273, metadata !DIExpression()) #26, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %2, metadata !12358, metadata !DIExpression()), !dbg !12365
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !12366
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12367
  %5 = add i32 %4, %3, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %5, metadata !12359, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i32 %2, metadata !12318, metadata !DIExpression()) #26, !dbg !12369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12323, metadata !DIExpression()) #26, !dbg !12369
  call void @llvm.dbg.value(metadata i32 %2, metadata !12326, metadata !DIExpression()) #26, !dbg !12371
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !12373, !srcloc !12332
  ret i32 %5, !dbg !12374
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #17 !dbg !12375 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12376
  %2 = icmp eq i32 %1, -16777216, !dbg !12378
  br i1 %2, label %3, label %6, !dbg !12379

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12380
  %5 = or i32 %4, 1, !dbg !12380
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12380
  br label %6, !dbg !12382

6:                                                ; preds = %3, %0
  ret void, !dbg !12383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #17 !dbg !12384 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12385
  %2 = and i32 %1, -2, !dbg !12385
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12385
  ret void, !dbg !12386
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #16 !dbg !12387 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12413, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i8 %1, metadata !12414, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12415, metadata !DIExpression()), !dbg !12416
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12417
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12417
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12416
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12418
  %8 = load i8, i8* %6, align 4, !dbg !12419
  %9 = zext i8 %8 to i32, !dbg !12420
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12420
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12421
  br i1 %11, label %18, label %24, !dbg !12422

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12416
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12418
  %14 = load i8, i8* %6, align 4, !dbg !12419
  %15 = zext i8 %14 to i32, !dbg !12420
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12420
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12421
  br i1 %17, label %18, label %24, !dbg !12422, !llvm.loop !12423

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12425
  %21 = load i8, i8* %20, align 1, !dbg !12425
  %22 = icmp eq i8 %21, %1, !dbg !12428
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12429
  br i1 %22, label %24, label %12, !dbg !12430

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12416
  ret i32 %25, !dbg !12431
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12432 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12443, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata i8 %1, metadata !12444, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata i32 %2, metadata !12445, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata i32 0, metadata !12448, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata i32 0, metadata !12449, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata i8 0, metadata !12450, metadata !DIExpression()), !dbg !12460
  %4 = icmp eq i8 %1, 0, !dbg !12461
  br i1 %4, label %35, label %5, !dbg !12462

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12461
  br label %9, !dbg !12462

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12450, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.value(metadata i32 %29, metadata !12448, metadata !DIExpression()), !dbg !12459
  %8 = icmp eq i32 %34, %6, !dbg !12461
  br i1 %8, label %35, label %9, !dbg !12462, !llvm.loop !12463

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12450, metadata !DIExpression()), !dbg !12460
  call void @llvm.dbg.value(metadata i32 %11, metadata !12448, metadata !DIExpression()), !dbg !12459
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12465
  %13 = load i32, i32* %12, align 4, !dbg !12465
  call void @llvm.dbg.value(metadata i32 %13, metadata !12447, metadata !DIExpression()), !dbg !12459
  %14 = and i32 %13, 31, !dbg !12466
  %15 = icmp ult i32 %14, 16, !dbg !12467
  br i1 %15, label %16, label %20, !dbg !12468

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12469
  %18 = load i32, i32* %17, align 4, !dbg !12469
  %19 = or i32 %18, 32, !dbg !12471
  call void @llvm.dbg.value(metadata i32 %19, metadata !12448, metadata !DIExpression()), !dbg !12459
  br label %28, !dbg !12472

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12473

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12474
  %23 = load i32, i32* %22, align 4, !dbg !12474
  call void @llvm.dbg.value(metadata i32 %23, metadata !12452, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12475
  %24 = lshr i32 %23, 7, !dbg !12476
  %25 = and i32 %24, 16, !dbg !12476
  %26 = or i32 %25, %23, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %26, metadata !12448, metadata !DIExpression()), !dbg !12459
  br label %28, !dbg !12477

27:                                               ; preds = %20
  br label %28, !dbg !12478

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12459
  call void @llvm.dbg.value(metadata i32 %29, metadata !12448, metadata !DIExpression()), !dbg !12459
  %30 = lshr i32 %13, 5, !dbg !12478
  %31 = and i32 %30, 255, !dbg !12478
  call void @llvm.dbg.value(metadata i32 %31, metadata !12446, metadata !DIExpression()), !dbg !12459
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !12479
  call void @llvm.dbg.value(metadata i32 %32, metadata !12449, metadata !DIExpression()), !dbg !12459
  %33 = icmp slt i32 %32, 0, !dbg !12480
  %34 = add nuw nsw i32 %10, 1, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %34, metadata !12450, metadata !DIExpression()), !dbg !12460
  br i1 %33, label %35, label %7, !dbg !12483

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12489, metadata !DIExpression()), !dbg !12493
  call void @llvm.dbg.value(metadata i32 %1, metadata !12490, metadata !DIExpression()), !dbg !12493
  call void @llvm.dbg.value(metadata i32 %2, metadata !12491, metadata !DIExpression()), !dbg !12493
  %4 = icmp ugt i32 %0, 175, !dbg !12494
  br i1 %4, label %16, label %5, !dbg !12496

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12497
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12498
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12498
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12492, metadata !DIExpression()), !dbg !12493
  %9 = add nsw i32 %6, -8, !dbg !12499
  %10 = icmp ult i32 %9, 3, !dbg !12499
  br i1 %10, label %16, label %11, !dbg !12501

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.147(%struct.device* noundef %8) #27, !dbg !12502
  br i1 %12, label %13, label %16, !dbg !12503

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12504
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #28, !dbg !12505
  br label %16, !dbg !12506

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12493
  ret i32 %17, !dbg !12507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.147(%struct.device* noundef %0) unnamed_addr #1 !dbg !12508 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12512, metadata !DIExpression()), !dbg !12513
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12514, !srcloc !12516
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) #27, !dbg !12517
  ret i1 %2, !dbg !12518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) unnamed_addr #1 !dbg !12519 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12521, metadata !DIExpression()), !dbg !12522
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #28, !dbg !12523
  ret i1 %2, !dbg !12524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12525 {
  ret void, !dbg !12526
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #18 !dbg !12527 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12529, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 0, metadata !12530, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 2, metadata !12531, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 0, metadata !12532, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 2, metadata !12533, metadata !DIExpression()), !dbg !12534
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12535
  %2 = and i32 %1, 12, !dbg !12536
  call void @llvm.dbg.value(metadata i32 %2, metadata !12529, metadata !DIExpression()), !dbg !12534
  %3 = icmp eq i32 %2, 8, !dbg !12537
  br i1 %3, label %4, label %18, !dbg !12537

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12538
  call void @llvm.dbg.value(metadata i32 %5, metadata !12532, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12534
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12540
  %7 = and i32 %6, 63, !dbg !12541
  call void @llvm.dbg.value(metadata i32 %7, metadata !12533, metadata !DIExpression()), !dbg !12534
  %8 = udiv i32 16000000, %7, !dbg !12542
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12542
  %10 = lshr i32 %9, 6, !dbg !12542
  %11 = and i32 %10, 511, !dbg !12542
  %12 = mul i32 %11, %8, !dbg !12542
  call void @llvm.dbg.value(metadata i32 %12, metadata !12530, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 %12, metadata !12530, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 %12, metadata !12530, metadata !DIExpression()), !dbg !12534
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12544
  %14 = lshr i32 %13, 15, !dbg !12545
  %15 = and i32 %14, 6, !dbg !12545
  %16 = add nuw nsw i32 %15, 2, !dbg !12545
  call void @llvm.dbg.value(metadata i32 %16, metadata !12531, metadata !DIExpression()), !dbg !12534
  %17 = udiv i32 %12, %16, !dbg !12546
  br label %18, !dbg !12547

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12548
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12549
  %21 = lshr i32 %20, 4, !dbg !12550
  %22 = and i32 %21, 15, !dbg !12550
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12551
  %24 = load i8, i8* %23, align 1, !dbg !12551
  %25 = zext i8 %24 to i32, !dbg !12551
  call void @llvm.dbg.value(metadata i32 %25, metadata !12529, metadata !DIExpression()), !dbg !12534
  %26 = lshr i32 %19, %25, !dbg !12552
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12552
  ret void, !dbg !12553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12554 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12596, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12597, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12598, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12599, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12600, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12601, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12602, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12603, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12604, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 0, metadata !12605, metadata !DIExpression()), !dbg !12610
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12611
  %4 = load i32, i32* %3, align 4, !dbg !12611
  %5 = and i32 %4, 1, !dbg !12613
  %6 = icmp eq i32 %5, 0, !dbg !12614
  br i1 %6, label %17, label %7, !dbg !12615

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12616
  %9 = and i32 %8, -100663297, !dbg !12616
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12616
  %11 = load i32, i32* %10, align 4, !dbg !12616
  %12 = or i32 %9, %11, !dbg !12616
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12616
  %13 = load i32, i32* %10, align 4, !dbg !12618
  %14 = icmp eq i32 %13, 0, !dbg !12620
  %15 = zext i1 %14 to i32, !dbg !12621
  %16 = load i32, i32* %3, align 4, !dbg !12622
  br label %17, !dbg !12621

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12622
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12610
  call void @llvm.dbg.value(metadata i32 %19, metadata !12604, metadata !DIExpression()), !dbg !12610
  %20 = and i32 %18, 2, !dbg !12624
  %21 = icmp eq i32 %20, 0, !dbg !12625
  br i1 %21, label %32, label %22, !dbg !12626

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12627
  %24 = and i32 %23, -402653185, !dbg !12627
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12627
  %26 = load i32, i32* %25, align 4, !dbg !12627
  %27 = or i32 %24, %26, !dbg !12627
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12627
  %28 = load i32, i32* %25, align 4, !dbg !12629
  %29 = icmp eq i32 %28, 0, !dbg !12631
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12632
  %31 = load i32, i32* %3, align 4, !dbg !12633
  br label %32, !dbg !12632

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12633
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12610
  call void @llvm.dbg.value(metadata i32 %34, metadata !12604, metadata !DIExpression()), !dbg !12610
  %35 = and i32 %33, 4, !dbg !12635
  %36 = icmp eq i32 %35, 0, !dbg !12636
  br i1 %36, label %49, label %37, !dbg !12637

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12638
  %39 = and i32 %38, -3145729, !dbg !12638
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12638
  %41 = load i32, i32* %40, align 4, !dbg !12638
  %42 = or i32 %39, %41, !dbg !12638
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12638
  %43 = load i32, i32* %40, align 4, !dbg !12640
  %44 = icmp eq i32 %43, 1048576, !dbg !12642
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12643
  call void @llvm.dbg.value(metadata i32 %45, metadata !12604, metadata !DIExpression()), !dbg !12610
  %46 = icmp eq i32 %43, 0, !dbg !12644
  %47 = zext i1 %46 to i32, !dbg !12646
  %48 = load i32, i32* %3, align 4, !dbg !12647
  br label %49, !dbg !12646

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12647
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12610
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12610
  call void @llvm.dbg.value(metadata i32 %52, metadata !12605, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 %51, metadata !12604, metadata !DIExpression()), !dbg !12610
  %53 = and i32 %50, 8, !dbg !12649
  %54 = icmp eq i32 %53, 0, !dbg !12650
  br i1 %54, label %67, label %55, !dbg !12651

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12652
  %57 = and i32 %56, -12582913, !dbg !12652
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12652
  %59 = load i32, i32* %58, align 4, !dbg !12652
  %60 = or i32 %57, %59, !dbg !12652
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12652
  %61 = load i32, i32* %58, align 4, !dbg !12654
  %62 = icmp eq i32 %61, 4194304, !dbg !12656
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12657
  call void @llvm.dbg.value(metadata i32 %63, metadata !12604, metadata !DIExpression()), !dbg !12610
  %64 = icmp eq i32 %61, 0, !dbg !12658
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12660
  %66 = load i32, i32* %3, align 4, !dbg !12661
  br label %67, !dbg !12660

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12661
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12610
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12610
  call void @llvm.dbg.value(metadata i32 %70, metadata !12605, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 %69, metadata !12604, metadata !DIExpression()), !dbg !12610
  %71 = and i32 %68, 32, !dbg !12662
  %72 = icmp eq i32 %71, 0, !dbg !12663
  br i1 %72, label %131, label %73, !dbg !12664

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12665
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12665
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12606, metadata !DIExpression()), !dbg !12665
  store volatile i32 0, i32* %2, align 4, !dbg !12665
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12665
  %76 = or i32 %75, 268435456, !dbg !12665
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12665
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12665
  %78 = and i32 %77, 268435456, !dbg !12665
  store volatile i32 %78, i32* %2, align 4, !dbg !12665
  %79 = load volatile i32, i32* %2, align 4, !dbg !12665
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12666
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12667
  %81 = or i32 %80, 256, !dbg !12667
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12667
  %82 = tail call i32 @HAL_GetTick() #28, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %82, metadata !12597, metadata !DIExpression()), !dbg !12610
  br label %83, !dbg !12669

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12670
  %85 = and i32 %84, 256, !dbg !12671
  %86 = icmp eq i32 %85, 0, !dbg !12672
  br i1 %86, label %87, label %91, !dbg !12669

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #28, !dbg !12673
  %89 = sub i32 %88, %82, !dbg !12676
  %90 = icmp ugt i32 %89, 2, !dbg !12677
  br i1 %90, label %439, label %83, !dbg !12678, !llvm.loop !12679

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12681
  %93 = and i32 %92, 768, !dbg !12682
  call void @llvm.dbg.value(metadata i32 %93, metadata !12598, metadata !DIExpression()), !dbg !12610
  %94 = icmp eq i32 %93, 0, !dbg !12683
  br i1 %94, label %116, label %95, !dbg !12685

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12686
  %97 = load i32, i32* %96, align 4, !dbg !12686
  %98 = and i32 %97, 768, !dbg !12687
  %99 = icmp eq i32 %93, %98, !dbg !12688
  br i1 %99, label %116, label %100, !dbg !12689

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12690
  %102 = and i32 %101, -769, !dbg !12692
  call void @llvm.dbg.value(metadata i32 %102, metadata !12598, metadata !DIExpression()), !dbg !12610
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12693
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12694
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12695
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12696
  %104 = and i32 %103, 1, !dbg !12696
  %105 = icmp eq i32 %104, 0, !dbg !12696
  br i1 %105, label %116, label %106, !dbg !12698

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #28, !dbg !12699
  call void @llvm.dbg.value(metadata i32 %107, metadata !12597, metadata !DIExpression()), !dbg !12610
  br label %108, !dbg !12701

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12702
  %110 = and i32 %109, 2, !dbg !12703
  %111 = icmp eq i32 %110, 0, !dbg !12703
  br i1 %111, label %112, label %116, !dbg !12701

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #28, !dbg !12704
  %114 = sub i32 %113, %107, !dbg !12707
  %115 = icmp ugt i32 %114, 5000, !dbg !12708
  br i1 %115, label %439, label %108, !dbg !12709, !llvm.loop !12710

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12712
  %118 = load i32, i32* %117, align 4, !dbg !12712
  %119 = and i32 %118, 768, !dbg !12712
  %120 = icmp eq i32 %119, 768, !dbg !12712
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12712
  %122 = and i32 %121, -2031617, !dbg !12712
  %123 = and i32 %118, 268434687, !dbg !12712
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12712
  %125 = or i32 %122, %124, !dbg !12712
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12712
  %126 = load i32, i32* %117, align 4, !dbg !12712
  %127 = and i32 %126, 4095, !dbg !12712
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12712
  %129 = or i32 %128, %127, !dbg !12712
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12712
  %130 = load i32, i32* %3, align 4, !dbg !12714
  br label %131, !dbg !12716

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12714
  %133 = and i32 %132, 16, !dbg !12717
  %134 = icmp eq i32 %133, 0, !dbg !12718
  br i1 %134, label %140, label %135, !dbg !12719

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12720
  %137 = load i8, i8* %136, align 4, !dbg !12720
  %138 = zext i8 %137 to i32, !dbg !12720
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12720
  %139 = load i32, i32* %3, align 4, !dbg !12722
  br label %140, !dbg !12724

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12722
  %142 = and i32 %141, 128, !dbg !12725
  %143 = icmp eq i32 %142, 0, !dbg !12726
  br i1 %143, label %151, label %144, !dbg !12727

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12728
  %146 = and i32 %145, -12582913, !dbg !12728
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12728
  %148 = load i32, i32* %147, align 4, !dbg !12728
  %149 = or i32 %146, %148, !dbg !12728
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12728
  %150 = load i32, i32* %3, align 4, !dbg !12730
  br label %151, !dbg !12732

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12730
  %153 = and i32 %152, 64, !dbg !12733
  %154 = icmp eq i32 %153, 0, !dbg !12734
  br i1 %154, label %162, label %155, !dbg !12735

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12736
  %157 = and i32 %156, -67108865, !dbg !12736
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12736
  %159 = load i32, i32* %158, align 4, !dbg !12736
  %160 = or i32 %157, %159, !dbg !12736
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12736
  %161 = load i32, i32* %3, align 4, !dbg !12738
  br label %162, !dbg !12740

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12738
  %164 = and i32 %163, 256, !dbg !12741
  %165 = icmp eq i32 %164, 0, !dbg !12742
  br i1 %165, label %176, label %166, !dbg !12743

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12744
  %168 = and i32 %167, -134217729, !dbg !12744
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12744
  %170 = load i32, i32* %169, align 4, !dbg !12744
  %171 = or i32 %168, %170, !dbg !12744
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12744
  %172 = load i32, i32* %169, align 4, !dbg !12746
  %173 = icmp eq i32 %172, 134217728, !dbg !12748
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12749
  %175 = load i32, i32* %3, align 4, !dbg !12750
  br label %176, !dbg !12749

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12750
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12610
  call void @llvm.dbg.value(metadata i32 %178, metadata !12605, metadata !DIExpression()), !dbg !12610
  %179 = and i32 %177, 512, !dbg !12752
  %180 = icmp eq i32 %179, 0, !dbg !12753
  br i1 %180, label %188, label %181, !dbg !12754

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12755
  %183 = and i32 %182, -268435457, !dbg !12755
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12755
  %185 = load i32, i32* %184, align 4, !dbg !12755
  %186 = or i32 %183, %185, !dbg !12755
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12755
  %187 = load i32, i32* %3, align 4, !dbg !12757
  br label %188, !dbg !12759

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12757
  %190 = and i32 %189, 1024, !dbg !12760
  %191 = icmp eq i32 %190, 0, !dbg !12761
  br i1 %191, label %204, label %192, !dbg !12762

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12763
  %194 = and i32 %193, -536870913, !dbg !12763
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12763
  %196 = load i32, i32* %195, align 4, !dbg !12763
  %197 = or i32 %194, %196, !dbg !12763
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12763
  %198 = load i32, i32* %195, align 4, !dbg !12765
  %199 = icmp eq i32 %198, 536870912, !dbg !12767
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12768
  call void @llvm.dbg.value(metadata i32 %69, metadata !12604, metadata !DIExpression()), !dbg !12610
  br i1 %201, label %209, label %202, !dbg !12768

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12769
  br label %206, !dbg !12768

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !12604, metadata !DIExpression()), !dbg !12610
  %205 = icmp eq i32 %69, 1, !dbg !12771
  br i1 %205, label %209, label %206, !dbg !12772

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12769
  %208 = icmp eq i32 %207, 2048, !dbg !12773
  br i1 %208, label %209, label %356, !dbg !12774

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12775
  %210 = tail call i32 @HAL_GetTick() #28, !dbg !12777
  call void @llvm.dbg.value(metadata i32 %210, metadata !12597, metadata !DIExpression()), !dbg !12610
  br label %211, !dbg !12778

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12779
  %213 = and i32 %212, 134217728, !dbg !12779
  %214 = icmp eq i32 %213, 0, !dbg !12779
  br i1 %214, label %219, label %215, !dbg !12778

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #28, !dbg !12780
  %217 = sub i32 %216, %210, !dbg !12783
  %218 = icmp ugt i32 %217, 2, !dbg !12784
  br i1 %218, label %439, label %211, !dbg !12785, !llvm.loop !12786

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12788
  %221 = and i32 %220, 1, !dbg !12790
  %222 = icmp eq i32 %221, 0, !dbg !12791
  br i1 %222, label %227, label %223, !dbg !12792

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12793
  %225 = load i32, i32* %224, align 4, !dbg !12793
  %226 = icmp eq i32 %225, 0, !dbg !12794
  br i1 %226, label %234, label %227, !dbg !12795

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12796
  %229 = icmp eq i32 %228, 0, !dbg !12797
  br i1 %229, label %252, label %230, !dbg !12798

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12799
  %232 = load i32, i32* %231, align 4, !dbg !12799
  %233 = icmp eq i32 %232, 0, !dbg !12800
  br i1 %233, label %234, label %252, !dbg !12801

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12802
  %236 = and i32 %235, 196608, !dbg !12804
  call void @llvm.dbg.value(metadata i32 %236, metadata !12599, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12610
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12805
  %238 = and i32 %237, 251658240, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %238, metadata !12600, metadata !DIExpression()), !dbg !12610
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12807
  %240 = load i32, i32* %239, align 4, !dbg !12807
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12807
  %242 = load i32, i32* %241, align 4, !dbg !12807
  %243 = shl i32 %242, 6, !dbg !12807
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12807
  %245 = load i32, i32* %244, align 4, !dbg !12807
  %246 = shl i32 %245, 28, !dbg !12807
  %247 = or i32 %240, %236, !dbg !12807
  %248 = or i32 %247, %238, !dbg !12807
  %249 = or i32 %248, %243, !dbg !12807
  %250 = or i32 %249, %246, !dbg !12807
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12807
  %251 = load i32, i32* %3, align 4, !dbg !12808
  br label %252, !dbg !12810

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12808
  %254 = and i32 %253, 4, !dbg !12811
  %255 = icmp eq i32 %254, 0, !dbg !12812
  br i1 %255, label %260, label %256, !dbg !12813

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12814
  %258 = load i32, i32* %257, align 4, !dbg !12814
  %259 = icmp eq i32 %258, 1048576, !dbg !12815
  br i1 %259, label %267, label %260, !dbg !12816

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12817
  %262 = icmp eq i32 %261, 0, !dbg !12818
  br i1 %262, label %291, label %263, !dbg !12819

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12820
  %265 = load i32, i32* %264, align 4, !dbg !12820
  %266 = icmp eq i32 %265, 4194304, !dbg !12821
  br i1 %266, label %267, label %291, !dbg !12822

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12823
  %269 = and i32 %268, 196608, !dbg !12825
  call void @llvm.dbg.value(metadata i32 %269, metadata !12599, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12610
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12826
  %271 = and i32 %270, 1879048192, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %271, metadata !12601, metadata !DIExpression()), !dbg !12610
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12828
  %273 = load i32, i32* %272, align 4, !dbg !12828
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12828
  %275 = load i32, i32* %274, align 4, !dbg !12828
  %276 = shl i32 %275, 6, !dbg !12828
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12828
  %278 = load i32, i32* %277, align 4, !dbg !12828
  %279 = shl i32 %278, 24, !dbg !12828
  %280 = or i32 %273, %269, !dbg !12828
  %281 = or i32 %280, %271, !dbg !12828
  %282 = or i32 %281, %276, !dbg !12828
  %283 = or i32 %282, %279, !dbg !12828
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12828
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12829
  %285 = and i32 %284, -32, !dbg !12829
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12829
  %287 = load i32, i32* %286, align 4, !dbg !12829
  %288 = add i32 %287, -1, !dbg !12829
  %289 = or i32 %288, %285, !dbg !12829
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12829
  %290 = load i32, i32* %3, align 4, !dbg !12830
  br label %291, !dbg !12832

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12830
  %293 = and i32 %292, 1024, !dbg !12833
  %294 = icmp eq i32 %293, 0, !dbg !12834
  br i1 %294, label %321, label %295, !dbg !12835

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12836
  %297 = load i32, i32* %296, align 4, !dbg !12836
  %298 = icmp eq i32 %297, 536870912, !dbg !12837
  br i1 %298, label %299, label %321, !dbg !12838

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12839
  call void @llvm.dbg.value(metadata i32 %300, metadata !12600, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12610
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12841
  %302 = and i32 %301, 1879048192, !dbg !12842
  call void @llvm.dbg.value(metadata i32 %302, metadata !12601, metadata !DIExpression()), !dbg !12610
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12843
  %304 = load i32, i32* %303, align 4, !dbg !12843
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12843
  %306 = load i32, i32* %305, align 4, !dbg !12843
  %307 = shl i32 %306, 6, !dbg !12843
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12843
  %309 = load i32, i32* %308, align 4, !dbg !12843
  %310 = shl i32 %309, 15, !dbg !12843
  %311 = add i32 %310, -65536, !dbg !12843
  %312 = and i32 %311, -65536, !dbg !12843
  %313 = shl i32 %300, 9, !dbg !12843
  %314 = and i32 %313, 100663296, !dbg !12843
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12843
  %316 = or i32 %302, %304, !dbg !12843
  %317 = or i32 %316, %315, !dbg !12843
  %318 = or i32 %317, %307, !dbg !12843
  %319 = or i32 %318, %312, !dbg !12843
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12843
  %320 = load i32, i32* %3, align 4, !dbg !12844
  br label %321, !dbg !12846

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12844
  %323 = and i32 %322, 2048, !dbg !12847
  %324 = icmp eq i32 %323, 0, !dbg !12848
  br i1 %324, label %346, label %325, !dbg !12849

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12850
  %327 = load i32, i32* %326, align 4, !dbg !12850
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12850
  %329 = load i32, i32* %328, align 4, !dbg !12850
  %330 = shl i32 %329, 6, !dbg !12850
  %331 = or i32 %330, %327, !dbg !12850
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12850
  %333 = load i32, i32* %332, align 4, !dbg !12850
  %334 = shl i32 %333, 15, !dbg !12850
  %335 = add i32 %334, -65536, !dbg !12850
  %336 = and i32 %335, -65536, !dbg !12850
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12850
  %338 = load i32, i32* %337, align 4, !dbg !12850
  %339 = shl i32 %338, 24, !dbg !12850
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12850
  %341 = load i32, i32* %340, align 4, !dbg !12850
  %342 = shl i32 %341, 28, !dbg !12850
  %343 = or i32 %331, %339, !dbg !12850
  %344 = or i32 %343, %336, !dbg !12850
  %345 = or i32 %344, %342, !dbg !12850
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12850
  br label %346, !dbg !12852

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12853
  %347 = tail call i32 @HAL_GetTick() #28, !dbg !12854
  call void @llvm.dbg.value(metadata i32 %347, metadata !12597, metadata !DIExpression()), !dbg !12610
  br label %348, !dbg !12855

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12856
  %350 = and i32 %349, 134217728, !dbg !12857
  %351 = icmp eq i32 %350, 0, !dbg !12857
  br i1 %351, label %352, label %356, !dbg !12855

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #28, !dbg !12858
  %354 = sub i32 %353, %347, !dbg !12861
  %355 = icmp ugt i32 %354, 2, !dbg !12862
  br i1 %355, label %439, label %348, !dbg !12863, !llvm.loop !12864

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12866
  br i1 %357, label %358, label %439, !dbg !12868

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12869
  %359 = tail call i32 @HAL_GetTick() #28, !dbg !12871
  call void @llvm.dbg.value(metadata i32 %359, metadata !12597, metadata !DIExpression()), !dbg !12610
  br label %360, !dbg !12872

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12873
  %362 = and i32 %361, 536870912, !dbg !12873
  %363 = icmp eq i32 %362, 0, !dbg !12873
  br i1 %363, label %368, label %364, !dbg !12872

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #28, !dbg !12874
  %366 = sub i32 %365, %359, !dbg !12877
  %367 = icmp ugt i32 %366, 2, !dbg !12878
  br i1 %367, label %439, label %360, !dbg !12879, !llvm.loop !12880

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12882
  %370 = and i32 %369, 4, !dbg !12884
  %371 = icmp eq i32 %370, 0, !dbg !12885
  br i1 %371, label %376, label %372, !dbg !12886

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12887
  %374 = load i32, i32* %373, align 4, !dbg !12887
  %375 = icmp eq i32 %374, 0, !dbg !12888
  br i1 %375, label %383, label %376, !dbg !12889

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12890
  %378 = icmp eq i32 %377, 0, !dbg !12891
  br i1 %378, label %405, label %379, !dbg !12892

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12893
  %381 = load i32, i32* %380, align 4, !dbg !12893
  %382 = icmp eq i32 %381, 0, !dbg !12894
  br i1 %382, label %383, label %405, !dbg !12895

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12896
  %385 = and i32 %384, 196608, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %385, metadata !12602, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12610
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12899
  %387 = load i32, i32* %386, align 4, !dbg !12899
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12899
  %389 = load i32, i32* %388, align 4, !dbg !12899
  %390 = shl i32 %389, 6, !dbg !12899
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12899
  %392 = load i32, i32* %391, align 4, !dbg !12899
  %393 = shl i32 %392, 24, !dbg !12899
  %394 = or i32 %385, %387, !dbg !12899
  %395 = or i32 %394, %390, !dbg !12899
  %396 = or i32 %395, %393, !dbg !12899
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12899
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12900
  %398 = and i32 %397, -7937, !dbg !12900
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12900
  %400 = load i32, i32* %399, align 4, !dbg !12900
  %401 = shl i32 %400, 8, !dbg !12900
  %402 = add i32 %401, -256, !dbg !12900
  %403 = or i32 %402, %398, !dbg !12900
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12900
  %404 = load i32, i32* %3, align 4, !dbg !12901
  br label %405, !dbg !12903

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12901
  %407 = and i32 %406, 256, !dbg !12904
  %408 = icmp eq i32 %407, 0, !dbg !12905
  br i1 %408, label %429, label %409, !dbg !12906

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12907
  %411 = load i32, i32* %410, align 4, !dbg !12907
  %412 = icmp eq i32 %411, 134217728, !dbg !12908
  br i1 %412, label %413, label %429, !dbg !12909

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12910
  %415 = and i32 %414, 251658240, !dbg !12912
  call void @llvm.dbg.value(metadata i32 %415, metadata !12603, metadata !DIExpression()), !dbg !12610
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12913
  %417 = load i32, i32* %416, align 4, !dbg !12913
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12913
  %419 = load i32, i32* %418, align 4, !dbg !12913
  %420 = shl i32 %419, 6, !dbg !12913
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12913
  %422 = load i32, i32* %421, align 4, !dbg !12913
  %423 = shl i32 %422, 15, !dbg !12913
  %424 = add i32 %423, -65536, !dbg !12913
  %425 = and i32 %424, -65536, !dbg !12913
  %426 = or i32 %415, %417, !dbg !12913
  %427 = or i32 %426, %420, !dbg !12913
  %428 = or i32 %427, %425, !dbg !12913
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12913
  br label %429, !dbg !12914

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12915
  %430 = tail call i32 @HAL_GetTick() #28, !dbg !12916
  call void @llvm.dbg.value(metadata i32 %430, metadata !12597, metadata !DIExpression()), !dbg !12610
  br label %431, !dbg !12917

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12918
  %433 = and i32 %432, 536870912, !dbg !12919
  %434 = icmp eq i32 %433, 0, !dbg !12919
  br i1 %434, label %435, label %439, !dbg !12917

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #28, !dbg !12920
  %437 = sub i32 %436, %430, !dbg !12923
  %438 = icmp ugt i32 %437, 2, !dbg !12924
  br i1 %438, label %439, label %431, !dbg !12925, !llvm.loop !12926

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12610
  ret i32 %440, !dbg !12928
}

; Function Attrs: optsize
declare !dbg !12929 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #18 !dbg !12931 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12935, metadata !DIExpression()), !dbg !12937
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12938
  store i32 2047, i32* %2, align 4, !dbg !12939
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12940
  %4 = and i32 %3, 63, !dbg !12941
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12942
  store i32 %4, i32* %5, align 4, !dbg !12943
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12944
  %7 = lshr i32 %6, 6, !dbg !12945
  %8 = and i32 %7, 511, !dbg !12945
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12946
  store i32 %8, i32* %9, align 4, !dbg !12947
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12948
  %11 = lshr i32 %10, 15, !dbg !12949
  %12 = and i32 %11, 6, !dbg !12949
  %13 = add nuw nsw i32 %12, 2, !dbg !12949
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12950
  store i32 %13, i32* %14, align 4, !dbg !12951
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12952
  %16 = lshr i32 %15, 24, !dbg !12953
  %17 = and i32 %16, 15, !dbg !12953
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12954
  store i32 %17, i32* %18, align 4, !dbg !12955
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12956
  %20 = lshr i32 %19, 28, !dbg !12957
  %21 = and i32 %20, 7, !dbg !12957
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12958
  store i32 %21, i32* %22, align 4, !dbg !12959
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12960
  %24 = and i32 %23, 63, !dbg !12961
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12962
  store i32 %24, i32* %25, align 4, !dbg !12963
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12964
  %27 = lshr i32 %26, 6, !dbg !12965
  %28 = and i32 %27, 511, !dbg !12965
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12966
  store i32 %28, i32* %29, align 4, !dbg !12967
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12968
  %31 = lshr i32 %30, 15, !dbg !12969
  %32 = and i32 %31, 6, !dbg !12969
  %33 = add nuw nsw i32 %32, 2, !dbg !12969
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12970
  store i32 %33, i32* %34, align 4, !dbg !12971
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12972
  %36 = lshr i32 %35, 24, !dbg !12973
  %37 = and i32 %36, 15, !dbg !12973
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12974
  store i32 %37, i32* %38, align 4, !dbg !12975
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12976
  %40 = and i32 %39, 31, !dbg !12977
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12978
  store i32 %40, i32* %41, align 4, !dbg !12979
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12980
  %43 = lshr i32 %42, 8, !dbg !12981
  %44 = and i32 %43, 31, !dbg !12981
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12982
  store i32 %44, i32* %45, align 4, !dbg !12983
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12984
  %47 = and i32 %46, 3145728, !dbg !12984
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12985
  store i32 %47, i32* %48, align 4, !dbg !12986
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12987
  %50 = and i32 %49, 12582912, !dbg !12987
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12988
  store i32 %50, i32* %51, align 4, !dbg !12989
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12990
  %53 = and i32 %52, 100663296, !dbg !12990
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12991
  store i32 %53, i32* %54, align 4, !dbg !12992
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12993
  %56 = and i32 %55, 402653184, !dbg !12993
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12994
  store i32 %56, i32* %57, align 4, !dbg !12995
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12996
  %59 = and i32 %58, 2031616, !dbg !12997
  call void @llvm.dbg.value(metadata i32 %59, metadata !12936, metadata !DIExpression()), !dbg !12937
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12998
  %61 = and i32 %60, 768, !dbg !12999
  %62 = or i32 %61, %59, !dbg !13000
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13001
  store i32 %62, i32* %63, align 4, !dbg !13002
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13003
  %65 = and i32 %64, 67108864, !dbg !13003
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !13004
  store i32 %65, i32* %66, align 4, !dbg !13005
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13006
  %68 = and i32 %67, 12582912, !dbg !13006
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !13007
  store i32 %68, i32* %69, align 4, !dbg !13008
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13009
  %71 = and i32 %70, 134217728, !dbg !13009
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13010
  store i32 %71, i32* %72, align 4, !dbg !13011
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13012
  %74 = and i32 %73, 268435456, !dbg !13012
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !13013
  store i32 %74, i32* %75, align 4, !dbg !13014
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13015
  %77 = and i32 %76, 536870912, !dbg !13015
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13016
  store i32 %77, i32* %78, align 4, !dbg !13017
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13018
  %80 = lshr i32 %79, 24, !dbg !13020
  %81 = trunc i32 %80 to i8, !dbg !13020
  %82 = and i8 %81, 1, !dbg !13020
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !13021
  store i8 %82, i8* %83, align 4, !dbg !13023
  ret void, !dbg !13024
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #18 !dbg !13025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13027, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13028, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13029, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13031, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13032, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 0, metadata !13033, metadata !DIExpression()), !dbg !13034
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !13035

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %3, metadata !13031, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 %3, metadata !13031, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !13034
  %4 = lshr i32 %3, 20, !dbg !13039
  %5 = and i32 %4, 15, !dbg !13039
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !13039

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13040
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13044
  %9 = and i32 %8, 63, !dbg !13044
  %10 = udiv i32 16000000, %9, !dbg !13044
  call void @llvm.dbg.value(metadata i32 %10, metadata !13030, metadata !DIExpression()), !dbg !13034
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13045
  %12 = lshr i32 %11, 24, !dbg !13046
  %13 = and i32 %12, 15, !dbg !13046
  call void @llvm.dbg.value(metadata i32 %13, metadata !13028, metadata !DIExpression()), !dbg !13034
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13047
  %15 = lshr i32 %14, 6, !dbg !13048
  %16 = and i32 %15, 511, !dbg !13048
  %17 = mul i32 %16, %10, !dbg !13049
  %18 = udiv i32 %17, %13, !dbg !13050
  call void @llvm.dbg.value(metadata i32 %18, metadata !13029, metadata !DIExpression()), !dbg !13034
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13051
  %20 = lshr i32 %19, 8, !dbg !13052
  %21 = and i32 %20, 31, !dbg !13052
  %22 = add nuw nsw i32 %21, 1, !dbg !13053
  call void @llvm.dbg.value(metadata i32 %22, metadata !13028, metadata !DIExpression()), !dbg !13034
  %23 = udiv i32 %18, %22, !dbg !13054
  call void @llvm.dbg.value(metadata i32 %23, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13055

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13056
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13059
  %27 = and i32 %26, 63, !dbg !13059
  %28 = udiv i32 16000000, %27, !dbg !13059
  call void @llvm.dbg.value(metadata i32 %28, metadata !13030, metadata !DIExpression()), !dbg !13034
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13060
  %30 = lshr i32 %29, 24, !dbg !13061
  %31 = and i32 %30, 15, !dbg !13061
  call void @llvm.dbg.value(metadata i32 %31, metadata !13028, metadata !DIExpression()), !dbg !13034
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13062
  %33 = lshr i32 %32, 6, !dbg !13063
  %34 = and i32 %33, 511, !dbg !13063
  %35 = mul i32 %34, %28, !dbg !13064
  %36 = udiv i32 %35, %31, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %36, metadata !13029, metadata !DIExpression()), !dbg !13034
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13066
  %38 = and i32 %37, 31, !dbg !13067
  %39 = add nuw nsw i32 %38, 1, !dbg !13068
  call void @llvm.dbg.value(metadata i32 %39, metadata !13028, metadata !DIExpression()), !dbg !13034
  %40 = udiv i32 %36, %39, !dbg !13069
  call void @llvm.dbg.value(metadata i32 %40, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13070

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13071
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13074
  %44 = and i32 %43, 63, !dbg !13074
  %45 = udiv i32 16000000, %44, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %45, metadata !13030, metadata !DIExpression()), !dbg !13034
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13075
  %47 = lshr i32 %46, 28, !dbg !13076
  %48 = and i32 %47, 7, !dbg !13076
  call void @llvm.dbg.value(metadata i32 %48, metadata !13028, metadata !DIExpression()), !dbg !13034
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13077
  %50 = lshr i32 %49, 6, !dbg !13078
  %51 = and i32 %50, 511, !dbg !13078
  %52 = mul i32 %51, %45, !dbg !13079
  %53 = udiv i32 %52, %48, !dbg !13080
  call void @llvm.dbg.value(metadata i32 %53, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13081

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13082

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13084
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13029, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %58, metadata !13032, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !13034
  %59 = lshr i32 %58, 25, !dbg !13089
  %60 = and i32 %59, 3, !dbg !13089
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !13089

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13090
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13094
  %64 = and i32 %63, 63, !dbg !13094
  %65 = udiv i32 16000000, %64, !dbg !13094
  call void @llvm.dbg.value(metadata i32 %65, metadata !13030, metadata !DIExpression()), !dbg !13034
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13095
  %67 = lshr i32 %66, 6, !dbg !13096
  %68 = and i32 %67, 511, !dbg !13096
  %69 = mul i32 %68, %65, !dbg !13097
  call void @llvm.dbg.value(metadata i32 %69, metadata !13033, metadata !DIExpression()), !dbg !13034
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13098
  %71 = lshr i32 %70, 28, !dbg !13099
  %72 = and i32 %71, 7, !dbg !13099
  %73 = udiv i32 %69, %72, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %73, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13101

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13102
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13105
  %77 = and i32 %76, 63, !dbg !13105
  %78 = udiv i32 16000000, %77, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %78, metadata !13030, metadata !DIExpression()), !dbg !13034
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13106
  %80 = lshr i32 %79, 6, !dbg !13107
  %81 = and i32 %80, 511, !dbg !13107
  %82 = mul i32 %81, %78, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %82, metadata !13033, metadata !DIExpression()), !dbg !13034
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13109
  %84 = lshr i32 %83, 28, !dbg !13110
  %85 = and i32 %84, 7, !dbg !13110
  %86 = udiv i32 %82, %85, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %86, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13112

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13113
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13029, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13116
  call void @llvm.dbg.value(metadata i32 %91, metadata !13032, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !13034
  %92 = lshr i32 %91, 27, !dbg !13118
  %93 = and i32 %92, 3, !dbg !13118
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !13118

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13119
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13123
  %97 = and i32 %96, 63, !dbg !13123
  %98 = udiv i32 16000000, %97, !dbg !13123
  call void @llvm.dbg.value(metadata i32 %98, metadata !13030, metadata !DIExpression()), !dbg !13034
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13124
  %100 = lshr i32 %99, 6, !dbg !13125
  %101 = and i32 %100, 511, !dbg !13125
  %102 = mul i32 %101, %98, !dbg !13126
  call void @llvm.dbg.value(metadata i32 %102, metadata !13033, metadata !DIExpression()), !dbg !13034
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13127
  %104 = lshr i32 %103, 28, !dbg !13128
  %105 = and i32 %104, 7, !dbg !13128
  %106 = udiv i32 %102, %105, !dbg !13129
  call void @llvm.dbg.value(metadata i32 %106, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13130

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13131
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13030, metadata !DIExpression()), !dbg !13034
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13134
  %110 = and i32 %109, 63, !dbg !13134
  %111 = udiv i32 16000000, %110, !dbg !13134
  call void @llvm.dbg.value(metadata i32 %111, metadata !13030, metadata !DIExpression()), !dbg !13034
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13135
  %113 = lshr i32 %112, 6, !dbg !13136
  %114 = and i32 %113, 511, !dbg !13136
  %115 = mul i32 %114, %111, !dbg !13137
  call void @llvm.dbg.value(metadata i32 %115, metadata !13033, metadata !DIExpression()), !dbg !13034
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13138
  %117 = lshr i32 %116, 28, !dbg !13139
  %118 = and i32 %117, 7, !dbg !13139
  %119 = udiv i32 %115, %118, !dbg !13140
  call void @llvm.dbg.value(metadata i32 %119, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123, !dbg !13141

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13142
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13029, metadata !DIExpression()), !dbg !13034
  call void @llvm.dbg.value(metadata i32 16000000, metadata !13029, metadata !DIExpression()), !dbg !13034
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !13034
  call void @llvm.dbg.value(metadata i32 %124, metadata !13029, metadata !DIExpression()), !dbg !13034
  ret i32 %124, !dbg !13145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #17 !dbg !13146 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13150, metadata !DIExpression()), !dbg !13151
  %2 = icmp eq i8 %0, 1, !dbg !13152
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13154
  %4 = and i32 %3, -9, !dbg !13155
  %5 = select i1 %2, i32 8, i32 0, !dbg !13155
  %6 = or i32 %4, %5, !dbg !13155
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13154
  ret void, !dbg !13156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13157 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !13162, metadata !DIExpression()), !dbg !13164
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13165
  %2 = tail call i32 @HAL_GetTick() #28, !dbg !13166
  call void @llvm.dbg.value(metadata i32 %2, metadata !13163, metadata !DIExpression()), !dbg !13164
  br label %3, !dbg !13167

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13168
  %5 = and i32 %4, 134217728, !dbg !13168
  %6 = icmp eq i32 %5, 0, !dbg !13168
  br i1 %6, label %11, label %7, !dbg !13167

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #28, !dbg !13169
  %9 = sub i32 %8, %2, !dbg !13172
  %10 = icmp ugt i32 %9, 2, !dbg !13173
  br i1 %10, label %41, label %3, !dbg !13174, !llvm.loop !13175

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !13177
  %13 = load i32, i32* %12, align 4, !dbg !13177
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !13177
  %15 = load i32, i32* %14, align 4, !dbg !13177
  %16 = shl i32 %15, 6, !dbg !13177
  %17 = or i32 %16, %13, !dbg !13177
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !13177
  %19 = load i32, i32* %18, align 4, !dbg !13177
  %20 = shl i32 %19, 15, !dbg !13177
  %21 = add i32 %20, -65536, !dbg !13177
  %22 = and i32 %21, -65536, !dbg !13177
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !13177
  %24 = load i32, i32* %23, align 4, !dbg !13177
  %25 = shl i32 %24, 24, !dbg !13177
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !13177
  %27 = load i32, i32* %26, align 4, !dbg !13177
  %28 = shl i32 %27, 28, !dbg !13177
  %29 = or i32 %17, %25, !dbg !13177
  %30 = or i32 %29, %22, !dbg !13177
  %31 = or i32 %30, %28, !dbg !13177
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13177
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13178
  %32 = tail call i32 @HAL_GetTick() #28, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %32, metadata !13163, metadata !DIExpression()), !dbg !13164
  br label %33, !dbg !13180

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13181
  %35 = and i32 %34, 134217728, !dbg !13182
  %36 = icmp eq i32 %35, 0, !dbg !13182
  br i1 %36, label %37, label %41, !dbg !13180

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #28, !dbg !13183
  %39 = sub i32 %38, %32, !dbg !13186
  %40 = icmp ugt i32 %39, 2, !dbg !13187
  br i1 %40, label %41, label %33, !dbg !13188, !llvm.loop !13189

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !13164
  ret i32 %42, !dbg !13191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !13192 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13197
  %1 = tail call i32 @HAL_GetTick() #28, !dbg !13198
  call void @llvm.dbg.value(metadata i32 %1, metadata !13196, metadata !DIExpression()), !dbg !13199
  br label %2, !dbg !13200

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13201
  %4 = and i32 %3, 134217728, !dbg !13201
  %5 = icmp eq i32 %4, 0, !dbg !13202
  br i1 %5, label %10, label %6, !dbg !13200

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #28, !dbg !13203
  %8 = sub i32 %7, %1, !dbg !13206
  %9 = icmp ugt i32 %8, 2, !dbg !13207
  br i1 %9, label %10, label %2, !dbg !13208, !llvm.loop !13209

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13199
  ret i32 %11, !dbg !13211
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13212 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !13217, metadata !DIExpression()), !dbg !13219
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13220
  %2 = tail call i32 @HAL_GetTick() #28, !dbg !13221
  call void @llvm.dbg.value(metadata i32 %2, metadata !13218, metadata !DIExpression()), !dbg !13219
  br label %3, !dbg !13222

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13223
  %5 = and i32 %4, 536870912, !dbg !13223
  %6 = icmp eq i32 %5, 0, !dbg !13223
  br i1 %6, label %11, label %7, !dbg !13222

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #28, !dbg !13224
  %9 = sub i32 %8, %2, !dbg !13227
  %10 = icmp ugt i32 %9, 2, !dbg !13228
  br i1 %10, label %37, label %3, !dbg !13229, !llvm.loop !13230

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !13232
  %13 = load i32, i32* %12, align 4, !dbg !13232
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !13232
  %15 = load i32, i32* %14, align 4, !dbg !13232
  %16 = shl i32 %15, 6, !dbg !13232
  %17 = or i32 %16, %13, !dbg !13232
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !13232
  %19 = load i32, i32* %18, align 4, !dbg !13232
  %20 = shl i32 %19, 15, !dbg !13232
  %21 = add i32 %20, -65536, !dbg !13232
  %22 = and i32 %21, -65536, !dbg !13232
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !13232
  %24 = load i32, i32* %23, align 4, !dbg !13232
  %25 = shl i32 %24, 24, !dbg !13232
  %26 = or i32 %17, %25, !dbg !13232
  %27 = or i32 %26, %22, !dbg !13232
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13232
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13233
  %28 = tail call i32 @HAL_GetTick() #28, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %28, metadata !13218, metadata !DIExpression()), !dbg !13219
  br label %29, !dbg !13235

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13236
  %31 = and i32 %30, 536870912, !dbg !13237
  %32 = icmp eq i32 %31, 0, !dbg !13237
  br i1 %32, label %33, label %37, !dbg !13235

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #28, !dbg !13238
  %35 = sub i32 %34, %28, !dbg !13241
  %36 = icmp ugt i32 %35, 2, !dbg !13242
  br i1 %36, label %37, label %29, !dbg !13243, !llvm.loop !13244

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !13219
  ret i32 %38, !dbg !13246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !13247 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13250
  %1 = tail call i32 @HAL_GetTick() #28, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %1, metadata !13249, metadata !DIExpression()), !dbg !13252
  br label %2, !dbg !13253

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13254
  %4 = and i32 %3, 536870912, !dbg !13254
  %5 = icmp eq i32 %4, 0, !dbg !13254
  br i1 %5, label %10, label %6, !dbg !13253

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #28, !dbg !13255
  %8 = sub i32 %7, %1, !dbg !13258
  %9 = icmp ugt i32 %8, 2, !dbg !13259
  br i1 %9, label %10, label %2, !dbg !13260, !llvm.loop !13261

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !13252
  ret i32 %11, !dbg !13263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #18 !dbg !13264 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13266, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 0, metadata !13267, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 0, metadata !13268, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 0, metadata !13269, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 0, metadata !13270, metadata !DIExpression()), !dbg !13271
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13272
  %2 = lshr i32 %1, 2, !dbg !13273
  %3 = and i32 %2, 3, !dbg !13273
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !13273

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13274
  %6 = and i32 %5, 63, !dbg !13277
  call void @llvm.dbg.value(metadata i32 %6, metadata !13266, metadata !DIExpression()), !dbg !13271
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13278
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13280
  %9 = lshr i32 %8, 6, !dbg !13280
  %10 = and i32 %9, 511, !dbg !13280
  %11 = zext i32 %10 to i64, !dbg !13280
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13280
  %13 = zext i32 %6 to i64, !dbg !13280
  %14 = udiv i64 %12, %13, !dbg !13280
  %15 = trunc i64 %14 to i32, !dbg !13280
  call void @llvm.dbg.value(metadata i32 %15, metadata !13267, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 %15, metadata !13267, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 %15, metadata !13267, metadata !DIExpression()), !dbg !13271
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13281
  %17 = lshr i32 %16, 15, !dbg !13282
  %18 = and i32 %17, 6, !dbg !13282
  %19 = add nuw nsw i32 %18, 2, !dbg !13282
  call void @llvm.dbg.value(metadata i32 %19, metadata !13268, metadata !DIExpression()), !dbg !13271
  %20 = udiv i32 %15, %19, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %20, metadata !13270, metadata !DIExpression()), !dbg !13271
  br label %38, !dbg !13284

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13285
  %23 = and i32 %22, 63, !dbg !13287
  call void @llvm.dbg.value(metadata i32 %23, metadata !13266, metadata !DIExpression()), !dbg !13271
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13288
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13290
  %26 = lshr i32 %25, 6, !dbg !13290
  %27 = and i32 %26, 511, !dbg !13290
  %28 = zext i32 %27 to i64, !dbg !13290
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !13290
  %30 = zext i32 %23 to i64, !dbg !13290
  %31 = udiv i64 %29, %30, !dbg !13290
  %32 = trunc i64 %31 to i32, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %32, metadata !13267, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 %32, metadata !13267, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i32 %32, metadata !13267, metadata !DIExpression()), !dbg !13271
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13291
  %34 = lshr i32 %33, 28, !dbg !13292
  %35 = and i32 %34, 7, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %35, metadata !13269, metadata !DIExpression()), !dbg !13271
  %36 = udiv i32 %32, %35, !dbg !13293
  call void @llvm.dbg.value(metadata i32 %36, metadata !13270, metadata !DIExpression()), !dbg !13271
  br label %38, !dbg !13294

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !13295
  call void @llvm.dbg.value(metadata i32 %39, metadata !13270, metadata !DIExpression()), !dbg !13271
  ret i32 %39, !dbg !13296
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13297 {
  %1 = tail call i32 @HAL_GetTick() #28, !dbg !13300
  call void @llvm.dbg.value(metadata i32 %1, metadata !13299, metadata !DIExpression()), !dbg !13301
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13302
  %3 = or i32 %2, 1, !dbg !13302
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13302
  br label %4, !dbg !13303

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13304
  %6 = and i32 %5, 2, !dbg !13304
  %7 = icmp eq i32 %6, 0, !dbg !13305
  br i1 %7, label %8, label %12, !dbg !13303

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #28, !dbg !13306
  %10 = sub i32 %9, %1, !dbg !13309
  %11 = icmp ugt i32 %10, 2, !dbg !13310
  br i1 %11, label %89, label %4, !dbg !13311, !llvm.loop !13312

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13314
  %14 = or i32 %13, 128, !dbg !13314
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13314
  %15 = tail call i32 @HAL_GetTick() #28, !dbg !13315
  call void @llvm.dbg.value(metadata i32 %15, metadata !13299, metadata !DIExpression()), !dbg !13301
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13316
  br label %16, !dbg !13317

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13318
  %18 = and i32 %17, 12, !dbg !13318
  %19 = icmp eq i32 %18, 0, !dbg !13319
  %20 = tail call i32 @HAL_GetTick() #28, !dbg !13301
  br i1 %19, label %24, label %21, !dbg !13317

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !13320
  %23 = icmp ugt i32 %22, 5000, !dbg !13323
  br i1 %23, label %89, label %16, !dbg !13324, !llvm.loop !13325

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !13299, metadata !DIExpression()), !dbg !13301
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13327
  %26 = and i32 %25, -851969, !dbg !13327
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13327
  br label %27, !dbg !13328

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13329
  %29 = and i32 %28, 131072, !dbg !13329
  %30 = icmp eq i32 %29, 0, !dbg !13330
  %31 = tail call i32 @HAL_GetTick() #28, !dbg !13301
  br i1 %30, label %35, label %32, !dbg !13328

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !13331
  %34 = icmp ugt i32 %33, 100, !dbg !13334
  br i1 %34, label %89, label %27, !dbg !13335, !llvm.loop !13336

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !13299, metadata !DIExpression()), !dbg !13301
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13338
  %37 = and i32 %36, -16777217, !dbg !13338
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13338
  br label %38, !dbg !13339

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13340
  %40 = and i32 %39, 33554432, !dbg !13340
  %41 = icmp eq i32 %40, 0, !dbg !13341
  %42 = tail call i32 @HAL_GetTick() #28, !dbg !13301
  br i1 %41, label %46, label %43, !dbg !13339

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !13342
  %45 = icmp ugt i32 %44, 2, !dbg !13345
  br i1 %45, label %89, label %38, !dbg !13346, !llvm.loop !13347

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !13299, metadata !DIExpression()), !dbg !13301
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13349
  %48 = and i32 %47, -67108865, !dbg !13349
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13349
  br label %49, !dbg !13350

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13351
  %51 = and i32 %50, 134217728, !dbg !13351
  %52 = icmp eq i32 %51, 0, !dbg !13352
  %53 = tail call i32 @HAL_GetTick() #28, !dbg !13301
  br i1 %52, label %57, label %54, !dbg !13350

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !13353
  %56 = icmp ugt i32 %55, 2, !dbg !13356
  br i1 %56, label %89, label %49, !dbg !13357, !llvm.loop !13358

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !13299, metadata !DIExpression()), !dbg !13301
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  %59 = and i32 %58, -268435457, !dbg !13360
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  br label %60, !dbg !13361

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13362
  %62 = and i32 %61, 536870912, !dbg !13362
  %63 = icmp eq i32 %62, 0, !dbg !13363
  br i1 %63, label %68, label %64, !dbg !13361

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #28, !dbg !13364
  %66 = sub i32 %65, %53, !dbg !13367
  %67 = icmp ugt i32 %66, 2, !dbg !13368
  br i1 %67, label %89, label %60, !dbg !13369, !llvm.loop !13370

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13372
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13373
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13374
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13375
  %70 = and i32 %69, -7937, !dbg !13375
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13375
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13376
  %72 = and i32 %71, -8193, !dbg !13376
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13376
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13377
  %74 = and i32 %73, -16385, !dbg !13377
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13377
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13378
  %76 = or i32 %75, 10420224, !dbg !13378
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13378
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13379
  %78 = or i32 %77, 2097152, !dbg !13379
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13379
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13380
  %80 = or i32 %79, 4194304, !dbg !13380
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13380
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13381
  %82 = and i32 %81, -2, !dbg !13381
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13381
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13382
  %84 = or i32 %83, 16777216, !dbg !13382
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13382
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !13383
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !13384
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #28, !dbg !13386
  %87 = icmp ne i32 %86, 0, !dbg !13387
  %88 = zext i1 %87 to i32, !dbg !13388
  br label %89, !dbg !13388

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !13301
  ret i32 %90, !dbg !13389
}

; Function Attrs: optsize
declare !dbg !13390 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13393 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13419, metadata !DIExpression()), !dbg !13430
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13431
  br i1 %3, label %337, label %4, !dbg !13433

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13434
  %6 = load i32, i32* %5, align 4, !dbg !13434
  %7 = and i32 %6, 1, !dbg !13436
  %8 = icmp eq i32 %7, 0, !dbg !13437
  br i1 %8, label %74, label %9, !dbg !13438

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13439
  %11 = and i32 %10, 12, !dbg !13439
  %12 = icmp eq i32 %11, 4, !dbg !13442
  br i1 %12, label %29, label %13, !dbg !13443

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13444
  %15 = and i32 %14, 12, !dbg !13444
  %16 = icmp eq i32 %15, 8, !dbg !13445
  br i1 %16, label %17, label %21, !dbg !13446

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13447
  %19 = and i32 %18, 4194304, !dbg !13448
  %20 = icmp eq i32 %19, 0, !dbg !13449
  br i1 %20, label %21, label %29, !dbg !13450

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13451
  %23 = and i32 %22, 12, !dbg !13451
  %24 = icmp eq i32 %23, 12, !dbg !13452
  br i1 %24, label %25, label %37, !dbg !13453

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13454
  %27 = and i32 %26, 4194304, !dbg !13455
  %28 = icmp eq i32 %27, 0, !dbg !13456
  br i1 %28, label %37, label %29, !dbg !13457

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13458
  %31 = and i32 %30, 131072, !dbg !13458
  %32 = icmp eq i32 %31, 0, !dbg !13458
  br i1 %32, label %74, label %33, !dbg !13461

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13462
  %35 = load i32, i32* %34, align 4, !dbg !13462
  %36 = icmp eq i32 %35, 0, !dbg !13463
  br i1 %36, label %337, label %74, !dbg !13464

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13465
  %39 = load i32, i32* %38, align 4, !dbg !13465
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !13469

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13470
  %42 = or i32 %41, 65536, !dbg !13470
  br label %53, !dbg !13470

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13472
  %45 = or i32 %44, 262144, !dbg !13472
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13472
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13472
  %47 = or i32 %46, 65536, !dbg !13472
  br label %53, !dbg !13472

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13475
  %50 = and i32 %49, -65537, !dbg !13475
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13475
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13475
  %52 = and i32 %51, -262145, !dbg !13475
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13477
  %55 = load i32, i32* %38, align 4, !dbg !13478
  %56 = icmp eq i32 %55, 0, !dbg !13480
  %57 = tail call i32 @HAL_GetTick() #28, !dbg !13481
  call void @llvm.dbg.value(metadata i32 %57, metadata !13420, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata i32 %57, metadata !13420, metadata !DIExpression()), !dbg !13430
  br i1 %56, label %66, label %58, !dbg !13482

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13483
  %60 = and i32 %59, 131072, !dbg !13485
  %61 = icmp eq i32 %60, 0, !dbg !13485
  br i1 %61, label %62, label %74, !dbg !13486

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #28, !dbg !13487
  %64 = sub i32 %63, %57, !dbg !13490
  %65 = icmp ugt i32 %64, 100, !dbg !13491
  br i1 %65, label %337, label %58, !dbg !13492, !llvm.loop !13493

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13495
  %68 = and i32 %67, 131072, !dbg !13495
  %69 = icmp eq i32 %68, 0, !dbg !13495
  br i1 %69, label %74, label %70, !dbg !13497

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #28, !dbg !13498
  %72 = sub i32 %71, %57, !dbg !13501
  %73 = icmp ugt i32 %72, 100, !dbg !13502
  br i1 %73, label %337, label %66, !dbg !13503, !llvm.loop !13504

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !13506
  %76 = and i32 %75, 2, !dbg !13508
  %77 = icmp eq i32 %76, 0, !dbg !13509
  br i1 %77, label %137, label %78, !dbg !13510

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13511
  %80 = and i32 %79, 12, !dbg !13511
  %81 = icmp eq i32 %80, 0, !dbg !13514
  br i1 %81, label %98, label %82, !dbg !13515

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13516
  %84 = and i32 %83, 12, !dbg !13516
  %85 = icmp eq i32 %84, 8, !dbg !13517
  br i1 %85, label %86, label %90, !dbg !13518

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13519
  %88 = and i32 %87, 4194304, !dbg !13520
  %89 = icmp eq i32 %88, 0, !dbg !13521
  br i1 %89, label %98, label %90, !dbg !13522

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13523
  %92 = and i32 %91, 12, !dbg !13523
  %93 = icmp eq i32 %92, 12, !dbg !13524
  br i1 %93, label %94, label %106, !dbg !13525

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13526
  %96 = and i32 %95, 4194304, !dbg !13527
  %97 = icmp eq i32 %96, 0, !dbg !13528
  br i1 %97, label %98, label %106, !dbg !13529

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13530
  %100 = and i32 %99, 2, !dbg !13530
  %101 = icmp eq i32 %100, 0, !dbg !13530
  br i1 %101, label %130, label %102, !dbg !13533

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13534
  %104 = load i32, i32* %103, align 4, !dbg !13534
  %105 = icmp eq i32 %104, 1, !dbg !13535
  br i1 %105, label %130, label %337, !dbg !13536

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13537
  %108 = load i32, i32* %107, align 4, !dbg !13537
  %109 = icmp eq i32 %108, 0, !dbg !13540
  br i1 %109, label %120, label %110, !dbg !13541

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13542
  %111 = tail call i32 @HAL_GetTick() #28, !dbg !13544
  call void @llvm.dbg.value(metadata i32 %111, metadata !13420, metadata !DIExpression()), !dbg !13430
  br label %112, !dbg !13545

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13546
  %114 = and i32 %113, 2, !dbg !13547
  %115 = icmp eq i32 %114, 0, !dbg !13547
  br i1 %115, label %116, label %130, !dbg !13545

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #28, !dbg !13548
  %118 = sub i32 %117, %111, !dbg !13551
  %119 = icmp ugt i32 %118, 2, !dbg !13552
  br i1 %119, label %337, label %112, !dbg !13553, !llvm.loop !13554

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13556
  %121 = tail call i32 @HAL_GetTick() #28, !dbg !13558
  call void @llvm.dbg.value(metadata i32 %121, metadata !13420, metadata !DIExpression()), !dbg !13430
  br label %122, !dbg !13559

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13560
  %124 = and i32 %123, 2, !dbg !13560
  %125 = icmp eq i32 %124, 0, !dbg !13560
  br i1 %125, label %137, label %126, !dbg !13559

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #28, !dbg !13561
  %128 = sub i32 %127, %121, !dbg !13564
  %129 = icmp ugt i32 %128, 2, !dbg !13565
  br i1 %129, label %337, label %122, !dbg !13566, !llvm.loop !13567

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13569
  %132 = and i32 %131, -249, !dbg !13569
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13569
  %134 = load i32, i32* %133, align 4, !dbg !13569
  %135 = shl i32 %134, 3, !dbg !13569
  %136 = or i32 %135, %132, !dbg !13569
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13569
  br label %137, !dbg !13570

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !13570
  %139 = and i32 %138, 8, !dbg !13572
  %140 = icmp eq i32 %139, 0, !dbg !13573
  br i1 %140, label %165, label %141, !dbg !13574

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13575
  %143 = load i32, i32* %142, align 4, !dbg !13575
  %144 = icmp eq i32 %143, 0, !dbg !13578
  br i1 %144, label %155, label %145, !dbg !13579

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13580
  %146 = tail call i32 @HAL_GetTick() #28, !dbg !13582
  call void @llvm.dbg.value(metadata i32 %146, metadata !13420, metadata !DIExpression()), !dbg !13430
  br label %147, !dbg !13583

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13584
  %149 = and i32 %148, 2, !dbg !13585
  %150 = icmp eq i32 %149, 0, !dbg !13585
  br i1 %150, label %151, label %165, !dbg !13583

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #28, !dbg !13586
  %153 = sub i32 %152, %146, !dbg !13589
  %154 = icmp ugt i32 %153, 2, !dbg !13590
  br i1 %154, label %337, label %147, !dbg !13591, !llvm.loop !13592

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13594
  %156 = tail call i32 @HAL_GetTick() #28, !dbg !13596
  call void @llvm.dbg.value(metadata i32 %156, metadata !13420, metadata !DIExpression()), !dbg !13430
  br label %157, !dbg !13597

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13598
  %159 = and i32 %158, 2, !dbg !13598
  %160 = icmp eq i32 %159, 0, !dbg !13598
  br i1 %160, label %165, label %161, !dbg !13597

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #28, !dbg !13599
  %163 = sub i32 %162, %156, !dbg !13602
  %164 = icmp ugt i32 %163, 2, !dbg !13603
  br i1 %164, label %337, label %157, !dbg !13604, !llvm.loop !13605

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13607
  %167 = and i32 %166, 4, !dbg !13608
  %168 = icmp eq i32 %167, 0, !dbg !13609
  br i1 %168, label %237, label %169, !dbg !13610

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !13422, metadata !DIExpression()), !dbg !13611
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13612
  %171 = and i32 %170, 268435456, !dbg !13612
  %172 = icmp eq i32 %171, 0, !dbg !13612
  br i1 %172, label %173, label %180, !dbg !13613

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13614
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13426, metadata !DIExpression()), !dbg !13614
  store volatile i32 0, i32* %2, align 4, !dbg !13614
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13614
  %176 = or i32 %175, 268435456, !dbg !13614
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13614
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13614
  %178 = and i32 %177, 268435456, !dbg !13614
  store volatile i32 %178, i32* %2, align 4, !dbg !13614
  %179 = load volatile i32, i32* %2, align 4, !dbg !13614
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13615
  call void @llvm.dbg.value(metadata i32 1, metadata !13422, metadata !DIExpression()), !dbg !13611
  br label %180, !dbg !13616

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13422, metadata !DIExpression()), !dbg !13611
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13617
  %182 = and i32 %181, 256, !dbg !13617
  %183 = icmp eq i32 %182, 0, !dbg !13617
  br i1 %183, label %184, label %196, !dbg !13619

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13620
  %186 = or i32 %185, 256, !dbg !13620
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13620
  %187 = tail call i32 @HAL_GetTick() #28, !dbg !13622
  call void @llvm.dbg.value(metadata i32 %187, metadata !13420, metadata !DIExpression()), !dbg !13430
  br label %188, !dbg !13623

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13624
  %190 = and i32 %189, 256, !dbg !13624
  %191 = icmp eq i32 %190, 0, !dbg !13624
  br i1 %191, label %192, label %196, !dbg !13623

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #28, !dbg !13625
  %194 = sub i32 %193, %187, !dbg !13628
  %195 = icmp ugt i32 %194, 2, !dbg !13629
  br i1 %195, label %337, label %188, !dbg !13630, !llvm.loop !13631

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13633
  %198 = load i32, i32* %197, align 4, !dbg !13633
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13636

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13637
  %201 = or i32 %200, 1, !dbg !13637
  br label %212, !dbg !13637

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13639
  %204 = or i32 %203, 4, !dbg !13639
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13639
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13639
  %206 = or i32 %205, 1, !dbg !13639
  br label %212, !dbg !13639

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13642
  %209 = and i32 %208, -2, !dbg !13642
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13642
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13642
  %211 = and i32 %210, -5, !dbg !13642
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13644
  %214 = load i32, i32* %197, align 4, !dbg !13645
  %215 = icmp eq i32 %214, 0, !dbg !13647
  %216 = tail call i32 @HAL_GetTick() #28, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %216, metadata !13420, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata i32 %216, metadata !13420, metadata !DIExpression()), !dbg !13430
  br i1 %215, label %225, label %217, !dbg !13649

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13650
  %219 = and i32 %218, 2, !dbg !13652
  %220 = icmp eq i32 %219, 0, !dbg !13652
  br i1 %220, label %221, label %233, !dbg !13653

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #28, !dbg !13654
  %223 = sub i32 %222, %216, !dbg !13657
  %224 = icmp ugt i32 %223, 5000, !dbg !13658
  br i1 %224, label %337, label %217, !dbg !13659, !llvm.loop !13660

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13662
  %227 = and i32 %226, 2, !dbg !13662
  %228 = icmp eq i32 %227, 0, !dbg !13662
  br i1 %228, label %233, label %229, !dbg !13664

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #28, !dbg !13665
  %231 = sub i32 %230, %216, !dbg !13668
  %232 = icmp ugt i32 %231, 5000, !dbg !13669
  br i1 %232, label %337, label %225, !dbg !13670, !llvm.loop !13671

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13673

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13674
  %236 = and i32 %235, -268435457, !dbg !13674
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13674
  br label %237, !dbg !13677

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13678
  %239 = load i32, i32* %238, align 4, !dbg !13678
  %240 = icmp eq i32 %239, 0, !dbg !13680
  br i1 %240, label %336, label %241, !dbg !13681

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13682
  %243 = and i32 %242, 12, !dbg !13682
  %244 = icmp eq i32 %243, 8, !dbg !13685
  br i1 %244, label %297, label %245, !dbg !13686

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13687
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13690
  %247 = tail call i32 @HAL_GetTick() #28, !dbg !13690
  call void @llvm.dbg.value(metadata i32 %247, metadata !13420, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.value(metadata i32 %247, metadata !13420, metadata !DIExpression()), !dbg !13430
  br i1 %246, label %248, label %289, !dbg !13691

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13692
  %250 = and i32 %249, 33554432, !dbg !13692
  %251 = icmp eq i32 %250, 0, !dbg !13692
  br i1 %251, label %256, label %252, !dbg !13694

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #28, !dbg !13695
  %254 = sub i32 %253, %247, !dbg !13698
  %255 = icmp ugt i32 %254, 2, !dbg !13699
  br i1 %255, label %337, label %248, !dbg !13700, !llvm.loop !13701

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13703
  %258 = load i32, i32* %257, align 4, !dbg !13703
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13703
  %260 = load i32, i32* %259, align 4, !dbg !13703
  %261 = or i32 %260, %258, !dbg !13703
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13703
  %263 = load i32, i32* %262, align 4, !dbg !13703
  %264 = shl i32 %263, 6, !dbg !13703
  %265 = or i32 %261, %264, !dbg !13703
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13703
  %267 = load i32, i32* %266, align 4, !dbg !13703
  %268 = shl i32 %267, 15, !dbg !13703
  %269 = add i32 %268, -65536, !dbg !13703
  %270 = and i32 %269, -65536, !dbg !13703
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13703
  %272 = load i32, i32* %271, align 4, !dbg !13703
  %273 = shl i32 %272, 24, !dbg !13703
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13703
  %275 = load i32, i32* %274, align 4, !dbg !13703
  %276 = shl i32 %275, 28, !dbg !13703
  %277 = or i32 %265, %273, !dbg !13703
  %278 = or i32 %277, %270, !dbg !13703
  %279 = or i32 %278, %276, !dbg !13703
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13703
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13704
  %280 = tail call i32 @HAL_GetTick() #28, !dbg !13705
  call void @llvm.dbg.value(metadata i32 %280, metadata !13420, metadata !DIExpression()), !dbg !13430
  br label %281, !dbg !13706

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13707
  %283 = and i32 %282, 33554432, !dbg !13708
  %284 = icmp eq i32 %283, 0, !dbg !13708
  br i1 %284, label %285, label %336, !dbg !13706

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #28, !dbg !13709
  %287 = sub i32 %286, %280, !dbg !13712
  %288 = icmp ugt i32 %287, 2, !dbg !13713
  br i1 %288, label %337, label %281, !dbg !13714, !llvm.loop !13715

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13717
  %291 = and i32 %290, 33554432, !dbg !13717
  %292 = icmp eq i32 %291, 0, !dbg !13717
  br i1 %292, label %336, label %293, !dbg !13719

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #28, !dbg !13720
  %295 = sub i32 %294, %247, !dbg !13723
  %296 = icmp ugt i32 %295, 2, !dbg !13724
  br i1 %296, label %337, label %289, !dbg !13725, !llvm.loop !13726

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13728
  br i1 %298, label %337, label %299, !dbg !13731

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13732
  call void @llvm.dbg.value(metadata i32 %300, metadata !13421, metadata !DIExpression()), !dbg !13430
  %301 = and i32 %300, 4194304, !dbg !13734
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13736
  %303 = load i32, i32* %302, align 4, !dbg !13736
  %304 = icmp eq i32 %301, %303, !dbg !13737
  br i1 %304, label %305, label %337, !dbg !13738

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13739
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13740
  %308 = load i32, i32* %307, align 4, !dbg !13740
  %309 = icmp eq i32 %306, %308, !dbg !13741
  br i1 %309, label %310, label %337, !dbg !13742

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13743
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13744
  %313 = load i32, i32* %312, align 4, !dbg !13744
  %314 = shl i32 %313, 6, !dbg !13745
  %315 = icmp eq i32 %311, %314, !dbg !13746
  br i1 %315, label %316, label %337, !dbg !13747

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13748
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13749
  %319 = load i32, i32* %318, align 4, !dbg !13749
  %320 = shl i32 %319, 15, !dbg !13750
  %321 = add i32 %320, -65536, !dbg !13750
  %322 = and i32 %321, -65536, !dbg !13750
  %323 = icmp eq i32 %317, %322, !dbg !13751
  br i1 %323, label %324, label %337, !dbg !13752

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13753
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13754
  %327 = load i32, i32* %326, align 4, !dbg !13754
  %328 = shl i32 %327, 24, !dbg !13755
  %329 = icmp eq i32 %325, %328, !dbg !13756
  br i1 %329, label %330, label %337, !dbg !13757

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13758
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13759
  %333 = load i32, i32* %332, align 4, !dbg !13759
  %334 = shl i32 %333, 28, !dbg !13760
  %335 = icmp eq i32 %331, %334, !dbg !13761
  br i1 %335, label %336, label %337, !dbg !13762

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13763

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !13430
  ret i32 %338, !dbg !13764
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #18 !dbg !13765 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13769, metadata !DIExpression()), !dbg !13770
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13771
  store i32 15, i32* %2, align 4, !dbg !13772
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13773
  %4 = and i32 %3, 262144, !dbg !13775
  %5 = icmp eq i32 %4, 0, !dbg !13776
  br i1 %5, label %8, label %6, !dbg !13777

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13778
  store i32 327680, i32* %7, align 4, !dbg !13780
  br label %15, !dbg !13781

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13782
  %10 = and i32 %9, 65536, !dbg !13784
  %11 = icmp eq i32 %10, 0, !dbg !13785
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13786
  br i1 %11, label %14, label %13, !dbg !13787

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13788
  br label %15, !dbg !13790

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13791
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13793
  %17 = and i32 %16, 1, !dbg !13795
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13796
  store i32 %17, i32* %18, align 4, !dbg !13798
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13799
  %20 = lshr i32 %19, 3, !dbg !13800
  %21 = and i32 %20, 31, !dbg !13800
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13801
  store i32 %21, i32* %22, align 4, !dbg !13802
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13803
  %24 = and i32 %23, 4, !dbg !13805
  %25 = icmp eq i32 %24, 0, !dbg !13806
  br i1 %25, label %28, label %26, !dbg !13807

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13808
  store i32 5, i32* %27, align 4, !dbg !13810
  br label %35, !dbg !13811

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13812
  %30 = and i32 %29, 1, !dbg !13814
  %31 = icmp eq i32 %30, 0, !dbg !13815
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13816
  br i1 %31, label %34, label %33, !dbg !13817

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13818
  br label %35, !dbg !13820

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13821
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13823
  %37 = and i32 %36, 1, !dbg !13825
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13826
  store i32 %37, i32* %38, align 4, !dbg !13828
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13829
  %40 = and i32 %39, 16777216, !dbg !13831
  %41 = icmp eq i32 %40, 0, !dbg !13832
  %42 = select i1 %41, i32 1, i32 2, !dbg !13833
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13834
  store i32 %42, i32* %43, align 4, !dbg !13836
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13837
  %45 = and i32 %44, 4194304, !dbg !13838
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13839
  store i32 %45, i32* %46, align 4, !dbg !13840
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13841
  %48 = and i32 %47, 63, !dbg !13842
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13843
  store i32 %48, i32* %49, align 4, !dbg !13844
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13845
  %51 = lshr i32 %50, 6, !dbg !13846
  %52 = and i32 %51, 511, !dbg !13846
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13847
  store i32 %52, i32* %53, align 4, !dbg !13848
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13849
  %55 = shl i32 %54, 1, !dbg !13850
  %56 = and i32 %55, 393216, !dbg !13850
  %57 = add nuw nsw i32 %56, 131072, !dbg !13850
  %58 = lshr exact i32 %57, 16, !dbg !13851
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13852
  store i32 %58, i32* %59, align 4, !dbg !13853
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13854
  %61 = lshr i32 %60, 24, !dbg !13855
  %62 = and i32 %61, 15, !dbg !13855
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13856
  store i32 %62, i32* %63, align 4, !dbg !13857
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13858
  %65 = lshr i32 %64, 28, !dbg !13859
  %66 = and i32 %65, 7, !dbg !13859
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13860
  store i32 %66, i32* %67, align 4, !dbg !13861
  ret void, !dbg !13862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #17 !dbg !13863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13866, metadata !DIExpression()), !dbg !13867
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !13868
  ret void, !dbg !13869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #17 !dbg !13870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13873, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 1000, metadata !13874, metadata !DIExpression()), !dbg !13875
  %2 = udiv i32 %0, 1000, !dbg !13876
  %3 = add nsw i32 %2, -1, !dbg !13877
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13878
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13879
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13880
  ret void, !dbg !13881
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13882 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13884, metadata !DIExpression()), !dbg !13886
  %3 = bitcast i32* %2 to i8*, !dbg !13887
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13887
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13885, metadata !DIExpression()), !dbg !13888
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13889
  store volatile i32 %4, i32* %2, align 4, !dbg !13888
  %5 = load volatile i32, i32* %2, align 4, !dbg !13890
  %6 = icmp eq i32 %0, -1, !dbg !13891
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13884, metadata !DIExpression()), !dbg !13886
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13886
  call void @llvm.dbg.value(metadata i32 %8, metadata !13884, metadata !DIExpression()), !dbg !13886
  br label %9, !dbg !13893

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13884, metadata !DIExpression()), !dbg !13886
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13894
  call void @llvm.dbg.value(metadata i32 undef, metadata !13884, metadata !DIExpression()), !dbg !13886
  %12 = shl i32 %11, 15, !dbg !13886
  %13 = ashr i32 %12, 31, !dbg !13886
  %14 = add i32 %13, %10, !dbg !13886
  call void @llvm.dbg.value(metadata i32 %14, metadata !13884, metadata !DIExpression()), !dbg !13886
  %15 = icmp eq i32 %14, 0, !dbg !13893
  br i1 %15, label %16, label %9, !dbg !13893

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13897
  ret void, !dbg !13897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !13898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13900, metadata !DIExpression()), !dbg !13901
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #17 !dbg !13904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13909, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 0, metadata !13912, metadata !DIExpression()), !dbg !13914
  call void @llvm.dbg.value(metadata i32 0, metadata !13913, metadata !DIExpression()), !dbg !13914
  %2 = icmp eq i32 %0, 0, !dbg !13915
  br i1 %2, label %72, label %3, !dbg !13917

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13918
  %5 = icmp eq i32 %4, 49152, !dbg !13921
  br i1 %5, label %6, label %21, !dbg !13922

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13923
  %8 = select i1 %7, i32 0, i32 5, !dbg !13926
  call void @llvm.dbg.value(metadata i32 %8, metadata !13912, metadata !DIExpression()), !dbg !13914
  %9 = add i32 %0, -120000001, !dbg !13927
  %10 = icmp ult i32 %9, 30000000, !dbg !13927
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13927
  call void @llvm.dbg.value(metadata i32 %11, metadata !13912, metadata !DIExpression()), !dbg !13914
  %12 = icmp ult i32 %9, -30000000, !dbg !13929
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13929
  call void @llvm.dbg.value(metadata i32 %13, metadata !13912, metadata !DIExpression()), !dbg !13914
  %14 = icmp ugt i32 %0, 60000000, !dbg !13931
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13933
  br i1 %16, label %21, label %17, !dbg !13933

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13934
  %19 = and i1 %18, %15, !dbg !13937
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13937
  br label %21, !dbg !13937

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13914
  call void @llvm.dbg.value(metadata i32 %22, metadata !13912, metadata !DIExpression()), !dbg !13914
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13938
  %24 = icmp eq i32 %23, 32768, !dbg !13940
  br i1 %24, label %25, label %45, !dbg !13941

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13942
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13945
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13945
  call void @llvm.dbg.value(metadata i32 %29, metadata !13912, metadata !DIExpression()), !dbg !13914
  %30 = icmp ugt i32 %0, 12000000, !dbg !13946
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13948
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13948
  call void @llvm.dbg.value(metadata i32 %33, metadata !13912, metadata !DIExpression()), !dbg !13914
  %34 = icmp ugt i32 %0, 90000000, !dbg !13949
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13951
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13951
  call void @llvm.dbg.value(metadata i32 %37, metadata !13912, metadata !DIExpression()), !dbg !13914
  %38 = icmp ugt i32 %0, 60000000, !dbg !13952
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13954
  br i1 %40, label %45, label %41, !dbg !13954

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13955
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13958
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13958
  br label %45, !dbg !13958

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13959
  call void @llvm.dbg.value(metadata i32 %46, metadata !13912, metadata !DIExpression()), !dbg !13914
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13960
  %48 = icmp eq i32 %47, 16384, !dbg !13962
  br i1 %48, label %49, label %61, !dbg !13963

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13964
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13967
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13967
  call void @llvm.dbg.value(metadata i32 %53, metadata !13912, metadata !DIExpression()), !dbg !13914
  %54 = icmp ugt i32 %0, 60000000, !dbg !13968
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13970
  br i1 %56, label %61, label %57, !dbg !13970

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13971
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13974
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13974
  br label %61, !dbg !13974

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13959
  call void @llvm.dbg.value(metadata i32 %62, metadata !13912, metadata !DIExpression()), !dbg !13914
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #27, !dbg !13975
  call void @llvm.dbg.value(metadata i32 2, metadata !13910, metadata !DIExpression()), !dbg !13914
  br label %63, !dbg !13976

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13959
  call void @llvm.dbg.value(metadata i32 %64, metadata !13910, metadata !DIExpression()), !dbg !13914
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !13977
  call void @llvm.dbg.value(metadata i32 %65, metadata !13911, metadata !DIExpression()), !dbg !13914
  %66 = add nsw i32 %64, -1, !dbg !13979
  call void @llvm.dbg.value(metadata i32 %66, metadata !13910, metadata !DIExpression()), !dbg !13914
  %67 = icmp ne i32 %65, %62, !dbg !13980
  %68 = icmp ne i32 %66, 0, !dbg !13981
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13981
  br i1 %69, label %63, label %70, !dbg !13982, !llvm.loop !13983

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13985
  call void @llvm.dbg.value(metadata i32 %73, metadata !13913, metadata !DIExpression()), !dbg !13914
  ret i32 %73, !dbg !13986
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #18 !dbg !13987 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13989
  %2 = and i32 %1, 49152, !dbg !13989
  ret i32 %2, !dbg !13990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #17 !dbg !13991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13993, metadata !DIExpression()), !dbg !13994
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13995
  %3 = and i32 %2, -16, !dbg !13995
  %4 = or i32 %3, %0, !dbg !13995
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13995
  ret void, !dbg !13996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #18 !dbg !13997 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13998
  %2 = and i32 %1, 15, !dbg !13998
  ret i32 %2, !dbg !13999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !14000 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14018, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14019, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 0, metadata !14020, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 0, metadata !14021, metadata !DIExpression()), !dbg !14022
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14023
  %4 = icmp eq i32 %3, 0, !dbg !14025
  br i1 %4, label %5, label %21, !dbg !14026

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %6, metadata !14021, metadata !DIExpression()), !dbg !14022
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.157() #27, !dbg !14029
  %8 = icmp eq i32 %7, 1, !dbg !14031
  br i1 %8, label %13, label %9, !dbg !14032

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.158() #27, !dbg !14033
  br label %10, !dbg !14035

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.157() #27, !dbg !14036
  %12 = icmp eq i32 %11, 1, !dbg !14037
  br i1 %12, label %13, label %10, !dbg !14035, !llvm.loop !14038

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14040
  %15 = load i32, i32* %14, align 4, !dbg !14040
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14041
  %17 = load i32, i32* %16, align 4, !dbg !14041
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14042
  %19 = load i32, i32* %18, align 4, !dbg !14042
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.159(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !14043
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !14044
  call void @llvm.dbg.value(metadata i32 %20, metadata !14020, metadata !DIExpression()), !dbg !14022
  br label %21, !dbg !14045

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14046
  call void @llvm.dbg.value(metadata i32 %22, metadata !14020, metadata !DIExpression()), !dbg !14022
  ret i32 %22, !dbg !14047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #18 !dbg !14048 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14052, metadata !DIExpression()), !dbg !14053
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.161() #27, !dbg !14054
  %2 = icmp ne i32 %1, 0, !dbg !14056
  call void @llvm.dbg.value(metadata i1 %2, metadata !14052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14053
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #27, !dbg !14057
  %4 = icmp ne i32 %3, 0, !dbg !14059
  call void @llvm.dbg.value(metadata i1 undef, metadata !14052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14053
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !14060
  %6 = icmp ne i32 %5, 0, !dbg !14062
  %7 = select i1 %6, i1 true, i1 %4, !dbg !14063
  %8 = select i1 %7, i1 true, i1 %2, !dbg !14063
  %9 = zext i1 %8 to i32, !dbg !14063
  call void @llvm.dbg.value(metadata i32 %9, metadata !14052, metadata !DIExpression()), !dbg !14053
  ret i32 %9, !dbg !14064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #3 !dbg !14065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14069, metadata !DIExpression()), !dbg !14072
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14070, metadata !DIExpression()), !dbg !14072
  call void @llvm.dbg.value(metadata i32 0, metadata !14071, metadata !DIExpression()), !dbg !14072
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14073
  %4 = load i32, i32* %3, align 4, !dbg !14073
  %5 = and i32 %4, 63, !dbg !14074
  %6 = udiv i32 %0, %5, !dbg !14075
  call void @llvm.dbg.value(metadata i32 %6, metadata !14071, metadata !DIExpression()), !dbg !14072
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14076
  %8 = load i32, i32* %7, align 4, !dbg !14076
  %9 = and i32 %8, 511, !dbg !14077
  %10 = mul i32 %9, %6, !dbg !14078
  call void @llvm.dbg.value(metadata i32 %10, metadata !14071, metadata !DIExpression()), !dbg !14072
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14079
  %12 = load i32, i32* %11, align 4, !dbg !14079
  %13 = lshr i32 %12, 15, !dbg !14080
  %14 = and i32 %13, 131070, !dbg !14080
  %15 = add nuw nsw i32 %14, 2, !dbg !14080
  %16 = udiv i32 %10, %15, !dbg !14081
  call void @llvm.dbg.value(metadata i32 %16, metadata !14071, metadata !DIExpression()), !dbg !14072
  ret i32 %16, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.157() unnamed_addr #18 !dbg !14083 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14084
  %2 = lshr i32 %1, 1, !dbg !14085
  %3 = and i32 %2, 1, !dbg !14085
  ret i32 %3, !dbg !14086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.158() unnamed_addr #17 !dbg !14087 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14088
  %2 = or i32 %1, 1, !dbg !14088
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14088
  ret void, !dbg !14089
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.159(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #17 !dbg !14090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14092, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata i32 %1, metadata !14093, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata i32 %2, metadata !14094, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata i32 %3, metadata !14095, metadata !DIExpression()), !dbg !14096
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14097
  %6 = and i32 %5, -4227072, !dbg !14097
  %7 = or i32 %1, %0, !dbg !14097
  %8 = shl i32 %2, 6, !dbg !14097
  %9 = or i32 %7, %8, !dbg !14097
  %10 = or i32 %9, %6, !dbg !14097
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14097
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14098
  %12 = and i32 %11, -196609, !dbg !14098
  %13 = or i32 %12, %3, !dbg !14098
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14098
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14099
  %15 = and i32 %14, -1879048193, !dbg !14099
  %16 = or i32 %15, %3, !dbg !14099
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14099
  ret void, !dbg !14100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #17 !dbg !14101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14105, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14106, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i32 0, metadata !14107, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i32 0, metadata !14108, metadata !DIExpression()), !dbg !14109
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14110
  %4 = load i32, i32* %3, align 4, !dbg !14110
  %5 = lshr i32 %4, 4, !dbg !14110
  %6 = and i32 %5, 15, !dbg !14110
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14110
  %8 = load i8, i8* %7, align 1, !dbg !14110
  %9 = zext i8 %8 to i32, !dbg !14110
  %10 = lshr i32 %0, %9, !dbg !14110
  call void @llvm.dbg.value(metadata i32 %10, metadata !14108, metadata !DIExpression()), !dbg !14109
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14111
  %12 = icmp ult i32 %11, %10, !dbg !14113
  br i1 %12, label %13, label %16, !dbg !14114

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %14, metadata !14107, metadata !DIExpression()), !dbg !14109
  %15 = icmp eq i32 %14, 0, !dbg !14117
  br i1 %15, label %16, label %30, !dbg !14119

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.160() #27, !dbg !14120
  br label %17, !dbg !14122

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.161() #27, !dbg !14123
  %19 = icmp eq i32 %18, 1, !dbg !14124
  br i1 %19, label %20, label %17, !dbg !14122, !llvm.loop !14125

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14127
  tail call fastcc void @LL_RCC_SetAHBPrescaler.162(i32 noundef %21) #27, !dbg !14128
  tail call fastcc void @LL_RCC_SetSysClkSource.163() #27, !dbg !14129
  br label %22, !dbg !14130

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.164() #27, !dbg !14131
  %24 = icmp eq i32 %23, 8, !dbg !14132
  br i1 %24, label %25, label %22, !dbg !14130, !llvm.loop !14133

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14135
  %27 = load i32, i32* %26, align 4, !dbg !14135
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.165(i32 noundef %27) #27, !dbg !14136
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14137
  %29 = load i32, i32* %28, align 4, !dbg !14137
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.166(i32 noundef %29) #27, !dbg !14138
  br label %30, !dbg !14139

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14140
  %33 = icmp ugt i32 %32, %10, !dbg !14142
  br i1 %33, label %34, label %36, !dbg !14143

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14144
  call void @llvm.dbg.value(metadata i32 %35, metadata !14107, metadata !DIExpression()), !dbg !14109
  br label %36, !dbg !14146

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14109
  call void @llvm.dbg.value(metadata i32 %37, metadata !14107, metadata !DIExpression()), !dbg !14109
  %38 = icmp eq i32 %37, 0, !dbg !14147
  br i1 %38, label %39, label %40, !dbg !14149

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !14150
  br label %40, !dbg !14152

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.160() unnamed_addr #17 !dbg !14154 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14155
  %2 = or i32 %1, 16777216, !dbg !14155
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14155
  ret void, !dbg !14156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.161() unnamed_addr #18 !dbg !14157 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14158
  %2 = lshr i32 %1, 25, !dbg !14159
  %3 = and i32 %2, 1, !dbg !14159
  ret i32 %3, !dbg !14160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.162(i32 noundef %0) unnamed_addr #17 !dbg !14161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14163, metadata !DIExpression()), !dbg !14164
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14165
  %3 = and i32 %2, -241, !dbg !14165
  %4 = or i32 %3, %0, !dbg !14165
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14165
  ret void, !dbg !14166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.163() unnamed_addr #17 !dbg !14167 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14169, metadata !DIExpression()), !dbg !14170
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14171
  %2 = and i32 %1, -4, !dbg !14171
  %3 = or i32 %2, 2, !dbg !14171
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14171
  ret void, !dbg !14172
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.164() unnamed_addr #18 !dbg !14173 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14174
  %2 = and i32 %1, 12, !dbg !14174
  ret i32 %2, !dbg !14175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.165(i32 noundef %0) unnamed_addr #17 !dbg !14176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14178, metadata !DIExpression()), !dbg !14179
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14180
  %3 = and i32 %2, -7169, !dbg !14180
  %4 = or i32 %3, %0, !dbg !14180
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14180
  ret void, !dbg !14181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.166(i32 noundef %0) unnamed_addr #17 !dbg !14182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14184, metadata !DIExpression()), !dbg !14185
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14186
  %3 = and i32 %2, -57345, !dbg !14186
  %4 = or i32 %3, %0, !dbg !14186
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14186
  ret void, !dbg !14187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #18 !dbg !14188 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14189
  %2 = lshr i32 %1, 29, !dbg !14190
  %3 = and i32 %2, 1, !dbg !14190
  ret i32 %3, !dbg !14191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #18 !dbg !14192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14193
  %2 = lshr i32 %1, 27, !dbg !14194
  %3 = and i32 %2, 1, !dbg !14194
  ret i32 %3, !dbg !14195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #17 !dbg !14196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14200, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata i32 %1, metadata !14201, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14202, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14203, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata i32 0, metadata !14204, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.value(metadata i32 0, metadata !14205, metadata !DIExpression()), !dbg !14206
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14207
  %6 = icmp eq i32 %5, 0, !dbg !14209
  br i1 %6, label %7, label %27, !dbg !14210

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !14211
  call void @llvm.dbg.value(metadata i32 %8, metadata !14205, metadata !DIExpression()), !dbg !14206
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.167() #27, !dbg !14213
  %10 = icmp eq i32 %9, 1, !dbg !14215
  br i1 %10, label %19, label %11, !dbg !14216

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14217
  br i1 %12, label %13, label %14, !dbg !14220

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !14221
  br label %15, !dbg !14223

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.168() #27, !dbg !14224
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.169() #27, !dbg !14226
  br label %16, !dbg !14227

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.167() #27, !dbg !14228
  %18 = icmp eq i32 %17, 1, !dbg !14229
  br i1 %18, label %19, label %16, !dbg !14227, !llvm.loop !14230

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14232
  %21 = load i32, i32* %20, align 4, !dbg !14232
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14233
  %23 = load i32, i32* %22, align 4, !dbg !14233
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14234
  %25 = load i32, i32* %24, align 4, !dbg !14234
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.159(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !14235
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !14236
  call void @llvm.dbg.value(metadata i32 %26, metadata !14204, metadata !DIExpression()), !dbg !14206
  br label %27, !dbg !14237

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14238
  call void @llvm.dbg.value(metadata i32 %28, metadata !14204, metadata !DIExpression()), !dbg !14206
  ret i32 %28, !dbg !14239
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.167() unnamed_addr #18 !dbg !14240 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14241
  %2 = lshr i32 %1, 17, !dbg !14242
  %3 = and i32 %2, 1, !dbg !14242
  ret i32 %3, !dbg !14243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #17 !dbg !14244 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14245
  %2 = or i32 %1, 262144, !dbg !14245
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14245
  ret void, !dbg !14246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.168() unnamed_addr #17 !dbg !14247 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14248
  %2 = and i32 %1, -262145, !dbg !14248
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14248
  ret void, !dbg !14249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.169() unnamed_addr #17 !dbg !14250 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14251
  %2 = or i32 %1, 65536, !dbg !14251
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14251
  ret void, !dbg !14252
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14253 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14256, metadata !DIExpression()), !dbg !14272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14256, metadata !DIExpression()), !dbg !14272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14256, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14272
  ret void, !dbg !14273
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14274 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14278, metadata !DIExpression()), !dbg !14280
  %2 = icmp eq i8* %0, null, !dbg !14281
  br i1 %2, label %29, label %3, !dbg !14283

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14284
  %5 = icmp eq i8 %4, 0, !dbg !14285
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14286
  br i1 %6, label %29, label %8, !dbg !14286

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14279, metadata !DIExpression()), !dbg !14280
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14287

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14279, metadata !DIExpression()), !dbg !14280
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !14289
  br i1 %10, label %11, label %15, !dbg !14294

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14295
  %13 = load i8*, i8** %12, align 4, !dbg !14295
  %14 = icmp eq i8* %13, %0, !dbg !14296
  br i1 %14, label %29, label %15, !dbg !14297

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14298
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14279, metadata !DIExpression()), !dbg !14280
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14299
  br i1 %17, label %7, label %8, !dbg !14300, !llvm.loop !14301

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14279, metadata !DIExpression()), !dbg !14280
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !14303
  br i1 %20, label %21, label %26, !dbg !14307

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14308
  %23 = load i8*, i8** %22, align 4, !dbg !14308
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #28, !dbg !14309
  %25 = icmp eq i32 %24, 0, !dbg !14310
  br i1 %25, label %29, label %26, !dbg !14311

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14312
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14279, metadata !DIExpression()), !dbg !14280
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14313
  br i1 %28, label %29, label %18, !dbg !14287, !llvm.loop !14314

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14280
  ret %struct.device* %30, !dbg !14316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #3 !dbg !14317 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14321, metadata !DIExpression()), !dbg !14322
  %2 = icmp eq %struct.device* %0, null, !dbg !14323
  br i1 %2, label %14, label %3, !dbg !14325

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14326
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14326
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14327
  %7 = load i8, i8* %6, align 1, !dbg !14327
  %8 = and i8 %7, 1, !dbg !14327
  %9 = icmp eq i8 %8, 0, !dbg !14327
  br i1 %9, label %14, label %10, !dbg !14328

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14329
  %12 = load i8, i8* %11, align 1, !dbg !14329
  %13 = icmp eq i8 %12, 0, !dbg !14330
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14322
  ret i1 %15, !dbg !14331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14332 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14337, metadata !DIExpression()), !dbg !14338
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14339
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14341 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14349, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14350, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.value(metadata i8* %2, metadata !14351, metadata !DIExpression()), !dbg !14354
  %5 = bitcast i32* %4 to i8*, !dbg !14355
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14355
  call void @llvm.dbg.value(metadata i32 0, metadata !14352, metadata !DIExpression()), !dbg !14354
  store i32 0, i32* %4, align 4, !dbg !14356
  call void @llvm.dbg.value(metadata i32* %4, metadata !14352, metadata !DIExpression(DW_OP_deref)), !dbg !14354
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14357
  call void @llvm.dbg.value(metadata i16* %6, metadata !14353, metadata !DIExpression()), !dbg !14354
  %7 = load i32, i32* %4, align 4, !dbg !14358
  call void @llvm.dbg.value(metadata i32 %7, metadata !14352, metadata !DIExpression()), !dbg !14354
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14359
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14360
  ret i32 %8, !dbg !14361
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !14362 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14366, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32* %1, metadata !14367, metadata !DIExpression()), !dbg !14372
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14373
  %4 = load i16*, i16** %3, align 4, !dbg !14373
  call void @llvm.dbg.value(metadata i16* %4, metadata !14368, metadata !DIExpression()), !dbg !14372
  %5 = icmp eq i16* %4, null, !dbg !14374
  br i1 %5, label %14, label %6, !dbg !14375

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14376
  call void @llvm.dbg.value(metadata i32 %7, metadata !14369, metadata !DIExpression()), !dbg !14376
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14377
  %9 = load i16, i16* %8, align 2, !dbg !14377
  %10 = add i16 %9, -32767, !dbg !14378
  %11 = icmp ult i16 %10, 2, !dbg !14378
  %12 = add i32 %7, 1, !dbg !14379
  call void @llvm.dbg.value(metadata i32 %12, metadata !14369, metadata !DIExpression()), !dbg !14376
  br i1 %11, label %13, label %6, !dbg !14378, !llvm.loop !14381

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14384
  br label %14, !dbg !14385

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14387 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14391, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i32 %1, metadata !14392, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14393, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i8* %3, metadata !14394, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i32 0, metadata !14395, metadata !DIExpression()), !dbg !14403
  %5 = icmp eq i32 %1, 0, !dbg !14404
  br i1 %5, label %16, label %8, !dbg !14405

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14395, metadata !DIExpression()), !dbg !14403
  %7 = icmp eq i32 %15, %1, !dbg !14404
  br i1 %7, label %16, label %8, !dbg !14405, !llvm.loop !14406

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14395, metadata !DIExpression()), !dbg !14403
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14408
  %11 = load i16, i16* %10, align 2, !dbg !14408
  call void @llvm.dbg.value(metadata i16 %11, metadata !14397, metadata !DIExpression()), !dbg !14409
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !14410
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14400, metadata !DIExpression()), !dbg !14409
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #28, !dbg !14411
  call void @llvm.dbg.value(metadata i32 %13, metadata !14401, metadata !DIExpression()), !dbg !14409
  %14 = icmp slt i32 %13, 0, !dbg !14412
  %15 = add nuw i32 %9, 1, !dbg !14414
  call void @llvm.dbg.value(metadata i32 %15, metadata !14395, metadata !DIExpression()), !dbg !14403
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !14416 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14420, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14421, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14422, metadata !DIExpression()), !dbg !14423
  %2 = sext i16 %0 to i32, !dbg !14424
  %3 = icmp slt i16 %0, 1, !dbg !14426
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14427
  %6 = add nsw i32 %2, -1, !dbg !14427
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14427
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14427
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14421, metadata !DIExpression()), !dbg !14423
  ret %struct.device* %8, !dbg !14428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14429 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14431, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14432, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i8* %2, metadata !14433, metadata !DIExpression()), !dbg !14436
  %5 = bitcast i32* %4 to i8*, !dbg !14437
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14437
  call void @llvm.dbg.value(metadata i32 0, metadata !14434, metadata !DIExpression()), !dbg !14436
  store i32 0, i32* %4, align 4, !dbg !14438
  call void @llvm.dbg.value(metadata i32* %4, metadata !14434, metadata !DIExpression(DW_OP_deref)), !dbg !14436
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14439
  call void @llvm.dbg.value(metadata i16* %6, metadata !14435, metadata !DIExpression()), !dbg !14436
  %7 = load i32, i32* %4, align 4, !dbg !14440
  call void @llvm.dbg.value(metadata i32 %7, metadata !14434, metadata !DIExpression()), !dbg !14436
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14441
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14442
  ret i32 %8, !dbg !14443
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !14444 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14446, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i32* %1, metadata !14447, metadata !DIExpression()), !dbg !14451
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14452
  %4 = load i16*, i16** %3, align 4, !dbg !14452
  call void @llvm.dbg.value(metadata i16* %4, metadata !14448, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i32 0, metadata !14449, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i32 0, metadata !14450, metadata !DIExpression()), !dbg !14451
  %5 = icmp eq i16* %4, null, !dbg !14453
  br i1 %5, label %22, label %6, !dbg !14455

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14449, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i16* %8, metadata !14448, metadata !DIExpression()), !dbg !14451
  %9 = load i16, i16* %8, align 2, !dbg !14456
  %10 = icmp eq i16 %9, -32768, !dbg !14460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14449, metadata !DIExpression()), !dbg !14451
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14461
  call void @llvm.dbg.value(metadata i16* %11, metadata !14448, metadata !DIExpression()), !dbg !14451
  %12 = zext i1 %10 to i32, !dbg !14462
  %13 = add i32 %7, %12, !dbg !14462
  call void @llvm.dbg.value(metadata i32 %13, metadata !14449, metadata !DIExpression()), !dbg !14451
  %14 = icmp eq i32 %13, 2, !dbg !14463
  br i1 %14, label %15, label %6, !dbg !14464

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14451
  call void @llvm.dbg.value(metadata i32 %16, metadata !14450, metadata !DIExpression()), !dbg !14451
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14465
  %18 = load i16, i16* %17, align 2, !dbg !14465
  %19 = icmp eq i16 %18, 32767, !dbg !14466
  %20 = add i32 %16, 1, !dbg !14467
  call void @llvm.dbg.value(metadata i32 %20, metadata !14450, metadata !DIExpression()), !dbg !14451
  br i1 %19, label %21, label %15, !dbg !14469, !llvm.loop !14470

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14472
  br label %22, !dbg !14473

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14474
  call void @llvm.dbg.value(metadata i16* %23, metadata !14448, metadata !DIExpression()), !dbg !14451
  ret i16* %23, !dbg !14475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #3 !dbg !14476 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14479
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14480
  ret i32* %2, !dbg !14481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !14482 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14630, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14631, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14632, metadata !DIExpression()), !dbg !14633
  ret void, !dbg !14634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14639, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i32 %1, metadata !14640, metadata !DIExpression()), !dbg !14641
  ret void, !dbg !14642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14643 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14647, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.value(metadata i32 %1, metadata !14648, metadata !DIExpression()), !dbg !14649
  ret void, !dbg !14650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14655, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i8* %1, metadata !14656, metadata !DIExpression()), !dbg !14657
  ret i32 -134, !dbg !14658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14663, metadata !DIExpression()), !dbg !14665
  call void @llvm.dbg.value(metadata i8* %1, metadata !14664, metadata !DIExpression()), !dbg !14665
  ret i32 -134, !dbg !14666
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #11 !dbg !14667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14670, metadata !DIExpression()), !dbg !14671
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14672, !srcloc !14678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #26, !dbg !14679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14676, metadata !DIExpression()) #26, !dbg !14679
  br label %3, !dbg !14680

3:                                                ; preds = %3, %1
  br label %3, !dbg !14681, !llvm.loop !14684
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14691, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14692, metadata !DIExpression()), !dbg !14693
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.174, i32 0, i32 0), i32 noundef 69) #28, !dbg !14694
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14699
  unreachable, !dbg !14699
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #11 !dbg !14700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14702, metadata !DIExpression()), !dbg !14703
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !14704
  unreachable, !dbg !14704
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14707, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14708, metadata !DIExpression()), !dbg !14711
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14712, !srcloc !14678
  call void @llvm.dbg.value(metadata i32 undef, metadata !14675, metadata !DIExpression()) #26, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14676, metadata !DIExpression()) #26, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !14709, metadata !DIExpression()), !dbg !14711
  %4 = tail call fastcc %struct.k_thread* @k_current_get.177() #29, !dbg !14715
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14710, metadata !DIExpression()), !dbg !14711
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !14716
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.178, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #28, !dbg !14716
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14721
  br i1 %6, label %15, label %7, !dbg !14723

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14724, metadata !DIExpression()), !dbg !14729
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14731
  %9 = load i32, i32* %8, align 4, !dbg !14731
  %10 = and i32 %9, 511, !dbg !14732
  %11 = icmp eq i32 %10, 0, !dbg !14733
  br i1 %11, label %13, label %12, !dbg !14734

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 69) #28, !dbg !14735
  br label %13, !dbg !14741

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14742
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.180, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #28, !dbg !14742
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !14747
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14724, metadata !DIExpression()), !dbg !14748
  br label %17, !dbg !14753

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14742
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.180, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #28, !dbg !14742
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !14747
  br label %17, !dbg !14754

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14712
  call void @llvm.dbg.value(metadata i32 %18, metadata !14675, metadata !DIExpression()) #26, !dbg !14714
  call void @llvm.dbg.value(metadata i32 %18, metadata !14709, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14755, metadata !DIExpression()) #26, !dbg !14758
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14760, !srcloc !14761
  tail call fastcc void @k_thread_abort.181(%struct.k_thread* noundef %4) #27, !dbg !14762
  ret void, !dbg !14765
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.177() unnamed_addr #12 !dbg !14766 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.189() #29, !dbg !14770
  ret %struct.k_thread* %1, !dbg !14771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14776, metadata !DIExpression()), !dbg !14777
  %2 = icmp ult i32 %0, 5, !dbg !14778
  br i1 %2, label %3, label %6, !dbg !14778

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14778
  %5 = load i8*, i8** %4, align 4, !dbg !14778
  br label %6, !dbg !14778

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.183, i32 0, i32 0), %1 ], !dbg !14779
  ret i8* %7, !dbg !14781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14786, metadata !DIExpression()), !dbg !14788
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14789
  br i1 %2, label %9, label %3, !dbg !14790

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #28, !dbg !14791
  call void @llvm.dbg.value(metadata i8* %4, metadata !14787, metadata !DIExpression()), !dbg !14788
  %5 = icmp eq i8* %4, null, !dbg !14792
  br i1 %5, label %9, label %6, !dbg !14794

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14795
  %8 = icmp eq i8 %7, 0, !dbg !14796
  br i1 %8, label %9, label %10, !dbg !14797

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.182, i32 0, i32 0), metadata !14787, metadata !DIExpression()), !dbg !14788
  br label %10, !dbg !14798

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.182, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14788
  call void @llvm.dbg.value(metadata i8* %11, metadata !14787, metadata !DIExpression()), !dbg !14788
  ret i8* %11, !dbg !14800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.181(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14801 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14805, metadata !DIExpression()), !dbg !14806
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14807, !srcloc !14809
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #28, !dbg !14810
  ret void, !dbg !14811
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.189() unnamed_addr #12 !dbg !14812 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14813, !srcloc !14815
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #28, !dbg !14816
  ret %struct.k_thread* %1, !dbg !14817
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14818 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14822, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.value(metadata i32 %1, metadata !14823, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.value(metadata i32 %2, metadata !14824, metadata !DIExpression()), !dbg !14825
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #28, !dbg !14826
  ret void, !dbg !14827
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14828 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14832, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i8* %1, metadata !14833, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32 %2, metadata !14834, metadata !DIExpression()), !dbg !14835
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #28, !dbg !14836
  ret void, !dbg !14837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14838 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !14839
  ret void, !dbg !14840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14843, metadata !DIExpression()), !dbg !14844
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !14845
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14846
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14847
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14848
  %4 = trunc i32 %0 to i8, !dbg !14849
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14850
  store i8 %4, i8* %5, align 4, !dbg !14851
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14852
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !14853
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14854
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14855
  store i8* %8, i8** %9, align 4, !dbg !14856
  ret void, !dbg !14857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14860, metadata !DIExpression()), !dbg !14866
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14867
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14861, metadata !DIExpression()), !dbg !14866
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14868
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14862, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.value(metadata i8* null, metadata !14865, metadata !DIExpression()), !dbg !14866
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14869
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14870
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #28, !dbg !14871
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !14872
  ret void, !dbg !14873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14874 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14878, metadata !DIExpression()), !dbg !14879
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14880
  ret i8* %2, !dbg !14881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()), !dbg !14888
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14889
  %3 = load i8, i8* %2, align 1, !dbg !14890
  %4 = and i8 %3, -5, !dbg !14890
  store i8 %4, i8* %2, align 1, !dbg !14890
  ret void, !dbg !14891
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #11 !dbg !14892 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !14895
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #28, !dbg !14896
  %3 = ptrtoint i8* %2 to i32, !dbg !14905
  %4 = add i32 %3, 2048, !dbg !14906
  call void @llvm.dbg.value(metadata i32 %4, metadata !14900, metadata !DIExpression()) #26, !dbg !14907
  call void @llvm.dbg.value(metadata i32 %4, metadata !14908, metadata !DIExpression()) #26, !dbg !14911
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14913, !srcloc !14914
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14915
  %6 = or i32 %5, 512, !dbg !14915
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14915
  tail call fastcc void @__NVIC_SetPriority.198(i32 noundef -2, i32 noundef 255) #28, !dbg !14916
  tail call fastcc void @__NVIC_SetPriority.198(i32 noundef -5, i32 noundef 0) #28, !dbg !14919
  tail call fastcc void @__NVIC_SetPriority.198(i32 noundef -12, i32 noundef 0) #28, !dbg !14920
  tail call fastcc void @__NVIC_SetPriority.198(i32 noundef -11, i32 noundef 0) #28, !dbg !14921
  tail call fastcc void @__NVIC_SetPriority.198(i32 noundef -10, i32 noundef 0) #28, !dbg !14922
  tail call fastcc void @__NVIC_SetPriority.198(i32 noundef -4, i32 noundef 0) #28, !dbg !14923
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14924
  %8 = or i32 %7, 458752, !dbg !14924
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14924
  tail call void @z_arm_fault_init() #28, !dbg !14925
  tail call void @z_arm_cpu_idle_init() #28, !dbg !14926
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14927
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14930
  %9 = tail call i32 @z_arm_mpu_init() #28, !dbg !14931
  tail call void @z_arm_configure_static_mpu_regions() #28, !dbg !14932
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14933
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14933
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14894, metadata !DIExpression()), !dbg !14934
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !14935
  call void @z_device_state_init() #28, !dbg !14936
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !14937
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !14938
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !14939
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14940
  unreachable, !dbg !14940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2253, metadata !DIExpression()), !dbg !14941
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14942
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14942
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2254, metadata !DIExpression()), !dbg !14941
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2254, metadata !DIExpression()), !dbg !14941
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14943
  br i1 %7, label %8, label %35, !dbg !14944

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2254, metadata !DIExpression()), !dbg !14941
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14945
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14945
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2264, metadata !DIExpression()), !dbg !14946
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14947
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14947
  %14 = tail call i32 %13(%struct.device* noundef %11) #28, !dbg !14948
  call void @llvm.dbg.value(metadata i32 %14, metadata !2268, metadata !DIExpression()), !dbg !14946
  %15 = icmp eq %struct.device* %11, null, !dbg !14949
  br i1 %15, label %32, label %16, !dbg !14951

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14952
  br i1 %17, label %26, label %18, !dbg !14955

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14956
  call void @llvm.dbg.value(metadata i32 %19, metadata !2268, metadata !DIExpression()), !dbg !14946
  %20 = icmp ult i32 %19, 255, !dbg !14958
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14958
  call void @llvm.dbg.value(metadata i32 %21, metadata !2268, metadata !DIExpression()), !dbg !14946
  %22 = trunc i32 %21 to i8, !dbg !14959
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14960
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14960
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14961
  store i8 %22, i8* %25, align 1, !dbg !14962
  br label %26, !dbg !14963

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14964
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14964
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14965
  %30 = load i8, i8* %29, align 1, !dbg !14966
  %31 = or i8 %30, 1, !dbg !14966
  store i8 %31, i8* %29, align 1, !dbg !14966
  br label %32, !dbg !14967

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14968
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2254, metadata !DIExpression()), !dbg !14941
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14943
  br i1 %34, label %8, label %35, !dbg !14944, !llvm.loop !14969

35:                                               ; preds = %32, %1
  ret void, !dbg !14971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.198(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14974, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.value(metadata i32 %1, metadata !14975, metadata !DIExpression()), !dbg !14976
  %3 = trunc i32 %1 to i8, !dbg !14977
  %4 = shl i8 %3, 4, !dbg !14977
  %5 = and i32 %0, 15, !dbg !14980
  %6 = add nsw i32 %5, -4, !dbg !14981
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14982
  store volatile i8 %4, i8* %7, align 1, !dbg !14983
  ret void, !dbg !14984
}

; Function Attrs: optsize
declare !dbg !14985 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !14986 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14989, metadata !DIExpression()), !dbg !14990
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14991
  store i8 1, i8* %2, align 1, !dbg !14992
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14993
  store i8 1, i8* %3, align 4, !dbg !14994
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14995
  store i32 0, i32* %4, align 4, !dbg !14996
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14997
  store i32 0, i32* %5, align 4, !dbg !14998
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14999
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15000
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15001
  ret void, !dbg !15002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15003 {
  tail call void @z_sched_init() #28, !dbg !15008
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15009
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 5, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.199, i32 0, i32 0)) #28, !dbg !15010
  call void @llvm.dbg.value(metadata i8* %1, metadata !15007, metadata !DIExpression()), !dbg !15011
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15012
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !15013
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !15014
  ret i8* %1, !dbg !15015
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #11 !dbg !15016 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15020, metadata !DIExpression()), !dbg !15021
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #28, !dbg !15022
  unreachable, !dbg !15023
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15026, metadata !DIExpression()), !dbg !15029
  call void @llvm.dbg.value(metadata i8* %1, metadata !15027, metadata !DIExpression()), !dbg !15029
  call void @llvm.dbg.value(metadata i8* %2, metadata !15028, metadata !DIExpression()), !dbg !15029
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15030
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !15031
  tail call void @boot_banner() #28, !dbg !15032
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !15033
  tail call void @z_init_static_threads() #28, !dbg !15034
  tail call void @main() #28, !dbg !15035
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15036
  %5 = and i8 %4, -2, !dbg !15036
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15036
  ret void, !dbg !15037
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !15038 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15048, metadata !DIExpression()), !dbg !15050
  call void @llvm.dbg.value(metadata i8* %1, metadata !15049, metadata !DIExpression()), !dbg !15050
  ret void, !dbg !15051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !15052 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15054, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata i8* %1, metadata !15055, metadata !DIExpression()), !dbg !15056
  ret void, !dbg !15057
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15058 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15059, !srcloc !15066
  call void @llvm.dbg.value(metadata i32 %1, metadata !15062, metadata !DIExpression()) #26, !dbg !15067
  %2 = icmp ne i32 %1, 0, !dbg !15068
  ret i1 %2, !dbg !15069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !15070 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15071
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15072
  %3 = load i8, i8* %2, align 4, !dbg !15073
  %4 = or i8 %3, 1, !dbg !15073
  store i8 %4, i8* %2, align 4, !dbg !15073
  ret void, !dbg !15074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !15075 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15076
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15077
  %3 = load i8, i8* %2, align 4, !dbg !15078
  %4 = and i8 %3, -2, !dbg !15078
  store i8 %4, i8* %2, align 4, !dbg !15078
  ret void, !dbg !15079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #3 !dbg !15080 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15081
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15082
  %3 = load i8, i8* %2, align 4, !dbg !15082
  %4 = and i8 %3, 1, !dbg !15083
  %5 = icmp ne i8 %4, 0, !dbg !15084
  ret i1 %5, !dbg !15085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !15086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15090, metadata !DIExpression()), !dbg !15092
  call void @llvm.dbg.value(metadata i8* %1, metadata !15091, metadata !DIExpression()), !dbg !15092
  ret i32 -88, !dbg !15093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !15094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15098, metadata !DIExpression()), !dbg !15099
  ret i8* null, !dbg !15100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !15101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15105, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata i8* %1, metadata !15106, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata i32 %2, metadata !15107, metadata !DIExpression()), !dbg !15108
  ret i32 -88, !dbg !15109
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2393, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i8* %1, metadata !2394, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 %2, metadata !2395, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 0, metadata !2396, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i8 undef, metadata !2398, metadata !DIExpression()), !dbg !15110
  %4 = icmp eq i8* %1, null, !dbg !15111
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15113
  br i1 %6, label %46, label %7, !dbg !15113

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15114
  %9 = load i8, i8* %8, align 1, !dbg !15114
  call void @llvm.dbg.value(metadata i8 %9, metadata !2398, metadata !DIExpression()), !dbg !15110
  %10 = add i32 %2, -1, !dbg !15115
  call void @llvm.dbg.value(metadata i32 %10, metadata !2395, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i8 0, metadata !2399, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i8 %9, metadata !2398, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 0, metadata !2396, metadata !DIExpression()), !dbg !15110
  %11 = icmp eq i8 %9, 0, !dbg !15117
  br i1 %11, label %12, label %15, !dbg !15119

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15120
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15121
  store i8 0, i8* %14, align 1, !dbg !15122
  br label %46, !dbg !15123

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2399, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i8 %17, metadata !2398, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 %18, metadata !2396, metadata !DIExpression()), !dbg !15110
  %19 = zext i8 %17 to i32, !dbg !15124
  %20 = zext i8 %16 to i32, !dbg !15125
  %21 = shl nuw i32 1, %20, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %21, metadata !2397, metadata !DIExpression()), !dbg !15110
  %22 = and i32 %21, %19, !dbg !15127
  %23 = icmp eq i32 %22, 0, !dbg !15129
  br i1 %23, label %42, label %24, !dbg !15130

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15131
  %26 = sub i32 %10, %18, !dbg !15132
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15133
  %28 = load i8*, i8** %27, align 4, !dbg !15133
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15134
  %30 = load i32, i32* %29, align 4, !dbg !15134
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !15135
  %32 = add i32 %31, %18, !dbg !15136
  call void @llvm.dbg.value(metadata i32 %32, metadata !2396, metadata !DIExpression()), !dbg !15110
  %33 = trunc i32 %21 to i8, !dbg !15137
  %34 = xor i8 %33, -1, !dbg !15137
  %35 = and i8 %17, %34, !dbg !15137
  call void @llvm.dbg.value(metadata i8 %35, metadata !2398, metadata !DIExpression()), !dbg !15110
  %36 = icmp eq i8 %35, 0, !dbg !15138
  br i1 %36, label %12, label %37, !dbg !15140

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15141
  %39 = sub i32 %10, %32, !dbg !15143
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.202, i32 0, i32 0), i32 noundef 1) #27, !dbg !15144
  %41 = add i32 %40, %32, !dbg !15145
  call void @llvm.dbg.value(metadata i32 %41, metadata !2396, metadata !DIExpression()), !dbg !15110
  br label %42, !dbg !15146

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15110
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15110
  call void @llvm.dbg.value(metadata i8 %44, metadata !2398, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata i32 %43, metadata !2396, metadata !DIExpression()), !dbg !15110
  %45 = add i8 %16, 1, !dbg !15147
  call void @llvm.dbg.value(metadata i8 %45, metadata !2399, metadata !DIExpression()), !dbg !15116
  br label %15, !dbg !15119

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.203, i32 0, i32 0), %3 ], !dbg !15110
  ret i8* %47, !dbg !15148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15153, metadata !DIExpression()), !dbg !15158
  call void @llvm.dbg.value(metadata i32 %1, metadata !15154, metadata !DIExpression()), !dbg !15158
  call void @llvm.dbg.value(metadata i8* %2, metadata !15155, metadata !DIExpression()), !dbg !15158
  call void @llvm.dbg.value(metadata i32 %3, metadata !15156, metadata !DIExpression()), !dbg !15158
  %5 = icmp ult i32 %1, %3, !dbg !15159
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15159
  call void @llvm.dbg.value(metadata i32 %6, metadata !15157, metadata !DIExpression()), !dbg !15158
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #28, !dbg !15160
  ret i32 %6, !dbg !15161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15166, metadata !DIExpression()), !dbg !15167
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #28, !dbg !15168
  ret void, !dbg !15169
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15179, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15180, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 %2, metadata !15181, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15182, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i8* %4, metadata !15183, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i8* %5, metadata !15184, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i8* %6, metadata !15185, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 %7, metadata !15186, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 %8, metadata !15187, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i8* undef, metadata !15188, metadata !DIExpression()), !dbg !15190
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15191
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #27, !dbg !15192
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15193
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !15194
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !15195
  call void @llvm.dbg.value(metadata i8* %13, metadata !15189, metadata !DIExpression()), !dbg !15190
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #28, !dbg !15196
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15197
  store i8* null, i8** %14, align 4, !dbg !15198
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15199
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15199
  br i1 %16, label %20, label %17, !dbg !15201

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15202
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15202
  br label %20, !dbg !15203

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15190
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15204
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15206
  ret i8* %13, !dbg !15207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !15208 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15213, metadata !DIExpression()), !dbg !15214
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15215
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !15216
  ret void, !dbg !15217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15218 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15223, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 %1, metadata !15224, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 %2, metadata !15225, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 %3, metadata !15226, metadata !DIExpression()), !dbg !15227
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15228
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !15229
  %6 = trunc i32 %3 to i8, !dbg !15230
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15231
  store i8 %6, i8* %7, align 4, !dbg !15232
  %8 = trunc i32 %2 to i8, !dbg !15233
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15234
  store i8 %8, i8* %9, align 1, !dbg !15235
  %10 = trunc i32 %1 to i8, !dbg !15236
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15237
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15237
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15237
  store i8 %10, i8* %13, align 2, !dbg !15238
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15239
  store i8 0, i8* %14, align 1, !dbg !15240
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !15241
  ret void, !dbg !15242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !15243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15247, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15248, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata i32 %2, metadata !15249, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata i32 0, metadata !15254, metadata !DIExpression()), !dbg !15255
  %4 = add i32 %2, 7, !dbg !15256
  %5 = and i32 %4, -8, !dbg !15256
  %6 = add i32 %5, 64, !dbg !15256
  call void @llvm.dbg.value(metadata i32 %6, metadata !15250, metadata !DIExpression()), !dbg !15255
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.213(%struct.z_thread_stack_element* noundef %1) #27, !dbg !15258
  call void @llvm.dbg.value(metadata i8* %7, metadata !15253, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata i32 %5, metadata !15251, metadata !DIExpression()), !dbg !15255
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15259
  call void @llvm.dbg.value(metadata i8* %8, metadata !15252, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.value(metadata i32 0, metadata !15254, metadata !DIExpression()), !dbg !15255
  %9 = ptrtoint i8* %7 to i32, !dbg !15260
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15261
  store i32 %9, i32* %10, align 4, !dbg !15262
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15263
  store i32 %5, i32* %11, align 4, !dbg !15264
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15265
  store i32 0, i32* %12, align 4, !dbg !15266
  call void @llvm.dbg.value(metadata i8* %8, metadata !15252, metadata !DIExpression()), !dbg !15255
  ret i8* %8, !dbg !15267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.213(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !15268 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15272, metadata !DIExpression()), !dbg !15273
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15274
  ret i8* %2, !dbg !15275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15281, metadata !DIExpression()), !dbg !15282
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15283
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !15284
  ret void, !dbg !15285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15286 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15288, metadata !DIExpression()), !dbg !15289
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15290
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !15291
  ret void, !dbg !15292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15293 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15297, metadata !DIExpression()), !dbg !15298
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15299
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15300
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15301
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15302
  ret void, !dbg !15303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15304 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15309, metadata !DIExpression()), !dbg !15310
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15311
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15312
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15313
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15314
  ret void, !dbg !15315
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15316 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15333, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15325, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 %2, metadata !15326, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15327, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i8* %4, metadata !15328, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i8* %5, metadata !15329, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i8* %6, metadata !15330, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 %7, metadata !15331, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 %8, metadata !15332, metadata !DIExpression()), !dbg !15334
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !15335
  %13 = icmp eq i64 %11, -1, !dbg !15336
  br i1 %13, label %15, label %14, !dbg !15338

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !15339
  br label %15, !dbg !15341

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15343 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15348, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15347, metadata !DIExpression()), !dbg !15349
  %4 = icmp eq i64 %3, 0, !dbg !15350
  br i1 %4, label %5, label %6, !dbg !15352

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15353
  br label %7, !dbg !15355

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15356
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15363, metadata !DIExpression()), !dbg !15364
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !15365, !srcloc !15367
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15368
  ret void, !dbg !15369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15370 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15373, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15372, metadata !DIExpression()), !dbg !15374
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15375
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #28, !dbg !15376
  ret void, !dbg !15377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15378 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15380, metadata !DIExpression()), !dbg !15399
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15400

1:                                                ; preds = %2
  tail call void @k_sched_lock() #28, !dbg !15401
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15397, metadata !DIExpression()), !dbg !15402
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15403

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15380, metadata !DIExpression()), !dbg !15399
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15404
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15404
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15407
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15407
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15408
  %9 = load i32, i32* %8, align 4, !dbg !15408
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15409
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15409
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15410
  %13 = load i8*, i8** %12, align 4, !dbg !15410
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15411
  %15 = load i8*, i8** %14, align 4, !dbg !15411
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15412
  %17 = load i8*, i8** %16, align 4, !dbg !15412
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15413
  %19 = load i32, i32* %18, align 4, !dbg !15413
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15414
  %21 = load i32, i32* %20, align 4, !dbg !15414
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !15415
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15416
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15417
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15418
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15418
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15419
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15380, metadata !DIExpression()), !dbg !15399
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15420
  br i1 %27, label %2, label %1, !dbg !15400, !llvm.loop !15422

28:                                               ; preds = %0
  tail call void @k_sched_lock() #28, !dbg !15401
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15397, metadata !DIExpression()), !dbg !15402
  br label %29, !dbg !15403

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #28, !dbg !15424
  ret void, !dbg !15425

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15397, metadata !DIExpression()), !dbg !15402
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15426
  %33 = load i32, i32* %32, align 4, !dbg !15426
  %34 = icmp eq i32 %33, -1, !dbg !15430
  br i1 %34, label %43, label %35, !dbg !15431

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15432
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15432
  %38 = icmp sgt i32 %33, 0, !dbg !15434
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15434
  %40 = zext i32 %39 to i64, !dbg !15434
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.216(i64 noundef %40) #27, !dbg !15434
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15435
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !15435
  br label %43, !dbg !15436

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15437
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15397, metadata !DIExpression()), !dbg !15402
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15438
  br i1 %45, label %30, label %29, !dbg !15403, !llvm.loop !15440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.216(i64 noundef %0) unnamed_addr #5 !dbg !15442 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15444, metadata !DIExpression()), !dbg !15445
  call void @llvm.dbg.value(metadata i64 %0, metadata !15446, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i32 1000, metadata !15449, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i32 10000, metadata !15450, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i8 1, metadata !15451, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i8 0, metadata !15452, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i8 1, metadata !15453, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i8 0, metadata !15454, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i8 1, metadata !15455, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i8 0, metadata !15456, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i64 0, metadata !15457, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i64 0, metadata !15457, metadata !DIExpression()), !dbg !15461
  %2 = mul i64 %0, 10, !dbg !15463
  ret i64 %2, !dbg !15469
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #11 !dbg !15470 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15472, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i8* %1, metadata !15473, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i8* %2, metadata !15474, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i8* %3, metadata !15475, metadata !DIExpression()), !dbg !15476
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15477
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15478
  %7 = load i8, i8* %6, align 4, !dbg !15479
  %8 = or i8 %7, 4, !dbg !15479
  store i8 %8, i8* %6, align 4, !dbg !15479
  tail call void @z_thread_essential_clear() #27, !dbg !15480
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !15481
  unreachable, !dbg !15481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !15482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15486, metadata !DIExpression()), !dbg !15487
  ret i32 -134, !dbg !15488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !15489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15493, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i32 %1, metadata !15494, metadata !DIExpression()), !dbg !15495
  ret i32 -134, !dbg !15496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !15497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15504, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15505, metadata !DIExpression()), !dbg !15506
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15507
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15509
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15506
  ret i32 %6, !dbg !15510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !15511 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15515, metadata !DIExpression()), !dbg !15516
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15517
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15516
  ret i32 %3, !dbg !15519
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15520 {
  tail call void @sys_clock_idle_exit() #28, !dbg !15522
  ret void, !dbg !15523
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #11 !dbg !15524 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15526, metadata !DIExpression()), !dbg !15529
  call void @llvm.dbg.value(metadata i8* %1, metadata !15527, metadata !DIExpression()), !dbg !15529
  call void @llvm.dbg.value(metadata i8* %2, metadata !15528, metadata !DIExpression()), !dbg !15529
  br label %4, !dbg !15530

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15531, !srcloc !15538
  call void @llvm.dbg.value(metadata i32 undef, metadata !15534, metadata !DIExpression()) #26, !dbg !15539
  call void @llvm.dbg.value(metadata i32 undef, metadata !15535, metadata !DIExpression()) #26, !dbg !15539
  tail call fastcc void @k_cpu_idle() #27, !dbg !15540
  br label %4, !dbg !15530, !llvm.loop !15541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15543 {
  tail call void @arch_cpu_idle() #28, !dbg !15544
  ret void, !dbg !15545
}

; Function Attrs: optsize
declare !dbg !15546 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15547 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15565, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.value(metadata i8* %1, metadata !15566, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.value(metadata i32 %2, metadata !15567, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.value(metadata i32 %3, metadata !15568, metadata !DIExpression()), !dbg !15569
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15570
  store i32 %2, i32* %5, align 4, !dbg !15571
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15572
  store i32 %3, i32* %6, align 4, !dbg !15573
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15574
  store i8* %1, i8** %7, align 4, !dbg !15575
  %8 = mul i32 %3, %2, !dbg !15576
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !15577
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15578
  store i8* %9, i8** %10, align 4, !dbg !15579
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15580
  store i8* %1, i8** %11, align 4, !dbg !15581
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15582
  store i8* %1, i8** %12, align 4, !dbg !15583
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15584
  store i32 0, i32* %13, align 4, !dbg !15585
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15586
  store i8 0, i8* %14, align 4, !dbg !15587
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15588
  tail call fastcc void @z_waitq_init.219(%struct._wait_q_t* noundef %15) #27, !dbg !15589
  ret void, !dbg !15590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.219(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !15591 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15595, metadata !DIExpression()), !dbg !15596
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15597
  tail call fastcc void @sys_dlist_init.220(%struct._dnode* noundef %2) #27, !dbg !15598
  ret void, !dbg !15599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.220(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15600 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15605, metadata !DIExpression()), !dbg !15606
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15607
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15608
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15609
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15610
  ret void, !dbg !15611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15612 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15616, metadata !DIExpression()), !dbg !15622
  call void @llvm.dbg.value(metadata i32 %1, metadata !15617, metadata !DIExpression()), !dbg !15622
  call void @llvm.dbg.value(metadata i32 %2, metadata !15618, metadata !DIExpression()), !dbg !15622
  %5 = bitcast i32* %4 to i8*, !dbg !15623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15623
  call void @llvm.dbg.value(metadata i32* %4, metadata !15621, metadata !DIExpression(DW_OP_deref)), !dbg !15622
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !15624
  br i1 %6, label %13, label %7, !dbg !15626

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15627
  call void @llvm.dbg.value(metadata i32 %8, metadata !15621, metadata !DIExpression()), !dbg !15622
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !15629
  call void @llvm.dbg.value(metadata i8* %9, metadata !15619, metadata !DIExpression()), !dbg !15622
  %10 = icmp eq i8* %9, null, !dbg !15630
  br i1 %10, label %13, label %11, !dbg !15632

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !15633
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15635
  store i8 1, i8* %12, align 4, !dbg !15636
  call void @llvm.dbg.value(metadata i32 0, metadata !15620, metadata !DIExpression()), !dbg !15622
  br label %13, !dbg !15637

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15638
  call void @llvm.dbg.value(metadata i32 %14, metadata !15620, metadata !DIExpression()), !dbg !15622
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15639
  ret i32 %14, !dbg !15640
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !15641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15646, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.value(metadata i32 %1, metadata !15647, metadata !DIExpression()), !dbg !15649
  call void @llvm.dbg.value(metadata i32* %2, metadata !15648, metadata !DIExpression()), !dbg !15649
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15650
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15650
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15650
  store i32 %6, i32* %2, align 4, !dbg !15650
  ret i1 %5, !dbg !15651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15656, metadata !DIExpression()), !dbg !15657
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #28, !dbg !15658
  ret i8* %2, !dbg !15659
}

; Function Attrs: optsize
declare !dbg !15660 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15663 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15667, metadata !DIExpression()), !dbg !15668
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15669
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !15669
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15669
  br i1 %4, label %5, label %15, !dbg !15671

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15672
  %7 = load i8, i8* %6, align 4, !dbg !15672
  %8 = and i8 %7, 1, !dbg !15674
  %9 = icmp eq i8 %8, 0, !dbg !15675
  br i1 %9, label %15, label %10, !dbg !15676

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15677
  %12 = load i8*, i8** %11, align 4, !dbg !15677
  tail call void @k_free(i8* noundef %12) #28, !dbg !15679
  %13 = load i8, i8* %6, align 4, !dbg !15680
  %14 = and i8 %13, -2, !dbg !15680
  store i8 %14, i8* %6, align 4, !dbg !15680
  br label %15, !dbg !15681

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15668
  ret i32 %16, !dbg !15682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !15683 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15687, metadata !DIExpression()), !dbg !15688
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15689
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15690
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15691
  ret %struct.k_thread* %4, !dbg !15692
}

; Function Attrs: optsize
declare !dbg !15693 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15698, metadata !DIExpression()), !dbg !15699
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !15700
  br i1 %2, label %6, label %3, !dbg !15700

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15701
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15701
  br label %6, !dbg !15700

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15700
  ret %struct._dnode* %7, !dbg !15702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !15703 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15707, metadata !DIExpression()), !dbg !15708
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15709
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15709
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15710
  ret i1 %4, !dbg !15711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15712 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15722, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15720, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata i8* %1, metadata !15721, metadata !DIExpression()), !dbg !15730
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15732, metadata !DIExpression()) #26, !dbg !15739
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15741, !srcloc !15747
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15741
  call void @llvm.dbg.value(metadata i32 %6, metadata !15744, metadata !DIExpression()) #26, !dbg !15748
  call void @llvm.dbg.value(metadata i32 undef, metadata !15745, metadata !DIExpression()) #26, !dbg !15748
  call void @llvm.dbg.value(metadata i32 %6, metadata !15738, metadata !DIExpression()) #26, !dbg !15739
  call void @llvm.dbg.value(metadata i32 %6, metadata !15724, metadata !DIExpression()), !dbg !15730
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15749
  %8 = load i32, i32* %7, align 4, !dbg !15749
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15751
  %10 = load i32, i32* %9, align 4, !dbg !15751
  %11 = icmp ult i32 %8, %10, !dbg !15752
  br i1 %11, label %12, label %42, !dbg !15753

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15754
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #28, !dbg !15756
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15723, metadata !DIExpression()), !dbg !15730
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !15757
  br i1 %15, label %24, label %16, !dbg !15759

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !15760
  %18 = load i8*, i8** %17, align 4, !dbg !15760
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15762
  %20 = load i32, i32* %19, align 4, !dbg !15762
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #28, !dbg !15763
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15764, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.value(metadata i32 0, metadata !15769, metadata !DIExpression()), !dbg !15770
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !15772
  store i32 0, i32* %22, align 4, !dbg !15773
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #28, !dbg !15774
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15775
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #28, !dbg !15775
  br label %53, !dbg !15776

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15777
  %26 = load i8*, i8** %25, align 4, !dbg !15777
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15779
  %28 = load i32, i32* %27, align 4, !dbg !15779
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #28, !dbg !15780
  %30 = load i32, i32* %27, align 4, !dbg !15781
  %31 = load i8*, i8** %25, align 4, !dbg !15782
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !15782
  store i8* %32, i8** %25, align 4, !dbg !15782
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15783
  %34 = load i8*, i8** %33, align 4, !dbg !15783
  %35 = icmp eq i8* %32, %34, !dbg !15785
  br i1 %35, label %36, label %39, !dbg !15786

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15787
  %38 = load i8*, i8** %37, align 4, !dbg !15787
  store i8* %38, i8** %25, align 4, !dbg !15789
  br label %39, !dbg !15790

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !15791
  %41 = add i32 %40, 1, !dbg !15791
  store i32 %41, i32* %7, align 4, !dbg !15791
  call void @llvm.dbg.value(metadata i32 0, metadata !15729, metadata !DIExpression()), !dbg !15730
  br label %51, !dbg !15792

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !15722, metadata !DIExpression()), !dbg !15730
  %44 = icmp eq i64 %43, 0, !dbg !15793
  br i1 %44, label %51, label %45, !dbg !15795

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15796
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !15798
  store i8* %1, i8** %47, align 4, !dbg !15799
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15800
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15801
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #28, !dbg !15801
  call void @llvm.dbg.value(metadata i32 %50, metadata !15729, metadata !DIExpression()), !dbg !15730
  br label %53, !dbg !15802

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !15803
  call void @llvm.dbg.value(metadata i32 %52, metadata !15729, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata i32 %6, metadata !15804, metadata !DIExpression()) #26, !dbg !15810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15809, metadata !DIExpression()) #26, !dbg !15810
  call void @llvm.dbg.value(metadata i32 %6, metadata !15812, metadata !DIExpression()) #26, !dbg !15815
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15817, !srcloc !15818
  br label %53, !dbg !15819

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !15730
  ret i32 %54, !dbg !15820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #10 !dbg !15821 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15831, metadata !DIExpression()), !dbg !15833
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15832, metadata !DIExpression()), !dbg !15833
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15834
  %4 = load i32, i32* %3, align 4, !dbg !15834
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15835
  store i32 %4, i32* %5, align 4, !dbg !15836
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15837
  %7 = load i32, i32* %6, align 4, !dbg !15837
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15838
  store i32 %7, i32* %8, align 4, !dbg !15839
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15840
  %10 = load i32, i32* %9, align 4, !dbg !15840
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15841
  store i32 %10, i32* %11, align 4, !dbg !15842
  ret void, !dbg !15843
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15844 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15850, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15848, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i8* %1, metadata !15849, metadata !DIExpression()), !dbg !15854
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15732, metadata !DIExpression()) #26, !dbg !15856
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15858, !srcloc !15747
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15858
  call void @llvm.dbg.value(metadata i32 %6, metadata !15744, metadata !DIExpression()) #26, !dbg !15860
  call void @llvm.dbg.value(metadata i32 undef, metadata !15745, metadata !DIExpression()) #26, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %6, metadata !15738, metadata !DIExpression()) #26, !dbg !15856
  call void @llvm.dbg.value(metadata i32 %6, metadata !15851, metadata !DIExpression()), !dbg !15854
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15861
  %8 = load i32, i32* %7, align 4, !dbg !15861
  %9 = icmp eq i32 %8, 0, !dbg !15863
  br i1 %9, label %51, label %10, !dbg !15864

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15865
  %12 = load i8*, i8** %11, align 4, !dbg !15865
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15867
  %14 = load i32, i32* %13, align 4, !dbg !15867
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #28, !dbg !15868
  %16 = load i32, i32* %13, align 4, !dbg !15869
  %17 = load i8*, i8** %11, align 4, !dbg !15870
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !15870
  store i8* %18, i8** %11, align 4, !dbg !15870
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15871
  %20 = load i8*, i8** %19, align 4, !dbg !15871
  %21 = icmp eq i8* %18, %20, !dbg !15873
  br i1 %21, label %22, label %25, !dbg !15874

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15875
  %24 = load i8*, i8** %23, align 4, !dbg !15875
  store i8* %24, i8** %11, align 4, !dbg !15877
  br label %25, !dbg !15878

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !15879
  %27 = add i32 %26, -1, !dbg !15879
  store i32 %27, i32* %7, align 4, !dbg !15879
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15880
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #28, !dbg !15881
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15852, metadata !DIExpression()), !dbg !15854
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !15882
  br i1 %30, label %60, label %31, !dbg !15884

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15885
  %33 = load i8*, i8** %32, align 4, !dbg !15885
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !15887
  %35 = load i8*, i8** %34, align 4, !dbg !15887
  %36 = load i32, i32* %13, align 4, !dbg !15888
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #28, !dbg !15889
  %38 = load i32, i32* %13, align 4, !dbg !15890
  %39 = load i8*, i8** %32, align 4, !dbg !15891
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !15891
  store i8* %40, i8** %32, align 4, !dbg !15891
  %41 = load i8*, i8** %19, align 4, !dbg !15892
  %42 = icmp eq i8* %40, %41, !dbg !15894
  br i1 %42, label %43, label %46, !dbg !15895

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15896
  %45 = load i8*, i8** %44, align 4, !dbg !15896
  store i8* %45, i8** %32, align 4, !dbg !15898
  br label %46, !dbg !15899

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !15900
  %48 = add i32 %47, 1, !dbg !15900
  store i32 %48, i32* %7, align 4, !dbg !15900
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15764, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 0, metadata !15769, metadata !DIExpression()), !dbg !15901
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !15903
  store i32 0, i32* %49, align 4, !dbg !15904
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #28, !dbg !15905
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15906
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #28, !dbg !15906
  br label %62, !dbg !15907

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !15850, metadata !DIExpression()), !dbg !15854
  %53 = icmp eq i64 %52, 0, !dbg !15908
  br i1 %53, label %60, label %54, !dbg !15910

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15911
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !15913
  store i8* %1, i8** %56, align 4, !dbg !15914
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15915
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15916
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #28, !dbg !15916
  call void @llvm.dbg.value(metadata i32 %59, metadata !15853, metadata !DIExpression()), !dbg !15854
  br label %62, !dbg !15917

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !15918
  call void @llvm.dbg.value(metadata i32 %61, metadata !15853, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i32 %6, metadata !15804, metadata !DIExpression()) #26, !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15809, metadata !DIExpression()) #26, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %6, metadata !15812, metadata !DIExpression()) #26, !dbg !15921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15923, !srcloc !15818
  br label %62, !dbg !15924

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !15854
  ret i32 %63, !dbg !15925
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15926 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15930, metadata !DIExpression()), !dbg !15934
  call void @llvm.dbg.value(metadata i8* %1, metadata !15931, metadata !DIExpression()), !dbg !15934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15732, metadata !DIExpression()) #26, !dbg !15935
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15937, !srcloc !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !15744, metadata !DIExpression()) #26, !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15745, metadata !DIExpression()) #26, !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15738, metadata !DIExpression()) #26, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !15932, metadata !DIExpression()), !dbg !15934
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15940
  %5 = load i32, i32* %4, align 4, !dbg !15940
  %6 = icmp eq i32 %5, 0, !dbg !15942
  br i1 %6, label %13, label %7, !dbg !15943

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15944
  %9 = load i8*, i8** %8, align 4, !dbg !15944
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15946
  %11 = load i32, i32* %10, align 4, !dbg !15946
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #28, !dbg !15947
  call void @llvm.dbg.value(metadata i32 0, metadata !15933, metadata !DIExpression()), !dbg !15934
  br label %13, !dbg !15948

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15949
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15937
  call void @llvm.dbg.value(metadata i32 %15, metadata !15744, metadata !DIExpression()) #26, !dbg !15939
  call void @llvm.dbg.value(metadata i32 %15, metadata !15738, metadata !DIExpression()) #26, !dbg !15935
  call void @llvm.dbg.value(metadata i32 %15, metadata !15932, metadata !DIExpression()), !dbg !15934
  call void @llvm.dbg.value(metadata i32 %14, metadata !15933, metadata !DIExpression()), !dbg !15934
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()) #26, !dbg !15950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15809, metadata !DIExpression()) #26, !dbg !15950
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !15952
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !15954, !srcloc !15818
  ret i32 %14, !dbg !15955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15956 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15960, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15732, metadata !DIExpression()) #26, !dbg !15964
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15966, !srcloc !15747
  call void @llvm.dbg.value(metadata i32 undef, metadata !15744, metadata !DIExpression()) #26, !dbg !15968
  call void @llvm.dbg.value(metadata i32 undef, metadata !15745, metadata !DIExpression()) #26, !dbg !15968
  call void @llvm.dbg.value(metadata i32 undef, metadata !15738, metadata !DIExpression()) #26, !dbg !15964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15961, metadata !DIExpression()), !dbg !15963
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #28, !dbg !15969
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15962, metadata !DIExpression()), !dbg !15963
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15970
  br i1 %5, label %11, label %6, !dbg !15971

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15764, metadata !DIExpression()), !dbg !15972
  call void @llvm.dbg.value(metadata i32 -35, metadata !15769, metadata !DIExpression()), !dbg !15972
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15975
  store i32 -35, i32* %8, align 4, !dbg !15976
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #28, !dbg !15977
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #28, !dbg !15969
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15962, metadata !DIExpression()), !dbg !15963
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15970
  br i1 %10, label %11, label %6, !dbg !15971, !llvm.loop !15978

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %12, metadata !15744, metadata !DIExpression()) #26, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %12, metadata !15738, metadata !DIExpression()) #26, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %12, metadata !15961, metadata !DIExpression()), !dbg !15963
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15980
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15981
  store i32 0, i32* %14, align 4, !dbg !15982
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15983
  %16 = load i8*, i8** %15, align 4, !dbg !15983
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15984
  store i8* %16, i8** %17, align 4, !dbg !15985
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15986
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #28, !dbg !15986
  ret void, !dbg !15987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #9 !dbg !15988 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15999, metadata !DIExpression()), !dbg !16000
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16001
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !16002
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16003
  store i32 0, i32* %3, align 4, !dbg !16004
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16005
  tail call fastcc void @z_waitq_init.225(%struct._wait_q_t* noundef %4) #27, !dbg !16006
  ret i32 0, !dbg !16007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.225(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !16008 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16012, metadata !DIExpression()), !dbg !16013
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16014
  tail call fastcc void @sys_dlist_init.226(%struct._dnode* noundef %2) #27, !dbg !16015
  ret void, !dbg !16016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.226(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16017 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16022, metadata !DIExpression()), !dbg !16023
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16024
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16025
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16026
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16027
  ret void, !dbg !16028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16029 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16038, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16037, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata i8 0, metadata !16045, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16051, metadata !DIExpression()) #26, !dbg !16058
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16060, !srcloc !16066
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16060
  call void @llvm.dbg.value(metadata i32 %5, metadata !16063, metadata !DIExpression()) #26, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !16064, metadata !DIExpression()) #26, !dbg !16067
  call void @llvm.dbg.value(metadata i32 %5, metadata !16057, metadata !DIExpression()) #26, !dbg !16058
  call void @llvm.dbg.value(metadata i32 %5, metadata !16040, metadata !DIExpression()), !dbg !16050
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16068
  %7 = load i32, i32* %6, align 4, !dbg !16068
  %8 = icmp eq i32 %7, 0, !dbg !16068
  br i1 %8, label %14, label %9, !dbg !16068

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16068
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !16068
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16068
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !16068
  br i1 %13, label %20, label %29, !dbg !16070, !prof !16071

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16072
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !16074
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !16074
  %18 = load i8, i8* %17, align 2, !dbg !16074
  %19 = sext i8 %18 to i32, !dbg !16072
  br label %23, !dbg !16075

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16076
  %22 = load i32, i32* %21, align 4, !dbg !16076
  br label %23, !dbg !16075

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !16077
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !16075
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16078
  store i32 %25, i32* %26, align 4, !dbg !16079
  %27 = add i32 %7, 1, !dbg !16080
  store i32 %27, i32* %6, align 4, !dbg !16080
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16081
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !16082
  call void @llvm.dbg.value(metadata i32 %5, metadata !16083, metadata !DIExpression()) #26, !dbg !16089
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16088, metadata !DIExpression()) #26, !dbg !16089
  call void @llvm.dbg.value(metadata i32 %5, metadata !16091, metadata !DIExpression()) #26, !dbg !16094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !16096, !srcloc !16097
  br label %78, !dbg !16098

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !16099
  br i1 %30, label %31, label %32, !dbg !16101, !prof !16102

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !16083, metadata !DIExpression()) #26, !dbg !16103
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16088, metadata !DIExpression()) #26, !dbg !16103
  call void @llvm.dbg.value(metadata i32 %5, metadata !16091, metadata !DIExpression()) #26, !dbg !16106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !16108, !srcloc !16097
  br label %78, !dbg !16109

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !16110
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !16110
  %35 = load i8, i8* %34, align 2, !dbg !16110
  %36 = sext i8 %35 to i32, !dbg !16111
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !16112
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !16112
  %39 = load i8, i8* %38, align 2, !dbg !16112
  %40 = sext i8 %39 to i32, !dbg !16113
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #27, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %41, metadata !16039, metadata !DIExpression()), !dbg !16050
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #27, !dbg !16115
  br i1 %42, label %43, label %45, !dbg !16117

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #27, !dbg !16118
  call void @llvm.dbg.value(metadata i1 %44, metadata !16045, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16050
  br label %45, !dbg !16120

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !16045, metadata !DIExpression()), !dbg !16050
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16121
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !16122
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #28, !dbg !16122
  call void @llvm.dbg.value(metadata i32 %49, metadata !16046, metadata !DIExpression()), !dbg !16050
  %50 = icmp eq i32 %49, 0, !dbg !16123
  br i1 %50, label %78, label %51, !dbg !16125

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16051, metadata !DIExpression()) #26, !dbg !16126
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16128, !srcloc !16066
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !16128
  call void @llvm.dbg.value(metadata i32 %53, metadata !16063, metadata !DIExpression()) #26, !dbg !16130
  call void @llvm.dbg.value(metadata i32 undef, metadata !16064, metadata !DIExpression()) #26, !dbg !16130
  call void @llvm.dbg.value(metadata i32 %53, metadata !16057, metadata !DIExpression()) #26, !dbg !16126
  call void @llvm.dbg.value(metadata i32 %53, metadata !16040, metadata !DIExpression()), !dbg !16050
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !16131
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !16131
  br i1 %55, label %74, label %56, !dbg !16132, !prof !16102

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.229(%struct._wait_q_t* noundef nonnull %47) #27, !dbg !16133
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !16047, metadata !DIExpression()), !dbg !16134
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !16135
  br i1 %58, label %67, label %59, !dbg !16136

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !16137
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !16137
  %62 = load i8, i8* %61, align 2, !dbg !16137
  %63 = sext i8 %62 to i32, !dbg !16138
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16139
  %65 = load i32, i32* %64, align 4, !dbg !16139
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #27, !dbg !16140
  br label %70, !dbg !16136

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16141
  %69 = load i32, i32* %68, align 4, !dbg !16141
  br label %70, !dbg !16136

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !16136
  call void @llvm.dbg.value(metadata i32 %71, metadata !16039, metadata !DIExpression()), !dbg !16050
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #27, !dbg !16142
  %73 = select i1 %72, i1 true, i1 %46, !dbg !16143
  call void @llvm.dbg.value(metadata i1 %73, metadata !16045, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16050
  call void @llvm.dbg.value(metadata i8 poison, metadata !16045, metadata !DIExpression()), !dbg !16050
  br i1 %73, label %75, label %77, !dbg !16144

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !16045, metadata !DIExpression()), !dbg !16050
  br i1 %46, label %75, label %77, !dbg !16144

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !16145
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #28, !dbg !16145
  br label %78, !dbg !16148

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !16083, metadata !DIExpression()) #26, !dbg !16149
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16088, metadata !DIExpression()) #26, !dbg !16149
  call void @llvm.dbg.value(metadata i32 %53, metadata !16091, metadata !DIExpression()) #26, !dbg !16152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #26, !dbg !16154, !srcloc !16097
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !16050
  ret i32 %79, !dbg !16155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16160, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 %1, metadata !16161, metadata !DIExpression()), !dbg !16163
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !16164
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !16164
  call void @llvm.dbg.value(metadata i32 %4, metadata !16162, metadata !DIExpression()), !dbg !16163
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %5, metadata !16162, metadata !DIExpression()), !dbg !16163
  ret i32 %5, !dbg !16166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16171, metadata !DIExpression()), !dbg !16173
  call void @llvm.dbg.value(metadata i32 %1, metadata !16172, metadata !DIExpression()), !dbg !16173
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !16174
  ret i1 %3, !dbg !16175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !16176 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16180, metadata !DIExpression()), !dbg !16182
  call void @llvm.dbg.value(metadata i32 %1, metadata !16181, metadata !DIExpression()), !dbg !16182
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16183
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !16183
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !16185
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !16185
  %7 = load i8, i8* %6, align 2, !dbg !16185
  %8 = sext i8 %7 to i32, !dbg !16186
  %9 = icmp eq i32 %8, %1, !dbg !16187
  br i1 %9, label %12, label %10, !dbg !16188

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #28, !dbg !16189
  br label %12, !dbg !16191

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !16182
  ret i1 %13, !dbg !16192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.229(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !16193 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16197, metadata !DIExpression()), !dbg !16198
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16199
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.230(%struct._dnode* noundef %2) #27, !dbg !16200
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16201
  ret %struct.k_thread* %4, !dbg !16202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.230(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !16203 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16207, metadata !DIExpression()), !dbg !16208
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.231(%struct._dnode* noundef %0) #27, !dbg !16209
  br i1 %2, label %6, label %3, !dbg !16209

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16210
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16210
  br label %6, !dbg !16209

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16209
  ret %struct._dnode* %7, !dbg !16211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.231(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !16212 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16216, metadata !DIExpression()), !dbg !16217
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16218
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16218
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16219
  ret i1 %4, !dbg !16220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16223, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.value(metadata i32 %1, metadata !16224, metadata !DIExpression()), !dbg !16225
  %3 = icmp slt i32 %0, %1, !dbg !16226
  ret i1 %3, !dbg !16227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !16228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16230, metadata !DIExpression()), !dbg !16231
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !16232
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !16232
  ret i32 %3, !dbg !16233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !16234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16238, metadata !DIExpression()), !dbg !16239
  %2 = icmp sgt i32 %0, -128, !dbg !16240
  ret i1 %2, !dbg !16241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !16242 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16244, metadata !DIExpression()), !dbg !16248
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16249
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !16249
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16249
  br i1 %4, label %31, label %5, !dbg !16251

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16252
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !16252
  br i1 %7, label %8, label %31, !dbg !16254

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16255
  %10 = load i32, i32* %9, align 4, !dbg !16255
  %11 = icmp ugt i32 %10, 1, !dbg !16257
  br i1 %11, label %12, label %14, !dbg !16258

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !16259
  store i32 %13, i32* %9, align 4, !dbg !16259
  br label %31, !dbg !16261

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16051, metadata !DIExpression()) #26, !dbg !16262
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16264, !srcloc !16066
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16264
  call void @llvm.dbg.value(metadata i32 %16, metadata !16063, metadata !DIExpression()) #26, !dbg !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16064, metadata !DIExpression()) #26, !dbg !16266
  call void @llvm.dbg.value(metadata i32 %16, metadata !16057, metadata !DIExpression()) #26, !dbg !16262
  call void @llvm.dbg.value(metadata i32 %16, metadata !16246, metadata !DIExpression()), !dbg !16248
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16267
  %18 = load i32, i32* %17, align 4, !dbg !16267
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #27, !dbg !16268
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16269
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #28, !dbg !16270
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !16245, metadata !DIExpression()), !dbg !16248
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !16271
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !16272
  br i1 %22, label %30, label %23, !dbg !16274

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !16275
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !16275
  %26 = load i8, i8* %25, align 2, !dbg !16275
  %27 = sext i8 %26 to i32, !dbg !16277
  store i32 %27, i32* %17, align 4, !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !16279, metadata !DIExpression()), !dbg !16285
  call void @llvm.dbg.value(metadata i32 0, metadata !16284, metadata !DIExpression()), !dbg !16285
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !16287
  store i32 0, i32* %28, align 4, !dbg !16288
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #28, !dbg !16289
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16290
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #28, !dbg !16290
  br label %31, !dbg !16291

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !16292
  call void @llvm.dbg.value(metadata i32 %16, metadata !16083, metadata !DIExpression()) #26, !dbg !16294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16088, metadata !DIExpression()) #26, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %16, metadata !16091, metadata !DIExpression()) #26, !dbg !16296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !16298, !srcloc !16097
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !16248
  ret i32 %32, !dbg !16299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #3 !dbg !16300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16304, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16305, metadata !DIExpression()), !dbg !16308
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16309
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !16309
  %5 = load i8, i8* %4, align 2, !dbg !16309
  call void @llvm.dbg.value(metadata i8 %5, metadata !16306, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16308
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16310
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !16310
  %8 = load i8, i8* %7, align 2, !dbg !16310
  call void @llvm.dbg.value(metadata i8 %8, metadata !16307, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16308
  %9 = icmp eq i8 %8, %5, !dbg !16311
  %10 = sext i8 %5 to i32, !dbg !16313
  %11 = sext i8 %8 to i32, !dbg !16313
  %12 = sub nsw i32 %11, %10, !dbg !16313
  %13 = select i1 %9, i32 0, i32 %12, !dbg !16313
  ret i32 %13, !dbg !16314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !16315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16319, metadata !DIExpression()), !dbg !16320
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !16321
  %3 = icmp eq i32 %2, 0, !dbg !16323
  br i1 %3, label %8, label %4, !dbg !16324

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #28, !dbg !16325
  %6 = add i32 %5, %2, !dbg !16327
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16328
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !16329
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #28, !dbg !16330
  br label %8, !dbg !16331

8:                                                ; preds = %4, %1
  ret void, !dbg !16332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #3 !dbg !16333 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16337, metadata !DIExpression()), !dbg !16339
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !16340
  call void @llvm.dbg.value(metadata i32 %1, metadata !16338, metadata !DIExpression()), !dbg !16339
  ret i32 %1, !dbg !16341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16346, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i32 %1, metadata !16347, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i32 0, metadata !16348, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !16364
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16366, !srcloc !16372
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16366
  call void @llvm.dbg.value(metadata i32 %4, metadata !16369, metadata !DIExpression()) #26, !dbg !16373
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !16373
  call void @llvm.dbg.value(metadata i32 %4, metadata !16363, metadata !DIExpression()) #26, !dbg !16364
  call void @llvm.dbg.value(metadata i32 %4, metadata !16354, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()), !dbg !16356
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16374
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !16377
  %6 = icmp sgt i32 %0, 0, !dbg !16378
  %7 = icmp sgt i32 %5, 2, !dbg !16380
  %8 = select i1 %7, i32 %5, i32 2, !dbg !16380
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !16380
  store i32 %9, i32* @slice_ticks, align 4, !dbg !16381
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !16382
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16383
  call void @llvm.dbg.value(metadata i32 %4, metadata !16384, metadata !DIExpression()) #26, !dbg !16390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !16390
  call void @llvm.dbg.value(metadata i32 %4, metadata !16392, metadata !DIExpression()) #26, !dbg !16395
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !16397, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !16348, metadata !DIExpression()), !dbg !16356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()), !dbg !16356
  ret void, !dbg !16399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !16400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16402, metadata !DIExpression()), !dbg !16403
  call void @llvm.dbg.value(metadata i32 %0, metadata !16404, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i32 1000, metadata !16407, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i32 10000, metadata !16408, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i8 1, metadata !16409, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i1 true, metadata !16410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i1 true, metadata !16411, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i8 0, metadata !16412, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i1 true, metadata !16413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i1 false, metadata !16414, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16419
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !16419
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !16419
  %2 = mul i32 %0, 10, !dbg !16421
  ret i32 %2, !dbg !16427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16430, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !16433
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16435, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16435
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !16437
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %3, metadata !16431, metadata !DIExpression()), !dbg !16432
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16438
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16440
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !16441
  br i1 %6, label %7, label %8, !dbg !16442

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16443
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !16445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !16445
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !16447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16449, !srcloc !16398
  br label %24, !dbg !16450

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16451
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !16452
  %10 = icmp eq i32 %9, 0, !dbg !16452
  br i1 %10, label %21, label %11, !dbg !16454

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !16455
  br i1 %12, label %13, label %21, !dbg !16456

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16457
  %15 = icmp sgt i32 %14, %0, !dbg !16460
  br i1 %15, label %19, label %16, !dbg !16461

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16462
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !16462
  call void @llvm.dbg.value(metadata i32 %18, metadata !16431, metadata !DIExpression()), !dbg !16432
  br label %22, !dbg !16464

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !16465
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16465
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16467
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !16432
  call void @llvm.dbg.value(metadata i32 %23, metadata !16431, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.value(metadata i32 %23, metadata !16384, metadata !DIExpression()) #26, !dbg !16469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !16469
  call void @llvm.dbg.value(metadata i32 %23, metadata !16392, metadata !DIExpression()) #26, !dbg !16471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #26, !dbg !16473, !srcloc !16398
  br label %24, !dbg !16474

24:                                               ; preds = %22, %7
  ret void, !dbg !16474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !16475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16479, metadata !DIExpression()), !dbg !16481
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !16482
  %3 = icmp eq i32 %2, 0, !dbg !16482
  br i1 %3, label %16, label %4, !dbg !16483

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !16484
  br i1 %5, label %16, label %6, !dbg !16485

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16486
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16486
  %9 = load i8, i8* %8, align 2, !dbg !16486
  %10 = sext i8 %9 to i32, !dbg !16487
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16488
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.237(i32 noundef %10, i32 noundef %11) #27, !dbg !16489
  br i1 %12, label %16, label %13, !dbg !16490

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !16491
  %15 = xor i1 %14, true, !dbg !16492
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16481
  call void @llvm.dbg.value(metadata i1 %17, metadata !16480, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16481
  ret i1 %17, !dbg !16493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16494 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16498, metadata !DIExpression()), !dbg !16500
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16501
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16499, metadata !DIExpression()), !dbg !16500
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !16502
  br i1 %3, label %5, label %4, !dbg !16504

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !16505
  br label %5, !dbg !16507

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16498, metadata !DIExpression()), !dbg !16500
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16508
  ret i32 %6, !dbg !16509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16510 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16512, metadata !DIExpression()), !dbg !16514
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16515
  %3 = load i8, i8* %2, align 1, !dbg !16515
  call void @llvm.dbg.value(metadata i8 %3, metadata !16513, metadata !DIExpression()), !dbg !16514
  %4 = and i8 %3, 31, !dbg !16516
  %5 = icmp ne i8 %4, 0, !dbg !16517
  ret i1 %5, !dbg !16518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16521, metadata !DIExpression()), !dbg !16522
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16523
  br i1 %2, label %3, label %7, !dbg !16525

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16526, metadata !DIExpression()) #26, !dbg !16529
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16532
  %5 = load i8, i8* %4, align 1, !dbg !16533
  %6 = and i8 %5, 127, !dbg !16533
  store i8 %6, i8* %4, align 1, !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16534, metadata !DIExpression()) #26, !dbg !16537
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16541
  br label %7, !dbg !16542

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16543, metadata !DIExpression()) #26, !dbg !16546
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16548
  %9 = load i8, i8* %8, align 1, !dbg !16549
  %10 = or i8 %9, -128, !dbg !16549
  store i8 %10, i8* %8, align 1, !dbg !16549
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16550, metadata !DIExpression()) #26, !dbg !16553
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16557, metadata !DIExpression()) #26, !dbg !16565
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16563, metadata !DIExpression()) #26, !dbg !16565
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16567
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !16564, metadata !DIExpression()) #26, !dbg !16565
  %12 = icmp eq %struct._dnode* %11, null, !dbg !16569
  br i1 %12, label %23, label %13, !dbg !16567

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16564, metadata !DIExpression()) #26, !dbg !16565
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !16571
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !16564, metadata !DIExpression()) #26, !dbg !16565
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #28, !dbg !16572
  %17 = icmp sgt i32 %16, 0, !dbg !16575
  br i1 %17, label %18, label %20, !dbg !16576

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16577
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #28, !dbg !16579
  br label %25, !dbg !16580

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #28, !dbg !16569
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16564, metadata !DIExpression()) #26, !dbg !16565
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16569
  br i1 %22, label %23, label %13, !dbg !16567, !llvm.loop !16581

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16583
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #28, !dbg !16584
  br label %25, !dbg !16585

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16586
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !16587
  %28 = zext i1 %27 to i32, !dbg !16587
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !16588
  ret void, !dbg !16589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16592, metadata !DIExpression()), !dbg !16593
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !16594
  ret i1 %2, !dbg !16595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #10 !dbg !16596 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16598, metadata !DIExpression()), !dbg !16600
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16599, metadata !DIExpression()), !dbg !16600
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16601
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !16602
  ret void, !dbg !16603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !16604 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16608, metadata !DIExpression()), !dbg !16609
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.235(%struct._dnode* noundef %0) #27, !dbg !16610
  br i1 %2, label %6, label %3, !dbg !16610

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16611
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16611
  br label %6, !dbg !16610

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16610
  ret %struct._dnode* %7, !dbg !16612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !16613 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16617, metadata !DIExpression()), !dbg !16621
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16618, metadata !DIExpression()), !dbg !16621
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16622
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16622
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16619, metadata !DIExpression()), !dbg !16621
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16623
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16624
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16625
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16626
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16627
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16628
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16629
  ret void, !dbg !16630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #3 !dbg !16631 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16635, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16636, metadata !DIExpression()), !dbg !16637
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16638
  br i1 %3, label %6, label %4, !dbg !16639

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !16640
  br label %6, !dbg !16639

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16639
  ret %struct._dnode* %7, !dbg !16641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !16642 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16646, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16647, metadata !DIExpression()), !dbg !16649
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16650
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16650
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16648, metadata !DIExpression()), !dbg !16649
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16651
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16652
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16653
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16654
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16655
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16656
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16657
  ret void, !dbg !16658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16661, metadata !DIExpression()), !dbg !16663
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16664
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16671, metadata !DIExpression()) #26, !dbg !16673
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16674
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16675
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16675
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16662, metadata !DIExpression()), !dbg !16663
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16676, metadata !DIExpression()) #26, !dbg !16682
  call void @llvm.dbg.value(metadata i32 %0, metadata !16681, metadata !DIExpression()) #26, !dbg !16682
  %6 = icmp eq i32 %0, 0, !dbg !16685
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16687
  br i1 %6, label %8, label %15, !dbg !16688

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #28, !dbg !16689
  br i1 %9, label %15, label %10, !dbg !16691

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #28, !dbg !16692
  br i1 %11, label %15, label %12, !dbg !16694

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #28, !dbg !16695
  %14 = icmp eq i32 %13, 0, !dbg !16695
  br i1 %14, label %18, label %15, !dbg !16697

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16698
  br i1 %16, label %18, label %17, !dbg !16701

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16702
  br label %18, !dbg !16704

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16687
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16687
  ret void, !dbg !16705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #3 !dbg !16706 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16710, metadata !DIExpression()), !dbg !16713
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16711, metadata !DIExpression()), !dbg !16713
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef %0) #27, !dbg !16714
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16712, metadata !DIExpression()), !dbg !16713
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16711, metadata !DIExpression()), !dbg !16713
  ret %struct.k_thread* %3, !dbg !16715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16716 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16718, metadata !DIExpression()), !dbg !16719
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16720
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16721
  %4 = xor i1 %3, true, !dbg !16722
  ret i1 %4, !dbg !16723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16726, metadata !DIExpression()), !dbg !16727
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16728
  %3 = load i16, i16* %2, align 2, !dbg !16728
  %4 = icmp ult i16 %3, 128, !dbg !16729
  %5 = zext i1 %4 to i32, !dbg !16729
  ret i32 %5, !dbg !16730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16731 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16737, metadata !DIExpression()), !dbg !16738
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16739
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !16740
  %4 = xor i1 %3, true, !dbg !16741
  ret i1 %4, !dbg !16742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16743 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16749, metadata !DIExpression()), !dbg !16750
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16751
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16751
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16752
  ret i1 %4, !dbg !16753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #3 !dbg !16754 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16756, metadata !DIExpression()), !dbg !16758
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16757, metadata !DIExpression()), !dbg !16758
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16759
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16759
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16760
  br i1 %5, label %9, label %6, !dbg !16761

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16762
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16762
  br label %9, !dbg !16761

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16761
  ret %struct._dnode* %10, !dbg !16763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.235(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !16764 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16768, metadata !DIExpression()), !dbg !16769
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16770
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16770
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16771
  ret i1 %4, !dbg !16772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16773 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16777, metadata !DIExpression()), !dbg !16780
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16781
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16781
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16778, metadata !DIExpression()), !dbg !16780
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16782
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16782
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16779, metadata !DIExpression()), !dbg !16780
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16783
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16784
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16785
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16786
  tail call fastcc void @sys_dnode_init.236(%struct._dnode* noundef %0) #27, !dbg !16787
  ret void, !dbg !16788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.236(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16789 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16791, metadata !DIExpression()), !dbg !16792
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16793
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16794
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16795
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16796
  ret void, !dbg !16797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16802, metadata !DIExpression()), !dbg !16804
  call void @llvm.dbg.value(metadata i32 128, metadata !16803, metadata !DIExpression()), !dbg !16804
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16805
  %3 = load i8, i8* %2, align 1, !dbg !16805
  %4 = icmp slt i8 %3, 0, !dbg !16806
  ret i1 %4, !dbg !16807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.237(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16810, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i32 %1, metadata !16811, metadata !DIExpression()), !dbg !16812
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.238(i32 noundef %0, i32 noundef %1) #27, !dbg !16813
  ret i1 %3, !dbg !16814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16815 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16817, metadata !DIExpression()), !dbg !16818
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16819
  ret i1 %2, !dbg !16820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.238(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16823, metadata !DIExpression()), !dbg !16825
  call void @llvm.dbg.value(metadata i32 %1, metadata !16824, metadata !DIExpression()), !dbg !16825
  %3 = icmp slt i32 %0, %1, !dbg !16826
  ret i1 %3, !dbg !16827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16828 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16830, metadata !DIExpression()), !dbg !16834
  call void @llvm.dbg.value(metadata i32 0, metadata !16831, metadata !DIExpression()), !dbg !16835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !16836
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16838, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16838
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !16840
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !16840
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !16836
  call void @llvm.dbg.value(metadata i32 %3, metadata !16833, metadata !DIExpression()), !dbg !16835
  call void @llvm.dbg.value(metadata i32 undef, metadata !16831, metadata !DIExpression()), !dbg !16835
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !16846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !16846
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !16848
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16850, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !16831, metadata !DIExpression()), !dbg !16835
  call void @llvm.dbg.value(metadata i32 undef, metadata !16831, metadata !DIExpression()), !dbg !16835
  ret void, !dbg !16851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16852 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16854, metadata !DIExpression()), !dbg !16855
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16856
  br i1 %2, label %24, label %3, !dbg !16858

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !16859
  br i1 %4, label %5, label %24, !dbg !16860

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16543, metadata !DIExpression()) #26, !dbg !16861
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16864
  %7 = load i8, i8* %6, align 1, !dbg !16865
  %8 = or i8 %7, -128, !dbg !16865
  store i8 %8, i8* %6, align 1, !dbg !16865
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16550, metadata !DIExpression()) #26, !dbg !16866
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16557, metadata !DIExpression()) #26, !dbg !16868
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16563, metadata !DIExpression()) #26, !dbg !16868
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !16870
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !16564, metadata !DIExpression()) #26, !dbg !16868
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16871
  br i1 %10, label %21, label %11, !dbg !16870

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16564, metadata !DIExpression()) #26, !dbg !16868
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16872
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16564, metadata !DIExpression()) #26, !dbg !16868
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #28, !dbg !16873
  %15 = icmp sgt i32 %14, 0, !dbg !16874
  br i1 %15, label %16, label %18, !dbg !16875

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16876
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #28, !dbg !16877
  br label %23, !dbg !16878

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #28, !dbg !16871
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !16564, metadata !DIExpression()) #26, !dbg !16868
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16871
  br i1 %20, label %21, label %11, !dbg !16870, !llvm.loop !16879

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16881
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #28, !dbg !16882
  br label %23, !dbg !16883

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !16884
  br label %24, !dbg !16885

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16889, metadata !DIExpression()), !dbg !16890
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !16891
  br i1 %2, label %6, label %3, !dbg !16892

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !16893
  %5 = xor i1 %4, true, !dbg !16892
  br label %6, !dbg !16892

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16897, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i32 0, metadata !16898, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !16903
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16905, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16905
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !16907
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !16907
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !16903
  call void @llvm.dbg.value(metadata i32 %3, metadata !16900, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata i32 undef, metadata !16898, metadata !DIExpression()), !dbg !16902
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !16908
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !16911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !16911
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !16913
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16915, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !16898, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata i32 undef, metadata !16898, metadata !DIExpression()), !dbg !16902
  ret void, !dbg !16916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16919, metadata !DIExpression()), !dbg !16921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !16922
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16924, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16924
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !16926
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !16926
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !16922
  call void @llvm.dbg.value(metadata i32 %3, metadata !16920, metadata !DIExpression()), !dbg !16921
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !16927
  br i1 %4, label %5, label %6, !dbg !16929

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !16930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !16930
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !16933
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16935, !srcloc !16398
  br label %8, !dbg !16936

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.243(%struct.k_thread* noundef %0) #27, !dbg !16937
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16938
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16939
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !16939
  br label %8, !dbg !16940

8:                                                ; preds = %6, %5
  ret void, !dbg !16940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !16941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16943, metadata !DIExpression()), !dbg !16944
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16945
  %3 = load i8, i8* %2, align 1, !dbg !16945
  %4 = and i8 %3, 4, !dbg !16946
  %5 = icmp eq i8 %4, 0, !dbg !16947
  ret i1 %5, !dbg !16948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.243(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !16949 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16951, metadata !DIExpression()), !dbg !16952
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16953
  %3 = load i8, i8* %2, align 1, !dbg !16954
  %4 = and i8 %3, -5, !dbg !16954
  store i8 %4, i8* %2, align 1, !dbg !16954
  ret void, !dbg !16955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16956 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16959, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16958, metadata !DIExpression()), !dbg !16960
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !16961
  br i1 %4, label %5, label %9, !dbg !16963

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !16964
  br i1 %6, label %7, label %9, !dbg !16965

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16966, metadata !DIExpression()) #26, !dbg !16972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16971, metadata !DIExpression()) #26, !dbg !16972
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #28, !dbg !16975
  br label %10, !dbg !16976

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !16977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !16977
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !16980
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16982, !srcloc !16398
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16988, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.value(metadata i32 %0, metadata !16990, metadata !DIExpression()), !dbg !16995
  %2 = icmp eq i32 %0, 0, !dbg !16997
  br i1 %2, label %3, label %6, !dbg !16998

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16999, !srcloc !17006
  call void @llvm.dbg.value(metadata i32 %4, metadata !17002, metadata !DIExpression()) #26, !dbg !17007
  %5 = icmp eq i32 %4, 0, !dbg !17008
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16989
  ret i1 %7, !dbg !17009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #3 !dbg !17010 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17013
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17012, metadata !DIExpression()), !dbg !17014
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17015
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !17016
  ret i1 %3, !dbg !17017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !17018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17020, metadata !DIExpression()), !dbg !17022
  %2 = tail call i32 @arch_swap(i32 noundef %0) #28, !dbg !17023
  call void @llvm.dbg.value(metadata i32 %2, metadata !17021, metadata !DIExpression()), !dbg !17022
  ret i32 %2, !dbg !17024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17027, metadata !DIExpression()), !dbg !17031
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17032
  call void @llvm.dbg.value(metadata i32 0, metadata !17028, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17034
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17036, !srcloc !16372
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %4, metadata !16369, metadata !DIExpression()) #26, !dbg !17038
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %4, metadata !16363, metadata !DIExpression()) #26, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %4, metadata !17030, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17033
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17039
  br i1 %5, label %6, label %10, !dbg !17043

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16526, metadata !DIExpression()) #26, !dbg !17044
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17047
  %8 = load i8, i8* %7, align 1, !dbg !17048
  %9 = and i8 %8, 127, !dbg !17048
  store i8 %9, i8* %7, align 1, !dbg !17048
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16534, metadata !DIExpression()) #26, !dbg !17049
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !17051
  br label %10, !dbg !17052

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !17053
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17054
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !17055
  %13 = zext i1 %12 to i32, !dbg !17055
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !17056
  call void @llvm.dbg.value(metadata i32 %4, metadata !16384, metadata !DIExpression()) #26, !dbg !17057
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17057
  call void @llvm.dbg.value(metadata i32 %4, metadata !16392, metadata !DIExpression()) #26, !dbg !17059
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !17061, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17028, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()), !dbg !17033
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17062
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !17064
  br i1 %15, label %16, label %17, !dbg !17065

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17066
  br label %17, !dbg !17068

17:                                               ; preds = %16, %10
  ret void, !dbg !17069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17072, metadata !DIExpression()), !dbg !17073
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17074
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !17075
  ret i32 %3, !dbg !17076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17079, metadata !DIExpression()), !dbg !17080
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17081
  %3 = load i8, i8* %2, align 1, !dbg !17082
  %4 = or i8 %3, 16, !dbg !17082
  store i8 %4, i8* %2, align 1, !dbg !17082
  ret void, !dbg !17083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !17084 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17085, !srcloc !16372
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17085
  call void @llvm.dbg.value(metadata i32 %2, metadata !16369, metadata !DIExpression()) #26, !dbg !17087
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17087
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !17088
  ret void, !dbg !17089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !17090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17092, metadata !DIExpression()), !dbg !17093
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !17094
  br i1 %2, label %3, label %5, !dbg !17096

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !17097
  br label %6, !dbg !17099

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16392, metadata !DIExpression()) #26, !dbg !17100
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !17103, !srcloc !16398
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !17104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17107, metadata !DIExpression()), !dbg !17109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17110
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17112, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17112
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17114
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !17110
  call void @llvm.dbg.value(metadata i32 %3, metadata !17108, metadata !DIExpression()), !dbg !17109
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !17115
  br i1 %4, label %6, label %5, !dbg !17117

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !17118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !17121
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17123, !srcloc !16398
  br label %8, !dbg !17124

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !17125
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17126
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !17127
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !17127
  br label %8, !dbg !17128

8:                                                ; preds = %6, %5
  ret void, !dbg !17128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !17129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17131, metadata !DIExpression()), !dbg !17132
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17133
  %3 = load i8, i8* %2, align 1, !dbg !17133
  %4 = and i8 %3, 16, !dbg !17134
  %5 = icmp ne i8 %4, 0, !dbg !17135
  ret i1 %5, !dbg !17136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17137 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17139, metadata !DIExpression()), !dbg !17140
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17141
  %3 = load i8, i8* %2, align 1, !dbg !17142
  %4 = and i8 %3, -17, !dbg !17142
  store i8 %4, i8* %2, align 1, !dbg !17142
  ret void, !dbg !17143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17144 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17154, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17152, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17153, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 0, metadata !17155, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17160
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17162, !srcloc !16372
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !17162
  call void @llvm.dbg.value(metadata i32 %5, metadata !16369, metadata !DIExpression()) #26, !dbg !17164
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17164
  call void @llvm.dbg.value(metadata i32 %5, metadata !16363, metadata !DIExpression()) #26, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %5, metadata !17157, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17159
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %5, metadata !16384, metadata !DIExpression()) #26, !dbg !17168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17168
  call void @llvm.dbg.value(metadata i32 %5, metadata !16392, metadata !DIExpression()) #26, !dbg !17170
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #26, !dbg !17172, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17155, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !17155, metadata !DIExpression()), !dbg !17159
  ret void, !dbg !17173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !17174 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17178, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17176, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17177, metadata !DIExpression()), !dbg !17179
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !17180
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !17181
  ret void, !dbg !17182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !17183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17187, metadata !DIExpression()), !dbg !17189
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17188, metadata !DIExpression()), !dbg !17189
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !17190
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !17191
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !17192
  br i1 %3, label %21, label %4, !dbg !17194

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17195
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !17197
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !17198
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16557, metadata !DIExpression()) #26, !dbg !17199
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16563, metadata !DIExpression()) #26, !dbg !17199
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef nonnull %6) #28, !dbg !17201
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16564, metadata !DIExpression()) #26, !dbg !17199
  %8 = icmp eq %struct._dnode* %7, null, !dbg !17202
  br i1 %8, label %19, label %9, !dbg !17201

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16564, metadata !DIExpression()) #26, !dbg !17199
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !17203
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !16564, metadata !DIExpression()) #26, !dbg !17199
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #28, !dbg !17204
  %13 = icmp sgt i32 %12, 0, !dbg !17205
  br i1 %13, label %14, label %16, !dbg !17206

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17207
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #28, !dbg !17208
  br label %21, !dbg !17209

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #28, !dbg !17202
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16564, metadata !DIExpression()) #26, !dbg !17199
  %18 = icmp eq %struct._dnode* %17, null, !dbg !17202
  br i1 %18, label %19, label %9, !dbg !17201, !llvm.loop !17210

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17212
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #28, !dbg !17213
  br label %21, !dbg !17214

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !17215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17216 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17221, metadata !DIExpression()), !dbg !17222
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17220, metadata !DIExpression()), !dbg !17222
  %4 = icmp eq i64 %3, -1, !dbg !17223
  br i1 %4, label %6, label %5, !dbg !17225

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.246(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !17226
  br label %6, !dbg !17228

6:                                                ; preds = %5, %2
  ret void, !dbg !17229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.246(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17230 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17233, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17232, metadata !DIExpression()), !dbg !17234
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17235
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #28, !dbg !17236
  ret void, !dbg !17237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !17238 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17240, metadata !DIExpression()), !dbg !17248
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !17249
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !17249
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17241, metadata !DIExpression()), !dbg !17248
  call void @llvm.dbg.value(metadata i32 0, metadata !17242, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17251
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17253, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !17251
  call void @llvm.dbg.value(metadata i32 undef, metadata !17244, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 undef, metadata !17242, metadata !DIExpression()), !dbg !17250
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !17256
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !17257
  %7 = load i8, i8* %6, align 1, !dbg !17257
  %8 = and i8 %7, 40, !dbg !17258
  %9 = icmp eq i8 %8, 0, !dbg !17258
  call void @llvm.dbg.value(metadata i1 %9, metadata !17245, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17259
  br i1 %9, label %10, label %17, !dbg !17260

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !17261
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !17261
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !17261
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !17265
  br i1 %14, label %16, label %15, !dbg !17266

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !17267
  br label %16, !dbg !17269

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.243(%struct.k_thread* noundef nonnull %3) #27, !dbg !17270
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !17271
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !17272
  br label %17, !dbg !17273

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !17253
  call void @llvm.dbg.value(metadata i32 %18, metadata !16369, metadata !DIExpression()) #26, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %18, metadata !16363, metadata !DIExpression()) #26, !dbg !17251
  call void @llvm.dbg.value(metadata i32 %18, metadata !17244, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #26, !dbg !17274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #26, !dbg !17276
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !17278, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17242, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 undef, metadata !17242, metadata !DIExpression()), !dbg !17250
  ret void, !dbg !17279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17282, metadata !DIExpression()), !dbg !17283
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17284
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !17285
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17286
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !17287
  ret void, !dbg !17288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17289 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17291, metadata !DIExpression()), !dbg !17292
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17293
  %3 = load i8, i8* %2, align 1, !dbg !17294
  %4 = and i8 %3, -3, !dbg !17294
  store i8 %4, i8* %2, align 1, !dbg !17294
  ret void, !dbg !17295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17298, metadata !DIExpression()), !dbg !17299
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17300
  br i1 %2, label %3, label %7, !dbg !17302

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16526, metadata !DIExpression()) #26, !dbg !17303
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17306
  %5 = load i8, i8* %4, align 1, !dbg !17307
  %6 = and i8 %5, 127, !dbg !17307
  store i8 %6, i8* %4, align 1, !dbg !17307
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16534, metadata !DIExpression()) #26, !dbg !17308
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !17310
  br label %7, !dbg !17311

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17312
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17313
  %10 = zext i1 %9 to i32, !dbg !17313
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !17314
  ret void, !dbg !17315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !17316 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17318, metadata !DIExpression()), !dbg !17319
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17320
  %3 = load i8, i8* %2, align 1, !dbg !17321
  %4 = or i8 %3, 2, !dbg !17321
  store i8 %4, i8* %2, align 1, !dbg !17321
  ret void, !dbg !17322
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #25 !dbg !17323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17325, metadata !DIExpression()), !dbg !17329
  call void @llvm.dbg.value(metadata i32 0, metadata !17326, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17331
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17333, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %3, metadata !17328, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17330
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !17339
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17339
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !17341
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17343, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17326, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17330
  ret void, !dbg !17344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17345 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17351, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i32 %0, metadata !17349, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17350, metadata !DIExpression()), !dbg !17356
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17357
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !17358
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17359
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17360
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !17361
  call void @llvm.dbg.value(metadata i32 %6, metadata !17352, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i32 0, metadata !17353, metadata !DIExpression()), !dbg !17362
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17363
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17365, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !17367
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17367
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !17363
  call void @llvm.dbg.value(metadata i32 undef, metadata !17355, metadata !DIExpression()), !dbg !17362
  call void @llvm.dbg.value(metadata i32 undef, metadata !17353, metadata !DIExpression()), !dbg !17362
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17368
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17372
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !17373
  br i1 %10, label %11, label %12, !dbg !17374

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17375
  br label %12, !dbg !17377

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !17365
  call void @llvm.dbg.value(metadata i32 %13, metadata !16369, metadata !DIExpression()) #26, !dbg !17367
  call void @llvm.dbg.value(metadata i32 %13, metadata !16363, metadata !DIExpression()) #26, !dbg !17363
  call void @llvm.dbg.value(metadata i32 %13, metadata !17355, metadata !DIExpression()), !dbg !17362
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #26, !dbg !17378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17378
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #26, !dbg !17380
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !17382, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17353, metadata !DIExpression()), !dbg !17362
  call void @llvm.dbg.value(metadata i32 undef, metadata !17353, metadata !DIExpression()), !dbg !17362
  ret i32 %6, !dbg !17383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17384 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()), !dbg !17392
  call void @llvm.dbg.value(metadata i64 undef, metadata !17391, metadata !DIExpression()), !dbg !17392
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17388, metadata !DIExpression()), !dbg !17392
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17390, metadata !DIExpression()), !dbg !17392
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17393
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17395
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17397, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17399
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !17395
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17400
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !17401
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16966, metadata !DIExpression()) #26, !dbg !17402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16971, metadata !DIExpression()) #26, !dbg !17402
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #28, !dbg !17404
  ret i32 %9, !dbg !17405
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17406 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17410, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17411, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i32 0, metadata !17412, metadata !DIExpression()), !dbg !17416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17417
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17419, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17421
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !17417
  call void @llvm.dbg.value(metadata i32 undef, metadata !17414, metadata !DIExpression()), !dbg !17416
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17411, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i32 undef, metadata !17412, metadata !DIExpression()), !dbg !17416
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !17422
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17411, metadata !DIExpression()), !dbg !17415
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !17425
  br i1 %5, label %7, label %6, !dbg !17427

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !17428
  br label %7, !dbg !17430

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17419
  call void @llvm.dbg.value(metadata i32 %8, metadata !16369, metadata !DIExpression()) #26, !dbg !17421
  call void @llvm.dbg.value(metadata i32 %8, metadata !16363, metadata !DIExpression()) #26, !dbg !17417
  call void @llvm.dbg.value(metadata i32 %8, metadata !17414, metadata !DIExpression()), !dbg !17416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #26, !dbg !17431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17431
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #26, !dbg !17433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17435, !srcloc !16398
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17411, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i32 undef, metadata !17412, metadata !DIExpression()), !dbg !17416
  ret %struct.k_thread* %4, !dbg !17436
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17437 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17439, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 0, metadata !17441, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17446
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17448, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17443, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !17441, metadata !DIExpression()), !dbg !17445
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !17451
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17440, metadata !DIExpression()), !dbg !17444
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !17454
  br i1 %5, label %8, label %6, !dbg !17456

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !17457
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !17459
  br label %8, !dbg !17460

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17448
  call void @llvm.dbg.value(metadata i32 %9, metadata !16369, metadata !DIExpression()) #26, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %9, metadata !16363, metadata !DIExpression()) #26, !dbg !17446
  call void @llvm.dbg.value(metadata i32 %9, metadata !17443, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #26, !dbg !17461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17461
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #26, !dbg !17463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17465, !srcloc !16398
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17440, metadata !DIExpression()), !dbg !17444
  call void @llvm.dbg.value(metadata i32 undef, metadata !17441, metadata !DIExpression()), !dbg !17445
  ret %struct.k_thread* %4, !dbg !17466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17469, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17325, metadata !DIExpression()) #26, !dbg !17471
  call void @llvm.dbg.value(metadata i32 0, metadata !17326, metadata !DIExpression()) #26, !dbg !17473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17474
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17476, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17476
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !17478
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17478
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !17474
  call void @llvm.dbg.value(metadata i32 %3, metadata !17328, metadata !DIExpression()) #26, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()) #26, !dbg !17473
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !17479
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !17480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17480
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !17482
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !17484, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17326, metadata !DIExpression()) #26, !dbg !17473
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()) #26, !dbg !17473
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17485
  ret void, !dbg !17486
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17489, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.value(metadata i32 %1, metadata !17490, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.value(metadata i8 0, metadata !17491, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.value(metadata i32 0, metadata !17492, metadata !DIExpression()), !dbg !17496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17497
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17499, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !17501
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17501
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !17497
  call void @llvm.dbg.value(metadata i32 undef, metadata !17494, metadata !DIExpression()), !dbg !17496
  call void @llvm.dbg.value(metadata i8 poison, metadata !17491, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.value(metadata i32 undef, metadata !17492, metadata !DIExpression()), !dbg !17496
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !17502
  call void @llvm.dbg.value(metadata i1 %6, metadata !17491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17495
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !17505

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16526, metadata !DIExpression()) #26, !dbg !17506
  %11 = load i8, i8* %4, align 1, !dbg !17512
  %12 = and i8 %11, 127, !dbg !17512
  store i8 %12, i8* %4, align 1, !dbg !17512
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16534, metadata !DIExpression()) #26, !dbg !17513
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !17515
  store i8 %9, i8* %8, align 2, !dbg !17516
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16543, metadata !DIExpression()) #26, !dbg !17517
  %13 = load i8, i8* %4, align 1, !dbg !17519
  %14 = or i8 %13, -128, !dbg !17519
  store i8 %14, i8* %4, align 1, !dbg !17519
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16550, metadata !DIExpression()) #26, !dbg !17520
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16557, metadata !DIExpression()) #26, !dbg !17522
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16563, metadata !DIExpression()) #26, !dbg !17522
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !17524
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16564, metadata !DIExpression()) #26, !dbg !17522
  %16 = icmp eq %struct._dnode* %15, null, !dbg !17525
  br i1 %16, label %26, label %17, !dbg !17524

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !16564, metadata !DIExpression()) #26, !dbg !17522
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !17526
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !16564, metadata !DIExpression()) #26, !dbg !17522
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #28, !dbg !17527
  %21 = icmp sgt i32 %20, 0, !dbg !17528
  br i1 %21, label %22, label %23, !dbg !17529

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #28, !dbg !17530
  br label %27, !dbg !17531

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #28, !dbg !17525
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16564, metadata !DIExpression()) #26, !dbg !17522
  %25 = icmp eq %struct._dnode* %24, null, !dbg !17525
  br i1 %25, label %26, label %17, !dbg !17524, !llvm.loop !17532

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #28, !dbg !17534
  br label %27, !dbg !17535

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17536
  br label %29, !dbg !17537

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !17538
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !17499
  call void @llvm.dbg.value(metadata i32 %30, metadata !16369, metadata !DIExpression()) #26, !dbg !17501
  call void @llvm.dbg.value(metadata i32 %30, metadata !16363, metadata !DIExpression()) #26, !dbg !17497
  call void @llvm.dbg.value(metadata i32 %30, metadata !17494, metadata !DIExpression()), !dbg !17496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #26, !dbg !17540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17540
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #26, !dbg !17542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #26, !dbg !17544, !srcloc !16398
  call void @llvm.dbg.value(metadata i8 poison, metadata !17491, metadata !DIExpression()), !dbg !17495
  call void @llvm.dbg.value(metadata i32 undef, metadata !17492, metadata !DIExpression()), !dbg !17496
  ret i1 %6, !dbg !17545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17550, metadata !DIExpression()), !dbg !17553
  call void @llvm.dbg.value(metadata i32 %1, metadata !17551, metadata !DIExpression()), !dbg !17553
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !17554
  call void @llvm.dbg.value(metadata i1 %3, metadata !17552, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17553
  br i1 %3, label %4, label %12, !dbg !17555

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17557
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17558
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17558
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17558
  %9 = load i8, i8* %8, align 1, !dbg !17558
  %10 = icmp eq i8 %9, 0, !dbg !17559
  br i1 %10, label %11, label %12, !dbg !17560

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17561
  br label %12, !dbg !17563

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17565 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17567, metadata !DIExpression()), !dbg !17570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17571
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17573, !srcloc !16372
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17573
  call void @llvm.dbg.value(metadata i32 %2, metadata !16369, metadata !DIExpression()) #26, !dbg !17575
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17575
  call void @llvm.dbg.value(metadata i32 %2, metadata !16363, metadata !DIExpression()) #26, !dbg !17571
  call void @llvm.dbg.value(metadata i32 %2, metadata !17569, metadata !DIExpression()), !dbg !17570
  call void @llvm.dbg.value(metadata i32 undef, metadata !17567, metadata !DIExpression()), !dbg !17570
  tail call fastcc void @z_sched_lock() #27, !dbg !17576
  call void @llvm.dbg.value(metadata i32 %2, metadata !16384, metadata !DIExpression()) #26, !dbg !17579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17579
  call void @llvm.dbg.value(metadata i32 %2, metadata !16392, metadata !DIExpression()) #26, !dbg !17581
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !17583, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17567, metadata !DIExpression()), !dbg !17570
  call void @llvm.dbg.value(metadata i32 undef, metadata !17567, metadata !DIExpression()), !dbg !17570
  ret void, !dbg !17584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17585 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17586
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !17587
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !17587
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !17587
  %5 = load i8, i8* %4, align 1, !dbg !17588
  %6 = add i8 %5, -1, !dbg !17588
  store i8 %6, i8* %4, align 1, !dbg !17588
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17589, !srcloc !17591
  ret void, !dbg !17592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17593 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17595, metadata !DIExpression()), !dbg !17598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17599
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17601, !srcloc !16372
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17601
  call void @llvm.dbg.value(metadata i32 %2, metadata !16369, metadata !DIExpression()) #26, !dbg !17603
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17603
  call void @llvm.dbg.value(metadata i32 %2, metadata !16363, metadata !DIExpression()) #26, !dbg !17599
  call void @llvm.dbg.value(metadata i32 %2, metadata !17597, metadata !DIExpression()), !dbg !17598
  call void @llvm.dbg.value(metadata i32 undef, metadata !17595, metadata !DIExpression()), !dbg !17598
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17604
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !17607
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !17607
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !17607
  %7 = load i8, i8* %6, align 1, !dbg !17608
  %8 = add i8 %7, 1, !dbg !17608
  store i8 %8, i8* %6, align 1, !dbg !17608
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !17609
  call void @llvm.dbg.value(metadata i32 %2, metadata !16384, metadata !DIExpression()) #26, !dbg !17610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !17610
  call void @llvm.dbg.value(metadata i32 %2, metadata !16392, metadata !DIExpression()) #26, !dbg !17612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !17614, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 1, metadata !17595, metadata !DIExpression()), !dbg !17598
  call void @llvm.dbg.value(metadata i32 undef, metadata !17595, metadata !DIExpression()), !dbg !17598
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17615
  ret void, !dbg !17616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #3 !dbg !17617 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17618
  ret %struct.k_thread* %1, !dbg !17619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #3 !dbg !17620 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17624, metadata !DIExpression()), !dbg !17629
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17625, metadata !DIExpression()), !dbg !17629
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17630
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17626, metadata !DIExpression()), !dbg !17629
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17631
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17627, metadata !DIExpression()), !dbg !17629
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !17632
  call void @llvm.dbg.value(metadata i32 %5, metadata !17628, metadata !DIExpression()), !dbg !17629
  %6 = icmp sgt i32 %5, 0, !dbg !17633
  br i1 %6, label %17, label %7, !dbg !17635

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17636
  br i1 %8, label %17, label %9, !dbg !17638

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17639
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17639
  %12 = load i32, i32* %11, align 8, !dbg !17639
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17641
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17641
  %15 = load i32, i32* %14, align 8, !dbg !17641
  %16 = icmp ult i32 %12, %15, !dbg !17642
  br label %17, !dbg !17643

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17644
  ret i1 %18, !dbg !17645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17646 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17663, metadata !DIExpression()), !dbg !17678
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17664, metadata !DIExpression()), !dbg !17678
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17679
  %5 = load i32, i32* %4, align 4, !dbg !17680
  %6 = add nsw i32 %5, 1, !dbg !17680
  store i32 %6, i32* %4, align 4, !dbg !17680
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17681
  store i32 %5, i32* %7, align 8, !dbg !17682
  %8 = load i32, i32* %4, align 4, !dbg !17683
  %9 = icmp eq i32 %8, 0, !dbg !17684
  br i1 %9, label %10, label %32, !dbg !17685

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17686
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #26, !dbg !17686
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17666, metadata !DIExpression()), !dbg !17686
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17686
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17686
  %14 = load i32, i32* %13, align 4, !dbg !17686
  %15 = shl i32 %14, 2, !dbg !17686
  %16 = alloca i8, i32 %15, align 8, !dbg !17686
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17686
  store i8* %16, i8** %17, align 4, !dbg !17686
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17686
  %19 = alloca i8, i32 %14, align 8, !dbg !17686
  store i8* %19, i8** %18, align 4, !dbg !17686
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17686
  store i32 -1, i32* %20, align 4, !dbg !17686
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #28, !dbg !17687
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17675, metadata !DIExpression()), !dbg !17688
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17665, metadata !DIExpression()), !dbg !17678
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17689
  br i1 %22, label %23, label %24, !dbg !17686

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #26, !dbg !17689
  br label %32, !dbg !17690

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17665, metadata !DIExpression()), !dbg !17678
  %26 = load i32, i32* %4, align 4, !dbg !17691
  %27 = add nsw i32 %26, 1, !dbg !17691
  store i32 %27, i32* %4, align 4, !dbg !17691
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17693
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17693
  store i32 %26, i32* %29, align 8, !dbg !17694
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #28, !dbg !17687
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17675, metadata !DIExpression()), !dbg !17688
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17665, metadata !DIExpression()), !dbg !17678
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17689
  br i1 %31, label %23, label %24, !dbg !17686, !llvm.loop !17695

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17697
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17698
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #28, !dbg !17699
  ret void, !dbg !17700
}

; Function Attrs: optsize
declare !dbg !17701 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17706 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17709 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17711, metadata !DIExpression()), !dbg !17713
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17712, metadata !DIExpression()), !dbg !17713
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17714
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17715
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #28, !dbg !17716
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17717
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17717
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17719
  br i1 %7, label %8, label %10, !dbg !17720

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17721
  store i32 0, i32* %9, align 4, !dbg !17723
  br label %10, !dbg !17724

10:                                               ; preds = %8, %2
  ret void, !dbg !17725
}

; Function Attrs: optsize
declare !dbg !17726 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17727 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17731, metadata !DIExpression()), !dbg !17734
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17732, metadata !DIExpression()), !dbg !17734
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17735
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !17736
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17733, metadata !DIExpression()), !dbg !17734
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17732, metadata !DIExpression()), !dbg !17734
  ret %struct.k_thread* %4, !dbg !17737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17738 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17742, metadata !DIExpression()), !dbg !17743
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #28, !dbg !17744
  ret %struct.rbnode* %2, !dbg !17745
}

; Function Attrs: optsize
declare !dbg !17746 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17749 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17761, metadata !DIExpression()), !dbg !17765
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17766
  %3 = load i32, i32* %2, align 4, !dbg !17766
  %4 = icmp eq i32 %3, 0, !dbg !17768
  br i1 %4, label %10, label %5, !dbg !17769

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17762, metadata !DIExpression()), !dbg !17765
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17770, !range !5118
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17771
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17763, metadata !DIExpression()), !dbg !17765
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef %7) #27, !dbg !17772
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17764, metadata !DIExpression()), !dbg !17765
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17762, metadata !DIExpression()), !dbg !17765
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17765
  ret %struct.k_thread* %11, !dbg !17773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17774 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17778, metadata !DIExpression()), !dbg !17781
  call void @llvm.dbg.value(metadata i32 0, metadata !17779, metadata !DIExpression()), !dbg !17781
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.259(%struct._wait_q_t* noundef %0) #27, !dbg !17782
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17780, metadata !DIExpression()), !dbg !17781
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17783
  br i1 %3, label %8, label %4, !dbg !17784

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17785
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !17787
  call void @llvm.dbg.value(metadata i32 1, metadata !17779, metadata !DIExpression()), !dbg !17781
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.259(%struct._wait_q_t* noundef %0) #27, !dbg !17782
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17780, metadata !DIExpression()), !dbg !17781
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17783
  br i1 %7, label %8, label %4, !dbg !17784, !llvm.loop !17788

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17781
  ret i32 %9, !dbg !17790
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.259(%struct._wait_q_t* noundef readonly %0) unnamed_addr #3 !dbg !17791 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17793, metadata !DIExpression()), !dbg !17794
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17795
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef %2) #27, !dbg !17796
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17797
  ret %struct.k_thread* %4, !dbg !17798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17799 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17808, metadata !DIExpression()), !dbg !17809
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17810
  tail call fastcc void @sys_dlist_init.260(%struct._dnode* noundef nonnull %2) #27, !dbg !17811
  ret void, !dbg !17812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.260(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17813 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17817, metadata !DIExpression()), !dbg !17818
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17819
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17820
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17821
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17822
  ret void, !dbg !17823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17824 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !17825
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !17826
  ret void, !dbg !17827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #3 !dbg !17828 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17833, metadata !DIExpression()), !dbg !17834
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17835
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17835
  %4 = load i8, i8* %3, align 2, !dbg !17835
  %5 = sext i8 %4 to i32, !dbg !17836
  ret i32 %5, !dbg !17837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17838 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17842, metadata !DIExpression()), !dbg !17845
  call void @llvm.dbg.value(metadata i32 %1, metadata !17843, metadata !DIExpression()), !dbg !17845
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17844, metadata !DIExpression()), !dbg !17845
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !17846
  ret void, !dbg !17847
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17848 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !17849
  br i1 %1, label %8, label %2, !dbg !17850

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #28, !dbg !17851
  br i1 %3, label %8, label %4, !dbg !17852

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17853
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !17854
  %7 = xor i1 %6, true, !dbg !17852
  br label %8, !dbg !17852

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #3 !dbg !17856 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17857, !range !7784
  %2 = icmp eq i8 %1, 0, !dbg !17857
  ret i1 %2, !dbg !17858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17859 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17862
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17864, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !17866
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17866
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !17862
  call void @llvm.dbg.value(metadata i32 undef, metadata !17861, metadata !DIExpression()), !dbg !17867
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17868
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16526, metadata !DIExpression()) #26, !dbg !17871
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17873
  %4 = load i8, i8* %3, align 1, !dbg !17874
  %5 = and i8 %4, 127, !dbg !17874
  store i8 %5, i8* %3, align 1, !dbg !17874
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16534, metadata !DIExpression()) #26, !dbg !17875
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #28, !dbg !17877
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17878
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16543, metadata !DIExpression()) #26, !dbg !17879
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17881
  %8 = load i8, i8* %7, align 1, !dbg !17882
  %9 = or i8 %8, -128, !dbg !17882
  store i8 %9, i8* %7, align 1, !dbg !17882
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16550, metadata !DIExpression()) #26, !dbg !17883
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16557, metadata !DIExpression()) #26, !dbg !17885
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16563, metadata !DIExpression()) #26, !dbg !17885
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.234(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #28, !dbg !17887
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16564, metadata !DIExpression()) #26, !dbg !17885
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17888
  br i1 %11, label %22, label %12, !dbg !17887

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16564, metadata !DIExpression()) #26, !dbg !17885
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17889
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16564, metadata !DIExpression()) #26, !dbg !17885
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #28, !dbg !17890
  %16 = icmp sgt i32 %15, 0, !dbg !17891
  br i1 %16, label %17, label %19, !dbg !17892

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17893
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #28, !dbg !17894
  br label %24, !dbg !17895

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #28, !dbg !17888
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16564, metadata !DIExpression()) #26, !dbg !17885
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17888
  br i1 %21, label %22, label %12, !dbg !17887, !llvm.loop !17896

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17898
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #28, !dbg !17899
  br label %24, !dbg !17900

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17864
  call void @llvm.dbg.value(metadata i32 %25, metadata !16369, metadata !DIExpression()) #26, !dbg !17866
  call void @llvm.dbg.value(metadata i32 %25, metadata !16363, metadata !DIExpression()) #26, !dbg !17862
  call void @llvm.dbg.value(metadata i32 %25, metadata !17861, metadata !DIExpression()), !dbg !17867
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16966, metadata !DIExpression()) #26, !dbg !17902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16971, metadata !DIExpression()) #26, !dbg !17902
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #28, !dbg !17904
  ret void, !dbg !17905
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17906 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17910, metadata !DIExpression()), !dbg !17913
  %3 = icmp eq i64 %2, -1, !dbg !17914
  br i1 %3, label %4, label %6, !dbg !17916

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17917
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !17919
  br label %11, !dbg !17920

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17911, metadata !DIExpression()), !dbg !17913
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !17921
  %8 = sext i32 %7 to i64, !dbg !17921
  call void @llvm.dbg.value(metadata i64 %8, metadata !17911, metadata !DIExpression()), !dbg !17913
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !17922
  %10 = trunc i64 %9 to i32, !dbg !17922
  call void @llvm.dbg.value(metadata i32 %10, metadata !17912, metadata !DIExpression()), !dbg !17913
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17913
  ret i32 %12, !dbg !17923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17928, metadata !DIExpression()), !dbg !17929
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17930, !srcloc !17932
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !17933
  ret void, !dbg !17934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17935 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17939, metadata !DIExpression()), !dbg !17943
  %2 = icmp eq i64 %0, 0, !dbg !17944
  br i1 %2, label %3, label %4, !dbg !17946

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !17947
  br label %29, !dbg !17949

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17941, metadata !DIExpression()), !dbg !17943
  %5 = icmp sgt i64 %0, -3, !dbg !17950
  br i1 %5, label %6, label %10, !dbg !17952

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #28, !dbg !17953
  %8 = trunc i64 %0 to i32, !dbg !17955
  %9 = add i32 %7, %8, !dbg !17955
  call void @llvm.dbg.value(metadata i32 %9, metadata !17940, metadata !DIExpression()), !dbg !17943
  br label %13, !dbg !17956

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17957
  %12 = sub i32 -2, %11, !dbg !17957
  call void @llvm.dbg.value(metadata i32 %12, metadata !17940, metadata !DIExpression()), !dbg !17943
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17959
  call void @llvm.dbg.value(metadata i32 %14, metadata !17940, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !17960
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17962, !srcloc !16372
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17962
  call void @llvm.dbg.value(metadata i32 %16, metadata !16369, metadata !DIExpression()) #26, !dbg !17964
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !17964
  call void @llvm.dbg.value(metadata i32 %16, metadata !16363, metadata !DIExpression()) #26, !dbg !17960
  call void @llvm.dbg.value(metadata i32 %16, metadata !17942, metadata !DIExpression()), !dbg !17943
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17965
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17966
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !17967
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17968
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17969
  tail call fastcc void @z_add_thread_timeout.246(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !17969
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17970
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !17971
  call void @llvm.dbg.value(metadata i32 %16, metadata !16966, metadata !DIExpression()) #26, !dbg !17972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16971, metadata !DIExpression()) #26, !dbg !17972
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #28, !dbg !17974
  %22 = zext i32 %14 to i64, !dbg !17975
  %23 = tail call i32 @sys_clock_tick_get_32() #28, !dbg !17976
  %24 = zext i32 %23 to i64, !dbg !17976
  %25 = sub nsw i64 %22, %24, !dbg !17977
  call void @llvm.dbg.value(metadata i64 %25, metadata !17939, metadata !DIExpression()), !dbg !17943
  %26 = icmp sgt i64 %25, 0, !dbg !17978
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17978
  %28 = trunc i64 %27 to i32, !dbg !17978
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17943
  ret i32 %30, !dbg !17979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17980 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17982, metadata !DIExpression()), !dbg !17983
  call void @llvm.dbg.value(metadata i64 %0, metadata !16404, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.value(metadata i32 10000, metadata !16407, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.value(metadata i32 1000, metadata !16408, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.value(metadata i8 1, metadata !16409, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.value(metadata i1 false, metadata !16410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17984
  call void @llvm.dbg.value(metadata i1 false, metadata !16411, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17984
  call void @llvm.dbg.value(metadata i8 0, metadata !16412, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.value(metadata i1 false, metadata !16413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17984
  call void @llvm.dbg.value(metadata i1 true, metadata !16414, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17984
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !17984
  call void @llvm.dbg.value(metadata i64 %0, metadata !16404, metadata !DIExpression()), !dbg !17984
  %2 = udiv i64 %0, 10, !dbg !17986
  ret i64 %2, !dbg !17990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17991 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17992, !srcloc !17994
  tail call void @z_impl_k_yield() #27, !dbg !17995
  ret void, !dbg !17996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18001, metadata !DIExpression()), !dbg !18003
  %2 = sext i32 %0 to i64, !dbg !18004
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !18005
  call void @llvm.dbg.value(metadata i64 %3, metadata !18002, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18003
  %4 = shl i64 %3, 32, !dbg !18006
  %5 = ashr exact i64 %4, 32, !dbg !18006
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !18007
  call void @llvm.dbg.value(metadata i32 %6, metadata !18002, metadata !DIExpression()), !dbg !18003
  %7 = sext i32 %6 to i64, !dbg !18008
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !18009
  %9 = trunc i64 %8 to i32, !dbg !18009
  ret i32 %9, !dbg !18010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !18011 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18013, metadata !DIExpression()), !dbg !18014
  call void @llvm.dbg.value(metadata i64 %0, metadata !16404, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16407, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i32 10000, metadata !16408, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i8 1, metadata !16409, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i1 false, metadata !16410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18015
  call void @llvm.dbg.value(metadata i1 true, metadata !16411, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18015
  call void @llvm.dbg.value(metadata i8 0, metadata !16412, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i1 false, metadata !16413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18015
  call void @llvm.dbg.value(metadata i1 true, metadata !16414, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18015
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !18015
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !18015
  %2 = add i64 %0, 99, !dbg !18017
  call void @llvm.dbg.value(metadata i64 %2, metadata !16404, metadata !DIExpression()), !dbg !18015
  %3 = udiv i64 %2, 100, !dbg !18018
  ret i64 %3, !dbg !18019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !18020 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18022, metadata !DIExpression()), !dbg !18023
  call void @llvm.dbg.value(metadata i64 %0, metadata !16404, metadata !DIExpression()), !dbg !18024
  call void @llvm.dbg.value(metadata i32 10000, metadata !16407, metadata !DIExpression()), !dbg !18024
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16408, metadata !DIExpression()), !dbg !18024
  call void @llvm.dbg.value(metadata i8 1, metadata !16409, metadata !DIExpression()), !dbg !18024
  call void @llvm.dbg.value(metadata i1 false, metadata !16410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18024
  call void @llvm.dbg.value(metadata i1 false, metadata !16411, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18024
  call void @llvm.dbg.value(metadata i8 0, metadata !16412, metadata !DIExpression()), !dbg !18024
  call void @llvm.dbg.value(metadata i1 true, metadata !16413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18024
  call void @llvm.dbg.value(metadata i1 false, metadata !16414, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18024
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !18024
  call void @llvm.dbg.value(metadata i64 0, metadata !16415, metadata !DIExpression()), !dbg !18024
  %2 = mul i64 %0, 100, !dbg !18026
  ret i64 %2, !dbg !18028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18031, metadata !DIExpression()), !dbg !18032
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !18033
  br i1 %2, label %14, label %3, !dbg !18035

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !18036
  %5 = icmp slt i32 %4, 0, !dbg !18038
  br i1 %5, label %6, label %10, !dbg !18039

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18040
  %8 = load i8, i8* %7, align 1, !dbg !18040
  %9 = icmp eq i8 %8, 16, !dbg !18043
  br i1 %9, label %10, label %14, !dbg !18044

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !18045
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18046
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18047, !srcloc !17006
  call void @llvm.dbg.value(metadata i32 %11, metadata !17002, metadata !DIExpression()) #26, !dbg !18051
  %12 = icmp eq i32 %11, 0, !dbg !18052
  br i1 %12, label %13, label %14, !dbg !18053

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18054
  br label %14, !dbg !18056

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !18057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #3 !dbg !18058 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18060, metadata !DIExpression()), !dbg !18061
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18062
  %3 = load i8, i8* %2, align 1, !dbg !18062
  %4 = and i8 %3, 2, !dbg !18063
  %5 = icmp ne i8 %4, 0, !dbg !18064
  ret i1 %5, !dbg !18065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #3 !dbg !18066 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18071
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18070, metadata !DIExpression()), !dbg !18072
  ret %struct.k_thread* %1, !dbg !18073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !18074 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18075, !srcloc !17006
  call void @llvm.dbg.value(metadata i32 %1, metadata !17002, metadata !DIExpression()) #26, !dbg !18078
  %2 = icmp eq i32 %1, 0, !dbg !18079
  br i1 %2, label %3, label %8, !dbg !18080

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18081
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !18082
  %6 = icmp ne i32 %5, 0, !dbg !18080
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !18083
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18086, metadata !DIExpression()), !dbg !18088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !18089
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18091, !srcloc !16372
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18091
  call void @llvm.dbg.value(metadata i32 %3, metadata !16369, metadata !DIExpression()) #26, !dbg !18093
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !18093
  call void @llvm.dbg.value(metadata i32 %3, metadata !16363, metadata !DIExpression()) #26, !dbg !18089
  call void @llvm.dbg.value(metadata i32 %3, metadata !18087, metadata !DIExpression()), !dbg !18088
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !18094
  %5 = load i8, i8* %4, align 4, !dbg !18094
  %6 = and i8 %5, 1, !dbg !18096
  %7 = icmp eq i8 %6, 0, !dbg !18097
  br i1 %7, label %9, label %8, !dbg !18098

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !18099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !18099
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !18102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18104, !srcloc !16398
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !18105, !srcloc !18107
  br label %24, !dbg !18108

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18109
  %11 = load i8, i8* %10, align 1, !dbg !18109
  %12 = and i8 %11, 8, !dbg !18111
  %13 = icmp eq i8 %12, 0, !dbg !18112
  br i1 %13, label %15, label %14, !dbg !18113

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !18114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !18114
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !18117
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18119, !srcloc !16398
  br label %24, !dbg !18120

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !18121
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18122
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18124
  br i1 %17, label %18, label %23, !dbg !18125

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18126, !srcloc !17006
  call void @llvm.dbg.value(metadata i32 %19, metadata !17002, metadata !DIExpression()) #26, !dbg !18129
  %20 = icmp eq i32 %19, 0, !dbg !18130
  br i1 %20, label %21, label %23, !dbg !18131

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16966, metadata !DIExpression()) #26, !dbg !18132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16971, metadata !DIExpression()) #26, !dbg !18132
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #28, !dbg !18135
  br label %23, !dbg !18136

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !16384, metadata !DIExpression()) #26, !dbg !18137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !18137
  call void @llvm.dbg.value(metadata i32 %3, metadata !16392, metadata !DIExpression()) #26, !dbg !18139
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18141, !srcloc !16398
  br label %24, !dbg !18142

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !18142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18145, metadata !DIExpression()), !dbg !18146
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18147
  %3 = load i8, i8* %2, align 1, !dbg !18147
  %4 = and i8 %3, 8, !dbg !18149
  %5 = icmp eq i8 %4, 0, !dbg !18150
  br i1 %5, label %6, label %20, !dbg !18151

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18152
  %8 = or i8 %7, 8, !dbg !18152
  store i8 %8, i8* %2, align 1, !dbg !18152
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !18154
  br i1 %9, label %10, label %12, !dbg !18156

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16526, metadata !DIExpression()) #26, !dbg !18157
  %11 = and i8 %8, 95, !dbg !18160
  store i8 %11, i8* %2, align 1, !dbg !18160
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16534, metadata !DIExpression()) #26, !dbg !18161
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #28, !dbg !18163
  br label %12, !dbg !18164

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18165
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !18165
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !18167
  br i1 %15, label %17, label %16, !dbg !18168

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !18169
  br label %17, !dbg !18171

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !18172
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18173
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !18174
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18175
  br label %20, !dbg !18176

20:                                               ; preds = %17, %1
  ret void, !dbg !18177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !18178 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18182, metadata !DIExpression()), !dbg !18184
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.259(%struct._wait_q_t* noundef %0) #27, !dbg !18185
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18183, metadata !DIExpression()), !dbg !18184
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18186
  br i1 %3, label %10, label %4, !dbg !18187

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !18188
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !18190
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18191, metadata !DIExpression()), !dbg !18197
  call void @llvm.dbg.value(metadata i32 0, metadata !18196, metadata !DIExpression()), !dbg !18197
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18199
  store i32 0, i32* %7, align 4, !dbg !18200
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18201
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.259(%struct._wait_q_t* noundef %0) #27, !dbg !18185
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18183, metadata !DIExpression()), !dbg !18184
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18186
  br i1 %9, label %10, label %4, !dbg !18187, !llvm.loop !18202

10:                                               ; preds = %4, %1
  ret void, !dbg !18204
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18205 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18210, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18209, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !18214
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18216, !srcloc !16372
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !18216
  call void @llvm.dbg.value(metadata i32 %4, metadata !16369, metadata !DIExpression()) #26, !dbg !18218
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !18218
  call void @llvm.dbg.value(metadata i32 %4, metadata !16363, metadata !DIExpression()) #26, !dbg !18214
  call void @llvm.dbg.value(metadata i32 %4, metadata !18211, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata i32 0, metadata !18212, metadata !DIExpression()), !dbg !18213
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18219
  %6 = load i8, i8* %5, align 1, !dbg !18219
  %7 = and i8 %6, 8, !dbg !18221
  %8 = icmp eq i8 %7, 0, !dbg !18222
  br i1 %8, label %9, label %24, !dbg !18223

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !18210, metadata !DIExpression()), !dbg !18213
  %11 = icmp eq i64 %10, 0, !dbg !18224
  br i1 %11, label %24, label %12, !dbg !18226

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18227
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !18229
  br i1 %14, label %24, label %15, !dbg !18230

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18231
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !18231
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !18232
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !18233
  br i1 %19, label %24, label %20, !dbg !18234

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18235
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #27, !dbg !18237
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18238
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !18239
  call void @llvm.dbg.value(metadata i32 %4, metadata !16966, metadata !DIExpression()) #26, !dbg !18240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16971, metadata !DIExpression()) #26, !dbg !18240
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #28, !dbg !18242
  call void @llvm.dbg.value(metadata i32 %23, metadata !18212, metadata !DIExpression()), !dbg !18213
  br label %26, !dbg !18243

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !18244
  call void @llvm.dbg.value(metadata i32 %25, metadata !18212, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.value(metadata i32 %4, metadata !16384, metadata !DIExpression()) #26, !dbg !18245
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !18245
  call void @llvm.dbg.value(metadata i32 %4, metadata !16392, metadata !DIExpression()) #26, !dbg !18247
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !18249, !srcloc !16398
  br label %26, !dbg !18250

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !18213
  ret i32 %27, !dbg !18251
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18252 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18256, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i32 %1, metadata !18257, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i8* %2, metadata !18258, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i8 0, metadata !18260, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i32 0, metadata !18261, metadata !DIExpression()), !dbg !18265
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16357, metadata !DIExpression()) #26, !dbg !18266
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18268, !srcloc !16372
  call void @llvm.dbg.value(metadata i32 undef, metadata !16369, metadata !DIExpression()) #26, !dbg !18270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16370, metadata !DIExpression()) #26, !dbg !18270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()) #26, !dbg !18266
  call void @llvm.dbg.value(metadata i32 undef, metadata !18263, metadata !DIExpression()), !dbg !18265
  call void @llvm.dbg.value(metadata i8 poison, metadata !18260, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i32 undef, metadata !18261, metadata !DIExpression()), !dbg !18265
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !18271
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18259, metadata !DIExpression()), !dbg !18264
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18274
  br i1 %7, label %12, label %8, !dbg !18276

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18277, metadata !DIExpression()), !dbg !18284
  call void @llvm.dbg.value(metadata i32 %1, metadata !18282, metadata !DIExpression()), !dbg !18284
  call void @llvm.dbg.value(metadata i8* %2, metadata !18283, metadata !DIExpression()), !dbg !18284
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18191, metadata !DIExpression()), !dbg !18287
  call void @llvm.dbg.value(metadata i32 %1, metadata !18196, metadata !DIExpression()), !dbg !18287
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !18289
  store i32 %1, i32* %9, align 4, !dbg !18290
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !18291
  store i8* %2, i8** %10, align 4, !dbg !18292
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !18293
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !18294
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !18295
  call void @llvm.dbg.value(metadata i8 1, metadata !18260, metadata !DIExpression()), !dbg !18264
  br label %12, !dbg !18296

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !18268
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !18268
  call void @llvm.dbg.value(metadata i32 %14, metadata !16369, metadata !DIExpression()) #26, !dbg !18270
  call void @llvm.dbg.value(metadata i32 %14, metadata !16363, metadata !DIExpression()) #26, !dbg !18266
  call void @llvm.dbg.value(metadata i32 %14, metadata !18263, metadata !DIExpression()), !dbg !18265
  call void @llvm.dbg.value(metadata i8 poison, metadata !18260, metadata !DIExpression()), !dbg !18264
  call void @llvm.dbg.value(metadata i32 undef, metadata !16384, metadata !DIExpression()) #26, !dbg !18297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16389, metadata !DIExpression()) #26, !dbg !18297
  call void @llvm.dbg.value(metadata i32 undef, metadata !16392, metadata !DIExpression()) #26, !dbg !18299
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18301, !srcloc !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !18261, metadata !DIExpression()), !dbg !18265
  ret i1 %13, !dbg !18302
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18303 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18309, metadata !DIExpression()), !dbg !18314
  call void @llvm.dbg.value(metadata i64 undef, metadata !18311, metadata !DIExpression()), !dbg !18314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18308, metadata !DIExpression()), !dbg !18314
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !18310, metadata !DIExpression()), !dbg !18314
  call void @llvm.dbg.value(metadata i8** %4, metadata !18312, metadata !DIExpression()), !dbg !18314
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !18315
  call void @llvm.dbg.value(metadata i32 %6, metadata !18313, metadata !DIExpression()), !dbg !18314
  %7 = icmp eq i8** %4, null, !dbg !18316
  br i1 %7, label %12, label %8, !dbg !18318

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18319
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18321
  %11 = load i8*, i8** %10, align 4, !dbg !18321
  store i8* %11, i8** %4, align 4, !dbg !18322
  br label %12, !dbg !18323

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18325 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #28, !dbg !18327
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #28, !dbg !18328
  ret void, !dbg !18329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18330 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18340, metadata !DIExpression()), !dbg !18357
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18338, metadata !DIExpression()), !dbg !18357
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18339, metadata !DIExpression()), !dbg !18357
  %5 = icmp eq i64 %4, -1, !dbg !18358
  br i1 %5, label %55, label %6, !dbg !18360

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18361
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !18362
  call void @llvm.dbg.value(metadata i32 0, metadata !18341, metadata !DIExpression()), !dbg !18363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18371
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18373, !srcloc !18379
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !18373
  call void @llvm.dbg.value(metadata i32 %9, metadata !18376, metadata !DIExpression()) #26, !dbg !18380
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18380
  call void @llvm.dbg.value(metadata i32 %9, metadata !18370, metadata !DIExpression()) #26, !dbg !18371
  call void @llvm.dbg.value(metadata i32 %9, metadata !18347, metadata !DIExpression()), !dbg !18363
  call void @llvm.dbg.value(metadata i32 undef, metadata !18341, metadata !DIExpression()), !dbg !18363
  %10 = icmp slt i64 %4, -1, !dbg !18381
  br i1 %10, label %11, label %17, !dbg !18382

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !18383
  %13 = add i64 %4, %12, !dbg !18384
  %14 = sub i64 -2, %13, !dbg !18384
  call void @llvm.dbg.value(metadata i64 %14, metadata !18351, metadata !DIExpression()), !dbg !18385
  %15 = icmp sgt i64 %14, 1, !dbg !18386
  %16 = select i1 %15, i64 %14, i64 1, !dbg !18386
  br label %22, !dbg !18387

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !18388
  %19 = tail call fastcc i32 @elapsed.273() #27, !dbg !18390
  %20 = sext i32 %19 to i64, !dbg !18390
  %21 = add nsw i64 %18, %20, !dbg !18391
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !18392
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18393
  store i64 %23, i64* %24, align 8, !dbg !18394
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !18395
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !18348, metadata !DIExpression()), !dbg !18397
  %26 = icmp eq %struct._timeout* %25, null, !dbg !18398
  br i1 %26, label %42, label %27, !dbg !18398

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !18399
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !18348, metadata !DIExpression()), !dbg !18397
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !18403
  %31 = load i64, i64* %30, align 8, !dbg !18403
  %32 = icmp slt i64 %28, %31, !dbg !18404
  br i1 %32, label %33, label %38, !dbg !18405

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !18403
  %35 = sub nsw i64 %31, %28, !dbg !18406
  store i64 %35, i64* %34, align 8, !dbg !18406
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !18408
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18409
  tail call fastcc void @sys_dlist_insert.274(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !18410
  br label %44, !dbg !18411

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !18412
  store i64 %39, i64* %24, align 8, !dbg !18412
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !18413
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !18348, metadata !DIExpression()), !dbg !18397
  %41 = icmp eq %struct._timeout* %40, null, !dbg !18398
  br i1 %41, label %42, label %27, !dbg !18398, !llvm.loop !18414

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18416
  tail call fastcc void @sys_dlist_append.275(%struct._dnode* noundef %43) #27, !dbg !18419
  br label %44, !dbg !18420

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !18421
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !18422
  br i1 %46, label %47, label %54, !dbg !18423

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !18424
  call void @llvm.dbg.value(metadata i32 %48, metadata !18354, metadata !DIExpression()), !dbg !18425
  %49 = icmp ne i32 %48, 0, !dbg !18426
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !18428
  br i1 %52, label %54, label %53, !dbg !18428

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #28, !dbg !18429
  br label %54, !dbg !18431

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !18432, metadata !DIExpression()) #26, !dbg !18438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18438
  call void @llvm.dbg.value(metadata i32 %9, metadata !18440, metadata !DIExpression()) #26, !dbg !18443
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !18445, !srcloc !18446
  call void @llvm.dbg.value(metadata i32 undef, metadata !18341, metadata !DIExpression()), !dbg !18363
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !18447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.273() unnamed_addr #1 !dbg !18448 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18451
  %2 = icmp eq i32 %1, 0, !dbg !18452
  br i1 %2, label %3, label %5, !dbg !18451

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #28, !dbg !18453
  br label %5, !dbg !18451

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18451
  ret i32 %6, !dbg !18454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #3 !dbg !18455 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.278() #27, !dbg !18461
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18459, metadata !DIExpression()), !dbg !18462
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18463
  ret %struct._timeout* %2, !dbg !18464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.274(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !18465 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18469, metadata !DIExpression()), !dbg !18473
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18470, metadata !DIExpression()), !dbg !18473
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18474
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18474
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18471, metadata !DIExpression()), !dbg !18473
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18475
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18476
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18477
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18478
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18479
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18480
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18481
  ret void, !dbg !18482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #3 !dbg !18483 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18487, metadata !DIExpression()), !dbg !18489
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18490
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.276(%struct._dnode* noundef %2) #27, !dbg !18491
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18488, metadata !DIExpression()), !dbg !18489
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18492
  ret %struct._timeout* %4, !dbg !18493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.275(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !18494 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18499, metadata !DIExpression()), !dbg !18502
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18500, metadata !DIExpression()), !dbg !18502
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18503
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18501, metadata !DIExpression()), !dbg !18502
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18504
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18505
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18506
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18507
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18508
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18509
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18510
  ret void, !dbg !18511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18512 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !18517
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18514, metadata !DIExpression()), !dbg !18518
  %2 = tail call fastcc i32 @elapsed.273() #27, !dbg !18519
  call void @llvm.dbg.value(metadata i32 %2, metadata !18515, metadata !DIExpression()), !dbg !18518
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18520
  br i1 %3, label %14, label %4, !dbg !18522

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18523
  %6 = load i64, i64* %5, align 8, !dbg !18523
  %7 = sext i32 %2 to i64, !dbg !18524
  %8 = sub nsw i64 %6, %7, !dbg !18525
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18526
  br i1 %9, label %14, label %10, !dbg !18527

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18528
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18528
  %13 = trunc i64 %12 to i32, !dbg !18528
  call void @llvm.dbg.value(metadata i32 %13, metadata !18516, metadata !DIExpression()), !dbg !18518
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18530
  call void @llvm.dbg.value(metadata i32 %15, metadata !18516, metadata !DIExpression()), !dbg !18518
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18531
  %17 = icmp ne i32 %16, 0, !dbg !18533
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18534
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18534
  call void @llvm.dbg.value(metadata i32 %20, metadata !18516, metadata !DIExpression()), !dbg !18518
  ret i32 %20, !dbg !18535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.276(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !18536 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18540, metadata !DIExpression()), !dbg !18542
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18541, metadata !DIExpression()), !dbg !18542
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18543
  br i1 %2, label %5, label %3, !dbg !18544

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.277(%struct._dnode* noundef nonnull %0) #27, !dbg !18545
  br label %5, !dbg !18544

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18544
  ret %struct._dnode* %6, !dbg !18546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.277(%struct._dnode* noundef readonly %0) unnamed_addr #3 !dbg !18547 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18549, metadata !DIExpression()), !dbg !18551
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18550, metadata !DIExpression()), !dbg !18551
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18552
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18553
  br i1 %3, label %7, label %4, !dbg !18554

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18555
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18555
  br label %7, !dbg !18554

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18554
  ret %struct._dnode* %8, !dbg !18556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.278() unnamed_addr #3 !dbg !18557 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18561, metadata !DIExpression()), !dbg !18562
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.279() #27, !dbg !18563
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18563
  ret %struct._dnode* %3, !dbg !18564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.279() unnamed_addr #3 !dbg !18565 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18569, metadata !DIExpression()), !dbg !18570
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18571
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18572
  ret i1 %2, !dbg !18573
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18574 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18578, metadata !DIExpression()), !dbg !18583
  call void @llvm.dbg.value(metadata i32 -22, metadata !18579, metadata !DIExpression()), !dbg !18583
  call void @llvm.dbg.value(metadata i32 0, metadata !18580, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18585
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18587, !srcloc !18379
  call void @llvm.dbg.value(metadata i32 undef, metadata !18376, metadata !DIExpression()) #26, !dbg !18589
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18589
  call void @llvm.dbg.value(metadata i32 undef, metadata !18370, metadata !DIExpression()) #26, !dbg !18585
  call void @llvm.dbg.value(metadata i32 undef, metadata !18582, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 -22, metadata !18579, metadata !DIExpression()), !dbg !18583
  call void @llvm.dbg.value(metadata i32 undef, metadata !18580, metadata !DIExpression()), !dbg !18584
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18579, metadata !DIExpression()), !dbg !18583
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.282(%struct._dnode* noundef %3) #27, !dbg !18590
  br i1 %4, label %5, label %6, !dbg !18594

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !18595
  call void @llvm.dbg.value(metadata i32 0, metadata !18579, metadata !DIExpression()), !dbg !18583
  br label %6, !dbg !18597

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !18583
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !18587
  call void @llvm.dbg.value(metadata i32 %8, metadata !18376, metadata !DIExpression()) #26, !dbg !18589
  call void @llvm.dbg.value(metadata i32 %8, metadata !18370, metadata !DIExpression()) #26, !dbg !18585
  call void @llvm.dbg.value(metadata i32 %8, metadata !18582, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.value(metadata i32 %7, metadata !18579, metadata !DIExpression()), !dbg !18583
  call void @llvm.dbg.value(metadata i32 undef, metadata !18432, metadata !DIExpression()) #26, !dbg !18598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18598
  call void @llvm.dbg.value(metadata i32 undef, metadata !18440, metadata !DIExpression()) #26, !dbg !18600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !18602, !srcloc !18446
  call void @llvm.dbg.value(metadata i32 undef, metadata !18580, metadata !DIExpression()), !dbg !18584
  ret i32 %7, !dbg !18603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.282(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #3 !dbg !18604 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18610, metadata !DIExpression()), !dbg !18611
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18612
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18612
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18613
  ret i1 %4, !dbg !18614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !18615 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18617, metadata !DIExpression()), !dbg !18618
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !18619
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18621
  br i1 %3, label %10, label %4, !dbg !18622

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18623
  %6 = load i64, i64* %5, align 8, !dbg !18623
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18625
  %8 = load i64, i64* %7, align 8, !dbg !18626
  %9 = add nsw i64 %8, %6, !dbg !18626
  store i64 %9, i64* %7, align 8, !dbg !18626
  br label %10, !dbg !18627

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18628
  tail call fastcc void @sys_dlist_remove.283(%struct._dnode* noundef %11) #27, !dbg !18629
  ret void, !dbg !18630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.283(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !18631 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18635, metadata !DIExpression()), !dbg !18638
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18639
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18639
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18636, metadata !DIExpression()), !dbg !18638
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18640
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18640
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18637, metadata !DIExpression()), !dbg !18638
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18641
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18642
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18643
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18644
  tail call fastcc void @sys_dnode_init.284(%struct._dnode* noundef %0) #27, !dbg !18645
  ret void, !dbg !18646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.284(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18647 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18649, metadata !DIExpression()), !dbg !18650
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18651
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18652
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18653
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18654
  ret void, !dbg !18655
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18656 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18662, metadata !DIExpression()), !dbg !18667
  call void @llvm.dbg.value(metadata i64 0, metadata !18663, metadata !DIExpression()), !dbg !18667
  call void @llvm.dbg.value(metadata i32 0, metadata !18664, metadata !DIExpression()), !dbg !18668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18669
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18671, !srcloc !18379
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18671
  call void @llvm.dbg.value(metadata i32 %3, metadata !18376, metadata !DIExpression()) #26, !dbg !18673
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18673
  call void @llvm.dbg.value(metadata i32 %3, metadata !18370, metadata !DIExpression()) #26, !dbg !18669
  call void @llvm.dbg.value(metadata i32 %3, metadata !18666, metadata !DIExpression()), !dbg !18668
  call void @llvm.dbg.value(metadata i64 0, metadata !18663, metadata !DIExpression()), !dbg !18667
  call void @llvm.dbg.value(metadata i32 undef, metadata !18664, metadata !DIExpression()), !dbg !18668
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !18674
  call void @llvm.dbg.value(metadata i64 %4, metadata !18663, metadata !DIExpression()), !dbg !18667
  call void @llvm.dbg.value(metadata i32 %3, metadata !18432, metadata !DIExpression()) #26, !dbg !18677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18677
  call void @llvm.dbg.value(metadata i32 %3, metadata !18440, metadata !DIExpression()) #26, !dbg !18679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18681, !srcloc !18446
  call void @llvm.dbg.value(metadata i32 undef, metadata !18664, metadata !DIExpression()), !dbg !18668
  ret i64 %4, !dbg !18682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18683 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18685, metadata !DIExpression()), !dbg !18689
  call void @llvm.dbg.value(metadata i64 0, metadata !18686, metadata !DIExpression()), !dbg !18689
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.285(%struct._timeout* noundef %0) #27, !dbg !18690
  br i1 %2, label %21, label %3, !dbg !18692

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !18693
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18687, metadata !DIExpression()), !dbg !18694
  call void @llvm.dbg.value(metadata i64 0, metadata !18686, metadata !DIExpression()), !dbg !18689
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18695
  br i1 %5, label %16, label %6, !dbg !18697

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18687, metadata !DIExpression()), !dbg !18694
  call void @llvm.dbg.value(metadata i64 %8, metadata !18686, metadata !DIExpression()), !dbg !18689
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18698
  %10 = load i64, i64* %9, align 8, !dbg !18698
  %11 = add nsw i64 %10, %8, !dbg !18700
  call void @llvm.dbg.value(metadata i64 %11, metadata !18686, metadata !DIExpression()), !dbg !18689
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18701
  br i1 %12, label %16, label %13, !dbg !18703

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !18704
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18687, metadata !DIExpression()), !dbg !18694
  call void @llvm.dbg.value(metadata i64 %11, metadata !18686, metadata !DIExpression()), !dbg !18689
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18695
  br i1 %15, label %16, label %6, !dbg !18697, !llvm.loop !18705

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18689
  call void @llvm.dbg.value(metadata i64 %17, metadata !18686, metadata !DIExpression()), !dbg !18689
  %18 = tail call fastcc i32 @elapsed.273() #27, !dbg !18707
  %19 = sext i32 %18 to i64, !dbg !18707
  %20 = sub nsw i64 %17, %19, !dbg !18708
  br label %21, !dbg !18709

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18689
  ret i64 %22, !dbg !18710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.285(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #3 !dbg !18711 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18715, metadata !DIExpression()), !dbg !18716
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18717
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.282(%struct._dnode* noundef %2) #27, !dbg !18718
  %4 = xor i1 %3, true, !dbg !18719
  ret i1 %4, !dbg !18720
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18721 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18723, metadata !DIExpression()), !dbg !18728
  call void @llvm.dbg.value(metadata i64 0, metadata !18724, metadata !DIExpression()), !dbg !18728
  call void @llvm.dbg.value(metadata i32 0, metadata !18725, metadata !DIExpression()), !dbg !18729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18730
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18732, !srcloc !18379
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18732
  call void @llvm.dbg.value(metadata i32 %3, metadata !18376, metadata !DIExpression()) #26, !dbg !18734
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18734
  call void @llvm.dbg.value(metadata i32 %3, metadata !18370, metadata !DIExpression()) #26, !dbg !18730
  call void @llvm.dbg.value(metadata i32 %3, metadata !18727, metadata !DIExpression()), !dbg !18729
  call void @llvm.dbg.value(metadata i64 0, metadata !18724, metadata !DIExpression()), !dbg !18728
  call void @llvm.dbg.value(metadata i32 undef, metadata !18725, metadata !DIExpression()), !dbg !18729
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18735
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !18738
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18724, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18728
  call void @llvm.dbg.value(metadata i32 %3, metadata !18432, metadata !DIExpression()) #26, !dbg !18739
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18739
  call void @llvm.dbg.value(metadata i32 %3, metadata !18440, metadata !DIExpression()) #26, !dbg !18741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !18743, !srcloc !18446
  call void @llvm.dbg.value(metadata i32 undef, metadata !18725, metadata !DIExpression()), !dbg !18729
  %6 = add i64 %5, %4, !dbg !18744
  ret i64 %6, !dbg !18745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18746 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18748, metadata !DIExpression()), !dbg !18752
  call void @llvm.dbg.value(metadata i32 0, metadata !18749, metadata !DIExpression()), !dbg !18753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18754
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18756, !srcloc !18379
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18756
  call void @llvm.dbg.value(metadata i32 %2, metadata !18376, metadata !DIExpression()) #26, !dbg !18758
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18758
  call void @llvm.dbg.value(metadata i32 %2, metadata !18370, metadata !DIExpression()) #26, !dbg !18754
  call void @llvm.dbg.value(metadata i32 %2, metadata !18751, metadata !DIExpression()), !dbg !18753
  call void @llvm.dbg.value(metadata i32 -1, metadata !18748, metadata !DIExpression()), !dbg !18752
  call void @llvm.dbg.value(metadata i32 undef, metadata !18749, metadata !DIExpression()), !dbg !18753
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !18759
  call void @llvm.dbg.value(metadata i32 %3, metadata !18748, metadata !DIExpression()), !dbg !18752
  call void @llvm.dbg.value(metadata i32 %2, metadata !18432, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18762
  call void @llvm.dbg.value(metadata i32 %2, metadata !18440, metadata !DIExpression()) #26, !dbg !18764
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !18766, !srcloc !18446
  call void @llvm.dbg.value(metadata i32 undef, metadata !18749, metadata !DIExpression()), !dbg !18753
  ret i32 %3, !dbg !18767
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18770, metadata !DIExpression()), !dbg !18780
  call void @llvm.dbg.value(metadata i1 %1, metadata !18771, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18780
  call void @llvm.dbg.value(metadata i32 0, metadata !18772, metadata !DIExpression()), !dbg !18781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18782
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18784, !srcloc !18379
  call void @llvm.dbg.value(metadata i32 undef, metadata !18376, metadata !DIExpression()) #26, !dbg !18786
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18786
  call void @llvm.dbg.value(metadata i32 undef, metadata !18370, metadata !DIExpression()) #26, !dbg !18782
  call void @llvm.dbg.value(metadata i32 undef, metadata !18774, metadata !DIExpression()), !dbg !18781
  call void @llvm.dbg.value(metadata i32 undef, metadata !18772, metadata !DIExpression()), !dbg !18781
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !18787
  call void @llvm.dbg.value(metadata i32 %4, metadata !18775, metadata !DIExpression()), !dbg !18788
  call void @llvm.dbg.value(metadata i1 undef, metadata !18778, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18788
  %5 = icmp slt i32 %4, 2, !dbg !18789
  call void @llvm.dbg.value(metadata i1 %5, metadata !18779, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18788
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18790
  call void @llvm.dbg.value(metadata i1 %6, metadata !18778, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18788
  br i1 %7, label %11, label %8, !dbg !18790

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18792
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18792
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #28, !dbg !18794
  br label %11, !dbg !18795

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18784
  call void @llvm.dbg.value(metadata i32 %12, metadata !18376, metadata !DIExpression()) #26, !dbg !18786
  call void @llvm.dbg.value(metadata i32 %12, metadata !18370, metadata !DIExpression()) #26, !dbg !18782
  call void @llvm.dbg.value(metadata i32 %12, metadata !18774, metadata !DIExpression()), !dbg !18781
  call void @llvm.dbg.value(metadata i32 undef, metadata !18432, metadata !DIExpression()) #26, !dbg !18796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18796
  call void @llvm.dbg.value(metadata i32 undef, metadata !18440, metadata !DIExpression()) #26, !dbg !18798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18800, !srcloc !18446
  call void @llvm.dbg.value(metadata i32 1, metadata !18772, metadata !DIExpression()), !dbg !18781
  call void @llvm.dbg.value(metadata i32 undef, metadata !18772, metadata !DIExpression()), !dbg !18781
  ret void, !dbg !18801
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18806, metadata !DIExpression()), !dbg !18811
  tail call void @z_time_slice(i32 noundef %0) #28, !dbg !18812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18813
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18815, !srcloc !18379
  call void @llvm.dbg.value(metadata i32 undef, metadata !18376, metadata !DIExpression()) #26, !dbg !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18817
  call void @llvm.dbg.value(metadata i32 undef, metadata !18370, metadata !DIExpression()) #26, !dbg !18813
  call void @llvm.dbg.value(metadata i32 undef, metadata !18807, metadata !DIExpression()), !dbg !18811
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18811
  call void @llvm.dbg.value(metadata i32 undef, metadata !18807, metadata !DIExpression()), !dbg !18811
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !18818
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18819
  br i1 %4, label %28, label %5, !dbg !18820

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18821
  %10 = load i64, i64* %9, align 8, !dbg !18821
  %11 = sext i32 %8 to i64, !dbg !18822
  %12 = icmp sgt i64 %10, %11, !dbg !18823
  br i1 %12, label %26, label %13, !dbg !18824

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18811
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18808, metadata !DIExpression()), !dbg !18825
  %15 = trunc i64 %10 to i32, !dbg !18826
  call void @llvm.dbg.value(metadata i32 %15, metadata !18810, metadata !DIExpression()), !dbg !18825
  %16 = sext i32 %15 to i64, !dbg !18827
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18828
  %18 = add i64 %17, %16, !dbg !18828
  store i64 %18, i64* @curr_tick, align 8, !dbg !18828
  store i64 0, i64* %9, align 8, !dbg !18829
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !18830
  call void @llvm.dbg.value(metadata i32 %14, metadata !18432, metadata !DIExpression()) #26, !dbg !18831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18831
  call void @llvm.dbg.value(metadata i32 %14, metadata !18440, metadata !DIExpression()) #26, !dbg !18833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18835, !srcloc !18446
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18836
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18836
  tail call void %20(%struct._timeout* noundef nonnull %6) #28, !dbg !18837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18838
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18840, !srcloc !18379
  call void @llvm.dbg.value(metadata i32 undef, metadata !18376, metadata !DIExpression()) #26, !dbg !18842
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18842
  call void @llvm.dbg.value(metadata i32 undef, metadata !18370, metadata !DIExpression()) #26, !dbg !18838
  call void @llvm.dbg.value(metadata i32 undef, metadata !18807, metadata !DIExpression()), !dbg !18811
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18843
  %23 = sub nsw i32 %22, %15, !dbg !18843
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18811
  call void @llvm.dbg.value(metadata i32 undef, metadata !18807, metadata !DIExpression()), !dbg !18811
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !18818
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18819
  br i1 %25, label %28, label %5, !dbg !18820, !llvm.loop !18844

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18846
  store i64 %27, i64* %9, align 8, !dbg !18846
  br label %32, !dbg !18849

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18811
  %31 = sext i32 %30 to i64, !dbg !18850
  br label %32, !dbg !18850

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18850
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18811
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18851
  %37 = add i64 %36, %33, !dbg !18851
  store i64 %37, i64* @curr_tick, align 8, !dbg !18851
  store i32 0, i32* @announce_remaining, align 4, !dbg !18852
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !18853
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #28, !dbg !18854
  call void @llvm.dbg.value(metadata i32 %35, metadata !18432, metadata !DIExpression()) #26, !dbg !18855
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18855
  call void @llvm.dbg.value(metadata i32 %35, metadata !18440, metadata !DIExpression()) #26, !dbg !18857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #26, !dbg !18859, !srcloc !18446
  ret void, !dbg !18860
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18861 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18865, metadata !DIExpression()), !dbg !18869
  call void @llvm.dbg.value(metadata i32 0, metadata !18866, metadata !DIExpression()), !dbg !18870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18364, metadata !DIExpression()) #26, !dbg !18871
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18873, !srcloc !18379
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18873
  call void @llvm.dbg.value(metadata i32 %2, metadata !18376, metadata !DIExpression()) #26, !dbg !18875
  call void @llvm.dbg.value(metadata i32 undef, metadata !18377, metadata !DIExpression()) #26, !dbg !18875
  call void @llvm.dbg.value(metadata i32 %2, metadata !18370, metadata !DIExpression()) #26, !dbg !18871
  call void @llvm.dbg.value(metadata i32 %2, metadata !18868, metadata !DIExpression()), !dbg !18870
  call void @llvm.dbg.value(metadata i64 0, metadata !18865, metadata !DIExpression()), !dbg !18869
  call void @llvm.dbg.value(metadata i32 undef, metadata !18866, metadata !DIExpression()), !dbg !18870
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18876
  %4 = tail call fastcc i32 @elapsed.273() #27, !dbg !18879
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18865, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18869
  call void @llvm.dbg.value(metadata i32 %2, metadata !18432, metadata !DIExpression()) #26, !dbg !18880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18437, metadata !DIExpression()) #26, !dbg !18880
  call void @llvm.dbg.value(metadata i32 %2, metadata !18440, metadata !DIExpression()) #26, !dbg !18882
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #26, !dbg !18884, !srcloc !18446
  call void @llvm.dbg.value(metadata i32 undef, metadata !18866, metadata !DIExpression()), !dbg !18870
  %5 = sext i32 %4 to i64, !dbg !18879
  %6 = add i64 %3, %5, !dbg !18885
  ret i64 %6, !dbg !18886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18887 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !18888
  %2 = trunc i64 %1 to i32, !dbg !18889
  ret i32 %2, !dbg !18890
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18891 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !18892
  ret i64 %1, !dbg !18893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18896, metadata !DIExpression()), !dbg !18903
  %2 = icmp eq i32 %0, 0, !dbg !18904
  br i1 %2, label %10, label %3, !dbg !18906

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !18907
  call void @llvm.dbg.value(metadata i32 %4, metadata !18897, metadata !DIExpression()), !dbg !18903
  %5 = mul i32 %0, 84, !dbg !18908
  call void @llvm.dbg.value(metadata i32 %5, metadata !18898, metadata !DIExpression()), !dbg !18903
  br label %6, !dbg !18909

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !18910
  call void @llvm.dbg.value(metadata i32 %7, metadata !18899, metadata !DIExpression()), !dbg !18911
  %8 = sub i32 %7, %4, !dbg !18912
  %9 = icmp ult i32 %8, %5, !dbg !18914
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18916 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !18917
  ret i32 %1, !dbg !18918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18919 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #28, !dbg !18921
  ret i32 %1, !dbg !18922
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18923 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18927, metadata !DIExpression()), !dbg !18929
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18930

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !18931
  br label %14, !dbg !18935

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18928, metadata !DIExpression()), !dbg !18929
  %6 = icmp slt i64 %2, -1, !dbg !18936
  br i1 %6, label %7, label %9, !dbg !18939

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18940
  br label %14, !dbg !18941

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !18943
  %11 = icmp ugt i64 %2, 1, !dbg !18944
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18944
  %13 = add nsw i64 %10, %12, !dbg !18945
  br label %14, !dbg !18946

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18947
  ret i64 %15, !dbg !18948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #5 !dbg !18949 {
  ret void, !dbg !18951
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18952 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18954, metadata !DIExpression()), !dbg !18974
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18955, metadata !DIExpression()), !dbg !18975
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18976

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18977

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18955, metadata !DIExpression()), !dbg !18975
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18978
  %6 = load i8*, i8** %5, align 4, !dbg !18978
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18982
  %8 = load i32, i32* %7, align 4, !dbg !18982
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !18983
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18984
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18955, metadata !DIExpression()), !dbg !18975
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18985
  br i1 %10, label %3, label %2, !dbg !18976, !llvm.loop !18987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18989 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18993, metadata !DIExpression()), !dbg !18996
  call void @llvm.dbg.value(metadata i8* %1, metadata !18994, metadata !DIExpression()), !dbg !18996
  call void @llvm.dbg.value(metadata i32 %2, metadata !18995, metadata !DIExpression()), !dbg !18996
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18997
  tail call fastcc void @z_waitq_init.299(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !18998
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18999
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #28, !dbg !19000
  ret void, !dbg !19001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.299(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !19002 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19007, metadata !DIExpression()), !dbg !19008
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !19009
  tail call fastcc void @sys_dlist_init.300(%struct._dnode* noundef %2) #27, !dbg !19010
  ret void, !dbg !19011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.300(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !19012 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19017, metadata !DIExpression()), !dbg !19018
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19019
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19020
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19021
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19022
  ret void, !dbg !19023
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !19024 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19035, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19032, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i32 %1, metadata !19033, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i32 %2, metadata !19034, metadata !DIExpression()), !dbg !19045
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #28, !dbg !19046
  call void @llvm.dbg.value(metadata i64 %6, metadata !19037, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i8* null, metadata !19038, metadata !DIExpression()), !dbg !19045
  %7 = icmp eq i64 %5, -1, !dbg !19047
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19047
  call void @llvm.dbg.value(metadata i64 %8, metadata !19037, metadata !DIExpression()), !dbg !19045
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !19049, metadata !DIExpression()) #26, !dbg !19056
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19058, !srcloc !19064
  call void @llvm.dbg.value(metadata i32 undef, metadata !19061, metadata !DIExpression()) #26, !dbg !19065
  call void @llvm.dbg.value(metadata i32 undef, metadata !19062, metadata !DIExpression()) #26, !dbg !19065
  call void @llvm.dbg.value(metadata i32 undef, metadata !19055, metadata !DIExpression()) #26, !dbg !19056
  call void @llvm.dbg.value(metadata i32 undef, metadata !19039, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i8 0, metadata !19044, metadata !DIExpression()), !dbg !19045
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19038, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i8 0, metadata !19044, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i32 undef, metadata !19039, metadata !DIExpression()), !dbg !19045
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #28, !dbg !19066
  call void @llvm.dbg.value(metadata i8* %12, metadata !19038, metadata !DIExpression()), !dbg !19045
  %13 = tail call i64 @sys_clock_tick_get() #28, !dbg !19068
  call void @llvm.dbg.value(metadata i64 %13, metadata !19036, metadata !DIExpression()), !dbg !19045
  %14 = icmp eq i8* %12, null, !dbg !19069
  br i1 %14, label %15, label %31, !dbg !19071

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19039, metadata !DIExpression()), !dbg !19045
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !19071

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19044, metadata !DIExpression()), !dbg !19045
  %20 = sub nsw i64 %8, %18, !dbg !19072
  %21 = icmp slt i64 %20, 1, !dbg !19073
  br i1 %21, label %31, label %22, !dbg !19074

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !19045
  call void @llvm.dbg.value(metadata i8 undef, metadata !19044, metadata !DIExpression()), !dbg !19045
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !19075
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !19075
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #28, !dbg !19075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !19049, metadata !DIExpression()) #26, !dbg !19076
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19078, !srcloc !19064
  call void @llvm.dbg.value(metadata i32 undef, metadata !19061, metadata !DIExpression()) #26, !dbg !19080
  call void @llvm.dbg.value(metadata i32 undef, metadata !19062, metadata !DIExpression()) #26, !dbg !19080
  call void @llvm.dbg.value(metadata i32 undef, metadata !19055, metadata !DIExpression()) #26, !dbg !19076
  call void @llvm.dbg.value(metadata i32 undef, metadata !19039, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i8* null, metadata !19038, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i32 undef, metadata !19039, metadata !DIExpression()), !dbg !19045
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #28, !dbg !19066
  call void @llvm.dbg.value(metadata i8* %28, metadata !19038, metadata !DIExpression()), !dbg !19045
  %29 = tail call i64 @sys_clock_tick_get() #28, !dbg !19068
  call void @llvm.dbg.value(metadata i64 %29, metadata !19036, metadata !DIExpression()), !dbg !19045
  %30 = icmp eq i8* %28, null, !dbg !19069
  br i1 %30, label %17, label %31, !dbg !19071, !llvm.loop !19081

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !19066
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !19045
  call void @llvm.dbg.value(metadata i8* %33, metadata !19038, metadata !DIExpression()), !dbg !19045
  call void @llvm.dbg.value(metadata i32 %34, metadata !19084, metadata !DIExpression()) #26, !dbg !19090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !19089, metadata !DIExpression()) #26, !dbg !19090
  call void @llvm.dbg.value(metadata i32 %34, metadata !19092, metadata !DIExpression()) #26, !dbg !19095
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #26, !dbg !19097, !srcloc !19098
  ret i8* %33, !dbg !19099
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19100 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19106, metadata !DIExpression()), !dbg !19108
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19104, metadata !DIExpression()), !dbg !19108
  call void @llvm.dbg.value(metadata i32 %1, metadata !19105, metadata !DIExpression()), !dbg !19108
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !19109
  call void @llvm.dbg.value(metadata i8* %4, metadata !19107, metadata !DIExpression()), !dbg !19108
  ret i8* %4, !dbg !19110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19111 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19115, metadata !DIExpression()), !dbg !19118
  call void @llvm.dbg.value(metadata i8* %1, metadata !19116, metadata !DIExpression()), !dbg !19118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !19049, metadata !DIExpression()) #26, !dbg !19119
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19121, !srcloc !19064
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !19121
  call void @llvm.dbg.value(metadata i32 %4, metadata !19061, metadata !DIExpression()) #26, !dbg !19123
  call void @llvm.dbg.value(metadata i32 undef, metadata !19062, metadata !DIExpression()) #26, !dbg !19123
  call void @llvm.dbg.value(metadata i32 %4, metadata !19055, metadata !DIExpression()) #26, !dbg !19119
  call void @llvm.dbg.value(metadata i32 %4, metadata !19117, metadata !DIExpression()), !dbg !19118
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19124
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #28, !dbg !19125
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19126
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #28, !dbg !19128
  %8 = icmp eq i32 %7, 0, !dbg !19129
  br i1 %8, label %12, label %9, !dbg !19130

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19131
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !19132
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #28, !dbg !19132
  br label %13, !dbg !19134

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !19084, metadata !DIExpression()) #26, !dbg !19135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !19089, metadata !DIExpression()) #26, !dbg !19135
  call void @llvm.dbg.value(metadata i32 %4, metadata !19092, metadata !DIExpression()) #26, !dbg !19138
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #26, !dbg !19140, !srcloc !19098
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !19141
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!923, !2, !2697, !27, !388, !412, !2699, !2701, !2734, !2768, !422, !472, !2770, !2773, !2784, !2830, !2832, !2860, !2888, !2931, !3002, !3047, !501, !639, !3075, !675, !685, !710, !3080, !722, !959, !3082, !1098, !1164, !1469, !1753, !3123, !1866, !1956, !3125, !3188, !3255, !2008, !3258, !2015, !2384, !3276, !3278, !2404, !2512, !3382, !2627, !3385, !2666}
!llvm.ident = !{!3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387, !3387}
!llvm.module.flags = !{!3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !27, file: !114, line: 25, type: !141, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !107, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !103, line: 46, baseType: !104)
!103 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !105)
!105 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !295, !297, !299, !301, !303, !305, !307, !309, !340, !344, !349, !354, !356, !358, !365, !370, !377, !382, !384}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "version_chan", scope: !27, file: !114, line: 25, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !124, !128, !130, !131, !139, !264}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !116, file: !117, line: 32, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !127)
!127 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DISubroutineType(types: !135)
!135 = !{!136, !13, !137}
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !138, line: 214, baseType: !32)
!138 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!139 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !143)
!142 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !165, !262, !263}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !141, file: !142, line: 2722, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !148)
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !147, file: !146, line: 232, baseType: !150, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !152)
!151 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !153)
!153 = !{!154, !160}
!154 = !DIDerivedType(tag: DW_TAG_member, scope: !152, file: !151, line: 38, baseType: !155, size: 32)
!155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !152, file: !151, line: 38, size: 32, elements: !156)
!156 = !{!157, !159}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !155, file: !151, line: 39, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !155, file: !151, line: 40, baseType: !158, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, scope: !152, file: !151, line: 42, baseType: !161, size: 32, offset: 32)
!161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !152, file: !151, line: 42, size: 32, elements: !162)
!162 = !{!163, !164}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !161, file: !151, line: 43, baseType: !158, size: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !161, file: !151, line: 44, baseType: !158, size: 32)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !141, file: !142, line: 2724, baseType: !166, size: 32, offset: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170, !217, !230, !231, !232, !233, !239, !257}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !167, file: !168, line: 247, baseType: !171, size: 384)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !172)
!172 = !{!173, !187, !189, !192, !193, !204, !205, !206}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !168, line: 60, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !171, file: !168, line: 60, size: 64, elements: !175)
!175 = !{!176, !178}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !174, file: !168, line: 61, baseType: !177, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !152)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !174, file: !168, line: 62, baseType: !179, size: 64)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !181)
!180 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !179, file: !180, line: 50, baseType: !183, size: 64)
!183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 64, elements: !185)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!185 = !{!186}
!186 = !DISubrange(count: 2)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !171, file: !168, line: 68, baseType: !188, size: 32, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !171, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !191)
!191 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !171, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!193 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !168, line: 90, baseType: !194, size: 16, offset: 112)
!194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !171, file: !168, line: 90, size: 16, elements: !195)
!195 = !{!196, !203}
!196 = !DIDerivedType(tag: DW_TAG_member, scope: !194, file: !168, line: 91, baseType: !197, size: 16)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !194, file: !168, line: 91, size: 16, elements: !198)
!198 = !{!199, !202}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !197, file: !168, line: 96, baseType: !200, size: 8)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !201)
!201 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !197, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !194, file: !168, line: 100, baseType: !126, size: 16)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !171, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !171, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !171, file: !168, line: 131, baseType: !207, size: 192, offset: 192)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !208)
!208 = !{!209, !210, !216}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !207, file: !146, line: 245, baseType: !177, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !207, file: !146, line: 246, baseType: !211, size: 32, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{null, !215}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !207, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !167, file: !168, line: 250, baseType: !218, size: 288, offset: 384)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !220)
!219 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!220 = !{!221, !222, !223, !224, !225, !226, !227, !228, !229}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !218, file: !219, line: 26, baseType: !108, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !218, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !218, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !218, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !218, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !218, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !218, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !218, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !218, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !167, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !167, file: !168, line: 256, baseType: !145, size: 64, offset: 704)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !167, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !167, file: !168, line: 300, baseType: !234, size: 96, offset: 800)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !235)
!235 = !{!236, !237, !238}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !234, file: !168, line: 153, baseType: !22, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !234, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !234, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !167, file: !168, line: 325, baseType: !240, size: 32, offset: 896)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !242)
!242 = !{!243, !252, !253}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !241, file: !142, line: 5074, baseType: !244, size: 96)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 57, baseType: !248, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !245, line: 57, flags: DIFlagFwdDecl)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !244, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !244, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !241, file: !142, line: 5075, baseType: !145, size: 64, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !241, file: !142, line: 5076, baseType: !254, offset: 160)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!255 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!256 = !{}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !167, file: !168, line: 343, baseType: !258, size: 64, offset: 928)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !258, file: !219, line: 63, baseType: !108, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !258, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !141, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !141, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !265, size: 32, offset: 192)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !270)
!270 = !{!271, !272, !273, !289}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !117, line: 88, baseType: !120, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !269, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !269, file: !117, line: 93, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !277)
!277 = !{!278, !279, !280, !281, !282, !284, !285, !286, !287, !288}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !276, file: !142, line: 4206, baseType: !145, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !276, file: !142, line: 4208, baseType: !254, offset: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !276, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !276, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !276, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !276, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !276, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !276, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !276, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !276, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !269, file: !117, line: 96, baseType: !290, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !294}
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_zbus_mutex_acc_data_chan", scope: !27, file: !114, line: 35, type: !141, isLocal: true, isDefinition: true, align: 32)
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "acc_data_chan", scope: !27, file: !114, line: 35, type: !115, isLocal: false, isDefinition: true, align: 32)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "_zbus_mutex_simple_chan", scope: !27, file: !114, line: 57, type: !141, isLocal: true, isDefinition: true, align: 32)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "simple_chan", scope: !27, file: !114, line: 57, type: !115, isLocal: false, isDefinition: true, align: 32)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "foo_lis", scope: !27, file: !114, line: 73, type: !269, isLocal: false, isDefinition: true, align: 32)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_bar_sub", scope: !27, file: !114, line: 75, type: !276, isLocal: false, isDefinition: true, align: 32)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "bar_sub", scope: !27, file: !114, line: 75, type: !269, isLocal: false, isDefinition: true, align: 32)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "_k_thread_data_subscriber_task_id", scope: !27, file: !114, line: 92, type: !311, isLocal: false, isDefinition: true, align: 32)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !142, line: 620, size: 384, elements: !312)
!312 = !{!313, !314, !322, !323, !328, !329, !330, !331, !332, !333, !335, !339}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !311, file: !142, line: 621, baseType: !166, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !311, file: !142, line: 622, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !318)
!317 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = !{!321}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !318, file: !319, line: 48, baseType: !123, size: 8)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !311, file: !142, line: 623, baseType: !32, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !311, file: !142, line: 624, baseType: !324, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !317, line: 46, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !106, !106, !106}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !311, file: !142, line: 625, baseType: !106, size: 32, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !311, file: !142, line: 626, baseType: !106, size: 32, offset: 160)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !311, file: !142, line: 627, baseType: !106, size: 32, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !311, file: !142, line: 628, baseType: !107, size: 32, offset: 224)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !311, file: !142, line: 629, baseType: !108, size: 32, offset: 256)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !311, file: !142, line: 630, baseType: !334, size: 32, offset: 288)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !311, file: !142, line: 631, baseType: !336, size: 32, offset: 320)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DISubroutineType(types: !338)
!338 = !{null}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !311, file: !142, line: 632, baseType: !121, size: 32, offset: 352)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "subscriber_task_id", scope: !27, file: !114, line: 92, type: !342, isLocal: false, isDefinition: true)
!342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !166)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_bar_sub", scope: !27, file: !114, line: 75, type: !346, isLocal: true, isDefinition: true, align: 32)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 128, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 16)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "_k_thread_stack_subscriber_task_id", scope: !27, file: !114, line: 92, type: !351, isLocal: false, isDefinition: true, align: 512)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 4608, elements: !352)
!352 = !{!353}
!353 = !DISubrange(count: 576)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "_k_thread_obj_subscriber_task_id", scope: !27, file: !114, line: 92, type: !167, isLocal: false, isDefinition: true)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 95, type: !107, isLocal: true, isDefinition: true)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !27, file: !114, line: 25, type: !360, isLocal: true, isDefinition: true)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !114, line: 13, size: 32, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !360, file: !114, line: 14, baseType: !190, size: 8)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !360, file: !114, line: 15, baseType: !190, size: 8, offset: 8)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !360, file: !114, line: 16, baseType: !126, size: 16, offset: 16)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !27, file: !114, line: 25, type: !367, isLocal: true, isDefinition: true)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 32, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 1)
!370 = !DIGlobalVariableExpression(var: !371, expr: !DIExpression())
!371 = distinct !DIGlobalVariable(name: "_zbus_message_acc_data_chan", scope: !27, file: !114, line: 35, type: !372, isLocal: true, isDefinition: true)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acc_msg", file: !114, line: 19, size: 96, elements: !373)
!373 = !{!374, !375, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !372, file: !114, line: 20, baseType: !107, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !372, file: !114, line: 21, baseType: !107, size: 32, offset: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !372, file: !114, line: 22, baseType: !107, size: 32, offset: 64)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "_zbus_observers_acc_data_chan", scope: !27, file: !114, line: 35, type: !379, isLocal: true, isDefinition: true)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 96, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 3)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(name: "_zbus_message_simple_chan", scope: !27, file: !114, line: 57, type: !107, isLocal: true, isDefinition: true)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "_zbus_observers_simple_chan", scope: !27, file: !114, line: 57, type: !367, isLocal: true, isDefinition: true)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !388, file: !403, line: 18, type: !404, isLocal: false, isDefinition: true)
!388 = distinct !DICompileUnit(language: DW_LANG_C99, file: !389, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !390, globals: !402, splitDebugInlining: false, nameTableKind: None)
!389 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!390 = !{!22, !106, !24, !391, !393, !395, !137, !107, !396, !397, !399, !400, !283, !401, !126, !121}
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!392 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 32)
!394 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!402 = !{!386}
!403 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !405, file: !406, line: 17, baseType: !121, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !405, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "_char_out", scope: !412, file: !416, line: 54, type: !417, isLocal: false, isDefinition: true)
!412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, globals: !415, splitDebugInlining: false, nameTableKind: None)
!413 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!414 = !{!106, !107}
!415 = !{!410}
!416 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DISubroutineType(types: !419)
!419 = !{!107, !107}
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !422, file: !439, line: 56, type: !440, isLocal: true, isDefinition: true, align: 32)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !424, globals: !438, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 407, baseType: !428)
!427 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 398, size: 224, elements: !429)
!429 = !{!430, !432, !433, !434, !435, !436, !437}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !428, file: !427, line: 400, baseType: !431, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !428, file: !427, line: 401, baseType: !431, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !428, file: !427, line: 402, baseType: !431, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !428, file: !427, line: 403, baseType: !431, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !428, file: !427, line: 404, baseType: !431, size: 32, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !428, file: !427, line: 405, baseType: !431, size: 32, offset: 160)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !428, file: !427, line: 406, baseType: !431, size: 32, offset: 192)
!438 = !{!420}
!439 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !443)
!442 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!443 = !{!444, !469}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !441, file: !442, line: 60, baseType: !445, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!446 = !DISubroutineType(types: !447)
!447 = !{!107, !448}
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !452)
!451 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!452 = !{!453, !454, !455, !456, !462, !463}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !450, file: !451, line: 380, baseType: !121, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !450, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !450, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !450, file: !451, line: 386, baseType: !457, size: 32, offset: 96)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !459)
!459 = !{!460, !461}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !458, file: !451, line: 359, baseType: !190, size: 8)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !458, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !450, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !450, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !451, line: 43, baseType: !467)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !468)
!468 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !441, file: !442, line: 65, baseType: !448, size: 32, offset: 32)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !472, file: !475, line: 71, type: !476, isLocal: true, isDefinition: true, align: 32)
!472 = distinct !DICompileUnit(language: DW_LANG_C99, file: !473, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !474, splitDebugInlining: false, nameTableKind: None)
!473 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!474 = !{!470}
!475 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !478)
!478 = !{!479, !498}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !477, file: !442, line: 60, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 32)
!481 = !DISubroutineType(types: !482)
!482 = !{!107, !483}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !486)
!486 = !{!487, !488, !489, !490, !496, !497}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !485, file: !451, line: 380, baseType: !121, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !485, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !485, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !485, file: !451, line: 386, baseType: !491, size: 32, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !493)
!493 = !{!494, !495}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !492, file: !451, line: 359, baseType: !190, size: 8)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !492, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !485, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !485, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !477, file: !442, line: 65, baseType: !483, size: 32, offset: 32)
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !501, file: !508, line: 17, type: !632, isLocal: false, isDefinition: true)
!501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !503, globals: !504, splitDebugInlining: false, nameTableKind: None)
!502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!503 = !{!137, !107, !108, !106}
!504 = !{!499, !505, !628}
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !507, file: !508, line: 198, type: !616, isLocal: true, isDefinition: true)
!507 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !508, file: !508, line: 175, type: !509, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !501, retainedNodes: !611)
!508 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!509 = !DISubroutineType(types: !510)
!510 = !{null, !511}
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !513)
!513 = !{!514, !572, !584, !585, !586, !587, !593, !606}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !512, file: !168, line: 247, baseType: !515, size: 384)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !516)
!516 = !{!517, !541, !548, !549, !550, !559, !560, !561}
!517 = !DIDerivedType(tag: DW_TAG_member, scope: !515, file: !168, line: 60, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !515, file: !168, line: 60, size: 64, elements: !519)
!519 = !{!520, !535}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !518, file: !168, line: 61, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !523)
!523 = !{!524, !530}
!524 = !DIDerivedType(tag: DW_TAG_member, scope: !522, file: !151, line: 38, baseType: !525, size: 32)
!525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !522, file: !151, line: 38, size: 32, elements: !526)
!526 = !{!527, !529}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !525, file: !151, line: 39, baseType: !528, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !525, file: !151, line: 40, baseType: !528, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, scope: !522, file: !151, line: 42, baseType: !531, size: 32, offset: 32)
!531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !522, file: !151, line: 42, size: 32, elements: !532)
!532 = !{!533, !534}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !531, file: !151, line: 43, baseType: !528, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !531, file: !151, line: 44, baseType: !528, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !518, file: !168, line: 62, baseType: !536, size: 64)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !536, file: !180, line: 50, baseType: !539, size: 64)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 64, elements: !185)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !515, file: !168, line: 68, baseType: !542, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !545)
!545 = !{!546}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !544, file: !146, line: 232, baseType: !547, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !522)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !515, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !515, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !515, file: !168, line: 90, baseType: !551, size: 16, offset: 112)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !515, file: !168, line: 90, size: 16, elements: !552)
!552 = !{!553, !558}
!553 = !DIDerivedType(tag: DW_TAG_member, scope: !551, file: !168, line: 91, baseType: !554, size: 16)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !551, file: !168, line: 91, size: 16, elements: !555)
!555 = !{!556, !557}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !554, file: !168, line: 96, baseType: !200, size: 8)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !554, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !551, file: !168, line: 100, baseType: !126, size: 16)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !515, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !515, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !515, file: !168, line: 131, baseType: !562, size: 192, offset: 192)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !563)
!563 = !{!564, !565, !571}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !562, file: !146, line: 245, baseType: !521, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !562, file: !146, line: 246, baseType: !566, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !567)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DISubroutineType(types: !569)
!569 = !{null, !570}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !562, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !512, file: !168, line: 250, baseType: !573, size: 288, offset: 384)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !574)
!574 = !{!575, !576, !577, !578, !579, !580, !581, !582, !583}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !573, file: !219, line: 26, baseType: !108, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !573, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !573, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !573, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !573, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !573, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !573, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !573, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !573, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !512, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !512, file: !168, line: 256, baseType: !543, size: 64, offset: 704)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !512, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !512, file: !168, line: 300, baseType: !588, size: 96, offset: 800)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !589)
!589 = !{!590, !591, !592}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !588, file: !168, line: 153, baseType: !22, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !588, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !588, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !512, file: !168, line: 325, baseType: !594, size: 32, offset: 896)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !596)
!596 = !{!597, !603, !604}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !595, file: !142, line: 5074, baseType: !598, size: 96)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !599)
!599 = !{!600, !601, !602}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !598, file: !245, line: 57, baseType: !248, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !598, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !598, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !595, file: !142, line: 5075, baseType: !543, size: 64, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !595, file: !142, line: 5076, baseType: !605, offset: 160)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !512, file: !168, line: 343, baseType: !607, size: 64, offset: 928)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !608)
!608 = !{!609, !610}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !607, file: !219, line: 63, baseType: !108, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !607, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!611 = !{!612, !613, !614, !615}
!612 = !DILocalVariable(name: "thread", arg: 1, scope: !507, file: !508, line: 175, type: !511)
!613 = !DILocalVariable(name: "region_num", scope: !507, file: !508, line: 200, type: !190)
!614 = !DILocalVariable(name: "guard_start", scope: !507, file: !508, line: 265, type: !22)
!615 = !DILocalVariable(name: "guard_size", scope: !507, file: !508, line: 266, type: !137)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !617, size: 96, elements: !368)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !618, line: 52, size: 96, elements: !619)
!618 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!619 = !{!620, !621, !622}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !617, file: !618, line: 53, baseType: !22, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !617, file: !618, line: 54, baseType: !137, size: 32, offset: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !617, file: !618, line: 55, baseType: !623, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !624, line: 151, baseType: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 149, size: 32, elements: !626)
!626 = !{!627}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !625, file: !624, line: 150, baseType: !108, size: 32)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "static_regions", scope: !501, file: !508, line: 62, type: !630, isLocal: true, isDefinition: true)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 96, elements: !368)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !634)
!634 = !{!635, !636}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !633, file: !406, line: 17, baseType: !121, size: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !633, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !639, file: !672, line: 39, type: !190, isLocal: true, isDefinition: true)
!639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !641, globals: !671, splitDebugInlining: false, nameTableKind: None)
!640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!641 = !{!642, !106, !107, !659, !190}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !644, line: 1226, baseType: !645)
!644 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 1213, size: 352, elements: !646)
!646 = !{!647, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !645, file: !644, line: 1215, baseType: !648, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !645, file: !644, line: 1216, baseType: !431, size: 32, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !645, file: !644, line: 1217, baseType: !431, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !645, file: !644, line: 1218, baseType: !431, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !645, file: !644, line: 1219, baseType: !431, size: 32, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !645, file: !644, line: 1220, baseType: !431, size: 32, offset: 160)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !645, file: !644, line: 1221, baseType: !431, size: 32, offset: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !645, file: !644, line: 1222, baseType: !431, size: 32, offset: 224)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !645, file: !644, line: 1223, baseType: !431, size: 32, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !645, file: !644, line: 1224, baseType: !431, size: 32, offset: 288)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !645, file: !644, line: 1225, baseType: !431, size: 32, offset: 320)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !662, line: 27, size: 96, elements: !663)
!662 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !{!664, !665, !666}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !661, file: !662, line: 29, baseType: !108, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !661, file: !662, line: 31, baseType: !121, size: 32, offset: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !661, file: !662, line: 37, baseType: !667, size: 32, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !624, line: 146, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !624, line: 141, size: 32, elements: !669)
!669 = !{!670}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !668, file: !624, line: 143, baseType: !108, size: 32)
!671 = !{!637}
!672 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !675, file: !682, line: 21, type: !417, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !677, globals: !681, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!677 = !{!678, !107, !106}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !680, line: 22, baseType: !107)
!680 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = !{!673}
!682 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !685, file: !690, line: 13, type: !707, isLocal: true, isDefinition: true)
!685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !686, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !687, splitDebugInlining: false, nameTableKind: None)
!686 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!687 = !{!688, !683}
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "mpu_config", scope: !685, file: !690, line: 37, type: !691, isLocal: false, isDefinition: true)
!690 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !662, line: 41, size: 64, elements: !693)
!693 = !{!694, !695}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !692, file: !662, line: 43, baseType: !108, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !692, file: !662, line: 45, baseType: !696, size: 32, offset: 32)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !662, line: 27, size: 96, elements: !699)
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !698, file: !662, line: 29, baseType: !108, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !662, line: 31, baseType: !121, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !698, file: !662, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !624, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !624, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !624, line: 143, baseType: !108, size: 32)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 192, elements: !185)
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !710, file: !714, line: 10, type: !715, isLocal: false, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !713, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!712 = !{!102, !106, !107}
!713 = !{!708}
!714 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !717)
!717 = !{!718, !719}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !716, file: !406, line: 17, baseType: !121, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !716, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !835, line: 72, type: !918, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !821, globals: !832, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !427, line: 65, baseType: !107, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!729 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!730 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!731 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!732 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!733 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!734 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!735 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!736 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!737 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!738 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!739 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!740 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!741 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!742 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!743 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!744 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!745 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!746 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!747 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!748 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!749 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!750 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!751 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!752 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!753 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!754 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!755 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!756 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!757 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!758 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!759 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!760 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!761 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!762 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!763 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!764 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!765 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!766 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!767 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!768 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!769 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!770 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!771 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!772 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!773 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!774 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!775 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!776 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!777 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!778 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!779 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!780 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!781 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!782 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!783 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!784 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!785 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!786 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!787 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!788 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!789 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!790 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!791 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!792 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!793 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!794 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!795 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!796 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!797 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!798 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!799 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!800 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!801 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!802 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!803 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!804 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!805 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!806 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!807 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!808 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!809 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!810 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!811 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!812 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!813 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!814 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!815 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!816 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!817 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!818 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!819 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!820 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!821 = !{!137, !107, !106, !822}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !427, line: 392, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 384, size: 192, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !824, file: !427, line: 386, baseType: !431, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !824, file: !427, line: 387, baseType: !431, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !824, file: !427, line: 388, baseType: !431, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !824, file: !427, line: 389, baseType: !431, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !824, file: !427, line: 390, baseType: !431, size: 32, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !824, file: !427, line: 391, baseType: !431, size: 32, offset: 160)
!832 = !{!833, !839, !855, !866, !883, !720, !885, !898, !900, !902, !904, !906, !908, !910, !912, !914, !916}
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !722, file: !835, line: 424, type: !836, isLocal: false, isDefinition: true, align: 16)
!835 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 64, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 4)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !722, file: !835, line: 424, type: !841, isLocal: false, isDefinition: true, align: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !843)
!843 = !{!844, !845, !846, !847, !853, !854}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !451, line: 380, baseType: !121, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !842, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !842, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !842, file: !451, line: 386, baseType: !848, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !849, file: !451, line: 359, baseType: !190, size: 8)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !849, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !842, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !722, file: !835, line: 424, type: !857, isLocal: true, isDefinition: true, align: 32)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !859)
!859 = !{!860, !865}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !858, file: !442, line: 60, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DISubroutineType(types: !863)
!863 = !{!107, !864}
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !858, file: !442, line: 65, baseType: !864, size: 32, offset: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !835, line: 423, type: !868, isLocal: true, isDefinition: true)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !835, line: 107, size: 1472, elements: !869)
!869 = !{!870}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !868, file: !835, line: 109, baseType: !871, size: 1472)
!871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !872, size: 1472, elements: !881)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !835, line: 101, size: 64, elements: !873)
!873 = !{!874, !880}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !872, file: !835, line: 102, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !876, line: 63, baseType: !877)
!876 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !107, !106}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !872, file: !835, line: 103, baseType: !106, size: 32, offset: 32)
!881 = !{!882}
!882 = !DISubrange(count: 23)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !722, file: !835, line: 424, type: !849, isLocal: true, isDefinition: true, align: 8)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !887, file: !835, line: 493, type: !892, isLocal: true, isDefinition: true, align: 32)
!887 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !835, file: !835, line: 460, type: !888, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !890)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !864}
!890 = !{!891}
!891 = !DILocalVariable(name: "dev", arg: 1, scope: !887, file: !835, line: 460, type: !864)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !893)
!893 = !{!894, !895, !896, !897}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !892, file: !10, line: 55, baseType: !334, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !892, file: !10, line: 57, baseType: !334, size: 32, offset: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !892, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !892, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !887, file: !835, line: 497, type: !892, isLocal: true, isDefinition: true, align: 32)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !887, file: !835, line: 507, type: !892, isLocal: true, isDefinition: true, align: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !887, file: !835, line: 512, type: !892, isLocal: true, isDefinition: true, align: 32)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !887, file: !835, line: 516, type: !892, isLocal: true, isDefinition: true, align: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !887, file: !835, line: 523, type: !892, isLocal: true, isDefinition: true, align: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !887, file: !835, line: 527, type: !892, isLocal: true, isDefinition: true, align: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !887, file: !835, line: 581, type: !892, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !887, file: !835, line: 586, type: !892, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !887, file: !835, line: 591, type: !892, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !887, file: !835, line: 595, type: !892, isLocal: true, isDefinition: true, align: 32)
!918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !919, size: 736, elements: !881)
!919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !427, line: 163, baseType: !725)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !923, file: !928, line: 25, type: !956, isLocal: false, isDefinition: true, align: 16)
!923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !925, splitDebugInlining: false, nameTableKind: None)
!924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!925 = !{!926, !921, !932, !934, !936, !938, !940, !942, !944, !946, !948, !950, !952, !954}
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !923, file: !928, line: 20, type: !929, isLocal: false, isDefinition: true, align: 16)
!928 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 240, elements: !930)
!930 = !{!931}
!931 = !DISubrange(count: 15)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !923, file: !928, line: 32, type: !836, isLocal: false, isDefinition: true, align: 16)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !923, file: !928, line: 39, type: !836, isLocal: false, isDefinition: true, align: 16)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !923, file: !928, line: 46, type: !836, isLocal: false, isDefinition: true, align: 16)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !923, file: !928, line: 53, type: !836, isLocal: false, isDefinition: true, align: 16)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !923, file: !928, line: 60, type: !836, isLocal: false, isDefinition: true, align: 16)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !923, file: !928, line: 67, type: !836, isLocal: false, isDefinition: true, align: 16)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !923, file: !928, line: 74, type: !836, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !923, file: !928, line: 81, type: !836, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !923, file: !928, line: 88, type: !836, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !923, file: !928, line: 95, type: !836, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !923, file: !928, line: 102, type: !836, isLocal: false, isDefinition: true, align: 16)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !923, file: !928, line: 109, type: !836, isLocal: false, isDefinition: true, align: 16)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 48, elements: !380)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !959, file: !1024, line: 398, type: !1057, isLocal: true, isDefinition: true)
!959 = distinct !DICompileUnit(language: DW_LANG_C99, file: !960, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !961, retainedTypes: !974, globals: !1021, splitDebugInlining: false, nameTableKind: None)
!960 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!961 = !{!962, !30, !967}
!962 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 197, baseType: !32, size: 32, elements: !964)
!963 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!964 = !{!965, !966}
!965 = !DIEnumerator(name: "SUCCESS", value: 0)
!966 = !DIEnumerator(name: "ERROR", value: 1)
!967 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !968, line: 44, baseType: !32, size: 32, elements: !969)
!968 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!969 = !{!970, !971, !972, !973}
!970 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!971 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!972 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!973 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!974 = !{!106, !107, !108, !975, !1014, !1020}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 586, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 550, size: 1216, elements: !978)
!978 = !{!979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !977, file: !427, line: 552, baseType: !431, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !977, file: !427, line: 553, baseType: !431, size: 32, offset: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !977, file: !427, line: 554, baseType: !431, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !977, file: !427, line: 555, baseType: !431, size: 32, offset: 96)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !977, file: !427, line: 556, baseType: !431, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !977, file: !427, line: 557, baseType: !431, size: 32, offset: 160)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !977, file: !427, line: 558, baseType: !431, size: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !977, file: !427, line: 559, baseType: !108, size: 32, offset: 224)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !977, file: !427, line: 560, baseType: !431, size: 32, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !977, file: !427, line: 561, baseType: !431, size: 32, offset: 288)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !977, file: !427, line: 562, baseType: !990, size: 64, offset: 320)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !185)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !977, file: !427, line: 563, baseType: !431, size: 32, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !977, file: !427, line: 564, baseType: !431, size: 32, offset: 416)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !977, file: !427, line: 565, baseType: !431, size: 32, offset: 448)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !977, file: !427, line: 566, baseType: !108, size: 32, offset: 480)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !977, file: !427, line: 567, baseType: !431, size: 32, offset: 512)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !977, file: !427, line: 568, baseType: !431, size: 32, offset: 544)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !977, file: !427, line: 569, baseType: !990, size: 64, offset: 576)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !977, file: !427, line: 570, baseType: !431, size: 32, offset: 640)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !977, file: !427, line: 571, baseType: !431, size: 32, offset: 672)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !977, file: !427, line: 572, baseType: !431, size: 32, offset: 704)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !977, file: !427, line: 573, baseType: !108, size: 32, offset: 736)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !977, file: !427, line: 574, baseType: !431, size: 32, offset: 768)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !977, file: !427, line: 575, baseType: !431, size: 32, offset: 800)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !977, file: !427, line: 576, baseType: !990, size: 64, offset: 832)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !977, file: !427, line: 577, baseType: !431, size: 32, offset: 896)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !977, file: !427, line: 578, baseType: !431, size: 32, offset: 928)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !977, file: !427, line: 579, baseType: !990, size: 64, offset: 960)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !977, file: !427, line: 580, baseType: !431, size: 32, offset: 1024)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !977, file: !427, line: 581, baseType: !431, size: 32, offset: 1056)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !977, file: !427, line: 582, baseType: !431, size: 32, offset: 1088)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !977, file: !427, line: 583, baseType: !431, size: 32, offset: 1120)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !977, file: !427, line: 584, baseType: !431, size: 32, offset: 1152)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !977, file: !427, line: 585, baseType: !431, size: 32, offset: 1184)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1016, line: 343, size: 64, elements: !1017)
!1016 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1017 = !{!1018, !1019}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1015, file: !1016, line: 344, baseType: !108, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1015, file: !1016, line: 345, baseType: !108, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1021 = !{!1022, !1028, !1044, !1055, !957}
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !959, file: !1024, line: 752, type: !1025, isLocal: false, isDefinition: true, align: 16)
!1024 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 800, elements: !1026)
!1026 = !{!1027}
!1027 = !DISubrange(count: 50)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !959, file: !1024, line: 752, type: !1030, isLocal: false, isDefinition: true, align: 32)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1042, !1043}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1031, file: !451, line: 380, baseType: !121, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1031, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1031, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1031, file: !451, line: 386, baseType: !1037, size: 32, offset: 96)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1038, file: !451, line: 359, baseType: !190, size: 8)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1038, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1031, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1031, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !959, file: !1024, line: 752, type: !1046, isLocal: true, isDefinition: true, align: 32)
!1046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1048)
!1048 = !{!1049, !1054}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1047, file: !442, line: 60, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!107, !1053}
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1047, file: !442, line: 65, baseType: !1053, size: 32, offset: 32)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !959, file: !1024, line: 752, type: !1038, isLocal: true, isDefinition: true, align: 8)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1058)
!1058 = !{!1059, !1065, !1066, !1075, !1080, !1085, !1091}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1057, file: !968, line: 101, baseType: !1060, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1061)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!107, !1053, !1064}
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !968, line: 56, baseType: !106)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1057, file: !968, line: 102, baseType: !1060, size: 32, offset: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1057, file: !968, line: 103, baseType: !1067, size: 32, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!107, !1053, !1064, !1071, !106}
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1072)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{null, !1053, !1064, !106}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1057, file: !968, line: 104, baseType: !1076, size: 32, offset: 96)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!107, !1053, !1064, !1020}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1057, file: !968, line: 105, baseType: !1081, size: 32, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!967, !1053, !1064}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1057, file: !968, line: 106, baseType: !1086, size: 32, offset: 160)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!107, !1053, !1064, !1090}
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !968, line: 64, baseType: !106)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1057, file: !968, line: 107, baseType: !1092, size: 32, offset: 192)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!107, !1053, !1064, !106}
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1098, file: !1155, line: 603, type: !1157, isLocal: true, isDefinition: true, align: 32)
!1098 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1099, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1100, globals: !1152, splitDebugInlining: false, nameTableKind: None)
!1099 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!1100 = !{!106, !107, !1101}
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1103)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1104, line: 336, size: 160, elements: !1105)
!1104 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1105 = !{!1106, !1126, !1130, !1134, !1147}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1103, file: !1104, line: 365, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!107, !1110, !1125}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1113)
!1113 = !{!1114, !1115, !1116, !1117, !1123, !1124}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1112, file: !451, line: 380, baseType: !121, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1112, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1112, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1112, file: !451, line: 386, baseType: !1118, size: 32, offset: 96)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1119, file: !451, line: 359, baseType: !190, size: 8)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1119, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1112, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1112, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1103, file: !1104, line: 366, baseType: !1127, size: 32, offset: 32)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !1110, !191}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1103, file: !1104, line: 374, baseType: !1131, size: 32, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!107, !1110}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1103, file: !1104, line: 377, baseType: !1135, size: 32, offset: 96)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!107, !1110, !1138}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1104, line: 122, size: 64, elements: !1141)
!1141 = !{!1142, !1143, !1144, !1145, !1146}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1140, file: !1104, line: 123, baseType: !108, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1140, file: !1104, line: 124, baseType: !190, size: 8, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1140, file: !1104, line: 125, baseType: !190, size: 8, offset: 40)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1140, file: !1104, line: 126, baseType: !190, size: 8, offset: 48)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1140, file: !1104, line: 127, baseType: !190, size: 8, offset: 56)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1103, file: !1104, line: 379, baseType: !1148, size: 32, offset: 128)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!107, !1110, !1151}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1152 = !{!1096, !1153}
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1098, file: !1155, line: 38, type: !1156, isLocal: true, isDefinition: true)
!1155 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1159)
!1159 = !{!1160, !1161}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1158, file: !442, line: 60, baseType: !1131, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1158, file: !442, line: 65, baseType: !1110, size: 32, offset: 32)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1164, file: !1335, line: 762, type: !1444, isLocal: true, isDefinition: true)
!1164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1166, retainedTypes: !1184, globals: !1332, splitDebugInlining: false, nameTableKind: None)
!1165 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!1166 = !{!30, !1167, !1173, !1178, !967}
!1167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1168, line: 506, baseType: !32, size: 32, elements: !1169)
!1168 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1169 = !{!1170, !1171, !1172}
!1170 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1171 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1172 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1168, line: 512, baseType: !32, size: 32, elements: !1174)
!1174 = !{!1175, !1176, !1177}
!1175 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1176 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1177 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !876, line: 43, baseType: !32, size: 32, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183}
!1180 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1181 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1182 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1183 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1184 = !{!106, !107, !1185, !1255, !1260, !1220, !1173, !1167, !1265, !1266, !108, !1280, !1235, !283, !1292, !1293}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1168, line: 523, size: 288, elements: !1188)
!1188 = !{!1189, !1210, !1216, !1221, !1225, !1226, !1227, !1231, !1251}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1187, file: !1168, line: 524, baseType: !1190, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!107, !1193, !1208, !1209}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1200, !1206, !1207}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1195, file: !451, line: 380, baseType: !121, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1195, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1195, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1195, file: !451, line: 386, baseType: !1201, size: 32, offset: 96)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1203)
!1203 = !{!1204, !1205}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1202, file: !451, line: 359, baseType: !190, size: 8)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1202, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1195, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1195, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1168, line: 237, baseType: !190)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1168, line: 257, baseType: !108)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1187, file: !1168, line: 530, baseType: !1211, size: 32, offset: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!107, !1193, !1214}
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1168, line: 229, baseType: !108)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1187, file: !1168, line: 532, baseType: !1217, size: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!107, !1193, !1220, !1215}
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1168, line: 216, baseType: !108)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1187, file: !1168, line: 535, baseType: !1222, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!107, !1193, !1220}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1187, file: !1168, line: 537, baseType: !1222, size: 32, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1187, file: !1168, line: 539, baseType: !1222, size: 32, offset: 160)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1187, file: !1168, line: 541, baseType: !1228, size: 32, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!107, !1193, !1208, !1167, !1173}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1187, file: !1168, line: 544, baseType: !1232, size: 32, offset: 224)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!107, !1193, !1235, !136}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1168, line: 478, size: 96, elements: !1237)
!1237 = !{!1238, !1245, !1250}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1236, file: !1168, line: 482, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1240, line: 33, baseType: !1241)
!1240 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1240, line: 29, size: 32, elements: !1242)
!1242 = !{!1243}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1241, file: !1240, line: 30, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1236, file: !1168, line: 485, baseType: !1246, size: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1168, line: 464, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !1193, !1235, !1220}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1236, file: !1168, line: 493, baseType: !1220, size: 32, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1187, file: !1168, line: 547, baseType: !1252, size: 32, offset: 256)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!108, !1193}
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1168, line: 428, size: 32, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1257, file: !1168, line: 434, baseType: !1220, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1168, line: 441, size: 32, elements: !1263)
!1263 = !{!1264}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1262, file: !1168, line: 447, baseType: !1220, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !427, line: 469, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 458, size: 320, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1268, file: !427, line: 460, baseType: !431, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1268, file: !427, line: 461, baseType: !431, size: 32, offset: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1268, file: !427, line: 462, baseType: !431, size: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1268, file: !427, line: 463, baseType: !431, size: 32, offset: 96)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1268, file: !427, line: 464, baseType: !431, size: 32, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1268, file: !427, line: 465, baseType: !431, size: 32, offset: 160)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1268, file: !427, line: 466, baseType: !431, size: 32, offset: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1268, file: !427, line: 467, baseType: !431, size: 32, offset: 224)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1268, file: !427, line: 468, baseType: !1279, size: 64, offset: 256)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 64, elements: !185)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !427, line: 484, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 475, size: 384, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1288, !1289, !1290, !1291}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1282, file: !427, line: 477, baseType: !431, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1282, file: !427, line: 478, baseType: !431, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1282, file: !427, line: 479, baseType: !1287, size: 128, offset: 64)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 128, elements: !837)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1282, file: !427, line: 480, baseType: !990, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1282, file: !427, line: 481, baseType: !431, size: 32, offset: 256)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1282, file: !427, line: 482, baseType: !990, size: 64, offset: 288)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1282, file: !427, line: 483, baseType: !431, size: 32, offset: 352)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1296)
!1296 = !{!1297, !1302, !1303, !1312, !1317, !1322, !1327}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1295, file: !968, line: 101, baseType: !1298, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!107, !1193, !1064}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1295, file: !968, line: 102, baseType: !1298, size: 32, offset: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1295, file: !968, line: 103, baseType: !1304, size: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!107, !1193, !1064, !1308, !106}
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1309)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{null, !1193, !1064, !106}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1295, file: !968, line: 104, baseType: !1313, size: 32, offset: 96)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!107, !1193, !1064, !1020}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1295, file: !968, line: 105, baseType: !1318, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1319)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!967, !1193, !1064}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1295, file: !968, line: 106, baseType: !1323, size: 32, offset: 160)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!107, !1193, !1064, !1090}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1295, file: !968, line: 107, baseType: !1328, size: 32, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!107, !1193, !1064, !106}
!1332 = !{!1333, !1339, !1341, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1162, !1440, !1442, !1455, !1457, !1459, !1461, !1463, !1465}
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1164, file: !1335, line: 762, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 80, elements: !1337)
!1337 = !{!1338}
!1338 = !DISubrange(count: 5)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1164, file: !1335, line: 762, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1164, file: !1335, line: 762, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1344)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1345)
!1345 = !{!1346, !1350}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1344, file: !442, line: 60, baseType: !1347, size: 32)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!107, !1193}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1344, file: !442, line: 65, baseType: !1193, size: 32, offset: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1164, file: !1335, line: 766, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1164, file: !1335, line: 766, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1164, file: !1335, line: 766, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1164, file: !1335, line: 770, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1164, file: !1335, line: 770, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1164, file: !1335, line: 770, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1164, file: !1335, line: 774, type: !1365, isLocal: false, isDefinition: true, align: 16)
!1365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 144, elements: !1366)
!1366 = !{!1367}
!1367 = !DISubrange(count: 9)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1164, file: !1335, line: 774, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1164, file: !1335, line: 774, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1164, file: !1335, line: 778, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1164, file: !1335, line: 778, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1164, file: !1335, line: 778, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1164, file: !1335, line: 782, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1164, file: !1335, line: 782, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1164, file: !1335, line: 782, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1164, file: !1335, line: 786, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1164, file: !1335, line: 786, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1164, file: !1335, line: 786, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1164, file: !1335, line: 790, type: !1336, isLocal: false, isDefinition: true, align: 16)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1164, file: !1335, line: 790, type: !1194, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1164, file: !1335, line: 790, type: !1343, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1164, file: !1335, line: 762, type: !1398, isLocal: true, isDefinition: true)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1399, line: 237, size: 128, elements: !1400)
!1399 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1400 = !{!1401, !1402, !1403}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1398, file: !1399, line: 239, baseType: !1262, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1398, file: !1399, line: 241, baseType: !1193, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1398, file: !1399, line: 243, baseType: !1404, size: 64, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1240, line: 40, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1240, line: 35, size: 64, elements: !1406)
!1406 = !{!1407, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1405, file: !1240, line: 36, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1405, file: !1240, line: 37, baseType: !1408, size: 32, offset: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1164, file: !1335, line: 762, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1164, file: !1335, line: 766, type: !1398, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1164, file: !1335, line: 766, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1164, file: !1335, line: 770, type: !1398, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1164, file: !1335, line: 770, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1164, file: !1335, line: 774, type: !1398, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1164, file: !1335, line: 774, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1164, file: !1335, line: 778, type: !1398, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1164, file: !1335, line: 778, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1164, file: !1335, line: 782, type: !1398, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1164, file: !1335, line: 782, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1164, file: !1335, line: 786, type: !1398, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1164, file: !1335, line: 786, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1164, file: !1335, line: 790, type: !1398, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1164, file: !1335, line: 790, type: !1202, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1164, file: !1335, line: 656, type: !1186, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1164, file: !1335, line: 766, type: !1444, isLocal: true, isDefinition: true)
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1399, line: 224, size: 160, elements: !1446)
!1446 = !{!1447, !1448, !1449, !1450}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1445, file: !1399, line: 226, baseType: !1257, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1445, file: !1399, line: 228, baseType: !1020, size: 32, offset: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1445, file: !1399, line: 230, baseType: !107, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1445, file: !1399, line: 231, baseType: !1451, size: 64, offset: 96)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1016, line: 343, size: 64, elements: !1452)
!1452 = !{!1453, !1454}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1451, file: !1016, line: 344, baseType: !108, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1451, file: !1016, line: 345, baseType: !108, size: 32, offset: 32)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1164, file: !1335, line: 770, type: !1444, isLocal: true, isDefinition: true)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1164, file: !1335, line: 774, type: !1444, isLocal: true, isDefinition: true)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1164, file: !1335, line: 778, type: !1444, isLocal: true, isDefinition: true)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1164, file: !1335, line: 782, type: !1444, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1164, file: !1335, line: 786, type: !1444, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1164, file: !1335, line: 790, type: !1444, isLocal: true, isDefinition: true)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1469, file: !1608, line: 44, type: !1746, isLocal: false, isDefinition: true)
!1469 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1470, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1471, retainedTypes: !1504, globals: !1605, splitDebugInlining: false, nameTableKind: None)
!1470 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!1471 = !{!30, !1472, !1479, !1486, !1493, !1499, !967}
!1472 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1104, line: 47, baseType: !32, size: 32, elements: !1473)
!1473 = !{!1474, !1475, !1476, !1477, !1478}
!1474 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1475 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1476 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1477 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1478 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1104, line: 75, baseType: !32, size: 32, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484, !1485}
!1481 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1482 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1483 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1484 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1485 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1486 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1104, line: 92, baseType: !32, size: 32, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1492}
!1488 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1489 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1490 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1491 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1492 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1493 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1104, line: 84, baseType: !32, size: 32, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498}
!1495 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1496 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1497 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1498 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1499 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1104, line: 107, baseType: !32, size: 32, elements: !1500)
!1500 = !{!1501, !1502, !1503}
!1501 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1502 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1503 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1504 = !{!106, !107, !1505, !191, !190, !1554, !108, !1064, !1565, !126, !109, !1604}
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1104, line: 336, size: 160, elements: !1508)
!1508 = !{!1509, !1528, !1532, !1536, !1549}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1507, file: !1104, line: 365, baseType: !1510, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!107, !1513, !1125}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1526, !1527}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1515, file: !451, line: 380, baseType: !121, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1515, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1515, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1515, file: !451, line: 386, baseType: !1521, size: 32, offset: 96)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1523)
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1522, file: !451, line: 359, baseType: !190, size: 8)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1522, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1515, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1515, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1507, file: !1104, line: 366, baseType: !1529, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{null, !1513, !191}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1507, file: !1104, line: 374, baseType: !1533, size: 32, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!107, !1513}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1507, file: !1104, line: 377, baseType: !1537, size: 32, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!107, !1513, !1540}
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1104, line: 122, size: 64, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1542, file: !1104, line: 123, baseType: !108, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1542, file: !1104, line: 124, baseType: !190, size: 8, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1542, file: !1104, line: 125, baseType: !190, size: 8, offset: 40)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1542, file: !1104, line: 126, baseType: !190, size: 8, offset: 48)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1542, file: !1104, line: 127, baseType: !190, size: 8, offset: 56)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1507, file: !1104, line: 379, baseType: !1550, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!107, !1513, !1553}
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !427, line: 783, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 774, size: 224, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1561, !1562, !1563, !1564}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1556, file: !427, line: 776, baseType: !431, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1556, file: !427, line: 777, baseType: !431, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1556, file: !427, line: 778, baseType: !431, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1556, file: !427, line: 779, baseType: !431, size: 32, offset: 96)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1556, file: !427, line: 780, baseType: !431, size: 32, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1556, file: !427, line: 781, baseType: !431, size: 32, offset: 160)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1556, file: !427, line: 782, baseType: !431, size: 32, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !968, line: 100, size: 224, elements: !1568)
!1568 = !{!1569, !1574, !1575, !1584, !1589, !1594, !1599}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1567, file: !968, line: 101, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !968, line: 76, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!107, !1513, !1064}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1567, file: !968, line: 102, baseType: !1570, size: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1567, file: !968, line: 103, baseType: !1576, size: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !968, line: 83, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!107, !1513, !1064, !1580, !106}
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !968, line: 72, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !1513, !1064, !106}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1567, file: !968, line: 104, baseType: !1585, size: 32, offset: 96)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !968, line: 79, baseType: !1586)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!107, !1513, !1064, !1020}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1567, file: !968, line: 105, baseType: !1590, size: 32, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !968, line: 88, baseType: !1591)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!967, !1513, !1064}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1567, file: !968, line: 106, baseType: !1595, size: 32, offset: 160)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !968, line: 92, baseType: !1596)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!107, !1513, !1064, !1090}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1567, file: !968, line: 107, baseType: !1600, size: 32, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !968, line: 96, baseType: !1601)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{!107, !1513, !1064, !106}
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 32)
!1605 = !{!1467, !1606, !1612, !1614, !1621, !1623, !1625, !1627, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647, !1691, !1694, !1696, !1699, !1702, !1704, !1710, !1712, !1714, !1716, !1718, !1720, !1722, !1724, !1726, !1728, !1730, !1732, !1734, !1736, !1738, !1740, !1742, !1744}
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1469, file: !1608, line: 1914, type: !1609, isLocal: false, isDefinition: true, align: 16)
!1608 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 128, elements: !1610)
!1610 = !{!1611}
!1611 = !DISubrange(count: 8)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1469, file: !1608, line: 1914, type: !1514, isLocal: false, isDefinition: true, align: 32)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1469, file: !1608, line: 1914, type: !1616, isLocal: true, isDefinition: true, align: 32)
!1616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1618)
!1618 = !{!1619, !1620}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1617, file: !442, line: 60, baseType: !1533, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1617, file: !442, line: 65, baseType: !1513, size: 32, offset: 32)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1469, file: !1608, line: 1914, type: !1609, isLocal: false, isDefinition: true, align: 16)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1469, file: !1608, line: 1914, type: !1514, isLocal: false, isDefinition: true, align: 32)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1469, file: !1608, line: 1914, type: !1616, isLocal: true, isDefinition: true, align: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1469, file: !1608, line: 1914, type: !1609, isLocal: false, isDefinition: true, align: 16)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1469, file: !1608, line: 1914, type: !1514, isLocal: false, isDefinition: true, align: 32)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1469, file: !1608, line: 1914, type: !1616, isLocal: true, isDefinition: true, align: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1469, file: !1608, line: 1914, type: !1609, isLocal: false, isDefinition: true, align: 16)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1469, file: !1608, line: 1914, type: !1514, isLocal: false, isDefinition: true, align: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1469, file: !1608, line: 1914, type: !1616, isLocal: true, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1469, file: !1608, line: 1914, type: !1522, isLocal: true, isDefinition: true, align: 8)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1469, file: !1608, line: 1914, type: !1522, isLocal: true, isDefinition: true, align: 8)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1469, file: !1608, line: 1914, type: !1522, isLocal: true, isDefinition: true, align: 8)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1469, file: !1608, line: 1914, type: !1522, isLocal: true, isDefinition: true, align: 8)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1469, file: !1608, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1651, line: 22, size: 224, elements: !1652)
!1651 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1652 = !{!1653, !1654, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1650, file: !1651, line: 24, baseType: !1554, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1650, file: !1651, line: 26, baseType: !1655, size: 32, offset: 32)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1016, line: 343, size: 64, elements: !1658)
!1658 = !{!1659, !1660}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1657, file: !1016, line: 344, baseType: !108, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1657, file: !1016, line: 345, baseType: !108, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1650, file: !1651, line: 28, baseType: !137, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1650, file: !1651, line: 30, baseType: !136, size: 8, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1650, file: !1651, line: 32, baseType: !107, size: 32, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1650, file: !1651, line: 34, baseType: !136, size: 8, offset: 160)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1650, file: !1651, line: 36, baseType: !136, size: 8, offset: 168)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1650, file: !1651, line: 38, baseType: !136, size: 8, offset: 176)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1650, file: !1651, line: 40, baseType: !136, size: 8, offset: 184)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1650, file: !1651, line: 41, baseType: !1669, size: 32, offset: 192)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1672, line: 60, size: 64, elements: !1673)
!1672 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1673 = !{!1674, !1690}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1671, file: !1672, line: 69, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1672, line: 50, size: 64, elements: !1678)
!1678 = !{!1679, !1688, !1689}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1677, file: !1672, line: 52, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1683, line: 37, baseType: !1684)
!1683 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1683, line: 32, size: 64, elements: !1685)
!1685 = !{!1686, !1687}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1684, file: !1683, line: 34, baseType: !108, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1684, file: !1683, line: 36, baseType: !108, size: 32, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1677, file: !1672, line: 54, baseType: !190, size: 8, offset: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1677, file: !1672, line: 56, baseType: !190, size: 8, offset: 40)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1671, file: !1672, line: 71, baseType: !190, size: 8, offset: 32)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1469, file: !1608, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 64, elements: !368)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1469, file: !1608, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1469, file: !1608, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 64, elements: !368)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1469, file: !1608, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 128, elements: !185)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1469, file: !1608, line: 1539, type: !1506, isLocal: true, isDefinition: true)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1469, file: !1608, line: 1914, type: !1706, isLocal: true, isDefinition: true)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1651, line: 74, size: 64, elements: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1706, file: !1651, line: 76, baseType: !108, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1706, file: !1651, line: 78, baseType: !1513, size: 32, offset: 32)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1469, file: !1608, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1469, file: !1608, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1469, file: !1608, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1469, file: !1608, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1469, file: !1608, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1469, file: !1608, line: 1914, type: !1706, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1469, file: !1608, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1469, file: !1608, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1469, file: !1608, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1469, file: !1608, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1469, file: !1608, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1469, file: !1608, line: 1914, type: !1706, isLocal: true, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1469, file: !1608, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1469, file: !1608, line: 1914, type: !1693, isLocal: true, isDefinition: true)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1469, file: !1608, line: 1914, type: !1670, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1469, file: !1608, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1469, file: !1608, line: 1914, type: !1701, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1469, file: !1608, line: 1914, type: !1706, isLocal: true, isDefinition: true)
!1746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !1748)
!1748 = !{!1749, !1750}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1747, file: !406, line: 17, baseType: !121, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1747, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1753, file: !1831, line: 65, type: !431, isLocal: true, isDefinition: true)
!1753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1754, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1755, retainedTypes: !1756, globals: !1828, splitDebugInlining: false, nameTableKind: None)
!1754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!1755 = !{!725}
!1756 = !{!102, !1757, !334, !190, !108, !1765, !1796}
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 770, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 764, size: 128, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1759, file: !644, line: 766, baseType: !431, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1759, file: !644, line: 767, baseType: !431, size: 32, offset: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1759, file: !644, line: 768, baseType: !431, size: 32, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1759, file: !644, line: 769, baseType: !648, size: 32, offset: 96)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !1768)
!1768 = !{!1769, !1771, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1786, !1791, !1795}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1767, file: !644, line: 413, baseType: !1770, size: 256)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 256, elements: !1610)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1767, file: !644, line: 414, baseType: !1772, size: 768, offset: 256)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1773)
!1773 = !{!1774}
!1774 = !DISubrange(count: 24)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1767, file: !644, line: 415, baseType: !1770, size: 256, offset: 1024)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1767, file: !644, line: 416, baseType: !1772, size: 768, offset: 1280)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1767, file: !644, line: 417, baseType: !1770, size: 256, offset: 2048)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1767, file: !644, line: 418, baseType: !1772, size: 768, offset: 2304)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1767, file: !644, line: 419, baseType: !1770, size: 256, offset: 3072)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1767, file: !644, line: 420, baseType: !1772, size: 768, offset: 3328)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1767, file: !644, line: 421, baseType: !1770, size: 256, offset: 4096)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1767, file: !644, line: 422, baseType: !1783, size: 1792, offset: 4352)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1784)
!1784 = !{!1785}
!1785 = !DISubrange(count: 56)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1767, file: !644, line: 423, baseType: !1787, size: 1920, offset: 6144)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1788, size: 1920, elements: !1789)
!1788 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !190)
!1789 = !{!1790}
!1790 = !DISubrange(count: 240)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1767, file: !644, line: 424, baseType: !1792, size: 20608, offset: 8064)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1793)
!1793 = !{!1794}
!1794 = !DISubrange(count: 644)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1767, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !1798)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !1799)
!1799 = !{!1800, !1801, !1802, !1803, !1804, !1805, !1806, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1819, !1820, !1821, !1823, !1825, !1827}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1798, file: !644, line: 447, baseType: !648, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1798, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1798, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1798, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1798, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1798, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1798, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1788, size: 96, elements: !1808)
!1808 = !{!1809}
!1809 = !DISubrange(count: 12)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1798, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1798, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1798, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1798, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1798, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1798, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1798, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1798, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 64, elements: !185)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1798, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1798, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1798, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 128, elements: !837)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1798, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 160, elements: !1337)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1798, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1337)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1798, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!1828 = !{!1829, !1855, !1858, !1860, !1862, !1751}
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1753, file: !1831, line: 285, type: !1832, isLocal: true, isDefinition: true, align: 32)
!1831 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !1834)
!1834 = !{!1835, !1854}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1833, file: !442, line: 60, baseType: !1836, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{!107, !1839}
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1841)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1852, !1853}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1841, file: !451, line: 380, baseType: !121, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1841, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1841, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1841, file: !451, line: 386, baseType: !1847, size: 32, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1849)
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1848, file: !451, line: 359, baseType: !190, size: 8)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1848, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1841, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1841, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1833, file: !442, line: 65, baseType: !1839, size: 32, offset: 32)
!1855 = !DIGlobalVariableExpression(var: !1856, expr: !DIExpression())
!1856 = distinct !DIGlobalVariable(name: "lock", scope: !1753, file: !1831, line: 34, type: !1857, isLocal: true, isDefinition: true)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "last_load", scope: !1753, file: !1831, line: 36, type: !108, isLocal: true, isDefinition: true)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1753, file: !1831, line: 48, type: !108, isLocal: true, isDefinition: true)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1753, file: !1831, line: 54, type: !108, isLocal: true, isDefinition: true)
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1866, file: !1948, line: 22, type: !1950, isLocal: true, isDefinition: true)
!1866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1868, retainedTypes: !1869, globals: !1945, splitDebugInlining: false, nameTableKind: None)
!1867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!1868 = !{!1167, !1173}
!1869 = !{!1870, !1934, !1939, !1220, !1173, !1167, !1944, !106}
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1168, line: 523, size: 288, elements: !1873)
!1873 = !{!1874, !1893, !1897, !1901, !1905, !1906, !1907, !1911, !1930}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1872, file: !1168, line: 524, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!107, !1878, !1208, !1209}
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885, !1891, !1892}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1880, file: !451, line: 380, baseType: !121, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1880, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1880, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1880, file: !451, line: 386, baseType: !1886, size: 32, offset: 96)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !1888)
!1888 = !{!1889, !1890}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1887, file: !451, line: 359, baseType: !190, size: 8)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1887, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1880, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1880, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1872, file: !1168, line: 530, baseType: !1894, size: 32, offset: 32)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!107, !1878, !1214}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1872, file: !1168, line: 532, baseType: !1898, size: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{!107, !1878, !1220, !1215}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1872, file: !1168, line: 535, baseType: !1902, size: 32, offset: 96)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{!107, !1878, !1220}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1872, file: !1168, line: 537, baseType: !1902, size: 32, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1872, file: !1168, line: 539, baseType: !1902, size: 32, offset: 160)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1872, file: !1168, line: 541, baseType: !1908, size: 32, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!107, !1878, !1208, !1167, !1173}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1872, file: !1168, line: 544, baseType: !1912, size: 32, offset: 224)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 32)
!1913 = !DISubroutineType(types: !1914)
!1914 = !{!107, !1878, !1915, !136}
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1168, line: 478, size: 96, elements: !1917)
!1917 = !{!1918, !1924, !1929}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1916, file: !1168, line: 482, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1240, line: 33, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1240, line: 29, size: 32, elements: !1921)
!1921 = !{!1922}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1920, file: !1240, line: 30, baseType: !1923, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1916, file: !1168, line: 485, baseType: !1925, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1168, line: 464, baseType: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{null, !1878, !1915, !1220}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1916, file: !1168, line: 493, baseType: !1220, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1872, file: !1168, line: 547, baseType: !1931, size: 32, offset: 256)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DISubroutineType(types: !1933)
!1933 = !{!108, !1878}
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1936)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1168, line: 428, size: 32, elements: !1937)
!1937 = !{!1938}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1936, file: !1168, line: 434, baseType: !1220, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1168, line: 441, size: 32, elements: !1942)
!1942 = !{!1943}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1941, file: !1168, line: 447, baseType: !1220, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1945 = !{!1946, !1864}
!1946 = !DIGlobalVariableExpression(var: !1947, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1947 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1866, file: !1948, line: 37, type: !1949, isLocal: true, isDefinition: true)
!1948 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 352, elements: !1952)
!1951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!1952 = !{!1953}
!1953 = !DISubrange(count: 11)
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1956, file: !2000, line: 139, type: !2005, isLocal: false, isDefinition: true)
!1956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1958, globals: !1997, splitDebugInlining: false, nameTableKind: None)
!1957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!1958 = !{!1959}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 586, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 550, size: 1216, elements: !1962)
!1962 = !{!1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1961, file: !427, line: 552, baseType: !431, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1961, file: !427, line: 553, baseType: !431, size: 32, offset: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1961, file: !427, line: 554, baseType: !431, size: 32, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1961, file: !427, line: 555, baseType: !431, size: 32, offset: 96)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1961, file: !427, line: 556, baseType: !431, size: 32, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1961, file: !427, line: 557, baseType: !431, size: 32, offset: 160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1961, file: !427, line: 558, baseType: !431, size: 32, offset: 192)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1961, file: !427, line: 559, baseType: !108, size: 32, offset: 224)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1961, file: !427, line: 560, baseType: !431, size: 32, offset: 256)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1961, file: !427, line: 561, baseType: !431, size: 32, offset: 288)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1961, file: !427, line: 562, baseType: !990, size: 64, offset: 320)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1961, file: !427, line: 563, baseType: !431, size: 32, offset: 384)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1961, file: !427, line: 564, baseType: !431, size: 32, offset: 416)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1961, file: !427, line: 565, baseType: !431, size: 32, offset: 448)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1961, file: !427, line: 566, baseType: !108, size: 32, offset: 480)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1961, file: !427, line: 567, baseType: !431, size: 32, offset: 512)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1961, file: !427, line: 568, baseType: !431, size: 32, offset: 544)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1961, file: !427, line: 569, baseType: !990, size: 64, offset: 576)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1961, file: !427, line: 570, baseType: !431, size: 32, offset: 640)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1961, file: !427, line: 571, baseType: !431, size: 32, offset: 672)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1961, file: !427, line: 572, baseType: !431, size: 32, offset: 704)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1961, file: !427, line: 573, baseType: !108, size: 32, offset: 736)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1961, file: !427, line: 574, baseType: !431, size: 32, offset: 768)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1961, file: !427, line: 575, baseType: !431, size: 32, offset: 800)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1961, file: !427, line: 576, baseType: !990, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1961, file: !427, line: 577, baseType: !431, size: 32, offset: 896)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1961, file: !427, line: 578, baseType: !431, size: 32, offset: 928)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1961, file: !427, line: 579, baseType: !990, size: 64, offset: 960)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1961, file: !427, line: 580, baseType: !431, size: 32, offset: 1024)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1961, file: !427, line: 581, baseType: !431, size: 32, offset: 1056)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1961, file: !427, line: 582, baseType: !431, size: 32, offset: 1088)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1961, file: !427, line: 583, baseType: !431, size: 32, offset: 1120)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1961, file: !427, line: 584, baseType: !431, size: 32, offset: 1152)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1961, file: !427, line: 585, baseType: !431, size: 32, offset: 1184)
!1997 = !{!1998, !2001, !1954}
!1998 = !DIGlobalVariableExpression(var: !1999, expr: !DIExpression())
!1999 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1956, file: !2000, line: 137, type: !108, isLocal: false, isDefinition: true)
!2000 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1956, file: !2000, line: 138, type: !2003, isLocal: false, isDefinition: true)
!2003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2004, size: 128, elements: !347)
!2004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2004, size: 64, elements: !1610)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2008, file: !2011, line: 23, type: !2012, isLocal: false, isDefinition: true)
!2008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2009, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, globals: !2010, splitDebugInlining: false, nameTableKind: None)
!2009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2010 = !{!2006}
!2011 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!2013 = !DIGlobalVariableExpression(var: !2014, expr: !DIExpression())
!2014 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2015, file: !2019, line: 37, type: !2272, isLocal: false, isDefinition: true)
!2015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2017, retainedTypes: !2026, globals: !2099, splitDebugInlining: false, nameTableKind: None)
!2016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2017 = !{!2018, !30, !725}
!2018 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2019, line: 63, baseType: !32, size: 32, elements: !2020)
!2019 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2020 = !{!2021, !2022, !2023, !2024, !2025}
!2021 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2022 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2023 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2024 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2025 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2026 = !{!137, !106, !107, !2027, !283, !108, !2057, !334, !190, !2082}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2030, line: 51, size: 64, elements: !2031)
!2030 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2031 = !{!2032, !2052}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2029, file: !2030, line: 52, baseType: !2033, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2030, line: 38, baseType: !2034)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!107, !2037, !401, !126}
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2050, !2051}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2039, file: !451, line: 380, baseType: !121, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2039, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2039, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2039, file: !451, line: 386, baseType: !2045, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 32)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2046, file: !451, line: 359, baseType: !190, size: 8)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2046, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2039, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2039, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2029, file: !2030, line: 53, baseType: !2053, size: 32, offset: 32)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2030, line: 47, baseType: !2054)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{!107, !2037, !401, !126, !108}
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2059, file: !644, line: 447, baseType: !648, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2059, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2059, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2059, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2059, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2059, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2059, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2059, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2059, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2059, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2059, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2059, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2059, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2059, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2059, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2059, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2059, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2059, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2059, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2059, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2059, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2084, file: !644, line: 413, baseType: !1770, size: 256)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2084, file: !644, line: 414, baseType: !1772, size: 768, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2084, file: !644, line: 415, baseType: !1770, size: 256, offset: 1024)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2084, file: !644, line: 416, baseType: !1772, size: 768, offset: 1280)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2084, file: !644, line: 417, baseType: !1770, size: 256, offset: 2048)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2084, file: !644, line: 418, baseType: !1772, size: 768, offset: 2304)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2084, file: !644, line: 419, baseType: !1770, size: 256, offset: 3072)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2084, file: !644, line: 420, baseType: !1772, size: 768, offset: 3328)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2084, file: !644, line: 421, baseType: !1770, size: 256, offset: 4096)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2084, file: !644, line: 422, baseType: !1783, size: 1792, offset: 4352)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2084, file: !644, line: 423, baseType: !1787, size: 1920, offset: 6144)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2084, file: !644, line: 424, baseType: !1792, size: 20608, offset: 8064)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2084, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2099 = !{!2013, !2100, !2222, !2230, !2232, !2235, !2240, !2242, !2247}
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "_kernel", scope: !2015, file: !2019, line: 40, type: !2102, isLocal: false, isDefinition: true)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !146, line: 158, size: 288, elements: !2103)
!2103 = !{!2104, !2217}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2102, file: !146, line: 159, baseType: !2105, size: 192)
!2105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2106, size: 192, elements: !368)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !146, line: 100, size: 192, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2211, !2212, !2213, !2214}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2106, file: !146, line: 102, baseType: !108, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2106, file: !146, line: 105, baseType: !283, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2106, file: !146, line: 108, baseType: !2111, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2113)
!2113 = !{!2114, !2172, !2184, !2185, !2186, !2187, !2193, !2206}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2112, file: !168, line: 247, baseType: !2115, size: 384)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2116)
!2116 = !{!2117, !2141, !2148, !2149, !2150, !2159, !2160, !2161}
!2117 = !DIDerivedType(tag: DW_TAG_member, scope: !2115, file: !168, line: 60, baseType: !2118, size: 64)
!2118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2115, file: !168, line: 60, size: 64, elements: !2119)
!2119 = !{!2120, !2135}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2118, file: !168, line: 61, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2123)
!2123 = !{!2124, !2130}
!2124 = !DIDerivedType(tag: DW_TAG_member, scope: !2122, file: !151, line: 38, baseType: !2125, size: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2122, file: !151, line: 38, size: 32, elements: !2126)
!2126 = !{!2127, !2129}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2125, file: !151, line: 39, baseType: !2128, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2125, file: !151, line: 40, baseType: !2128, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, scope: !2122, file: !151, line: 42, baseType: !2131, size: 32, offset: 32)
!2131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2122, file: !151, line: 42, size: 32, elements: !2132)
!2132 = !{!2133, !2134}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2131, file: !151, line: 43, baseType: !2128, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2131, file: !151, line: 44, baseType: !2128, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2118, file: !168, line: 62, baseType: !2136, size: 64)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2137)
!2137 = !{!2138}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2136, file: !180, line: 50, baseType: !2139, size: 64)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2140, size: 64, elements: !185)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2115, file: !168, line: 68, baseType: !2142, size: 32, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2145)
!2145 = !{!2146}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2144, file: !146, line: 232, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2122)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2115, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2115, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2150 = !DIDerivedType(tag: DW_TAG_member, scope: !2115, file: !168, line: 90, baseType: !2151, size: 16, offset: 112)
!2151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2115, file: !168, line: 90, size: 16, elements: !2152)
!2152 = !{!2153, !2158}
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2151, file: !168, line: 91, baseType: !2154, size: 16)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2151, file: !168, line: 91, size: 16, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2154, file: !168, line: 96, baseType: !200, size: 8)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2154, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2151, file: !168, line: 100, baseType: !126, size: 16)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2115, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2115, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2115, file: !168, line: 131, baseType: !2162, size: 192, offset: 192)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2163)
!2163 = !{!2164, !2165, !2171}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2162, file: !146, line: 245, baseType: !2121, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2162, file: !146, line: 246, baseType: !2166, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{null, !2170}
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2162, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2112, file: !168, line: 250, baseType: !2173, size: 288, offset: 384)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2173, file: !219, line: 26, baseType: !108, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2173, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2173, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2173, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2173, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2173, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2173, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2173, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2173, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2112, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2112, file: !168, line: 256, baseType: !2143, size: 64, offset: 704)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2112, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2112, file: !168, line: 300, baseType: !2188, size: 96, offset: 800)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2189)
!2189 = !{!2190, !2191, !2192}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2188, file: !168, line: 153, baseType: !22, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2188, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2188, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2112, file: !168, line: 325, baseType: !2194, size: 32, offset: 896)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2196)
!2196 = !{!2197, !2203, !2204}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2195, file: !142, line: 5074, baseType: !2198, size: 96)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2199)
!2199 = !{!2200, !2201, !2202}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2198, file: !245, line: 57, baseType: !248, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2198, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2198, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2195, file: !142, line: 5075, baseType: !2143, size: 64, offset: 96)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2195, file: !142, line: 5076, baseType: !2205, offset: 160)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2112, file: !168, line: 343, baseType: !2207, size: 64, offset: 928)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2208)
!2208 = !{!2209, !2210}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2207, file: !219, line: 63, baseType: !108, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2207, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2106, file: !146, line: 111, baseType: !2111, size: 32, offset: 96)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2106, file: !146, line: 124, baseType: !107, size: 32, offset: 128)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2106, file: !146, line: 127, baseType: !190, size: 8, offset: 160)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2106, file: !146, line: 153, baseType: !2215, offset: 168)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2216, line: 33, elements: !256)
!2216 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2102, file: !146, line: 170, baseType: !2218, size: 96, offset: 192)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !146, line: 83, size: 96, elements: !2219)
!2219 = !{!2220, !2221}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2218, file: !146, line: 86, baseType: !2111, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2218, file: !146, line: 90, baseType: !2147, size: 64, offset: 32)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2015, file: !2019, line: 43, type: !2224, isLocal: false, isDefinition: true, align: 512)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2225, size: 8704, elements: !2228)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !2226)
!2226 = !{!2227}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2225, file: !319, line: 48, baseType: !123, size: 8)
!2228 = !{!2229}
!2229 = !DISubrange(count: 1088)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2015, file: !2019, line: 44, type: !2112, isLocal: false, isDefinition: true)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2015, file: !2019, line: 48, type: !2234, isLocal: false, isDefinition: true)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2112, size: 1024, elements: !368)
!2235 = !DIGlobalVariableExpression(var: !2236, expr: !DIExpression())
!2236 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2015, file: !2019, line: 86, type: !2237, isLocal: false, isDefinition: true, align: 512)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2225, size: 16896, elements: !2238)
!2238 = !{!369, !2239}
!2239 = !DISubrange(count: 2112)
!2240 = !DIGlobalVariableExpression(var: !2241, expr: !DIExpression())
!2241 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2015, file: !2019, line: 217, type: !136, isLocal: false, isDefinition: true)
!2242 = !DIGlobalVariableExpression(var: !2243, expr: !DIExpression())
!2243 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2015, file: !2019, line: 50, type: !2244, isLocal: true, isDefinition: true, align: 512)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2225, size: 3072, elements: !2245)
!2245 = !{!369, !2246}
!2246 = !DISubrange(count: 384)
!2247 = !DIGlobalVariableExpression(var: !2248, expr: !DIExpression())
!2248 = distinct !DIGlobalVariable(name: "levels", scope: !2249, file: !2019, line: 232, type: !2269, isLocal: true, isDefinition: true)
!2249 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2019, file: !2019, line: 230, type: !2250, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !2252)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{null, !2018}
!2252 = !{!2253, !2254, !2264, !2268}
!2253 = !DILocalVariable(name: "level", arg: 1, scope: !2249, file: !2019, line: 230, type: !2018)
!2254 = !DILocalVariable(name: "entry", scope: !2249, file: !2019, line: 244, type: !2255)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !2258)
!2258 = !{!2259, !2263}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2257, file: !442, line: 60, baseType: !2260, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!107, !2037}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2257, file: !442, line: 65, baseType: !2037, size: 32, offset: 32)
!2264 = !DILocalVariable(name: "dev", scope: !2265, file: !2019, line: 247, type: !2037)
!2265 = distinct !DILexicalBlock(scope: !2266, file: !2019, line: 246, column: 64)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !2019, line: 246, column: 2)
!2267 = distinct !DILexicalBlock(scope: !2249, file: !2019, line: 246, column: 2)
!2268 = !DILocalVariable(name: "rc", scope: !2265, file: !2019, line: 248, type: !107)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2255, size: 192, elements: !2270)
!2270 = !{!2271}
!2271 = !DISubrange(count: 6)
!2272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2273)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !406, line: 16, size: 64, elements: !2274)
!2274 = !{!2275, !2276}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2273, file: !406, line: 17, baseType: !121, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2273, file: !406, line: 18, baseType: !190, size: 8, offset: 32)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "states_str", scope: !2279, file: !2280, line: 276, type: !2401, isLocal: true, isDefinition: true)
!2279 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2280, file: !2280, line: 271, type: !2281, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !2392)
!2280 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2281 = !DISubroutineType(types: !2282)
!2282 = !{!121, !2283, !283, !137}
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2286)
!2286 = !{!2287, !2345, !2357, !2358, !2359, !2360, !2366, !2379}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2285, file: !168, line: 247, baseType: !2288, size: 384)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2289)
!2289 = !{!2290, !2314, !2321, !2322, !2323, !2332, !2333, !2334}
!2290 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !168, line: 60, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !168, line: 60, size: 64, elements: !2292)
!2292 = !{!2293, !2308}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2291, file: !168, line: 61, baseType: !2294, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2295)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2296)
!2296 = !{!2297, !2303}
!2297 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !151, line: 38, baseType: !2298, size: 32)
!2298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2295, file: !151, line: 38, size: 32, elements: !2299)
!2299 = !{!2300, !2302}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2298, file: !151, line: 39, baseType: !2301, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2298, file: !151, line: 40, baseType: !2301, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !151, line: 42, baseType: !2304, size: 32, offset: 32)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2295, file: !151, line: 42, size: 32, elements: !2305)
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2304, file: !151, line: 43, baseType: !2301, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2304, file: !151, line: 44, baseType: !2301, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2291, file: !168, line: 62, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2310)
!2310 = !{!2311}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2309, file: !180, line: 50, baseType: !2312, size: 64)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2313, size: 64, elements: !185)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2288, file: !168, line: 68, baseType: !2315, size: 32, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2318)
!2318 = !{!2319}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2317, file: !146, line: 232, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2295)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2288, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2288, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2323 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !168, line: 90, baseType: !2324, size: 16, offset: 112)
!2324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !168, line: 90, size: 16, elements: !2325)
!2325 = !{!2326, !2331}
!2326 = !DIDerivedType(tag: DW_TAG_member, scope: !2324, file: !168, line: 91, baseType: !2327, size: 16)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2324, file: !168, line: 91, size: 16, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !168, line: 96, baseType: !200, size: 8)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2327, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2324, file: !168, line: 100, baseType: !126, size: 16)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2288, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2288, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2288, file: !168, line: 131, baseType: !2335, size: 192, offset: 192)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2336)
!2336 = !{!2337, !2338, !2344}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2335, file: !146, line: 245, baseType: !2294, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2335, file: !146, line: 246, baseType: !2339, size: 32, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{null, !2343}
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2335, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2285, file: !168, line: 250, baseType: !2346, size: 288, offset: 384)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2347)
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2346, file: !219, line: 26, baseType: !108, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2346, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2346, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2346, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2346, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2346, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2346, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2346, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2346, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2285, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2285, file: !168, line: 256, baseType: !2316, size: 64, offset: 704)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2285, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2285, file: !168, line: 300, baseType: !2361, size: 96, offset: 800)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2362)
!2362 = !{!2363, !2364, !2365}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2361, file: !168, line: 153, baseType: !22, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2361, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2361, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2285, file: !168, line: 325, baseType: !2367, size: 32, offset: 896)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2369)
!2369 = !{!2370, !2376, !2377}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2368, file: !142, line: 5074, baseType: !2371, size: 96)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2372)
!2372 = !{!2373, !2374, !2375}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2371, file: !245, line: 57, baseType: !248, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2371, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2371, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2368, file: !142, line: 5075, baseType: !2316, size: 64, offset: 96)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2368, file: !142, line: 5076, baseType: !2378, offset: 160)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2285, file: !168, line: 343, baseType: !2380, size: 64, offset: 928)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2381)
!2381 = !{!2382, !2383}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2380, file: !219, line: 63, baseType: !108, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2380, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2385, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2386, globals: !2388, splitDebugInlining: false, nameTableKind: None)
!2385 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2386 = !{!106, !121, !102, !190, !107, !2387, !24, !137, !283, !22, !108, !109}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2388 = !{!2277, !2389}
!2389 = !DIGlobalVariableExpression(var: !2390, expr: !DIExpression())
!2390 = distinct !DIGlobalVariable(name: "states_sz", scope: !2279, file: !2280, line: 279, type: !2391, isLocal: true, isDefinition: true)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1949, size: 256, elements: !1610)
!2392 = !{!2393, !2394, !2395, !2396, !2397, !2398, !2399}
!2393 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2279, file: !2280, line: 271, type: !2283)
!2394 = !DILocalVariable(name: "buf", arg: 2, scope: !2279, file: !2280, line: 271, type: !283)
!2395 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2279, file: !2280, line: 271, type: !137)
!2396 = !DILocalVariable(name: "off", scope: !2279, file: !2280, line: 273, type: !137)
!2397 = !DILocalVariable(name: "bit", scope: !2279, file: !2280, line: 274, type: !190)
!2398 = !DILocalVariable(name: "thread_state", scope: !2279, file: !2280, line: 275, type: !190)
!2399 = !DILocalVariable(name: "index", scope: !2400, file: !2280, line: 293, type: !190)
!2400 = distinct !DILexicalBlock(scope: !2279, file: !2280, line: 293, column: 2)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 256, elements: !1610)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "lock", scope: !2404, file: !2509, line: 47, type: !2502, isLocal: true, isDefinition: true)
!2404 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2405, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2406, globals: !2508, splitDebugInlining: false, nameTableKind: None)
!2405 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2406 = !{!136, !106, !107, !2407, !2422}
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2409)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2410)
!2410 = !{!2411, !2417}
!2411 = !DIDerivedType(tag: DW_TAG_member, scope: !2409, file: !151, line: 38, baseType: !2412, size: 32)
!2412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2409, file: !151, line: 38, size: 32, elements: !2413)
!2413 = !{!2414, !2416}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2412, file: !151, line: 39, baseType: !2415, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2412, file: !151, line: 40, baseType: !2415, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, scope: !2409, file: !151, line: 42, baseType: !2418, size: 32, offset: 32)
!2418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2409, file: !151, line: 42, size: 32, elements: !2419)
!2419 = !{!2420, !2421}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2418, file: !151, line: 43, baseType: !2415, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2418, file: !151, line: 44, baseType: !2415, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2424)
!2424 = !{!2425, !2469, !2481, !2482, !2483, !2484, !2490, !2503}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2423, file: !168, line: 247, baseType: !2426, size: 384)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2427)
!2427 = !{!2428, !2438, !2445, !2446, !2447, !2456, !2457, !2458}
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !168, line: 60, baseType: !2429, size: 64)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2426, file: !168, line: 60, size: 64, elements: !2430)
!2430 = !{!2431, !2432}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2429, file: !168, line: 61, baseType: !2408, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2429, file: !168, line: 62, baseType: !2433, size: 64)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2434)
!2434 = !{!2435}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2433, file: !180, line: 50, baseType: !2436, size: 64)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2437, size: 64, elements: !185)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2426, file: !168, line: 68, baseType: !2439, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2441, file: !146, line: 232, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2409)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2426, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2426, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !168, line: 90, baseType: !2448, size: 16, offset: 112)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2426, file: !168, line: 90, size: 16, elements: !2449)
!2449 = !{!2450, !2455}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !168, line: 91, baseType: !2451, size: 16)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2448, file: !168, line: 91, size: 16, elements: !2452)
!2452 = !{!2453, !2454}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2451, file: !168, line: 96, baseType: !200, size: 8)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2451, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2448, file: !168, line: 100, baseType: !126, size: 16)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2426, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2426, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2426, file: !168, line: 131, baseType: !2459, size: 192, offset: 192)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2460)
!2460 = !{!2461, !2462, !2468}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2459, file: !146, line: 245, baseType: !2408, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2459, file: !146, line: 246, baseType: !2463, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2464)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{null, !2467}
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2459, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2423, file: !168, line: 250, baseType: !2470, size: 288, offset: 384)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2471)
!2471 = !{!2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2470, file: !219, line: 26, baseType: !108, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2470, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2470, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2470, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2470, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2470, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2470, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2470, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2470, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2423, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2423, file: !168, line: 256, baseType: !2440, size: 64, offset: 704)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2423, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2423, file: !168, line: 300, baseType: !2485, size: 96, offset: 800)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2486)
!2486 = !{!2487, !2488, !2489}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2485, file: !168, line: 153, baseType: !22, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2485, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2485, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2423, file: !168, line: 325, baseType: !2491, size: 32, offset: 896)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2493)
!2493 = !{!2494, !2500, !2501}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2492, file: !142, line: 5074, baseType: !2495, size: 96)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2496)
!2496 = !{!2497, !2498, !2499}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2495, file: !245, line: 57, baseType: !248, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2495, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2495, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2492, file: !142, line: 5075, baseType: !2440, size: 64, offset: 96)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2492, file: !142, line: 5076, baseType: !2502, offset: 160)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2423, file: !168, line: 343, baseType: !2504, size: 64, offset: 928)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2505)
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2504, file: !219, line: 63, baseType: !108, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2504, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2508 = !{!2402}
!2509 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2512, file: !2620, line: 56, type: !2609, isLocal: false, isDefinition: true)
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2514, globals: !2617, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2514 = !{!2515, !283, !106, !2615, !401, !102, !334, !107, !108, !109, !2616}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !2517)
!2517 = !{!2518, !2576, !2588, !2589, !2590, !2591, !2597, !2610}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2516, file: !168, line: 247, baseType: !2519, size: 384)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !2520)
!2520 = !{!2521, !2545, !2552, !2553, !2554, !2563, !2564, !2565}
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !168, line: 60, baseType: !2522, size: 64)
!2522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !168, line: 60, size: 64, elements: !2523)
!2523 = !{!2524, !2539}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2522, file: !168, line: 61, baseType: !2525, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2526)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2527)
!2527 = !{!2528, !2534}
!2528 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !151, line: 38, baseType: !2529, size: 32)
!2529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !151, line: 38, size: 32, elements: !2530)
!2530 = !{!2531, !2533}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2529, file: !151, line: 39, baseType: !2532, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2529, file: !151, line: 40, baseType: !2532, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, scope: !2526, file: !151, line: 42, baseType: !2535, size: 32, offset: 32)
!2535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2526, file: !151, line: 42, size: 32, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2535, file: !151, line: 43, baseType: !2532, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2535, file: !151, line: 44, baseType: !2532, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2522, file: !168, line: 62, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !2541)
!2541 = !{!2542}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2540, file: !180, line: 50, baseType: !2543, size: 64)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2544, size: 64, elements: !185)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2519, file: !168, line: 68, baseType: !2546, size: 32, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !2548)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !2549)
!2549 = !{!2550}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2548, file: !146, line: 232, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2526)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2519, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2519, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!2554 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !168, line: 90, baseType: !2555, size: 16, offset: 112)
!2555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !168, line: 90, size: 16, elements: !2556)
!2556 = !{!2557, !2562}
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !2555, file: !168, line: 91, baseType: !2558, size: 16)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2555, file: !168, line: 91, size: 16, elements: !2559)
!2559 = !{!2560, !2561}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2558, file: !168, line: 96, baseType: !200, size: 8)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2558, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2555, file: !168, line: 100, baseType: !126, size: 16)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2519, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2519, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2519, file: !168, line: 131, baseType: !2566, size: 192, offset: 192)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2567)
!2567 = !{!2568, !2569, !2575}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2566, file: !146, line: 245, baseType: !2525, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2566, file: !146, line: 246, baseType: !2570, size: 32, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2571)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = !DISubroutineType(types: !2573)
!2573 = !{null, !2574}
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2566, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2516, file: !168, line: 250, baseType: !2577, size: 288, offset: 384)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !2578)
!2578 = !{!2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2577, file: !219, line: 26, baseType: !108, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2577, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2577, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2577, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2577, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2577, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2577, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2577, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2577, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2516, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2516, file: !168, line: 256, baseType: !2547, size: 64, offset: 704)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2516, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2516, file: !168, line: 300, baseType: !2592, size: 96, offset: 800)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !2593)
!2593 = !{!2594, !2595, !2596}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2592, file: !168, line: 153, baseType: !22, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2592, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2592, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2516, file: !168, line: 325, baseType: !2598, size: 32, offset: 896)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 32)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !2600)
!2600 = !{!2601, !2607, !2608}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2599, file: !142, line: 5074, baseType: !2602, size: 96)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !2603)
!2603 = !{!2604, !2605, !2606}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2602, file: !245, line: 57, baseType: !248, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2602, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2602, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2599, file: !142, line: 5075, baseType: !2547, size: 64, offset: 96)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2599, file: !142, line: 5076, baseType: !2609, offset: 160)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2516, file: !168, line: 343, baseType: !2611, size: 64, offset: 928)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !2612)
!2612 = !{!2613, !2614}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2611, file: !219, line: 63, baseType: !108, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2611, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 32)
!2617 = !{!2510, !2618, !2621, !2623}
!2618 = !DIGlobalVariableExpression(var: !2619, expr: !DIExpression())
!2619 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2512, file: !2620, line: 404, type: !107, isLocal: true, isDefinition: true)
!2620 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2621 = !DIGlobalVariableExpression(var: !2622, expr: !DIExpression())
!2622 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2512, file: !2620, line: 405, type: !107, isLocal: true, isDefinition: true)
!2623 = !DIGlobalVariableExpression(var: !2624, expr: !DIExpression())
!2624 = distinct !DIGlobalVariable(name: "pending_current", scope: !2512, file: !2620, line: 425, type: !2515, isLocal: true, isDefinition: true)
!2625 = !DIGlobalVariableExpression(var: !2626, expr: !DIExpression())
!2626 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2627, file: !2657, line: 15, type: !109, isLocal: true, isDefinition: true)
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2629, globals: !2654, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2629 = !{!102, !106, !334, !108, !109, !107, !2630, !283, !104}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !2632)
!2632 = !{!2633, !2648, !2653}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2631, file: !146, line: 245, baseType: !2634, size: 64)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2636)
!2636 = !{!2637, !2643}
!2637 = !DIDerivedType(tag: DW_TAG_member, scope: !2635, file: !151, line: 38, baseType: !2638, size: 32)
!2638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2635, file: !151, line: 38, size: 32, elements: !2639)
!2639 = !{!2640, !2642}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2638, file: !151, line: 39, baseType: !2641, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2638, file: !151, line: 40, baseType: !2641, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, scope: !2635, file: !151, line: 42, baseType: !2644, size: 32, offset: 32)
!2644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2635, file: !151, line: 42, size: 32, elements: !2645)
!2645 = !{!2646, !2647}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2644, file: !151, line: 43, baseType: !2641, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2644, file: !151, line: 44, baseType: !2641, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2631, file: !146, line: 246, baseType: !2649, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !2650)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 32)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{null, !2630}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2631, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!2654 = !{!2625, !2655, !2659, !2661}
!2655 = !DIGlobalVariableExpression(var: !2656, expr: !DIExpression())
!2656 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2627, file: !2657, line: 19, type: !2658, isLocal: true, isDefinition: true)
!2657 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!2659 = !DIGlobalVariableExpression(var: !2660, expr: !DIExpression())
!2660 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2627, file: !2657, line: 25, type: !107, isLocal: true, isDefinition: true)
!2661 = !DIGlobalVariableExpression(var: !2662, expr: !DIExpression())
!2662 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2627, file: !2657, line: 17, type: !2663, isLocal: true, isDefinition: true)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2635)
!2664 = !DIGlobalVariableExpression(var: !2665, expr: !DIExpression())
!2665 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2666, file: !2685, line: 55, type: !2686, isLocal: true, isDefinition: true, align: 32)
!2666 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2667, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2668, globals: !2684, splitDebugInlining: false, nameTableKind: None)
!2667 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2668 = !{!106, !102, !107, !2669}
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 32)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !2671)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !2672)
!2672 = !{!2673, !2679}
!2673 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !151, line: 38, baseType: !2674, size: 32)
!2674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !151, line: 38, size: 32, elements: !2675)
!2675 = !{!2676, !2678}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2674, file: !151, line: 39, baseType: !2677, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2674, file: !151, line: 40, baseType: !2677, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !151, line: 42, baseType: !2680, size: 32, offset: 32)
!2680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !151, line: 42, size: 32, elements: !2681)
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2680, file: !151, line: 43, baseType: !2677, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2680, file: !151, line: 44, baseType: !2677, size: 32)
!2684 = !{!2664}
!2685 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2687)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !442, line: 51, size: 64, elements: !2688)
!2688 = !{!2689, !2696}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2687, file: !442, line: 60, baseType: !2690, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!107, !2693}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2695)
!2695 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !442, line: 48, flags: DIFlagFwdDecl)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2687, file: !442, line: 65, baseType: !2693, size: 32, offset: 32)
!2697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2699 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2700, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2700 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2703, retainedTypes: !2711, splitDebugInlining: false, nameTableKind: None)
!2702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2703 = !{!30, !2704}
!2704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2705, line: 54, baseType: !32, size: 32, elements: !2706)
!2705 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2706 = !{!2707, !2708, !2709, !2710}
!2707 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2708 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2709 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2710 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2711 = !{!106, !137, !401, !24, !2712, !22, !2718, !107, !1020, !2733}
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2705, line: 58, baseType: !2714)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2705, line: 58, size: 64, elements: !2715)
!2715 = !{!2716}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2714, file: !2705, line: 58, baseType: !2717, size: 64)
!2717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 64, elements: !1610)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2705, line: 68, size: 128, elements: !2720)
!2720 = !{!2721, !2724, !2725, !2726}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2719, file: !2705, line: 69, baseType: !2722, size: 64)
!2722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2723, size: 64, elements: !185)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2705, line: 61, baseType: !108)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2719, file: !2705, line: 70, baseType: !2723, size: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2719, file: !2705, line: 71, baseType: !108, size: 32, offset: 96)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2719, file: !2705, line: 77, baseType: !2727, offset: 128)
!2727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2728, elements: !2731)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2705, line: 64, size: 32, elements: !2729)
!2729 = !{!2730}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2728, file: !2705, line: 65, baseType: !2723, size: 32)
!2731 = !{!2732}
!2732 = !DISubrange(count: 0)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!2734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2736, retainedTypes: !2756, splitDebugInlining: false, nameTableKind: None)
!2735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2736 = !{!2737, !2745}
!2737 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2738, line: 69, baseType: !32, size: 32, elements: !2739)
!2738 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2739 = !{!2740, !2741, !2742, !2743, !2744}
!2740 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2741 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2742 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2743 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2744 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2738, line: 56, baseType: !32, size: 32, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755}
!2747 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2748 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2749 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2750 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2751 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2752 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2753 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2754 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2755 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2756 = !{!107, !2737, !2745, !2757, !201, !468, !2759, !2760, !191, !127, !121, !137, !106, !22, !32, !396, !2762, !2763, !398, !397, !105, !399, !2758, !2764, !2765, !2766, !2767}
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2738, line: 31, baseType: !2758)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !105)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !138, line: 329, baseType: !32)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2738, line: 32, baseType: !2761)
!2761 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !138, line: 145, baseType: !107)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 32)
!2768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2772, splitDebugInlining: false, nameTableKind: None)
!2771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2772 = !{!121, !191, !107, !32}
!2773 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2774, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2775, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2774 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2775 = !{!2776, !30}
!2776 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2777, line: 27, baseType: !32, size: 32, elements: !2778)
!2777 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2778 = !{!2779, !2780, !2781, !2782, !2783}
!2779 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2780 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2781 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2782 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2783 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2786, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2785 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2786 = !{!725, !2776, !30}
!2787 = !{!920, !2788, !106, !107, !334, !108, !190, !2805}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2790, file: !644, line: 413, baseType: !1770, size: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2790, file: !644, line: 414, baseType: !1772, size: 768, offset: 256)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2790, file: !644, line: 415, baseType: !1770, size: 256, offset: 1024)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2790, file: !644, line: 416, baseType: !1772, size: 768, offset: 1280)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2790, file: !644, line: 417, baseType: !1770, size: 256, offset: 2048)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2790, file: !644, line: 418, baseType: !1772, size: 768, offset: 2304)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2790, file: !644, line: 419, baseType: !1770, size: 256, offset: 3072)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2790, file: !644, line: 420, baseType: !1772, size: 768, offset: 3328)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2790, file: !644, line: 421, baseType: !1770, size: 256, offset: 4096)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2790, file: !644, line: 422, baseType: !1783, size: 1792, offset: 4352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2790, file: !644, line: 423, baseType: !1787, size: 1920, offset: 6144)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2790, file: !644, line: 424, baseType: !1792, size: 20608, offset: 8064)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2790, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2807)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2808)
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2807, file: !644, line: 447, baseType: !648, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2807, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2807, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2807, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2807, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2807, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2807, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2807, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2807, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2807, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2807, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2807, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2807, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2807, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2807, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2807, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2807, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2807, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2807, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2807, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2807, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!2831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2832 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2833, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2834, splitDebugInlining: false, nameTableKind: None)
!2833 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2834 = !{!106, !107, !22, !2835}
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2837)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2838)
!2838 = !{!2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2837, file: !644, line: 447, baseType: !648, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2837, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2837, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2837, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2837, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2837, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2837, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2837, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2837, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2837, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2837, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2837, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2837, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2837, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2837, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2837, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2837, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2837, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2837, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2837, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2837, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2862, splitDebugInlining: false, nameTableKind: None)
!2861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2862 = !{!2863, !106, !107}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2865)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2865, file: !644, line: 447, baseType: !648, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2865, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2865, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2865, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2865, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2865, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2865, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2865, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2865, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2865, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2865, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2865, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2865, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2865, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2865, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2865, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2865, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2865, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2865, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2865, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2865, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2888 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2889, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2890, splitDebugInlining: false, nameTableKind: None)
!2889 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2890 = !{!2891, !108, !106, !107}
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2893, line: 98, size: 256, elements: !2894)
!2893 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2894 = !{!2895, !2900, !2905, !2910, !2915, !2920, !2925, !2930}
!2895 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2893, line: 99, baseType: !2896, size: 32)
!2896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2893, line: 99, size: 32, elements: !2897)
!2897 = !{!2898, !2899}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2896, file: !2893, line: 99, baseType: !108, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2896, file: !2893, line: 99, baseType: !108, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2893, line: 100, baseType: !2901, size: 32, offset: 32)
!2901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2893, line: 100, size: 32, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2901, file: !2893, line: 100, baseType: !108, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2901, file: !2893, line: 100, baseType: !108, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2893, line: 101, baseType: !2906, size: 32, offset: 64)
!2906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2893, line: 101, size: 32, elements: !2907)
!2907 = !{!2908, !2909}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2906, file: !2893, line: 101, baseType: !108, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2906, file: !2893, line: 101, baseType: !108, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2893, line: 102, baseType: !2911, size: 32, offset: 96)
!2911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2893, line: 102, size: 32, elements: !2912)
!2912 = !{!2913, !2914}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2911, file: !2893, line: 102, baseType: !108, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2911, file: !2893, line: 102, baseType: !108, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2893, line: 103, baseType: !2916, size: 32, offset: 128)
!2916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2893, line: 103, size: 32, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2916, file: !2893, line: 103, baseType: !108, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2916, file: !2893, line: 103, baseType: !108, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2893, line: 104, baseType: !2921, size: 32, offset: 160)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2893, line: 104, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2921, file: !2893, line: 104, baseType: !108, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2921, file: !2893, line: 104, baseType: !108, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2892, file: !2893, line: 105, baseType: !2926, size: 32, offset: 192)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2892, file: !2893, line: 105, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2926, file: !2893, line: 105, baseType: !108, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2926, file: !2893, line: 105, baseType: !108, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2892, file: !2893, line: 106, baseType: !108, size: 32, offset: 224)
!2931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2932, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2775, retainedTypes: !2933, splitDebugInlining: false, nameTableKind: None)
!2932 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!2933 = !{!2934, !106, !107, !2959, !2733, !108}
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !2937)
!2937 = !{!2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2936, file: !644, line: 447, baseType: !648, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2936, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2936, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2936, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2936, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2936, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2936, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2936, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2936, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2936, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2936, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2936, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2936, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2936, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2936, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2936, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2936, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2936, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2936, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2936, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2936, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2893, line: 141, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2893, line: 97, size: 256, elements: !2962)
!2962 = !{!2963}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2961, file: !2893, line: 107, baseType: !2964, size: 256)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2893, line: 98, size: 256, elements: !2965)
!2965 = !{!2966, !2971, !2976, !2981, !2986, !2991, !2996, !3001}
!2966 = !DIDerivedType(tag: DW_TAG_member, scope: !2964, file: !2893, line: 99, baseType: !2967, size: 32)
!2967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2964, file: !2893, line: 99, size: 32, elements: !2968)
!2968 = !{!2969, !2970}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2967, file: !2893, line: 99, baseType: !108, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2967, file: !2893, line: 99, baseType: !108, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, scope: !2964, file: !2893, line: 100, baseType: !2972, size: 32, offset: 32)
!2972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2964, file: !2893, line: 100, size: 32, elements: !2973)
!2973 = !{!2974, !2975}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2972, file: !2893, line: 100, baseType: !108, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2972, file: !2893, line: 100, baseType: !108, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, scope: !2964, file: !2893, line: 101, baseType: !2977, size: 32, offset: 64)
!2977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2964, file: !2893, line: 101, size: 32, elements: !2978)
!2978 = !{!2979, !2980}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2977, file: !2893, line: 101, baseType: !108, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2977, file: !2893, line: 101, baseType: !108, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, scope: !2964, file: !2893, line: 102, baseType: !2982, size: 32, offset: 96)
!2982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2964, file: !2893, line: 102, size: 32, elements: !2983)
!2983 = !{!2984, !2985}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2982, file: !2893, line: 102, baseType: !108, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2982, file: !2893, line: 102, baseType: !108, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, scope: !2964, file: !2893, line: 103, baseType: !2987, size: 32, offset: 128)
!2987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2964, file: !2893, line: 103, size: 32, elements: !2988)
!2988 = !{!2989, !2990}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2987, file: !2893, line: 103, baseType: !108, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2987, file: !2893, line: 103, baseType: !108, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, scope: !2964, file: !2893, line: 104, baseType: !2992, size: 32, offset: 160)
!2992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2964, file: !2893, line: 104, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2992, file: !2893, line: 104, baseType: !108, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2992, file: !2893, line: 104, baseType: !108, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2964, file: !2893, line: 105, baseType: !2997, size: 32, offset: 192)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2964, file: !2893, line: 105, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2997, file: !2893, line: 105, baseType: !108, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2997, file: !2893, line: 105, baseType: !108, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2964, file: !2893, line: 106, baseType: !108, size: 32, offset: 224)
!3002 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3003, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1755, retainedTypes: !3004, splitDebugInlining: false, nameTableKind: None)
!3003 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3004 = !{!920, !334, !190, !108, !3005, !3022}
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 426, baseType: !3007)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 411, size: 28704, elements: !3008)
!3008 = !{!3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3007, file: !644, line: 413, baseType: !1770, size: 256)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3007, file: !644, line: 414, baseType: !1772, size: 768, offset: 256)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3007, file: !644, line: 415, baseType: !1770, size: 256, offset: 1024)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3007, file: !644, line: 416, baseType: !1772, size: 768, offset: 1280)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3007, file: !644, line: 417, baseType: !1770, size: 256, offset: 2048)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3007, file: !644, line: 418, baseType: !1772, size: 768, offset: 2304)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3007, file: !644, line: 419, baseType: !1770, size: 256, offset: 3072)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3007, file: !644, line: 420, baseType: !1772, size: 768, offset: 3328)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3007, file: !644, line: 421, baseType: !1770, size: 256, offset: 4096)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3007, file: !644, line: 422, baseType: !1783, size: 1792, offset: 4352)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3007, file: !644, line: 423, baseType: !1787, size: 1920, offset: 6144)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3007, file: !644, line: 424, baseType: !1792, size: 20608, offset: 8064)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3007, file: !644, line: 425, baseType: !431, size: 32, offset: 28672)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !3024)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !3025)
!3025 = !{!3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3024, file: !644, line: 447, baseType: !648, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3024, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3024, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3024, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3024, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3024, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3024, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3024, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3024, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3024, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3024, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3024, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3024, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3024, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3024, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3024, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3024, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3024, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3024, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3024, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3024, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!3047 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3048, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3049, splitDebugInlining: false, nameTableKind: None)
!3048 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3049 = !{!3050, !106, !107}
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 468, baseType: !3052)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 445, size: 1120, elements: !3053)
!3053 = !{!3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3052, file: !644, line: 447, baseType: !648, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3052, file: !644, line: 448, baseType: !431, size: 32, offset: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3052, file: !644, line: 449, baseType: !431, size: 32, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3052, file: !644, line: 450, baseType: !431, size: 32, offset: 96)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3052, file: !644, line: 451, baseType: !431, size: 32, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3052, file: !644, line: 452, baseType: !431, size: 32, offset: 160)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3052, file: !644, line: 453, baseType: !1807, size: 96, offset: 192)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3052, file: !644, line: 454, baseType: !431, size: 32, offset: 288)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3052, file: !644, line: 455, baseType: !431, size: 32, offset: 320)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3052, file: !644, line: 456, baseType: !431, size: 32, offset: 352)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3052, file: !644, line: 457, baseType: !431, size: 32, offset: 384)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3052, file: !644, line: 458, baseType: !431, size: 32, offset: 416)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3052, file: !644, line: 459, baseType: !431, size: 32, offset: 448)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3052, file: !644, line: 460, baseType: !431, size: 32, offset: 480)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3052, file: !644, line: 461, baseType: !1818, size: 64, offset: 512)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3052, file: !644, line: 462, baseType: !648, size: 32, offset: 576)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3052, file: !644, line: 463, baseType: !648, size: 32, offset: 608)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3052, file: !644, line: 464, baseType: !1822, size: 128, offset: 640)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3052, file: !644, line: 465, baseType: !1824, size: 160, offset: 768)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3052, file: !644, line: 466, baseType: !1826, size: 160, offset: 928)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3052, file: !644, line: 467, baseType: !431, size: 32, offset: 1088)
!3075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3077, splitDebugInlining: false, nameTableKind: None)
!3076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3077 = !{!123, !283, !137, !1125, !3078, !191, !106}
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!3080 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3081, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3081 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus_iterable_sections.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3084, splitDebugInlining: false, nameTableKind: None)
!3083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 586, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 550, size: 1216, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3087, file: !427, line: 552, baseType: !431, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3087, file: !427, line: 553, baseType: !431, size: 32, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3087, file: !427, line: 554, baseType: !431, size: 32, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3087, file: !427, line: 555, baseType: !431, size: 32, offset: 96)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3087, file: !427, line: 556, baseType: !431, size: 32, offset: 128)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3087, file: !427, line: 557, baseType: !431, size: 32, offset: 160)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3087, file: !427, line: 558, baseType: !431, size: 32, offset: 192)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3087, file: !427, line: 559, baseType: !108, size: 32, offset: 224)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3087, file: !427, line: 560, baseType: !431, size: 32, offset: 256)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3087, file: !427, line: 561, baseType: !431, size: 32, offset: 288)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3087, file: !427, line: 562, baseType: !990, size: 64, offset: 320)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3087, file: !427, line: 563, baseType: !431, size: 32, offset: 384)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3087, file: !427, line: 564, baseType: !431, size: 32, offset: 416)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3087, file: !427, line: 565, baseType: !431, size: 32, offset: 448)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3087, file: !427, line: 566, baseType: !108, size: 32, offset: 480)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3087, file: !427, line: 567, baseType: !431, size: 32, offset: 512)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3087, file: !427, line: 568, baseType: !431, size: 32, offset: 544)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3087, file: !427, line: 569, baseType: !990, size: 64, offset: 576)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3087, file: !427, line: 570, baseType: !431, size: 32, offset: 640)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3087, file: !427, line: 571, baseType: !431, size: 32, offset: 672)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3087, file: !427, line: 572, baseType: !431, size: 32, offset: 704)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3087, file: !427, line: 573, baseType: !108, size: 32, offset: 736)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3087, file: !427, line: 574, baseType: !431, size: 32, offset: 768)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3087, file: !427, line: 575, baseType: !431, size: 32, offset: 800)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3087, file: !427, line: 576, baseType: !990, size: 64, offset: 832)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3087, file: !427, line: 577, baseType: !431, size: 32, offset: 896)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3087, file: !427, line: 578, baseType: !431, size: 32, offset: 928)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3087, file: !427, line: 579, baseType: !990, size: 64, offset: 960)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3087, file: !427, line: 580, baseType: !431, size: 32, offset: 1024)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3087, file: !427, line: 581, baseType: !431, size: 32, offset: 1056)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3087, file: !427, line: 582, baseType: !431, size: 32, offset: 1088)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3087, file: !427, line: 583, baseType: !431, size: 32, offset: 1120)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3087, file: !427, line: 584, baseType: !431, size: 32, offset: 1152)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3087, file: !427, line: 585, baseType: !431, size: 32, offset: 1184)
!3123 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3124, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3124 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3126, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3127, retainedTypes: !3143, splitDebugInlining: false, nameTableKind: None)
!3126 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3127 = !{!3128, !3135, !3139}
!3128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3129, line: 38, baseType: !32, size: 32, elements: !3130)
!3129 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3130 = !{!3131, !3132, !3133, !3134}
!3131 = !DIEnumerator(name: "HAL_OK", value: 0)
!3132 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3133 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3134 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3135 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 184, baseType: !32, size: 32, elements: !3136)
!3136 = !{!3137, !3138}
!3137 = !DIEnumerator(name: "RESET", value: 0)
!3138 = !DIEnumerator(name: "SET", value: 1)
!3139 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !963, line: 190, baseType: !32, size: 32, elements: !3140)
!3140 = !{!3141, !3142}
!3141 = !DIEnumerator(name: "DISABLE", value: 0)
!3142 = !DIEnumerator(name: "ENABLE", value: 1)
!3143 = !{!3144, !108, !3182, !1604, !190, !109, !106}
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 586, baseType: !3146)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 550, size: 1216, elements: !3147)
!3147 = !{!3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3146, file: !427, line: 552, baseType: !431, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3146, file: !427, line: 553, baseType: !431, size: 32, offset: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3146, file: !427, line: 554, baseType: !431, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3146, file: !427, line: 555, baseType: !431, size: 32, offset: 96)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3146, file: !427, line: 556, baseType: !431, size: 32, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3146, file: !427, line: 557, baseType: !431, size: 32, offset: 160)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3146, file: !427, line: 558, baseType: !431, size: 32, offset: 192)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3146, file: !427, line: 559, baseType: !108, size: 32, offset: 224)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3146, file: !427, line: 560, baseType: !431, size: 32, offset: 256)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3146, file: !427, line: 561, baseType: !431, size: 32, offset: 288)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3146, file: !427, line: 562, baseType: !990, size: 64, offset: 320)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3146, file: !427, line: 563, baseType: !431, size: 32, offset: 384)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3146, file: !427, line: 564, baseType: !431, size: 32, offset: 416)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3146, file: !427, line: 565, baseType: !431, size: 32, offset: 448)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3146, file: !427, line: 566, baseType: !108, size: 32, offset: 480)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3146, file: !427, line: 567, baseType: !431, size: 32, offset: 512)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3146, file: !427, line: 568, baseType: !431, size: 32, offset: 544)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3146, file: !427, line: 569, baseType: !990, size: 64, offset: 576)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3146, file: !427, line: 570, baseType: !431, size: 32, offset: 640)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3146, file: !427, line: 571, baseType: !431, size: 32, offset: 672)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3146, file: !427, line: 572, baseType: !431, size: 32, offset: 704)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3146, file: !427, line: 573, baseType: !108, size: 32, offset: 736)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3146, file: !427, line: 574, baseType: !431, size: 32, offset: 768)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3146, file: !427, line: 575, baseType: !431, size: 32, offset: 800)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3146, file: !427, line: 576, baseType: !990, size: 64, offset: 832)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3146, file: !427, line: 577, baseType: !431, size: 32, offset: 896)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3146, file: !427, line: 578, baseType: !431, size: 32, offset: 928)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3146, file: !427, line: 579, baseType: !990, size: 64, offset: 960)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3146, file: !427, line: 580, baseType: !431, size: 32, offset: 1024)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3146, file: !427, line: 581, baseType: !431, size: 32, offset: 1056)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3146, file: !427, line: 582, baseType: !431, size: 32, offset: 1088)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3146, file: !427, line: 583, baseType: !431, size: 32, offset: 1120)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3146, file: !427, line: 584, baseType: !431, size: 32, offset: 1152)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3146, file: !427, line: 585, baseType: !431, size: 32, offset: 1184)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 32)
!3183 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !427, line: 544, baseType: !3184)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 540, size: 64, elements: !3185)
!3185 = !{!3186, !3187}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3184, file: !427, line: 542, baseType: !431, size: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3184, file: !427, line: 543, baseType: !431, size: 32, offset: 32)
!3188 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3189, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3190, retainedTypes: !3191, splitDebugInlining: false, nameTableKind: None)
!3189 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3190 = !{!962}
!3191 = !{!3192, !108, !3200, !3206, !3217}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 770, baseType: !3194)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 764, size: 128, elements: !3195)
!3195 = !{!3196, !3197, !3198, !3199}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3194, file: !644, line: 766, baseType: !431, size: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3194, file: !644, line: 767, baseType: !431, size: 32, offset: 32)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3194, file: !644, line: 768, baseType: !431, size: 32, offset: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3194, file: !644, line: 769, baseType: !648, size: 32, offset: 96)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !427, line: 544, baseType: !3202)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 540, size: 64, elements: !3203)
!3203 = !{!3204, !3205}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3202, file: !427, line: 542, baseType: !431, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3202, file: !427, line: 543, baseType: !431, size: 32, offset: 32)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !427, line: 407, baseType: !3208)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 398, size: 224, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3214, !3215, !3216}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3208, file: !427, line: 400, baseType: !431, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3208, file: !427, line: 401, baseType: !431, size: 32, offset: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3208, file: !427, line: 402, baseType: !431, size: 32, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3208, file: !427, line: 403, baseType: !431, size: 32, offset: 96)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3208, file: !427, line: 404, baseType: !431, size: 32, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3208, file: !427, line: 405, baseType: !431, size: 32, offset: 160)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3208, file: !427, line: 406, baseType: !431, size: 32, offset: 192)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !427, line: 586, baseType: !3219)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !427, line: 550, size: 1216, elements: !3220)
!3220 = !{!3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3219, file: !427, line: 552, baseType: !431, size: 32)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3219, file: !427, line: 553, baseType: !431, size: 32, offset: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3219, file: !427, line: 554, baseType: !431, size: 32, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3219, file: !427, line: 555, baseType: !431, size: 32, offset: 96)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3219, file: !427, line: 556, baseType: !431, size: 32, offset: 128)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3219, file: !427, line: 557, baseType: !431, size: 32, offset: 160)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3219, file: !427, line: 558, baseType: !431, size: 32, offset: 192)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3219, file: !427, line: 559, baseType: !108, size: 32, offset: 224)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3219, file: !427, line: 560, baseType: !431, size: 32, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3219, file: !427, line: 561, baseType: !431, size: 32, offset: 288)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3219, file: !427, line: 562, baseType: !990, size: 64, offset: 320)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3219, file: !427, line: 563, baseType: !431, size: 32, offset: 384)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3219, file: !427, line: 564, baseType: !431, size: 32, offset: 416)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3219, file: !427, line: 565, baseType: !431, size: 32, offset: 448)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3219, file: !427, line: 566, baseType: !108, size: 32, offset: 480)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3219, file: !427, line: 567, baseType: !431, size: 32, offset: 512)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3219, file: !427, line: 568, baseType: !431, size: 32, offset: 544)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3219, file: !427, line: 569, baseType: !990, size: 64, offset: 576)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3219, file: !427, line: 570, baseType: !431, size: 32, offset: 640)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3219, file: !427, line: 571, baseType: !431, size: 32, offset: 672)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3219, file: !427, line: 572, baseType: !431, size: 32, offset: 704)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3219, file: !427, line: 573, baseType: !108, size: 32, offset: 736)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3219, file: !427, line: 574, baseType: !431, size: 32, offset: 768)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3219, file: !427, line: 575, baseType: !431, size: 32, offset: 800)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3219, file: !427, line: 576, baseType: !990, size: 64, offset: 832)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3219, file: !427, line: 577, baseType: !431, size: 32, offset: 896)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3219, file: !427, line: 578, baseType: !431, size: 32, offset: 928)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3219, file: !427, line: 579, baseType: !990, size: 64, offset: 960)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3219, file: !427, line: 580, baseType: !431, size: 32, offset: 1024)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3219, file: !427, line: 581, baseType: !431, size: 32, offset: 1056)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3219, file: !427, line: 582, baseType: !431, size: 32, offset: 1088)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3219, file: !427, line: 583, baseType: !431, size: 32, offset: 1120)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3219, file: !427, line: 584, baseType: !431, size: 32, offset: 1152)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3219, file: !427, line: 585, baseType: !431, size: 32, offset: 1184)
!3255 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3256, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3257, splitDebugInlining: false, nameTableKind: None)
!3256 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3257 = !{!106, !137}
!3258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3259, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3260, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3259 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3260 = !{!3261, !3268, !30}
!3261 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3262, line: 14, baseType: !32, size: 32, elements: !3263)
!3262 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3263 = !{!3264, !3265, !3266, !3267}
!3264 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3265 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3266 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3267 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3268 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3262, line: 42, baseType: !32, size: 32, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273, !3274, !3275}
!3270 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3271 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3272 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3273 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3274 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3275 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3277, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3277 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3279, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3280, splitDebugInlining: false, nameTableKind: None)
!3279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3280 = !{!106, !107, !3281, !3296}
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !3283)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !3284)
!3284 = !{!3285, !3291}
!3285 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !151, line: 38, baseType: !3286, size: 32)
!3286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3283, file: !151, line: 38, size: 32, elements: !3287)
!3287 = !{!3288, !3290}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3286, file: !151, line: 39, baseType: !3289, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3286, file: !151, line: 40, baseType: !3289, size: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !151, line: 42, baseType: !3292, size: 32, offset: 32)
!3292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3283, file: !151, line: 42, size: 32, elements: !3293)
!3293 = !{!3294, !3295}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3292, file: !151, line: 43, baseType: !3289, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3292, file: !151, line: 44, baseType: !3289, size: 32)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 32)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !3298)
!3298 = !{!3299, !3343, !3355, !3356, !3357, !3358, !3364, !3377}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3297, file: !168, line: 247, baseType: !3300, size: 384)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !3301)
!3301 = !{!3302, !3312, !3319, !3320, !3321, !3330, !3331, !3332}
!3302 = !DIDerivedType(tag: DW_TAG_member, scope: !3300, file: !168, line: 60, baseType: !3303, size: 64)
!3303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3300, file: !168, line: 60, size: 64, elements: !3304)
!3304 = !{!3305, !3306}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3303, file: !168, line: 61, baseType: !3282, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3303, file: !168, line: 62, baseType: !3307, size: 64)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !3308)
!3308 = !{!3309}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3307, file: !180, line: 50, baseType: !3310, size: 64)
!3310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3311, size: 64, elements: !185)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3300, file: !168, line: 68, baseType: !3313, size: 32, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !3315)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !3316)
!3316 = !{!3317}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3315, file: !146, line: 232, baseType: !3318, size: 64)
!3318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !3283)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3300, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3300, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!3321 = !DIDerivedType(tag: DW_TAG_member, scope: !3300, file: !168, line: 90, baseType: !3322, size: 16, offset: 112)
!3322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3300, file: !168, line: 90, size: 16, elements: !3323)
!3323 = !{!3324, !3329}
!3324 = !DIDerivedType(tag: DW_TAG_member, scope: !3322, file: !168, line: 91, baseType: !3325, size: 16)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3322, file: !168, line: 91, size: 16, elements: !3326)
!3326 = !{!3327, !3328}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3325, file: !168, line: 96, baseType: !200, size: 8)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3325, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3322, file: !168, line: 100, baseType: !126, size: 16)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3300, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3300, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3300, file: !168, line: 131, baseType: !3333, size: 192, offset: 192)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !3334)
!3334 = !{!3335, !3336, !3342}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3333, file: !146, line: 245, baseType: !3282, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3333, file: !146, line: 246, baseType: !3337, size: 32, offset: 64)
!3337 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !3338)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 32)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{null, !3341}
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3333, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3297, file: !168, line: 250, baseType: !3344, size: 288, offset: 384)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !3345)
!3345 = !{!3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3344, file: !219, line: 26, baseType: !108, size: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3344, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3344, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3344, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3344, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3344, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3344, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3344, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3344, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3297, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3297, file: !168, line: 256, baseType: !3314, size: 64, offset: 704)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3297, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3297, file: !168, line: 300, baseType: !3359, size: 96, offset: 800)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !3360)
!3360 = !{!3361, !3362, !3363}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3359, file: !168, line: 153, baseType: !22, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3359, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3359, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3297, file: !168, line: 325, baseType: !3365, size: 32, offset: 896)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 32)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !3367)
!3367 = !{!3368, !3374, !3375}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3366, file: !142, line: 5074, baseType: !3369, size: 96)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !3370)
!3370 = !{!3371, !3372, !3373}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3369, file: !245, line: 57, baseType: !248, size: 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3369, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3369, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3366, file: !142, line: 5075, baseType: !3314, size: 64, offset: 96)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3366, file: !142, line: 5076, baseType: !3376, offset: 160)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3297, file: !168, line: 343, baseType: !3378, size: 64, offset: 928)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !3379)
!3379 = !{!3380, !3381}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3378, file: !219, line: 63, baseType: !108, size: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3378, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!3382 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3383, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3384, splitDebugInlining: false, nameTableKind: None)
!3383 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3384 = !{!22, !106, !107}
!3385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !414, splitDebugInlining: false, nameTableKind: None)
!3386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3387 = !{!"Ubuntu clang version 14.0.6"}
!3388 = !{i32 7, !"Dwarf Version", i32 4}
!3389 = !{i32 2, !"Debug Info Version", i32 3}
!3390 = !{i32 1, !"wchar_size", i32 4}
!3391 = !{i32 1, !"min_enum_size", i32 4}
!3392 = !{i32 1, !"branch-target-enforcement", i32 0}
!3393 = !{i32 1, !"sign-return-address", i32 0}
!3394 = !{i32 1, !"sign-return-address-all", i32 0}
!3395 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3396 = !{i32 7, !"frame-pointer", i32 2}
!3397 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3398, file: !3398, line: 26, type: !337, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !256)
!3398 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3399 = !DILocation(line: 28, column: 1, scope: !3397)
!3400 = !{i64 2155361940, i64 2155361960, i64 2155362023}
!3401 = !DILocation(line: 29, column: 1, scope: !3397)
!3402 = !{i64 2155362355, i64 2155362375, i64 2155362438}
!3403 = !DILocation(line: 30, column: 1, scope: !3397)
!3404 = !{i64 2155362774, i64 2155362794, i64 2155362857}
!3405 = !DILocation(line: 31, column: 1, scope: !3397)
!3406 = !{i64 2155363193, i64 2155363213, i64 2155363276}
!3407 = !DILocation(line: 33, column: 1, scope: !3397)
!3408 = !{i64 2155363485, i64 2155363505, i64 2155363568}
!3409 = !DILocation(line: 35, column: 1, scope: !3397)
!3410 = !{i64 2155363810, i64 2155363830, i64 2155363893}
!3411 = !DILocation(line: 50, column: 1, scope: !3397)
!3412 = !{i64 2155364237, i64 2155364257, i64 2155364320}
!3413 = !DILocation(line: 54, column: 1, scope: !3397)
!3414 = !{i64 2155368737, i64 2155368757, i64 2155368820}
!3415 = !DILocation(line: 61, column: 1, scope: !3397)
!3416 = !{i64 2155369054, i64 2155369074, i64 2155369137}
!3417 = !DILocation(line: 63, column: 1, scope: !3397)
!3418 = !{i64 2155369434, i64 2155369454, i64 2155369517}
!3419 = !DILocation(line: 64, column: 1, scope: !3397)
!3420 = !{i64 2155369956, i64 2155369976, i64 2155370039}
!3421 = !DILocation(line: 65, column: 1, scope: !3397)
!3422 = !{i64 2155370454, i64 2155370474, i64 2155370537}
!3423 = !DILocation(line: 66, column: 1, scope: !3397)
!3424 = !{i64 2155370936, i64 2155370956, i64 2155371019}
!3425 = !DILocation(line: 67, column: 1, scope: !3397)
!3426 = !{i64 2155371443, i64 2155371463, i64 2155371526}
!3427 = !DILocation(line: 68, column: 1, scope: !3397)
!3428 = !{i64 2155371931, i64 2155371951, i64 2155372014}
!3429 = !DILocation(line: 70, column: 1, scope: !3397)
!3430 = !{i64 2155372399, i64 2155372419, i64 2155372482}
!3431 = !DILocation(line: 71, column: 1, scope: !3397)
!3432 = !{i64 2155372841, i64 2155372861, i64 2155372924}
!3433 = !DILocation(line: 72, column: 1, scope: !3397)
!3434 = !{i64 2155373299, i64 2155373319, i64 2155373382}
!3435 = !DILocation(line: 79, column: 1, scope: !3397)
!3436 = !{i64 2155373753, i64 2155373773, i64 2155373836}
!3437 = !DILocation(line: 80, column: 1, scope: !3397)
!3438 = !{i64 2155374264, i64 2155374284, i64 2155374347}
!3439 = !DILocation(line: 82, column: 1, scope: !3397)
!3440 = !{i64 2155374755, i64 2155374775, i64 2155374838}
!3441 = !DILocation(line: 97, column: 1, scope: !3397)
!3442 = !{i64 2155375092, i64 2155375112, i64 2155375175}
!3443 = !DILocation(line: 99, column: 1, scope: !3397)
!3444 = !{i64 2155375310, i64 2155375330, i64 2155375393}
!3445 = !DILocation(line: 102, column: 1, scope: !3397)
!3446 = !{i64 2155375567, i64 2155375587, i64 2155375650}
!3447 = !DILocation(line: 105, column: 1, scope: !3397)
!3448 = !{i64 2155375807, i64 2155375827, i64 2155375890}
!3449 = !DILocation(line: 115, column: 1, scope: !3397)
!3450 = !{i64 2155376146, i64 2155376166, i64 2155376229}
!3451 = !DILocation(line: 118, column: 1, scope: !3397)
!3452 = !{i64 2155376490, i64 2155376510, i64 2155376573}
!3453 = !DILocation(line: 32, column: 1, scope: !3454)
!3454 = !DILexicalBlockFile(scope: !3397, file: !3455, discriminator: 0)
!3455 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3456 = !{i64 2155376846, i64 2155376866, i64 2155376929}
!3457 = !DILocation(line: 33, column: 1, scope: !3454)
!3458 = !{i64 2155377358, i64 2155377378, i64 2155377441}
!3459 = !DILocation(line: 53, column: 1, scope: !3454)
!3460 = !{i64 2155377866, i64 2155377886, i64 2155377949}
!3461 = !DILocation(line: 54, column: 1, scope: !3454)
!3462 = !{i64 2155382345, i64 2155382365, i64 2155382428}
!3463 = !DILocation(line: 55, column: 1, scope: !3454)
!3464 = !{i64 2155382763, i64 2155382783, i64 2155382846}
!3465 = !DILocation(line: 56, column: 1, scope: !3454)
!3466 = !{i64 2155383181, i64 2155383201, i64 2155383264}
!3467 = !DILocation(line: 57, column: 1, scope: !3454)
!3468 = !{i64 2155383599, i64 2155383619, i64 2155383682}
!3469 = !DILocation(line: 58, column: 1, scope: !3454)
!3470 = !{i64 2155384017, i64 2155384037, i64 2155384100}
!3471 = !DILocation(line: 59, column: 1, scope: !3454)
!3472 = !{i64 2155384435, i64 2155384455, i64 2155384518}
!3473 = !DILocation(line: 60, column: 1, scope: !3454)
!3474 = !{i64 2155384859, i64 2155384879, i64 2155384942}
!3475 = !DILocation(line: 61, column: 1, scope: !3454)
!3476 = !{i64 2155385176, i64 2155385196, i64 2155385259}
!3477 = !DILocation(line: 70, column: 1, scope: !3454)
!3478 = !{i64 2155385405, i64 2155385425, i64 2155385488}
!3479 = !DILocation(line: 72, column: 1, scope: !3454)
!3480 = !{i64 2155385737, i64 2155385757, i64 2155385820}
!3481 = !DILocation(line: 73, column: 1, scope: !3454)
!3482 = !{i64 2155386187, i64 2155386207, i64 2155386270}
!3483 = !DILocation(line: 74, column: 1, scope: !3454)
!3484 = !{i64 2155386637, i64 2155386657, i64 2155386720}
!3485 = !DILocation(line: 75, column: 1, scope: !3454)
!3486 = !{i64 2155387087, i64 2155387107, i64 2155387170}
!3487 = !DILocation(line: 76, column: 1, scope: !3454)
!3488 = !{i64 2155387537, i64 2155387557, i64 2155387620}
!3489 = !DILocation(line: 77, column: 1, scope: !3454)
!3490 = !{i64 2155387987, i64 2155388007, i64 2155388070}
!3491 = !DILocation(line: 78, column: 1, scope: !3454)
!3492 = !{i64 2155388437, i64 2155388457, i64 2155388520}
!3493 = !DILocation(line: 79, column: 1, scope: !3454)
!3494 = !{i64 2155388887, i64 2155388907, i64 2155388970}
!3495 = !DILocation(line: 80, column: 1, scope: !3454)
!3496 = !{i64 2155389340, i64 2155389360, i64 2155389423}
!3497 = !DILocation(line: 84, column: 1, scope: !3454)
!3498 = !{i64 2155389672, i64 2155389692, i64 2155389755}
!3499 = !DILocation(line: 91, column: 1, scope: !3454)
!3500 = !{i64 2155390069, i64 2155390089, i64 2155390152}
!3501 = !DILocation(line: 93, column: 1, scope: !3454)
!3502 = !{i64 2155390436, i64 2155390456, i64 2155390519}
!3503 = !DILocation(line: 106, column: 1, scope: !3454)
!3504 = !{i64 2155390706, i64 2155390726, i64 2155390789}
!3505 = !DILocation(line: 11, column: 1, scope: !3506)
!3506 = !DILexicalBlockFile(scope: !3397, file: !3507, discriminator: 0)
!3507 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3508 = distinct !DISubprogram(name: "listener_callback_example", scope: !114, file: !114, line: 66, type: !292, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3509)
!3509 = !{!3510, !3511}
!3510 = !DILocalVariable(name: "chan", arg: 1, scope: !3508, file: !114, line: 66, type: !294)
!3511 = !DILocalVariable(name: "acc", scope: !3508, file: !114, line: 68, type: !3512)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 32)
!3513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!3514 = !DILocation(line: 0, scope: !3508)
!3515 = !DILocation(line: 68, column: 30, scope: !3508)
!3516 = !DILocation(line: 70, column: 2, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !114, line: 70, column: 2)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !114, line: 70, column: 2)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !114, line: 70, column: 2)
!3520 = distinct !DILexicalBlock(scope: !3508, file: !114, line: 70, column: 2)
!3521 = !DILocation(line: 71, column: 1, scope: !3508)
!3522 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3523, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3525)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!13, !294}
!3525 = !{!3526}
!3526 = !DILocalVariable(name: "chan", arg: 1, scope: !3522, file: !117, line: 416, type: !294)
!3527 = !DILocation(line: 0, scope: !3522)
!3528 = !DILocation(line: 420, column: 15, scope: !3522)
!3529 = !DILocation(line: 420, column: 2, scope: !3522)
!3530 = distinct !DISubprogram(name: "simple_chan_validator", scope: !114, file: !114, line: 44, type: !134, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3531)
!3531 = !{!3532, !3533, !3534}
!3532 = !DILocalVariable(name: "msg", arg: 1, scope: !3530, file: !114, line: 44, type: !13)
!3533 = !DILocalVariable(name: "msg_size", arg: 2, scope: !3530, file: !114, line: 44, type: !137)
!3534 = !DILocalVariable(name: "simple", scope: !3530, file: !114, line: 48, type: !3535)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 32)
!3536 = !DILocation(line: 0, scope: !3530)
!3537 = !DILocation(line: 48, column: 22, scope: !3530)
!3538 = !DILocation(line: 50, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3530, file: !114, line: 50, column: 6)
!3540 = !DILocation(line: 50, column: 21, scope: !3539)
!3541 = !DILocation(line: 55, column: 1, scope: !3530)
!3542 = distinct !DISubprogram(name: "subscriber_task", scope: !114, file: !114, line: 77, type: !337, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3543)
!3543 = !{!3544, !3545}
!3544 = !DILocalVariable(name: "chan", scope: !3542, file: !114, line: 79, type: !294)
!3545 = !DILocalVariable(name: "acc", scope: !3546, file: !114, line: 82, type: !372)
!3546 = distinct !DILexicalBlock(scope: !3542, file: !114, line: 81, column: 53)
!3547 = !DILocation(line: 79, column: 2, scope: !3542)
!3548 = !DILocation(line: 0, scope: !3542)
!3549 = !DILocation(line: 81, column: 10, scope: !3542)
!3550 = !DILocation(line: 81, column: 9, scope: !3542)
!3551 = !DILocation(line: 81, column: 2, scope: !3542)
!3552 = !DILocation(line: 82, column: 3, scope: !3546)
!3553 = !DILocation(line: 82, column: 18, scope: !3546)
!3554 = !DILocation(line: 84, column: 25, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3546, file: !114, line: 84, column: 7)
!3556 = !DILocation(line: 84, column: 22, scope: !3555)
!3557 = !DILocation(line: 84, column: 7, scope: !3546)
!3558 = !DILocation(line: 85, column: 41, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3555, file: !114, line: 84, column: 31)
!3560 = !DILocation(line: 85, column: 4, scope: !3559)
!3561 = !DILocation(line: 87, column: 4, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !114, line: 87, column: 4)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !114, line: 87, column: 4)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !114, line: 87, column: 4)
!3565 = distinct !DILexicalBlock(scope: !3559, file: !114, line: 87, column: 4)
!3566 = !DILocation(line: 88, column: 3, scope: !3559)
!3567 = !DILocation(line: 89, column: 2, scope: !3542)
!3568 = distinct !{!3568, !3551, !3567}
!3569 = !DILocation(line: 90, column: 1, scope: !3542)
!3570 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3571, file: !3571, line: 403, type: !3572, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3574)
!3571 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!109, !109}
!3574 = !{!3575}
!3575 = !DILocalVariable(name: "t", arg: 1, scope: !3570, file: !3571, line: 403, type: !109)
!3576 = !DILocation(line: 0, scope: !3570)
!3577 = !DILocalVariable(name: "t", arg: 1, scope: !3578, file: !3571, line: 102, type: !109)
!3578 = distinct !DISubprogram(name: "z_tmcvt", scope: !3571, file: !3571, line: 102, type: !3579, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3581)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!109, !109, !108, !108, !136, !136, !136, !136}
!3581 = !{!3577, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591}
!3582 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3578, file: !3571, line: 102, type: !108)
!3583 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3578, file: !3571, line: 103, type: !108)
!3584 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3578, file: !3571, line: 103, type: !136)
!3585 = !DILocalVariable(name: "result32", arg: 5, scope: !3578, file: !3571, line: 104, type: !136)
!3586 = !DILocalVariable(name: "round_up", arg: 6, scope: !3578, file: !3571, line: 104, type: !136)
!3587 = !DILocalVariable(name: "round_off", arg: 7, scope: !3578, file: !3571, line: 105, type: !136)
!3588 = !DILocalVariable(name: "mul_ratio", scope: !3578, file: !3571, line: 107, type: !136)
!3589 = !DILocalVariable(name: "div_ratio", scope: !3578, file: !3571, line: 109, type: !136)
!3590 = !DILocalVariable(name: "off", scope: !3578, file: !3571, line: 116, type: !109)
!3591 = !DILocalVariable(name: "rdivisor", scope: !3592, file: !3571, line: 119, type: !108)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !3571, line: 118, column: 18)
!3593 = distinct !DILexicalBlock(scope: !3578, file: !3571, line: 118, column: 6)
!3594 = !DILocation(line: 0, scope: !3578, inlinedAt: !3595)
!3595 = distinct !DILocation(line: 406, column: 9, scope: !3570)
!3596 = !DILocation(line: 145, column: 13, scope: !3597, inlinedAt: !3595)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !3571, line: 144, column: 10)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !3571, line: 142, column: 7)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !3571, line: 141, column: 24)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !3571, line: 141, column: 13)
!3601 = distinct !DILexicalBlock(scope: !3578, file: !3571, line: 134, column: 6)
!3602 = !DILocation(line: 406, column: 2, scope: !3570)
!3603 = distinct !DISubprogram(name: "main", scope: !114, file: !114, line: 120, type: !337, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3604)
!3604 = !{!3605, !3606, !3607, !3608}
!3605 = !DILocalVariable(name: "err", scope: !3603, file: !114, line: 122, type: !107)
!3606 = !DILocalVariable(name: "value", scope: !3603, file: !114, line: 122, type: !107)
!3607 = !DILocalVariable(name: "acc1", scope: !3603, file: !114, line: 123, type: !372)
!3608 = !DILocalVariable(name: "v", scope: !3603, file: !114, line: 124, type: !3609)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 32)
!3610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!3611 = !DILocation(line: 122, column: 2, scope: !3603)
!3612 = !DILocation(line: 123, column: 2, scope: !3603)
!3613 = !DILocation(line: 123, column: 17, scope: !3603)
!3614 = !DILocation(line: 124, column: 32, scope: !3603)
!3615 = !DILocation(line: 0, scope: !3603)
!3616 = !DILocation(line: 126, column: 2, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !114, line: 126, column: 2)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !114, line: 126, column: 2)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !114, line: 126, column: 2)
!3620 = distinct !DILexicalBlock(scope: !3603, file: !114, line: 126, column: 2)
!3621 = !DILocation(line: 130, column: 8, scope: !3603)
!3622 = !DILocation(line: 132, column: 2, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3624, file: !114, line: 132, column: 2)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !114, line: 132, column: 2)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !114, line: 132, column: 2)
!3626 = distinct !DILexicalBlock(scope: !3603, file: !114, line: 132, column: 2)
!3627 = !DILocation(line: 133, column: 2, scope: !3603)
!3628 = !DILocation(line: 135, column: 8, scope: !3603)
!3629 = !DILocation(line: 137, column: 2, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !114, line: 137, column: 2)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !114, line: 137, column: 2)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !114, line: 137, column: 2)
!3633 = distinct !DILexicalBlock(scope: !3603, file: !114, line: 137, column: 2)
!3634 = !DILocation(line: 138, column: 2, scope: !3603)
!3635 = !DILocation(line: 140, column: 39, scope: !3603)
!3636 = !DILocation(line: 140, column: 2, scope: !3603)
!3637 = !DILocation(line: 142, column: 2, scope: !3603)
!3638 = !DILocation(line: 144, column: 7, scope: !3603)
!3639 = !DILocation(line: 144, column: 9, scope: !3603)
!3640 = !DILocation(line: 145, column: 7, scope: !3603)
!3641 = !DILocation(line: 145, column: 9, scope: !3603)
!3642 = !DILocation(line: 146, column: 7, scope: !3603)
!3643 = !DILocation(line: 146, column: 9, scope: !3603)
!3644 = !DILocation(line: 147, column: 2, scope: !3603)
!3645 = !DILocation(line: 149, column: 8, scope: !3603)
!3646 = !DILocation(line: 150, column: 44, scope: !3603)
!3647 = !DILocation(line: 150, column: 8, scope: !3603)
!3648 = !DILocation(line: 152, column: 10, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3603, file: !114, line: 152, column: 6)
!3650 = !DILocation(line: 152, column: 6, scope: !3603)
!3651 = !DILocation(line: 153, column: 3, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !114, line: 153, column: 3)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !114, line: 153, column: 3)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !114, line: 153, column: 3)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !114, line: 153, column: 3)
!3656 = distinct !DILexicalBlock(scope: !3649, file: !114, line: 152, column: 16)
!3657 = !DILocation(line: 154, column: 2, scope: !3656)
!3658 = !DILocation(line: 156, column: 8, scope: !3603)
!3659 = !DILocation(line: 157, column: 8, scope: !3603)
!3660 = !DILocation(line: 159, column: 10, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3603, file: !114, line: 159, column: 6)
!3662 = !DILocation(line: 159, column: 6, scope: !3603)
!3663 = !DILocation(line: 160, column: 3, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !114, line: 160, column: 3)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !114, line: 160, column: 3)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !114, line: 160, column: 3)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !114, line: 160, column: 3)
!3668 = distinct !DILexicalBlock(scope: !3661, file: !114, line: 159, column: 22)
!3669 = !DILocation(line: 161, column: 2, scope: !3668)
!3670 = !DILocation(line: 162, column: 1, scope: !3603)
!3671 = distinct !DISubprogram(name: "print_channel_data_iterator", scope: !114, file: !114, line: 97, type: !3672, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3674)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!136, !294}
!3674 = !{!3675, !3676}
!3675 = !DILocalVariable(name: "chan", arg: 1, scope: !3671, file: !114, line: 97, type: !294)
!3676 = !DILocalVariable(name: "obs", scope: !3677, file: !114, line: 103, type: !265)
!3677 = distinct !DILexicalBlock(scope: !3671, file: !114, line: 103, column: 2)
!3678 = !DILocation(line: 0, scope: !3671)
!3679 = !DILocation(line: 99, column: 2, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !114, line: 99, column: 2)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !114, line: 99, column: 2)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !114, line: 99, column: 2)
!3683 = distinct !DILexicalBlock(scope: !3671, file: !114, line: 99, column: 2)
!3684 = !DILocation(line: 100, column: 2, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !114, line: 100, column: 2)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !114, line: 100, column: 2)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !114, line: 100, column: 2)
!3688 = distinct !DILexicalBlock(scope: !3671, file: !114, line: 100, column: 2)
!3689 = !DILocation(line: 101, column: 2, scope: !3671)
!3690 = !DILocation(line: 102, column: 2, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !114, line: 102, column: 2)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !114, line: 102, column: 2)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !114, line: 102, column: 2)
!3694 = distinct !DILexicalBlock(scope: !3671, file: !114, line: 102, column: 2)
!3695 = !DILocation(line: 103, column: 54, scope: !3677)
!3696 = !DILocation(line: 0, scope: !3677)
!3697 = !DILocation(line: 103, column: 65, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3677, file: !114, line: 103, column: 2)
!3699 = !DILocation(line: 103, column: 70, scope: !3698)
!3700 = !DILocation(line: 103, column: 2, scope: !3677)
!3701 = !DILocation(line: 107, column: 2, scope: !3671)
!3702 = !DILocation(line: 104, column: 3, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !114, line: 104, column: 3)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !114, line: 104, column: 3)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !114, line: 104, column: 3)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !114, line: 104, column: 3)
!3707 = distinct !DILexicalBlock(scope: !3698, file: !114, line: 103, column: 86)
!3708 = !DILocation(line: 103, column: 79, scope: !3698)
!3709 = distinct !{!3709, !3700, !3710}
!3710 = !DILocation(line: 105, column: 2, scope: !3677)
!3711 = distinct !DISubprogram(name: "print_observer_data_iterator", scope: !114, file: !114, line: 110, type: !3712, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3714)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!136, !267}
!3714 = !{!3715}
!3715 = !DILocalVariable(name: "obs", arg: 1, scope: !3711, file: !114, line: 110, type: !267)
!3716 = !DILocation(line: 0, scope: !3711)
!3717 = !DILocation(line: 112, column: 2, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !114, line: 112, column: 2)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !114, line: 112, column: 2)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !114, line: 112, column: 2)
!3721 = distinct !DILexicalBlock(scope: !3711, file: !114, line: 112, column: 2)
!3722 = !DILocation(line: 114, column: 2, scope: !3711)
!3723 = !DILocation(line: 116, column: 2, scope: !3711)
!3724 = distinct !DISubprogram(name: "k_msleep", scope: !142, file: !142, line: 439, type: !3725, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3727)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!334, !334}
!3727 = !{!3728}
!3728 = !DILocalVariable(name: "ms", arg: 1, scope: !3724, file: !142, line: 439, type: !334)
!3729 = !DILocation(line: 0, scope: !3724)
!3730 = !DILocation(line: 441, column: 17, scope: !3724)
!3731 = !DILocation(line: 441, column: 9, scope: !3724)
!3732 = !DILocation(line: 441, column: 2, scope: !3724)
!3733 = distinct !DISubprogram(name: "k_sleep", scope: !3734, file: !3734, line: 91, type: !3735, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3741)
!3734 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!334, !3737}
!3737 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !3738)
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !3739)
!3739 = !{!3740}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3738, file: !103, line: 66, baseType: !102, size: 64)
!3741 = !{!3742}
!3742 = !DILocalVariable(name: "timeout", arg: 1, scope: !3733, file: !3734, line: 91, type: !3737)
!3743 = !DILocation(line: 0, scope: !3733)
!3744 = !DILocation(line: 99, column: 2, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3733, file: !3734, line: 99, column: 2)
!3746 = !{i64 2155061488}
!3747 = !DILocation(line: 100, column: 9, scope: !3733)
!3748 = !DILocation(line: 100, column: 2, scope: !3733)
!3749 = distinct !DISubprogram(name: "zbus_obs_name", scope: !117, file: !117, line: 549, type: !3750, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3752)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!121, !267}
!3752 = !{!3753}
!3753 = !DILocalVariable(name: "obs", arg: 1, scope: !3749, file: !117, line: 549, type: !267)
!3754 = !DILocation(line: 0, scope: !3749)
!3755 = !DILocation(line: 553, column: 14, scope: !3749)
!3756 = !DILocation(line: 553, column: 2, scope: !3749)
!3757 = distinct !DISubprogram(name: "zbus_chan_name", scope: !117, file: !117, line: 374, type: !3758, scopeLine: 375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3760)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{!121, !294}
!3760 = !{!3761}
!3761 = !DILocalVariable(name: "chan", arg: 1, scope: !3757, file: !117, line: 374, type: !294)
!3762 = !DILocation(line: 0, scope: !3757)
!3763 = !DILocation(line: 378, column: 15, scope: !3757)
!3764 = !DILocation(line: 378, column: 2, scope: !3757)
!3765 = distinct !DISubprogram(name: "zbus_chan_msg_size", scope: !117, file: !117, line: 432, type: !3766, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3768)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!126, !294}
!3768 = !{!3769}
!3769 = !DILocalVariable(name: "chan", arg: 1, scope: !3765, file: !117, line: 432, type: !294)
!3770 = !DILocation(line: 0, scope: !3765)
!3771 = !DILocation(line: 436, column: 15, scope: !3765)
!3772 = !DILocation(line: 436, column: 2, scope: !3765)
!3773 = distinct !DISubprogram(name: "cbvprintf_package", scope: !403, file: !403, line: 233, type: !3774, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !3783)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!107, !106, !137, !108, !121, !3776}
!3776 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3777, line: 99, baseType: !3778)
!3777 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3778 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3777, line: 40, baseType: !3779)
!3779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !403, baseType: !3780)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3781)
!3781 = !{!3782}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3780, file: !403, line: 18, baseType: !106, size: 32)
!3783 = !{!3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3819, !3828, !3831, !3832, !3835, !3838, !3841, !3844, !3850}
!3784 = !DILocalVariable(name: "packaged", arg: 1, scope: !3773, file: !403, line: 233, type: !106)
!3785 = !DILocalVariable(name: "len", arg: 2, scope: !3773, file: !403, line: 233, type: !137)
!3786 = !DILocalVariable(name: "flags", arg: 3, scope: !3773, file: !403, line: 233, type: !108)
!3787 = !DILocalVariable(name: "fmt", arg: 4, scope: !3773, file: !403, line: 234, type: !121)
!3788 = !DILocalVariable(name: "ap", arg: 5, scope: !3773, file: !403, line: 234, type: !3776)
!3789 = !DILocalVariable(name: "buf0", scope: !3773, file: !403, line: 247, type: !401)
!3790 = !DILocalVariable(name: "buf", scope: !3773, file: !403, line: 248, type: !401)
!3791 = !DILocalVariable(name: "size", scope: !3773, file: !403, line: 249, type: !32)
!3792 = !DILocalVariable(name: "align", scope: !3773, file: !403, line: 250, type: !32)
!3793 = !DILocalVariable(name: "str_ptr_pos", scope: !3773, file: !403, line: 251, type: !3794)
!3794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 128, elements: !347)
!3795 = !DILocalVariable(name: "str_ptr_arg", scope: !3773, file: !403, line: 252, type: !3794)
!3796 = !DILocalVariable(name: "s_idx", scope: !3773, file: !403, line: 253, type: !32)
!3797 = !DILocalVariable(name: "s_rw_cnt", scope: !3773, file: !403, line: 254, type: !32)
!3798 = !DILocalVariable(name: "s_ro_cnt", scope: !3773, file: !403, line: 255, type: !32)
!3799 = !DILocalVariable(name: "arg_idx", scope: !3773, file: !403, line: 256, type: !107)
!3800 = !DILocalVariable(name: "i", scope: !3773, file: !403, line: 257, type: !32)
!3801 = !DILocalVariable(name: "s", scope: !3773, file: !403, line: 258, type: !121)
!3802 = !DILocalVariable(name: "parsing", scope: !3773, file: !403, line: 259, type: !136)
!3803 = !DILocalVariable(name: "rws_pos_en", scope: !3773, file: !403, line: 263, type: !136)
!3804 = !DILocalVariable(name: "fros_cnt", scope: !3773, file: !403, line: 268, type: !107)
!3805 = !DILocalVariable(name: "is_str_arg", scope: !3773, file: !403, line: 269, type: !136)
!3806 = !DILocalVariable(name: "pkg_hdr", scope: !3773, file: !403, line: 270, type: !3807)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 32)
!3808 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3809, line: 78, size: 32, elements: !3810)
!3809 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3810 = !{!3811, !3818}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3808, file: !3809, line: 80, baseType: !3812, size: 32)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3809, line: 45, size: 32, elements: !3813)
!3813 = !{!3814, !3815, !3816, !3817}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3812, file: !3809, line: 47, baseType: !190, size: 8)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3812, file: !3809, line: 50, baseType: !190, size: 8, offset: 8)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3812, file: !3809, line: 53, baseType: !190, size: 8, offset: 16)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3812, file: !3809, line: 56, baseType: !190, size: 8, offset: 24)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3808, file: !3809, line: 82, baseType: !106, size: 32)
!3819 = !DILocalVariable(name: "v", scope: !3820, file: !403, line: 567, type: !3824)
!3820 = distinct !DILexicalBlock(scope: !3821, file: !403, line: 562, column: 14)
!3821 = distinct !DILexicalBlock(scope: !3822, file: !403, line: 481, column: 18)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !403, line: 466, column: 3)
!3823 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 343, column: 15)
!3824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3773, file: !403, line: 567, size: 64, elements: !3825)
!3825 = !{!3826, !3827}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3824, file: !403, line: 567, baseType: !394, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3824, file: !403, line: 567, baseType: !392, size: 64)
!3828 = !DILocalVariable(name: "is_ro", scope: !3829, file: !403, line: 620, type: !136)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !403, line: 613, column: 19)
!3830 = distinct !DILexicalBlock(scope: !3823, file: !403, line: 613, column: 7)
!3831 = !DILocalVariable(name: "do_ro", scope: !3829, file: !403, line: 621, type: !136)
!3832 = !DILocalVariable(name: "s_ptr_idx", scope: !3833, file: !403, line: 626, type: !108)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !403, line: 625, column: 11)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !403, line: 623, column: 8)
!3835 = !DILocalVariable(name: "v", scope: !3836, file: !403, line: 684, type: !107)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !403, line: 683, column: 35)
!3837 = distinct !DILexicalBlock(scope: !3830, file: !403, line: 683, column: 14)
!3838 = !DILocalVariable(name: "v", scope: !3839, file: !403, line: 691, type: !398)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !403, line: 690, column: 36)
!3840 = distinct !DILexicalBlock(scope: !3837, file: !403, line: 690, column: 14)
!3841 = !DILocalVariable(name: "v", scope: !3842, file: !403, line: 698, type: !105)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !403, line: 697, column: 41)
!3843 = distinct !DILexicalBlock(scope: !3840, file: !403, line: 697, column: 14)
!3844 = !DILocalVariable(name: "pos", scope: !3845, file: !403, line: 762, type: !190)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !403, line: 757, column: 31)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !403, line: 757, column: 3)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !403, line: 757, column: 3)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !403, line: 756, column: 16)
!3849 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 756, column: 6)
!3850 = !DILabel(scope: !3829, name: "process_string", file: !403, line: 615)
!3851 = !DILocation(line: 0, scope: !3773)
!3852 = !DILocation(line: 251, column: 2, scope: !3773)
!3853 = !DILocation(line: 251, column: 10, scope: !3773)
!3854 = !DILocation(line: 252, column: 2, scope: !3773)
!3855 = !DILocation(line: 252, column: 10, scope: !3773)
!3856 = !DILocation(line: 263, column: 29, scope: !3773)
!3857 = !DILocation(line: 263, column: 21, scope: !3773)
!3858 = !DILocation(line: 268, column: 21, scope: !3773)
!3859 = !DILocation(line: 268, column: 19, scope: !3773)
!3860 = !DILocation(line: 273, column: 6, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 273, column: 6)
!3862 = !DILocation(line: 273, column: 26, scope: !3861)
!3863 = !DILocation(line: 273, column: 6, scope: !3773)
!3864 = !DILocation(line: 297, column: 6, scope: !3773)
!3865 = !DILocation(line: 305, column: 11, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 305, column: 6)
!3867 = !DILocation(line: 305, column: 6, scope: !3773)
!3868 = !DILocation(line: 327, column: 19, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 327, column: 6)
!3870 = !DILocation(line: 327, column: 22, scope: !3869)
!3871 = !DILocation(line: 327, column: 33, scope: !3869)
!3872 = !DILocation(line: 327, column: 50, scope: !3869)
!3873 = !DILocation(line: 327, column: 6, scope: !3773)
!3874 = !DILocation(line: 338, column: 9, scope: !3773)
!3875 = !DILocation(line: 341, column: 2, scope: !3773)
!3876 = !DILocation(line: 472, column: 8, scope: !3822)
!3877 = !DILocation(line: 473, column: 14, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !403, line: 473, column: 9)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !403, line: 472, column: 18)
!3880 = distinct !DILexicalBlock(scope: !3822, file: !403, line: 472, column: 8)
!3881 = !DILocation(line: 473, column: 9, scope: !3879)
!3882 = !DILocation(line: 479, column: 5, scope: !3879)
!3883 = !DILocation(line: 468, column: 9, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3822, file: !403, line: 468, column: 8)
!3885 = !DILocation(line: 468, column: 8, scope: !3884)
!3886 = !DILocation(line: 468, column: 15, scope: !3884)
!3887 = !DILocation(line: 468, column: 8, scope: !3822)
!3888 = distinct !{!3888, !3889, !3890}
!3889 = !DILocation(line: 343, column: 2, scope: !3773)
!3890 = !DILocation(line: 712, column: 2, scope: !3773)
!3891 = !DILocation(line: 481, column: 4, scope: !3822)
!3892 = !DILocation(line: 484, column: 12, scope: !3821)
!3893 = !DILocation(line: 485, column: 5, scope: !3821)
!3894 = !DILocation(line: 505, column: 5, scope: !3821)
!3895 = !DILocation(line: 518, column: 5, scope: !3821)
!3896 = !DILocation(line: 523, column: 5, scope: !3821)
!3897 = !DILocation(line: 532, column: 9, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3821, file: !403, line: 532, column: 9)
!3899 = !DILocation(line: 532, column: 17, scope: !3898)
!3900 = !DILocation(line: 532, column: 9, scope: !3821)
!3901 = !DILocation(line: 533, column: 10, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !403, line: 533, column: 10)
!3903 = distinct !DILexicalBlock(scope: !3898, file: !403, line: 532, column: 25)
!3904 = !DILocation(line: 533, column: 18, scope: !3902)
!3905 = !DILocation(line: 0, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3820, file: !403, line: 569, column: 9)
!3907 = !DILocation(line: 0, scope: !3820)
!3908 = !DILocation(line: 579, column: 20, scope: !3820)
!3909 = !DILocation(line: 579, column: 11, scope: !3820)
!3910 = !DILocation(line: 580, column: 9, scope: !3820)
!3911 = !DILocation(line: 582, column: 21, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !403, line: 582, column: 10)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !403, line: 580, column: 23)
!3914 = distinct !DILexicalBlock(scope: !3820, file: !403, line: 580, column: 9)
!3915 = !DILocation(line: 582, column: 28, scope: !3912)
!3916 = !DILocation(line: 582, column: 10, scope: !3913)
!3917 = !DILocation(line: 0, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !403, line: 587, column: 17)
!3919 = distinct !DILexicalBlock(scope: !3913, file: !403, line: 585, column: 10)
!3920 = !DILocation(line: 593, column: 9, scope: !3820)
!3921 = !DILocation(line: 600, column: 5, scope: !3821)
!3922 = !DILocation(line: 605, column: 18, scope: !3823)
!3923 = !DILocation(line: 605, column: 9, scope: !3823)
!3924 = !DILocation(line: 608, column: 20, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3823, file: !403, line: 608, column: 7)
!3926 = !DILocation(line: 608, column: 23, scope: !3925)
!3927 = !DILocation(line: 608, column: 34, scope: !3925)
!3928 = !DILocation(line: 608, column: 41, scope: !3925)
!3929 = !DILocation(line: 608, column: 7, scope: !3823)
!3930 = !DILocation(line: 613, column: 7, scope: !3823)
!3931 = !DILocation(line: 614, column: 8, scope: !3829)
!3932 = !DILocation(line: 614, column: 4, scope: !3829)
!3933 = !DILocation(line: 255, column: 15, scope: !3773)
!3934 = !DILocation(line: 256, column: 6, scope: !3773)
!3935 = !DILocation(line: 254, column: 15, scope: !3773)
!3936 = !DILocation(line: 253, column: 15, scope: !3773)
!3937 = !DILocation(line: 320, column: 7, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3866, file: !403, line: 305, column: 20)
!3939 = !DILocation(line: 615, column: 1, scope: !3829)
!3940 = !DILocation(line: 616, column: 8, scope: !3829)
!3941 = !DILocation(line: 617, column: 5, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !403, line: 616, column: 22)
!3943 = distinct !DILexicalBlock(scope: !3829, file: !403, line: 616, column: 8)
!3944 = !DILocation(line: 617, column: 25, scope: !3942)
!3945 = !DILocation(line: 618, column: 4, scope: !3942)
!3946 = !DILocation(line: 620, column: 26, scope: !3829)
!3947 = !DILocation(line: 620, column: 29, scope: !3829)
!3948 = !DILocation(line: 620, column: 17, scope: !3829)
!3949 = !DILocation(line: 620, column: 43, scope: !3829)
!3950 = !DILocation(line: 0, scope: !3829)
!3951 = !DILocation(line: 623, column: 14, scope: !3834)
!3952 = !DILocation(line: 626, column: 26, scope: !3833)
!3953 = !DILocation(line: 626, column: 37, scope: !3833)
!3954 = !DILocation(line: 0, scope: !3833)
!3955 = !DILocation(line: 634, column: 15, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3833, file: !403, line: 634, column: 9)
!3957 = !DILocation(line: 644, column: 9, scope: !3833)
!3958 = !DILocation(line: 649, column: 27, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !403, line: 644, column: 23)
!3960 = distinct !DILexicalBlock(scope: !3833, file: !403, line: 644, column: 9)
!3961 = !DILocation(line: 649, column: 6, scope: !3959)
!3962 = !DILocation(line: 649, column: 25, scope: !3959)
!3963 = !DILocation(line: 650, column: 27, scope: !3959)
!3964 = !DILocation(line: 650, column: 6, scope: !3959)
!3965 = !DILocation(line: 650, column: 25, scope: !3959)
!3966 = !DILocation(line: 651, column: 10, scope: !3959)
!3967 = !DILocation(line: 653, column: 26, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !403, line: 651, column: 17)
!3969 = distinct !DILexicalBlock(scope: !3959, file: !403, line: 651, column: 10)
!3970 = !DILocation(line: 654, column: 15, scope: !3968)
!3971 = !DILocation(line: 655, column: 6, scope: !3968)
!3972 = !DILocation(line: 656, column: 15, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3969, file: !403, line: 655, column: 13)
!3974 = !DILocation(line: 658, column: 16, scope: !3960)
!3975 = !DILocation(line: 663, column: 10, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !403, line: 658, column: 23)
!3977 = distinct !DILexicalBlock(scope: !3960, file: !403, line: 658, column: 16)
!3978 = !DILocation(line: 664, column: 5, scope: !3976)
!3979 = !DILocation(line: 664, column: 16, scope: !3977)
!3980 = !DILocation(line: 669, column: 10, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !403, line: 664, column: 28)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !403, line: 664, column: 16)
!3983 = !DILocation(line: 670, column: 5, scope: !3981)
!3984 = !DILocation(line: 675, column: 13, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3982, file: !403, line: 670, column: 12)
!3986 = !DILocation(line: 675, column: 27, scope: !3985)
!3987 = !DILocation(line: 675, column: 10, scope: !3985)
!3988 = !DILocation(line: 678, column: 10, scope: !3833)
!3989 = !DILocation(line: 680, column: 8, scope: !3829)
!3990 = !DILocation(line: 683, column: 14, scope: !3830)
!3991 = !DILocation(line: 684, column: 12, scope: !3836)
!3992 = !DILocation(line: 0, scope: !3836)
!3993 = !DILocation(line: 686, column: 8, scope: !3836)
!3994 = !DILocation(line: 687, column: 5, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !403, line: 686, column: 22)
!3996 = distinct !DILexicalBlock(scope: !3836, file: !403, line: 686, column: 8)
!3997 = !DILocation(line: 687, column: 17, scope: !3995)
!3998 = !DILocation(line: 688, column: 4, scope: !3995)
!3999 = !DILocation(line: 698, column: 18, scope: !3842)
!4000 = !DILocation(line: 0, scope: !3842)
!4001 = !DILocation(line: 700, column: 8, scope: !3842)
!4002 = !DILocation(line: 704, column: 6, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !403, line: 703, column: 12)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !403, line: 701, column: 9)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !403, line: 700, column: 22)
!4006 = distinct !DILexicalBlock(scope: !3842, file: !403, line: 700, column: 8)
!4007 = !DILocation(line: 704, column: 24, scope: !4003)
!4008 = !DILocation(line: 706, column: 4, scope: !4005)
!4009 = !DILocation(line: 0, scope: !3837)
!4010 = !DILocation(line: 0, scope: !3823)
!4011 = !DILocation(line: 720, column: 6, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 720, column: 6)
!4013 = !DILocation(line: 720, column: 17, scope: !4012)
!4014 = !DILocation(line: 720, column: 31, scope: !4012)
!4015 = !DILocation(line: 720, column: 6, scope: !3773)
!4016 = !DILocation(line: 729, column: 6, scope: !3773)
!4017 = !DILocation(line: 730, column: 21, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !403, line: 729, column: 20)
!4019 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 729, column: 6)
!4020 = !DILocation(line: 730, column: 27, scope: !4018)
!4021 = !DILocation(line: 730, column: 3, scope: !4018)
!4022 = !DILocation(line: 737, column: 22, scope: !3773)
!4023 = !DILocation(line: 737, column: 20, scope: !3773)
!4024 = !DILocation(line: 0, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 739, column: 6)
!4026 = !DILocation(line: 745, column: 17, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4025, file: !403, line: 743, column: 9)
!4028 = !DILocation(line: 745, column: 25, scope: !4027)
!4029 = !DILocation(line: 746, column: 17, scope: !4027)
!4030 = !DILocation(line: 746, column: 28, scope: !4027)
!4031 = !DILocation(line: 749, column: 29, scope: !3773)
!4032 = !DILocation(line: 749, column: 16, scope: !3773)
!4033 = !DILocation(line: 749, column: 27, scope: !3773)
!4034 = !DILocation(line: 756, column: 6, scope: !3849)
!4035 = !DILocation(line: 756, column: 6, scope: !3773)
!4036 = !DILocation(line: 757, column: 3, scope: !3847)
!4037 = !DILocation(line: 758, column: 10, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !3845, file: !403, line: 758, column: 8)
!4039 = !DILocation(line: 758, column: 25, scope: !4038)
!4040 = !DILocation(line: 758, column: 8, scope: !3845)
!4041 = !DILocation(line: 0, scope: !3845)
!4042 = !DILocation(line: 765, column: 8, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !3845, file: !403, line: 765, column: 8)
!4044 = !DILocation(line: 765, column: 19, scope: !4043)
!4045 = !DILocation(line: 765, column: 23, scope: !4043)
!4046 = !DILocation(line: 765, column: 8, scope: !3845)
!4047 = !DILocation(line: 762, column: 33, scope: !3845)
!4048 = !DILocation(line: 769, column: 8, scope: !3845)
!4049 = !DILocation(line: 769, column: 11, scope: !3845)
!4050 = !DILocation(line: 757, column: 27, scope: !3846)
!4051 = !DILocation(line: 757, column: 17, scope: !3846)
!4052 = distinct !{!4052, !4036, !4053}
!4053 = !DILocation(line: 770, column: 3, scope: !3847)
!4054 = !DILocation(line: 774, column: 16, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !403, line: 774, column: 2)
!4056 = distinct !DILexicalBlock(scope: !3773, file: !403, line: 774, column: 2)
!4057 = !DILocation(line: 774, column: 2, scope: !4056)
!4058 = !DILocation(line: 776, column: 16, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !403, line: 776, column: 7)
!4060 = distinct !DILexicalBlock(scope: !4055, file: !403, line: 774, column: 30)
!4061 = !DILocation(line: 776, column: 19, scope: !4059)
!4062 = !DILocation(line: 776, column: 34, scope: !4059)
!4063 = !DILocation(line: 776, column: 7, scope: !4060)
!4064 = !DILocation(line: 780, column: 7, scope: !4060)
!4065 = !DILocation(line: 782, column: 13, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !403, line: 780, column: 19)
!4067 = distinct !DILexicalBlock(scope: !4060, file: !403, line: 780, column: 7)
!4068 = !DILocation(line: 782, column: 8, scope: !4066)
!4069 = !DILocation(line: 782, column: 11, scope: !4066)
!4070 = !DILocation(line: 783, column: 3, scope: !4066)
!4071 = !DILocation(line: 785, column: 26, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4067, file: !403, line: 783, column: 10)
!4073 = !DILocation(line: 785, column: 41, scope: !4072)
!4074 = !DILocation(line: 785, column: 24, scope: !4072)
!4075 = !DILocation(line: 785, column: 8, scope: !4072)
!4076 = !DILocation(line: 787, column: 52, scope: !4072)
!4077 = !DILocation(line: 789, column: 11, scope: !4072)
!4078 = !DILocation(line: 789, column: 21, scope: !4072)
!4079 = !DILocation(line: 0, scope: !4067)
!4080 = !DILocation(line: 793, column: 7, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4060, file: !403, line: 793, column: 7)
!4082 = !DILocation(line: 793, column: 18, scope: !4081)
!4083 = !DILocation(line: 793, column: 22, scope: !4081)
!4084 = !DILocation(line: 793, column: 29, scope: !4081)
!4085 = !DILocation(line: 793, column: 7, scope: !4060)
!4086 = !DILocation(line: 797, column: 12, scope: !4060)
!4087 = !DILocation(line: 797, column: 7, scope: !4060)
!4088 = !DILocation(line: 797, column: 10, scope: !4060)
!4089 = !DILocation(line: 799, column: 3, scope: !4060)
!4090 = !DILocation(line: 800, column: 7, scope: !4060)
!4091 = !DILocation(line: 801, column: 2, scope: !4060)
!4092 = !DILocation(line: 338, column: 4, scope: !3773)
!4093 = !DILocation(line: 774, column: 26, scope: !4055)
!4094 = distinct !{!4094, !4057, !4095}
!4095 = !DILocation(line: 801, column: 2, scope: !4056)
!4096 = !DILocation(line: 808, column: 9, scope: !3773)
!4097 = !DILocation(line: 808, column: 2, scope: !3773)
!4098 = !DILocation(line: 813, column: 1, scope: !3773)
!4099 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !403, file: !403, line: 33, type: !4100, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4102)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!136, !121}
!4102 = !{!4103}
!4103 = !DILocalVariable(name: "addr", arg: 1, scope: !4099, file: !403, line: 33, type: !121)
!4104 = !DILocation(line: 0, scope: !4099)
!4105 = !DILocation(line: 41, column: 9, scope: !4099)
!4106 = !DILocation(line: 41, column: 2, scope: !4099)
!4107 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4108, file: !4108, line: 24, type: !4109, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4111)
!4108 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!136, !13}
!4111 = !{!4112}
!4112 = !DILocalVariable(name: "addr", arg: 1, scope: !4107, file: !4108, line: 24, type: !13)
!4113 = !DILocation(line: 0, scope: !4107)
!4114 = !DILocation(line: 49, column: 30, scope: !4107)
!4115 = !DILocation(line: 49, column: 57, scope: !4107)
!4116 = !DILocation(line: 49, column: 2, scope: !4107)
!4117 = distinct !DISubprogram(name: "cbprintf_package", scope: !403, file: !403, line: 815, type: !4118, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4120)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!107, !106, !137, !108, !121, null}
!4120 = !{!4121, !4122, !4123, !4124, !4125, !4126}
!4121 = !DILocalVariable(name: "packaged", arg: 1, scope: !4117, file: !403, line: 815, type: !106)
!4122 = !DILocalVariable(name: "len", arg: 2, scope: !4117, file: !403, line: 815, type: !137)
!4123 = !DILocalVariable(name: "flags", arg: 3, scope: !4117, file: !403, line: 815, type: !108)
!4124 = !DILocalVariable(name: "format", arg: 4, scope: !4117, file: !403, line: 816, type: !121)
!4125 = !DILocalVariable(name: "ap", scope: !4117, file: !403, line: 818, type: !3776)
!4126 = !DILocalVariable(name: "ret", scope: !4117, file: !403, line: 819, type: !107)
!4127 = !DILocation(line: 0, scope: !4117)
!4128 = !DILocation(line: 818, column: 2, scope: !4117)
!4129 = !DILocation(line: 818, column: 10, scope: !4117)
!4130 = !DILocation(line: 821, column: 2, scope: !4117)
!4131 = !DILocation(line: 822, column: 8, scope: !4117)
!4132 = !DILocation(line: 823, column: 2, scope: !4117)
!4133 = !DILocation(line: 825, column: 1, scope: !4117)
!4134 = !DILocation(line: 824, column: 2, scope: !4117)
!4135 = distinct !DISubprogram(name: "cbpprintf_external", scope: !403, file: !403, line: 827, type: !4136, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4146)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!107, !4138, !4142, !106, !106}
!4138 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3809, line: 297, baseType: !4139)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 32)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!107, null}
!4142 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3809, line: 328, baseType: !4143)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 32)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!107, !4138, !106, !121, !3776}
!4146 = !{!4147, !4148, !4149, !4150, !4151, !4152, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165}
!4147 = !DILocalVariable(name: "out", arg: 1, scope: !4135, file: !403, line: 827, type: !4138)
!4148 = !DILocalVariable(name: "formatter", arg: 2, scope: !4135, file: !403, line: 828, type: !4142)
!4149 = !DILocalVariable(name: "ctx", arg: 3, scope: !4135, file: !403, line: 829, type: !106)
!4150 = !DILocalVariable(name: "packaged", arg: 4, scope: !4135, file: !403, line: 829, type: !106)
!4151 = !DILocalVariable(name: "buf", scope: !4135, file: !403, line: 831, type: !401)
!4152 = !DILocalVariable(name: "hdr", scope: !4135, file: !403, line: 832, type: !4153)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 32)
!4154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3809, line: 96, size: 64, elements: !4155)
!4155 = !{!4156, !4157}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4154, file: !3809, line: 98, baseType: !3808, size: 32)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4154, file: !3809, line: 101, baseType: !283, size: 32, offset: 32)
!4158 = !DILocalVariable(name: "s", scope: !4135, file: !403, line: 833, type: !283)
!4159 = !DILocalVariable(name: "ps", scope: !4135, file: !403, line: 833, type: !400)
!4160 = !DILocalVariable(name: "i", scope: !4135, file: !403, line: 834, type: !32)
!4161 = !DILocalVariable(name: "args_size", scope: !4135, file: !403, line: 834, type: !32)
!4162 = !DILocalVariable(name: "s_nbr", scope: !4135, file: !403, line: 834, type: !32)
!4163 = !DILocalVariable(name: "ros_nbr", scope: !4135, file: !403, line: 834, type: !32)
!4164 = !DILocalVariable(name: "rws_nbr", scope: !4135, file: !403, line: 834, type: !32)
!4165 = !DILocalVariable(name: "s_idx", scope: !4135, file: !403, line: 834, type: !32)
!4166 = !DILocation(line: 0, scope: !4135)
!4167 = !DILocation(line: 836, column: 10, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4135, file: !403, line: 836, column: 6)
!4169 = !DILocation(line: 836, column: 6, scope: !4135)
!4170 = !DILocation(line: 842, column: 28, scope: !4135)
!4171 = !DILocation(line: 842, column: 14, scope: !4135)
!4172 = !DILocation(line: 852, column: 16, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !403, line: 852, column: 2)
!4174 = distinct !DILexicalBlock(scope: !4135, file: !403, line: 852, column: 2)
!4175 = !DILocation(line: 852, column: 2, scope: !4174)
!4176 = !DILocation(line: 841, column: 28, scope: !4135)
!4177 = !DILocation(line: 841, column: 14, scope: !4135)
!4178 = !DILocation(line: 841, column: 32, scope: !4135)
!4179 = !DILocation(line: 847, column: 19, scope: !4135)
!4180 = !DILocation(line: 843, column: 28, scope: !4135)
!4181 = !DILocation(line: 843, column: 14, scope: !4135)
!4182 = !DILocation(line: 847, column: 31, scope: !4135)
!4183 = !DILocation(line: 844, column: 28, scope: !4135)
!4184 = !DILocation(line: 844, column: 14, scope: !4135)
!4185 = !DILocation(line: 847, column: 45, scope: !4135)
!4186 = !DILocation(line: 847, column: 41, scope: !4135)
!4187 = !DILocation(line: 854, column: 24, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4173, file: !403, line: 852, column: 30)
!4189 = !DILocation(line: 854, column: 11, scope: !4188)
!4190 = !DILocation(line: 855, column: 30, scope: !4188)
!4191 = !DILocation(line: 855, column: 22, scope: !4188)
!4192 = !DILocation(line: 855, column: 8, scope: !4188)
!4193 = !DILocation(line: 857, column: 7, scope: !4188)
!4194 = !DILocation(line: 859, column: 8, scope: !4188)
!4195 = !DILocation(line: 859, column: 18, scope: !4188)
!4196 = !DILocation(line: 859, column: 5, scope: !4188)
!4197 = !DILocation(line: 852, column: 26, scope: !4173)
!4198 = distinct !{!4198, !4175, !4199}
!4199 = !DILocation(line: 860, column: 2, scope: !4174)
!4200 = !DILocation(line: 863, column: 6, scope: !4135)
!4201 = !DILocation(line: 866, column: 56, scope: !4135)
!4202 = !DILocation(line: 866, column: 9, scope: !4135)
!4203 = !DILocation(line: 866, column: 2, scope: !4135)
!4204 = !DILocation(line: 867, column: 1, scope: !4135)
!4205 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !403, file: !403, line: 179, type: !4206, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4208)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{!107, !4138, !4142, !106, !121, !106}
!4208 = !{!4209, !4210, !4211, !4212, !4213, !4214}
!4209 = !DILocalVariable(name: "out", arg: 1, scope: !4205, file: !403, line: 179, type: !4138)
!4210 = !DILocalVariable(name: "formatter", arg: 2, scope: !4205, file: !403, line: 180, type: !4142)
!4211 = !DILocalVariable(name: "ctx", arg: 3, scope: !4205, file: !403, line: 181, type: !106)
!4212 = !DILocalVariable(name: "fmt", arg: 4, scope: !4205, file: !403, line: 182, type: !121)
!4213 = !DILocalVariable(name: "buf", arg: 5, scope: !4205, file: !403, line: 182, type: !106)
!4214 = !DILocalVariable(name: "u", scope: !4205, file: !403, line: 187, type: !4215)
!4215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4205, file: !403, line: 184, size: 32, elements: !4216)
!4216 = !{!4217, !4218}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4215, file: !403, line: 185, baseType: !3776, size: 32)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4215, file: !403, line: 186, baseType: !106, size: 32)
!4219 = !DILocation(line: 0, scope: !4205)
!4220 = !DILocation(line: 191, column: 9, scope: !4205)
!4221 = !DILocation(line: 191, column: 2, scope: !4205)
!4222 = distinct !DISubprogram(name: "is_ptr", scope: !403, file: !403, line: 881, type: !4223, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4225)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!136, !121, !107}
!4225 = !{!4226, !4227, !4228, !4229, !4230}
!4226 = !DILocalVariable(name: "fmt", arg: 1, scope: !4222, file: !403, line: 881, type: !121)
!4227 = !DILocalVariable(name: "n", arg: 2, scope: !4222, file: !403, line: 881, type: !107)
!4228 = !DILocalVariable(name: "c", scope: !4222, file: !403, line: 883, type: !123)
!4229 = !DILocalVariable(name: "mod", scope: !4222, file: !403, line: 884, type: !136)
!4230 = !DILocalVariable(name: "cnt", scope: !4222, file: !403, line: 885, type: !107)
!4231 = !DILocation(line: 0, scope: !4222)
!4232 = !DILocation(line: 887, column: 14, scope: !4222)
!4233 = !DILocation(line: 887, column: 22, scope: !4222)
!4234 = !DILocation(line: 887, column: 2, scope: !4222)
!4235 = !DILocation(line: 887, column: 18, scope: !4222)
!4236 = !DILocation(line: 888, column: 7, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4222, file: !403, line: 887, column: 31)
!4238 = !DILocation(line: 889, column: 12, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !403, line: 889, column: 8)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !403, line: 888, column: 12)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !403, line: 888, column: 7)
!4242 = !DILocation(line: 889, column: 8, scope: !4240)
!4243 = !DILocation(line: 890, column: 11, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !403, line: 890, column: 9)
!4245 = distinct !DILexicalBlock(scope: !4239, file: !403, line: 889, column: 18)
!4246 = !DILocation(line: 890, column: 9, scope: !4245)
!4247 = !DILocation(line: 892, column: 16, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4244, file: !403, line: 892, column: 16)
!4249 = !DILocation(line: 892, column: 16, scope: !4244)
!4250 = !DILocation(line: 895, column: 15, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4239, file: !403, line: 895, column: 15)
!4252 = !DILocation(line: 895, column: 15, scope: !4239)
!4253 = !DILocation(line: 900, column: 9, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4237, file: !403, line: 900, column: 7)
!4255 = !DILocation(line: 900, column: 7, scope: !4237)
!4256 = distinct !{!4256, !4234, !4257}
!4257 = !DILocation(line: 903, column: 2, scope: !4222)
!4258 = !DILocation(line: 906, column: 1, scope: !4222)
!4259 = distinct !DISubprogram(name: "is_fmt_spec", scope: !403, file: !403, line: 873, type: !4260, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4262)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!136, !123}
!4262 = !{!4263}
!4263 = !DILocalVariable(name: "c", arg: 1, scope: !4259, file: !403, line: 873, type: !123)
!4264 = !DILocation(line: 0, scope: !4259)
!4265 = !DILocation(line: 875, column: 19, scope: !4259)
!4266 = !DILocation(line: 875, column: 2, scope: !4259)
!4267 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !403, file: !403, line: 908, type: !4268, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4274)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{!107, !106, !137, !4270, !106, !108, !2733, !137}
!4270 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3809, line: 308, baseType: !4271)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 32)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!107, !13, !137, !106}
!4274 = !{!4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4292, !4293, !4294, !4295, !4296, !4302, !4305, !4306, !4307, !4309, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4325, !4328, !4329, !4330, !4331, !4332, !4333, !4335, !4338, !4339, !4340}
!4275 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4267, file: !403, line: 908, type: !106)
!4276 = !DILocalVariable(name: "in_len", arg: 2, scope: !4267, file: !403, line: 909, type: !137)
!4277 = !DILocalVariable(name: "cb", arg: 3, scope: !4267, file: !403, line: 910, type: !4270)
!4278 = !DILocalVariable(name: "ctx", arg: 4, scope: !4267, file: !403, line: 911, type: !106)
!4279 = !DILocalVariable(name: "flags", arg: 5, scope: !4267, file: !403, line: 912, type: !108)
!4280 = !DILocalVariable(name: "strl", arg: 6, scope: !4267, file: !403, line: 913, type: !2733)
!4281 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4267, file: !403, line: 914, type: !137)
!4282 = !DILocalVariable(name: "buf", scope: !4267, file: !403, line: 918, type: !401)
!4283 = !DILocalVariable(name: "buf32", scope: !4267, file: !403, line: 919, type: !1020)
!4284 = !DILocalVariable(name: "args_size", scope: !4267, file: !403, line: 920, type: !32)
!4285 = !DILocalVariable(name: "ros_nbr", scope: !4267, file: !403, line: 920, type: !32)
!4286 = !DILocalVariable(name: "rws_nbr", scope: !4267, file: !403, line: 920, type: !32)
!4287 = !DILocalVariable(name: "fmt_present", scope: !4267, file: !403, line: 921, type: !136)
!4288 = !DILocalVariable(name: "rw_cpy", scope: !4267, file: !403, line: 922, type: !136)
!4289 = !DILocalVariable(name: "ro_cpy", scope: !4267, file: !403, line: 923, type: !136)
!4290 = !DILocalVariable(name: "in_desc", scope: !4267, file: !403, line: 924, type: !4291)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 32)
!4292 = !DILocalVariable(name: "out_len", scope: !4267, file: !403, line: 960, type: !107)
!4293 = !DILocalVariable(name: "fmt", scope: !4267, file: !403, line: 965, type: !121)
!4294 = !DILocalVariable(name: "str_pos", scope: !4267, file: !403, line: 966, type: !401)
!4295 = !DILocalVariable(name: "strl_cnt", scope: !4267, file: !403, line: 967, type: !137)
!4296 = !DILocalVariable(name: "i", scope: !4297, file: !403, line: 973, type: !107)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !403, line: 973, column: 4)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !403, line: 972, column: 15)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !403, line: 972, column: 7)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !403, line: 970, column: 18)
!4301 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 970, column: 6)
!4302 = !DILocalVariable(name: "str", scope: !4303, file: !403, line: 974, type: !121)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !403, line: 973, column: 38)
!4304 = distinct !DILexicalBlock(scope: !4297, file: !403, line: 973, column: 4)
!4305 = !DILocalVariable(name: "len", scope: !4303, file: !403, line: 975, type: !107)
!4306 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4300, file: !403, line: 990, type: !136)
!4307 = !DILocalVariable(name: "i", scope: !4308, file: !403, line: 995, type: !107)
!4308 = distinct !DILexicalBlock(scope: !4300, file: !403, line: 995, column: 3)
!4309 = !DILocalVariable(name: "arg_idx", scope: !4310, file: !403, line: 996, type: !190)
!4310 = distinct !DILexicalBlock(scope: !4311, file: !403, line: 995, column: 37)
!4311 = distinct !DILexicalBlock(scope: !4308, file: !403, line: 995, column: 3)
!4312 = !DILocalVariable(name: "arg_pos", scope: !4310, file: !403, line: 997, type: !190)
!4313 = !DILocalVariable(name: "str", scope: !4310, file: !403, line: 998, type: !121)
!4314 = !DILocalVariable(name: "is_ro", scope: !4310, file: !403, line: 999, type: !136)
!4315 = !DILocalVariable(name: "len", scope: !4310, file: !403, line: 1000, type: !107)
!4316 = !DILocalVariable(name: "out_desc", scope: !4267, file: !403, line: 1038, type: !3812)
!4317 = !DILocalVariable(name: "cpy_str_pos", scope: !4267, file: !403, line: 1040, type: !3794)
!4318 = !DILocalVariable(name: "keep_str_pos", scope: !4267, file: !403, line: 1042, type: !3794)
!4319 = !DILocalVariable(name: "scpy_cnt", scope: !4267, file: !403, line: 1043, type: !190)
!4320 = !DILocalVariable(name: "keep_cnt", scope: !4267, file: !403, line: 1044, type: !190)
!4321 = !DILocalVariable(name: "dst", scope: !4267, file: !403, line: 1045, type: !401)
!4322 = !DILocalVariable(name: "rv", scope: !4267, file: !403, line: 1046, type: !107)
!4323 = !DILocalVariable(name: "i", scope: !4324, file: !403, line: 1074, type: !107)
!4324 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1074, column: 2)
!4325 = !DILocalVariable(name: "arg_idx", scope: !4326, file: !403, line: 1075, type: !190)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !403, line: 1074, column: 36)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !403, line: 1074, column: 2)
!4328 = !DILocalVariable(name: "arg_pos", scope: !4326, file: !403, line: 1076, type: !190)
!4329 = !DILocalVariable(name: "str", scope: !4326, file: !403, line: 1077, type: !121)
!4330 = !DILocalVariable(name: "is_ro", scope: !4326, file: !403, line: 1078, type: !136)
!4331 = !DILocalVariable(name: "in_desc_backup", scope: !4267, file: !403, line: 1114, type: !3812)
!4332 = !DILocalVariable(name: "strs_len", scope: !4267, file: !403, line: 1134, type: !137)
!4333 = !DILocalVariable(name: "i", scope: !4334, file: !403, line: 1143, type: !107)
!4334 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1143, column: 2)
!4335 = !DILocalVariable(name: "loc", scope: !4336, file: !403, line: 1144, type: !190)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !403, line: 1143, column: 37)
!4337 = distinct !DILexicalBlock(scope: !4334, file: !403, line: 1143, column: 2)
!4338 = !DILocalVariable(name: "str", scope: !4336, file: !403, line: 1145, type: !121)
!4339 = !DILocalVariable(name: "str_len", scope: !4336, file: !403, line: 1146, type: !126)
!4340 = !DILabel(scope: !4341, name: "calculate_string_length", file: !403, line: 1021)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !403, line: 1020, column: 56)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !403, line: 1020, column: 15)
!4343 = distinct !DILexicalBlock(scope: !4310, file: !403, line: 1014, column: 8)
!4344 = !DILocation(line: 0, scope: !4267)
!4345 = !DILocation(line: 919, column: 20, scope: !4267)
!4346 = !DILocation(line: 921, column: 27, scope: !4267)
!4347 = !DILocation(line: 921, column: 21, scope: !4267)
!4348 = !DILocation(line: 926, column: 18, scope: !4267)
!4349 = !DILocation(line: 926, column: 11, scope: !4267)
!4350 = !DILocation(line: 926, column: 34, scope: !4267)
!4351 = !DILocation(line: 931, column: 21, scope: !4267)
!4352 = !DILocation(line: 931, column: 12, scope: !4267)
!4353 = !DILocation(line: 932, column: 11, scope: !4267)
!4354 = !DILocation(line: 932, column: 19, scope: !4267)
!4355 = !DILocation(line: 938, column: 21, scope: !4267)
!4356 = !DILocation(line: 938, column: 12, scope: !4267)
!4357 = !DILocation(line: 939, column: 19, scope: !4267)
!4358 = !DILocation(line: 939, column: 23, scope: !4267)
!4359 = !DILocation(line: 946, column: 14, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 946, column: 6)
!4361 = !DILocation(line: 947, column: 7, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !403, line: 947, column: 7)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !403, line: 946, column: 26)
!4364 = !DILocation(line: 947, column: 7, scope: !4363)
!4365 = !DILocation(line: 948, column: 4, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !403, line: 947, column: 11)
!4367 = !DILocation(line: 949, column: 3, scope: !4366)
!4368 = !DILocation(line: 958, column: 23, scope: !4267)
!4369 = !DILocation(line: 958, column: 14, scope: !4267)
!4370 = !DILocation(line: 958, column: 27, scope: !4267)
!4371 = !DILocation(line: 965, column: 41, scope: !4267)
!4372 = !DILocation(line: 965, column: 20, scope: !4267)
!4373 = !DILocation(line: 966, column: 22, scope: !4267)
!4374 = !DILocation(line: 970, column: 9, scope: !4301)
!4375 = !DILocation(line: 970, column: 6, scope: !4267)
!4376 = !DILocation(line: 972, column: 7, scope: !4300)
!4377 = !DILocation(line: 0, scope: !4297)
!4378 = !DILocation(line: 973, column: 4, scope: !4297)
!4379 = !DILocation(line: 974, column: 46, scope: !4303)
!4380 = !DILocation(line: 974, column: 40, scope: !4303)
!4381 = !DILocation(line: 974, column: 23, scope: !4303)
!4382 = !DILocation(line: 0, scope: !4303)
!4383 = !DILocation(line: 975, column: 15, scope: !4303)
!4384 = !DILocation(line: 978, column: 14, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4303, file: !403, line: 978, column: 9)
!4386 = !DILocation(line: 979, column: 25, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4385, file: !403, line: 978, column: 38)
!4388 = !DILocation(line: 979, column: 19, scope: !4387)
!4389 = !DILocation(line: 979, column: 6, scope: !4387)
!4390 = !DILocation(line: 979, column: 23, scope: !4387)
!4391 = !DILocation(line: 980, column: 5, scope: !4387)
!4392 = !DILocation(line: 981, column: 13, scope: !4303)
!4393 = !DILocation(line: 982, column: 12, scope: !4303)
!4394 = !DILocation(line: 973, column: 34, scope: !4304)
!4395 = !DILocation(line: 973, column: 22, scope: !4304)
!4396 = distinct !{!4396, !4378, !4397}
!4397 = !DILocation(line: 983, column: 4, scope: !4297)
!4398 = !DILocation(line: 985, column: 16, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !403, line: 985, column: 8)
!4400 = distinct !DILexicalBlock(scope: !4299, file: !403, line: 984, column: 10)
!4401 = !DILocation(line: 967, column: 9, scope: !4267)
!4402 = !DILocation(line: 971, column: 11, scope: !4300)
!4403 = !DILocation(line: 0, scope: !4300)
!4404 = !DILocation(line: 0, scope: !4308)
!4405 = !DILocation(line: 995, column: 21, scope: !4311)
!4406 = !DILocation(line: 995, column: 3, scope: !4308)
!4407 = !DILocation(line: 990, column: 34, scope: !4300)
!4408 = !DILocation(line: 990, column: 26, scope: !4300)
!4409 = !DILocation(line: 996, column: 30, scope: !4310)
!4410 = !DILocation(line: 0, scope: !4310)
!4411 = !DILocation(line: 997, column: 30, scope: !4310)
!4412 = !DILocation(line: 997, column: 22, scope: !4310)
!4413 = !DILocation(line: 998, column: 39, scope: !4310)
!4414 = !DILocation(line: 998, column: 22, scope: !4310)
!4415 = !DILocation(line: 999, column: 17, scope: !4310)
!4416 = !DILocation(line: 1002, column: 20, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4310, file: !403, line: 1002, column: 8)
!4418 = !DILocation(line: 996, column: 22, scope: !4310)
!4419 = !DILocation(line: 1002, column: 35, scope: !4417)
!4420 = !DILocation(line: 1002, column: 23, scope: !4417)
!4421 = !DILocation(line: 1002, column: 8, scope: !4310)
!4422 = !DILocation(line: 1003, column: 5, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4424, file: !403, line: 1003, column: 5)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !403, line: 1003, column: 5)
!4425 = distinct !DILexicalBlock(scope: !4426, file: !403, line: 1003, column: 5)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !403, line: 1003, column: 5)
!4427 = distinct !DILexicalBlock(scope: !4417, file: !403, line: 1002, column: 45)
!4428 = !DILocation(line: 1010, column: 13, scope: !4427)
!4429 = !DILocation(line: 1011, column: 5, scope: !4427)
!4430 = !DILocation(line: 1014, column: 8, scope: !4310)
!4431 = !DILocation(line: 1015, column: 9, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4343, file: !403, line: 1014, column: 15)
!4433 = !DILocation(line: 1018, column: 14, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !403, line: 1017, column: 12)
!4435 = distinct !DILexicalBlock(scope: !4432, file: !403, line: 1015, column: 9)
!4436 = !DILocation(line: 1020, column: 4, scope: !4432)
!4437 = !DILocation(line: 1020, column: 15, scope: !4343)
!4438 = !DILocation(line: 1021, column: 1, scope: !4341)
!4439 = !DILocation(line: 1022, column: 11, scope: !4341)
!4440 = !DILocation(line: 1025, column: 14, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4341, file: !403, line: 1025, column: 9)
!4442 = !DILocation(line: 1026, column: 25, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4441, file: !403, line: 1025, column: 38)
!4444 = !DILocation(line: 1026, column: 19, scope: !4443)
!4445 = !DILocation(line: 1026, column: 6, scope: !4443)
!4446 = !DILocation(line: 1026, column: 23, scope: !4443)
!4447 = !DILocation(line: 1027, column: 5, scope: !4443)
!4448 = !DILocation(line: 1031, column: 21, scope: !4341)
!4449 = !DILocation(line: 1031, column: 13, scope: !4341)
!4450 = !DILocation(line: 1032, column: 4, scope: !4341)
!4451 = !DILocation(line: 995, column: 33, scope: !4311)
!4452 = distinct !{!4452, !4406, !4453}
!4453 = !DILocation(line: 1033, column: 3, scope: !4308)
!4454 = !DILocation(line: 1040, column: 10, scope: !4267)
!4455 = !DILocation(line: 1042, column: 10, scope: !4267)
!4456 = !DILocation(line: 1052, column: 6, scope: !4267)
!4457 = !DILocation(line: 1055, column: 9, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !403, line: 1052, column: 14)
!4459 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1052, column: 6)
!4460 = !DILocation(line: 1056, column: 2, scope: !4458)
!4461 = !DILocation(line: 1056, column: 21, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4459, file: !403, line: 1056, column: 13)
!4463 = !DILocation(line: 1066, column: 3, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !403, line: 1065, column: 11)
!4465 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1065, column: 6)
!4466 = !DILocation(line: 1067, column: 2, scope: !4464)
!4467 = !DILocation(line: 1068, column: 10, scope: !4267)
!4468 = !DILocation(line: 0, scope: !4324)
!4469 = !DILocation(line: 1074, column: 20, scope: !4327)
!4470 = !DILocation(line: 1074, column: 2, scope: !4324)
!4471 = !DILocation(line: 1110, column: 24, scope: !4267)
!4472 = !DILocation(line: 1053, column: 12, scope: !4458)
!4473 = !DILocation(line: 1054, column: 12, scope: !4458)
!4474 = !DILocation(line: 1108, column: 30, scope: !4267)
!4475 = !DILocation(line: 1108, column: 40, scope: !4267)
!4476 = !DILocation(line: 1108, column: 38, scope: !4267)
!4477 = !DILocation(line: 1109, column: 31, scope: !4267)
!4478 = !DILocation(line: 1109, column: 24, scope: !4267)
!4479 = !DILocation(line: 1110, column: 31, scope: !4267)
!4480 = !DILocation(line: 1114, column: 31, scope: !4267)
!4481 = !DILocation(line: 1114, column: 48, scope: !4267)
!4482 = !DILocation(line: 1115, column: 13, scope: !4267)
!4483 = !DILocation(line: 1118, column: 7, scope: !4267)
!4484 = !DILocation(line: 1119, column: 9, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1119, column: 6)
!4486 = !DILocation(line: 1119, column: 6, scope: !4267)
!4487 = !DILocation(line: 1075, column: 29, scope: !4326)
!4488 = !DILocation(line: 1075, column: 21, scope: !4326)
!4489 = !DILocation(line: 0, scope: !4326)
!4490 = !DILocation(line: 1076, column: 29, scope: !4326)
!4491 = !DILocation(line: 1076, column: 21, scope: !4326)
!4492 = !DILocation(line: 1077, column: 38, scope: !4326)
!4493 = !DILocation(line: 1077, column: 21, scope: !4326)
!4494 = !DILocation(line: 1078, column: 16, scope: !4326)
!4495 = !DILocation(line: 1080, column: 19, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4326, file: !403, line: 1080, column: 7)
!4497 = !DILocation(line: 1080, column: 34, scope: !4496)
!4498 = !DILocation(line: 1080, column: 22, scope: !4496)
!4499 = !DILocation(line: 1080, column: 7, scope: !4326)
!4500 = !DILocation(line: 1084, column: 7, scope: !4326)
!4501 = !DILocation(line: 1085, column: 8, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !403, line: 1084, column: 14)
!4503 = distinct !DILexicalBlock(scope: !4326, file: !403, line: 1084, column: 7)
!4504 = !DILocation(line: 1087, column: 25, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !403, line: 1085, column: 49)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !403, line: 1085, column: 8)
!4507 = !DILocation(line: 1088, column: 4, scope: !4505)
!4508 = !DILocation(line: 1088, column: 15, scope: !4506)
!4509 = !DILocation(line: 1090, column: 26, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4511, file: !403, line: 1088, column: 61)
!4511 = distinct !DILexicalBlock(scope: !4506, file: !403, line: 1088, column: 15)
!4512 = !DILocation(line: 1091, column: 4, scope: !4510)
!4513 = !DILocation(line: 1095, column: 8, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4503, file: !403, line: 1094, column: 10)
!4515 = !DILocation(line: 1097, column: 25, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4517, file: !403, line: 1095, column: 49)
!4517 = distinct !DILexicalBlock(scope: !4514, file: !403, line: 1095, column: 8)
!4518 = !DILocation(line: 1098, column: 4, scope: !4516)
!4519 = !DILocation(line: 1100, column: 26, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4517, file: !403, line: 1098, column: 11)
!4521 = !DILocation(line: 1100, column: 5, scope: !4520)
!4522 = !DILocation(line: 1100, column: 30, scope: !4520)
!4523 = !DILocation(line: 1101, column: 26, scope: !4520)
!4524 = !DILocation(line: 0, scope: !4503)
!4525 = !DILocation(line: 1074, column: 32, scope: !4327)
!4526 = distinct !{!4526, !4470, !4527}
!4527 = !DILocation(line: 1104, column: 2, scope: !4324)
!4528 = !DILocation(line: 1124, column: 13, scope: !4267)
!4529 = !DILocation(line: 1127, column: 10, scope: !4267)
!4530 = !DILocation(line: 1127, column: 7, scope: !4267)
!4531 = !DILocation(line: 1128, column: 9, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1128, column: 6)
!4533 = !DILocation(line: 1128, column: 6, scope: !4267)
!4534 = !DILocation(line: 1134, column: 27, scope: !4267)
!4535 = !DILocation(line: 1136, column: 7, scope: !4267)
!4536 = !DILocation(line: 1137, column: 9, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4267, file: !403, line: 1137, column: 6)
!4538 = !DILocation(line: 1137, column: 6, scope: !4267)
!4539 = !DILocation(line: 1131, column: 10, scope: !4267)
!4540 = !DILocation(line: 1140, column: 10, scope: !4267)
!4541 = !DILocation(line: 0, scope: !4334)
!4542 = !DILocation(line: 1143, column: 20, scope: !4337)
!4543 = !DILocation(line: 1143, column: 2, scope: !4334)
!4544 = !DILocation(line: 1144, column: 3, scope: !4336)
!4545 = !DILocation(line: 1144, column: 17, scope: !4336)
!4546 = !DILocation(line: 0, scope: !4336)
!4547 = !DILocation(line: 1144, column: 11, scope: !4336)
!4548 = !DILocation(line: 1145, column: 38, scope: !4336)
!4549 = !DILocation(line: 1145, column: 21, scope: !4336)
!4550 = !DILocation(line: 1146, column: 22, scope: !4336)
!4551 = !DILocation(line: 1146, column: 29, scope: !4336)
!4552 = !DILocation(line: 1148, column: 8, scope: !4336)
!4553 = !DILocation(line: 1149, column: 10, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4336, file: !403, line: 1149, column: 7)
!4555 = !DILocation(line: 1149, column: 7, scope: !4336)
!4556 = !DILocation(line: 1154, column: 8, scope: !4336)
!4557 = !DILocation(line: 1155, column: 10, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4336, file: !403, line: 1155, column: 7)
!4559 = !DILocation(line: 1155, column: 7, scope: !4336)
!4560 = !DILocation(line: 1159, column: 2, scope: !4337)
!4561 = !DILocation(line: 1152, column: 11, scope: !4336)
!4562 = !DILocation(line: 1158, column: 11, scope: !4336)
!4563 = !DILocation(line: 1143, column: 33, scope: !4337)
!4564 = distinct !{!4564, !4543, !4565}
!4565 = !DILocation(line: 1159, column: 2, scope: !4334)
!4566 = !DILocation(line: 1162, column: 8, scope: !4267)
!4567 = !DILocation(line: 1164, column: 2, scope: !4267)
!4568 = !DILocation(line: 1165, column: 1, scope: !4267)
!4569 = distinct !DISubprogram(name: "get_package_len", scope: !403, file: !403, line: 196, type: !4570, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4572)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!137, !106}
!4572 = !{!4573, !4574, !4575, !4576, !4577, !4578, !4579}
!4573 = !DILocalVariable(name: "packaged", arg: 1, scope: !4569, file: !403, line: 196, type: !106)
!4574 = !DILocalVariable(name: "buf", scope: !4569, file: !403, line: 200, type: !401)
!4575 = !DILocalVariable(name: "start", scope: !4569, file: !403, line: 201, type: !401)
!4576 = !DILocalVariable(name: "args_size", scope: !4569, file: !403, line: 202, type: !32)
!4577 = !DILocalVariable(name: "s_nbr", scope: !4569, file: !403, line: 202, type: !32)
!4578 = !DILocalVariable(name: "ros_nbr", scope: !4569, file: !403, line: 202, type: !32)
!4579 = !DILocalVariable(name: "i", scope: !4580, file: !403, line: 215, type: !107)
!4580 = distinct !DILexicalBlock(scope: !4569, file: !403, line: 215, column: 2)
!4581 = !DILocation(line: 0, scope: !4569)
!4582 = !DILocation(line: 204, column: 14, scope: !4569)
!4583 = !DILocation(line: 204, column: 21, scope: !4569)
!4584 = !DILocation(line: 205, column: 14, scope: !4569)
!4585 = !DILocation(line: 206, column: 14, scope: !4569)
!4586 = !DILocation(line: 209, column: 6, scope: !4569)
!4587 = !DILocation(line: 212, column: 6, scope: !4569)
!4588 = !DILocation(line: 0, scope: !4580)
!4589 = !DILocation(line: 215, column: 20, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4580, file: !403, line: 215, column: 2)
!4591 = !DILocation(line: 215, column: 2, scope: !4580)
!4592 = !DILocation(line: 220, column: 33, scope: !4569)
!4593 = !DILocation(line: 220, column: 2, scope: !4569)
!4594 = !DILocation(line: 216, column: 6, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4590, file: !403, line: 215, column: 34)
!4596 = !DILocation(line: 217, column: 10, scope: !4595)
!4597 = !DILocation(line: 217, column: 36, scope: !4595)
!4598 = !DILocation(line: 217, column: 7, scope: !4595)
!4599 = !DILocation(line: 215, column: 30, scope: !4590)
!4600 = distinct !{!4600, !4591, !4601}
!4601 = !DILocation(line: 218, column: 2, scope: !4580)
!4602 = distinct !DISubprogram(name: "append_string", scope: !403, file: !403, line: 223, type: !4603, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !388, retainedNodes: !4605)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!107, !4270, !106, !121, !126}
!4605 = !{!4606, !4607, !4608, !4609}
!4606 = !DILocalVariable(name: "cb", arg: 1, scope: !4602, file: !403, line: 223, type: !4270)
!4607 = !DILocalVariable(name: "ctx", arg: 2, scope: !4602, file: !403, line: 223, type: !106)
!4608 = !DILocalVariable(name: "str", arg: 3, scope: !4602, file: !403, line: 223, type: !121)
!4609 = !DILocalVariable(name: "strl", arg: 4, scope: !4602, file: !403, line: 223, type: !126)
!4610 = !DILocation(line: 0, scope: !4602)
!4611 = !DILocation(line: 225, column: 9, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4602, file: !403, line: 225, column: 6)
!4613 = !DILocation(line: 225, column: 6, scope: !4602)
!4614 = !DILocation(line: 226, column: 14, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4612, file: !403, line: 225, column: 18)
!4616 = !DILocation(line: 226, column: 12, scope: !4615)
!4617 = !DILocation(line: 226, column: 3, scope: !4615)
!4618 = !DILocation(line: 229, column: 14, scope: !4602)
!4619 = !DILocation(line: 229, column: 9, scope: !4602)
!4620 = !DILocation(line: 229, column: 27, scope: !4602)
!4621 = !DILocation(line: 229, column: 39, scope: !4602)
!4622 = !DILocation(line: 230, column: 17, scope: !4602)
!4623 = !DILocation(line: 230, column: 9, scope: !4602)
!4624 = !DILocation(line: 230, column: 2, scope: !4602)
!4625 = !DILocation(line: 231, column: 1, scope: !4602)
!4626 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !416, file: !416, line: 45, type: !418, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4627)
!4627 = !{!4628}
!4628 = !DILocalVariable(name: "c", arg: 1, scope: !4626, file: !416, line: 45, type: !107)
!4629 = !DILocation(line: 0, scope: !4626)
!4630 = !DILocation(line: 50, column: 2, scope: !4626)
!4631 = distinct !DISubprogram(name: "__printk_hook_install", scope: !416, file: !416, line: 63, type: !4632, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4634)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{null, !417}
!4634 = !{!4635}
!4635 = !DILocalVariable(name: "fn", arg: 1, scope: !4631, file: !416, line: 63, type: !417)
!4636 = !DILocation(line: 0, scope: !4631)
!4637 = !DILocation(line: 65, column: 12, scope: !4631)
!4638 = !DILocation(line: 66, column: 1, scope: !4631)
!4639 = distinct !DISubprogram(name: "__printk_get_hook", scope: !416, file: !416, line: 76, type: !4640, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !256)
!4640 = !DISubroutineType(types: !4641)
!4641 = !{!106}
!4642 = !DILocation(line: 78, column: 9, scope: !4639)
!4643 = !DILocation(line: 78, column: 2, scope: !4639)
!4644 = distinct !DISubprogram(name: "vprintk", scope: !416, file: !416, line: 113, type: !4645, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4653)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{null, !121, !4647}
!4647 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3777, line: 99, baseType: !4648)
!4648 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3777, line: 40, baseType: !4649)
!4649 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !416, baseType: !4650)
!4650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4651)
!4651 = !{!4652}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4650, file: !416, line: 79, baseType: !106, size: 32)
!4653 = !{!4654, !4655, !4656}
!4654 = !DILocalVariable(name: "fmt", arg: 1, scope: !4644, file: !416, line: 113, type: !121)
!4655 = !DILocalVariable(name: "ap", arg: 2, scope: !4644, file: !416, line: 113, type: !4647)
!4656 = !DILocalVariable(name: "ctx", scope: !4657, file: !416, line: 121, type: !4659)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !416, line: 120, column: 27)
!4658 = distinct !DILexicalBlock(scope: !4644, file: !416, line: 120, column: 6)
!4659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !416, line: 81, size: 32, elements: !4660)
!4660 = !{!4661, !4662}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4659, file: !416, line: 85, baseType: !32, size: 32)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4659, file: !416, line: 86, baseType: !4663, offset: 32)
!4663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, elements: !2731)
!4664 = !DILocation(line: 0, scope: !4644)
!4665 = !DILocation(line: 148, column: 3, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4658, file: !416, line: 138, column: 9)
!4667 = !DILocation(line: 155, column: 1, scope: !4644)
!4668 = distinct !DISubprogram(name: "char_out", scope: !416, file: !416, line: 107, type: !4669, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4671)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!107, !107, !106}
!4671 = !{!4672, !4673}
!4672 = !DILocalVariable(name: "c", arg: 1, scope: !4668, file: !416, line: 107, type: !107)
!4673 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4668, file: !416, line: 107, type: !106)
!4674 = !DILocation(line: 0, scope: !4668)
!4675 = !DILocation(line: 110, column: 9, scope: !4668)
!4676 = !DILocation(line: 110, column: 2, scope: !4668)
!4677 = distinct !DISubprogram(name: "cbvprintf", scope: !3809, file: !3809, line: 739, type: !4678, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4680)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!107, !4138, !106, !121, !4647}
!4680 = !{!4681, !4682, !4683, !4684}
!4681 = !DILocalVariable(name: "out", arg: 1, scope: !4677, file: !3809, line: 739, type: !4138)
!4682 = !DILocalVariable(name: "ctx", arg: 2, scope: !4677, file: !3809, line: 739, type: !106)
!4683 = !DILocalVariable(name: "format", arg: 3, scope: !4677, file: !3809, line: 739, type: !121)
!4684 = !DILocalVariable(name: "ap", arg: 4, scope: !4677, file: !3809, line: 739, type: !4647)
!4685 = !DILocation(line: 0, scope: !4677)
!4686 = !DILocation(line: 741, column: 9, scope: !4677)
!4687 = !DILocation(line: 741, column: 2, scope: !4677)
!4688 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !416, file: !416, line: 157, type: !4689, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4691)
!4689 = !DISubroutineType(types: !4690)
!4690 = !{null, !283, !137}
!4691 = !{!4692, !4693, !4694}
!4692 = !DILocalVariable(name: "c", arg: 1, scope: !4688, file: !416, line: 157, type: !283)
!4693 = !DILocalVariable(name: "n", arg: 2, scope: !4688, file: !416, line: 157, type: !137)
!4694 = !DILocalVariable(name: "i", scope: !4688, file: !416, line: 159, type: !137)
!4695 = !DILocation(line: 0, scope: !4688)
!4696 = !DILocation(line: 164, column: 16, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !416, line: 164, column: 2)
!4698 = distinct !DILexicalBlock(scope: !4688, file: !416, line: 164, column: 2)
!4699 = !DILocation(line: 164, column: 2, scope: !4698)
!4700 = !DILocation(line: 165, column: 3, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4697, file: !416, line: 164, column: 26)
!4702 = !DILocation(line: 165, column: 13, scope: !4701)
!4703 = !DILocation(line: 164, column: 22, scope: !4697)
!4704 = distinct !{!4704, !4699, !4705}
!4705 = !DILocation(line: 166, column: 2, scope: !4698)
!4706 = !DILocation(line: 171, column: 1, scope: !4688)
!4707 = distinct !DISubprogram(name: "printk", scope: !416, file: !416, line: 203, type: !4708, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4710)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{null, !121, null}
!4710 = !{!4711, !4712}
!4711 = !DILocalVariable(name: "fmt", arg: 1, scope: !4707, file: !416, line: 203, type: !121)
!4712 = !DILocalVariable(name: "ap", scope: !4707, file: !416, line: 205, type: !4647)
!4713 = !DILocation(line: 0, scope: !4707)
!4714 = !DILocation(line: 205, column: 2, scope: !4707)
!4715 = !DILocation(line: 205, column: 10, scope: !4707)
!4716 = !DILocation(line: 207, column: 2, scope: !4707)
!4717 = !DILocation(line: 209, column: 2, scope: !4707)
!4718 = !DILocation(line: 211, column: 2, scope: !4707)
!4719 = !DILocation(line: 212, column: 1, scope: !4707)
!4720 = distinct !DISubprogram(name: "snprintk", scope: !416, file: !416, line: 239, type: !4721, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4723)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!107, !283, !137, !121, null}
!4723 = !{!4724, !4725, !4726, !4727, !4728}
!4724 = !DILocalVariable(name: "str", arg: 1, scope: !4720, file: !416, line: 239, type: !283)
!4725 = !DILocalVariable(name: "size", arg: 2, scope: !4720, file: !416, line: 239, type: !137)
!4726 = !DILocalVariable(name: "fmt", arg: 3, scope: !4720, file: !416, line: 239, type: !121)
!4727 = !DILocalVariable(name: "ap", scope: !4720, file: !416, line: 241, type: !4647)
!4728 = !DILocalVariable(name: "ret", scope: !4720, file: !416, line: 242, type: !107)
!4729 = !DILocation(line: 0, scope: !4720)
!4730 = !DILocation(line: 241, column: 2, scope: !4720)
!4731 = !DILocation(line: 241, column: 10, scope: !4720)
!4732 = !DILocation(line: 244, column: 2, scope: !4720)
!4733 = !DILocation(line: 245, column: 8, scope: !4720)
!4734 = !DILocation(line: 246, column: 2, scope: !4720)
!4735 = !DILocation(line: 249, column: 1, scope: !4720)
!4736 = !DILocation(line: 248, column: 2, scope: !4720)
!4737 = distinct !DISubprogram(name: "vsnprintk", scope: !416, file: !416, line: 251, type: !4738, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4740)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!107, !283, !137, !121, !4647}
!4740 = !{!4741, !4742, !4743, !4744, !4745}
!4741 = !DILocalVariable(name: "str", arg: 1, scope: !4737, file: !416, line: 251, type: !283)
!4742 = !DILocalVariable(name: "size", arg: 2, scope: !4737, file: !416, line: 251, type: !137)
!4743 = !DILocalVariable(name: "fmt", arg: 3, scope: !4737, file: !416, line: 251, type: !121)
!4744 = !DILocalVariable(name: "ap", arg: 4, scope: !4737, file: !416, line: 251, type: !4647)
!4745 = !DILocalVariable(name: "ctx", scope: !4737, file: !416, line: 253, type: !4746)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !416, line: 217, size: 96, elements: !4747)
!4747 = !{!4748, !4749, !4750}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4746, file: !416, line: 218, baseType: !283, size: 32)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4746, file: !416, line: 219, baseType: !107, size: 32, offset: 32)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4746, file: !416, line: 220, baseType: !107, size: 32, offset: 64)
!4751 = !DILocation(line: 0, scope: !4737)
!4752 = !DILocation(line: 253, column: 2, scope: !4737)
!4753 = !DILocation(line: 253, column: 21, scope: !4737)
!4754 = !DILocation(line: 253, column: 27, scope: !4737)
!4755 = !DILocation(line: 255, column: 2, scope: !4737)
!4756 = !DILocation(line: 257, column: 10, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4737, file: !416, line: 257, column: 6)
!4758 = !DILocation(line: 257, column: 22, scope: !4757)
!4759 = !DILocation(line: 257, column: 16, scope: !4757)
!4760 = !DILocation(line: 257, column: 6, scope: !4737)
!4761 = !DILocation(line: 258, column: 3, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4757, file: !416, line: 257, column: 27)
!4763 = !DILocation(line: 258, column: 18, scope: !4762)
!4764 = !DILocation(line: 259, column: 2, scope: !4762)
!4765 = !DILocation(line: 262, column: 1, scope: !4737)
!4766 = !DILocation(line: 261, column: 2, scope: !4737)
!4767 = distinct !DISubprogram(name: "str_out", scope: !416, file: !416, line: 223, type: !4768, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !412, retainedNodes: !4771)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{!107, !107, !4770}
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 32)
!4771 = !{!4772, !4773}
!4772 = !DILocalVariable(name: "c", arg: 1, scope: !4767, file: !416, line: 223, type: !107)
!4773 = !DILocalVariable(name: "ctx", arg: 2, scope: !4767, file: !416, line: 223, type: !4770)
!4774 = !DILocation(line: 0, scope: !4767)
!4775 = !DILocation(line: 225, column: 11, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4767, file: !416, line: 225, column: 6)
!4777 = !DILocation(line: 225, column: 15, scope: !4776)
!4778 = !DILocation(line: 0, scope: !4776)
!4779 = !DILocation(line: 225, column: 23, scope: !4776)
!4780 = !DILocation(line: 225, column: 45, scope: !4776)
!4781 = !DILocation(line: 225, column: 37, scope: !4776)
!4782 = !DILocation(line: 225, column: 6, scope: !4767)
!4783 = !DILocation(line: 226, column: 8, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4776, file: !416, line: 225, column: 50)
!4785 = !DILocation(line: 226, column: 13, scope: !4784)
!4786 = !DILocation(line: 227, column: 3, scope: !4784)
!4787 = !DILocation(line: 230, column: 29, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4767, file: !416, line: 230, column: 6)
!4789 = !DILocation(line: 230, column: 17, scope: !4788)
!4790 = !DILocation(line: 230, column: 6, scope: !4767)
!4791 = !DILocation(line: 231, column: 22, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4788, file: !416, line: 230, column: 34)
!4793 = !DILocation(line: 231, column: 3, scope: !4792)
!4794 = !DILocation(line: 231, column: 26, scope: !4792)
!4795 = !DILocation(line: 232, column: 2, scope: !4792)
!4796 = !DILocation(line: 233, column: 28, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4788, file: !416, line: 232, column: 9)
!4798 = !DILocation(line: 233, column: 22, scope: !4797)
!4799 = !DILocation(line: 233, column: 3, scope: !4797)
!4800 = !DILocation(line: 233, column: 26, scope: !4797)
!4801 = !DILocation(line: 237, column: 1, scope: !4767)
!4802 = distinct !DISubprogram(name: "z_thread_entry", scope: !4803, file: !4803, line: 30, type: !4804, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !4806)
!4803 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4804 = !DISubroutineType(types: !4805)
!4805 = !{null, !324, !106, !106, !106}
!4806 = !{!4807, !4808, !4809, !4810}
!4807 = !DILocalVariable(name: "entry", arg: 1, scope: !4802, file: !4803, line: 30, type: !324)
!4808 = !DILocalVariable(name: "p1", arg: 2, scope: !4802, file: !4803, line: 31, type: !106)
!4809 = !DILocalVariable(name: "p2", arg: 3, scope: !4802, file: !4803, line: 31, type: !106)
!4810 = !DILocalVariable(name: "p3", arg: 4, scope: !4802, file: !4803, line: 31, type: !106)
!4811 = !DILocation(line: 0, scope: !4802)
!4812 = !DILocation(line: 36, column: 2, scope: !4802)
!4813 = !DILocation(line: 38, column: 17, scope: !4802)
!4814 = !DILocation(line: 38, column: 2, scope: !4802)
!4815 = !DILocation(line: 45, column: 2, scope: !4802)
!4816 = distinct !DISubprogram(name: "k_current_get", scope: !142, file: !142, line: 530, type: !4817, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !256)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!4819}
!4819 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !4820)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 32)
!4821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !4822)
!4822 = !{!4823, !4881, !4893, !4894, !4895, !4896, !4902, !4915}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4821, file: !168, line: 247, baseType: !4824, size: 384)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !4825)
!4825 = !{!4826, !4850, !4857, !4858, !4859, !4868, !4869, !4870}
!4826 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !168, line: 60, baseType: !4827, size: 64)
!4827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4824, file: !168, line: 60, size: 64, elements: !4828)
!4828 = !{!4829, !4844}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4827, file: !168, line: 61, baseType: !4830, size: 64)
!4830 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !4831)
!4831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !4832)
!4832 = !{!4833, !4839}
!4833 = !DIDerivedType(tag: DW_TAG_member, scope: !4831, file: !151, line: 38, baseType: !4834, size: 32)
!4834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4831, file: !151, line: 38, size: 32, elements: !4835)
!4835 = !{!4836, !4838}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4834, file: !151, line: 39, baseType: !4837, size: 32)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 32)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4834, file: !151, line: 40, baseType: !4837, size: 32)
!4839 = !DIDerivedType(tag: DW_TAG_member, scope: !4831, file: !151, line: 42, baseType: !4840, size: 32, offset: 32)
!4840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4831, file: !151, line: 42, size: 32, elements: !4841)
!4841 = !{!4842, !4843}
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4840, file: !151, line: 43, baseType: !4837, size: 32)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4840, file: !151, line: 44, baseType: !4837, size: 32)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4827, file: !168, line: 62, baseType: !4845, size: 64)
!4845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !4846)
!4846 = !{!4847}
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4845, file: !180, line: 50, baseType: !4848, size: 64)
!4848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4849, size: 64, elements: !185)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 32)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4824, file: !168, line: 68, baseType: !4851, size: 32, offset: 64)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 32)
!4852 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !4853)
!4853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !4854)
!4854 = !{!4855}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4853, file: !146, line: 232, baseType: !4856, size: 64)
!4856 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !4831)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4824, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4824, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!4859 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !168, line: 90, baseType: !4860, size: 16, offset: 112)
!4860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4824, file: !168, line: 90, size: 16, elements: !4861)
!4861 = !{!4862, !4867}
!4862 = !DIDerivedType(tag: DW_TAG_member, scope: !4860, file: !168, line: 91, baseType: !4863, size: 16)
!4863 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4860, file: !168, line: 91, size: 16, elements: !4864)
!4864 = !{!4865, !4866}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4863, file: !168, line: 96, baseType: !200, size: 8)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4863, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4860, file: !168, line: 100, baseType: !126, size: 16)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4824, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4824, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4824, file: !168, line: 131, baseType: !4871, size: 192, offset: 192)
!4871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !4872)
!4872 = !{!4873, !4874, !4880}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4871, file: !146, line: 245, baseType: !4830, size: 64)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4871, file: !146, line: 246, baseType: !4875, size: 32, offset: 64)
!4875 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !4876)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 32)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{null, !4879}
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 32)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4871, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4821, file: !168, line: 250, baseType: !4882, size: 288, offset: 384)
!4882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !4883)
!4883 = !{!4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892}
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4882, file: !219, line: 26, baseType: !108, size: 32)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4882, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4882, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4882, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4882, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4882, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4882, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4882, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4882, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4821, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4821, file: !168, line: 256, baseType: !4852, size: 64, offset: 704)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4821, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4821, file: !168, line: 300, baseType: !4897, size: 96, offset: 800)
!4897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !4898)
!4898 = !{!4899, !4900, !4901}
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4897, file: !168, line: 153, baseType: !22, size: 32)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4897, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4897, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4821, file: !168, line: 325, baseType: !4903, size: 32, offset: 896)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 32)
!4904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !4905)
!4905 = !{!4906, !4912, !4913}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4904, file: !142, line: 5074, baseType: !4907, size: 96)
!4907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !4908)
!4908 = !{!4909, !4910, !4911}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4907, file: !245, line: 57, baseType: !248, size: 32)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4907, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4907, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4904, file: !142, line: 5075, baseType: !4852, size: 64, offset: 96)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4904, file: !142, line: 5076, baseType: !4914, offset: 160)
!4914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4821, file: !168, line: 343, baseType: !4916, size: 64, offset: 928)
!4916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !4917)
!4917 = !{!4918, !4919}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4916, file: !219, line: 63, baseType: !108, size: 32)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4916, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!4920 = !DILocation(line: 535, column: 9, scope: !4816)
!4921 = !DILocation(line: 535, column: 2, scope: !4816)
!4922 = distinct !DISubprogram(name: "k_thread_abort", scope: !3734, file: !3734, line: 188, type: !4923, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !4925)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{null, !4819}
!4925 = !{!4926}
!4926 = !DILocalVariable(name: "thread", arg: 1, scope: !4922, file: !3734, line: 188, type: !4819)
!4927 = !DILocation(line: 0, scope: !4922)
!4928 = !DILocation(line: 197, column: 2, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4922, file: !3734, line: 197, column: 2)
!4930 = !{i64 2155059205}
!4931 = !DILocation(line: 198, column: 2, scope: !4922)
!4932 = !DILocation(line: 199, column: 1, scope: !4922)
!4933 = distinct !DISubprogram(name: "z_current_get", scope: !3734, file: !3734, line: 173, type: !4817, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2699, retainedNodes: !256)
!4934 = !DILocation(line: 180, column: 2, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4933, file: !3734, line: 180, column: 2)
!4936 = !{i64 2155059137}
!4937 = !DILocation(line: 181, column: 9, scope: !4933)
!4938 = !DILocation(line: 181, column: 2, scope: !4933)
!4939 = distinct !DISubprogram(name: "sys_heap_free", scope: !4940, file: !4940, line: 163, type: !4941, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !4949)
!4940 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !4943, !106}
!4943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4944, size: 32)
!4944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !4945)
!4945 = !{!4946, !4947, !4948}
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4944, file: !245, line: 57, baseType: !2718, size: 32)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4944, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4944, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!4949 = !{!4950, !4951, !4952, !4953}
!4950 = !DILocalVariable(name: "heap", arg: 1, scope: !4939, file: !4940, line: 163, type: !4943)
!4951 = !DILocalVariable(name: "mem", arg: 2, scope: !4939, file: !4940, line: 163, type: !106)
!4952 = !DILocalVariable(name: "h", scope: !4939, file: !4940, line: 168, type: !2718)
!4953 = !DILocalVariable(name: "c", scope: !4939, file: !4940, line: 169, type: !2723)
!4954 = !DILocation(line: 0, scope: !4939)
!4955 = !DILocation(line: 165, column: 10, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4939, file: !4940, line: 165, column: 6)
!4957 = !DILocation(line: 165, column: 6, scope: !4939)
!4958 = !DILocation(line: 168, column: 27, scope: !4939)
!4959 = !DILocation(line: 169, column: 16, scope: !4939)
!4960 = !{i32 0, i32 536870912}
!4961 = !DILocation(line: 187, column: 2, scope: !4939)
!4962 = !DILocation(line: 197, column: 2, scope: !4939)
!4963 = !DILocation(line: 198, column: 1, scope: !4939)
!4964 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4940, file: !4940, line: 157, type: !4965, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !4967)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!2723, !2718, !106}
!4967 = !{!4968, !4969, !4970, !4971}
!4968 = !DILocalVariable(name: "h", arg: 1, scope: !4964, file: !4940, line: 157, type: !2718)
!4969 = !DILocalVariable(name: "p", arg: 2, scope: !4964, file: !4940, line: 157, type: !106)
!4970 = !DILocalVariable(name: "mem", scope: !4964, file: !4940, line: 159, type: !401)
!4971 = !DILocalVariable(name: "base", scope: !4964, file: !4940, line: 159, type: !401)
!4972 = !DILocation(line: 0, scope: !4964)
!4973 = !DILocation(line: 159, column: 39, scope: !4964)
!4974 = !DILocation(line: 160, column: 14, scope: !4964)
!4975 = !DILocation(line: 160, column: 38, scope: !4964)
!4976 = !DILocation(line: 160, column: 46, scope: !4964)
!4977 = !DILocation(line: 160, column: 2, scope: !4964)
!4978 = distinct !DISubprogram(name: "set_chunk_used", scope: !2705, file: !2705, line: 147, type: !4979, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !4981)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{null, !2718, !2723, !136}
!4981 = !{!4982, !4983, !4984, !4985, !4986}
!4982 = !DILocalVariable(name: "h", arg: 1, scope: !4978, file: !2705, line: 147, type: !2718)
!4983 = !DILocalVariable(name: "c", arg: 2, scope: !4978, file: !2705, line: 147, type: !2723)
!4984 = !DILocalVariable(name: "used", arg: 3, scope: !4978, file: !2705, line: 147, type: !136)
!4985 = !DILocalVariable(name: "buf", scope: !4978, file: !2705, line: 149, type: !2712)
!4986 = !DILocalVariable(name: "cmem", scope: !4978, file: !2705, line: 150, type: !106)
!4987 = !DILocation(line: 0, scope: !4978)
!4988 = !DILocation(line: 149, column: 22, scope: !4978)
!4989 = !DILocation(line: 0, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !2705, line: 159, column: 7)
!4991 = distinct !DILexicalBlock(scope: !4992, file: !2705, line: 158, column: 9)
!4992 = distinct !DILexicalBlock(scope: !4978, file: !2705, line: 152, column: 6)
!4993 = !DILocation(line: 159, column: 7, scope: !4991)
!4994 = !DILocation(line: 165, column: 1, scope: !4978)
!4995 = distinct !DISubprogram(name: "free_chunk", scope: !4940, file: !4940, line: 133, type: !4996, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{null, !2718, !2723}
!4998 = !{!4999, !5000}
!4999 = !DILocalVariable(name: "h", arg: 1, scope: !4995, file: !4940, line: 133, type: !2718)
!5000 = !DILocalVariable(name: "c", arg: 2, scope: !4995, file: !4940, line: 133, type: !2723)
!5001 = !DILocation(line: 0, scope: !4995)
!5002 = !DILocation(line: 136, column: 21, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4995, file: !4940, line: 136, column: 6)
!5004 = !DILocation(line: 136, column: 7, scope: !5003)
!5005 = !DILocation(line: 136, column: 6, scope: !4995)
!5006 = !DILocation(line: 137, column: 3, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !4940, line: 136, column: 41)
!5008 = !DILocation(line: 138, column: 22, scope: !5007)
!5009 = !DILocation(line: 138, column: 3, scope: !5007)
!5010 = !DILocation(line: 139, column: 2, scope: !5007)
!5011 = !DILocation(line: 142, column: 21, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4995, file: !4940, line: 142, column: 6)
!5013 = !{i32 -65535, i32 536903678}
!5014 = !DILocation(line: 142, column: 7, scope: !5012)
!5015 = !DILocation(line: 142, column: 6, scope: !4995)
!5016 = !DILocation(line: 143, column: 3, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5012, file: !4940, line: 142, column: 40)
!5018 = !DILocation(line: 144, column: 19, scope: !5017)
!5019 = !DILocation(line: 144, column: 3, scope: !5017)
!5020 = !DILocation(line: 145, column: 7, scope: !5017)
!5021 = !DILocation(line: 146, column: 2, scope: !5017)
!5022 = !DILocation(line: 148, column: 2, scope: !4995)
!5023 = !DILocation(line: 149, column: 1, scope: !4995)
!5024 = distinct !DISubprogram(name: "right_chunk", scope: !2705, file: !2705, line: 204, type: !5025, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5027)
!5025 = !DISubroutineType(types: !5026)
!5026 = !{!2723, !2718, !2723}
!5027 = !{!5028, !5029}
!5028 = !DILocalVariable(name: "h", arg: 1, scope: !5024, file: !2705, line: 204, type: !2718)
!5029 = !DILocalVariable(name: "c", arg: 2, scope: !5024, file: !2705, line: 204, type: !2723)
!5030 = !DILocation(line: 0, scope: !5024)
!5031 = !DILocation(line: 206, column: 13, scope: !5024)
!5032 = !DILocation(line: 206, column: 11, scope: !5024)
!5033 = !DILocation(line: 206, column: 2, scope: !5024)
!5034 = distinct !DISubprogram(name: "chunk_used", scope: !2705, file: !2705, line: 137, type: !5035, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5037)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{!136, !2718, !2723}
!5037 = !{!5038, !5039}
!5038 = !DILocalVariable(name: "h", arg: 1, scope: !5034, file: !2705, line: 137, type: !2718)
!5039 = !DILocalVariable(name: "c", arg: 2, scope: !5034, file: !2705, line: 137, type: !2723)
!5040 = !DILocation(line: 0, scope: !5034)
!5041 = !DILocation(line: 139, column: 9, scope: !5034)
!5042 = !DILocation(line: 139, column: 42, scope: !5034)
!5043 = !DILocation(line: 139, column: 2, scope: !5034)
!5044 = distinct !DISubprogram(name: "free_list_remove", scope: !4940, file: !4940, line: 60, type: !4996, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5045)
!5045 = !{!5046, !5047, !5048}
!5046 = !DILocalVariable(name: "h", arg: 1, scope: !5044, file: !4940, line: 60, type: !2718)
!5047 = !DILocalVariable(name: "c", arg: 2, scope: !5044, file: !4940, line: 60, type: !2723)
!5048 = !DILocalVariable(name: "bidx", scope: !5049, file: !4940, line: 63, type: !107)
!5049 = distinct !DILexicalBlock(scope: !5050, file: !4940, line: 62, column: 31)
!5050 = distinct !DILexicalBlock(scope: !5044, file: !4940, line: 62, column: 6)
!5051 = !DILocation(line: 0, scope: !5044)
!5052 = !DILocation(line: 63, column: 28, scope: !5049)
!5053 = !{i32 0, i32 32768}
!5054 = !DILocation(line: 63, column: 14, scope: !5049)
!5055 = !DILocation(line: 0, scope: !5049)
!5056 = !DILocation(line: 64, column: 3, scope: !5049)
!5057 = !DILocation(line: 66, column: 1, scope: !5044)
!5058 = distinct !DISubprogram(name: "merge_chunks", scope: !4940, file: !4940, line: 125, type: !5059, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5061)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{null, !2718, !2723, !2723}
!5061 = !{!5062, !5063, !5064, !5065}
!5062 = !DILocalVariable(name: "h", arg: 1, scope: !5058, file: !4940, line: 125, type: !2718)
!5063 = !DILocalVariable(name: "lc", arg: 2, scope: !5058, file: !4940, line: 125, type: !2723)
!5064 = !DILocalVariable(name: "rc", arg: 3, scope: !5058, file: !4940, line: 125, type: !2723)
!5065 = !DILocalVariable(name: "newsz", scope: !5058, file: !4940, line: 127, type: !5066)
!5066 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2705, line: 62, baseType: !108)
!5067 = !DILocation(line: 0, scope: !5058)
!5068 = !DILocation(line: 127, column: 20, scope: !5058)
!5069 = !DILocation(line: 127, column: 40, scope: !5058)
!5070 = !DILocation(line: 127, column: 38, scope: !5058)
!5071 = !DILocation(line: 129, column: 2, scope: !5058)
!5072 = !DILocation(line: 130, column: 25, scope: !5058)
!5073 = !DILocation(line: 130, column: 2, scope: !5058)
!5074 = !DILocation(line: 131, column: 1, scope: !5058)
!5075 = distinct !DISubprogram(name: "left_chunk", scope: !2705, file: !2705, line: 199, type: !5025, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5076)
!5076 = !{!5077, !5078}
!5077 = !DILocalVariable(name: "h", arg: 1, scope: !5075, file: !2705, line: 199, type: !2718)
!5078 = !DILocalVariable(name: "c", arg: 2, scope: !5075, file: !2705, line: 199, type: !2723)
!5079 = !DILocation(line: 0, scope: !5075)
!5080 = !DILocation(line: 201, column: 13, scope: !5075)
!5081 = !DILocation(line: 201, column: 11, scope: !5075)
!5082 = !DILocation(line: 201, column: 2, scope: !5075)
!5083 = distinct !DISubprogram(name: "free_list_add", scope: !4940, file: !4940, line: 98, type: !4996, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5084)
!5084 = !{!5085, !5086, !5087}
!5085 = !DILocalVariable(name: "h", arg: 1, scope: !5083, file: !4940, line: 98, type: !2718)
!5086 = !DILocalVariable(name: "c", arg: 2, scope: !5083, file: !4940, line: 98, type: !2723)
!5087 = !DILocalVariable(name: "bidx", scope: !5088, file: !4940, line: 101, type: !107)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !4940, line: 100, column: 31)
!5089 = distinct !DILexicalBlock(scope: !5083, file: !4940, line: 100, column: 6)
!5090 = !DILocation(line: 0, scope: !5083)
!5091 = !DILocation(line: 101, column: 28, scope: !5088)
!5092 = !DILocation(line: 101, column: 14, scope: !5088)
!5093 = !DILocation(line: 0, scope: !5088)
!5094 = !DILocation(line: 102, column: 3, scope: !5088)
!5095 = !DILocation(line: 104, column: 1, scope: !5083)
!5096 = distinct !DISubprogram(name: "chunk_size", scope: !2705, file: !2705, line: 142, type: !5097, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5099)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{!5066, !2718, !2723}
!5099 = !{!5100, !5101}
!5100 = !DILocalVariable(name: "h", arg: 1, scope: !5096, file: !2705, line: 142, type: !2718)
!5101 = !DILocalVariable(name: "c", arg: 2, scope: !5096, file: !2705, line: 142, type: !2723)
!5102 = !DILocation(line: 0, scope: !5096)
!5103 = !DILocation(line: 144, column: 9, scope: !5096)
!5104 = !DILocation(line: 144, column: 42, scope: !5096)
!5105 = !DILocation(line: 144, column: 2, scope: !5096)
!5106 = distinct !DISubprogram(name: "bucket_idx", scope: !2705, file: !2705, line: 250, type: !5107, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5109)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!107, !2718, !5066}
!5109 = !{!5110, !5111, !5112}
!5110 = !DILocalVariable(name: "h", arg: 1, scope: !5106, file: !2705, line: 250, type: !2718)
!5111 = !DILocalVariable(name: "sz", arg: 2, scope: !5106, file: !2705, line: 250, type: !5066)
!5112 = !DILocalVariable(name: "usable_sz", scope: !5106, file: !2705, line: 252, type: !32)
!5113 = !DILocation(line: 0, scope: !5106)
!5114 = !DILocation(line: 252, column: 32, scope: !5106)
!5115 = !DILocation(line: 252, column: 30, scope: !5106)
!5116 = !DILocation(line: 252, column: 50, scope: !5106)
!5117 = !DILocation(line: 253, column: 14, scope: !5106)
!5118 = !{i32 0, i32 33}
!5119 = !DILocation(line: 253, column: 12, scope: !5106)
!5120 = !DILocation(line: 253, column: 2, scope: !5106)
!5121 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4940, file: !4940, line: 68, type: !5122, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5124)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{null, !2718, !2723, !107}
!5124 = !{!5125, !5126, !5127, !5128, !5130, !5133}
!5125 = !DILocalVariable(name: "h", arg: 1, scope: !5121, file: !4940, line: 68, type: !2718)
!5126 = !DILocalVariable(name: "c", arg: 2, scope: !5121, file: !4940, line: 68, type: !2723)
!5127 = !DILocalVariable(name: "bidx", arg: 3, scope: !5121, file: !4940, line: 68, type: !107)
!5128 = !DILocalVariable(name: "b", scope: !5121, file: !4940, line: 70, type: !5129)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!5130 = !DILocalVariable(name: "second", scope: !5131, file: !4940, line: 84, type: !2723)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !4940, line: 80, column: 9)
!5132 = distinct !DILexicalBlock(scope: !5121, file: !4940, line: 72, column: 6)
!5133 = !DILocalVariable(name: "first", scope: !5131, file: !4940, line: 85, type: !2723)
!5134 = !DILocation(line: 0, scope: !5121)
!5135 = !DILocation(line: 72, column: 9, scope: !5132)
!5136 = !DILocation(line: 72, column: 14, scope: !5132)
!5137 = !DILocation(line: 72, column: 6, scope: !5121)
!5138 = !DILocation(line: 76, column: 23, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5132, file: !4940, line: 72, column: 21)
!5140 = !DILocation(line: 76, column: 6, scope: !5139)
!5141 = !DILocation(line: 76, column: 20, scope: !5139)
!5142 = !DILocation(line: 77, column: 11, scope: !5139)
!5143 = !DILocation(line: 78, column: 3, scope: !5139)
!5144 = !DILocation(line: 79, column: 3, scope: !5139)
!5145 = !DILocation(line: 80, column: 2, scope: !5139)
!5146 = !DILocation(line: 0, scope: !5131)
!5147 = !DILocation(line: 85, column: 21, scope: !5131)
!5148 = !{i32 0, i32 65536}
!5149 = !DILocation(line: 87, column: 3, scope: !5131)
!5150 = !DILocation(line: 88, column: 3, scope: !5131)
!5151 = !DILocation(line: 89, column: 3, scope: !5131)
!5152 = !DILocation(line: 90, column: 3, scope: !5131)
!5153 = !DILocation(line: 96, column: 1, scope: !5121)
!5154 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2705, file: !2705, line: 187, type: !5059, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5155)
!5155 = !{!5156, !5157, !5158}
!5156 = !DILocalVariable(name: "h", arg: 1, scope: !5154, file: !2705, line: 187, type: !2718)
!5157 = !DILocalVariable(name: "c", arg: 2, scope: !5154, file: !2705, line: 187, type: !2723)
!5158 = !DILocalVariable(name: "prev", arg: 3, scope: !5154, file: !2705, line: 188, type: !2723)
!5159 = !DILocation(line: 0, scope: !5154)
!5160 = !DILocation(line: 190, column: 2, scope: !5154)
!5161 = !DILocation(line: 191, column: 1, scope: !5154)
!5162 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2705, file: !2705, line: 193, type: !5059, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5163)
!5163 = !{!5164, !5165, !5166}
!5164 = !DILocalVariable(name: "h", arg: 1, scope: !5162, file: !2705, line: 193, type: !2718)
!5165 = !DILocalVariable(name: "c", arg: 2, scope: !5162, file: !2705, line: 193, type: !2723)
!5166 = !DILocalVariable(name: "next", arg: 3, scope: !5162, file: !2705, line: 194, type: !2723)
!5167 = !DILocation(line: 0, scope: !5162)
!5168 = !DILocation(line: 196, column: 2, scope: !5162)
!5169 = !DILocation(line: 197, column: 1, scope: !5162)
!5170 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2705, file: !2705, line: 177, type: !5025, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5171)
!5171 = !{!5172, !5173}
!5172 = !DILocalVariable(name: "h", arg: 1, scope: !5170, file: !2705, line: 177, type: !2718)
!5173 = !DILocalVariable(name: "c", arg: 2, scope: !5170, file: !2705, line: 177, type: !2723)
!5174 = !DILocation(line: 0, scope: !5170)
!5175 = !DILocation(line: 179, column: 9, scope: !5170)
!5176 = !DILocation(line: 179, column: 2, scope: !5170)
!5177 = distinct !DISubprogram(name: "chunk_field", scope: !2705, file: !2705, line: 107, type: !5178, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5180)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!2723, !2718, !2723, !2704}
!5180 = !{!5181, !5182, !5183, !5184, !5185}
!5181 = !DILocalVariable(name: "h", arg: 1, scope: !5177, file: !2705, line: 107, type: !2718)
!5182 = !DILocalVariable(name: "c", arg: 2, scope: !5177, file: !2705, line: 107, type: !2723)
!5183 = !DILocalVariable(name: "f", arg: 3, scope: !5177, file: !2705, line: 108, type: !2704)
!5184 = !DILocalVariable(name: "buf", scope: !5177, file: !2705, line: 110, type: !2712)
!5185 = !DILocalVariable(name: "cmem", scope: !5177, file: !2705, line: 111, type: !106)
!5186 = !DILocation(line: 0, scope: !5177)
!5187 = !DILocation(line: 110, column: 22, scope: !5177)
!5188 = !DILocation(line: 111, column: 15, scope: !5177)
!5189 = !DILocation(line: 116, column: 11, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5191, file: !2705, line: 115, column: 9)
!5191 = distinct !DILexicalBlock(scope: !5177, file: !2705, line: 113, column: 6)
!5192 = !DILocation(line: 116, column: 10, scope: !5190)
!5193 = !DILocation(line: 118, column: 1, scope: !5177)
!5194 = distinct !DISubprogram(name: "chunk_buf", scope: !2705, file: !2705, line: 101, type: !5195, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5197)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{!2712, !2718}
!5197 = !{!5198}
!5198 = !DILocalVariable(name: "h", arg: 1, scope: !5194, file: !2705, line: 101, type: !2718)
!5199 = !DILocation(line: 0, scope: !5194)
!5200 = !DILocation(line: 104, column: 9, scope: !5194)
!5201 = !DILocation(line: 104, column: 2, scope: !5194)
!5202 = distinct !DISubprogram(name: "chunk_set", scope: !2705, file: !2705, line: 120, type: !5203, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5205)
!5203 = !DISubroutineType(types: !5204)
!5204 = !{null, !2718, !2723, !2704, !2723}
!5205 = !{!5206, !5207, !5208, !5209, !5210, !5211}
!5206 = !DILocalVariable(name: "h", arg: 1, scope: !5202, file: !2705, line: 120, type: !2718)
!5207 = !DILocalVariable(name: "c", arg: 2, scope: !5202, file: !2705, line: 120, type: !2723)
!5208 = !DILocalVariable(name: "f", arg: 3, scope: !5202, file: !2705, line: 121, type: !2704)
!5209 = !DILocalVariable(name: "val", arg: 4, scope: !5202, file: !2705, line: 121, type: !2723)
!5210 = !DILocalVariable(name: "buf", scope: !5202, file: !2705, line: 125, type: !2712)
!5211 = !DILocalVariable(name: "cmem", scope: !5202, file: !2705, line: 126, type: !106)
!5212 = !DILocation(line: 0, scope: !5202)
!5213 = !DILocation(line: 125, column: 22, scope: !5202)
!5214 = !DILocation(line: 126, column: 15, scope: !5202)
!5215 = !DILocation(line: 133, column: 27, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !2705, line: 131, column: 9)
!5217 = distinct !DILexicalBlock(scope: !5202, file: !2705, line: 128, column: 6)
!5218 = !DILocation(line: 133, column: 4, scope: !5216)
!5219 = !DILocation(line: 133, column: 3, scope: !5216)
!5220 = !DILocation(line: 133, column: 25, scope: !5216)
!5221 = !DILocation(line: 135, column: 1, scope: !5202)
!5222 = distinct !DISubprogram(name: "min_chunk_size", scope: !2705, file: !2705, line: 240, type: !5223, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5225)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!5066, !2718}
!5225 = !{!5226}
!5226 = !DILocalVariable(name: "h", arg: 1, scope: !5222, file: !2705, line: 240, type: !2718)
!5227 = !DILocation(line: 0, scope: !5222)
!5228 = !DILocation(line: 242, column: 9, scope: !5222)
!5229 = !DILocation(line: 242, column: 2, scope: !5222)
!5230 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2705, file: !2705, line: 235, type: !5231, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5233)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{!5066, !2718, !137}
!5233 = !{!5234, !5235}
!5234 = !DILocalVariable(name: "h", arg: 1, scope: !5230, file: !2705, line: 235, type: !2718)
!5235 = !DILocalVariable(name: "bytes", arg: 2, scope: !5230, file: !2705, line: 235, type: !137)
!5236 = !DILocation(line: 0, scope: !5230)
!5237 = !DILocation(line: 237, column: 39, scope: !5230)
!5238 = !DILocation(line: 237, column: 9, scope: !5230)
!5239 = !DILocation(line: 237, column: 2, scope: !5230)
!5240 = distinct !DISubprogram(name: "chunksz", scope: !2705, file: !2705, line: 230, type: !5241, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5243)
!5241 = !DISubroutineType(types: !5242)
!5242 = !{!5066, !137}
!5243 = !{!5244}
!5244 = !DILocalVariable(name: "bytes", arg: 1, scope: !5240, file: !2705, line: 230, type: !137)
!5245 = !DILocation(line: 0, scope: !5240)
!5246 = !DILocation(line: 232, column: 29, scope: !5240)
!5247 = !DILocation(line: 232, column: 35, scope: !5240)
!5248 = !DILocation(line: 232, column: 2, scope: !5240)
!5249 = distinct !DISubprogram(name: "set_chunk_size", scope: !2705, file: !2705, line: 172, type: !5250, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5252)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{null, !2718, !2723, !5066}
!5252 = !{!5253, !5254, !5255}
!5253 = !DILocalVariable(name: "h", arg: 1, scope: !5249, file: !2705, line: 172, type: !2718)
!5254 = !DILocalVariable(name: "c", arg: 2, scope: !5249, file: !2705, line: 172, type: !2723)
!5255 = !DILocalVariable(name: "size", arg: 3, scope: !5249, file: !2705, line: 172, type: !5066)
!5256 = !DILocation(line: 0, scope: !5249)
!5257 = !DILocation(line: 174, column: 38, scope: !5249)
!5258 = !DILocation(line: 174, column: 2, scope: !5249)
!5259 = !DILocation(line: 175, column: 1, scope: !5249)
!5260 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2705, file: !2705, line: 209, type: !5250, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5261)
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "h", arg: 1, scope: !5260, file: !2705, line: 209, type: !2718)
!5263 = !DILocalVariable(name: "c", arg: 2, scope: !5260, file: !2705, line: 209, type: !2723)
!5264 = !DILocalVariable(name: "size", arg: 3, scope: !5260, file: !2705, line: 210, type: !5066)
!5265 = !DILocation(line: 0, scope: !5260)
!5266 = !DILocation(line: 212, column: 2, scope: !5260)
!5267 = !DILocation(line: 213, column: 1, scope: !5260)
!5268 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4940, file: !4940, line: 34, type: !5122, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5269)
!5269 = !{!5270, !5271, !5272, !5273, !5274, !5277}
!5270 = !DILocalVariable(name: "h", arg: 1, scope: !5268, file: !4940, line: 34, type: !2718)
!5271 = !DILocalVariable(name: "c", arg: 2, scope: !5268, file: !4940, line: 34, type: !2723)
!5272 = !DILocalVariable(name: "bidx", arg: 3, scope: !5268, file: !4940, line: 34, type: !107)
!5273 = !DILocalVariable(name: "b", scope: !5268, file: !4940, line: 36, type: !5129)
!5274 = !DILocalVariable(name: "first", scope: !5275, file: !4940, line: 47, type: !2723)
!5275 = distinct !DILexicalBlock(scope: !5276, file: !4940, line: 46, column: 9)
!5276 = distinct !DILexicalBlock(scope: !5268, file: !4940, line: 42, column: 6)
!5277 = !DILocalVariable(name: "second", scope: !5275, file: !4940, line: 48, type: !2723)
!5278 = !DILocation(line: 0, scope: !5268)
!5279 = !DILocation(line: 36, column: 29, scope: !5268)
!5280 = !DILocation(line: 42, column: 6, scope: !5276)
!5281 = !DILocation(line: 42, column: 28, scope: !5276)
!5282 = !DILocation(line: 42, column: 6, scope: !5268)
!5283 = !DILocation(line: 44, column: 24, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5276, file: !4940, line: 42, column: 34)
!5285 = !DILocation(line: 44, column: 23, scope: !5284)
!5286 = !DILocation(line: 44, column: 6, scope: !5284)
!5287 = !DILocation(line: 44, column: 20, scope: !5284)
!5288 = !DILocation(line: 45, column: 6, scope: !5284)
!5289 = !DILocation(line: 45, column: 11, scope: !5284)
!5290 = !DILocation(line: 46, column: 2, scope: !5284)
!5291 = !DILocation(line: 47, column: 21, scope: !5275)
!5292 = !DILocation(line: 0, scope: !5275)
!5293 = !DILocation(line: 50, column: 6, scope: !5275)
!5294 = !DILocation(line: 50, column: 11, scope: !5275)
!5295 = !DILocation(line: 51, column: 3, scope: !5275)
!5296 = !DILocation(line: 52, column: 3, scope: !5275)
!5297 = !DILocation(line: 58, column: 1, scope: !5268)
!5298 = distinct !DISubprogram(name: "next_free_chunk", scope: !2705, file: !2705, line: 182, type: !5025, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5299)
!5299 = !{!5300, !5301}
!5300 = !DILocalVariable(name: "h", arg: 1, scope: !5298, file: !2705, line: 182, type: !2718)
!5301 = !DILocalVariable(name: "c", arg: 2, scope: !5298, file: !2705, line: 182, type: !2723)
!5302 = !DILocation(line: 0, scope: !5298)
!5303 = !DILocation(line: 184, column: 9, scope: !5298)
!5304 = !DILocation(line: 184, column: 2, scope: !5298)
!5305 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4940, file: !4940, line: 200, type: !5306, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5308)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!137, !4943, !106}
!5308 = !{!5309, !5310, !5311, !5312, !5313, !5314, !5315}
!5309 = !DILocalVariable(name: "heap", arg: 1, scope: !5305, file: !4940, line: 200, type: !4943)
!5310 = !DILocalVariable(name: "mem", arg: 2, scope: !5305, file: !4940, line: 200, type: !106)
!5311 = !DILocalVariable(name: "h", scope: !5305, file: !4940, line: 202, type: !2718)
!5312 = !DILocalVariable(name: "c", scope: !5305, file: !4940, line: 203, type: !2723)
!5313 = !DILocalVariable(name: "addr", scope: !5305, file: !4940, line: 204, type: !137)
!5314 = !DILocalVariable(name: "chunk_base", scope: !5305, file: !4940, line: 205, type: !137)
!5315 = !DILocalVariable(name: "chunk_sz", scope: !5305, file: !4940, line: 206, type: !137)
!5316 = !DILocation(line: 0, scope: !5305)
!5317 = !DILocation(line: 202, column: 27, scope: !5305)
!5318 = !DILocation(line: 203, column: 16, scope: !5305)
!5319 = !DILocation(line: 204, column: 16, scope: !5305)
!5320 = !DILocation(line: 205, column: 31, scope: !5305)
!5321 = !DILocation(line: 205, column: 22, scope: !5305)
!5322 = !DILocation(line: 206, column: 20, scope: !5305)
!5323 = !DILocation(line: 206, column: 37, scope: !5305)
!5324 = !DILocation(line: 208, column: 26, scope: !5305)
!5325 = !DILocation(line: 208, column: 18, scope: !5305)
!5326 = !DILocation(line: 208, column: 2, scope: !5305)
!5327 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4940, file: !4940, line: 263, type: !5328, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5330)
!5328 = !DISubroutineType(types: !5329)
!5329 = !{!106, !4943, !137}
!5330 = !{!5331, !5332, !5333, !5334, !5335, !5336}
!5331 = !DILocalVariable(name: "heap", arg: 1, scope: !5327, file: !4940, line: 263, type: !4943)
!5332 = !DILocalVariable(name: "bytes", arg: 2, scope: !5327, file: !4940, line: 263, type: !137)
!5333 = !DILocalVariable(name: "h", scope: !5327, file: !4940, line: 265, type: !2718)
!5334 = !DILocalVariable(name: "mem", scope: !5327, file: !4940, line: 266, type: !106)
!5335 = !DILocalVariable(name: "chunk_sz", scope: !5327, file: !4940, line: 272, type: !5066)
!5336 = !DILocalVariable(name: "c", scope: !5327, file: !4940, line: 273, type: !2723)
!5337 = !DILocation(line: 0, scope: !5327)
!5338 = !DILocation(line: 265, column: 27, scope: !5327)
!5339 = !DILocation(line: 268, column: 12, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5327, file: !4940, line: 268, column: 6)
!5341 = !DILocation(line: 268, column: 18, scope: !5340)
!5342 = !DILocation(line: 268, column: 21, scope: !5340)
!5343 = !DILocation(line: 268, column: 6, scope: !5327)
!5344 = !DILocation(line: 272, column: 23, scope: !5327)
!5345 = !DILocation(line: 273, column: 16, scope: !5327)
!5346 = !DILocation(line: 274, column: 8, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5327, file: !4940, line: 274, column: 6)
!5348 = !DILocation(line: 274, column: 6, scope: !5327)
!5349 = !DILocation(line: 279, column: 6, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5327, file: !4940, line: 279, column: 6)
!5351 = !DILocation(line: 279, column: 23, scope: !5350)
!5352 = !DILocation(line: 279, column: 6, scope: !5327)
!5353 = !DILocation(line: 280, column: 24, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !4940, line: 279, column: 35)
!5355 = !DILocation(line: 280, column: 3, scope: !5354)
!5356 = !DILocation(line: 281, column: 3, scope: !5354)
!5357 = !DILocation(line: 282, column: 2, scope: !5354)
!5358 = !DILocation(line: 284, column: 2, scope: !5327)
!5359 = !DILocation(line: 286, column: 8, scope: !5327)
!5360 = !DILocation(line: 298, column: 2, scope: !5327)
!5361 = !DILocation(line: 299, column: 1, scope: !5327)
!5362 = distinct !DISubprogram(name: "size_too_big", scope: !2705, file: !2705, line: 256, type: !5363, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5365)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{!136, !2718, !137}
!5365 = !{!5366, !5367}
!5366 = !DILocalVariable(name: "h", arg: 1, scope: !5362, file: !2705, line: 256, type: !2718)
!5367 = !DILocalVariable(name: "bytes", arg: 2, scope: !5362, file: !2705, line: 256, type: !137)
!5368 = !DILocation(line: 0, scope: !5362)
!5369 = !DILocation(line: 262, column: 16, scope: !5362)
!5370 = !DILocation(line: 262, column: 36, scope: !5362)
!5371 = !DILocation(line: 262, column: 30, scope: !5362)
!5372 = !DILocation(line: 262, column: 2, scope: !5362)
!5373 = distinct !DISubprogram(name: "alloc_chunk", scope: !4940, file: !4940, line: 211, type: !5374, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5376)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!2723, !2718, !5066}
!5376 = !{!5377, !5378, !5379, !5380, !5381, !5384, !5385, !5387, !5388, !5391}
!5377 = !DILocalVariable(name: "h", arg: 1, scope: !5373, file: !4940, line: 211, type: !2718)
!5378 = !DILocalVariable(name: "sz", arg: 2, scope: !5373, file: !4940, line: 211, type: !5066)
!5379 = !DILocalVariable(name: "bi", scope: !5373, file: !4940, line: 213, type: !107)
!5380 = !DILocalVariable(name: "b", scope: !5373, file: !4940, line: 214, type: !5129)
!5381 = !DILocalVariable(name: "first", scope: !5382, file: !4940, line: 233, type: !2723)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !4940, line: 232, column: 15)
!5383 = distinct !DILexicalBlock(scope: !5373, file: !4940, line: 232, column: 6)
!5384 = !DILocalVariable(name: "i", scope: !5382, file: !4940, line: 234, type: !107)
!5385 = !DILocalVariable(name: "c", scope: !5386, file: !4940, line: 236, type: !2723)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !4940, line: 235, column: 6)
!5387 = !DILocalVariable(name: "bmask", scope: !5373, file: !4940, line: 249, type: !108)
!5388 = !DILocalVariable(name: "minbucket", scope: !5389, file: !4940, line: 252, type: !107)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !4940, line: 251, column: 19)
!5390 = distinct !DILexicalBlock(scope: !5373, file: !4940, line: 251, column: 6)
!5391 = !DILocalVariable(name: "c", scope: !5389, file: !4940, line: 253, type: !2723)
!5392 = !DILocation(line: 0, scope: !5373)
!5393 = !DILocation(line: 213, column: 11, scope: !5373)
!5394 = !DILocation(line: 232, column: 9, scope: !5383)
!5395 = !DILocation(line: 232, column: 6, scope: !5383)
!5396 = !DILocation(line: 232, column: 6, scope: !5373)
!5397 = !DILocation(line: 236, column: 21, scope: !5386)
!5398 = !DILocation(line: 0, scope: !5382)
!5399 = !DILocation(line: 0, scope: !5386)
!5400 = !DILocation(line: 237, column: 8, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5386, file: !4940, line: 237, column: 8)
!5402 = !DILocation(line: 237, column: 25, scope: !5401)
!5403 = !DILocation(line: 237, column: 8, scope: !5386)
!5404 = !DILocation(line: 238, column: 5, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !4940, line: 237, column: 32)
!5406 = !DILocation(line: 241, column: 14, scope: !5386)
!5407 = !DILocation(line: 241, column: 12, scope: !5386)
!5408 = !DILocation(line: 243, column: 12, scope: !5382)
!5409 = !DILocation(line: 243, column: 16, scope: !5382)
!5410 = distinct !{!5410, !5411, !5412}
!5411 = !DILocation(line: 235, column: 3, scope: !5382)
!5412 = !DILocation(line: 243, column: 35, scope: !5382)
!5413 = !DILocation(line: 249, column: 22, scope: !5373)
!5414 = !DILocation(line: 249, column: 39, scope: !5373)
!5415 = !DILocation(line: 249, column: 36, scope: !5373)
!5416 = !DILocation(line: 251, column: 12, scope: !5390)
!5417 = !DILocation(line: 251, column: 6, scope: !5373)
!5418 = !DILocation(line: 252, column: 19, scope: !5389)
!5419 = !DILocation(line: 0, scope: !5389)
!5420 = !DILocation(line: 253, column: 39, scope: !5389)
!5421 = !DILocation(line: 255, column: 3, scope: !5389)
!5422 = !DILocation(line: 261, column: 1, scope: !5373)
!5423 = distinct !DISubprogram(name: "split_chunks", scope: !4940, file: !4940, line: 109, type: !5059, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5424)
!5424 = !{!5425, !5426, !5427, !5428, !5429, !5430}
!5425 = !DILocalVariable(name: "h", arg: 1, scope: !5423, file: !4940, line: 109, type: !2718)
!5426 = !DILocalVariable(name: "lc", arg: 2, scope: !5423, file: !4940, line: 109, type: !2723)
!5427 = !DILocalVariable(name: "rc", arg: 3, scope: !5423, file: !4940, line: 109, type: !2723)
!5428 = !DILocalVariable(name: "sz0", scope: !5423, file: !4940, line: 114, type: !5066)
!5429 = !DILocalVariable(name: "lsz", scope: !5423, file: !4940, line: 115, type: !5066)
!5430 = !DILocalVariable(name: "rsz", scope: !5423, file: !4940, line: 116, type: !5066)
!5431 = !DILocation(line: 0, scope: !5423)
!5432 = !DILocation(line: 114, column: 18, scope: !5423)
!5433 = !DILocation(line: 115, column: 21, scope: !5423)
!5434 = !DILocation(line: 116, column: 22, scope: !5423)
!5435 = !DILocation(line: 118, column: 2, scope: !5423)
!5436 = !DILocation(line: 119, column: 2, scope: !5423)
!5437 = !DILocation(line: 120, column: 2, scope: !5423)
!5438 = !DILocation(line: 121, column: 25, scope: !5423)
!5439 = !DILocation(line: 121, column: 2, scope: !5423)
!5440 = !DILocation(line: 122, column: 1, scope: !5423)
!5441 = distinct !DISubprogram(name: "chunk_mem", scope: !4940, file: !4940, line: 24, type: !5442, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5444)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!106, !2718, !2723}
!5444 = !{!5445, !5446, !5447, !5448}
!5445 = !DILocalVariable(name: "h", arg: 1, scope: !5441, file: !4940, line: 24, type: !2718)
!5446 = !DILocalVariable(name: "c", arg: 2, scope: !5441, file: !4940, line: 24, type: !2723)
!5447 = !DILocalVariable(name: "buf", scope: !5441, file: !4940, line: 26, type: !2712)
!5448 = !DILocalVariable(name: "ret", scope: !5441, file: !4940, line: 27, type: !401)
!5449 = !DILocation(line: 0, scope: !5441)
!5450 = !DILocation(line: 26, column: 22, scope: !5441)
!5451 = !DILocation(line: 27, column: 38, scope: !5441)
!5452 = !DILocation(line: 31, column: 2, scope: !5441)
!5453 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4940, file: !4940, line: 301, type: !5454, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5456)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!106, !4943, !137, !137}
!5456 = !{!5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468}
!5457 = !DILocalVariable(name: "heap", arg: 1, scope: !5453, file: !4940, line: 301, type: !4943)
!5458 = !DILocalVariable(name: "align", arg: 2, scope: !5453, file: !4940, line: 301, type: !137)
!5459 = !DILocalVariable(name: "bytes", arg: 3, scope: !5453, file: !4940, line: 301, type: !137)
!5460 = !DILocalVariable(name: "h", scope: !5453, file: !4940, line: 303, type: !2718)
!5461 = !DILocalVariable(name: "gap", scope: !5453, file: !4940, line: 304, type: !137)
!5462 = !DILocalVariable(name: "rew", scope: !5453, file: !4940, line: 304, type: !137)
!5463 = !DILocalVariable(name: "padded_sz", scope: !5453, file: !4940, line: 335, type: !5066)
!5464 = !DILocalVariable(name: "c0", scope: !5453, file: !4940, line: 336, type: !2723)
!5465 = !DILocalVariable(name: "mem", scope: !5453, file: !4940, line: 341, type: !401)
!5466 = !DILocalVariable(name: "end", scope: !5453, file: !4940, line: 345, type: !2712)
!5467 = !DILocalVariable(name: "c", scope: !5453, file: !4940, line: 348, type: !2723)
!5468 = !DILocalVariable(name: "c_end", scope: !5453, file: !4940, line: 349, type: !2723)
!5469 = !DILocation(line: 0, scope: !5453)
!5470 = !DILocation(line: 303, column: 27, scope: !5453)
!5471 = !DILocation(line: 313, column: 16, scope: !5453)
!5472 = !DILocation(line: 313, column: 14, scope: !5453)
!5473 = !DILocation(line: 314, column: 12, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5453, file: !4940, line: 314, column: 6)
!5475 = !DILocation(line: 314, column: 6, scope: !5453)
!5476 = !DILocation(line: 315, column: 9, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5474, file: !4940, line: 314, column: 20)
!5478 = !DILocation(line: 316, column: 9, scope: !5477)
!5479 = !DILocation(line: 318, column: 13, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !4940, line: 318, column: 7)
!5481 = distinct !DILexicalBlock(scope: !5474, file: !4940, line: 317, column: 9)
!5482 = !DILocation(line: 318, column: 7, scope: !5481)
!5483 = !DILocation(line: 319, column: 11, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5480, file: !4940, line: 318, column: 39)
!5485 = !DILocation(line: 319, column: 4, scope: !5484)
!5486 = !DILocation(line: 0, scope: !5474)
!5487 = !DILocation(line: 326, column: 12, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5453, file: !4940, line: 326, column: 6)
!5489 = !DILocation(line: 326, column: 17, scope: !5488)
!5490 = !DILocation(line: 326, column: 20, scope: !5488)
!5491 = !DILocation(line: 326, column: 6, scope: !5453)
!5492 = !DILocation(line: 335, column: 50, scope: !5453)
!5493 = !DILocation(line: 335, column: 58, scope: !5453)
!5494 = !DILocation(line: 335, column: 24, scope: !5453)
!5495 = !DILocation(line: 336, column: 17, scope: !5453)
!5496 = !DILocation(line: 338, column: 9, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5453, file: !4940, line: 338, column: 6)
!5498 = !DILocation(line: 338, column: 6, scope: !5453)
!5499 = !DILocation(line: 341, column: 17, scope: !5453)
!5500 = !DILocation(line: 344, column: 20, scope: !5453)
!5501 = !DILocation(line: 344, column: 8, scope: !5453)
!5502 = !DILocation(line: 344, column: 47, scope: !5453)
!5503 = !DILocation(line: 345, column: 39, scope: !5453)
!5504 = !DILocation(line: 348, column: 16, scope: !5453)
!5505 = !DILocation(line: 349, column: 26, scope: !5453)
!5506 = !DILocation(line: 349, column: 24, scope: !5453)
!5507 = !DILocation(line: 353, column: 8, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5453, file: !4940, line: 353, column: 6)
!5509 = !DILocation(line: 353, column: 6, scope: !5453)
!5510 = !DILocation(line: 354, column: 3, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5508, file: !4940, line: 353, column: 14)
!5512 = !DILocation(line: 355, column: 3, scope: !5511)
!5513 = !DILocation(line: 356, column: 2, scope: !5511)
!5514 = !DILocation(line: 359, column: 6, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5453, file: !4940, line: 359, column: 6)
!5516 = !DILocation(line: 359, column: 24, scope: !5515)
!5517 = !DILocation(line: 359, column: 6, scope: !5453)
!5518 = !DILocation(line: 360, column: 3, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5515, file: !4940, line: 359, column: 33)
!5520 = !DILocation(line: 361, column: 3, scope: !5519)
!5521 = !DILocation(line: 362, column: 2, scope: !5519)
!5522 = !DILocation(line: 364, column: 2, scope: !5453)
!5523 = !DILocation(line: 377, column: 1, scope: !5453)
!5524 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4940, file: !4940, line: 379, type: !5525, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5527)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!106, !4943, !106, !137, !137}
!5527 = !{!5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5543, !5544}
!5528 = !DILocalVariable(name: "heap", arg: 1, scope: !5524, file: !4940, line: 379, type: !4943)
!5529 = !DILocalVariable(name: "ptr", arg: 2, scope: !5524, file: !4940, line: 379, type: !106)
!5530 = !DILocalVariable(name: "align", arg: 3, scope: !5524, file: !4940, line: 380, type: !137)
!5531 = !DILocalVariable(name: "bytes", arg: 4, scope: !5524, file: !4940, line: 380, type: !137)
!5532 = !DILocalVariable(name: "h", scope: !5524, file: !4940, line: 382, type: !2718)
!5533 = !DILocalVariable(name: "c", scope: !5524, file: !4940, line: 399, type: !2723)
!5534 = !DILocalVariable(name: "rc", scope: !5524, file: !4940, line: 400, type: !2723)
!5535 = !DILocalVariable(name: "align_gap", scope: !5524, file: !4940, line: 401, type: !137)
!5536 = !DILocalVariable(name: "chunks_need", scope: !5524, file: !4940, line: 402, type: !5066)
!5537 = !DILocalVariable(name: "split_size", scope: !5538, file: !4940, line: 435, type: !5066)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !4940, line: 433, column: 61)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !4940, line: 432, column: 13)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !4940, line: 409, column: 13)
!5541 = distinct !DILexicalBlock(scope: !5542, file: !4940, line: 406, column: 13)
!5542 = distinct !DILexicalBlock(scope: !5524, file: !4940, line: 404, column: 6)
!5543 = !DILocalVariable(name: "ptr2", scope: !5524, file: !4940, line: 474, type: !106)
!5544 = !DILocalVariable(name: "prev_size", scope: !5545, file: !4940, line: 477, type: !137)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !4940, line: 476, column: 20)
!5546 = distinct !DILexicalBlock(scope: !5524, file: !4940, line: 476, column: 6)
!5547 = !DILocation(line: 0, scope: !5524)
!5548 = !DILocation(line: 382, column: 27, scope: !5524)
!5549 = !DILocation(line: 385, column: 10, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5524, file: !4940, line: 385, column: 6)
!5551 = !DILocation(line: 385, column: 6, scope: !5524)
!5552 = !DILocation(line: 386, column: 10, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5550, file: !4940, line: 385, column: 19)
!5554 = !DILocation(line: 386, column: 3, scope: !5553)
!5555 = !DILocation(line: 388, column: 12, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5524, file: !4940, line: 388, column: 6)
!5557 = !DILocation(line: 388, column: 6, scope: !5524)
!5558 = !DILocation(line: 389, column: 3, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5556, file: !4940, line: 388, column: 18)
!5560 = !DILocation(line: 390, column: 3, scope: !5559)
!5561 = !DILocation(line: 395, column: 6, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5524, file: !4940, line: 395, column: 6)
!5563 = !DILocation(line: 395, column: 6, scope: !5524)
!5564 = !DILocation(line: 399, column: 16, scope: !5524)
!5565 = !DILocation(line: 400, column: 17, scope: !5524)
!5566 = !DILocation(line: 401, column: 49, scope: !5524)
!5567 = !DILocation(line: 401, column: 36, scope: !5524)
!5568 = !DILocation(line: 402, column: 52, scope: !5524)
!5569 = !DILocation(line: 402, column: 26, scope: !5524)
!5570 = !DILocation(line: 404, column: 6, scope: !5542)
!5571 = !DILocation(line: 404, column: 12, scope: !5542)
!5572 = !DILocation(line: 404, column: 40, scope: !5542)
!5573 = !DILocation(line: 404, column: 31, scope: !5542)
!5574 = !DILocation(line: 404, column: 6, scope: !5524)
!5575 = !DILocation(line: 406, column: 13, scope: !5541)
!5576 = !DILocation(line: 406, column: 30, scope: !5541)
!5577 = !DILocation(line: 406, column: 13, scope: !5542)
!5578 = !DILocation(line: 409, column: 30, scope: !5540)
!5579 = !DILocation(line: 409, column: 13, scope: !5541)
!5580 = !DILocation(line: 420, column: 24, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5540, file: !4940, line: 409, column: 45)
!5582 = !DILocation(line: 420, column: 3, scope: !5581)
!5583 = !DILocation(line: 421, column: 3, scope: !5581)
!5584 = !DILocation(line: 422, column: 3, scope: !5581)
!5585 = !DILocation(line: 431, column: 3, scope: !5581)
!5586 = !DILocation(line: 432, column: 14, scope: !5539)
!5587 = !DILocation(line: 432, column: 32, scope: !5539)
!5588 = !DILocation(line: 433, column: 26, scope: !5539)
!5589 = !DILocation(line: 433, column: 24, scope: !5539)
!5590 = !DILocation(line: 433, column: 44, scope: !5539)
!5591 = !DILocation(line: 432, column: 13, scope: !5540)
!5592 = !DILocation(line: 435, column: 38, scope: !5538)
!5593 = !DILocation(line: 0, scope: !5538)
!5594 = !DILocation(line: 445, column: 3, scope: !5538)
!5595 = !DILocation(line: 447, column: 20, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5538, file: !4940, line: 447, column: 7)
!5597 = !DILocation(line: 447, column: 18, scope: !5596)
!5598 = !DILocation(line: 447, column: 7, scope: !5538)
!5599 = !DILocation(line: 448, column: 27, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5596, file: !4940, line: 447, column: 39)
!5601 = !DILocation(line: 448, column: 4, scope: !5600)
!5602 = !DILocation(line: 449, column: 4, scope: !5600)
!5603 = !DILocation(line: 450, column: 3, scope: !5600)
!5604 = !DILocation(line: 452, column: 3, scope: !5538)
!5605 = !DILocation(line: 453, column: 3, scope: !5538)
!5606 = !DILocation(line: 474, column: 15, scope: !5524)
!5607 = !DILocation(line: 476, column: 11, scope: !5546)
!5608 = !DILocation(line: 476, column: 6, scope: !5524)
!5609 = !DILocation(line: 477, column: 42, scope: !5545)
!5610 = !DILocation(line: 477, column: 22, scope: !5545)
!5611 = !DILocation(line: 477, column: 60, scope: !5545)
!5612 = !DILocation(line: 0, scope: !5545)
!5613 = !DILocation(line: 479, column: 21, scope: !5545)
!5614 = !DILocation(line: 479, column: 3, scope: !5545)
!5615 = !DILocation(line: 480, column: 3, scope: !5545)
!5616 = !DILocation(line: 481, column: 2, scope: !5545)
!5617 = !DILocation(line: 483, column: 1, scope: !5524)
!5618 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2705, file: !2705, line: 245, type: !5619, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5621)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!137, !2718, !5066}
!5621 = !{!5622, !5623}
!5622 = !DILocalVariable(name: "h", arg: 1, scope: !5618, file: !2705, line: 245, type: !2718)
!5623 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5618, file: !2705, line: 245, type: !5066)
!5624 = !DILocation(line: 0, scope: !5618)
!5625 = !DILocation(line: 247, column: 20, scope: !5618)
!5626 = !DILocation(line: 247, column: 33, scope: !5618)
!5627 = !DILocation(line: 247, column: 2, scope: !5618)
!5628 = distinct !DISubprogram(name: "sys_heap_init", scope: !4940, file: !4940, line: 485, type: !5629, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2701, retainedNodes: !5631)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{null, !4943, !106, !137}
!5631 = !{!5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641}
!5632 = !DILocalVariable(name: "heap", arg: 1, scope: !5628, file: !4940, line: 485, type: !4943)
!5633 = !DILocalVariable(name: "mem", arg: 2, scope: !5628, file: !4940, line: 485, type: !106)
!5634 = !DILocalVariable(name: "bytes", arg: 3, scope: !5628, file: !4940, line: 485, type: !137)
!5635 = !DILocalVariable(name: "addr", scope: !5628, file: !4940, line: 502, type: !22)
!5636 = !DILocalVariable(name: "end", scope: !5628, file: !4940, line: 503, type: !22)
!5637 = !DILocalVariable(name: "heap_sz", scope: !5628, file: !4940, line: 504, type: !5066)
!5638 = !DILocalVariable(name: "h", scope: !5628, file: !4940, line: 509, type: !2718)
!5639 = !DILocalVariable(name: "nb_buckets", scope: !5628, file: !4940, line: 520, type: !107)
!5640 = !DILocalVariable(name: "chunk0_size", scope: !5628, file: !4940, line: 521, type: !5066)
!5641 = !DILocalVariable(name: "i", scope: !5642, file: !4940, line: 526, type: !107)
!5642 = distinct !DILexicalBlock(scope: !5628, file: !4940, line: 526, column: 2)
!5643 = !DILocation(line: 0, scope: !5628)
!5644 = !DILocation(line: 499, column: 8, scope: !5628)
!5645 = !DILocation(line: 502, column: 19, scope: !5628)
!5646 = !DILocation(line: 503, column: 18, scope: !5628)
!5647 = !DILocation(line: 504, column: 27, scope: !5628)
!5648 = !DILocation(line: 504, column: 35, scope: !5628)
!5649 = !DILocation(line: 509, column: 21, scope: !5628)
!5650 = !DILocation(line: 510, column: 8, scope: !5628)
!5651 = !DILocation(line: 510, column: 13, scope: !5628)
!5652 = !DILocation(line: 511, column: 5, scope: !5628)
!5653 = !DILocation(line: 511, column: 15, scope: !5628)
!5654 = !DILocation(line: 512, column: 5, scope: !5628)
!5655 = !DILocation(line: 512, column: 19, scope: !5628)
!5656 = !DILocation(line: 520, column: 19, scope: !5628)
!5657 = !DILocation(line: 522, column: 21, scope: !5628)
!5658 = !DILocation(line: 521, column: 56, scope: !5628)
!5659 = !DILocation(line: 521, column: 26, scope: !5628)
!5660 = !DILocation(line: 0, scope: !5642)
!5661 = !DILocation(line: 526, column: 20, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5642, file: !4940, line: 526, column: 2)
!5663 = !DILocation(line: 526, column: 2, scope: !5642)
!5664 = !DILocation(line: 531, column: 2, scope: !5628)
!5665 = !DILocation(line: 532, column: 2, scope: !5628)
!5666 = !DILocation(line: 533, column: 2, scope: !5628)
!5667 = !DILocation(line: 536, column: 41, scope: !5628)
!5668 = !DILocation(line: 536, column: 2, scope: !5628)
!5669 = !DILocation(line: 537, column: 2, scope: !5628)
!5670 = !DILocation(line: 540, column: 2, scope: !5628)
!5671 = !DILocation(line: 541, column: 2, scope: !5628)
!5672 = !DILocation(line: 542, column: 2, scope: !5628)
!5673 = !DILocation(line: 544, column: 2, scope: !5628)
!5674 = !DILocation(line: 545, column: 1, scope: !5628)
!5675 = !DILocation(line: 527, column: 17, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5662, file: !4940, line: 526, column: 39)
!5677 = !DILocation(line: 527, column: 22, scope: !5676)
!5678 = !DILocation(line: 526, column: 35, scope: !5662)
!5679 = distinct !{!5679, !5663, !5680}
!5680 = !DILocation(line: 528, column: 2, scope: !5642)
!5681 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2738, file: !2738, line: 1338, type: !5682, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !5690)
!5682 = !DISubroutineType(types: !5683)
!5683 = !{!107, !4138, !106, !121, !5684, !108}
!5684 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3777, line: 99, baseType: !5685)
!5685 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3777, line: 40, baseType: !5686)
!5686 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2738, baseType: !5687)
!5687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5688)
!5688 = !{!5689}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5687, file: !2738, baseType: !106, size: 32)
!5690 = !{!5691, !5692, !5693, !5694, !5695, !5696, !5700, !5701, !5702, !5704, !5709, !5752, !5755, !5758, !5759, !5760, !5761, !5762, !5763, !5764, !5767, !5768, !5769, !5773, !5776, !5778, !5781, !5782, !5783, !5788, !5794, !5797, !5801, !5807, !5811, !5814, !5816, !5819}
!5691 = !DILocalVariable(name: "out", arg: 1, scope: !5681, file: !2738, line: 1338, type: !4138)
!5692 = !DILocalVariable(name: "ctx", arg: 2, scope: !5681, file: !2738, line: 1338, type: !106)
!5693 = !DILocalVariable(name: "fp", arg: 3, scope: !5681, file: !2738, line: 1338, type: !121)
!5694 = !DILocalVariable(name: "ap", arg: 4, scope: !5681, file: !2738, line: 1339, type: !5684)
!5695 = !DILocalVariable(name: "flags", arg: 5, scope: !5681, file: !2738, line: 1339, type: !108)
!5696 = !DILocalVariable(name: "buf", scope: !5681, file: !2738, line: 1341, type: !5697)
!5697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 176, elements: !5698)
!5698 = !{!5699}
!5699 = !DISubrange(count: 22)
!5700 = !DILocalVariable(name: "count", scope: !5681, file: !2738, line: 1342, type: !137)
!5701 = !DILocalVariable(name: "sint", scope: !5681, file: !2738, line: 1343, type: !2757)
!5702 = !DILocalVariable(name: "tagged_ap", scope: !5681, file: !2738, line: 1345, type: !5703)
!5703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!5704 = !DILocalVariable(name: "rc", scope: !5705, file: !2738, line: 1377, type: !107)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !2738, line: 1377, column: 4)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !2738, line: 1376, column: 19)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1376, column: 7)
!5708 = distinct !DILexicalBlock(scope: !5681, file: !2738, line: 1375, column: 19)
!5709 = !DILocalVariable(name: "state", scope: !5708, file: !2738, line: 1395, type: !5710)
!5710 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5681, file: !2738, line: 1392, size: 192, elements: !5711)
!5711 = !{!5712, !5720}
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5710, file: !2738, line: 1393, baseType: !5713, size: 64)
!5713 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2738, line: 166, size: 64, elements: !5714)
!5714 = !{!5715, !5716, !5717, !5718, !5719}
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5713, file: !2738, line: 168, baseType: !2757, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5713, file: !2738, line: 171, baseType: !2760, size: 64)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5713, file: !2738, line: 174, baseType: !394, size: 64)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5713, file: !2738, line: 177, baseType: !392, size: 64)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5713, file: !2738, line: 180, baseType: !106, size: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5710, file: !2738, line: 1394, baseType: !5721, size: 96, offset: 64)
!5721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2738, line: 189, size: 96, elements: !5722)
!5722 = !{!5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742, !5747}
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5721, file: !2738, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5721, file: !2738, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5721, file: !2738, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5721, file: !2738, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5721, file: !2738, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5721, file: !2738, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5721, file: !2738, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5721, file: !2738, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5721, file: !2738, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5721, file: !2738, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5721, file: !2738, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5721, file: !2738, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5721, file: !2738, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5721, file: !2738, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5721, file: !2738, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5721, file: !2738, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5721, file: !2738, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5721, file: !2738, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5721, file: !2738, line: 260, baseType: !191, size: 8, offset: 24)
!5742 = !DIDerivedType(tag: DW_TAG_member, scope: !5721, file: !2738, line: 262, baseType: !5743, size: 32, offset: 32)
!5743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5721, file: !2738, line: 262, size: 32, elements: !5744)
!5744 = !{!5745, !5746}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5743, file: !2738, line: 267, baseType: !107, size: 32)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5743, file: !2738, line: 289, baseType: !107, size: 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, scope: !5721, file: !2738, line: 292, baseType: !5748, size: 32, offset: 64)
!5748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5721, file: !2738, line: 292, size: 32, elements: !5749)
!5749 = !{!5750, !5751}
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5748, file: !2738, line: 297, baseType: !107, size: 32)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5748, file: !2738, line: 306, baseType: !107, size: 32)
!5752 = !DILocalVariable(name: "conv", scope: !5708, file: !2738, line: 1400, type: !5753)
!5753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5754)
!5754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 32)
!5755 = !DILocalVariable(name: "value", scope: !5708, file: !2738, line: 1401, type: !5756)
!5756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5757)
!5757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 32)
!5758 = !DILocalVariable(name: "sp", scope: !5708, file: !2738, line: 1402, type: !121)
!5759 = !DILocalVariable(name: "width", scope: !5708, file: !2738, line: 1403, type: !107)
!5760 = !DILocalVariable(name: "precision", scope: !5708, file: !2738, line: 1404, type: !107)
!5761 = !DILocalVariable(name: "bps", scope: !5708, file: !2738, line: 1405, type: !121)
!5762 = !DILocalVariable(name: "bpe", scope: !5708, file: !2738, line: 1406, type: !121)
!5763 = !DILocalVariable(name: "sign", scope: !5708, file: !2738, line: 1407, type: !123)
!5764 = !DILocalVariable(name: "arg", scope: !5765, file: !2738, line: 1432, type: !107)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !2738, line: 1431, column: 24)
!5766 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1431, column: 7)
!5767 = !DILocalVariable(name: "specifier_cat", scope: !5708, file: !2738, line: 1468, type: !2737)
!5768 = !DILocalVariable(name: "length_mod", scope: !5708, file: !2738, line: 1470, type: !2745)
!5769 = !DILocalVariable(name: "rc", scope: !5770, file: !2738, line: 1575, type: !107)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !2738, line: 1575, column: 4)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !2738, line: 1574, column: 43)
!5772 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1574, column: 7)
!5773 = !DILocalVariable(name: "rc", scope: !5774, file: !2738, line: 1584, type: !107)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !2738, line: 1584, column: 4)
!5775 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1582, column: 28)
!5776 = !DILocalVariable(name: "len", scope: !5777, file: !2738, line: 1589, type: !137)
!5777 = distinct !DILexicalBlock(scope: !5775, file: !2738, line: 1586, column: 13)
!5778 = !DILocalVariable(name: "len", scope: !5779, file: !2738, line: 1641, type: !137)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !2738, line: 1640, column: 24)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !2738, line: 1640, column: 8)
!5781 = !DILocalVariable(name: "nj_len", scope: !5708, file: !2738, line: 1722, type: !137)
!5782 = !DILocalVariable(name: "pad_len", scope: !5708, file: !2738, line: 1723, type: !107)
!5783 = !DILocalVariable(name: "pad", scope: !5784, file: !2738, line: 1751, type: !123)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !2738, line: 1750, column: 26)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !2738, line: 1750, column: 8)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !2738, line: 1747, column: 18)
!5787 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1747, column: 7)
!5788 = !DILocalVariable(name: "rc", scope: !5789, file: !2738, line: 1758, type: !107)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !2738, line: 1758, column: 7)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !2738, line: 1757, column: 21)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !2738, line: 1757, column: 10)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !2738, line: 1756, column: 26)
!5793 = distinct !DILexicalBlock(scope: !5784, file: !2738, line: 1756, column: 9)
!5794 = !DILocalVariable(name: "rc", scope: !5795, file: !2738, line: 1765, type: !107)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !2738, line: 1765, column: 6)
!5796 = distinct !DILexicalBlock(scope: !5784, file: !2738, line: 1764, column: 25)
!5797 = !DILocalVariable(name: "rc", scope: !5798, file: !2738, line: 1774, type: !107)
!5798 = distinct !DILexicalBlock(scope: !5799, file: !2738, line: 1774, column: 4)
!5799 = distinct !DILexicalBlock(scope: !5800, file: !2738, line: 1773, column: 18)
!5800 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1773, column: 7)
!5801 = !DILocalVariable(name: "rc", scope: !5802, file: !2738, line: 1819, type: !107)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !2738, line: 1819, column: 5)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !2738, line: 1818, column: 44)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !2738, line: 1818, column: 8)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !2738, line: 1817, column: 10)
!5806 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1777, column: 7)
!5807 = !DILocalVariable(name: "rc", scope: !5808, file: !2738, line: 1823, type: !107)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !2738, line: 1823, column: 5)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !2738, line: 1822, column: 26)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !2738, line: 1822, column: 8)
!5811 = !DILocalVariable(name: "rc", scope: !5812, file: !2738, line: 1828, type: !107)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !2738, line: 1828, column: 5)
!5813 = distinct !DILexicalBlock(scope: !5805, file: !2738, line: 1827, column: 26)
!5814 = !DILocalVariable(name: "rc", scope: !5815, file: !2738, line: 1831, type: !107)
!5815 = distinct !DILexicalBlock(scope: !5805, file: !2738, line: 1831, column: 4)
!5816 = !DILocalVariable(name: "rc", scope: !5817, file: !2738, line: 1836, type: !107)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !2738, line: 1836, column: 4)
!5818 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1835, column: 21)
!5819 = !DILabel(scope: !5775, name: "prec_int_pad0", file: !2738, line: 1634)
!5820 = !DILocation(line: 0, scope: !5681)
!5821 = !DILocation(line: 1341, column: 2, scope: !5681)
!5822 = !DILocation(line: 1341, column: 7, scope: !5681)
!5823 = !DILocation(line: 1375, column: 2, scope: !5681)
!5824 = !DILocation(line: 1342, column: 9, scope: !5681)
!5825 = !DILocation(line: 1375, column: 9, scope: !5681)
!5826 = !DILocation(line: 1377, column: 4, scope: !5705)
!5827 = !DILocation(line: 0, scope: !5705)
!5828 = !DILocation(line: 1377, column: 4, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5705, file: !2738, line: 1377, column: 4)
!5830 = distinct !{!5830, !5823, !5831}
!5831 = !DILocation(line: 1839, column: 2, scope: !5681)
!5832 = !DILocation(line: 1392, column: 3, scope: !5708)
!5833 = !DILocation(line: 1395, column: 5, scope: !5708)
!5834 = !DILocation(line: 0, scope: !5708)
!5835 = !DILocation(line: 1409, column: 8, scope: !5708)
!5836 = !DILocation(line: 1414, column: 13, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1414, column: 7)
!5838 = !DILocation(line: 1414, column: 7, scope: !5708)
!5839 = !DILocation(line: 1415, column: 12, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5837, file: !2738, line: 1414, column: 25)
!5841 = !DILocation(line: 1417, column: 14, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5840, file: !2738, line: 1417, column: 8)
!5843 = !DILocation(line: 1417, column: 8, scope: !5840)
!5844 = !DILocation(line: 1418, column: 21, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5842, file: !2738, line: 1417, column: 19)
!5846 = !DILocation(line: 1419, column: 13, scope: !5845)
!5847 = !DILocation(line: 1420, column: 4, scope: !5845)
!5848 = !DILocation(line: 1421, column: 20, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5837, file: !2738, line: 1421, column: 14)
!5850 = !DILocation(line: 1421, column: 14, scope: !5837)
!5851 = !DILocation(line: 1431, column: 13, scope: !5766)
!5852 = !DILocation(line: 1431, column: 7, scope: !5708)
!5853 = !DILocation(line: 1432, column: 14, scope: !5765)
!5854 = !DILocation(line: 0, scope: !5765)
!5855 = !DILocation(line: 1434, column: 12, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5765, file: !2738, line: 1434, column: 8)
!5857 = !DILocation(line: 1434, column: 8, scope: !5765)
!5858 = !DILocation(line: 1435, column: 24, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5856, file: !2738, line: 1434, column: 17)
!5860 = !DILocation(line: 1436, column: 4, scope: !5859)
!5861 = !DILocation(line: 1439, column: 20, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5766, file: !2738, line: 1439, column: 14)
!5863 = !DILocation(line: 1439, column: 14, scope: !5766)
!5864 = !DILocation(line: 1469, column: 37, scope: !5708)
!5865 = !DILocation(line: 1448, column: 20, scope: !5708)
!5866 = !DILocation(line: 1449, column: 22, scope: !5708)
!5867 = !DILocation(line: 1471, column: 34, scope: !5708)
!5868 = !DILocation(line: 1478, column: 7, scope: !5708)
!5869 = !DILocation(line: 1479, column: 4, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !2738, line: 1478, column: 40)
!5871 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1478, column: 7)
!5872 = !DILocation(line: 1484, column: 19, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5870, file: !2738, line: 1479, column: 24)
!5874 = !DILocation(line: 1484, column: 17, scope: !5873)
!5875 = !DILocation(line: 1485, column: 5, scope: !5873)
!5876 = !DILocation(line: 1492, column: 20, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !2738, line: 1491, column: 12)
!5878 = distinct !DILexicalBlock(scope: !5873, file: !2738, line: 1487, column: 9)
!5879 = !DILocation(line: 1492, column: 18, scope: !5877)
!5880 = !DILocation(line: 1494, column: 5, scope: !5873)
!5881 = !DILocation(line: 1497, column: 23, scope: !5873)
!5882 = !DILocation(line: 1496, column: 17, scope: !5873)
!5883 = !DILocation(line: 1498, column: 5, scope: !5873)
!5884 = !DILocation(line: 1501, column: 23, scope: !5873)
!5885 = !DILocation(line: 1500, column: 17, scope: !5873)
!5886 = !DILocation(line: 1502, column: 5, scope: !5873)
!5887 = !DILocation(line: 1513, column: 23, scope: !5873)
!5888 = !DILocation(line: 1513, column: 6, scope: !5873)
!5889 = !DILocation(line: 1512, column: 17, scope: !5873)
!5890 = !DILocation(line: 1514, column: 5, scope: !5873)
!5891 = !DILocation(line: 0, scope: !5873)
!5892 = !DILocation(line: 1516, column: 8, scope: !5870)
!5893 = !DILocation(line: 1517, column: 19, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !2738, line: 1516, column: 33)
!5895 = distinct !DILexicalBlock(scope: !5870, file: !2738, line: 1516, column: 8)
!5896 = !DILocation(line: 1517, column: 17, scope: !5894)
!5897 = !DILocation(line: 1518, column: 4, scope: !5894)
!5898 = !DILocation(line: 1519, column: 19, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !2738, line: 1518, column: 39)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !2738, line: 1518, column: 15)
!5901 = !DILocation(line: 1519, column: 17, scope: !5899)
!5902 = !DILocation(line: 1520, column: 4, scope: !5899)
!5903 = !DILocation(line: 1522, column: 4, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5905, file: !2738, line: 1521, column: 47)
!5905 = distinct !DILexicalBlock(scope: !5871, file: !2738, line: 1521, column: 14)
!5906 = !DILocation(line: 1527, column: 19, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5904, file: !2738, line: 1522, column: 24)
!5908 = !DILocation(line: 1527, column: 17, scope: !5907)
!5909 = !DILocation(line: 1528, column: 5, scope: !5907)
!5910 = !DILocation(line: 0, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5907, file: !2738, line: 1530, column: 9)
!5912 = !DILocation(line: 1540, column: 23, scope: !5907)
!5913 = !DILocation(line: 1539, column: 17, scope: !5907)
!5914 = !DILocation(line: 1542, column: 5, scope: !5907)
!5915 = !DILocation(line: 1545, column: 23, scope: !5907)
!5916 = !DILocation(line: 1544, column: 17, scope: !5907)
!5917 = !DILocation(line: 1547, column: 5, scope: !5907)
!5918 = !DILocation(line: 1551, column: 23, scope: !5907)
!5919 = !DILocation(line: 1551, column: 6, scope: !5907)
!5920 = !DILocation(line: 1550, column: 17, scope: !5907)
!5921 = !DILocation(line: 1552, column: 5, scope: !5907)
!5922 = !DILocation(line: 0, scope: !5907)
!5923 = !DILocation(line: 1554, column: 8, scope: !5904)
!5924 = !DILocation(line: 1555, column: 19, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !2738, line: 1554, column: 33)
!5926 = distinct !DILexicalBlock(scope: !5904, file: !2738, line: 1554, column: 8)
!5927 = !DILocation(line: 1555, column: 17, scope: !5925)
!5928 = !DILocation(line: 1556, column: 4, scope: !5925)
!5929 = !DILocation(line: 1557, column: 19, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !2738, line: 1556, column: 39)
!5931 = distinct !DILexicalBlock(scope: !5926, file: !2738, line: 1556, column: 15)
!5932 = !DILocation(line: 1557, column: 17, scope: !5930)
!5933 = !DILocation(line: 1558, column: 4, scope: !5930)
!5934 = !DILocation(line: 0, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5936, file: !2738, line: 1560, column: 8)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !2738, line: 1559, column: 45)
!5937 = distinct !DILexicalBlock(scope: !5905, file: !2738, line: 1559, column: 14)
!5938 = !DILocation(line: 1566, column: 17, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !2738, line: 1565, column: 46)
!5940 = distinct !DILexicalBlock(scope: !5937, file: !2738, line: 1565, column: 14)
!5941 = !DILocation(line: 1566, column: 15, scope: !5939)
!5942 = !DILocation(line: 1567, column: 3, scope: !5939)
!5943 = !DILocation(line: 1574, column: 21, scope: !5772)
!5944 = !DILocation(line: 1575, column: 4, scope: !5770)
!5945 = !DILocation(line: 0, scope: !5770)
!5946 = !DILocation(line: 1575, column: 4, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5770, file: !2738, line: 1575, column: 4)
!5948 = !DILocation(line: 1582, column: 17, scope: !5708)
!5949 = !DILocation(line: 1582, column: 3, scope: !5708)
!5950 = !DILocation(line: 1584, column: 4, scope: !5774)
!5951 = !DILocation(line: 0, scope: !5774)
!5952 = !DILocation(line: 1584, column: 4, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5774, file: !2738, line: 1584, column: 4)
!5954 = !DILocation(line: 1587, column: 31, scope: !5777)
!5955 = !DILocation(line: 1591, column: 18, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5777, file: !2738, line: 1591, column: 8)
!5957 = !DILocation(line: 1591, column: 8, scope: !5777)
!5958 = !DILocation(line: 1592, column: 11, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5956, file: !2738, line: 1591, column: 24)
!5960 = !DILocation(line: 0, scope: !5777)
!5961 = !DILocation(line: 1593, column: 4, scope: !5959)
!5962 = !DILocation(line: 1594, column: 11, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5956, file: !2738, line: 1593, column: 11)
!5964 = !DILocation(line: 1604, column: 51, scope: !5775)
!5965 = !DILocation(line: 1604, column: 13, scope: !5775)
!5966 = !DILocation(line: 1604, column: 11, scope: !5775)
!5967 = !DILocation(line: 1606, column: 4, scope: !5775)
!5968 = !DILocation(line: 1609, column: 14, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5775, file: !2738, line: 1609, column: 8)
!5970 = !DILocation(line: 1609, column: 8, scope: !5775)
!5971 = !DILocation(line: 1619, column: 18, scope: !5775)
!5972 = !DILocation(line: 1620, column: 13, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5775, file: !2738, line: 1620, column: 8)
!5974 = !DILocation(line: 1620, column: 8, scope: !5775)
!5975 = !DILocation(line: 1622, column: 36, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5973, file: !2738, line: 1620, column: 18)
!5977 = !DILocation(line: 1622, column: 17, scope: !5976)
!5978 = !DILocation(line: 1623, column: 4, scope: !5976)
!5979 = !DILocation(line: 1632, column: 29, scope: !5775)
!5980 = !DILocation(line: 1632, column: 10, scope: !5775)
!5981 = !DILocation(line: 1632, column: 4, scope: !5775)
!5982 = !DILocation(line: 1407, column: 8, scope: !5708)
!5983 = !DILocation(line: 0, scope: !5775)
!5984 = !DILocation(line: 1634, column: 3, scope: !5775)
!5985 = !DILocation(line: 1640, column: 18, scope: !5780)
!5986 = !DILocation(line: 1640, column: 8, scope: !5775)
!5987 = !DILocation(line: 1729, column: 13, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1729, column: 7)
!5989 = !DILocation(line: 1641, column: 22, scope: !5779)
!5990 = !DILocation(line: 0, scope: !5779)
!5991 = !DILocation(line: 1646, column: 21, scope: !5779)
!5992 = !DILocation(line: 1649, column: 13, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5779, file: !2738, line: 1649, column: 9)
!5994 = !DILocation(line: 1649, column: 9, scope: !5779)
!5995 = !DILocation(line: 1650, column: 35, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5993, file: !2738, line: 1649, column: 34)
!5997 = !DILocation(line: 1650, column: 23, scope: !5996)
!5998 = !DILocation(line: 1651, column: 5, scope: !5996)
!5999 = !DILocation(line: 1660, column: 15, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5775, file: !2738, line: 1660, column: 8)
!6001 = !DILocation(line: 1660, column: 19, scope: !6000)
!6002 = !DILocation(line: 1660, column: 8, scope: !5775)
!6003 = !DILocation(line: 1661, column: 23, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !2738, line: 1660, column: 28)
!6005 = !DILocation(line: 1661, column: 11, scope: !6004)
!6006 = !DILocation(line: 1665, column: 22, scope: !6004)
!6007 = !DILocation(line: 1666, column: 21, scope: !6004)
!6008 = !DILocation(line: 1668, column: 5, scope: !6004)
!6009 = !DILocation(line: 1677, column: 30, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !2738, line: 1676, column: 49)
!6011 = distinct !DILexicalBlock(scope: !5775, file: !2738, line: 1676, column: 8)
!6012 = !DILocation(line: 1677, column: 5, scope: !6010)
!6013 = !DILocation(line: 1680, column: 4, scope: !5775)
!6014 = !DILocation(line: 0, scope: !5956)
!6015 = !DILocation(line: 1597, column: 14, scope: !5777)
!6016 = !DILocation(line: 1699, column: 11, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1699, column: 7)
!6018 = !DILocation(line: 1699, column: 7, scope: !5708)
!6019 = !DILocation(line: 1725, column: 7, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1725, column: 7)
!6021 = !DILocation(line: 1725, column: 12, scope: !6020)
!6022 = !DILocation(line: 1747, column: 13, scope: !5787)
!6023 = !DILocation(line: 1747, column: 7, scope: !5708)
!6024 = !DILocation(line: 1722, column: 24, scope: !5708)
!6025 = !DILocation(line: 1725, column: 7, scope: !5708)
!6026 = !DILocation(line: 1729, column: 7, scope: !5708)
!6027 = !DILocation(line: 1736, column: 13, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5708, file: !2738, line: 1736, column: 7)
!6029 = !DILocation(line: 1735, column: 19, scope: !5708)
!6030 = !DILocation(line: 1736, column: 7, scope: !5708)
!6031 = !DILocation(line: 1748, column: 10, scope: !5786)
!6032 = !DILocation(line: 1750, column: 15, scope: !5785)
!6033 = !DILocation(line: 1750, column: 8, scope: !5786)
!6034 = !DILocation(line: 0, scope: !5784)
!6035 = !DILocation(line: 1756, column: 15, scope: !5793)
!6036 = !DILocation(line: 1756, column: 9, scope: !5784)
!6037 = !DILocation(line: 1758, column: 7, scope: !5789)
!6038 = !DILocation(line: 0, scope: !5789)
!6039 = !DILocation(line: 1758, column: 7, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !5789, file: !2738, line: 1758, column: 7)
!6041 = !DILocation(line: 1764, column: 5, scope: !5784)
!6042 = !DILocation(line: 0, scope: !5786)
!6043 = !DILocation(line: 1764, column: 20, scope: !5784)
!6044 = !DILocation(line: 1764, column: 17, scope: !5784)
!6045 = !DILocation(line: 1765, column: 6, scope: !5795)
!6046 = !DILocation(line: 0, scope: !5795)
!6047 = !DILocation(line: 1765, column: 6, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !5795, file: !2738, line: 1765, column: 6)
!6049 = distinct !{!6049, !6041, !6050}
!6050 = !DILocation(line: 1766, column: 5, scope: !5784)
!6051 = !DILocation(line: 1773, column: 12, scope: !5800)
!6052 = !DILocation(line: 1773, column: 7, scope: !5708)
!6053 = !DILocation(line: 1773, column: 7, scope: !5800)
!6054 = !DILocation(line: 1774, column: 4, scope: !5798)
!6055 = !DILocation(line: 0, scope: !5798)
!6056 = !DILocation(line: 1774, column: 4, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5798, file: !2738, line: 1774, column: 4)
!6058 = !DILocation(line: 1818, column: 8, scope: !5804)
!6059 = !DILocation(line: 1818, column: 27, scope: !5804)
!6060 = !DILocation(line: 1818, column: 25, scope: !5804)
!6061 = !DILocation(line: 1818, column: 8, scope: !5805)
!6062 = !DILocation(line: 1819, column: 5, scope: !5802)
!6063 = !DILocation(line: 0, scope: !5802)
!6064 = !DILocation(line: 1819, column: 5, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !5802, file: !2738, line: 1819, column: 5)
!6066 = !DILocation(line: 1822, column: 14, scope: !5810)
!6067 = !DILocation(line: 1822, column: 8, scope: !5805)
!6068 = !DILocation(line: 1823, column: 5, scope: !5808)
!6069 = !DILocation(line: 0, scope: !5808)
!6070 = !DILocation(line: 1823, column: 5, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !5808, file: !2738, line: 1823, column: 5)
!6072 = !DILocation(line: 1826, column: 20, scope: !5805)
!6073 = !DILocation(line: 1827, column: 4, scope: !5805)
!6074 = !DILocation(line: 0, scope: !5805)
!6075 = !DILocation(line: 1827, column: 21, scope: !5805)
!6076 = !DILocation(line: 1827, column: 18, scope: !5805)
!6077 = !DILocation(line: 1828, column: 5, scope: !5812)
!6078 = !DILocation(line: 0, scope: !5812)
!6079 = !DILocation(line: 1828, column: 5, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !5812, file: !2738, line: 1828, column: 5)
!6081 = distinct !{!6081, !6073, !6082}
!6082 = !DILocation(line: 1829, column: 4, scope: !5805)
!6083 = !DILocation(line: 1831, column: 4, scope: !5815)
!6084 = !DILocation(line: 0, scope: !5815)
!6085 = !DILocation(line: 1831, column: 4, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !5815, file: !2738, line: 1831, column: 4)
!6087 = !DILocation(line: 1835, column: 16, scope: !5708)
!6088 = !DILocation(line: 1835, column: 3, scope: !5708)
!6089 = !DILocation(line: 1836, column: 4, scope: !5817)
!6090 = !DILocation(line: 0, scope: !5817)
!6091 = !DILocation(line: 1836, column: 4, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !5817, file: !2738, line: 1836, column: 4)
!6093 = !DILocation(line: 1837, column: 4, scope: !5818)
!6094 = distinct !{!6094, !6088, !6095}
!6095 = !DILocation(line: 1838, column: 3, scope: !5708)
!6096 = !DILocation(line: 1844, column: 1, scope: !5681)
!6097 = distinct !DISubprogram(name: "extract_conversion", scope: !2738, file: !2738, line: 642, type: !6098, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!121, !5754, !121}
!6100 = !{!6101, !6102}
!6101 = !DILocalVariable(name: "conv", arg: 1, scope: !6097, file: !2738, line: 642, type: !5754)
!6102 = !DILocalVariable(name: "sp", arg: 2, scope: !6097, file: !2738, line: 643, type: !121)
!6103 = !DILocation(line: 0, scope: !6097)
!6104 = !DILocation(line: 645, column: 10, scope: !6097)
!6105 = !DILocation(line: 653, column: 2, scope: !6097)
!6106 = !DILocation(line: 654, column: 6, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6097, file: !2738, line: 654, column: 6)
!6108 = !DILocation(line: 654, column: 10, scope: !6107)
!6109 = !DILocation(line: 654, column: 6, scope: !6097)
!6110 = !DILocation(line: 655, column: 24, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !2738, line: 654, column: 18)
!6112 = !DILocation(line: 655, column: 19, scope: !6111)
!6113 = !DILocation(line: 656, column: 3, scope: !6111)
!6114 = !DILocation(line: 659, column: 7, scope: !6097)
!6115 = !DILocation(line: 660, column: 7, scope: !6097)
!6116 = !DILocation(line: 661, column: 7, scope: !6097)
!6117 = !DILocation(line: 662, column: 7, scope: !6097)
!6118 = !DILocation(line: 663, column: 7, scope: !6097)
!6119 = !DILocation(line: 665, column: 2, scope: !6097)
!6120 = !DILocation(line: 666, column: 1, scope: !6097)
!6121 = distinct !DISubprogram(name: "outs", scope: !2738, file: !2738, line: 1319, type: !6122, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6124)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{!107, !4138, !106, !121, !121}
!6124 = !{!6125, !6126, !6127, !6128, !6129, !6130}
!6125 = !DILocalVariable(name: "out", arg: 1, scope: !6121, file: !2738, line: 1319, type: !4138)
!6126 = !DILocalVariable(name: "ctx", arg: 2, scope: !6121, file: !2738, line: 1320, type: !106)
!6127 = !DILocalVariable(name: "sp", arg: 3, scope: !6121, file: !2738, line: 1321, type: !121)
!6128 = !DILocalVariable(name: "ep", arg: 4, scope: !6121, file: !2738, line: 1322, type: !121)
!6129 = !DILocalVariable(name: "count", scope: !6121, file: !2738, line: 1324, type: !137)
!6130 = !DILocalVariable(name: "rc", scope: !6131, file: !2738, line: 1327, type: !107)
!6131 = distinct !DILexicalBlock(scope: !6121, file: !2738, line: 1326, column: 45)
!6132 = !DILocation(line: 0, scope: !6121)
!6133 = !DILocation(line: 1326, column: 2, scope: !6121)
!6134 = !DILocation(line: 1324, column: 9, scope: !6121)
!6135 = !DILocation(line: 1326, column: 13, scope: !6121)
!6136 = !DILocation(line: 1326, column: 19, scope: !6121)
!6137 = !DILocation(line: 1327, column: 21, scope: !6131)
!6138 = !DILocation(line: 1326, column: 36, scope: !6121)
!6139 = !DILocation(line: 1326, column: 39, scope: !6121)
!6140 = !DILocation(line: 1327, column: 24, scope: !6131)
!6141 = !DILocation(line: 1327, column: 16, scope: !6131)
!6142 = !DILocation(line: 1327, column: 12, scope: !6131)
!6143 = !DILocation(line: 0, scope: !6131)
!6144 = !DILocation(line: 1329, column: 10, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6131, file: !2738, line: 1329, column: 7)
!6146 = !DILocation(line: 1329, column: 7, scope: !6131)
!6147 = distinct !{!6147, !6133, !6148}
!6148 = !DILocation(line: 1333, column: 2, scope: !6121)
!6149 = !DILocation(line: 1336, column: 1, scope: !6121)
!6150 = distinct !DISubprogram(name: "encode_uint", scope: !2738, file: !2738, line: 788, type: !6151, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6153)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!283, !2760, !5754, !283, !121}
!6153 = !{!6154, !6155, !6156, !6157, !6158, !6159, !6161, !6162}
!6154 = !DILocalVariable(name: "value", arg: 1, scope: !6150, file: !2738, line: 788, type: !2760)
!6155 = !DILocalVariable(name: "conv", arg: 2, scope: !6150, file: !2738, line: 789, type: !5754)
!6156 = !DILocalVariable(name: "bps", arg: 3, scope: !6150, file: !2738, line: 790, type: !283)
!6157 = !DILocalVariable(name: "bpe", arg: 4, scope: !6150, file: !2738, line: 791, type: !121)
!6158 = !DILocalVariable(name: "upcase", scope: !6150, file: !2738, line: 793, type: !136)
!6159 = !DILocalVariable(name: "radix", scope: !6150, file: !2738, line: 794, type: !6160)
!6160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6161 = !DILocalVariable(name: "bp", scope: !6150, file: !2738, line: 795, type: !283)
!6162 = !DILocalVariable(name: "lsv", scope: !6163, file: !2738, line: 798, type: !32)
!6163 = distinct !DILexicalBlock(scope: !6150, file: !2738, line: 797, column: 5)
!6164 = !DILocation(line: 0, scope: !6150)
!6165 = !DILocation(line: 793, column: 35, scope: !6150)
!6166 = !DILocation(line: 793, column: 24, scope: !6150)
!6167 = !DILocation(line: 793, column: 16, scope: !6150)
!6168 = !DILocation(line: 794, column: 29, scope: !6150)
!6169 = !DILocation(line: 795, column: 24, scope: !6150)
!6170 = !DILocation(line: 795, column: 17, scope: !6150)
!6171 = !DILocation(line: 797, column: 2, scope: !6150)
!6172 = !DILocation(line: 802, column: 9, scope: !6163)
!6173 = !DILocation(line: 798, column: 22, scope: !6163)
!6174 = !DILocation(line: 0, scope: !6163)
!6175 = !DILocation(line: 800, column: 16, scope: !6163)
!6176 = !DILocation(line: 800, column: 11, scope: !6163)
!6177 = !DILocation(line: 800, column: 4, scope: !6163)
!6178 = !DILocation(line: 800, column: 9, scope: !6163)
!6179 = !DILocation(line: 803, column: 18, scope: !6150)
!6180 = !DILocation(line: 803, column: 24, scope: !6150)
!6181 = !DILocation(line: 803, column: 2, scope: !6163)
!6182 = distinct !{!6182, !6171, !6183}
!6183 = !DILocation(line: 803, column: 37, scope: !6150)
!6184 = !DILocation(line: 808, column: 12, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6150, file: !2738, line: 808, column: 6)
!6186 = !DILocation(line: 808, column: 6, scope: !6150)
!6187 = !DILocation(line: 809, column: 7, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6185, file: !2738, line: 808, column: 23)
!6189 = !DILocation(line: 813, column: 3, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !2738, line: 811, column: 27)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !2738, line: 811, column: 14)
!6192 = distinct !DILexicalBlock(scope: !6188, file: !2738, line: 809, column: 7)
!6193 = !DILocation(line: 0, scope: !6192)
!6194 = !DILocation(line: 818, column: 2, scope: !6150)
!6195 = distinct !DISubprogram(name: "store_count", scope: !2738, file: !2738, line: 1280, type: !6196, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6200)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{null, !6198, !106, !107}
!6198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6199, size: 32)
!6199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5721)
!6200 = !{!6201, !6202, !6203}
!6201 = !DILocalVariable(name: "conv", arg: 1, scope: !6195, file: !2738, line: 1280, type: !6198)
!6202 = !DILocalVariable(name: "dp", arg: 2, scope: !6195, file: !2738, line: 1281, type: !106)
!6203 = !DILocalVariable(name: "count", arg: 3, scope: !6195, file: !2738, line: 1282, type: !107)
!6204 = !DILocation(line: 0, scope: !6195)
!6205 = !DILocation(line: 1284, column: 38, scope: !6195)
!6206 = !DILocation(line: 1284, column: 2, scope: !6195)
!6207 = !DILocation(line: 1286, column: 4, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6195, file: !2738, line: 1284, column: 50)
!6209 = !DILocation(line: 1286, column: 14, scope: !6208)
!6210 = !DILocation(line: 1287, column: 3, scope: !6208)
!6211 = !DILocation(line: 1289, column: 24, scope: !6208)
!6212 = !DILocation(line: 1289, column: 22, scope: !6208)
!6213 = !DILocation(line: 1290, column: 3, scope: !6208)
!6214 = !DILocation(line: 1292, column: 18, scope: !6208)
!6215 = !DILocation(line: 1292, column: 4, scope: !6208)
!6216 = !DILocation(line: 1292, column: 16, scope: !6208)
!6217 = !DILocation(line: 1293, column: 3, scope: !6208)
!6218 = !DILocation(line: 1295, column: 4, scope: !6208)
!6219 = !DILocation(line: 1295, column: 15, scope: !6208)
!6220 = !DILocation(line: 1296, column: 3, scope: !6208)
!6221 = !DILocation(line: 1298, column: 22, scope: !6208)
!6222 = !DILocation(line: 1298, column: 4, scope: !6208)
!6223 = !DILocation(line: 1298, column: 20, scope: !6208)
!6224 = !DILocation(line: 1299, column: 3, scope: !6208)
!6225 = !DILocation(line: 1301, column: 21, scope: !6208)
!6226 = !DILocation(line: 1301, column: 4, scope: !6208)
!6227 = !DILocation(line: 1301, column: 19, scope: !6208)
!6228 = !DILocation(line: 1302, column: 3, scope: !6208)
!6229 = !DILocation(line: 1304, column: 4, scope: !6208)
!6230 = !DILocation(line: 1304, column: 17, scope: !6208)
!6231 = !DILocation(line: 1305, column: 3, scope: !6208)
!6232 = !DILocation(line: 1307, column: 4, scope: !6208)
!6233 = !DILocation(line: 1307, column: 20, scope: !6208)
!6234 = !DILocation(line: 1308, column: 3, scope: !6208)
!6235 = !DILocation(line: 1316, column: 1, scope: !6195)
!6236 = distinct !DISubprogram(name: "isupper", scope: !6237, file: !6237, line: 16, type: !418, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6238)
!6237 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6238 = !{!6239}
!6239 = !DILocalVariable(name: "a", arg: 1, scope: !6236, file: !6237, line: 16, type: !107)
!6240 = !DILocation(line: 0, scope: !6236)
!6241 = !DILocation(line: 18, column: 29, scope: !6236)
!6242 = !DILocation(line: 18, column: 45, scope: !6236)
!6243 = !DILocation(line: 18, column: 2, scope: !6236)
!6244 = distinct !DISubprogram(name: "conversion_radix", scope: !2738, file: !2738, line: 761, type: !6245, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6247)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{!137, !123}
!6247 = !{!6248}
!6248 = !DILocalVariable(name: "specifier", arg: 1, scope: !6244, file: !2738, line: 761, type: !123)
!6249 = !DILocation(line: 0, scope: !6244)
!6250 = !DILocation(line: 763, column: 2, scope: !6244)
!6251 = !DILocation(line: 770, column: 3, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6244, file: !2738, line: 763, column: 21)
!6253 = !DILocation(line: 774, column: 3, scope: !6252)
!6254 = !DILocation(line: 0, scope: !6252)
!6255 = !DILocation(line: 776, column: 1, scope: !6244)
!6256 = distinct !DISubprogram(name: "extract_flags", scope: !2738, file: !2738, line: 339, type: !6098, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6257)
!6257 = !{!6258, !6259, !6260}
!6258 = !DILocalVariable(name: "conv", arg: 1, scope: !6256, file: !2738, line: 339, type: !5754)
!6259 = !DILocalVariable(name: "sp", arg: 2, scope: !6256, file: !2738, line: 340, type: !121)
!6260 = !DILocalVariable(name: "loop", scope: !6256, file: !2738, line: 342, type: !136)
!6261 = !DILocation(line: 0, scope: !6256)
!6262 = !DILocation(line: 344, column: 2, scope: !6256)
!6263 = !DILocation(line: 345, column: 11, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6256, file: !2738, line: 344, column: 5)
!6265 = !DILocation(line: 345, column: 3, scope: !6264)
!6266 = !DILocation(line: 351, column: 4, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !2738, line: 345, column: 16)
!6268 = !DILocation(line: 354, column: 4, scope: !6267)
!6269 = !DILocation(line: 357, column: 4, scope: !6267)
!6270 = !DILocation(line: 360, column: 4, scope: !6267)
!6271 = !DILocation(line: 0, scope: !6267)
!6272 = !DILocation(line: 370, column: 12, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6256, file: !2738, line: 370, column: 6)
!6274 = !DILocation(line: 370, column: 22, scope: !6273)
!6275 = !DILocation(line: 371, column: 19, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !2738, line: 370, column: 42)
!6277 = !DILocation(line: 372, column: 2, scope: !6276)
!6278 = !DILocation(line: 376, column: 2, scope: !6256)
!6279 = distinct !DISubprogram(name: "extract_width", scope: !2738, file: !2738, line: 388, type: !6098, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6280)
!6280 = !{!6281, !6282, !6283, !6284}
!6281 = !DILocalVariable(name: "conv", arg: 1, scope: !6279, file: !2738, line: 388, type: !5754)
!6282 = !DILocalVariable(name: "sp", arg: 2, scope: !6279, file: !2738, line: 389, type: !121)
!6283 = !DILocalVariable(name: "wp", scope: !6279, file: !2738, line: 398, type: !121)
!6284 = !DILocalVariable(name: "width", scope: !6279, file: !2738, line: 399, type: !137)
!6285 = !DILocation(line: 0, scope: !6279)
!6286 = !DILocation(line: 391, column: 8, scope: !6279)
!6287 = !DILocation(line: 391, column: 22, scope: !6279)
!6288 = !DILocation(line: 393, column: 6, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6279, file: !2738, line: 393, column: 6)
!6290 = !DILocation(line: 393, column: 10, scope: !6289)
!6291 = !DILocation(line: 393, column: 6, scope: !6279)
!6292 = !DILocation(line: 394, column: 20, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6289, file: !2738, line: 393, column: 18)
!6294 = !DILocation(line: 395, column: 10, scope: !6293)
!6295 = !DILocation(line: 395, column: 3, scope: !6293)
!6296 = !DILocation(line: 399, column: 17, scope: !6279)
!6297 = !DILocation(line: 401, column: 6, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6279, file: !2738, line: 401, column: 6)
!6299 = !DILocation(line: 401, column: 9, scope: !6298)
!6300 = !DILocation(line: 401, column: 6, scope: !6279)
!6301 = !DILocation(line: 402, column: 23, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6298, file: !2738, line: 401, column: 16)
!6303 = !DILocation(line: 403, column: 9, scope: !6302)
!6304 = !DILocation(line: 403, column: 21, scope: !6302)
!6305 = !DILocation(line: 405, column: 11, scope: !6302)
!6306 = !DILocation(line: 404, column: 21, scope: !6302)
!6307 = !DILocation(line: 406, column: 2, scope: !6302)
!6308 = !DILocation(line: 409, column: 1, scope: !6279)
!6309 = distinct !DISubprogram(name: "extract_prec", scope: !2738, file: !2738, line: 420, type: !6098, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6310)
!6310 = !{!6311, !6312, !6313}
!6311 = !DILocalVariable(name: "conv", arg: 1, scope: !6309, file: !2738, line: 420, type: !5754)
!6312 = !DILocalVariable(name: "sp", arg: 2, scope: !6309, file: !2738, line: 421, type: !121)
!6313 = !DILocalVariable(name: "prec", scope: !6309, file: !2738, line: 435, type: !137)
!6314 = !DILocation(line: 0, scope: !6309)
!6315 = !DILocation(line: 423, column: 24, scope: !6309)
!6316 = !DILocation(line: 423, column: 28, scope: !6309)
!6317 = !DILocation(line: 423, column: 8, scope: !6309)
!6318 = !DILocation(line: 423, column: 21, scope: !6309)
!6319 = !DILocation(line: 425, column: 6, scope: !6309)
!6320 = !DILocation(line: 428, column: 2, scope: !6309)
!6321 = !DILocation(line: 430, column: 6, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6309, file: !2738, line: 430, column: 6)
!6323 = !DILocation(line: 430, column: 10, scope: !6322)
!6324 = !DILocation(line: 430, column: 6, scope: !6309)
!6325 = !DILocation(line: 431, column: 19, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !2738, line: 430, column: 18)
!6327 = !DILocation(line: 432, column: 10, scope: !6326)
!6328 = !DILocation(line: 432, column: 3, scope: !6326)
!6329 = !DILocation(line: 435, column: 16, scope: !6309)
!6330 = !DILocation(line: 437, column: 8, scope: !6309)
!6331 = !DILocation(line: 437, column: 19, scope: !6309)
!6332 = !DILocation(line: 439, column: 10, scope: !6309)
!6333 = !DILocation(line: 438, column: 20, scope: !6309)
!6334 = !DILocation(line: 441, column: 9, scope: !6309)
!6335 = !DILocation(line: 442, column: 1, scope: !6309)
!6336 = distinct !DISubprogram(name: "extract_length", scope: !2738, file: !2738, line: 453, type: !6098, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6337)
!6337 = !{!6338, !6339}
!6338 = !DILocalVariable(name: "conv", arg: 1, scope: !6336, file: !2738, line: 453, type: !5754)
!6339 = !DILocalVariable(name: "sp", arg: 2, scope: !6336, file: !2738, line: 454, type: !121)
!6340 = !DILocation(line: 0, scope: !6336)
!6341 = !DILocation(line: 456, column: 10, scope: !6336)
!6342 = !DILocation(line: 456, column: 2, scope: !6336)
!6343 = !DILocation(line: 458, column: 8, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !2738, line: 458, column: 7)
!6345 = distinct !DILexicalBlock(scope: !6336, file: !2738, line: 456, column: 15)
!6346 = !DILocation(line: 458, column: 7, scope: !6344)
!6347 = !DILocation(line: 458, column: 13, scope: !6344)
!6348 = !DILocation(line: 0, scope: !6344)
!6349 = !DILocation(line: 458, column: 7, scope: !6345)
!6350 = !DILocation(line: 459, column: 21, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6344, file: !2738, line: 458, column: 21)
!6352 = !DILocation(line: 460, column: 4, scope: !6351)
!6353 = !DILocation(line: 461, column: 3, scope: !6351)
!6354 = !DILocation(line: 462, column: 21, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6344, file: !2738, line: 461, column: 10)
!6356 = !DILocation(line: 466, column: 8, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6345, file: !2738, line: 466, column: 7)
!6358 = !DILocation(line: 466, column: 7, scope: !6357)
!6359 = !DILocation(line: 466, column: 13, scope: !6357)
!6360 = !DILocation(line: 0, scope: !6357)
!6361 = !DILocation(line: 466, column: 7, scope: !6345)
!6362 = !DILocation(line: 467, column: 21, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6357, file: !2738, line: 466, column: 21)
!6364 = !DILocation(line: 468, column: 4, scope: !6363)
!6365 = !DILocation(line: 469, column: 3, scope: !6363)
!6366 = !DILocation(line: 470, column: 21, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6357, file: !2738, line: 469, column: 10)
!6368 = !DILocation(line: 474, column: 9, scope: !6345)
!6369 = !DILocation(line: 474, column: 20, scope: !6345)
!6370 = !DILocation(line: 475, column: 3, scope: !6345)
!6371 = !DILocation(line: 476, column: 3, scope: !6345)
!6372 = !DILocation(line: 478, column: 9, scope: !6345)
!6373 = !DILocation(line: 478, column: 20, scope: !6345)
!6374 = !DILocation(line: 479, column: 3, scope: !6345)
!6375 = !DILocation(line: 480, column: 3, scope: !6345)
!6376 = !DILocation(line: 482, column: 9, scope: !6345)
!6377 = !DILocation(line: 482, column: 20, scope: !6345)
!6378 = !DILocation(line: 483, column: 3, scope: !6345)
!6379 = !DILocation(line: 484, column: 3, scope: !6345)
!6380 = !DILocation(line: 486, column: 9, scope: !6345)
!6381 = !DILocation(line: 486, column: 20, scope: !6345)
!6382 = !DILocation(line: 487, column: 3, scope: !6345)
!6383 = !DILocation(line: 492, column: 21, scope: !6345)
!6384 = !DILocation(line: 493, column: 3, scope: !6345)
!6385 = !DILocation(line: 495, column: 9, scope: !6345)
!6386 = !DILocation(line: 495, column: 20, scope: !6345)
!6387 = !DILocation(line: 496, column: 3, scope: !6345)
!6388 = !DILocation(line: 498, column: 2, scope: !6336)
!6389 = distinct !DISubprogram(name: "extract_specifier", scope: !2738, file: !2738, line: 513, type: !6098, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6390)
!6390 = !{!6391, !6392, !6393, !6394}
!6391 = !DILocalVariable(name: "conv", arg: 1, scope: !6389, file: !2738, line: 513, type: !5754)
!6392 = !DILocalVariable(name: "sp", arg: 2, scope: !6389, file: !2738, line: 514, type: !121)
!6393 = !DILocalVariable(name: "unsupported", scope: !6389, file: !2738, line: 516, type: !136)
!6394 = !DILabel(scope: !6395, name: "int_conv", file: !2738, line: 526)
!6395 = distinct !DILexicalBlock(scope: !6389, file: !2738, line: 520, column: 27)
!6396 = !DILocation(line: 0, scope: !6389)
!6397 = !DILocation(line: 518, column: 20, scope: !6389)
!6398 = !DILocation(line: 518, column: 8, scope: !6389)
!6399 = !DILocation(line: 518, column: 18, scope: !6389)
!6400 = !DILocation(line: 520, column: 2, scope: !6389)
!6401 = !DILocation(line: 525, column: 3, scope: !6395)
!6402 = !DILocation(line: 0, scope: !6395)
!6403 = !DILocation(line: 526, column: 1, scope: !6395)
!6404 = !DILocation(line: 528, column: 24, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6395, file: !2738, line: 528, column: 7)
!6406 = !DILocation(line: 528, column: 7, scope: !6395)
!6407 = !DILocation(line: 535, column: 23, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6395, file: !2738, line: 535, column: 7)
!6409 = !DILocation(line: 535, column: 7, scope: !6395)
!6410 = !DILocation(line: 536, column: 36, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6408, file: !2738, line: 535, column: 31)
!6412 = !DILocation(line: 537, column: 3, scope: !6411)
!6413 = !DILocation(line: 570, column: 9, scope: !6395)
!6414 = !DILocation(line: 570, column: 23, scope: !6395)
!6415 = !DILocation(line: 575, column: 4, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !2738, line: 573, column: 48)
!6417 = distinct !DILexicalBlock(scope: !6395, file: !2738, line: 573, column: 7)
!6418 = !DILocation(line: 603, column: 9, scope: !6395)
!6419 = !DILocation(line: 603, column: 23, scope: !6395)
!6420 = !DILocation(line: 605, column: 24, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6395, file: !2738, line: 605, column: 7)
!6422 = !DILocation(line: 605, column: 7, scope: !6395)
!6423 = !DILocation(line: 612, column: 9, scope: !6395)
!6424 = !DILocation(line: 612, column: 23, scope: !6395)
!6425 = !DILocation(line: 619, column: 24, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6395, file: !2738, line: 619, column: 7)
!6427 = !DILocation(line: 619, column: 7, scope: !6395)
!6428 = !DILocation(line: 625, column: 9, scope: !6395)
!6429 = !DILocation(line: 625, column: 17, scope: !6395)
!6430 = !DILocation(line: 626, column: 3, scope: !6395)
!6431 = !DILocation(line: 629, column: 20, scope: !6389)
!6432 = !DILocation(line: 629, column: 8, scope: !6389)
!6433 = !DILocation(line: 518, column: 23, scope: !6389)
!6434 = !DILocation(line: 631, column: 2, scope: !6389)
!6435 = distinct !DISubprogram(name: "extract_decimal", scope: !2738, file: !2738, line: 318, type: !6436, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6438)
!6436 = !DISubroutineType(types: !6437)
!6437 = !{!137, !395}
!6438 = !{!6439, !6440, !6441}
!6439 = !DILocalVariable(name: "str", arg: 1, scope: !6435, file: !2738, line: 318, type: !395)
!6440 = !DILocalVariable(name: "sp", scope: !6435, file: !2738, line: 320, type: !121)
!6441 = !DILocalVariable(name: "val", scope: !6435, file: !2738, line: 321, type: !137)
!6442 = !DILocation(line: 0, scope: !6435)
!6443 = !DILocation(line: 320, column: 19, scope: !6435)
!6444 = !DILocation(line: 323, column: 37, scope: !6435)
!6445 = !DILocation(line: 323, column: 17, scope: !6435)
!6446 = !DILocation(line: 323, column: 9, scope: !6435)
!6447 = !DILocation(line: 323, column: 2, scope: !6435)
!6448 = !DILocation(line: 324, column: 13, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6435, file: !2738, line: 323, column: 43)
!6450 = !DILocation(line: 324, column: 24, scope: !6449)
!6451 = !DILocation(line: 324, column: 19, scope: !6449)
!6452 = !DILocation(line: 324, column: 27, scope: !6449)
!6453 = distinct !{!6453, !6447, !6454}
!6454 = !DILocation(line: 325, column: 2, scope: !6435)
!6455 = !DILocation(line: 326, column: 7, scope: !6435)
!6456 = !DILocation(line: 327, column: 2, scope: !6435)
!6457 = distinct !DISubprogram(name: "isdigit", scope: !6237, file: !6237, line: 43, type: !418, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2734, retainedNodes: !6458)
!6458 = !{!6459}
!6459 = !DILocalVariable(name: "a", arg: 1, scope: !6457, file: !6237, line: 43, type: !107)
!6460 = !DILocation(line: 0, scope: !6457)
!6461 = !DILocation(line: 45, column: 29, scope: !6457)
!6462 = !DILocation(line: 45, column: 45, scope: !6457)
!6463 = !DILocation(line: 45, column: 2, scope: !6457)
!6464 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6465, file: !6465, line: 9, type: !337, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2768, retainedNodes: !256)
!6465 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!6466 = !DILocation(line: 11, column: 1, scope: !6464)
!6467 = !{i64 2147565304, i64 2147565347, i64 2147565387}
!6468 = !DILocation(line: 12, column: 1, scope: !6464)
!6469 = !{i64 2147569531, i64 2147569574, i64 2147569614}
!6470 = !DILocation(line: 13, column: 1, scope: !6464)
!6471 = !{i64 2147569740, i64 2147569783, i64 2147569823}
!6472 = !DILocation(line: 14, column: 1, scope: !6464)
!6473 = !{i64 2147569909, i64 2147569952, i64 2147569992}
!6474 = !DILocation(line: 15, column: 1, scope: !6464)
!6475 = !{i64 2147570072, i64 2147570115, i64 2147570155}
!6476 = !DILocation(line: 16, column: 1, scope: !6464)
!6477 = !{i64 2147570256, i64 2147570299, i64 2147570339}
!6478 = !DILocation(line: 17, column: 1, scope: !6464)
!6479 = !{i64 2147570435, i64 2147570478, i64 2147570518}
!6480 = !DILocation(line: 18, column: 1, scope: !6464)
!6481 = !{i64 2147570677, i64 2147570720, i64 2147570760}
!6482 = !DILocation(line: 19, column: 1, scope: !6464)
!6483 = !{i64 2147570912, i64 2147570955, i64 2147570995}
!6484 = !DILocation(line: 20, column: 1, scope: !6464)
!6485 = !{i64 2147571098, i64 2147571141, i64 2147571181}
!6486 = !DILocation(line: 21, column: 1, scope: !6464)
!6487 = !{i64 2147571314, i64 2147571357, i64 2147571397}
!6488 = !DILocation(line: 22, column: 1, scope: !6464)
!6489 = !{i64 2147571517, i64 2147571560, i64 2147571600}
!6490 = !DILocation(line: 23, column: 1, scope: !6464)
!6491 = !{i64 2147571720, i64 2147571763, i64 2147571803}
!6492 = !DILocation(line: 24, column: 1, scope: !6464)
!6493 = !{i64 2147571895, i64 2147571938, i64 2147571978}
!6494 = !DILocation(line: 25, column: 1, scope: !6464)
!6495 = !{i64 2147572103, i64 2147572146, i64 2147572186}
!6496 = !DILocation(line: 26, column: 1, scope: !6464)
!6497 = !{i64 2147572307, i64 2147572350, i64 2147572390}
!6498 = !DILocation(line: 27, column: 1, scope: !6464)
!6499 = !{i64 2147572500, i64 2147572543, i64 2147572583}
!6500 = !DILocation(line: 28, column: 1, scope: !6464)
!6501 = !{i64 2147572702, i64 2147572745, i64 2147572785}
!6502 = !DILocation(line: 29, column: 1, scope: !6464)
!6503 = !{i64 2147572901, i64 2147572944, i64 2147572984}
!6504 = !DILocation(line: 30, column: 1, scope: !6464)
!6505 = !{i64 2147573128, i64 2147573171, i64 2147573211}
!6506 = !DILocation(line: 31, column: 1, scope: !6464)
!6507 = !{i64 2147573330, i64 2147573373, i64 2147573413}
!6508 = !DILocation(line: 32, column: 1, scope: !6464)
!6509 = !{i64 2147573545, i64 2147573588, i64 2147573628}
!6510 = !DILocation(line: 33, column: 1, scope: !6464)
!6511 = !{i64 2147573717, i64 2147573760, i64 2147573800}
!6512 = !DILocation(line: 34, column: 1, scope: !6464)
!6513 = !{i64 2147573919, i64 2147573962, i64 2147574002}
!6514 = !DILocation(line: 35, column: 1, scope: !6464)
!6515 = !{i64 2147574145, i64 2147574188, i64 2147574228}
!6516 = !DILocation(line: 36, column: 1, scope: !6464)
!6517 = !{i64 2147574344, i64 2147574387, i64 2147574427}
!6518 = !DILocation(line: 37, column: 1, scope: !6464)
!6519 = !{i64 2147574519, i64 2147574562, i64 2147574602}
!6520 = !DILocation(line: 38, column: 1, scope: !6464)
!6521 = !{i64 2147574772, i64 2147574815, i64 2147574855}
!6522 = !DILocation(line: 39, column: 1, scope: !6464)
!6523 = !{i64 2147575013, i64 2147575056, i64 2147575096}
!6524 = !DILocation(line: 40, column: 1, scope: !6464)
!6525 = !{i64 2147575248, i64 2147575291, i64 2147575331}
!6526 = !DILocation(line: 41, column: 1, scope: !6464)
!6527 = !{i64 2147575480, i64 2147575523, i64 2147575563}
!6528 = !DILocation(line: 42, column: 1, scope: !6464)
!6529 = !{i64 2147575706, i64 2147575749, i64 2147575789}
!6530 = !DILocation(line: 43, column: 1, scope: !6464)
!6531 = !{i64 2147575932, i64 2147575975, i64 2147576015}
!6532 = !DILocation(line: 44, column: 1, scope: !6464)
!6533 = !{i64 2147576158, i64 2147576201, i64 2147576241}
!6534 = !DILocation(line: 45, column: 1, scope: !6464)
!6535 = !{i64 2147576393, i64 2147576436, i64 2147576476}
!6536 = !DILocation(line: 46, column: 1, scope: !6464)
!6537 = !{i64 2147576637, i64 2147576680, i64 2147576720}
!6538 = !DILocation(line: 47, column: 1, scope: !6464)
!6539 = !{i64 2147576884, i64 2147576927, i64 2147576967}
!6540 = !DILocation(line: 48, column: 1, scope: !6464)
!6541 = !{i64 2147577116, i64 2147577159, i64 2147577199}
!6542 = !DILocation(line: 49, column: 1, scope: !6464)
!6543 = !{i64 2147577360, i64 2147577403, i64 2147577443}
!6544 = !DILocation(line: 50, column: 1, scope: !6464)
!6545 = !{i64 2147577598, i64 2147577641, i64 2147577681}
!6546 = !DILocation(line: 51, column: 1, scope: !6464)
!6547 = !{i64 2147577872, i64 2147577915, i64 2147577955}
!6548 = !DILocation(line: 52, column: 1, scope: !6464)
!6549 = !{i64 2147578110, i64 2147578153, i64 2147578193}
!6550 = !DILocation(line: 53, column: 1, scope: !6464)
!6551 = !{i64 2147582424, i64 2147582467, i64 2147582507}
!6552 = !DILocation(line: 54, column: 1, scope: !6464)
!6553 = !{i64 2147582668, i64 2147582711, i64 2147582751}
!6554 = !DILocation(line: 55, column: 1, scope: !6464)
!6555 = !{i64 2147582903, i64 2147582946, i64 2147582986}
!6556 = !DILocation(line: 56, column: 1, scope: !6464)
!6557 = !{i64 2147583153, i64 2147583196, i64 2147583236}
!6558 = !DILocation(line: 57, column: 1, scope: !6464)
!6559 = !{i64 2147583400, i64 2147583443, i64 2147583483}
!6560 = !DILocation(line: 58, column: 1, scope: !6464)
!6561 = !{i64 2147583635, i64 2147583678, i64 2147583718}
!6562 = !DILocation(line: 59, column: 1, scope: !6464)
!6563 = !{i64 2147583870, i64 2147583913, i64 2147583953}
!6564 = !DILocation(line: 60, column: 1, scope: !6464)
!6565 = !{i64 2147584105, i64 2147584148, i64 2147584188}
!6566 = !DILocation(line: 61, column: 1, scope: !6464)
!6567 = !{i64 2147584340, i64 2147584383, i64 2147584423}
!6568 = !DILocation(line: 62, column: 1, scope: !6464)
!6569 = !{i64 2147584584, i64 2147584627, i64 2147584667}
!6570 = !DILocation(line: 63, column: 1, scope: !6464)
!6571 = !{i64 2147584822, i64 2147584865, i64 2147584905}
!6572 = !DILocation(line: 64, column: 1, scope: !6464)
!6573 = !{i64 2147585063, i64 2147585106, i64 2147585146}
!6574 = !DILocation(line: 65, column: 1, scope: !6464)
!6575 = !{i64 2147585343, i64 2147585386, i64 2147585426}
!6576 = !DILocation(line: 66, column: 1, scope: !6464)
!6577 = !{i64 2147585602, i64 2147585645, i64 2147585685}
!6578 = !DILocation(line: 67, column: 1, scope: !6464)
!6579 = !{i64 2147585840, i64 2147585883, i64 2147585923}
!6580 = !DILocation(line: 68, column: 1, scope: !6464)
!6581 = !{i64 2147586069, i64 2147586112, i64 2147586152}
!6582 = !DILocation(line: 69, column: 1, scope: !6464)
!6583 = !{i64 2147586277, i64 2147586320, i64 2147586360}
!6584 = !DILocation(line: 70, column: 1, scope: !6464)
!6585 = !{i64 2147586488, i64 2147586531, i64 2147586571}
!6586 = !DILocation(line: 71, column: 1, scope: !6464)
!6587 = !{i64 2147586723, i64 2147586766, i64 2147586806}
!6588 = !DILocation(line: 72, column: 1, scope: !6464)
!6589 = !{i64 2147586952, i64 2147586995, i64 2147587035}
!6590 = !DILocation(line: 73, column: 1, scope: !6464)
!6591 = !{i64 2147587169, i64 2147587212, i64 2147587252}
!6592 = !DILocation(line: 74, column: 1, scope: !6464)
!6593 = !{i64 2147587398, i64 2147587441, i64 2147587481}
!6594 = !DILocation(line: 75, column: 1, scope: !6464)
!6595 = !{i64 2147587636, i64 2147587679, i64 2147587719}
!6596 = !DILocation(line: 76, column: 1, scope: !6464)
!6597 = !{i64 2147587868, i64 2147587911, i64 2147587951}
!6598 = !DILocation(line: 77, column: 1, scope: !6464)
!6599 = !{i64 2147588094, i64 2147588137, i64 2147588177}
!6600 = !DILocation(line: 78, column: 1, scope: !6464)
!6601 = !{i64 2147588311, i64 2147588354, i64 2147588394}
!6602 = !DILocation(line: 79, column: 1, scope: !6464)
!6603 = !{i64 2147588543, i64 2147588586, i64 2147588626}
!6604 = !DILocation(line: 80, column: 1, scope: !6464)
!6605 = !{i64 2147588769, i64 2147588812, i64 2147588852}
!6606 = !DILocation(line: 81, column: 1, scope: !6464)
!6607 = !{i64 2147588983, i64 2147589026, i64 2147589066}
!6608 = !DILocation(line: 82, column: 1, scope: !6464)
!6609 = !{i64 2147589203, i64 2147589246, i64 2147589286}
!6610 = !DILocation(line: 83, column: 1, scope: !6464)
!6611 = !{i64 2147589435, i64 2147589478, i64 2147589518}
!6612 = !DILocation(line: 84, column: 1, scope: !6464)
!6613 = !{i64 2147589643, i64 2147589686, i64 2147589726}
!6614 = !DILocation(line: 85, column: 1, scope: !6464)
!6615 = !{i64 2147589848, i64 2147589891, i64 2147589931}
!6616 = !DILocation(line: 86, column: 1, scope: !6464)
!6617 = !{i64 2147590065, i64 2147590108, i64 2147590148}
!6618 = !DILocation(line: 87, column: 1, scope: !6464)
!6619 = !{i64 2147590279, i64 2147590322, i64 2147590362}
!6620 = !DILocation(line: 88, column: 1, scope: !6464)
!6621 = !{i64 2147594566, i64 2147594609, i64 2147594649}
!6622 = !DILocation(line: 89, column: 1, scope: !6464)
!6623 = !{i64 2147594786, i64 2147594829, i64 2147594869}
!6624 = !DILocation(line: 90, column: 1, scope: !6464)
!6625 = !{i64 2147594991, i64 2147595034, i64 2147595074}
!6626 = !DILocation(line: 91, column: 1, scope: !6464)
!6627 = !{i64 2147595223, i64 2147595266, i64 2147595306}
!6628 = !DILocation(line: 92, column: 1, scope: !6464)
!6629 = !{i64 2147595458, i64 2147595501, i64 2147595541}
!6630 = !DILocation(line: 93, column: 1, scope: !6464)
!6631 = !{i64 2147595708, i64 2147595751, i64 2147595791}
!6632 = !DILocation(line: 94, column: 1, scope: !6464)
!6633 = !{i64 2147595958, i64 2147596001, i64 2147596041}
!6634 = !DILocation(line: 95, column: 1, scope: !6464)
!6635 = !{i64 2147596196, i64 2147596239, i64 2147596279}
!6636 = !DILocation(line: 96, column: 1, scope: !6464)
!6637 = !{i64 2147596407, i64 2147596450, i64 2147596490}
!6638 = !DILocation(line: 97, column: 1, scope: !6464)
!6639 = !{i64 2147596624, i64 2147596667, i64 2147596707}
!6640 = !DILocation(line: 98, column: 1, scope: !6464)
!6641 = !{i64 2147596820, i64 2147596863, i64 2147596903}
!6642 = !DILocation(line: 99, column: 1, scope: !6464)
!6643 = !{i64 2147597022, i64 2147597065, i64 2147597105}
!6644 = !DILocation(line: 100, column: 1, scope: !6464)
!6645 = !{i64 2147597215, i64 2147597258, i64 2147597298}
!6646 = !DILocation(line: 101, column: 1, scope: !6464)
!6647 = !{i64 2147597423, i64 2147597466, i64 2147597506}
!6648 = !DILocation(line: 102, column: 1, scope: !6464)
!6649 = !{i64 2147597619, i64 2147597662, i64 2147597702}
!6650 = !DILocation(line: 103, column: 1, scope: !6464)
!6651 = !{i64 2147597851, i64 2147597894, i64 2147597934}
!6652 = !DILocation(line: 104, column: 1, scope: !6464)
!6653 = !{i64 2147598062, i64 2147598105, i64 2147598145}
!6654 = !DILocation(line: 105, column: 1, scope: !6464)
!6655 = !{i64 2147598261, i64 2147598304, i64 2147598344}
!6656 = !DILocation(line: 106, column: 1, scope: !6464)
!6657 = !{i64 2147598436, i64 2147598479, i64 2147598519}
!6658 = !DILocation(line: 107, column: 1, scope: !6464)
!6659 = !{i64 2147598620, i64 2147598663, i64 2147598703}
!6660 = !DILocation(line: 108, column: 1, scope: !6464)
!6661 = !{i64 2147598822, i64 2147598865, i64 2147598905}
!6662 = !DILocation(line: 109, column: 1, scope: !6464)
!6663 = !{i64 2147599021, i64 2147599064, i64 2147599104}
!6664 = !DILocation(line: 110, column: 1, scope: !6464)
!6665 = !{i64 2147599226, i64 2147599269, i64 2147599309}
!6666 = !DILocation(line: 111, column: 1, scope: !6464)
!6667 = !{i64 2147599419, i64 2147599462, i64 2147599502}
!6668 = !DILocation(line: 112, column: 1, scope: !6464)
!6669 = !{i64 2147599585, i64 2147599628, i64 2147599668}
!6670 = !DILocation(line: 113, column: 1, scope: !6464)
!6671 = !{i64 2147599769, i64 2147599812, i64 2147599852}
!6672 = !DILocation(line: 114, column: 1, scope: !6464)
!6673 = !{i64 2147599959, i64 2147600002, i64 2147600042}
!6674 = !DILocation(line: 115, column: 1, scope: !6464)
!6675 = !{i64 2147600143, i64 2147600186, i64 2147600226}
!6676 = !DILocation(line: 116, column: 1, scope: !6464)
!6677 = !{i64 2147600357, i64 2147600400, i64 2147600440}
!6678 = !DILocation(line: 117, column: 1, scope: !6464)
!6679 = !{i64 2147600568, i64 2147600611, i64 2147600651}
!6680 = !DILocation(line: 118, column: 1, scope: !6464)
!6681 = !{i64 2147600791, i64 2147600834, i64 2147600874}
!6682 = !DILocation(line: 119, column: 1, scope: !6464)
!6683 = !{i64 2147600975, i64 2147601018, i64 2147601058}
!6684 = !DILocation(line: 120, column: 1, scope: !6464)
!6685 = !{i64 2147601189, i64 2147601232, i64 2147601272}
!6686 = !DILocation(line: 121, column: 1, scope: !6464)
!6687 = !{i64 2147601355, i64 2147601398, i64 2147601438}
!6688 = !DILocation(line: 122, column: 1, scope: !6464)
!6689 = !{i64 2147601536, i64 2147601579, i64 2147601619}
!6690 = !DILocation(line: 123, column: 1, scope: !6464)
!6691 = !{i64 2147601729, i64 2147601772, i64 2147601812}
!6692 = !DILocation(line: 124, column: 1, scope: !6464)
!6693 = !{i64 2147601955, i64 2147601998, i64 2147602038}
!6694 = !DILocation(line: 125, column: 1, scope: !6464)
!6695 = !{i64 2147602169, i64 2147602212, i64 2147602252}
!6696 = !DILocation(line: 126, column: 1, scope: !6464)
!6697 = !{i64 2147602395, i64 2147602438, i64 2147602478}
!6698 = !DILocation(line: 127, column: 1, scope: !6464)
!6699 = !{i64 2147602612, i64 2147602655, i64 2147602695}
!6700 = !DILocation(line: 128, column: 1, scope: !6464)
!6701 = !{i64 2147602889, i64 2147602932, i64 2147602972}
!6702 = !DILocation(line: 129, column: 1, scope: !6464)
!6703 = !{i64 2147603115, i64 2147603158, i64 2147603198}
!6704 = !DILocation(line: 130, column: 1, scope: !6464)
!6705 = !{i64 2147603323, i64 2147603366, i64 2147603406}
!6706 = !DILocation(line: 131, column: 1, scope: !6464)
!6707 = !{i64 2147603519, i64 2147603562, i64 2147603602}
!6708 = !DILocation(line: 132, column: 1, scope: !6464)
!6709 = !{i64 2147607845, i64 2147607888, i64 2147607928}
!6710 = !DILocation(line: 133, column: 1, scope: !6464)
!6711 = !{i64 2147608059, i64 2147608102, i64 2147608142}
!6712 = !DILocation(line: 134, column: 1, scope: !6464)
!6713 = !{i64 2147608234, i64 2147608277, i64 2147608317}
!6714 = !DILocation(line: 135, column: 1, scope: !6464)
!6715 = !{i64 2147608488, i64 2147608531, i64 2147608571}
!6716 = !DILocation(line: 136, column: 1, scope: !6464)
!6717 = !{i64 2147608687, i64 2147608730, i64 2147608770}
!6718 = !DILocation(line: 137, column: 1, scope: !6464)
!6719 = !{i64 2147608929, i64 2147608972, i64 2147609012}
!6720 = !DILocation(line: 138, column: 1, scope: !6464)
!6721 = !{i64 2147609092, i64 2147609135, i64 2147609175}
!6722 = !DILocation(line: 139, column: 1, scope: !6464)
!6723 = !{i64 2147609279, i64 2147609322, i64 2147609362}
!6724 = !DILocation(line: 140, column: 1, scope: !6464)
!6725 = !{i64 2147609487, i64 2147609530, i64 2147609570}
!6726 = !DILocation(line: 141, column: 1, scope: !6464)
!6727 = !{i64 2147609683, i64 2147609726, i64 2147609766}
!6728 = !DILocation(line: 142, column: 1, scope: !6464)
!6729 = !{i64 2147609876, i64 2147609919, i64 2147609959}
!6730 = !DILocation(line: 143, column: 1, scope: !6464)
!6731 = !{i64 2147610059, i64 2147610102, i64 2147610142}
!6732 = !DILocation(line: 144, column: 1, scope: !6464)
!6733 = !{i64 2147610273, i64 2147610316, i64 2147610356}
!6734 = !DILocation(line: 145, column: 1, scope: !6464)
!6735 = !{i64 2147610484, i64 2147610527, i64 2147610567}
!6736 = !DILocation(line: 146, column: 1, scope: !6464)
!6737 = !{i64 2147610704, i64 2147610747, i64 2147610787}
!6738 = !DILocation(line: 147, column: 1, scope: !6464)
!6739 = !{i64 2147610911, i64 2147610954, i64 2147610994}
!6740 = !DILocation(line: 148, column: 1, scope: !6464)
!6741 = !{i64 2147611184, i64 2147611227, i64 2147611267}
!6742 = !DILocation(line: 149, column: 1, scope: !6464)
!6743 = !{i64 2147611432, i64 2147611475, i64 2147611515}
!6744 = !DILocation(line: 150, column: 1, scope: !6464)
!6745 = !{i64 2147611631, i64 2147611674, i64 2147611714}
!6746 = !DILocation(line: 151, column: 1, scope: !6464)
!6747 = !{i64 2147611866, i64 2147611909, i64 2147611949}
!6748 = !DILocation(line: 152, column: 1, scope: !6464)
!6749 = !{i64 2147612116, i64 2147612159, i64 2147612199}
!6750 = !DILocation(line: 153, column: 1, scope: !6464)
!6751 = !{i64 2147612318, i64 2147612361, i64 2147612401}
!6752 = !DILocation(line: 154, column: 1, scope: !6464)
!6753 = !{i64 2147612541, i64 2147612584, i64 2147612624}
!6754 = !DILocation(line: 155, column: 1, scope: !6464)
!6755 = !{i64 2147612755, i64 2147612798, i64 2147612838}
!6756 = !DILocation(line: 156, column: 1, scope: !6464)
!6757 = !{i64 2147612999, i64 2147613042, i64 2147613082}
!6758 = !DILocation(line: 157, column: 1, scope: !6464)
!6759 = !{i64 2147613228, i64 2147613271, i64 2147613311}
!6760 = !DILocation(line: 158, column: 1, scope: !6464)
!6761 = !{i64 2147613457, i64 2147613500, i64 2147613540}
!6762 = !DILocation(line: 159, column: 1, scope: !6464)
!6763 = !{i64 2147613665, i64 2147613708, i64 2147613748}
!6764 = !DILocation(line: 160, column: 1, scope: !6464)
!6765 = !{i64 2147613903, i64 2147613946, i64 2147613986}
!6766 = !DILocation(line: 161, column: 1, scope: !6464)
!6767 = !{i64 2147614129, i64 2147614172, i64 2147614212}
!6768 = !DILocation(line: 162, column: 1, scope: !6464)
!6769 = !{i64 2147614388, i64 2147614431, i64 2147614471}
!6770 = !DILocation(line: 163, column: 1, scope: !6464)
!6771 = !{i64 2147614608, i64 2147614651, i64 2147614691}
!6772 = !DILocation(line: 164, column: 1, scope: !6464)
!6773 = !{i64 2147614840, i64 2147614883, i64 2147614923}
!6774 = !DILocation(line: 165, column: 1, scope: !6464)
!6775 = !{i64 2147615081, i64 2147615124, i64 2147615164}
!6776 = !DILocation(line: 166, column: 1, scope: !6464)
!6777 = !{i64 2147615322, i64 2147615365, i64 2147615405}
!6778 = !DILocation(line: 167, column: 1, scope: !6464)
!6779 = !{i64 2147615545, i64 2147615588, i64 2147615628}
!6780 = !DILocation(line: 168, column: 1, scope: !6464)
!6781 = !{i64 2147615762, i64 2147615805, i64 2147615845}
!6782 = !DILocation(line: 169, column: 1, scope: !6464)
!6783 = !{i64 2147616003, i64 2147616046, i64 2147616086}
!6784 = !DILocation(line: 170, column: 1, scope: !6464)
!6785 = !{i64 2147620251, i64 2147620294, i64 2147620334}
!6786 = !DILocation(line: 171, column: 1, scope: !6464)
!6787 = !{i64 2147620438, i64 2147620481, i64 2147620521}
!6788 = !DILocation(line: 172, column: 1, scope: !6464)
!6789 = !{i64 2147620601, i64 2147620644, i64 2147620684}
!6790 = !DILocation(line: 173, column: 1, scope: !6464)
!6791 = !{i64 2147620806, i64 2147620849, i64 2147620889}
!6792 = !DILocation(line: 174, column: 1, scope: !6464)
!6793 = !{i64 2147620999, i64 2147621042, i64 2147621082}
!6794 = !DILocation(line: 175, column: 1, scope: !6464)
!6795 = !{i64 2147621258, i64 2147621301, i64 2147621341}
!6796 = !DILocation(line: 176, column: 1, scope: !6464)
!6797 = !{i64 2147621481, i64 2147621524, i64 2147621564}
!6798 = !DILocation(line: 177, column: 1, scope: !6464)
!6799 = !{i64 2147621710, i64 2147621753, i64 2147621793}
!6800 = !DILocation(line: 178, column: 1, scope: !6464)
!6801 = !{i64 2147621924, i64 2147621967, i64 2147622007}
!6802 = !DILocation(line: 179, column: 1, scope: !6464)
!6803 = !{i64 2147622126, i64 2147622169, i64 2147622209}
!6804 = !DILocation(line: 180, column: 1, scope: !6464)
!6805 = !{i64 2147622322, i64 2147622365, i64 2147622405}
!6806 = !DILocation(line: 181, column: 1, scope: !6464)
!6807 = !{i64 2147622534, i64 2147622577, i64 2147622617}
!6808 = !DILocation(line: 182, column: 1, scope: !6464)
!6809 = !{i64 2147622755, i64 2147622798, i64 2147622838}
!6810 = !DILocation(line: 183, column: 1, scope: !6464)
!6811 = !{i64 2147622969, i64 2147623012, i64 2147623052}
!6812 = !DILocation(line: 184, column: 1, scope: !6464)
!6813 = !{i64 2147623159, i64 2147623202, i64 2147623242}
!6814 = !DILocation(line: 185, column: 1, scope: !6464)
!6815 = !{i64 2147623358, i64 2147623401, i64 2147623441}
!6816 = !DILocation(line: 186, column: 1, scope: !6464)
!6817 = !{i64 2147623563, i64 2147623606, i64 2147623646}
!6818 = !DILocation(line: 187, column: 1, scope: !6464)
!6819 = !{i64 2147623783, i64 2147623826, i64 2147623866}
!6820 = !DILocation(line: 188, column: 1, scope: !6464)
!6821 = !{i64 2147623984, i64 2147624027, i64 2147624067}
!6822 = !DILocation(line: 189, column: 1, scope: !6464)
!6823 = !{i64 2147624183, i64 2147624226, i64 2147624266}
!6824 = !DILocation(line: 190, column: 1, scope: !6464)
!6825 = !{i64 2147624388, i64 2147624431, i64 2147624471}
!6826 = !DILocation(line: 191, column: 1, scope: !6464)
!6827 = !{i64 2147624557, i64 2147624600, i64 2147624640}
!6828 = !DILocation(line: 192, column: 1, scope: !6464)
!6829 = !{i64 2147624741, i64 2147624784, i64 2147624824}
!6830 = !DILocation(line: 193, column: 1, scope: !6464)
!6831 = !{i64 2147624925, i64 2147624968, i64 2147625008}
!6832 = !DILocation(line: 194, column: 1, scope: !6464)
!6833 = !{i64 2147625109, i64 2147625152, i64 2147625192}
!6834 = !DILocation(line: 195, column: 1, scope: !6464)
!6835 = !{i64 2147625347, i64 2147625390, i64 2147625430}
!6836 = !DILocation(line: 196, column: 1, scope: !6464)
!6837 = !{i64 2147625577, i64 2147625620, i64 2147625660}
!6838 = !DILocation(line: 197, column: 1, scope: !6464)
!6839 = !{i64 2147625806, i64 2147625849, i64 2147625889}
!6840 = !DILocation(line: 198, column: 1, scope: !6464)
!6841 = !{i64 2147625993, i64 2147626036, i64 2147626076}
!6842 = !DILocation(line: 199, column: 1, scope: !6464)
!6843 = !{i64 2147626189, i64 2147626232, i64 2147626272}
!6844 = !DILocation(line: 200, column: 1, scope: !6464)
!6845 = !{i64 2147626397, i64 2147626440, i64 2147626480}
!6846 = !DILocation(line: 201, column: 1, scope: !6464)
!6847 = !{i64 2147626609, i64 2147626652, i64 2147626692}
!6848 = !DILocation(line: 202, column: 1, scope: !6464)
!6849 = !{i64 2147626808, i64 2147626851, i64 2147626891}
!6850 = !DILocation(line: 203, column: 1, scope: !6464)
!6851 = !{i64 2147627046, i64 2147627089, i64 2147627129}
!6852 = !DILocation(line: 204, column: 1, scope: !6464)
!6853 = !{i64 2147627242, i64 2147627285, i64 2147627325}
!6854 = !DILocation(line: 205, column: 1, scope: !6464)
!6855 = !{i64 2147627444, i64 2147627487, i64 2147627527}
!6856 = !DILocation(line: 206, column: 1, scope: !6464)
!6857 = !{i64 2147627637, i64 2147627680, i64 2147627720}
!6858 = !DILocation(line: 207, column: 1, scope: !6464)
!6859 = !{i64 2147627871, i64 2147627914, i64 2147627954}
!6860 = !DILocation(line: 208, column: 1, scope: !6464)
!6861 = !{i64 2147628034, i64 2147628077, i64 2147628117}
!6862 = !DILocation(line: 209, column: 1, scope: !6464)
!6863 = !{i64 2147628273, i64 2147628316, i64 2147628356}
!6864 = !DILocation(line: 210, column: 1, scope: !6464)
!6865 = !{i64 2147628512, i64 2147628555, i64 2147628595}
!6866 = !DILocation(line: 211, column: 1, scope: !6464)
!6867 = !{i64 2147628748, i64 2147628791, i64 2147628831}
!6868 = !DILocation(line: 212, column: 1, scope: !6464)
!6869 = !{i64 2147628978, i64 2147629021, i64 2147629061}
!6870 = !DILocation(line: 213, column: 1, scope: !6464)
!6871 = !{i64 2147629165, i64 2147629208, i64 2147629248}
!6872 = !DILocation(line: 214, column: 1, scope: !6464)
!6873 = !{i64 2147629364, i64 2147629407, i64 2147629447}
!6874 = !DILocation(line: 215, column: 1, scope: !6464)
!6875 = !{i64 2147633696, i64 2147633739, i64 2147633779}
!6876 = !DILocation(line: 216, column: 1, scope: !6464)
!6877 = !{i64 2147633871, i64 2147633914, i64 2147633954}
!6878 = !DILocation(line: 217, column: 1, scope: !6464)
!6879 = !{i64 2147634105, i64 2147634148, i64 2147634188}
!6880 = !DILocation(line: 218, column: 1, scope: !6464)
!6881 = !{i64 2147634313, i64 2147634356, i64 2147634396}
!6882 = !DILocation(line: 219, column: 1, scope: !6464)
!6883 = !{i64 2147634531, i64 2147634574, i64 2147634614}
!6884 = !DILocation(line: 220, column: 1, scope: !6464)
!6885 = !{i64 2147634721, i64 2147634764, i64 2147634804}
!6886 = !DILocation(line: 221, column: 1, scope: !6464)
!6887 = !{i64 2147634953, i64 2147634996, i64 2147635036}
!6888 = !DILocation(line: 222, column: 1, scope: !6464)
!6889 = !{i64 2147635173, i64 2147635216, i64 2147635256}
!6890 = !DILocation(line: 223, column: 1, scope: !6464)
!6891 = !{i64 2147635369, i64 2147635412, i64 2147635452}
!6892 = !DILocation(line: 224, column: 1, scope: !6464)
!6893 = !{i64 2147635575, i64 2147635618, i64 2147635658}
!6894 = !DILocation(line: 225, column: 1, scope: !6464)
!6895 = !{i64 2147635780, i64 2147635823, i64 2147635863}
!6896 = !DILocation(line: 226, column: 1, scope: !6464)
!6897 = !{i64 2147635994, i64 2147636037, i64 2147636077}
!6898 = !DILocation(line: 227, column: 1, scope: !6464)
!6899 = !{i64 2147636220, i64 2147636263, i64 2147636303}
!6900 = !DILocation(line: 228, column: 1, scope: !6464)
!6901 = !{i64 2147636428, i64 2147636471, i64 2147636511}
!6902 = !DILocation(line: 229, column: 1, scope: !6464)
!6903 = !{i64 2147636624, i64 2147636667, i64 2147636707}
!6904 = !DILocation(line: 230, column: 1, scope: !6464)
!6905 = !{i64 2147636856, i64 2147636899, i64 2147636939}
!6906 = !DILocation(line: 231, column: 1, scope: !6464)
!6907 = !{i64 2147637040, i64 2147637083, i64 2147637123}
!6908 = !DILocation(line: 232, column: 1, scope: !6464)
!6909 = !{i64 2147637249, i64 2147637292, i64 2147637332}
!6910 = !DILocation(line: 233, column: 1, scope: !6464)
!6911 = !{i64 2147637457, i64 2147637500, i64 2147637540}
!6912 = !DILocation(line: 234, column: 1, scope: !6464)
!6913 = !{i64 2147637653, i64 2147637696, i64 2147637736}
!6914 = !DILocation(line: 235, column: 1, scope: !6464)
!6915 = !{i64 2147637837, i64 2147637880, i64 2147637920}
!6916 = !DILocation(line: 236, column: 1, scope: !6464)
!6917 = !{i64 2147638063, i64 2147638106, i64 2147638146}
!6918 = !DILocation(line: 237, column: 1, scope: !6464)
!6919 = !{i64 2147638289, i64 2147638332, i64 2147638372}
!6920 = !DILocation(line: 238, column: 1, scope: !6464)
!6921 = !{i64 2147638515, i64 2147638558, i64 2147638598}
!6922 = !DILocation(line: 239, column: 1, scope: !6464)
!6923 = !{i64 2147638741, i64 2147638784, i64 2147638824}
!6924 = !DILocation(line: 240, column: 1, scope: !6464)
!6925 = !{i64 2147638967, i64 2147639010, i64 2147639050}
!6926 = !DILocation(line: 241, column: 1, scope: !6464)
!6927 = !{i64 2147639199, i64 2147639242, i64 2147639282}
!6928 = !DILocation(line: 242, column: 1, scope: !6464)
!6929 = !{i64 2147639437, i64 2147639480, i64 2147639520}
!6930 = !DILocation(line: 243, column: 1, scope: !6464)
!6931 = !{i64 2147639657, i64 2147639700, i64 2147639740}
!6932 = !DILocation(line: 244, column: 1, scope: !6464)
!6933 = !{i64 2147639901, i64 2147639944, i64 2147639984}
!6934 = !DILocation(line: 245, column: 1, scope: !6464)
!6935 = !{i64 2147640142, i64 2147640185, i64 2147640225}
!6936 = !DILocation(line: 246, column: 1, scope: !6464)
!6937 = !{i64 2147640377, i64 2147640420, i64 2147640460}
!6938 = !DILocation(line: 247, column: 1, scope: !6464)
!6939 = !{i64 2147640609, i64 2147640652, i64 2147640692}
!6940 = !DILocation(line: 248, column: 1, scope: !6464)
!6941 = !{i64 2147640811, i64 2147640854, i64 2147640894}
!6942 = !DILocation(line: 249, column: 1, scope: !6464)
!6943 = !{i64 2147641061, i64 2147641104, i64 2147641144}
!6944 = !DILocation(line: 250, column: 1, scope: !6464)
!6945 = !{i64 2147641299, i64 2147641342, i64 2147641382}
!6946 = !DILocation(line: 251, column: 1, scope: !6464)
!6947 = !{i64 2147641507, i64 2147641550, i64 2147641590}
!6948 = !DILocation(line: 252, column: 1, scope: !6464)
!6949 = !{i64 2147641703, i64 2147641746, i64 2147641786}
!6950 = !DILocation(line: 253, column: 1, scope: !6464)
!6951 = !{i64 2147641887, i64 2147641930, i64 2147641970}
!6952 = !DILocation(line: 254, column: 1, scope: !6464)
!6953 = !{i64 2147642104, i64 2147642147, i64 2147642187}
!6954 = !DILocation(line: 255, column: 1, scope: !6464)
!6955 = !{i64 2147646370, i64 2147646413, i64 2147646453}
!6956 = !DILocation(line: 256, column: 1, scope: !6464)
!6957 = !{i64 2147646605, i64 2147646648, i64 2147646688}
!6958 = !DILocation(line: 257, column: 1, scope: !6464)
!6959 = !{i64 2147646828, i64 2147646871, i64 2147646911}
!6960 = !DILocation(line: 258, column: 1, scope: !6464)
!6961 = !{i64 2147647052, i64 2147647095, i64 2147647135}
!6962 = !DILocation(line: 259, column: 1, scope: !6464)
!6963 = !{i64 2147647290, i64 2147647333, i64 2147647373}
!6964 = !DILocation(line: 260, column: 1, scope: !6464)
!6965 = !{i64 2147647528, i64 2147647571, i64 2147647611}
!6966 = !DILocation(line: 261, column: 1, scope: !6464)
!6967 = !{i64 2147647745, i64 2147647788, i64 2147647828}
!6968 = !DILocation(line: 262, column: 1, scope: !6464)
!6969 = !{i64 2147647950, i64 2147647993, i64 2147648033}
!6970 = !DILocation(line: 263, column: 1, scope: !6464)
!6971 = !{i64 2147648143, i64 2147648186, i64 2147648226}
!6972 = !DILocation(line: 264, column: 1, scope: !6464)
!6973 = !{i64 2147648396, i64 2147648439, i64 2147648479}
!6974 = !DILocation(line: 265, column: 1, scope: !6464)
!6975 = !{i64 2147648604, i64 2147648647, i64 2147648687}
!6976 = !DILocation(line: 266, column: 1, scope: !6464)
!6977 = !{i64 2147648800, i64 2147648843, i64 2147648883}
!6978 = !DILocation(line: 267, column: 1, scope: !6464)
!6979 = !{i64 2147649014, i64 2147649057, i64 2147649097}
!6980 = !DILocation(line: 268, column: 1, scope: !6464)
!6981 = !{i64 2147649222, i64 2147649265, i64 2147649305}
!6982 = !DILocation(line: 269, column: 1, scope: !6464)
!6983 = !{i64 2147649412, i64 2147649455, i64 2147649495}
!6984 = !DILocation(line: 270, column: 1, scope: !6464)
!6985 = !{i64 2147649626, i64 2147649669, i64 2147649709}
!6986 = !DILocation(line: 271, column: 1, scope: !6464)
!6987 = !{i64 2147649888, i64 2147649931, i64 2147649971}
!6988 = !DILocation(line: 272, column: 1, scope: !6464)
!6989 = !{i64 2147650099, i64 2147650142, i64 2147650182}
!6990 = !DILocation(line: 273, column: 1, scope: !6464)
!6991 = !{i64 2147650343, i64 2147650386, i64 2147650426}
!6992 = !DILocation(line: 274, column: 1, scope: !6464)
!6993 = !{i64 2147650554, i64 2147650597, i64 2147650637}
!6994 = !DILocation(line: 275, column: 1, scope: !6464)
!6995 = !{i64 2147650783, i64 2147650826, i64 2147650866}
!6996 = !DILocation(line: 276, column: 1, scope: !6464)
!6997 = !{i64 2147651048, i64 2147651091, i64 2147651131}
!6998 = !DILocation(line: 277, column: 1, scope: !6464)
!6999 = !{i64 2147651253, i64 2147651296, i64 2147651336}
!7000 = !DILocation(line: 278, column: 1, scope: !6464)
!7001 = !{i64 2147651449, i64 2147651492, i64 2147651532}
!7002 = !DILocation(line: 279, column: 1, scope: !6464)
!7003 = !{i64 2147651672, i64 2147651715, i64 2147651755}
!7004 = !DILocation(line: 280, column: 1, scope: !6464)
!7005 = !{i64 2147651835, i64 2147651878, i64 2147651918}
!7006 = !DILocation(line: 281, column: 1, scope: !6464)
!7007 = !{i64 2147652040, i64 2147652083, i64 2147652123}
!7008 = !DILocation(line: 282, column: 1, scope: !6464)
!7009 = !{i64 2147652260, i64 2147652303, i64 2147652343}
!7010 = !DILocation(line: 283, column: 1, scope: !6464)
!7011 = !{i64 2147652474, i64 2147652517, i64 2147652557}
!7012 = !DILocation(line: 284, column: 1, scope: !6464)
!7013 = !{i64 2147652718, i64 2147652761, i64 2147652801}
!7014 = !DILocation(line: 285, column: 1, scope: !6464)
!7015 = !{i64 2147652950, i64 2147652993, i64 2147653033}
!7016 = !DILocation(line: 286, column: 1, scope: !6464)
!7017 = !{i64 2147653164, i64 2147653207, i64 2147653247}
!7018 = !DILocation(line: 287, column: 1, scope: !6464)
!7019 = !{i64 2147653375, i64 2147653418, i64 2147653458}
!7020 = !DILocation(line: 288, column: 1, scope: !6464)
!7021 = !{i64 2147653568, i64 2147653611, i64 2147653651}
!7022 = !DILocation(line: 289, column: 1, scope: !6464)
!7023 = !{i64 2147653767, i64 2147653810, i64 2147653850}
!7024 = !DILocation(line: 290, column: 1, scope: !6464)
!7025 = !{i64 2147653939, i64 2147653982, i64 2147654022}
!7026 = !DILocation(line: 291, column: 1, scope: !6464)
!7027 = !{i64 2147654135, i64 2147654178, i64 2147654218}
!7028 = !DILocation(line: 292, column: 1, scope: !6464)
!7029 = !{i64 2147654298, i64 2147654341, i64 2147654381}
!7030 = !DILocation(line: 293, column: 1, scope: !6464)
!7031 = !{i64 2147654500, i64 2147654543, i64 2147654583}
!7032 = !DILocation(line: 294, column: 1, scope: !6464)
!7033 = !{i64 2147654705, i64 2147654748, i64 2147654788}
!7034 = !DILocation(line: 295, column: 1, scope: !6464)
!7035 = !{i64 2147654913, i64 2147654956, i64 2147654996}
!7036 = !DILocation(line: 296, column: 1, scope: !6464)
!7037 = !{i64 2147659167, i64 2147659210, i64 2147659250}
!7038 = !DILocation(line: 297, column: 1, scope: !6464)
!7039 = !{i64 2147659354, i64 2147659397, i64 2147659437}
!7040 = !DILocation(line: 298, column: 1, scope: !6464)
!7041 = !{i64 2147659581, i64 2147659624, i64 2147659664}
!7042 = !DILocation(line: 299, column: 1, scope: !6464)
!7043 = !{i64 2147659747, i64 2147659790, i64 2147659830}
!7044 = !DILocation(line: 300, column: 1, scope: !6464)
!7045 = !{i64 2147659985, i64 2147660028, i64 2147660068}
!7046 = !DILocation(line: 301, column: 1, scope: !6464)
!7047 = !{i64 2147660190, i64 2147660233, i64 2147660273}
!7048 = !DILocation(line: 302, column: 1, scope: !6464)
!7049 = !{i64 2147660398, i64 2147660441, i64 2147660481}
!7050 = !DILocation(line: 303, column: 1, scope: !6464)
!7051 = !{i64 2147660648, i64 2147660691, i64 2147660731}
!7052 = !DILocation(line: 304, column: 1, scope: !6464)
!7053 = !{i64 2147660856, i64 2147660899, i64 2147660939}
!7054 = !DILocation(line: 305, column: 1, scope: !6464)
!7055 = !{i64 2147661052, i64 2147661095, i64 2147661135}
!7056 = !DILocation(line: 306, column: 1, scope: !6464)
!7057 = !{i64 2147661269, i64 2147661312, i64 2147661352}
!7058 = !DILocation(line: 307, column: 1, scope: !6464)
!7059 = !{i64 2147661561, i64 2147661604, i64 2147661644}
!7060 = !DILocation(line: 308, column: 1, scope: !6464)
!7061 = !{i64 2147661793, i64 2147661836, i64 2147661876}
!7062 = !DILocation(line: 309, column: 1, scope: !6464)
!7063 = !{i64 2147662010, i64 2147662053, i64 2147662093}
!7064 = !DILocation(line: 310, column: 1, scope: !6464)
!7065 = !{i64 2147662217, i64 2147662260, i64 2147662300}
!7066 = !DILocation(line: 311, column: 1, scope: !6464)
!7067 = !{i64 2147662418, i64 2147662461, i64 2147662501}
!7068 = !DILocation(line: 312, column: 1, scope: !6464)
!7069 = !{i64 2147662650, i64 2147662693, i64 2147662733}
!7070 = !DILocation(line: 313, column: 1, scope: !6464)
!7071 = !{i64 2147662858, i64 2147662901, i64 2147662941}
!7072 = !DILocation(line: 314, column: 1, scope: !6464)
!7073 = !{i64 2147663048, i64 2147663091, i64 2147663131}
!7074 = !DILocation(line: 315, column: 1, scope: !6464)
!7075 = !{i64 2147663274, i64 2147663317, i64 2147663357}
!7076 = !DILocation(line: 316, column: 1, scope: !6464)
!7077 = !{i64 2147663463, i64 2147663506, i64 2147663546}
!7078 = !DILocation(line: 317, column: 1, scope: !6464)
!7079 = !{i64 2147663734, i64 2147663777, i64 2147663817}
!7080 = !DILocation(line: 318, column: 1, scope: !6464)
!7081 = !{i64 2147663954, i64 2147663997, i64 2147664037}
!7082 = !DILocation(line: 319, column: 1, scope: !6464)
!7083 = !{i64 2147664207, i64 2147664250, i64 2147664290}
!7084 = !DILocation(line: 320, column: 1, scope: !6464)
!7085 = !{i64 2147664415, i64 2147664458, i64 2147664498}
!7086 = !DILocation(line: 321, column: 1, scope: !6464)
!7087 = !{i64 2147664647, i64 2147664690, i64 2147664730}
!7088 = !DILocation(line: 322, column: 1, scope: !6464)
!7089 = !{i64 2147664858, i64 2147664901, i64 2147664941}
!7090 = !DILocation(line: 323, column: 1, scope: !6464)
!7091 = !{i64 2147665048, i64 2147665091, i64 2147665131}
!7092 = !DILocation(line: 324, column: 1, scope: !6464)
!7093 = !{i64 2147665262, i64 2147665305, i64 2147665345}
!7094 = !DILocation(line: 325, column: 1, scope: !6464)
!7095 = !{i64 2147665461, i64 2147665504, i64 2147665544}
!7096 = !DILocation(line: 326, column: 1, scope: !6464)
!7097 = !{i64 2147665648, i64 2147665691, i64 2147665731}
!7098 = !DILocation(line: 327, column: 1, scope: !6464)
!7099 = !{i64 2147665856, i64 2147665899, i64 2147665939}
!7100 = !DILocation(line: 328, column: 1, scope: !6464)
!7101 = !{i64 2147666085, i64 2147666128, i64 2147666168}
!7102 = !DILocation(line: 329, column: 1, scope: !6464)
!7103 = !{i64 2147666287, i64 2147666330, i64 2147666370}
!7104 = !DILocation(line: 330, column: 1, scope: !6464)
!7105 = !{i64 2147666486, i64 2147666529, i64 2147666569}
!7106 = !DILocation(line: 331, column: 1, scope: !6464)
!7107 = !{i64 2147666703, i64 2147666746, i64 2147666786}
!7108 = !DILocation(line: 333, column: 1, scope: !6464)
!7109 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !439, file: !439, line: 30, type: !446, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7110)
!7110 = !{!7111, !7112}
!7111 = !DILocalVariable(name: "arg", arg: 1, scope: !7109, file: !439, line: 30, type: !448)
!7112 = !DILocalVariable(name: "key", scope: !7109, file: !439, line: 32, type: !108)
!7113 = !DILocation(line: 0, scope: !7109)
!7114 = !DILocation(line: 37, column: 2, scope: !7109)
!7115 = !DILocation(line: 38, column: 2, scope: !7109)
!7116 = !DILocation(line: 55, column: 2, scope: !7117, inlinedAt: !7124)
!7117 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7121)
!7118 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!32}
!7121 = !{!7122, !7123}
!7122 = !DILocalVariable(name: "key", scope: !7117, file: !7118, line: 44, type: !32)
!7123 = !DILocalVariable(name: "tmp", scope: !7117, file: !7118, line: 53, type: !32)
!7124 = distinct !DILocation(line: 40, column: 8, scope: !7109)
!7125 = !{i64 2186101}
!7126 = !DILocation(line: 0, scope: !7117, inlinedAt: !7124)
!7127 = !DILocalVariable(name: "key", arg: 1, scope: !7128, file: !7118, line: 84, type: !32)
!7128 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !7131)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{null, !32}
!7131 = !{!7127}
!7132 = !DILocation(line: 0, scope: !7128, inlinedAt: !7133)
!7133 = distinct !DILocation(line: 47, column: 2, scope: !7109)
!7134 = !DILocation(line: 95, column: 2, scope: !7128, inlinedAt: !7133)
!7135 = !{i64 2186918}
!7136 = !DILocation(line: 51, column: 18, scope: !7109)
!7137 = !DILocation(line: 53, column: 2, scope: !7109)
!7138 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7139, file: !7139, line: 1609, type: !337, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !256)
!7139 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7140 = !DILocation(line: 1611, column: 3, scope: !7138)
!7141 = !DILocation(line: 1612, column: 1, scope: !7138)
!7142 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7139, file: !7139, line: 1629, type: !337, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !256)
!7143 = !DILocation(line: 1631, column: 3, scope: !7142)
!7144 = !DILocation(line: 1632, column: 1, scope: !7142)
!7145 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !475, file: !475, line: 26, type: !481, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !472, retainedNodes: !7146)
!7146 = !{!7147}
!7147 = !DILocalVariable(name: "dev", arg: 1, scope: !7145, file: !475, line: 26, type: !483)
!7148 = !DILocation(line: 0, scope: !7145)
!7149 = !DILocation(line: 68, column: 2, scope: !7145)
!7150 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7151, file: !7151, line: 14, type: !4708, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7152)
!7151 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7152 = !{!7153, !7154}
!7153 = !DILocalVariable(name: "fmt", arg: 1, scope: !7150, file: !7151, line: 14, type: !121)
!7154 = !DILocalVariable(name: "ap", scope: !7150, file: !7151, line: 16, type: !7155)
!7155 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3777, line: 99, baseType: !7156)
!7156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3777, line: 40, baseType: !7157)
!7157 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7151, baseType: !7158)
!7158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7159)
!7159 = !{!7160}
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7158, file: !7151, line: 16, baseType: !106, size: 32)
!7161 = !DILocation(line: 0, scope: !7150)
!7162 = !DILocation(line: 16, column: 2, scope: !7150)
!7163 = !DILocation(line: 16, column: 10, scope: !7150)
!7164 = !DILocation(line: 18, column: 2, scope: !7150)
!7165 = !DILocation(line: 19, column: 2, scope: !7150)
!7166 = !DILocation(line: 20, column: 2, scope: !7150)
!7167 = !DILocation(line: 21, column: 1, scope: !7150)
!7168 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7151, file: !7151, line: 23, type: !7169, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7171)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{null, !121, !7155}
!7171 = !{!7172, !7173}
!7172 = !DILocalVariable(name: "fmt", arg: 1, scope: !7168, file: !7151, line: 23, type: !121)
!7173 = !DILocalVariable(name: "ap", arg: 2, scope: !7168, file: !7151, line: 23, type: !7155)
!7174 = !DILocation(line: 0, scope: !7168)
!7175 = !DILocation(line: 25, column: 2, scope: !7168)
!7176 = !DILocation(line: 26, column: 1, scope: !7168)
!7177 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7151, file: !7151, line: 52, type: !7178, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7180)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{null, !107, !13, !137}
!7180 = !{!7181, !7182, !7183, !7184}
!7181 = !DILocalVariable(name: "level", arg: 1, scope: !7177, file: !7151, line: 52, type: !107)
!7182 = !DILocalVariable(name: "data", arg: 2, scope: !7177, file: !7151, line: 52, type: !13)
!7183 = !DILocalVariable(name: "size", arg: 3, scope: !7177, file: !7151, line: 52, type: !137)
!7184 = !DILocalVariable(name: "data_buffer", scope: !7177, file: !7151, line: 54, type: !121)
!7185 = !DILocation(line: 0, scope: !7177)
!7186 = !DILocation(line: 55, column: 14, scope: !7177)
!7187 = !DILocation(line: 55, column: 2, scope: !7177)
!7188 = !DILocation(line: 56, column: 3, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7177, file: !7151, line: 55, column: 20)
!7190 = !DILocation(line: 57, column: 3, scope: !7189)
!7191 = !DILocation(line: 59, column: 7, scope: !7189)
!7192 = distinct !{!7192, !7187, !7193}
!7193 = !DILocation(line: 65, column: 2, scope: !7177)
!7194 = !DILocation(line: 66, column: 1, scope: !7177)
!7195 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7196, file: !7196, line: 175, type: !7197, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7199)
!7196 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!123, !107}
!7199 = !{!7200}
!7200 = !DILocalVariable(name: "level", arg: 1, scope: !7195, file: !7196, line: 175, type: !107)
!7201 = !DILocation(line: 0, scope: !7195)
!7202 = !DILocation(line: 177, column: 2, scope: !7195)
!7203 = !DILocation(line: 189, column: 1, scope: !7195)
!7204 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7151, file: !7151, line: 28, type: !7205, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7207)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{null, !121, !137}
!7207 = !{!7208, !7209, !7210, !7212, !7214}
!7208 = !DILocalVariable(name: "data", arg: 1, scope: !7204, file: !7151, line: 28, type: !121)
!7209 = !DILocalVariable(name: "length", arg: 2, scope: !7204, file: !7151, line: 28, type: !137)
!7210 = !DILocalVariable(name: "i", scope: !7211, file: !7151, line: 30, type: !137)
!7211 = distinct !DILexicalBlock(scope: !7204, file: !7151, line: 30, column: 2)
!7212 = !DILocalVariable(name: "i", scope: !7213, file: !7151, line: 40, type: !137)
!7213 = distinct !DILexicalBlock(scope: !7204, file: !7151, line: 40, column: 2)
!7214 = !DILocalVariable(name: "c", scope: !7215, file: !7151, line: 42, type: !191)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !7151, line: 41, column: 19)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !7151, line: 41, column: 7)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !7151, line: 40, column: 54)
!7218 = distinct !DILexicalBlock(scope: !7213, file: !7151, line: 40, column: 2)
!7219 = !DILocation(line: 0, scope: !7204)
!7220 = !DILocation(line: 0, scope: !7211)
!7221 = !DILocation(line: 30, column: 2, scope: !7211)
!7222 = !DILocation(line: 38, column: 2, scope: !7204)
!7223 = !DILocation(line: 0, scope: !7213)
!7224 = !DILocation(line: 40, column: 2, scope: !7213)
!7225 = !DILocation(line: 31, column: 9, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !7151, line: 31, column: 7)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !7151, line: 30, column: 54)
!7228 = distinct !DILexicalBlock(scope: !7211, file: !7151, line: 30, column: 2)
!7229 = !DILocation(line: 31, column: 7, scope: !7227)
!7230 = !DILocation(line: 32, column: 35, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7226, file: !7151, line: 31, column: 19)
!7232 = !DILocation(line: 32, column: 20, scope: !7231)
!7233 = !DILocation(line: 32, column: 4, scope: !7231)
!7234 = !DILocation(line: 33, column: 3, scope: !7231)
!7235 = !DILocation(line: 34, column: 4, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7226, file: !7151, line: 33, column: 10)
!7237 = !DILocation(line: 30, column: 50, scope: !7228)
!7238 = !DILocation(line: 30, column: 24, scope: !7228)
!7239 = distinct !{!7239, !7221, !7240}
!7240 = !DILocation(line: 36, column: 2, scope: !7211)
!7241 = !DILocation(line: 49, column: 2, scope: !7204)
!7242 = !DILocation(line: 50, column: 1, scope: !7204)
!7243 = !DILocation(line: 41, column: 9, scope: !7216)
!7244 = !DILocation(line: 41, column: 7, scope: !7217)
!7245 = !DILocation(line: 42, column: 22, scope: !7215)
!7246 = !DILocation(line: 0, scope: !7215)
!7247 = !DILocation(line: 44, column: 25, scope: !7215)
!7248 = !DILocation(line: 44, column: 17, scope: !7215)
!7249 = !DILocation(line: 44, column: 33, scope: !7215)
!7250 = !DILocation(line: 44, column: 4, scope: !7215)
!7251 = !DILocation(line: 45, column: 3, scope: !7215)
!7252 = !DILocation(line: 46, column: 4, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7216, file: !7151, line: 45, column: 10)
!7254 = !DILocation(line: 40, column: 50, scope: !7218)
!7255 = !DILocation(line: 40, column: 24, scope: !7218)
!7256 = distinct !{!7256, !7224, !7257}
!7257 = !DILocation(line: 48, column: 2, scope: !7213)
!7258 = distinct !DISubprogram(name: "isprint", scope: !6237, file: !6237, line: 37, type: !418, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7259)
!7259 = !{!7260}
!7260 = !DILocalVariable(name: "c", arg: 1, scope: !7258, file: !6237, line: 37, type: !107)
!7261 = !DILocation(line: 0, scope: !7258)
!7262 = !DILocation(line: 39, column: 38, scope: !7258)
!7263 = !DILocation(line: 39, column: 2, scope: !7258)
!7264 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7265, file: !7265, line: 57, type: !7266, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !7312)
!7265 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7266 = !DISubroutineType(types: !7267)
!7267 = !{null, !32, !7268}
!7268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7269, size: 32)
!7269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7270)
!7270 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2893, line: 141, baseType: !7271)
!7271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2893, line: 97, size: 256, elements: !7272)
!7272 = !{!7273}
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7271, file: !2893, line: 107, baseType: !7274, size: 256)
!7274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2893, line: 98, size: 256, elements: !7275)
!7275 = !{!7276, !7281, !7286, !7291, !7296, !7301, !7306, !7311}
!7276 = !DIDerivedType(tag: DW_TAG_member, scope: !7274, file: !2893, line: 99, baseType: !7277, size: 32)
!7277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7274, file: !2893, line: 99, size: 32, elements: !7278)
!7278 = !{!7279, !7280}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7277, file: !2893, line: 99, baseType: !108, size: 32)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7277, file: !2893, line: 99, baseType: !108, size: 32)
!7281 = !DIDerivedType(tag: DW_TAG_member, scope: !7274, file: !2893, line: 100, baseType: !7282, size: 32, offset: 32)
!7282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7274, file: !2893, line: 100, size: 32, elements: !7283)
!7283 = !{!7284, !7285}
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7282, file: !2893, line: 100, baseType: !108, size: 32)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7282, file: !2893, line: 100, baseType: !108, size: 32)
!7286 = !DIDerivedType(tag: DW_TAG_member, scope: !7274, file: !2893, line: 101, baseType: !7287, size: 32, offset: 64)
!7287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7274, file: !2893, line: 101, size: 32, elements: !7288)
!7288 = !{!7289, !7290}
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7287, file: !2893, line: 101, baseType: !108, size: 32)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7287, file: !2893, line: 101, baseType: !108, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, scope: !7274, file: !2893, line: 102, baseType: !7292, size: 32, offset: 96)
!7292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7274, file: !2893, line: 102, size: 32, elements: !7293)
!7293 = !{!7294, !7295}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7292, file: !2893, line: 102, baseType: !108, size: 32)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7292, file: !2893, line: 102, baseType: !108, size: 32)
!7296 = !DIDerivedType(tag: DW_TAG_member, scope: !7274, file: !2893, line: 103, baseType: !7297, size: 32, offset: 128)
!7297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7274, file: !2893, line: 103, size: 32, elements: !7298)
!7298 = !{!7299, !7300}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7297, file: !2893, line: 103, baseType: !108, size: 32)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7297, file: !2893, line: 103, baseType: !108, size: 32)
!7301 = !DIDerivedType(tag: DW_TAG_member, scope: !7274, file: !2893, line: 104, baseType: !7302, size: 32, offset: 160)
!7302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7274, file: !2893, line: 104, size: 32, elements: !7303)
!7303 = !{!7304, !7305}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7302, file: !2893, line: 104, baseType: !108, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7302, file: !2893, line: 104, baseType: !108, size: 32)
!7306 = !DIDerivedType(tag: DW_TAG_member, scope: !7274, file: !2893, line: 105, baseType: !7307, size: 32, offset: 192)
!7307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7274, file: !2893, line: 105, size: 32, elements: !7308)
!7308 = !{!7309, !7310}
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7307, file: !2893, line: 105, baseType: !108, size: 32)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7307, file: !2893, line: 105, baseType: !108, size: 32)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7274, file: !2893, line: 106, baseType: !108, size: 32, offset: 224)
!7312 = !{!7313, !7314}
!7313 = !DILocalVariable(name: "reason", arg: 1, scope: !7264, file: !7265, line: 57, type: !32)
!7314 = !DILocalVariable(name: "esf", arg: 2, scope: !7264, file: !7265, line: 57, type: !7268)
!7315 = !DILocation(line: 0, scope: !7264)
!7316 = !DILocation(line: 60, column: 10, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7264, file: !7265, line: 60, column: 6)
!7318 = !DILocation(line: 60, column: 6, scope: !7264)
!7319 = !DILocation(line: 61, column: 3, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7317, file: !7265, line: 60, column: 19)
!7321 = !DILocation(line: 62, column: 2, scope: !7320)
!7322 = !DILocation(line: 63, column: 2, scope: !7264)
!7323 = !DILocation(line: 64, column: 1, scope: !7264)
!7324 = distinct !DISubprogram(name: "esf_dump", scope: !7265, file: !7265, line: 20, type: !7325, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !7327)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{null, !7268}
!7327 = !{!7328}
!7328 = !DILocalVariable(name: "esf", arg: 1, scope: !7324, file: !7265, line: 20, type: !7268)
!7329 = !DILocation(line: 0, scope: !7324)
!7330 = !DILocation(line: 22, column: 2, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !7265, line: 22, column: 2)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !7265, line: 22, column: 2)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !7265, line: 22, column: 2)
!7334 = distinct !DILexicalBlock(scope: !7324, file: !7265, line: 22, column: 2)
!7335 = !DILocation(line: 24, column: 2, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !7265, line: 24, column: 2)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !7265, line: 24, column: 2)
!7338 = distinct !DILexicalBlock(scope: !7339, file: !7265, line: 24, column: 2)
!7339 = distinct !DILexicalBlock(scope: !7324, file: !7265, line: 24, column: 2)
!7340 = !DILocation(line: 26, column: 2, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !7265, line: 26, column: 2)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !7265, line: 26, column: 2)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !7265, line: 26, column: 2)
!7344 = distinct !DILexicalBlock(scope: !7324, file: !7265, line: 26, column: 2)
!7345 = !DILocation(line: 53, column: 2, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !7265, line: 53, column: 2)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !7265, line: 53, column: 2)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !7265, line: 53, column: 2)
!7349 = distinct !DILexicalBlock(scope: !7324, file: !7265, line: 53, column: 2)
!7350 = !DILocation(line: 55, column: 1, scope: !7324)
!7351 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7265, file: !7265, line: 82, type: !7352, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !7367)
!7352 = !DISubroutineType(types: !7353)
!7353 = !{null, !7268, !7354}
!7354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7355, size: 32)
!7355 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !219, line: 37, baseType: !7356)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7357)
!7357 = !{!7358, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7356, file: !219, line: 26, baseType: !108, size: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7356, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7356, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7356, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7356, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7356, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7356, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7356, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7356, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7367 = !{!7368, !7369, !7370}
!7368 = !DILocalVariable(name: "esf", arg: 1, scope: !7351, file: !7265, line: 82, type: !7268)
!7369 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7351, file: !7265, line: 82, type: !7354)
!7370 = !DILocalVariable(name: "reason", scope: !7351, file: !7265, line: 88, type: !32)
!7371 = !DILocation(line: 0, scope: !7351)
!7372 = !DILocation(line: 88, column: 35, scope: !7351)
!7373 = !DILocation(line: 108, column: 2, scope: !7351)
!7374 = !DILocation(line: 131, column: 1, scope: !7351)
!7375 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7265, file: !7265, line: 133, type: !7376, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2773, retainedNodes: !7378)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{null, !106}
!7378 = !{!7379, !7380, !7381}
!7379 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7375, file: !7265, line: 133, type: !106)
!7380 = !DILocalVariable(name: "ssf_contents", scope: !7375, file: !7265, line: 135, type: !1020)
!7381 = !DILocalVariable(name: "oops_esf", scope: !7375, file: !7265, line: 136, type: !7270)
!7382 = !DILocation(line: 0, scope: !7375)
!7383 = !DILocation(line: 136, column: 2, scope: !7375)
!7384 = !DILocation(line: 136, column: 15, scope: !7375)
!7385 = !DILocation(line: 139, column: 22, scope: !7375)
!7386 = !DILocation(line: 139, column: 17, scope: !7375)
!7387 = !DILocation(line: 139, column: 20, scope: !7375)
!7388 = !DILocation(line: 141, column: 2, scope: !7375)
!7389 = !DILocation(line: 142, column: 2, scope: !7375)
!7390 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7391, file: !7391, line: 40, type: !7129, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7392)
!7391 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7392 = !{!7393}
!7393 = !DILocalVariable(name: "irq", arg: 1, scope: !7390, file: !7391, line: 40, type: !32)
!7394 = !DILocation(line: 0, scope: !7390)
!7395 = !DILocation(line: 42, column: 2, scope: !7390)
!7396 = !DILocation(line: 43, column: 1, scope: !7390)
!7397 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !644, file: !644, line: 1684, type: !7398, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7400)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{null, !920}
!7400 = !{!7401}
!7401 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7397, file: !644, line: 1684, type: !920)
!7402 = !DILocation(line: 0, scope: !7397)
!7403 = !DILocation(line: 1686, column: 23, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7397, file: !644, line: 1686, column: 7)
!7405 = !DILocation(line: 1686, column: 7, scope: !7397)
!7406 = !DILocation(line: 1688, column: 5, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7404, file: !644, line: 1687, column: 3)
!7408 = !{i64 2151255623}
!7409 = !DILocation(line: 1689, column: 81, scope: !7407)
!7410 = !DILocation(line: 1689, column: 60, scope: !7407)
!7411 = !DILocation(line: 1689, column: 34, scope: !7407)
!7412 = !DILocation(line: 1689, column: 5, scope: !7407)
!7413 = !DILocation(line: 1689, column: 43, scope: !7407)
!7414 = !DILocation(line: 1690, column: 5, scope: !7407)
!7415 = !{i64 2151255737}
!7416 = !DILocation(line: 1691, column: 3, scope: !7407)
!7417 = !DILocation(line: 1692, column: 1, scope: !7397)
!7418 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7391, file: !7391, line: 45, type: !7129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7419)
!7419 = !{!7420}
!7420 = !DILocalVariable(name: "irq", arg: 1, scope: !7418, file: !7391, line: 45, type: !32)
!7421 = !DILocation(line: 0, scope: !7418)
!7422 = !DILocation(line: 47, column: 2, scope: !7418)
!7423 = !DILocation(line: 48, column: 1, scope: !7418)
!7424 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !644, file: !644, line: 1722, type: !7398, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7425)
!7425 = !{!7426}
!7426 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7424, file: !644, line: 1722, type: !920)
!7427 = !DILocation(line: 0, scope: !7424)
!7428 = !DILocation(line: 1724, column: 23, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7424, file: !644, line: 1724, column: 7)
!7430 = !DILocation(line: 1724, column: 7, scope: !7424)
!7431 = !DILocation(line: 1726, column: 81, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7429, file: !644, line: 1725, column: 3)
!7433 = !DILocation(line: 1726, column: 60, scope: !7432)
!7434 = !DILocation(line: 1726, column: 34, scope: !7432)
!7435 = !DILocation(line: 1726, column: 5, scope: !7432)
!7436 = !DILocation(line: 1726, column: 43, scope: !7432)
!7437 = !DILocation(line: 271, column: 3, scope: !7438, inlinedAt: !7440)
!7438 = distinct !DISubprogram(name: "__DSB", scope: !7439, file: !7439, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !256)
!7439 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7440 = distinct !DILocation(line: 1727, column: 5, scope: !7432)
!7441 = !{i64 3710006}
!7442 = !DILocation(line: 260, column: 3, scope: !7443, inlinedAt: !7444)
!7443 = distinct !DISubprogram(name: "__ISB", scope: !7439, file: !7439, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !256)
!7444 = distinct !DILocation(line: 1728, column: 5, scope: !7432)
!7445 = !{i64 3709723}
!7446 = !DILocation(line: 1729, column: 3, scope: !7432)
!7447 = !DILocation(line: 1730, column: 1, scope: !7424)
!7448 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7391, file: !7391, line: 50, type: !7449, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7451)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{!107, !32}
!7451 = !{!7452}
!7452 = !DILocalVariable(name: "irq", arg: 1, scope: !7448, file: !7391, line: 50, type: !32)
!7453 = !DILocation(line: 0, scope: !7448)
!7454 = !DILocation(line: 52, column: 20, scope: !7448)
!7455 = !DILocation(line: 52, column: 9, scope: !7448)
!7456 = !DILocation(line: 52, column: 41, scope: !7448)
!7457 = !DILocation(line: 52, column: 39, scope: !7448)
!7458 = !DILocation(line: 52, column: 2, scope: !7448)
!7459 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7391, file: !7391, line: 64, type: !7460, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7462)
!7460 = !DISubroutineType(types: !7461)
!7461 = !{null, !32, !32, !108}
!7462 = !{!7463, !7464, !7465}
!7463 = !DILocalVariable(name: "irq", arg: 1, scope: !7459, file: !7391, line: 64, type: !32)
!7464 = !DILocalVariable(name: "prio", arg: 2, scope: !7459, file: !7391, line: 64, type: !32)
!7465 = !DILocalVariable(name: "flags", arg: 3, scope: !7459, file: !7391, line: 64, type: !108)
!7466 = !DILocation(line: 0, scope: !7459)
!7467 = !DILocation(line: 83, column: 8, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !7391, line: 82, column: 9)
!7469 = distinct !DILexicalBlock(scope: !7459, file: !7391, line: 76, column: 6)
!7470 = !DILocation(line: 95, column: 2, scope: !7459)
!7471 = !DILocation(line: 96, column: 1, scope: !7459)
!7472 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7473, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7475)
!7473 = !DISubroutineType(types: !7474)
!7474 = !{null, !920, !108}
!7475 = !{!7476, !7477}
!7476 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7472, file: !644, line: 1814, type: !920)
!7477 = !DILocalVariable(name: "priority", arg: 2, scope: !7472, file: !644, line: 1814, type: !108)
!7478 = !DILocation(line: 0, scope: !7472)
!7479 = !DILocation(line: 0, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7472, file: !644, line: 1816, column: 7)
!7481 = !DILocation(line: 1816, column: 7, scope: !7472)
!7482 = !DILocation(line: 1824, column: 1, scope: !7472)
!7483 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7391, file: !7391, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !7484)
!7484 = !{!7485}
!7485 = !DILocalVariable(name: "unused", arg: 1, scope: !7483, file: !7391, line: 155, type: !13)
!7486 = !DILocation(line: 0, scope: !7483)
!7487 = !DILocation(line: 159, column: 2, scope: !7483)
!7488 = !DILocation(line: 160, column: 1, scope: !7483)
!7489 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7490, file: !7490, line: 87, type: !337, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !256)
!7490 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7491 = !DILocation(line: 89, column: 2, scope: !7489)
!7492 = !DILocation(line: 90, column: 2, scope: !7489)
!7493 = !DILocation(line: 91, column: 1, scope: !7489)
!7494 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7490, file: !7490, line: 23, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!7495 = !DISubprogram(name: "z_arm_int_exit", scope: !7496, file: !7496, line: 153, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!7496 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7497 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7498, file: !7498, line: 256, type: !337, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2832, retainedNodes: !256)
!7498 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7499 = !DILocation(line: 258, column: 2, scope: !7497)
!7500 = !DILocation(line: 260, column: 2, scope: !7497)
!7501 = !DILocation(line: 262, column: 2, scope: !7497)
!7502 = !DILocation(line: 263, column: 2, scope: !7497)
!7503 = !DILocation(line: 267, column: 2, scope: !7497)
!7504 = !DILocation(line: 268, column: 2, scope: !7497)
!7505 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7498, file: !7498, line: 53, type: !337, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2832, retainedNodes: !256)
!7506 = !DILocation(line: 55, column: 12, scope: !7505)
!7507 = !DILocation(line: 271, column: 3, scope: !7508, inlinedAt: !7509)
!7508 = distinct !DISubprogram(name: "__DSB", scope: !7439, file: !7439, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2832, retainedNodes: !256)
!7509 = distinct !DILocation(line: 56, column: 2, scope: !7505)
!7510 = !{i64 3708677}
!7511 = !DILocation(line: 260, column: 3, scope: !7512, inlinedAt: !7513)
!7512 = distinct !DISubprogram(name: "__ISB", scope: !7439, file: !7439, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2832, retainedNodes: !256)
!7513 = distinct !DILocation(line: 57, column: 2, scope: !7505)
!7514 = !{i64 3708394}
!7515 = !DILocation(line: 58, column: 1, scope: !7505)
!7516 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7498, file: !7498, line: 96, type: !337, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2832, retainedNodes: !256)
!7517 = !DILocation(line: 103, column: 13, scope: !7516)
!7518 = !DILocation(line: 975, column: 3, scope: !7519, inlinedAt: !7524)
!7519 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7439, file: !7439, line: 971, type: !7520, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2832, retainedNodes: !7522)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{!108}
!7522 = !{!7523}
!7523 = !DILocalVariable(name: "result", scope: !7519, file: !7439, line: 973, type: !108)
!7524 = distinct !DILocation(line: 189, column: 16, scope: !7516)
!7525 = !{i64 3729507}
!7526 = !DILocation(line: 0, scope: !7519, inlinedAt: !7524)
!7527 = !DILocation(line: 189, column: 32, scope: !7516)
!7528 = !DILocalVariable(name: "control", arg: 1, scope: !7529, file: !7439, line: 1001, type: !108)
!7529 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7439, file: !7439, line: 1001, type: !7530, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2832, retainedNodes: !7532)
!7530 = !DISubroutineType(types: !7531)
!7531 = !{null, !108}
!7532 = !{!7528}
!7533 = !DILocation(line: 0, scope: !7529, inlinedAt: !7534)
!7534 = distinct !DILocation(line: 189, column: 2, scope: !7516)
!7535 = !DILocation(line: 1003, column: 3, scope: !7529, inlinedAt: !7534)
!7536 = !{i64 3730227}
!7537 = !DILocation(line: 260, column: 3, scope: !7512, inlinedAt: !7538)
!7538 = distinct !DILocation(line: 1004, column: 3, scope: !7529, inlinedAt: !7534)
!7539 = !DILocation(line: 191, column: 1, scope: !7516)
!7540 = distinct !DISubprogram(name: "arch_swap", scope: !7541, file: !7541, line: 33, type: !7449, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7542)
!7541 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7542 = !{!7543}
!7543 = !DILocalVariable(name: "key", arg: 1, scope: !7540, file: !7541, line: 33, type: !32)
!7544 = !DILocation(line: 0, scope: !7540)
!7545 = !DILocation(line: 36, column: 2, scope: !7540)
!7546 = !DILocation(line: 36, column: 17, scope: !7540)
!7547 = !DILocation(line: 36, column: 25, scope: !7540)
!7548 = !DILocation(line: 37, column: 37, scope: !7540)
!7549 = !DILocation(line: 37, column: 17, scope: !7540)
!7550 = !DILocation(line: 37, column: 35, scope: !7540)
!7551 = !DILocation(line: 41, column: 12, scope: !7540)
!7552 = !DILocalVariable(name: "key", arg: 1, scope: !7553, file: !7118, line: 84, type: !32)
!7553 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !7554)
!7554 = !{!7552}
!7555 = !DILocation(line: 0, scope: !7553, inlinedAt: !7556)
!7556 = distinct !DILocation(line: 44, column: 2, scope: !7540)
!7557 = !DILocation(line: 95, column: 2, scope: !7553, inlinedAt: !7556)
!7558 = !{i64 2279178}
!7559 = !DILocation(line: 53, column: 9, scope: !7540)
!7560 = !DILocation(line: 53, column: 24, scope: !7540)
!7561 = !DILocation(line: 53, column: 2, scope: !7540)
!7562 = distinct !DISubprogram(name: "arch_new_thread", scope: !7563, file: !7563, line: 56, type: !7564, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7671)
!7563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7564 = !DISubroutineType(types: !7565)
!7565 = !{null, !7566, !7666, !283, !324, !106, !106, !106}
!7566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7567, size: 32)
!7567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !7568)
!7568 = !{!7569, !7627, !7639, !7640, !7641, !7642, !7648, !7661}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7567, file: !168, line: 247, baseType: !7570, size: 384)
!7570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !7571)
!7571 = !{!7572, !7596, !7603, !7604, !7605, !7614, !7615, !7616}
!7572 = !DIDerivedType(tag: DW_TAG_member, scope: !7570, file: !168, line: 60, baseType: !7573, size: 64)
!7573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7570, file: !168, line: 60, size: 64, elements: !7574)
!7574 = !{!7575, !7590}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7573, file: !168, line: 61, baseType: !7576, size: 64)
!7576 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !7577)
!7577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !7578)
!7578 = !{!7579, !7585}
!7579 = !DIDerivedType(tag: DW_TAG_member, scope: !7577, file: !151, line: 38, baseType: !7580, size: 32)
!7580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7577, file: !151, line: 38, size: 32, elements: !7581)
!7581 = !{!7582, !7584}
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7580, file: !151, line: 39, baseType: !7583, size: 32)
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7577, size: 32)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7580, file: !151, line: 40, baseType: !7583, size: 32)
!7585 = !DIDerivedType(tag: DW_TAG_member, scope: !7577, file: !151, line: 42, baseType: !7586, size: 32, offset: 32)
!7586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7577, file: !151, line: 42, size: 32, elements: !7587)
!7587 = !{!7588, !7589}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7586, file: !151, line: 43, baseType: !7583, size: 32)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7586, file: !151, line: 44, baseType: !7583, size: 32)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7573, file: !168, line: 62, baseType: !7591, size: 64)
!7591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !7592)
!7592 = !{!7593}
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7591, file: !180, line: 50, baseType: !7594, size: 64)
!7594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7595, size: 64, elements: !185)
!7595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7591, size: 32)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7570, file: !168, line: 68, baseType: !7597, size: 32, offset: 64)
!7597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7598, size: 32)
!7598 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !7599)
!7599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !7600)
!7600 = !{!7601}
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7599, file: !146, line: 232, baseType: !7602, size: 64)
!7602 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !7577)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7570, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7570, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!7605 = !DIDerivedType(tag: DW_TAG_member, scope: !7570, file: !168, line: 90, baseType: !7606, size: 16, offset: 112)
!7606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7570, file: !168, line: 90, size: 16, elements: !7607)
!7607 = !{!7608, !7613}
!7608 = !DIDerivedType(tag: DW_TAG_member, scope: !7606, file: !168, line: 91, baseType: !7609, size: 16)
!7609 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7606, file: !168, line: 91, size: 16, elements: !7610)
!7610 = !{!7611, !7612}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7609, file: !168, line: 96, baseType: !200, size: 8)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7609, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7606, file: !168, line: 100, baseType: !126, size: 16)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7570, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7570, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7570, file: !168, line: 131, baseType: !7617, size: 192, offset: 192)
!7617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !7618)
!7618 = !{!7619, !7620, !7626}
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7617, file: !146, line: 245, baseType: !7576, size: 64)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7617, file: !146, line: 246, baseType: !7621, size: 32, offset: 64)
!7621 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !7622)
!7622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7623, size: 32)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{null, !7625}
!7625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7617, size: 32)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7617, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7567, file: !168, line: 250, baseType: !7628, size: 288, offset: 384)
!7628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7629)
!7629 = !{!7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638}
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7628, file: !219, line: 26, baseType: !108, size: 32)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7628, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7628, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7628, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7628, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7628, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7628, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7628, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7628, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7567, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7567, file: !168, line: 256, baseType: !7598, size: 64, offset: 704)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7567, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7567, file: !168, line: 300, baseType: !7643, size: 96, offset: 800)
!7643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !7644)
!7644 = !{!7645, !7646, !7647}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7643, file: !168, line: 153, baseType: !22, size: 32)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7643, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7643, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7567, file: !168, line: 325, baseType: !7649, size: 32, offset: 896)
!7649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7650, size: 32)
!7650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !7651)
!7651 = !{!7652, !7658, !7659}
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7650, file: !142, line: 5074, baseType: !7653, size: 96)
!7653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !7654)
!7654 = !{!7655, !7656, !7657}
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7653, file: !245, line: 57, baseType: !248, size: 32)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7653, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7653, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7650, file: !142, line: 5075, baseType: !7598, size: 64, offset: 96)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7650, file: !142, line: 5076, baseType: !7660, offset: 160)
!7660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7567, file: !168, line: 343, baseType: !7662, size: 64, offset: 928)
!7662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !7663)
!7663 = !{!7664, !7665}
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7662, file: !219, line: 63, baseType: !108, size: 32)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7662, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 32)
!7667 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !7668)
!7668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !7669)
!7669 = !{!7670}
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7668, file: !319, line: 48, baseType: !123, size: 8)
!7671 = !{!7672, !7673, !7674, !7675, !7676, !7677, !7678, !7679}
!7672 = !DILocalVariable(name: "thread", arg: 1, scope: !7562, file: !7563, line: 56, type: !7566)
!7673 = !DILocalVariable(name: "stack", arg: 2, scope: !7562, file: !7563, line: 56, type: !7666)
!7674 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7562, file: !7563, line: 57, type: !283)
!7675 = !DILocalVariable(name: "entry", arg: 4, scope: !7562, file: !7563, line: 57, type: !324)
!7676 = !DILocalVariable(name: "p1", arg: 5, scope: !7562, file: !7563, line: 58, type: !106)
!7677 = !DILocalVariable(name: "p2", arg: 6, scope: !7562, file: !7563, line: 58, type: !106)
!7678 = !DILocalVariable(name: "p3", arg: 7, scope: !7562, file: !7563, line: 58, type: !106)
!7679 = !DILocalVariable(name: "iframe", scope: !7562, file: !7563, line: 60, type: !2891)
!7680 = !DILocation(line: 0, scope: !7562)
!7681 = !DILocation(line: 85, column: 11, scope: !7562)
!7682 = !DILocation(line: 93, column: 10, scope: !7562)
!7683 = !DILocation(line: 98, column: 13, scope: !7562)
!7684 = !DILocation(line: 100, column: 15, scope: !7562)
!7685 = !DILocation(line: 100, column: 10, scope: !7562)
!7686 = !DILocation(line: 100, column: 13, scope: !7562)
!7687 = !DILocation(line: 101, column: 15, scope: !7562)
!7688 = !DILocation(line: 101, column: 10, scope: !7562)
!7689 = !DILocation(line: 101, column: 13, scope: !7562)
!7690 = !DILocation(line: 102, column: 15, scope: !7562)
!7691 = !DILocation(line: 102, column: 10, scope: !7562)
!7692 = !DILocation(line: 102, column: 13, scope: !7562)
!7693 = !DILocation(line: 103, column: 15, scope: !7562)
!7694 = !DILocation(line: 103, column: 10, scope: !7562)
!7695 = !DILocation(line: 103, column: 13, scope: !7562)
!7696 = !DILocation(line: 106, column: 10, scope: !7562)
!7697 = !DILocation(line: 106, column: 15, scope: !7562)
!7698 = !DILocation(line: 122, column: 29, scope: !7562)
!7699 = !DILocation(line: 122, column: 23, scope: !7562)
!7700 = !DILocation(line: 122, column: 27, scope: !7562)
!7701 = !DILocation(line: 123, column: 15, scope: !7562)
!7702 = !DILocation(line: 123, column: 23, scope: !7562)
!7703 = !DILocation(line: 143, column: 1, scope: !7562)
!7704 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7563, file: !7563, line: 385, type: !7705, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7708)
!7705 = !DISubroutineType(types: !7706)
!7706 = !{!108, !7707, !7707}
!7707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7708 = !{!7709, !7710, !7711, !7714}
!7709 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7704, file: !7563, line: 385, type: !7707)
!7710 = !DILocalVariable(name: "psp", arg: 2, scope: !7704, file: !7563, line: 385, type: !7707)
!7711 = !DILocalVariable(name: "thread", scope: !7704, file: !7563, line: 388, type: !7712)
!7712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7713, size: 32)
!7713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7567)
!7714 = !DILocalVariable(name: "guard_len", scope: !7704, file: !7563, line: 405, type: !108)
!7715 = !DILocation(line: 0, scope: !7704)
!7716 = !DILocation(line: 388, column: 34, scope: !7704)
!7717 = !DILocation(line: 390, column: 13, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7704, file: !7563, line: 390, column: 6)
!7719 = !DILocation(line: 390, column: 6, scope: !7704)
!7720 = !DILocation(line: 438, column: 6, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7704, file: !7563, line: 438, column: 6)
!7722 = !DILocation(line: 438, column: 6, scope: !7704)
!7723 = !DILocation(line: 442, column: 3, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7721, file: !7563, line: 440, column: 22)
!7725 = !DILocation(line: 455, column: 1, scope: !7704)
!7726 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7563, file: !7563, line: 530, type: !7727, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2888, retainedNodes: !7729)
!7727 = !DISubroutineType(types: !7728)
!7728 = !{null, !7566, !283, !324}
!7729 = !{!7730, !7731, !7732}
!7730 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7726, file: !7563, line: 530, type: !7566)
!7731 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7726, file: !7563, line: 530, type: !283)
!7732 = !DILocalVariable(name: "_main", arg: 3, scope: !7726, file: !7563, line: 531, type: !324)
!7733 = !DILocation(line: 0, scope: !7726)
!7734 = !DILocation(line: 535, column: 11, scope: !7726)
!7735 = !DILocation(line: 560, column: 2, scope: !7726)
!7736 = !DILocation(line: 576, column: 2, scope: !7726)
!7737 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7738 = !DILocation(line: 603, column: 2, scope: !7726)
!7739 = distinct !DISubprogram(name: "z_arm_fault", scope: !7740, file: !7740, line: 1036, type: !7741, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !7756)
!7740 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7741 = !DISubroutineType(types: !7742)
!7742 = !{null, !108, !108, !108, !7743}
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7744, size: 32)
!7744 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !219, line: 37, baseType: !7745)
!7745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !7746)
!7746 = !{!7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755}
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7745, file: !219, line: 26, baseType: !108, size: 32)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7745, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7745, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7745, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7745, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7745, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7745, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7745, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7745, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!7756 = !{!7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766}
!7757 = !DILocalVariable(name: "msp", arg: 1, scope: !7739, file: !7740, line: 1036, type: !108)
!7758 = !DILocalVariable(name: "psp", arg: 2, scope: !7739, file: !7740, line: 1036, type: !108)
!7759 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7739, file: !7740, line: 1036, type: !108)
!7760 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7739, file: !7740, line: 1037, type: !7743)
!7761 = !DILocalVariable(name: "reason", scope: !7739, file: !7740, line: 1039, type: !108)
!7762 = !DILocalVariable(name: "fault", scope: !7739, file: !7740, line: 1040, type: !107)
!7763 = !DILocalVariable(name: "recoverable", scope: !7739, file: !7740, line: 1041, type: !136)
!7764 = !DILocalVariable(name: "nested_exc", scope: !7739, file: !7740, line: 1041, type: !136)
!7765 = !DILocalVariable(name: "esf", scope: !7739, file: !7740, line: 1042, type: !2959)
!7766 = !DILocalVariable(name: "esf_copy", scope: !7739, file: !7740, line: 1047, type: !2960)
!7767 = !DILocation(line: 0, scope: !7739)
!7768 = !DILocation(line: 1040, column: 19, scope: !7739)
!7769 = !DILocation(line: 1040, column: 24, scope: !7739)
!7770 = !DILocation(line: 1041, column: 2, scope: !7739)
!7771 = !DILocation(line: 1047, column: 2, scope: !7739)
!7772 = !DILocation(line: 1047, column: 15, scope: !7739)
!7773 = !DILocalVariable(name: "key", arg: 1, scope: !7774, file: !7118, line: 84, type: !32)
!7774 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !7775)
!7775 = !{!7773}
!7776 = !DILocation(line: 0, scope: !7774, inlinedAt: !7777)
!7777 = distinct !DILocation(line: 1050, column: 2, scope: !7739)
!7778 = !DILocation(line: 95, column: 2, scope: !7774, inlinedAt: !7777)
!7779 = !{i64 2312422}
!7780 = !DILocation(line: 1055, column: 9, scope: !7739)
!7781 = !DILocation(line: 1063, column: 11, scope: !7739)
!7782 = !DILocation(line: 1064, column: 6, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7739, file: !7740, line: 1064, column: 6)
!7784 = !{i8 0, i8 2}
!7785 = !DILocation(line: 1064, column: 6, scope: !7739)
!7786 = !DILocation(line: 1070, column: 20, scope: !7739)
!7787 = !DILocation(line: 1070, column: 2, scope: !7739)
!7788 = !DILocation(line: 1089, column: 6, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7739, file: !7740, line: 1089, column: 6)
!7790 = !DILocation(line: 0, scope: !7789)
!7791 = !DILocation(line: 1089, column: 6, scope: !7739)
!7792 = !DILocation(line: 1090, column: 28, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !7740, line: 1090, column: 7)
!7794 = distinct !DILexicalBlock(scope: !7789, file: !7740, line: 1089, column: 18)
!7795 = !DILocation(line: 1090, column: 44, scope: !7793)
!7796 = !DILocation(line: 1090, column: 7, scope: !7794)
!7797 = !DILocation(line: 1091, column: 24, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7793, file: !7740, line: 1090, column: 50)
!7799 = !DILocation(line: 1092, column: 3, scope: !7798)
!7800 = !DILocation(line: 1094, column: 23, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7789, file: !7740, line: 1093, column: 9)
!7802 = !DILocation(line: 1097, column: 2, scope: !7739)
!7803 = !DILocation(line: 1098, column: 1, scope: !7739)
!7804 = distinct !DISubprogram(name: "get_esf", scope: !7740, file: !7740, line: 894, type: !7805, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !7808)
!7805 = !DISubroutineType(types: !7806)
!7806 = !{!2959, !108, !108, !108, !7807}
!7807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!7808 = !{!7809, !7810, !7811, !7812, !7813, !7814}
!7809 = !DILocalVariable(name: "msp", arg: 1, scope: !7804, file: !7740, line: 894, type: !108)
!7810 = !DILocalVariable(name: "psp", arg: 2, scope: !7804, file: !7740, line: 894, type: !108)
!7811 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7804, file: !7740, line: 894, type: !108)
!7812 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7804, file: !7740, line: 895, type: !7807)
!7813 = !DILocalVariable(name: "alternative_state_exc", scope: !7804, file: !7740, line: 897, type: !136)
!7814 = !DILocalVariable(name: "ptr_esf", scope: !7804, file: !7740, line: 898, type: !2959)
!7815 = !DILocation(line: 0, scope: !7804)
!7816 = !DILocation(line: 900, column: 14, scope: !7804)
!7817 = !DILocation(line: 902, column: 49, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7804, file: !7740, line: 902, column: 6)
!7819 = !DILocation(line: 902, column: 6, scope: !7804)
!7820 = !DILocation(line: 983, column: 44, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7804, file: !7740, line: 983, column: 6)
!7822 = !DILocation(line: 985, column: 3, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !7740, line: 985, column: 3)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7740, line: 985, column: 3)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7740, line: 985, column: 3)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !7740, line: 985, column: 3)
!7827 = distinct !DILexicalBlock(scope: !7821, file: !7740, line: 984, column: 47)
!7828 = !DILocation(line: 986, column: 3, scope: !7827)
!7829 = !DILocation(line: 983, column: 18, scope: !7821)
!7830 = !DILocation(line: 991, column: 7, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !7740, line: 990, column: 30)
!7832 = distinct !DILexicalBlock(scope: !7804, file: !7740, line: 990, column: 6)
!7833 = !DILocation(line: 998, column: 16, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !7740, line: 995, column: 10)
!7835 = distinct !DILexicalBlock(scope: !7831, file: !7740, line: 991, column: 7)
!7836 = !DILocation(line: 1002, column: 2, scope: !7804)
!7837 = !DILocation(line: 1003, column: 1, scope: !7804)
!7838 = distinct !DISubprogram(name: "fault_handle", scope: !7740, file: !7740, line: 786, type: !7839, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !7841)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!108, !2959, !107, !7807}
!7841 = !{!7842, !7843, !7844, !7845}
!7842 = !DILocalVariable(name: "esf", arg: 1, scope: !7838, file: !7740, line: 786, type: !2959)
!7843 = !DILocalVariable(name: "fault", arg: 2, scope: !7838, file: !7740, line: 786, type: !107)
!7844 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7838, file: !7740, line: 786, type: !7807)
!7845 = !DILocalVariable(name: "reason", scope: !7838, file: !7740, line: 788, type: !108)
!7846 = !DILocation(line: 0, scope: !7838)
!7847 = !DILocation(line: 790, column: 15, scope: !7838)
!7848 = !DILocation(line: 792, column: 2, scope: !7838)
!7849 = !DILocation(line: 794, column: 12, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7838, file: !7740, line: 792, column: 17)
!7851 = !DILocation(line: 795, column: 3, scope: !7850)
!7852 = !DILocation(line: 800, column: 12, scope: !7850)
!7853 = !DILocation(line: 801, column: 3, scope: !7850)
!7854 = !DILocation(line: 803, column: 12, scope: !7850)
!7855 = !DILocation(line: 804, column: 3, scope: !7850)
!7856 = !DILocation(line: 806, column: 12, scope: !7850)
!7857 = !DILocation(line: 807, column: 3, scope: !7850)
!7858 = !DILocation(line: 814, column: 3, scope: !7850)
!7859 = !DILocation(line: 815, column: 3, scope: !7850)
!7860 = !DILocation(line: 820, column: 3, scope: !7850)
!7861 = !DILocation(line: 821, column: 3, scope: !7850)
!7862 = !DILocation(line: 829, column: 2, scope: !7838)
!7863 = distinct !DISubprogram(name: "hard_fault", scope: !7740, file: !7740, line: 709, type: !7864, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !7866)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{!108, !2959, !7807}
!7866 = !{!7867, !7868, !7869}
!7867 = !DILocalVariable(name: "esf", arg: 1, scope: !7863, file: !7740, line: 709, type: !2959)
!7868 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7863, file: !7740, line: 709, type: !7807)
!7869 = !DILocalVariable(name: "reason", scope: !7863, file: !7740, line: 711, type: !108)
!7870 = !DILocation(line: 0, scope: !7863)
!7871 = !DILocation(line: 713, column: 2, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7873, file: !7740, line: 713, column: 2)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7740, line: 713, column: 2)
!7874 = distinct !DILexicalBlock(scope: !7875, file: !7740, line: 713, column: 2)
!7875 = distinct !DILexicalBlock(scope: !7863, file: !7740, line: 713, column: 2)
!7876 = !DILocation(line: 732, column: 15, scope: !7863)
!7877 = !DILocation(line: 734, column: 12, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7863, file: !7740, line: 734, column: 6)
!7879 = !DILocation(line: 734, column: 17, scope: !7878)
!7880 = !DILocation(line: 734, column: 41, scope: !7878)
!7881 = !DILocation(line: 734, column: 6, scope: !7863)
!7882 = !DILocation(line: 735, column: 3, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !7740, line: 735, column: 3)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !7740, line: 735, column: 3)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !7740, line: 735, column: 3)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !7740, line: 735, column: 3)
!7887 = distinct !DILexicalBlock(scope: !7878, file: !7740, line: 734, column: 47)
!7888 = !DILocation(line: 736, column: 2, scope: !7887)
!7889 = !DILocation(line: 736, column: 19, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7878, file: !7740, line: 736, column: 13)
!7891 = !DILocation(line: 736, column: 49, scope: !7890)
!7892 = !DILocation(line: 736, column: 13, scope: !7878)
!7893 = !DILocation(line: 737, column: 3, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !7740, line: 737, column: 3)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !7740, line: 737, column: 3)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !7740, line: 737, column: 3)
!7897 = distinct !DILexicalBlock(scope: !7898, file: !7740, line: 737, column: 3)
!7898 = distinct !DILexicalBlock(scope: !7890, file: !7740, line: 736, column: 55)
!7899 = !DILocation(line: 738, column: 2, scope: !7898)
!7900 = !DILocation(line: 738, column: 19, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7890, file: !7740, line: 738, column: 13)
!7902 = !DILocation(line: 738, column: 24, scope: !7901)
!7903 = !DILocation(line: 738, column: 47, scope: !7901)
!7904 = !DILocation(line: 738, column: 13, scope: !7890)
!7905 = !DILocation(line: 739, column: 3, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !7740, line: 739, column: 3)
!7907 = distinct !DILexicalBlock(scope: !7908, file: !7740, line: 739, column: 3)
!7908 = distinct !DILexicalBlock(scope: !7909, file: !7740, line: 739, column: 3)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7740, line: 739, column: 3)
!7910 = distinct !DILexicalBlock(scope: !7901, file: !7740, line: 738, column: 53)
!7911 = !DILocation(line: 740, column: 7, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7910, file: !7740, line: 740, column: 7)
!7913 = !DILocation(line: 740, column: 7, scope: !7910)
!7914 = !DILocation(line: 741, column: 4, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !7740, line: 741, column: 4)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !7740, line: 741, column: 4)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !7740, line: 741, column: 4)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !7740, line: 741, column: 4)
!7919 = distinct !DILexicalBlock(scope: !7912, file: !7740, line: 740, column: 38)
!7920 = !DILocation(line: 742, column: 24, scope: !7919)
!7921 = !DILocation(line: 743, column: 3, scope: !7919)
!7922 = !DILocation(line: 743, column: 20, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7912, file: !7740, line: 743, column: 14)
!7924 = !DILocation(line: 743, column: 25, scope: !7923)
!7925 = !DILocation(line: 743, column: 52, scope: !7923)
!7926 = !DILocation(line: 743, column: 14, scope: !7912)
!7927 = !DILocation(line: 744, column: 13, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7923, file: !7740, line: 743, column: 58)
!7929 = !DILocation(line: 745, column: 3, scope: !7928)
!7930 = !DILocation(line: 745, column: 20, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7923, file: !7740, line: 745, column: 14)
!7932 = !DILocation(line: 745, column: 25, scope: !7931)
!7933 = !DILocation(line: 745, column: 52, scope: !7931)
!7934 = !DILocation(line: 745, column: 14, scope: !7923)
!7935 = !DILocation(line: 746, column: 13, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7931, file: !7740, line: 745, column: 58)
!7937 = !DILocation(line: 747, column: 3, scope: !7936)
!7938 = !DILocation(line: 747, column: 20, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7931, file: !7740, line: 747, column: 14)
!7940 = !DILocation(line: 747, column: 52, scope: !7939)
!7941 = !DILocation(line: 747, column: 14, scope: !7931)
!7942 = !DILocation(line: 748, column: 13, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7939, file: !7740, line: 747, column: 58)
!7944 = !DILocation(line: 753, column: 3, scope: !7943)
!7945 = !DILocation(line: 766, column: 2, scope: !7863)
!7946 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7740, file: !7740, line: 229, type: !7839, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !7947)
!7947 = !{!7948, !7949, !7950, !7951, !7952, !7953, !7956}
!7948 = !DILocalVariable(name: "esf", arg: 1, scope: !7946, file: !7740, line: 229, type: !2959)
!7949 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7946, file: !7740, line: 229, type: !107)
!7950 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7946, file: !7740, line: 230, type: !7807)
!7951 = !DILocalVariable(name: "reason", scope: !7946, file: !7740, line: 232, type: !108)
!7952 = !DILocalVariable(name: "mmfar", scope: !7946, file: !7740, line: 233, type: !108)
!7953 = !DILocalVariable(name: "temp", scope: !7954, file: !7740, line: 254, type: !108)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !7740, line: 244, column: 48)
!7955 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 244, column: 6)
!7956 = !DILocalVariable(name: "min_stack_ptr", scope: !7957, file: !7740, line: 309, type: !108)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !7740, line: 308, column: 43)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !7740, line: 308, column: 7)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !7740, line: 289, column: 40)
!7960 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 288, column: 6)
!7961 = !DILocation(line: 0, scope: !7946)
!7962 = !DILocation(line: 235, column: 2, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7740, line: 235, column: 2)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7740, line: 235, column: 2)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7740, line: 235, column: 2)
!7966 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 235, column: 2)
!7967 = !DILocation(line: 237, column: 12, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 237, column: 6)
!7969 = !DILocation(line: 237, column: 17, scope: !7968)
!7970 = !DILocation(line: 237, column: 41, scope: !7968)
!7971 = !DILocation(line: 237, column: 6, scope: !7946)
!7972 = !DILocation(line: 238, column: 3, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7740, line: 238, column: 3)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7740, line: 238, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7740, line: 238, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !7740, line: 238, column: 3)
!7977 = distinct !DILexicalBlock(scope: !7968, file: !7740, line: 237, column: 47)
!7978 = !DILocation(line: 240, column: 2, scope: !7977)
!7979 = !DILocation(line: 241, column: 12, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 241, column: 6)
!7981 = !DILocation(line: 241, column: 17, scope: !7980)
!7982 = !DILocation(line: 241, column: 43, scope: !7980)
!7983 = !DILocation(line: 241, column: 6, scope: !7946)
!7984 = !DILocation(line: 242, column: 3, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !7740, line: 242, column: 3)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7740, line: 242, column: 3)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7740, line: 242, column: 3)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !7740, line: 242, column: 3)
!7989 = distinct !DILexicalBlock(scope: !7980, file: !7740, line: 241, column: 49)
!7990 = !DILocation(line: 243, column: 2, scope: !7989)
!7991 = !DILocation(line: 244, column: 12, scope: !7955)
!7992 = !DILocation(line: 244, column: 17, scope: !7955)
!7993 = !DILocation(line: 244, column: 42, scope: !7955)
!7994 = !DILocation(line: 244, column: 6, scope: !7946)
!7995 = !DILocation(line: 245, column: 3, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !7740, line: 245, column: 3)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !7740, line: 245, column: 3)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !7740, line: 245, column: 3)
!7999 = distinct !DILexicalBlock(scope: !7954, file: !7740, line: 245, column: 3)
!8000 = !DILocation(line: 254, column: 24, scope: !7954)
!8001 = !DILocation(line: 0, scope: !7954)
!8002 = !DILocation(line: 256, column: 13, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7954, file: !7740, line: 256, column: 7)
!8004 = !DILocation(line: 256, column: 18, scope: !8003)
!8005 = !DILocation(line: 256, column: 44, scope: !8003)
!8006 = !DILocation(line: 256, column: 7, scope: !7954)
!8007 = !DILocation(line: 258, column: 4, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8009, file: !7740, line: 258, column: 4)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !7740, line: 258, column: 4)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !7740, line: 258, column: 4)
!8011 = distinct !DILexicalBlock(scope: !8012, file: !7740, line: 258, column: 4)
!8012 = distinct !DILexicalBlock(scope: !8003, file: !7740, line: 256, column: 50)
!8013 = !DILocation(line: 259, column: 24, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8012, file: !7740, line: 259, column: 8)
!8015 = !DILocation(line: 259, column: 8, scope: !8012)
!8016 = !DILocation(line: 261, column: 15, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8014, file: !7740, line: 259, column: 30)
!8018 = !DILocation(line: 262, column: 4, scope: !8017)
!8019 = !DILocation(line: 265, column: 12, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 265, column: 6)
!8021 = !DILocation(line: 265, column: 17, scope: !8020)
!8022 = !DILocation(line: 265, column: 42, scope: !8020)
!8023 = !DILocation(line: 265, column: 6, scope: !7946)
!8024 = !DILocation(line: 266, column: 3, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !7740, line: 266, column: 3)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !7740, line: 266, column: 3)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7740, line: 266, column: 3)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7740, line: 266, column: 3)
!8029 = distinct !DILexicalBlock(scope: !8020, file: !7740, line: 265, column: 48)
!8030 = !DILocation(line: 267, column: 2, scope: !8029)
!8031 = !DILocation(line: 269, column: 12, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 269, column: 6)
!8033 = !DILocation(line: 269, column: 17, scope: !8032)
!8034 = !DILocation(line: 269, column: 41, scope: !8032)
!8035 = !DILocation(line: 269, column: 6, scope: !7946)
!8036 = !DILocation(line: 270, column: 3, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !7740, line: 270, column: 3)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7740, line: 270, column: 3)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !7740, line: 270, column: 3)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !7740, line: 270, column: 3)
!8041 = distinct !DILexicalBlock(scope: !8032, file: !7740, line: 269, column: 47)
!8042 = !DILocation(line: 272, column: 2, scope: !8041)
!8043 = !DILocation(line: 288, column: 12, scope: !7960)
!8044 = !DILocation(line: 288, column: 17, scope: !7960)
!8045 = !DILocation(line: 288, column: 41, scope: !7960)
!8046 = !DILocation(line: 289, column: 9, scope: !7960)
!8047 = !DILocation(line: 289, column: 14, scope: !7960)
!8048 = !DILocation(line: 288, column: 6, scope: !7946)
!8049 = !DILocation(line: 308, column: 12, scope: !7958)
!8050 = !DILocation(line: 308, column: 17, scope: !7958)
!8051 = !DILocation(line: 308, column: 7, scope: !7959)
!8052 = !DILocation(line: 310, column: 6, scope: !7957)
!8053 = !DILocation(line: 309, column: 29, scope: !7957)
!8054 = !DILocation(line: 0, scope: !7957)
!8055 = !DILocation(line: 312, column: 8, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !7957, file: !7740, line: 312, column: 8)
!8057 = !DILocation(line: 312, column: 8, scope: !7957)
!8058 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8059, file: !7439, line: 1099, type: !108)
!8059 = distinct !DISubprogram(name: "__set_PSP", scope: !7439, file: !7439, line: 1099, type: !7530, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !8060)
!8060 = !{!8058}
!8061 = !DILocation(line: 0, scope: !8059, inlinedAt: !8062)
!8062 = distinct !DILocation(line: 338, column: 5, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8056, file: !7740, line: 312, column: 23)
!8064 = !DILocation(line: 1101, column: 3, scope: !8059, inlinedAt: !8062)
!8065 = !{i64 3759646}
!8066 = !DILocation(line: 341, column: 4, scope: !8063)
!8067 = !DILocation(line: 360, column: 12, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !7946, file: !7740, line: 360, column: 6)
!8069 = !DILocation(line: 360, column: 17, scope: !8068)
!8070 = !DILocation(line: 360, column: 41, scope: !8068)
!8071 = !DILocation(line: 360, column: 6, scope: !7946)
!8072 = !DILocation(line: 361, column: 14, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8068, file: !7740, line: 360, column: 47)
!8074 = !DILocation(line: 362, column: 2, scope: !8073)
!8075 = !DILocation(line: 366, column: 12, scope: !7946)
!8076 = !DILocation(line: 369, column: 15, scope: !7946)
!8077 = !DILocation(line: 371, column: 2, scope: !7946)
!8078 = distinct !DISubprogram(name: "bus_fault", scope: !7740, file: !7740, line: 383, type: !8079, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!107, !2959, !107, !7807}
!8081 = !{!8082, !8083, !8084, !8085, !8086}
!8082 = !DILocalVariable(name: "esf", arg: 1, scope: !8078, file: !7740, line: 383, type: !2959)
!8083 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8078, file: !7740, line: 383, type: !107)
!8084 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8078, file: !7740, line: 383, type: !7807)
!8085 = !DILocalVariable(name: "reason", scope: !8078, file: !7740, line: 385, type: !108)
!8086 = !DILocalVariable(name: "bfar", scope: !8087, file: !7740, line: 405, type: !108)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7740, line: 395, column: 42)
!8088 = distinct !DILexicalBlock(scope: !8078, file: !7740, line: 395, column: 6)
!8089 = !DILocation(line: 0, scope: !8078)
!8090 = !DILocation(line: 387, column: 2, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !7740, line: 387, column: 2)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !7740, line: 387, column: 2)
!8093 = distinct !DILexicalBlock(scope: !8094, file: !7740, line: 387, column: 2)
!8094 = distinct !DILexicalBlock(scope: !8078, file: !7740, line: 387, column: 2)
!8095 = !DILocation(line: 389, column: 11, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8078, file: !7740, line: 389, column: 6)
!8097 = !DILocation(line: 389, column: 16, scope: !8096)
!8098 = !DILocation(line: 389, column: 6, scope: !8078)
!8099 = !DILocation(line: 390, column: 3, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !7740, line: 390, column: 3)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !7740, line: 390, column: 3)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !7740, line: 390, column: 3)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !7740, line: 390, column: 3)
!8104 = distinct !DILexicalBlock(scope: !8096, file: !7740, line: 389, column: 39)
!8105 = !DILocation(line: 391, column: 2, scope: !8104)
!8106 = !DILocation(line: 392, column: 11, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8078, file: !7740, line: 392, column: 6)
!8108 = !DILocation(line: 392, column: 16, scope: !8107)
!8109 = !DILocation(line: 392, column: 6, scope: !8078)
!8110 = !DILocation(line: 393, column: 3, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7740, line: 393, column: 3)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !7740, line: 393, column: 3)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !7740, line: 393, column: 3)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !7740, line: 393, column: 3)
!8115 = distinct !DILexicalBlock(scope: !8107, file: !7740, line: 392, column: 41)
!8116 = !DILocation(line: 394, column: 2, scope: !8115)
!8117 = !DILocation(line: 395, column: 11, scope: !8088)
!8118 = !DILocation(line: 395, column: 16, scope: !8088)
!8119 = !DILocation(line: 395, column: 6, scope: !8078)
!8120 = !DILocation(line: 396, column: 3, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !7740, line: 396, column: 3)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !7740, line: 396, column: 3)
!8123 = distinct !DILexicalBlock(scope: !8124, file: !7740, line: 396, column: 3)
!8124 = distinct !DILexicalBlock(scope: !8087, file: !7740, line: 396, column: 3)
!8125 = !DILocation(line: 405, column: 3, scope: !8087)
!8126 = !DILocation(line: 0, scope: !8087)
!8127 = !DILocation(line: 407, column: 13, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8087, file: !7740, line: 407, column: 7)
!8129 = !DILocation(line: 407, column: 18, scope: !8128)
!8130 = !DILocation(line: 407, column: 44, scope: !8128)
!8131 = !DILocation(line: 407, column: 7, scope: !8087)
!8132 = !DILocation(line: 408, column: 4, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !7740, line: 408, column: 4)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !7740, line: 408, column: 4)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !7740, line: 408, column: 4)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !7740, line: 408, column: 4)
!8137 = distinct !DILexicalBlock(scope: !8128, file: !7740, line: 407, column: 50)
!8138 = !DILocation(line: 409, column: 24, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8137, file: !7740, line: 409, column: 8)
!8140 = !DILocation(line: 409, column: 8, scope: !8137)
!8141 = !DILocation(line: 411, column: 15, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8139, file: !7740, line: 409, column: 30)
!8143 = !DILocation(line: 412, column: 4, scope: !8142)
!8144 = !DILocation(line: 415, column: 11, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8078, file: !7740, line: 415, column: 6)
!8146 = !DILocation(line: 415, column: 16, scope: !8145)
!8147 = !DILocation(line: 415, column: 6, scope: !8078)
!8148 = !DILocation(line: 416, column: 3, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !7740, line: 416, column: 3)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !7740, line: 416, column: 3)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !7740, line: 416, column: 3)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !7740, line: 416, column: 3)
!8153 = distinct !DILexicalBlock(scope: !8145, file: !7740, line: 415, column: 44)
!8154 = !DILocation(line: 417, column: 2, scope: !8153)
!8155 = !DILocation(line: 418, column: 12, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8078, file: !7740, line: 418, column: 6)
!8157 = !DILocation(line: 418, column: 17, scope: !8156)
!8158 = !DILocation(line: 418, column: 41, scope: !8156)
!8159 = !DILocation(line: 418, column: 6, scope: !8078)
!8160 = !DILocation(line: 423, column: 18, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8156, file: !7740, line: 423, column: 13)
!8162 = !DILocation(line: 423, column: 23, scope: !8161)
!8163 = !DILocation(line: 423, column: 13, scope: !8156)
!8164 = !DILocation(line: 0, scope: !8156)
!8165 = !DILocation(line: 524, column: 12, scope: !8078)
!8166 = !DILocation(line: 526, column: 15, scope: !8078)
!8167 = !DILocation(line: 528, column: 2, scope: !8078)
!8168 = distinct !DISubprogram(name: "usage_fault", scope: !7740, file: !7740, line: 539, type: !8169, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !8173)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{!108, !8171}
!8171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8172, size: 32)
!8172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2960)
!8173 = !{!8174, !8175}
!8174 = !DILocalVariable(name: "esf", arg: 1, scope: !8168, file: !7740, line: 539, type: !8171)
!8175 = !DILocalVariable(name: "reason", scope: !8168, file: !7740, line: 541, type: !108)
!8176 = !DILocation(line: 0, scope: !8168)
!8177 = !DILocation(line: 543, column: 2, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !7740, line: 543, column: 2)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !7740, line: 543, column: 2)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !7740, line: 543, column: 2)
!8181 = distinct !DILexicalBlock(scope: !8168, file: !7740, line: 543, column: 2)
!8182 = !DILocation(line: 546, column: 12, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8168, file: !7740, line: 546, column: 6)
!8184 = !DILocation(line: 546, column: 17, scope: !8183)
!8185 = !DILocation(line: 546, column: 43, scope: !8183)
!8186 = !DILocation(line: 546, column: 6, scope: !8168)
!8187 = !DILocation(line: 547, column: 3, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8189, file: !7740, line: 547, column: 3)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !7740, line: 547, column: 3)
!8190 = distinct !DILexicalBlock(scope: !8191, file: !7740, line: 547, column: 3)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !7740, line: 547, column: 3)
!8192 = distinct !DILexicalBlock(scope: !8183, file: !7740, line: 546, column: 49)
!8193 = !DILocation(line: 548, column: 2, scope: !8192)
!8194 = !DILocation(line: 549, column: 12, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8168, file: !7740, line: 549, column: 6)
!8196 = !DILocation(line: 549, column: 17, scope: !8195)
!8197 = !DILocation(line: 549, column: 43, scope: !8195)
!8198 = !DILocation(line: 549, column: 6, scope: !8168)
!8199 = !DILocation(line: 550, column: 3, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !7740, line: 550, column: 3)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !7740, line: 550, column: 3)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !7740, line: 550, column: 3)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !7740, line: 550, column: 3)
!8204 = distinct !DILexicalBlock(scope: !8195, file: !7740, line: 549, column: 49)
!8205 = !DILocation(line: 551, column: 2, scope: !8204)
!8206 = !DILocation(line: 567, column: 12, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8168, file: !7740, line: 567, column: 6)
!8208 = !DILocation(line: 567, column: 17, scope: !8207)
!8209 = !DILocation(line: 567, column: 38, scope: !8207)
!8210 = !DILocation(line: 567, column: 6, scope: !8168)
!8211 = !DILocation(line: 568, column: 3, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8213, file: !7740, line: 568, column: 3)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !7740, line: 568, column: 3)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !7740, line: 568, column: 3)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !7740, line: 568, column: 3)
!8216 = distinct !DILexicalBlock(scope: !8207, file: !7740, line: 567, column: 44)
!8217 = !DILocation(line: 569, column: 2, scope: !8216)
!8218 = !DILocation(line: 570, column: 12, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8168, file: !7740, line: 570, column: 6)
!8220 = !DILocation(line: 570, column: 17, scope: !8219)
!8221 = !DILocation(line: 570, column: 39, scope: !8219)
!8222 = !DILocation(line: 570, column: 6, scope: !8168)
!8223 = !DILocation(line: 571, column: 3, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !7740, line: 571, column: 3)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !7740, line: 571, column: 3)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !7740, line: 571, column: 3)
!8227 = distinct !DILexicalBlock(scope: !8228, file: !7740, line: 571, column: 3)
!8228 = distinct !DILexicalBlock(scope: !8219, file: !7740, line: 570, column: 45)
!8229 = !DILocation(line: 572, column: 2, scope: !8228)
!8230 = !DILocation(line: 573, column: 12, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8168, file: !7740, line: 573, column: 6)
!8232 = !DILocation(line: 573, column: 17, scope: !8231)
!8233 = !DILocation(line: 573, column: 42, scope: !8231)
!8234 = !DILocation(line: 573, column: 6, scope: !8168)
!8235 = !DILocation(line: 574, column: 3, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8237, file: !7740, line: 574, column: 3)
!8237 = distinct !DILexicalBlock(scope: !8238, file: !7740, line: 574, column: 3)
!8238 = distinct !DILexicalBlock(scope: !8239, file: !7740, line: 574, column: 3)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !7740, line: 574, column: 3)
!8240 = distinct !DILexicalBlock(scope: !8231, file: !7740, line: 573, column: 48)
!8241 = !DILocation(line: 575, column: 2, scope: !8240)
!8242 = !DILocation(line: 576, column: 12, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8168, file: !7740, line: 576, column: 6)
!8244 = !DILocation(line: 576, column: 17, scope: !8243)
!8245 = !DILocation(line: 576, column: 44, scope: !8243)
!8246 = !DILocation(line: 576, column: 6, scope: !8168)
!8247 = !DILocation(line: 577, column: 3, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !7740, line: 577, column: 3)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !7740, line: 577, column: 3)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !7740, line: 577, column: 3)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !7740, line: 577, column: 3)
!8252 = distinct !DILexicalBlock(scope: !8243, file: !7740, line: 576, column: 50)
!8253 = !DILocation(line: 578, column: 2, scope: !8252)
!8254 = !DILocation(line: 581, column: 12, scope: !8168)
!8255 = !DILocation(line: 583, column: 2, scope: !8168)
!8256 = distinct !DISubprogram(name: "debug_monitor", scope: !7740, file: !7740, line: 632, type: !8257, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !8259)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{null, !2959, !7807}
!8259 = !{!8260, !8261}
!8260 = !DILocalVariable(name: "esf", arg: 1, scope: !8256, file: !7740, line: 632, type: !2959)
!8261 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8256, file: !7740, line: 632, type: !7807)
!8262 = !DILocation(line: 0, scope: !8256)
!8263 = !DILocation(line: 634, column: 15, scope: !8256)
!8264 = !DILocation(line: 636, column: 2, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !7740, line: 636, column: 2)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !7740, line: 636, column: 2)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !7740, line: 636, column: 2)
!8268 = distinct !DILexicalBlock(scope: !8256, file: !7740, line: 636, column: 2)
!8269 = !DILocation(line: 652, column: 1, scope: !8256)
!8270 = distinct !DISubprogram(name: "reserved_exception", scope: !7740, file: !7740, line: 776, type: !8271, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !8273)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{null, !8171, !107}
!8273 = !{!8274, !8275}
!8274 = !DILocalVariable(name: "esf", arg: 1, scope: !8270, file: !7740, line: 776, type: !8171)
!8275 = !DILocalVariable(name: "fault", arg: 2, scope: !8270, file: !7740, line: 776, type: !107)
!8276 = !DILocation(line: 0, scope: !8270)
!8277 = !DILocation(line: 780, column: 2, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !7740, line: 780, column: 2)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !7740, line: 780, column: 2)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !7740, line: 780, column: 2)
!8281 = distinct !DILexicalBlock(scope: !8270, file: !7740, line: 780, column: 2)
!8282 = !DILocation(line: 783, column: 1, scope: !8270)
!8283 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7740, file: !7740, line: 658, type: !8284, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !8286)
!8284 = !DISubroutineType(types: !8285)
!8285 = !{!136, !2959}
!8286 = !{!8287, !8288, !8289}
!8287 = !DILocalVariable(name: "esf", arg: 1, scope: !8283, file: !7740, line: 658, type: !2959)
!8288 = !DILocalVariable(name: "ret_addr", scope: !8283, file: !7740, line: 660, type: !2733)
!8289 = !DILocalVariable(name: "fault_insn", scope: !8283, file: !7740, line: 686, type: !126)
!8290 = !DILocation(line: 0, scope: !8283)
!8291 = !DILocation(line: 660, column: 46, scope: !8283)
!8292 = !DILocation(line: 660, column: 23, scope: !8283)
!8293 = !DILocation(line: 682, column: 11, scope: !8283)
!8294 = !DILocation(line: 271, column: 3, scope: !8295, inlinedAt: !8296)
!8295 = distinct !DISubprogram(name: "__DSB", scope: !7439, file: !7439, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !256)
!8296 = distinct !DILocation(line: 683, column: 2, scope: !8283)
!8297 = !{i64 3735781}
!8298 = !DILocation(line: 260, column: 3, scope: !8299, inlinedAt: !8300)
!8299 = distinct !DISubprogram(name: "__ISB", scope: !7439, file: !7439, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !256)
!8300 = distinct !DILocation(line: 684, column: 2, scope: !8283)
!8301 = !{i64 3735498}
!8302 = !DILocation(line: 686, column: 35, scope: !8283)
!8303 = !DILocation(line: 686, column: 24, scope: !8283)
!8304 = !DILocation(line: 688, column: 11, scope: !8283)
!8305 = !DILocation(line: 271, column: 3, scope: !8295, inlinedAt: !8306)
!8306 = distinct !DILocation(line: 689, column: 2, scope: !8283)
!8307 = !DILocation(line: 260, column: 3, scope: !8299, inlinedAt: !8308)
!8308 = distinct !DILocation(line: 690, column: 2, scope: !8283)
!8309 = !DILocation(line: 693, column: 45, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8283, file: !7740, line: 693, column: 6)
!8311 = !DILocation(line: 699, column: 1, scope: !8283)
!8312 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7740, file: !7740, line: 1107, type: !337, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2931, retainedNodes: !256)
!8313 = !DILocation(line: 1111, column: 11, scope: !8312)
!8314 = !DILocation(line: 1136, column: 1, scope: !8312)
!8315 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8316, file: !8316, line: 26, type: !337, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !8317)
!8316 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8317 = !{!8318}
!8318 = !DILocalVariable(name: "irq", scope: !8315, file: !8316, line: 28, type: !107)
!8319 = !DILocation(line: 0, scope: !8315)
!8320 = !DILocation(line: 30, column: 2, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8315, file: !8316, line: 30, column: 2)
!8322 = !DILocation(line: 31, column: 3, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !8316, line: 30, column: 39)
!8324 = distinct !DILexicalBlock(scope: !8321, file: !8316, line: 30, column: 2)
!8325 = !DILocation(line: 30, column: 35, scope: !8324)
!8326 = !DILocation(line: 30, column: 13, scope: !8324)
!8327 = distinct !{!8327, !8320, !8328}
!8328 = !DILocation(line: 32, column: 2, scope: !8321)
!8329 = !DILocation(line: 33, column: 1, scope: !8315)
!8330 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7473, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !8331)
!8331 = !{!8332, !8333}
!8332 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8330, file: !644, line: 1814, type: !920)
!8333 = !DILocalVariable(name: "priority", arg: 2, scope: !8330, file: !644, line: 1814, type: !108)
!8334 = !DILocation(line: 0, scope: !8330)
!8335 = !DILocation(line: 1816, column: 7, scope: !8330)
!8336 = !DILocation(line: 0, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8330, file: !644, line: 1816, column: 7)
!8338 = !DILocation(line: 1824, column: 1, scope: !8330)
!8339 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8340, file: !8340, line: 27, type: !8341, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !8444)
!8340 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8341 = !DISubroutineType(types: !8342)
!8342 = !{null, !8343}
!8343 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !8344)
!8344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8345, size: 32)
!8345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !8346)
!8346 = !{!8347, !8405, !8417, !8418, !8419, !8420, !8426, !8439}
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8345, file: !168, line: 247, baseType: !8348, size: 384)
!8348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !8349)
!8349 = !{!8350, !8374, !8381, !8382, !8383, !8392, !8393, !8394}
!8350 = !DIDerivedType(tag: DW_TAG_member, scope: !8348, file: !168, line: 60, baseType: !8351, size: 64)
!8351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8348, file: !168, line: 60, size: 64, elements: !8352)
!8352 = !{!8353, !8368}
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8351, file: !168, line: 61, baseType: !8354, size: 64)
!8354 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !8355)
!8355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !8356)
!8356 = !{!8357, !8363}
!8357 = !DIDerivedType(tag: DW_TAG_member, scope: !8355, file: !151, line: 38, baseType: !8358, size: 32)
!8358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8355, file: !151, line: 38, size: 32, elements: !8359)
!8359 = !{!8360, !8362}
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8358, file: !151, line: 39, baseType: !8361, size: 32)
!8361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8355, size: 32)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8358, file: !151, line: 40, baseType: !8361, size: 32)
!8363 = !DIDerivedType(tag: DW_TAG_member, scope: !8355, file: !151, line: 42, baseType: !8364, size: 32, offset: 32)
!8364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8355, file: !151, line: 42, size: 32, elements: !8365)
!8365 = !{!8366, !8367}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8364, file: !151, line: 43, baseType: !8361, size: 32)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8364, file: !151, line: 44, baseType: !8361, size: 32)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8351, file: !168, line: 62, baseType: !8369, size: 64)
!8369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !8370)
!8370 = !{!8371}
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8369, file: !180, line: 50, baseType: !8372, size: 64)
!8372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8373, size: 64, elements: !185)
!8373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8369, size: 32)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8348, file: !168, line: 68, baseType: !8375, size: 32, offset: 64)
!8375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8376, size: 32)
!8376 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !8377)
!8377 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !8378)
!8378 = !{!8379}
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8377, file: !146, line: 232, baseType: !8380, size: 64)
!8380 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !8355)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8348, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8348, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!8383 = !DIDerivedType(tag: DW_TAG_member, scope: !8348, file: !168, line: 90, baseType: !8384, size: 16, offset: 112)
!8384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8348, file: !168, line: 90, size: 16, elements: !8385)
!8385 = !{!8386, !8391}
!8386 = !DIDerivedType(tag: DW_TAG_member, scope: !8384, file: !168, line: 91, baseType: !8387, size: 16)
!8387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8384, file: !168, line: 91, size: 16, elements: !8388)
!8388 = !{!8389, !8390}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8387, file: !168, line: 96, baseType: !200, size: 8)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8387, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8384, file: !168, line: 100, baseType: !126, size: 16)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8348, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8348, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8348, file: !168, line: 131, baseType: !8395, size: 192, offset: 192)
!8395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !8396)
!8396 = !{!8397, !8398, !8404}
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8395, file: !146, line: 245, baseType: !8354, size: 64)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8395, file: !146, line: 246, baseType: !8399, size: 32, offset: 64)
!8399 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !8400)
!8400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8401, size: 32)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{null, !8403}
!8403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8395, size: 32)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8395, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8345, file: !168, line: 250, baseType: !8406, size: 288, offset: 384)
!8406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !8407)
!8407 = !{!8408, !8409, !8410, !8411, !8412, !8413, !8414, !8415, !8416}
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8406, file: !219, line: 26, baseType: !108, size: 32)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8406, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8406, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8406, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8406, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8406, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8406, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8406, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8406, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8345, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8345, file: !168, line: 256, baseType: !8376, size: 64, offset: 704)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8345, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!8420 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8345, file: !168, line: 300, baseType: !8421, size: 96, offset: 800)
!8421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !8422)
!8422 = !{!8423, !8424, !8425}
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8421, file: !168, line: 153, baseType: !22, size: 32)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8421, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8421, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8345, file: !168, line: 325, baseType: !8427, size: 32, offset: 896)
!8427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8428, size: 32)
!8428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !8429)
!8429 = !{!8430, !8436, !8437}
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8428, file: !142, line: 5074, baseType: !8431, size: 96)
!8431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !8432)
!8432 = !{!8433, !8434, !8435}
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8431, file: !245, line: 57, baseType: !248, size: 32)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8431, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8431, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8428, file: !142, line: 5075, baseType: !8376, size: 64, offset: 96)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8428, file: !142, line: 5076, baseType: !8438, offset: 160)
!8438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8345, file: !168, line: 343, baseType: !8440, size: 64, offset: 928)
!8440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !8441)
!8441 = !{!8442, !8443}
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8440, file: !219, line: 63, baseType: !108, size: 32)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8440, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!8444 = !{!8445}
!8445 = !DILocalVariable(name: "thread", arg: 1, scope: !8339, file: !8340, line: 27, type: !8343)
!8446 = !DILocation(line: 0, scope: !8339)
!8447 = !DILocation(line: 29, column: 6, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8339, file: !8340, line: 29, column: 6)
!8449 = !DILocation(line: 29, column: 15, scope: !8448)
!8450 = !DILocation(line: 29, column: 6, scope: !8339)
!8451 = !DILocation(line: 1031, column: 3, scope: !8452, inlinedAt: !8455)
!8452 = distinct !DISubprogram(name: "__get_IPSR", scope: !7439, file: !7439, line: 1027, type: !7520, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !8453)
!8453 = !{!8454}
!8454 = !DILocalVariable(name: "result", scope: !8452, file: !7439, line: 1029, type: !108)
!8455 = distinct !DILocation(line: 48, column: 10, scope: !8456, inlinedAt: !8460)
!8456 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8457, file: !8457, line: 46, type: !8458, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !256)
!8457 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8458 = !DISubroutineType(types: !8459)
!8459 = !{!136}
!8460 = distinct !DILocation(line: 30, column: 7, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !8340, line: 30, column: 7)
!8462 = distinct !DILexicalBlock(scope: !8448, file: !8340, line: 29, column: 26)
!8463 = !{i64 3724629}
!8464 = !DILocation(line: 0, scope: !8452, inlinedAt: !8455)
!8465 = !DILocation(line: 48, column: 9, scope: !8456, inlinedAt: !8460)
!8466 = !DILocation(line: 30, column: 7, scope: !8462)
!8467 = !DILocation(line: 42, column: 14, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8461, file: !8340, line: 30, column: 25)
!8469 = !DILocation(line: 48, column: 15, scope: !8468)
!8470 = !DILocation(line: 49, column: 3, scope: !8468)
!8471 = !DILocation(line: 52, column: 2, scope: !8339)
!8472 = !DILocation(line: 53, column: 1, scope: !8339)
!8473 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !508, file: !508, line: 127, type: !337, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !501, retainedNodes: !256)
!8474 = !DILocation(line: 134, column: 2, scope: !8473)
!8475 = !DILocation(line: 156, column: 1, scope: !8473)
!8476 = !DILocation(line: 0, scope: !507)
!8477 = !DILocation(line: 289, column: 36, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !507, file: !508, line: 285, column: 2)
!8479 = !DILocation(line: 289, column: 42, scope: !8478)
!8480 = !DILocation(line: 300, column: 36, scope: !507)
!8481 = !DILocation(line: 301, column: 35, scope: !507)
!8482 = !DILocation(line: 302, column: 37, scope: !507)
!8483 = !DILocation(line: 311, column: 2, scope: !507)
!8484 = !DILocation(line: 316, column: 1, scope: !507)
!8485 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !672, file: !672, line: 180, type: !337, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8486 = !DILocation(line: 188, column: 12, scope: !8485)
!8487 = !DILocation(line: 271, column: 3, scope: !8488, inlinedAt: !8489)
!8488 = distinct !DISubprogram(name: "__DSB", scope: !7439, file: !7439, line: 269, type: !337, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8489 = distinct !DILocation(line: 192, column: 2, scope: !8485)
!8490 = !{i64 3912531}
!8491 = !DILocation(line: 260, column: 3, scope: !8492, inlinedAt: !8493)
!8492 = distinct !DISubprogram(name: "__ISB", scope: !7439, file: !7439, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8493 = distinct !DILocation(line: 193, column: 2, scope: !8485)
!8494 = !{i64 3912248}
!8495 = !DILocation(line: 194, column: 1, scope: !8485)
!8496 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !672, file: !672, line: 199, type: !337, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8497 = !DILocation(line: 282, column: 3, scope: !8498, inlinedAt: !8499)
!8498 = distinct !DISubprogram(name: "__DMB", scope: !7439, file: !7439, line: 280, type: !337, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !256)
!8499 = distinct !DILocation(line: 202, column: 2, scope: !8496)
!8500 = !{i64 3912807}
!8501 = !DILocation(line: 205, column: 12, scope: !8496)
!8502 = !DILocation(line: 206, column: 1, scope: !8496)
!8503 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !672, file: !672, line: 275, type: !8504, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8517)
!8504 = !DISubroutineType(types: !8505)
!8505 = !{null, !8506, !2004, !7707, !7707}
!8506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8507, size: 32)
!8507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8508)
!8508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !618, line: 52, size: 96, elements: !8509)
!8509 = !{!8510, !8511, !8512}
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8508, file: !618, line: 53, baseType: !22, size: 32)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8508, file: !618, line: 54, baseType: !137, size: 32, offset: 32)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8508, file: !618, line: 55, baseType: !8513, size: 32, offset: 64)
!8513 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !624, line: 151, baseType: !8514)
!8514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 149, size: 32, elements: !8515)
!8515 = !{!8516}
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8514, file: !624, line: 150, baseType: !108, size: 32)
!8517 = !{!8518, !8519, !8520, !8521}
!8518 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8503, file: !672, line: 276, type: !8506)
!8519 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8503, file: !672, line: 276, type: !2004)
!8520 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8503, file: !672, line: 277, type: !7707)
!8521 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8503, file: !672, line: 277, type: !7707)
!8522 = !DILocation(line: 0, scope: !8503)
!8523 = !DILocation(line: 279, column: 6, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8503, file: !672, line: 279, column: 6)
!8525 = !DILocation(line: 285, column: 1, scope: !8503)
!8526 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8527, file: !8527, line: 220, type: !8528, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8530)
!8527 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8528 = !DISubroutineType(types: !8529)
!8529 = !{!107, !8506, !2004, !7707, !7707}
!8530 = !{!8531, !8532, !8533, !8534, !8535}
!8531 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8526, file: !8527, line: 221, type: !8506)
!8532 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8526, file: !8527, line: 221, type: !2004)
!8533 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8526, file: !8527, line: 222, type: !7707)
!8534 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8526, file: !8527, line: 223, type: !7707)
!8535 = !DILocalVariable(name: "mpu_reg_index", scope: !8526, file: !8527, line: 225, type: !107)
!8536 = !DILocation(line: 0, scope: !8526)
!8537 = !DILocation(line: 225, column: 22, scope: !8526)
!8538 = !DILocation(line: 233, column: 18, scope: !8526)
!8539 = !DILocation(line: 236, column: 23, scope: !8526)
!8540 = !DILocation(line: 236, column: 21, scope: !8526)
!8541 = !DILocation(line: 238, column: 2, scope: !8526)
!8542 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !672, file: !672, line: 105, type: !8543, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8545)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{!107, !8506, !190, !190, !136}
!8545 = !{!8546, !8547, !8548, !8549, !8550, !8551}
!8546 = !DILocalVariable(name: "regions", arg: 1, scope: !8542, file: !672, line: 106, type: !8506)
!8547 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8542, file: !672, line: 106, type: !190)
!8548 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8542, file: !672, line: 106, type: !190)
!8549 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8542, file: !672, line: 107, type: !136)
!8550 = !DILocalVariable(name: "i", scope: !8542, file: !672, line: 109, type: !107)
!8551 = !DILocalVariable(name: "reg_index", scope: !8542, file: !672, line: 110, type: !107)
!8552 = !DILocation(line: 0, scope: !8542)
!8553 = !DILocation(line: 110, column: 18, scope: !8542)
!8554 = !DILocation(line: 112, column: 16, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !672, line: 112, column: 2)
!8556 = distinct !DILexicalBlock(scope: !8542, file: !672, line: 112, column: 2)
!8557 = !DILocation(line: 112, column: 2, scope: !8556)
!8558 = !DILocation(line: 113, column: 7, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !672, line: 113, column: 7)
!8560 = distinct !DILexicalBlock(scope: !8555, file: !672, line: 112, column: 36)
!8561 = !DILocation(line: 113, column: 18, scope: !8559)
!8562 = !DILocation(line: 113, column: 23, scope: !8559)
!8563 = !DILocation(line: 113, column: 7, scope: !8560)
!8564 = !DILocation(line: 118, column: 23, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8560, file: !672, line: 118, column: 7)
!8566 = !DILocation(line: 119, column: 7, scope: !8565)
!8567 = !DILocation(line: 118, column: 7, scope: !8560)
!8568 = !DILocation(line: 120, column: 4, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !672, line: 120, column: 4)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !672, line: 120, column: 4)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !672, line: 120, column: 4)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !672, line: 120, column: 4)
!8573 = distinct !DILexicalBlock(scope: !8565, file: !672, line: 119, column: 45)
!8574 = !DILocation(line: 121, column: 4, scope: !8573)
!8575 = !DILocation(line: 124, column: 36, scope: !8560)
!8576 = !DILocation(line: 124, column: 15, scope: !8560)
!8577 = !DILocation(line: 126, column: 17, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8560, file: !672, line: 126, column: 7)
!8579 = !DILocation(line: 126, column: 7, scope: !8560)
!8580 = !DILocation(line: 131, column: 12, scope: !8560)
!8581 = !DILocation(line: 132, column: 2, scope: !8560)
!8582 = !DILocation(line: 112, column: 32, scope: !8555)
!8583 = distinct !{!8583, !8557, !8584}
!8584 = !DILocation(line: 132, column: 2, scope: !8556)
!8585 = !DILocation(line: 135, column: 1, scope: !8542)
!8586 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8527, file: !8527, line: 63, type: !8587, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8589)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!107, !8506}
!8589 = !{!8590, !8591}
!8590 = !DILocalVariable(name: "part", arg: 1, scope: !8586, file: !8527, line: 63, type: !8506)
!8591 = !DILocalVariable(name: "partition_is_valid", scope: !8586, file: !8527, line: 70, type: !107)
!8592 = !DILocation(line: 0, scope: !8586)
!8593 = !DILocation(line: 71, column: 11, scope: !8586)
!8594 = !DILocation(line: 71, column: 37, scope: !8586)
!8595 = !DILocation(line: 72, column: 3, scope: !8586)
!8596 = !DILocation(line: 71, column: 30, scope: !8586)
!8597 = !DILocation(line: 75, column: 11, scope: !8586)
!8598 = !DILocation(line: 75, column: 17, scope: !8586)
!8599 = !DILocation(line: 75, column: 38, scope: !8586)
!8600 = !DILocation(line: 77, column: 2, scope: !8586)
!8601 = distinct !DISubprogram(name: "mpu_configure_region", scope: !672, file: !672, line: 79, type: !8602, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8604)
!8602 = !DISubroutineType(types: !8603)
!8603 = !{!107, !2004, !8506}
!8604 = !{!8605, !8606, !8607}
!8605 = !DILocalVariable(name: "index", arg: 1, scope: !8601, file: !672, line: 79, type: !2004)
!8606 = !DILocalVariable(name: "new_region", arg: 2, scope: !8601, file: !672, line: 80, type: !8506)
!8607 = !DILocalVariable(name: "region_conf", scope: !8601, file: !672, line: 82, type: !661)
!8608 = !DILocation(line: 0, scope: !8601)
!8609 = !DILocation(line: 82, column: 2, scope: !8601)
!8610 = !DILocation(line: 82, column: 24, scope: !8601)
!8611 = !DILocation(line: 87, column: 33, scope: !8601)
!8612 = !DILocation(line: 87, column: 14, scope: !8601)
!8613 = !DILocation(line: 87, column: 19, scope: !8601)
!8614 = !DILocation(line: 91, column: 55, scope: !8601)
!8615 = !DILocation(line: 92, column: 16, scope: !8601)
!8616 = !DILocation(line: 92, column: 53, scope: !8601)
!8617 = !DILocation(line: 91, column: 2, scope: !8601)
!8618 = !DILocation(line: 95, column: 9, scope: !8601)
!8619 = !DILocation(line: 97, column: 1, scope: !8601)
!8620 = !DILocation(line: 95, column: 2, scope: !8601)
!8621 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8527, file: !8527, line: 113, type: !8622, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8627)
!8622 = !DISubroutineType(types: !8623)
!8623 = !{null, !8624, !8625, !108, !108}
!8624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!8625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8626, size: 32)
!8626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8513)
!8627 = !{!8628, !8629, !8630, !8631}
!8628 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8621, file: !8527, line: 114, type: !8624)
!8629 = !DILocalVariable(name: "attr", arg: 2, scope: !8621, file: !8527, line: 115, type: !8625)
!8630 = !DILocalVariable(name: "base", arg: 3, scope: !8621, file: !8527, line: 115, type: !108)
!8631 = !DILocalVariable(name: "size", arg: 4, scope: !8621, file: !8527, line: 115, type: !108)
!8632 = !DILocation(line: 0, scope: !8621)
!8633 = !DILocation(line: 127, column: 23, scope: !8621)
!8634 = !DILocation(line: 127, column: 35, scope: !8621)
!8635 = !DILocation(line: 127, column: 33, scope: !8621)
!8636 = !DILocation(line: 127, column: 10, scope: !8621)
!8637 = !DILocation(line: 127, column: 15, scope: !8621)
!8638 = !DILocation(line: 129, column: 1, scope: !8621)
!8639 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !672, file: !672, line: 57, type: !8640, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8642)
!8640 = !DISubroutineType(types: !8641)
!8641 = !{!107, !2004, !659}
!8642 = !{!8643, !8644}
!8643 = !DILocalVariable(name: "index", arg: 1, scope: !8639, file: !672, line: 57, type: !2004)
!8644 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8639, file: !672, line: 58, type: !659)
!8645 = !DILocation(line: 0, scope: !8639)
!8646 = !DILocation(line: 61, column: 6, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8639, file: !672, line: 61, column: 6)
!8648 = !DILocation(line: 61, column: 12, scope: !8647)
!8649 = !DILocation(line: 61, column: 6, scope: !8639)
!8650 = !DILocation(line: 64, column: 3, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !672, line: 64, column: 3)
!8652 = distinct !DILexicalBlock(scope: !8653, file: !672, line: 64, column: 3)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !672, line: 64, column: 3)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !672, line: 64, column: 3)
!8655 = distinct !DILexicalBlock(scope: !8647, file: !672, line: 61, column: 40)
!8656 = !DILocation(line: 65, column: 3, scope: !8655)
!8657 = !DILocation(line: 71, column: 2, scope: !8639)
!8658 = !DILocation(line: 73, column: 2, scope: !8639)
!8659 = !DILocation(line: 74, column: 1, scope: !8639)
!8660 = distinct !DISubprogram(name: "region_init", scope: !8527, file: !8527, line: 29, type: !8661, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8663)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{null, !7707, !659}
!8663 = !{!8664, !8665}
!8664 = !DILocalVariable(name: "index", arg: 1, scope: !8660, file: !8527, line: 29, type: !7707)
!8665 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8660, file: !8527, line: 30, type: !659)
!8666 = !DILocation(line: 0, scope: !8660)
!8667 = !DILocation(line: 33, column: 2, scope: !8660)
!8668 = !DILocation(line: 47, column: 28, scope: !8660)
!8669 = !DILocation(line: 47, column: 33, scope: !8660)
!8670 = !DILocation(line: 48, column: 26, scope: !8660)
!8671 = !DILocation(line: 47, column: 12, scope: !8660)
!8672 = !DILocation(line: 49, column: 32, scope: !8660)
!8673 = !DILocation(line: 49, column: 37, scope: !8660)
!8674 = !DILocation(line: 49, column: 12, scope: !8660)
!8675 = !DILocation(line: 53, column: 1, scope: !8660)
!8676 = distinct !DISubprogram(name: "set_region_number", scope: !8677, file: !8677, line: 32, type: !7530, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8678)
!8677 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8678 = !{!8679}
!8679 = !DILocalVariable(name: "index", arg: 1, scope: !8676, file: !8677, line: 32, type: !108)
!8680 = !DILocation(line: 0, scope: !8676)
!8681 = !DILocation(line: 34, column: 11, scope: !8676)
!8682 = !DILocation(line: 35, column: 1, scope: !8676)
!8683 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8527, file: !8527, line: 88, type: !8684, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8686)
!8684 = !DISubroutineType(types: !8685)
!8685 = !{!108, !108}
!8686 = !{!8687}
!8687 = !DILocalVariable(name: "size", arg: 1, scope: !8683, file: !8527, line: 88, type: !108)
!8688 = !DILocation(line: 0, scope: !8683)
!8689 = !DILocation(line: 91, column: 11, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8683, file: !8527, line: 91, column: 6)
!8691 = !DILocation(line: 91, column: 6, scope: !8683)
!8692 = !DILocation(line: 100, column: 11, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8683, file: !8527, line: 100, column: 6)
!8694 = !DILocation(line: 100, column: 6, scope: !8683)
!8695 = !DILocation(line: 104, column: 35, scope: !8683)
!8696 = !DILocation(line: 104, column: 16, scope: !8683)
!8697 = !DILocation(line: 104, column: 50, scope: !8683)
!8698 = !DILocation(line: 104, column: 72, scope: !8683)
!8699 = !DILocation(line: 104, column: 2, scope: !8683)
!8700 = !DILocation(line: 106, column: 1, scope: !8683)
!8701 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !672, file: !672, line: 307, type: !8702, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8704)
!8702 = !DISubroutineType(types: !8703)
!8703 = !{null, !8506, !190}
!8704 = !{!8705, !8706}
!8705 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8701, file: !672, line: 308, type: !8506)
!8706 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8701, file: !672, line: 308, type: !190)
!8707 = !DILocation(line: 0, scope: !8701)
!8708 = !DILocation(line: 310, column: 6, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8701, file: !672, line: 310, column: 6)
!8710 = !DILocation(line: 316, column: 1, scope: !8701)
!8711 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8527, file: !8527, line: 249, type: !8712, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8714)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{!107, !8506, !190}
!8714 = !{!8715, !8716, !8717, !8718}
!8715 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8711, file: !8527, line: 250, type: !8506)
!8716 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8711, file: !8527, line: 250, type: !190)
!8717 = !DILocalVariable(name: "mpu_reg_index", scope: !8711, file: !8527, line: 252, type: !107)
!8718 = !DILocalVariable(name: "i", scope: !8719, file: !8527, line: 264, type: !107)
!8719 = distinct !DILexicalBlock(scope: !8720, file: !8527, line: 264, column: 3)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !8527, line: 261, column: 32)
!8721 = distinct !DILexicalBlock(scope: !8711, file: !8527, line: 261, column: 6)
!8722 = !DILocation(line: 0, scope: !8711)
!8723 = !DILocation(line: 252, column: 22, scope: !8711)
!8724 = !DILocation(line: 258, column: 18, scope: !8711)
!8725 = !DILocation(line: 261, column: 20, scope: !8721)
!8726 = !DILocation(line: 261, column: 6, scope: !8711)
!8727 = !DILocation(line: 0, scope: !8719)
!8728 = !DILocation(line: 265, column: 4, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !8527, line: 264, column: 59)
!8730 = distinct !DILexicalBlock(scope: !8719, file: !8527, line: 264, column: 3)
!8731 = !DILocation(line: 264, column: 55, scope: !8730)
!8732 = !DILocation(line: 264, column: 33, scope: !8730)
!8733 = !DILocation(line: 264, column: 3, scope: !8719)
!8734 = distinct !{!8734, !8733, !8735}
!8735 = !DILocation(line: 266, column: 3, scope: !8719)
!8736 = !DILocation(line: 269, column: 2, scope: !8711)
!8737 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8738, file: !8738, line: 218, type: !7530, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8739)
!8738 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8739 = !{!8740}
!8740 = !DILocalVariable(name: "rnr", arg: 1, scope: !8737, file: !8738, line: 218, type: !108)
!8741 = !DILocation(line: 0, scope: !8737)
!8742 = !DILocation(line: 220, column: 12, scope: !8737)
!8743 = !DILocation(line: 221, column: 13, scope: !8737)
!8744 = !DILocation(line: 222, column: 1, scope: !8737)
!8745 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !672, file: !672, line: 326, type: !8746, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !639, retainedNodes: !8748)
!8746 = !DISubroutineType(types: !8747)
!8747 = !{!107}
!8748 = !{!8749}
!8749 = !DILocalVariable(name: "r_index", scope: !8745, file: !672, line: 328, type: !108)
!8750 = !DILocation(line: 330, column: 17, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8745, file: !672, line: 330, column: 6)
!8752 = !DILocation(line: 330, column: 29, scope: !8751)
!8753 = !DILocation(line: 330, column: 6, scope: !8745)
!8754 = !DILocation(line: 347, column: 2, scope: !8745)
!8755 = !DILocation(line: 0, scope: !8745)
!8756 = !DILocation(line: 364, column: 29, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !672, line: 364, column: 2)
!8758 = distinct !DILexicalBlock(scope: !8745, file: !672, line: 364, column: 2)
!8759 = !DILocation(line: 364, column: 2, scope: !8758)
!8760 = !DILocation(line: 365, column: 25, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8757, file: !672, line: 364, column: 66)
!8762 = !DILocation(line: 365, column: 3, scope: !8761)
!8763 = !DILocation(line: 364, column: 62, scope: !8757)
!8764 = distinct !{!8764, !8759, !8765}
!8765 = !DILocation(line: 366, column: 2, scope: !8758)
!8766 = !DILocation(line: 369, column: 23, scope: !8745)
!8767 = !DILocation(line: 369, column: 21, scope: !8745)
!8768 = !DILocation(line: 372, column: 2, scope: !8745)
!8769 = !DILocation(line: 443, column: 2, scope: !8745)
!8770 = !DILocation(line: 444, column: 1, scope: !8745)
!8771 = distinct !DISubprogram(name: "strcpy", scope: !8772, file: !8772, line: 20, type: !8773, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8777)
!8772 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!283, !8775, !8776}
!8775 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !283)
!8776 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !121)
!8777 = !{!8778, !8779, !8780}
!8778 = !DILocalVariable(name: "d", arg: 1, scope: !8771, file: !8772, line: 20, type: !8775)
!8779 = !DILocalVariable(name: "s", arg: 2, scope: !8771, file: !8772, line: 20, type: !8776)
!8780 = !DILocalVariable(name: "dest", scope: !8771, file: !8772, line: 22, type: !283)
!8781 = !DILocation(line: 0, scope: !8771)
!8782 = !DILocation(line: 24, column: 9, scope: !8771)
!8783 = !DILocation(line: 24, column: 12, scope: !8771)
!8784 = !DILocation(line: 24, column: 2, scope: !8771)
!8785 = !DILocation(line: 25, column: 6, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8771, file: !8772, line: 24, column: 21)
!8787 = !DILocation(line: 26, column: 4, scope: !8786)
!8788 = !DILocation(line: 27, column: 4, scope: !8786)
!8789 = distinct !{!8789, !8784, !8790}
!8790 = !DILocation(line: 28, column: 2, scope: !8771)
!8791 = !DILocation(line: 30, column: 5, scope: !8771)
!8792 = !DILocation(line: 32, column: 2, scope: !8771)
!8793 = distinct !DISubprogram(name: "strncpy", scope: !8772, file: !8772, line: 42, type: !8794, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8796)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!283, !8775, !8776, !137}
!8796 = !{!8797, !8798, !8799, !8800}
!8797 = !DILocalVariable(name: "d", arg: 1, scope: !8793, file: !8772, line: 42, type: !8775)
!8798 = !DILocalVariable(name: "s", arg: 2, scope: !8793, file: !8772, line: 42, type: !8776)
!8799 = !DILocalVariable(name: "n", arg: 3, scope: !8793, file: !8772, line: 42, type: !137)
!8800 = !DILocalVariable(name: "dest", scope: !8793, file: !8772, line: 44, type: !283)
!8801 = !DILocation(line: 0, scope: !8793)
!8802 = !DILocation(line: 46, column: 12, scope: !8793)
!8803 = !DILocation(line: 46, column: 17, scope: !8793)
!8804 = !DILocation(line: 46, column: 20, scope: !8793)
!8805 = !DILocation(line: 46, column: 23, scope: !8793)
!8806 = !DILocation(line: 46, column: 2, scope: !8793)
!8807 = !DILocation(line: 47, column: 6, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8793, file: !8772, line: 46, column: 32)
!8809 = !DILocation(line: 48, column: 4, scope: !8808)
!8810 = !DILocation(line: 49, column: 4, scope: !8808)
!8811 = !DILocation(line: 50, column: 4, scope: !8808)
!8812 = distinct !{!8812, !8806, !8813}
!8813 = !DILocation(line: 51, column: 2, scope: !8793)
!8814 = !DILocation(line: 54, column: 6, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8793, file: !8772, line: 53, column: 16)
!8816 = !DILocation(line: 55, column: 4, scope: !8815)
!8817 = !DILocation(line: 56, column: 4, scope: !8815)
!8818 = !DILocation(line: 53, column: 11, scope: !8793)
!8819 = !DILocation(line: 53, column: 2, scope: !8793)
!8820 = distinct !{!8820, !8819, !8821}
!8821 = !DILocation(line: 57, column: 2, scope: !8793)
!8822 = !DILocation(line: 59, column: 2, scope: !8793)
!8823 = distinct !DISubprogram(name: "strchr", scope: !8772, file: !8772, line: 69, type: !8824, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8826)
!8824 = !DISubroutineType(types: !8825)
!8825 = !{!283, !121, !107}
!8826 = !{!8827, !8828, !8829}
!8827 = !DILocalVariable(name: "s", arg: 1, scope: !8823, file: !8772, line: 69, type: !121)
!8828 = !DILocalVariable(name: "c", arg: 2, scope: !8823, file: !8772, line: 69, type: !107)
!8829 = !DILocalVariable(name: "tmp", scope: !8823, file: !8772, line: 71, type: !123)
!8830 = !DILocation(line: 0, scope: !8823)
!8831 = !DILocation(line: 73, column: 2, scope: !8823)
!8832 = !DILocation(line: 73, column: 10, scope: !8823)
!8833 = !DILocation(line: 73, column: 13, scope: !8823)
!8834 = !DILocation(line: 73, column: 21, scope: !8823)
!8835 = !DILocation(line: 74, column: 4, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8823, file: !8772, line: 73, column: 38)
!8837 = distinct !{!8837, !8831, !8838}
!8838 = !DILocation(line: 75, column: 2, scope: !8823)
!8839 = !DILocation(line: 77, column: 9, scope: !8823)
!8840 = !DILocation(line: 77, column: 2, scope: !8823)
!8841 = distinct !DISubprogram(name: "strrchr", scope: !8772, file: !8772, line: 87, type: !8824, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8842)
!8842 = !{!8843, !8844, !8845}
!8843 = !DILocalVariable(name: "s", arg: 1, scope: !8841, file: !8772, line: 87, type: !121)
!8844 = !DILocalVariable(name: "c", arg: 2, scope: !8841, file: !8772, line: 87, type: !107)
!8845 = !DILocalVariable(name: "match", scope: !8841, file: !8772, line: 89, type: !283)
!8846 = !DILocation(line: 0, scope: !8841)
!8847 = !DILocation(line: 91, column: 2, scope: !8841)
!8848 = !DILocation(line: 92, column: 7, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !8772, line: 92, column: 7)
!8850 = distinct !DILexicalBlock(scope: !8841, file: !8772, line: 91, column: 5)
!8851 = !DILocation(line: 92, column: 10, scope: !8849)
!8852 = !DILocation(line: 92, column: 7, scope: !8850)
!8853 = !DILocation(line: 95, column: 13, scope: !8841)
!8854 = !DILocation(line: 95, column: 2, scope: !8850)
!8855 = distinct !{!8855, !8847, !8856}
!8856 = !DILocation(line: 95, column: 15, scope: !8841)
!8857 = !DILocation(line: 97, column: 2, scope: !8841)
!8858 = distinct !DISubprogram(name: "strlen", scope: !8772, file: !8772, line: 107, type: !8859, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8861)
!8859 = !DISubroutineType(types: !8860)
!8860 = !{!137, !121}
!8861 = !{!8862, !8863}
!8862 = !DILocalVariable(name: "s", arg: 1, scope: !8858, file: !8772, line: 107, type: !121)
!8863 = !DILocalVariable(name: "n", scope: !8858, file: !8772, line: 109, type: !137)
!8864 = !DILocation(line: 0, scope: !8858)
!8865 = !DILocation(line: 111, column: 9, scope: !8858)
!8866 = !DILocation(line: 111, column: 12, scope: !8858)
!8867 = !DILocation(line: 111, column: 2, scope: !8858)
!8868 = !DILocation(line: 112, column: 4, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8858, file: !8772, line: 111, column: 21)
!8870 = !DILocation(line: 113, column: 4, scope: !8869)
!8871 = distinct !{!8871, !8867, !8872}
!8872 = !DILocation(line: 114, column: 2, scope: !8858)
!8873 = !DILocation(line: 116, column: 2, scope: !8858)
!8874 = distinct !DISubprogram(name: "strnlen", scope: !8772, file: !8772, line: 126, type: !8875, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!137, !121, !137}
!8877 = !{!8878, !8879, !8880}
!8878 = !DILocalVariable(name: "s", arg: 1, scope: !8874, file: !8772, line: 126, type: !121)
!8879 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8874, file: !8772, line: 126, type: !137)
!8880 = !DILocalVariable(name: "n", scope: !8874, file: !8772, line: 128, type: !137)
!8881 = !DILocation(line: 0, scope: !8874)
!8882 = !DILocation(line: 130, column: 9, scope: !8874)
!8883 = !DILocation(line: 130, column: 12, scope: !8874)
!8884 = !DILocation(line: 130, column: 20, scope: !8874)
!8885 = !DILocation(line: 130, column: 2, scope: !8874)
!8886 = !DILocation(line: 131, column: 4, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8874, file: !8772, line: 130, column: 35)
!8888 = !DILocation(line: 132, column: 4, scope: !8887)
!8889 = distinct !{!8889, !8885, !8890}
!8890 = !DILocation(line: 133, column: 2, scope: !8874)
!8891 = !DILocation(line: 135, column: 2, scope: !8874)
!8892 = distinct !DISubprogram(name: "strcmp", scope: !8772, file: !8772, line: 145, type: !8893, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8895)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{!107, !121, !121}
!8895 = !{!8896, !8897}
!8896 = !DILocalVariable(name: "s1", arg: 1, scope: !8892, file: !8772, line: 145, type: !121)
!8897 = !DILocalVariable(name: "s2", arg: 2, scope: !8892, file: !8772, line: 145, type: !121)
!8898 = !DILocation(line: 0, scope: !8892)
!8899 = !DILocation(line: 147, column: 10, scope: !8892)
!8900 = !DILocation(line: 147, column: 17, scope: !8892)
!8901 = !DILocation(line: 147, column: 14, scope: !8892)
!8902 = !DILocation(line: 147, column: 22, scope: !8892)
!8903 = !DILocation(line: 148, column: 5, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8892, file: !8772, line: 147, column: 40)
!8905 = !DILocation(line: 149, column: 5, scope: !8904)
!8906 = distinct !{!8906, !8907, !8908}
!8907 = !DILocation(line: 147, column: 2, scope: !8892)
!8908 = !DILocation(line: 150, column: 2, scope: !8892)
!8909 = !DILocation(line: 152, column: 9, scope: !8892)
!8910 = !DILocation(line: 152, column: 15, scope: !8892)
!8911 = !DILocation(line: 152, column: 13, scope: !8892)
!8912 = !DILocation(line: 152, column: 2, scope: !8892)
!8913 = distinct !DISubprogram(name: "strncmp", scope: !8772, file: !8772, line: 162, type: !8914, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8916)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{!107, !121, !121, !137}
!8916 = !{!8917, !8918, !8919}
!8917 = !DILocalVariable(name: "s1", arg: 1, scope: !8913, file: !8772, line: 162, type: !121)
!8918 = !DILocalVariable(name: "s2", arg: 2, scope: !8913, file: !8772, line: 162, type: !121)
!8919 = !DILocalVariable(name: "n", arg: 3, scope: !8913, file: !8772, line: 162, type: !137)
!8920 = !DILocation(line: 0, scope: !8913)
!8921 = !DILocation(line: 164, column: 17, scope: !8913)
!8922 = !DILocation(line: 164, column: 21, scope: !8913)
!8923 = !DILocation(line: 164, column: 28, scope: !8913)
!8924 = !DILocation(line: 164, column: 25, scope: !8913)
!8925 = !DILocation(line: 164, column: 33, scope: !8913)
!8926 = !DILocation(line: 165, column: 5, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8913, file: !8772, line: 164, column: 51)
!8928 = !DILocation(line: 166, column: 5, scope: !8927)
!8929 = !DILocation(line: 167, column: 4, scope: !8927)
!8930 = distinct !{!8930, !8931, !8932}
!8931 = !DILocation(line: 164, column: 2, scope: !8913)
!8932 = !DILocation(line: 168, column: 2, scope: !8913)
!8933 = !DILocation(line: 170, column: 25, scope: !8913)
!8934 = !DILocation(line: 170, column: 31, scope: !8913)
!8935 = !DILocation(line: 170, column: 29, scope: !8913)
!8936 = !DILocation(line: 170, column: 9, scope: !8913)
!8937 = !DILocation(line: 170, column: 2, scope: !8913)
!8938 = distinct !DISubprogram(name: "strtok_r", scope: !8772, file: !8772, line: 180, type: !8939, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8941)
!8939 = !DISubroutineType(types: !8940)
!8940 = !{!283, !283, !121, !400}
!8941 = !{!8942, !8943, !8944, !8945, !8946}
!8942 = !DILocalVariable(name: "str", arg: 1, scope: !8938, file: !8772, line: 180, type: !283)
!8943 = !DILocalVariable(name: "sep", arg: 2, scope: !8938, file: !8772, line: 180, type: !121)
!8944 = !DILocalVariable(name: "state", arg: 3, scope: !8938, file: !8772, line: 180, type: !400)
!8945 = !DILocalVariable(name: "start", scope: !8938, file: !8772, line: 182, type: !283)
!8946 = !DILocalVariable(name: "end", scope: !8938, file: !8772, line: 182, type: !283)
!8947 = !DILocation(line: 0, scope: !8938)
!8948 = !DILocation(line: 184, column: 10, scope: !8938)
!8949 = !DILocation(line: 184, column: 22, scope: !8938)
!8950 = !DILocation(line: 187, column: 9, scope: !8938)
!8951 = !DILocation(line: 187, column: 16, scope: !8938)
!8952 = !DILocation(line: 187, column: 19, scope: !8938)
!8953 = !DILocation(line: 187, column: 2, scope: !8938)
!8954 = !DILocation(line: 188, column: 8, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8938, file: !8772, line: 187, column: 40)
!8956 = distinct !{!8956, !8953, !8957}
!8957 = !DILocation(line: 189, column: 2, scope: !8938)
!8958 = !DILocation(line: 198, column: 9, scope: !8938)
!8959 = !DILocation(line: 198, column: 18, scope: !8938)
!8960 = !DILocation(line: 198, column: 17, scope: !8938)
!8961 = !DILocation(line: 198, column: 2, scope: !8938)
!8962 = !DILocation(line: 199, column: 6, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8938, file: !8772, line: 198, column: 37)
!8964 = !DILocation(line: 198, column: 14, scope: !8938)
!8965 = distinct !{!8965, !8961, !8966}
!8966 = !DILocation(line: 200, column: 2, scope: !8938)
!8967 = !DILocation(line: 203, column: 8, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !8772, line: 202, column: 20)
!8969 = distinct !DILexicalBlock(scope: !8938, file: !8772, line: 202, column: 6)
!8970 = !DILocation(line: 204, column: 16, scope: !8968)
!8971 = !DILocation(line: 205, column: 2, scope: !8968)
!8972 = !DILocation(line: 210, column: 1, scope: !8938)
!8973 = distinct !DISubprogram(name: "strcat", scope: !8772, file: !8772, line: 212, type: !8773, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8974)
!8974 = !{!8975, !8976}
!8975 = !DILocalVariable(name: "dest", arg: 1, scope: !8973, file: !8772, line: 212, type: !8775)
!8976 = !DILocalVariable(name: "src", arg: 2, scope: !8973, file: !8772, line: 212, type: !8776)
!8977 = !DILocation(line: 0, scope: !8973)
!8978 = !DILocation(line: 214, column: 16, scope: !8973)
!8979 = !DILocation(line: 214, column: 14, scope: !8973)
!8980 = !DILocation(line: 214, column: 2, scope: !8973)
!8981 = !DILocation(line: 215, column: 2, scope: !8973)
!8982 = distinct !DISubprogram(name: "strncat", scope: !8772, file: !8772, line: 218, type: !8794, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !8983)
!8983 = !{!8984, !8985, !8986, !8987, !8988}
!8984 = !DILocalVariable(name: "dest", arg: 1, scope: !8982, file: !8772, line: 218, type: !8775)
!8985 = !DILocalVariable(name: "src", arg: 2, scope: !8982, file: !8772, line: 218, type: !8776)
!8986 = !DILocalVariable(name: "n", arg: 3, scope: !8982, file: !8772, line: 219, type: !137)
!8987 = !DILocalVariable(name: "orig_dest", scope: !8982, file: !8772, line: 221, type: !283)
!8988 = !DILocalVariable(name: "len", scope: !8982, file: !8772, line: 222, type: !137)
!8989 = !DILocation(line: 0, scope: !8982)
!8990 = !DILocation(line: 222, column: 15, scope: !8982)
!8991 = !DILocation(line: 224, column: 7, scope: !8982)
!8992 = !DILocation(line: 225, column: 14, scope: !8982)
!8993 = !DILocation(line: 225, column: 19, scope: !8982)
!8994 = !DILocation(line: 225, column: 11, scope: !8982)
!8995 = !DILocation(line: 225, column: 23, scope: !8982)
!8996 = !DILocation(line: 225, column: 28, scope: !8982)
!8997 = !DILocation(line: 225, column: 2, scope: !8982)
!8998 = !DILocation(line: 226, column: 17, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8982, file: !8772, line: 225, column: 38)
!9000 = !DILocation(line: 226, column: 8, scope: !8999)
!9001 = !DILocation(line: 226, column: 11, scope: !8999)
!9002 = distinct !{!9002, !8997, !9003}
!9003 = !DILocation(line: 227, column: 2, scope: !8982)
!9004 = !DILocation(line: 228, column: 8, scope: !8982)
!9005 = !DILocation(line: 230, column: 2, scope: !8982)
!9006 = distinct !DISubprogram(name: "memcmp", scope: !8772, file: !8772, line: 239, type: !9007, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !9009)
!9007 = !DISubroutineType(types: !9008)
!9008 = !{!107, !13, !13, !137}
!9009 = !{!9010, !9011, !9012, !9013, !9014}
!9010 = !DILocalVariable(name: "m1", arg: 1, scope: !9006, file: !8772, line: 239, type: !13)
!9011 = !DILocalVariable(name: "m2", arg: 2, scope: !9006, file: !8772, line: 239, type: !13)
!9012 = !DILocalVariable(name: "n", arg: 3, scope: !9006, file: !8772, line: 239, type: !137)
!9013 = !DILocalVariable(name: "c1", scope: !9006, file: !8772, line: 241, type: !121)
!9014 = !DILocalVariable(name: "c2", scope: !9006, file: !8772, line: 242, type: !121)
!9015 = !DILocation(line: 0, scope: !9006)
!9016 = !DILocation(line: 244, column: 7, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9006, file: !8772, line: 244, column: 6)
!9018 = !DILocation(line: 244, column: 6, scope: !9006)
!9019 = !DILocation(line: 248, column: 10, scope: !9006)
!9020 = !DILocation(line: 248, column: 14, scope: !9006)
!9021 = !DILocation(line: 248, column: 19, scope: !9006)
!9022 = !DILocation(line: 248, column: 2, scope: !9006)
!9023 = !DILocation(line: 248, column: 23, scope: !9006)
!9024 = !DILocation(line: 248, column: 30, scope: !9006)
!9025 = !DILocation(line: 248, column: 27, scope: !9006)
!9026 = !DILocation(line: 249, column: 5, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9006, file: !8772, line: 248, column: 36)
!9028 = !DILocation(line: 250, column: 5, scope: !9027)
!9029 = distinct !{!9029, !9022, !9030}
!9030 = !DILocation(line: 251, column: 2, scope: !9006)
!9031 = !DILocation(line: 253, column: 9, scope: !9006)
!9032 = !DILocation(line: 253, column: 15, scope: !9006)
!9033 = !DILocation(line: 253, column: 13, scope: !9006)
!9034 = !DILocation(line: 253, column: 2, scope: !9006)
!9035 = !DILocation(line: 254, column: 1, scope: !9006)
!9036 = distinct !DISubprogram(name: "memmove", scope: !8772, file: !8772, line: 263, type: !9037, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !9039)
!9037 = !DISubroutineType(types: !9038)
!9038 = !{!106, !106, !13, !137}
!9039 = !{!9040, !9041, !9042, !9043, !9044}
!9040 = !DILocalVariable(name: "d", arg: 1, scope: !9036, file: !8772, line: 263, type: !106)
!9041 = !DILocalVariable(name: "s", arg: 2, scope: !9036, file: !8772, line: 263, type: !13)
!9042 = !DILocalVariable(name: "n", arg: 3, scope: !9036, file: !8772, line: 263, type: !137)
!9043 = !DILocalVariable(name: "dest", scope: !9036, file: !8772, line: 265, type: !283)
!9044 = !DILocalVariable(name: "src", scope: !9036, file: !8772, line: 266, type: !121)
!9045 = !DILocation(line: 0, scope: !9036)
!9046 = !DILocation(line: 268, column: 21, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9036, file: !8772, line: 268, column: 6)
!9048 = !DILocation(line: 268, column: 28, scope: !9047)
!9049 = !DILocation(line: 268, column: 6, scope: !9036)
!9050 = !DILocation(line: 280, column: 12, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9047, file: !8772, line: 278, column: 9)
!9052 = !DILocation(line: 280, column: 3, scope: !9051)
!9053 = !DILocation(line: 275, column: 5, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !8772, line: 274, column: 17)
!9055 = distinct !DILexicalBlock(scope: !9047, file: !8772, line: 268, column: 33)
!9056 = !DILocation(line: 276, column: 14, scope: !9054)
!9057 = !DILocation(line: 276, column: 4, scope: !9054)
!9058 = !DILocation(line: 276, column: 12, scope: !9054)
!9059 = !DILocation(line: 274, column: 12, scope: !9055)
!9060 = !DILocation(line: 274, column: 3, scope: !9055)
!9061 = distinct !{!9061, !9060, !9062}
!9062 = !DILocation(line: 277, column: 3, scope: !9055)
!9063 = !DILocation(line: 281, column: 12, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9051, file: !8772, line: 280, column: 17)
!9065 = !DILocation(line: 281, column: 10, scope: !9064)
!9066 = !DILocation(line: 282, column: 8, scope: !9064)
!9067 = !DILocation(line: 283, column: 7, scope: !9064)
!9068 = !DILocation(line: 284, column: 5, scope: !9064)
!9069 = distinct !{!9069, !9052, !9070}
!9070 = !DILocation(line: 285, column: 3, scope: !9051)
!9071 = !DILocation(line: 288, column: 2, scope: !9036)
!9072 = distinct !DISubprogram(name: "memcpy", scope: !8772, file: !8772, line: 298, type: !9073, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !9077)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{!106, !9075, !9076, !137}
!9075 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!9076 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9077 = !{!9078, !9079, !9080, !9081, !9082}
!9078 = !DILocalVariable(name: "d", arg: 1, scope: !9072, file: !8772, line: 298, type: !9075)
!9079 = !DILocalVariable(name: "s", arg: 2, scope: !9072, file: !8772, line: 298, type: !9076)
!9080 = !DILocalVariable(name: "n", arg: 3, scope: !9072, file: !8772, line: 298, type: !137)
!9081 = !DILocalVariable(name: "d_byte", scope: !9072, file: !8772, line: 302, type: !1125)
!9082 = !DILocalVariable(name: "s_byte", scope: !9072, file: !8772, line: 303, type: !3078)
!9083 = !DILocation(line: 0, scope: !9072)
!9084 = !DILocation(line: 337, column: 11, scope: !9072)
!9085 = !DILocation(line: 337, column: 2, scope: !9072)
!9086 = !DILocation(line: 338, column: 25, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9072, file: !8772, line: 337, column: 16)
!9088 = !DILocation(line: 338, column: 17, scope: !9087)
!9089 = !DILocation(line: 338, column: 11, scope: !9087)
!9090 = !DILocation(line: 338, column: 15, scope: !9087)
!9091 = !DILocation(line: 339, column: 4, scope: !9087)
!9092 = distinct !{!9092, !9085, !9093}
!9093 = !DILocation(line: 340, column: 2, scope: !9072)
!9094 = !DILocation(line: 342, column: 2, scope: !9072)
!9095 = distinct !DISubprogram(name: "memset", scope: !8772, file: !8772, line: 352, type: !9096, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !9098)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!106, !106, !107, !137}
!9098 = !{!9099, !9100, !9101, !9102, !9103}
!9099 = !DILocalVariable(name: "buf", arg: 1, scope: !9095, file: !8772, line: 352, type: !106)
!9100 = !DILocalVariable(name: "c", arg: 2, scope: !9095, file: !8772, line: 352, type: !107)
!9101 = !DILocalVariable(name: "n", arg: 3, scope: !9095, file: !8772, line: 352, type: !137)
!9102 = !DILocalVariable(name: "d_byte", scope: !9095, file: !8772, line: 356, type: !1125)
!9103 = !DILocalVariable(name: "c_byte", scope: !9095, file: !8772, line: 357, type: !191)
!9104 = !DILocation(line: 0, scope: !9095)
!9105 = !DILocation(line: 357, column: 25, scope: !9095)
!9106 = !DILocation(line: 389, column: 11, scope: !9095)
!9107 = !DILocation(line: 389, column: 2, scope: !9095)
!9108 = !DILocation(line: 390, column: 11, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9095, file: !8772, line: 389, column: 16)
!9110 = !DILocation(line: 390, column: 15, scope: !9109)
!9111 = !DILocation(line: 391, column: 4, scope: !9109)
!9112 = distinct !{!9112, !9107, !9113}
!9113 = !DILocation(line: 392, column: 2, scope: !9095)
!9114 = !DILocation(line: 394, column: 2, scope: !9095)
!9115 = distinct !DISubprogram(name: "memchr", scope: !8772, file: !8772, line: 404, type: !9116, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !9118)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{!106, !13, !107, !137}
!9118 = !{!9119, !9120, !9121, !9122}
!9119 = !DILocalVariable(name: "s", arg: 1, scope: !9115, file: !8772, line: 404, type: !13)
!9120 = !DILocalVariable(name: "c", arg: 2, scope: !9115, file: !8772, line: 404, type: !107)
!9121 = !DILocalVariable(name: "n", arg: 3, scope: !9115, file: !8772, line: 404, type: !137)
!9122 = !DILocalVariable(name: "p", scope: !9123, file: !8772, line: 407, type: !3078)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !8772, line: 406, column: 14)
!9124 = distinct !DILexicalBlock(scope: !9115, file: !8772, line: 406, column: 6)
!9125 = !DILocation(line: 0, scope: !9115)
!9126 = !DILocation(line: 406, column: 8, scope: !9124)
!9127 = !DILocation(line: 406, column: 6, scope: !9115)
!9128 = !DILocation(line: 409, column: 3, scope: !9123)
!9129 = !DILocation(line: 0, scope: !9123)
!9130 = !DILocation(line: 410, column: 8, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9132, file: !8772, line: 410, column: 8)
!9132 = distinct !DILexicalBlock(scope: !9123, file: !8772, line: 409, column: 6)
!9133 = !DILocation(line: 410, column: 13, scope: !9131)
!9134 = !DILocation(line: 410, column: 8, scope: !9132)
!9135 = distinct !{!9135, !9128, !9136}
!9136 = !DILocation(line: 414, column: 20, scope: !9123)
!9137 = !DILocation(line: 417, column: 2, scope: !9115)
!9138 = !DILocation(line: 418, column: 1, scope: !9115)
!9139 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !682, file: !682, line: 23, type: !4632, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9140)
!9140 = !{!9141}
!9141 = !DILocalVariable(name: "hook", arg: 1, scope: !9139, file: !682, line: 23, type: !417)
!9142 = !DILocation(line: 0, scope: !9139)
!9143 = !DILocation(line: 25, column: 15, scope: !9139)
!9144 = !DILocation(line: 26, column: 1, scope: !9139)
!9145 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !682, file: !682, line: 14, type: !418, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9146)
!9146 = !{!9147}
!9147 = !DILocalVariable(name: "c", arg: 1, scope: !9145, file: !682, line: 14, type: !107)
!9148 = !DILocation(line: 0, scope: !9145)
!9149 = !DILocation(line: 18, column: 2, scope: !9145)
!9150 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !682, file: !682, line: 28, type: !9151, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9153)
!9151 = !DISubroutineType(types: !9152)
!9152 = !{!107, !107, !678}
!9153 = !{!9154, !9155}
!9154 = !DILocalVariable(name: "c", arg: 1, scope: !9150, file: !682, line: 28, type: !107)
!9155 = !DILocalVariable(name: "stream", arg: 2, scope: !9150, file: !682, line: 28, type: !678)
!9156 = !DILocation(line: 0, scope: !9150)
!9157 = !DILocation(line: 30, column: 27, scope: !9150)
!9158 = !DILocation(line: 30, column: 50, scope: !9150)
!9159 = !DILocation(line: 30, column: 9, scope: !9150)
!9160 = !DILocation(line: 30, column: 2, scope: !9150)
!9161 = distinct !DISubprogram(name: "fputc", scope: !682, file: !682, line: 41, type: !9151, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9162)
!9162 = !{!9163, !9164}
!9163 = !DILocalVariable(name: "c", arg: 1, scope: !9161, file: !682, line: 41, type: !107)
!9164 = !DILocalVariable(name: "stream", arg: 2, scope: !9161, file: !682, line: 41, type: !678)
!9165 = !DILocation(line: 0, scope: !9161)
!9166 = !DILocation(line: 43, column: 9, scope: !9161)
!9167 = !DILocation(line: 43, column: 2, scope: !9161)
!9168 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9169, file: !9169, line: 72, type: !9151, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9170)
!9169 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!9170 = !{!9171, !9172}
!9171 = !DILocalVariable(name: "c", arg: 1, scope: !9168, file: !9169, line: 72, type: !107)
!9172 = !DILocalVariable(name: "stream", arg: 2, scope: !9168, file: !9169, line: 72, type: !678)
!9173 = !DILocation(line: 0, scope: !9168)
!9174 = !DILocation(line: 81, column: 2, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9168, file: !9169, line: 81, column: 2)
!9176 = !{i64 2155124754}
!9177 = !DILocation(line: 82, column: 9, scope: !9168)
!9178 = !DILocation(line: 82, column: 2, scope: !9168)
!9179 = distinct !DISubprogram(name: "fputs", scope: !682, file: !682, line: 46, type: !9180, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9183)
!9180 = !DISubroutineType(types: !9181)
!9181 = !{!107, !8776, !9182}
!9182 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !678)
!9183 = !{!9184, !9185, !9186, !9187}
!9184 = !DILocalVariable(name: "s", arg: 1, scope: !9179, file: !682, line: 46, type: !8776)
!9185 = !DILocalVariable(name: "stream", arg: 2, scope: !9179, file: !682, line: 46, type: !9182)
!9186 = !DILocalVariable(name: "len", scope: !9179, file: !682, line: 48, type: !107)
!9187 = !DILocalVariable(name: "ret", scope: !9179, file: !682, line: 49, type: !107)
!9188 = !DILocation(line: 0, scope: !9179)
!9189 = !DILocation(line: 48, column: 12, scope: !9179)
!9190 = !DILocation(line: 51, column: 8, scope: !9179)
!9191 = !DILocation(line: 53, column: 13, scope: !9179)
!9192 = !DILocation(line: 53, column: 9, scope: !9179)
!9193 = !DILocation(line: 53, column: 2, scope: !9179)
!9194 = distinct !DISubprogram(name: "fwrite", scope: !682, file: !682, line: 99, type: !9195, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9197)
!9195 = !DISubroutineType(types: !9196)
!9196 = !{!137, !9076, !137, !137, !9182}
!9197 = !{!9198, !9199, !9200, !9201}
!9198 = !DILocalVariable(name: "ptr", arg: 1, scope: !9194, file: !682, line: 99, type: !9076)
!9199 = !DILocalVariable(name: "size", arg: 2, scope: !9194, file: !682, line: 99, type: !137)
!9200 = !DILocalVariable(name: "nitems", arg: 3, scope: !9194, file: !682, line: 99, type: !137)
!9201 = !DILocalVariable(name: "stream", arg: 4, scope: !9194, file: !682, line: 100, type: !9182)
!9202 = !DILocation(line: 0, scope: !9194)
!9203 = !DILocation(line: 102, column: 9, scope: !9194)
!9204 = !DILocation(line: 102, column: 2, scope: !9194)
!9205 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9169, file: !9169, line: 96, type: !9195, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9206)
!9206 = !{!9207, !9208, !9209, !9210}
!9207 = !DILocalVariable(name: "ptr", arg: 1, scope: !9205, file: !9169, line: 96, type: !9076)
!9208 = !DILocalVariable(name: "size", arg: 2, scope: !9205, file: !9169, line: 96, type: !137)
!9209 = !DILocalVariable(name: "nitems", arg: 3, scope: !9205, file: !9169, line: 96, type: !137)
!9210 = !DILocalVariable(name: "stream", arg: 4, scope: !9205, file: !9169, line: 96, type: !9182)
!9211 = !DILocation(line: 0, scope: !9205)
!9212 = !DILocation(line: 107, column: 2, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9205, file: !9169, line: 107, column: 2)
!9214 = !{i64 2155124858}
!9215 = !DILocation(line: 108, column: 9, scope: !9205)
!9216 = !DILocation(line: 108, column: 2, scope: !9205)
!9217 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !682, file: !682, line: 56, type: !9195, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9218)
!9218 = !{!9219, !9220, !9221, !9222, !9223, !9224, !9225, !9226}
!9219 = !DILocalVariable(name: "ptr", arg: 1, scope: !9217, file: !682, line: 56, type: !9076)
!9220 = !DILocalVariable(name: "size", arg: 2, scope: !9217, file: !682, line: 56, type: !137)
!9221 = !DILocalVariable(name: "nitems", arg: 3, scope: !9217, file: !682, line: 57, type: !137)
!9222 = !DILocalVariable(name: "stream", arg: 4, scope: !9217, file: !682, line: 57, type: !9182)
!9223 = !DILocalVariable(name: "i", scope: !9217, file: !682, line: 59, type: !137)
!9224 = !DILocalVariable(name: "j", scope: !9217, file: !682, line: 60, type: !137)
!9225 = !DILocalVariable(name: "p", scope: !9217, file: !682, line: 61, type: !3078)
!9226 = !DILabel(scope: !9217, name: "done", file: !682, line: 82)
!9227 = !DILocation(line: 0, scope: !9217)
!9228 = !DILocation(line: 63, column: 14, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9217, file: !682, line: 63, column: 6)
!9230 = !DILocation(line: 63, column: 24, scope: !9229)
!9231 = !DILocation(line: 72, column: 3, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9217, file: !682, line: 70, column: 5)
!9233 = !DILocation(line: 0, scope: !9232)
!9234 = !DILocation(line: 73, column: 8, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !682, line: 73, column: 8)
!9236 = distinct !DILexicalBlock(scope: !9232, file: !682, line: 72, column: 6)
!9237 = !DILocation(line: 73, column: 29, scope: !9235)
!9238 = !DILocation(line: 73, column: 27, scope: !9235)
!9239 = !DILocation(line: 73, column: 21, scope: !9235)
!9240 = !DILocation(line: 73, column: 33, scope: !9235)
!9241 = !DILocation(line: 73, column: 8, scope: !9236)
!9242 = !DILocation(line: 76, column: 5, scope: !9236)
!9243 = !DILocation(line: 77, column: 14, scope: !9232)
!9244 = !DILocation(line: 77, column: 3, scope: !9236)
!9245 = distinct !{!9245, !9231, !9246}
!9246 = !DILocation(line: 77, column: 17, scope: !9232)
!9247 = !DILocation(line: 79, column: 4, scope: !9232)
!9248 = !DILocation(line: 80, column: 13, scope: !9217)
!9249 = !DILocation(line: 80, column: 2, scope: !9232)
!9250 = distinct !{!9250, !9251, !9252}
!9251 = !DILocation(line: 70, column: 2, scope: !9217)
!9252 = !DILocation(line: 80, column: 16, scope: !9217)
!9253 = !DILocation(line: 82, column: 1, scope: !9217)
!9254 = !DILocation(line: 83, column: 17, scope: !9217)
!9255 = !DILocation(line: 83, column: 2, scope: !9217)
!9256 = !DILocation(line: 84, column: 1, scope: !9217)
!9257 = distinct !DISubprogram(name: "puts", scope: !682, file: !682, line: 106, type: !9258, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!107, !121}
!9260 = !{!9261}
!9261 = !DILocalVariable(name: "s", arg: 1, scope: !9257, file: !682, line: 106, type: !121)
!9262 = !DILocation(line: 0, scope: !9257)
!9263 = !DILocation(line: 108, column: 6, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9257, file: !682, line: 108, column: 6)
!9265 = !DILocation(line: 108, column: 23, scope: !9264)
!9266 = !DILocation(line: 108, column: 6, scope: !9257)
!9267 = !DILocation(line: 112, column: 9, scope: !9257)
!9268 = !DILocation(line: 112, column: 29, scope: !9257)
!9269 = !DILocation(line: 112, column: 2, scope: !9257)
!9270 = !DILocation(line: 113, column: 1, scope: !9257)
!9271 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !714, file: !714, line: 12, type: !9272, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9278)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{!9274, !109}
!9274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !9275)
!9275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !9276)
!9276 = !{!9277}
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9275, file: !103, line: 66, baseType: !102, size: 64)
!9278 = !{!9279, !9280}
!9279 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9271, file: !714, line: 12, type: !109)
!9280 = !DILocalVariable(name: "now_ticks", scope: !9271, file: !714, line: 14, type: !104)
!9281 = !DILocation(line: 0, scope: !9271)
!9282 = !DILocation(line: 14, column: 22, scope: !9271)
!9283 = !DILocation(line: 16, column: 9, scope: !9271)
!9284 = !DILocation(line: 17, column: 1, scope: !9271)
!9285 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !714, file: !714, line: 103, type: !9286, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9434)
!9286 = !DISubroutineType(types: !9287)
!9287 = !{!107, !9288, !13, !9274}
!9288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9289, size: 32)
!9289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9290)
!9290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !9291)
!9291 = !{!9292, !9293, !9294, !9295, !9296, !9297, !9405}
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9290, file: !117, line: 32, baseType: !120, size: 32)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9290, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9290, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9290, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9290, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9290, file: !117, line: 56, baseType: !9298, size: 32, offset: 160)
!9298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9299, size: 32)
!9299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !9300)
!9300 = !{!9301, !9320, !9403, !9404}
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9299, file: !142, line: 2722, baseType: !9302, size: 64)
!9302 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !9303)
!9303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !9304)
!9304 = !{!9305}
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9303, file: !146, line: 232, baseType: !9306, size: 64)
!9306 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !9307)
!9307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !9308)
!9308 = !{!9309, !9315}
!9309 = !DIDerivedType(tag: DW_TAG_member, scope: !9307, file: !151, line: 38, baseType: !9310, size: 32)
!9310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9307, file: !151, line: 38, size: 32, elements: !9311)
!9311 = !{!9312, !9314}
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9310, file: !151, line: 39, baseType: !9313, size: 32)
!9313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9307, size: 32)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9310, file: !151, line: 40, baseType: !9313, size: 32)
!9315 = !DIDerivedType(tag: DW_TAG_member, scope: !9307, file: !151, line: 42, baseType: !9316, size: 32, offset: 32)
!9316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9307, file: !151, line: 42, size: 32, elements: !9317)
!9317 = !{!9318, !9319}
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9316, file: !151, line: 43, baseType: !9313, size: 32)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9316, file: !151, line: 44, baseType: !9313, size: 32)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9299, file: !142, line: 2724, baseType: !9321, size: 32, offset: 64)
!9321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9322, size: 32)
!9322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !9323)
!9323 = !{!9324, !9364, !9376, !9377, !9378, !9379, !9385, !9398}
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9322, file: !168, line: 247, baseType: !9325, size: 384)
!9325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !9326)
!9326 = !{!9327, !9338, !9340, !9341, !9342, !9351, !9352, !9353}
!9327 = !DIDerivedType(tag: DW_TAG_member, scope: !9325, file: !168, line: 60, baseType: !9328, size: 64)
!9328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9325, file: !168, line: 60, size: 64, elements: !9329)
!9329 = !{!9330, !9332}
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9328, file: !168, line: 61, baseType: !9331, size: 64)
!9331 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !9307)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9328, file: !168, line: 62, baseType: !9333, size: 64)
!9333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !9334)
!9334 = !{!9335}
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9333, file: !180, line: 50, baseType: !9336, size: 64)
!9336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9337, size: 64, elements: !185)
!9337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9333, size: 32)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9325, file: !168, line: 68, baseType: !9339, size: 32, offset: 64)
!9339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9302, size: 32)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9325, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9325, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!9342 = !DIDerivedType(tag: DW_TAG_member, scope: !9325, file: !168, line: 90, baseType: !9343, size: 16, offset: 112)
!9343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9325, file: !168, line: 90, size: 16, elements: !9344)
!9344 = !{!9345, !9350}
!9345 = !DIDerivedType(tag: DW_TAG_member, scope: !9343, file: !168, line: 91, baseType: !9346, size: 16)
!9346 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9343, file: !168, line: 91, size: 16, elements: !9347)
!9347 = !{!9348, !9349}
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9346, file: !168, line: 96, baseType: !200, size: 8)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9346, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9343, file: !168, line: 100, baseType: !126, size: 16)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9325, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9325, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9325, file: !168, line: 131, baseType: !9354, size: 192, offset: 192)
!9354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !9355)
!9355 = !{!9356, !9357, !9363}
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9354, file: !146, line: 245, baseType: !9331, size: 64)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9354, file: !146, line: 246, baseType: !9358, size: 32, offset: 64)
!9358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !9359)
!9359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9360, size: 32)
!9360 = !DISubroutineType(types: !9361)
!9361 = !{null, !9362}
!9362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9354, size: 32)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9354, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9322, file: !168, line: 250, baseType: !9365, size: 288, offset: 384)
!9365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !9366)
!9366 = !{!9367, !9368, !9369, !9370, !9371, !9372, !9373, !9374, !9375}
!9367 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9365, file: !219, line: 26, baseType: !108, size: 32)
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9365, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9365, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9365, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9365, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9365, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9365, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9365, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9365, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9322, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9322, file: !168, line: 256, baseType: !9302, size: 64, offset: 704)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9322, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9322, file: !168, line: 300, baseType: !9380, size: 96, offset: 800)
!9380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !9381)
!9381 = !{!9382, !9383, !9384}
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9380, file: !168, line: 153, baseType: !22, size: 32)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9380, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9380, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9322, file: !168, line: 325, baseType: !9386, size: 32, offset: 896)
!9386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9387, size: 32)
!9387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !9388)
!9388 = !{!9389, !9395, !9396}
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9387, file: !142, line: 5074, baseType: !9390, size: 96)
!9390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !9391)
!9391 = !{!9392, !9393, !9394}
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9390, file: !245, line: 57, baseType: !248, size: 32)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9390, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9390, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9387, file: !142, line: 5075, baseType: !9302, size: 64, offset: 96)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9387, file: !142, line: 5076, baseType: !9397, offset: 160)
!9397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9322, file: !168, line: 343, baseType: !9399, size: 64, offset: 928)
!9399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !9400)
!9400 = !{!9401, !9402}
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9399, file: !219, line: 63, baseType: !108, size: 32)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9399, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9299, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9299, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9290, file: !117, line: 67, baseType: !9406, size: 32, offset: 192)
!9406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9407, size: 32)
!9407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9408)
!9408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9409, size: 32)
!9409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9410)
!9410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !9411)
!9411 = !{!9412, !9413, !9414, !9429}
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9410, file: !117, line: 88, baseType: !120, size: 32)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9410, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9410, file: !117, line: 93, baseType: !9415, size: 32, offset: 64)
!9415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9416)
!9416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9417, size: 32)
!9417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !9418)
!9418 = !{!9419, !9420, !9421, !9422, !9423, !9424, !9425, !9426, !9427, !9428}
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9417, file: !142, line: 4206, baseType: !9302, size: 64)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9417, file: !142, line: 4208, baseType: !9397, offset: 64)
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9417, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9417, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9417, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9417, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9417, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9417, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9417, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9417, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9410, file: !117, line: 96, baseType: !9430, size: 32, offset: 96)
!9430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9431)
!9431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9432, size: 32)
!9432 = !DISubroutineType(types: !9433)
!9433 = !{null, !9288}
!9434 = !{!9435, !9436, !9437, !9438, !9439}
!9435 = !DILocalVariable(name: "chan", arg: 1, scope: !9285, file: !714, line: 103, type: !9288)
!9436 = !DILocalVariable(name: "msg", arg: 2, scope: !9285, file: !714, line: 103, type: !13)
!9437 = !DILocalVariable(name: "timeout", arg: 3, scope: !9285, file: !714, line: 103, type: !9274)
!9438 = !DILocalVariable(name: "err", scope: !9285, file: !714, line: 105, type: !107)
!9439 = !DILocalVariable(name: "end_ticks", scope: !9285, file: !714, line: 106, type: !109)
!9440 = !DILocation(line: 0, scope: !9285)
!9441 = !DILocation(line: 106, column: 23, scope: !9285)
!9442 = !DILocation(line: 112, column: 12, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9285, file: !714, line: 112, column: 6)
!9444 = !DILocation(line: 112, column: 22, scope: !9443)
!9445 = !DILocation(line: 112, column: 30, scope: !9443)
!9446 = !DILocation(line: 112, column: 61, scope: !9443)
!9447 = !DILocation(line: 112, column: 55, scope: !9443)
!9448 = !DILocation(line: 112, column: 34, scope: !9443)
!9449 = !DILocation(line: 112, column: 6, scope: !9285)
!9450 = !DILocation(line: 116, column: 27, scope: !9285)
!9451 = !DILocation(line: 116, column: 8, scope: !9285)
!9452 = !DILocation(line: 117, column: 6, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9285, file: !714, line: 117, column: 6)
!9454 = !DILocation(line: 117, column: 6, scope: !9285)
!9455 = !DILocation(line: 121, column: 15, scope: !9285)
!9456 = !DILocation(line: 121, column: 35, scope: !9285)
!9457 = !DILocation(line: 121, column: 29, scope: !9285)
!9458 = !DILocation(line: 121, column: 2, scope: !9285)
!9459 = !DILocation(line: 123, column: 8, scope: !9285)
!9460 = !DILocation(line: 125, column: 23, scope: !9285)
!9461 = !DILocation(line: 125, column: 2, scope: !9285)
!9462 = !DILocation(line: 127, column: 2, scope: !9285)
!9463 = !DILocation(line: 128, column: 1, scope: !9285)
!9464 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3734, file: !3734, line: 927, type: !9465, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9467)
!9465 = !DISubroutineType(types: !9466)
!9466 = !{!107, !9298, !9274}
!9467 = !{!9468, !9469}
!9468 = !DILocalVariable(name: "mutex", arg: 1, scope: !9464, file: !3734, line: 927, type: !9298)
!9469 = !DILocalVariable(name: "timeout", arg: 2, scope: !9464, file: !3734, line: 927, type: !9274)
!9470 = !DILocation(line: 0, scope: !9464)
!9471 = !DILocation(line: 936, column: 2, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9464, file: !3734, line: 936, column: 2)
!9473 = !{i64 2155066315}
!9474 = !DILocation(line: 937, column: 9, scope: !9464)
!9475 = !DILocation(line: 937, column: 2, scope: !9464)
!9476 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !714, file: !714, line: 66, type: !9477, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9479)
!9477 = !DISubroutineType(types: !9478)
!9478 = !{!107, !9288, !109}
!9479 = !{!9480, !9481, !9482, !9483, !9484, !9486}
!9480 = !DILocalVariable(name: "chan", arg: 1, scope: !9476, file: !714, line: 66, type: !9288)
!9481 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9476, file: !714, line: 66, type: !109)
!9482 = !DILocalVariable(name: "last_error", scope: !9476, file: !714, line: 68, type: !107)
!9483 = !DILocalVariable(name: "err", scope: !9476, file: !714, line: 68, type: !107)
!9484 = !DILocalVariable(name: "obs", scope: !9485, file: !714, line: 70, type: !9406)
!9485 = distinct !DILexicalBlock(scope: !9476, file: !714, line: 70, column: 2)
!9486 = !DILocalVariable(name: "obs", scope: !9487, file: !714, line: 81, type: !9406)
!9487 = distinct !DILexicalBlock(scope: !9476, file: !714, line: 81, column: 2)
!9488 = !DILocation(line: 0, scope: !9476)
!9489 = !DILocation(line: 70, column: 54, scope: !9485)
!9490 = !DILocation(line: 0, scope: !9485)
!9491 = !DILocation(line: 70, column: 65, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9485, file: !714, line: 70, column: 2)
!9493 = !DILocation(line: 70, column: 70, scope: !9492)
!9494 = !DILocation(line: 70, column: 2, scope: !9485)
!9495 = !DILocation(line: 81, column: 54, scope: !9487)
!9496 = !DILocation(line: 81, column: 65, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9487, file: !714, line: 81, column: 2)
!9498 = !DILocation(line: 0, scope: !9487)
!9499 = !DILocation(line: 81, column: 70, scope: !9497)
!9500 = !DILocation(line: 81, column: 2, scope: !9487)
!9501 = !DILocation(line: 71, column: 15, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !714, line: 71, column: 7)
!9503 = distinct !DILexicalBlock(scope: !9492, file: !714, line: 70, column: 86)
!9504 = !DILocation(line: 71, column: 23, scope: !9502)
!9505 = !DILocation(line: 71, column: 35, scope: !9502)
!9506 = !DILocation(line: 71, column: 44, scope: !9502)
!9507 = !DILocation(line: 71, column: 7, scope: !9503)
!9508 = !DILocation(line: 72, column: 4, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9502, file: !714, line: 71, column: 54)
!9510 = !DILocation(line: 73, column: 3, scope: !9509)
!9511 = !DILocation(line: 70, column: 79, scope: !9492)
!9512 = distinct !{!9512, !9494, !9513}
!9513 = !DILocation(line: 74, column: 2, scope: !9485)
!9514 = !DILocation(line: 100, column: 2, scope: !9476)
!9515 = !DILocation(line: 82, column: 15, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !714, line: 82, column: 7)
!9517 = distinct !DILexicalBlock(scope: !9497, file: !714, line: 81, column: 86)
!9518 = !DILocation(line: 82, column: 23, scope: !9516)
!9519 = !DILocation(line: 82, column: 35, scope: !9516)
!9520 = !DILocation(line: 82, column: 41, scope: !9516)
!9521 = !DILocation(line: 82, column: 7, scope: !9517)
!9522 = !DILocation(line: 83, column: 43, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9516, file: !714, line: 82, column: 51)
!9524 = !DILocation(line: 83, column: 10, scope: !9523)
!9525 = !DILocation(line: 86, column: 8, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9523, file: !714, line: 86, column: 8)
!9527 = !DILocation(line: 86, column: 8, scope: !9523)
!9528 = !DILocation(line: 87, column: 5, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9530, file: !714, line: 87, column: 5)
!9530 = distinct !DILexicalBlock(scope: !9531, file: !714, line: 87, column: 5)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !714, line: 87, column: 5)
!9532 = distinct !DILexicalBlock(scope: !9533, file: !714, line: 87, column: 5)
!9533 = distinct !DILexicalBlock(scope: !9526, file: !714, line: 86, column: 13)
!9534 = !DILocation(line: 90, column: 4, scope: !9533)
!9535 = !DILocation(line: 81, column: 79, scope: !9497)
!9536 = distinct !{!9536, !9500, !9537}
!9537 = !DILocation(line: 92, column: 2, scope: !9487)
!9538 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3734, file: !3734, line: 944, type: !9539, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9541)
!9539 = !DISubroutineType(types: !9540)
!9540 = !{!107, !9298}
!9541 = !{!9542}
!9542 = !DILocalVariable(name: "mutex", arg: 1, scope: !9538, file: !3734, line: 944, type: !9298)
!9543 = !DILocation(line: 0, scope: !9538)
!9544 = !DILocation(line: 952, column: 2, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9538, file: !3734, line: 952, column: 2)
!9546 = !{i64 2155066383}
!9547 = !DILocation(line: 953, column: 9, scope: !9538)
!9548 = !DILocation(line: 953, column: 2, scope: !9538)
!9549 = distinct !DISubprogram(name: "k_msgq_put", scope: !3734, file: !3734, line: 1129, type: !9550, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9552)
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!107, !9416, !13, !9274}
!9552 = !{!9553, !9554, !9555}
!9553 = !DILocalVariable(name: "msgq", arg: 1, scope: !9549, file: !3734, line: 1129, type: !9416)
!9554 = !DILocalVariable(name: "data", arg: 2, scope: !9549, file: !3734, line: 1129, type: !13)
!9555 = !DILocalVariable(name: "timeout", arg: 3, scope: !9549, file: !3734, line: 1129, type: !9274)
!9556 = !DILocation(line: 0, scope: !9549)
!9557 = !DILocation(line: 1139, column: 2, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9549, file: !3734, line: 1139, column: 2)
!9559 = !{i64 2155067131}
!9560 = !DILocation(line: 1140, column: 9, scope: !9549)
!9561 = !DILocation(line: 1140, column: 2, scope: !9549)
!9562 = distinct !DISubprogram(name: "zbus_chan_read", scope: !714, file: !714, line: 130, type: !9563, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9565)
!9563 = !DISubroutineType(types: !9564)
!9564 = !{!107, !9288, !106, !9274}
!9565 = !{!9566, !9567, !9568, !9569}
!9566 = !DILocalVariable(name: "chan", arg: 1, scope: !9562, file: !714, line: 130, type: !9288)
!9567 = !DILocalVariable(name: "msg", arg: 2, scope: !9562, file: !714, line: 130, type: !106)
!9568 = !DILocalVariable(name: "timeout", arg: 3, scope: !9562, file: !714, line: 130, type: !9274)
!9569 = !DILocalVariable(name: "err", scope: !9562, file: !714, line: 132, type: !107)
!9570 = !DILocation(line: 0, scope: !9562)
!9571 = !DILocation(line: 138, column: 27, scope: !9562)
!9572 = !DILocation(line: 138, column: 8, scope: !9562)
!9573 = !DILocation(line: 139, column: 6, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9562, file: !714, line: 139, column: 6)
!9575 = !DILocation(line: 139, column: 6, scope: !9562)
!9576 = !DILocation(line: 143, column: 20, scope: !9562)
!9577 = !DILocation(line: 143, column: 35, scope: !9562)
!9578 = !DILocation(line: 143, column: 29, scope: !9562)
!9579 = !DILocation(line: 143, column: 2, scope: !9562)
!9580 = !DILocation(line: 145, column: 30, scope: !9562)
!9581 = !DILocation(line: 145, column: 9, scope: !9562)
!9582 = !DILocation(line: 145, column: 2, scope: !9562)
!9583 = !DILocation(line: 146, column: 1, scope: !9562)
!9584 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !714, file: !714, line: 148, type: !9585, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9587)
!9585 = !DISubroutineType(types: !9586)
!9586 = !{!107, !9288, !9274}
!9587 = !{!9588, !9589, !9590, !9591}
!9588 = !DILocalVariable(name: "chan", arg: 1, scope: !9584, file: !714, line: 148, type: !9288)
!9589 = !DILocalVariable(name: "timeout", arg: 2, scope: !9584, file: !714, line: 148, type: !9274)
!9590 = !DILocalVariable(name: "err", scope: !9584, file: !714, line: 150, type: !107)
!9591 = !DILocalVariable(name: "end_ticks", scope: !9584, file: !714, line: 151, type: !109)
!9592 = !DILocation(line: 0, scope: !9584)
!9593 = !DILocation(line: 151, column: 23, scope: !9584)
!9594 = !DILocation(line: 156, column: 27, scope: !9584)
!9595 = !DILocation(line: 156, column: 8, scope: !9584)
!9596 = !DILocation(line: 157, column: 6, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9584, file: !714, line: 157, column: 6)
!9598 = !DILocation(line: 157, column: 6, scope: !9584)
!9599 = !DILocation(line: 161, column: 8, scope: !9584)
!9600 = !DILocation(line: 163, column: 23, scope: !9584)
!9601 = !DILocation(line: 163, column: 2, scope: !9584)
!9602 = !DILocation(line: 165, column: 2, scope: !9584)
!9603 = !DILocation(line: 166, column: 1, scope: !9584)
!9604 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !714, file: !714, line: 168, type: !9585, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9605)
!9605 = !{!9606, !9607, !9608}
!9606 = !DILocalVariable(name: "chan", arg: 1, scope: !9604, file: !714, line: 168, type: !9288)
!9607 = !DILocalVariable(name: "timeout", arg: 2, scope: !9604, file: !714, line: 168, type: !9274)
!9608 = !DILocalVariable(name: "err", scope: !9604, file: !714, line: 173, type: !107)
!9609 = !DILocation(line: 0, scope: !9604)
!9610 = !DILocation(line: 173, column: 31, scope: !9604)
!9611 = !DILocation(line: 173, column: 12, scope: !9604)
!9612 = !DILocation(line: 180, column: 1, scope: !9604)
!9613 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !714, file: !714, line: 182, type: !9614, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9616)
!9614 = !DISubroutineType(types: !9615)
!9615 = !{!107, !9288}
!9616 = !{!9617, !9618}
!9617 = !DILocalVariable(name: "chan", arg: 1, scope: !9613, file: !714, line: 182, type: !9288)
!9618 = !DILocalVariable(name: "err", scope: !9613, file: !714, line: 187, type: !107)
!9619 = !DILocation(line: 0, scope: !9613)
!9620 = !DILocation(line: 187, column: 33, scope: !9613)
!9621 = !DILocation(line: 187, column: 12, scope: !9613)
!9622 = !DILocation(line: 189, column: 2, scope: !9613)
!9623 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !714, file: !714, line: 192, type: !9624, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9627)
!9624 = !DISubroutineType(types: !9625)
!9625 = !{!107, !9408, !9626, !9274}
!9626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9288, size: 32)
!9627 = !{!9628, !9629, !9630}
!9628 = !DILocalVariable(name: "sub", arg: 1, scope: !9623, file: !714, line: 192, type: !9408)
!9629 = !DILocalVariable(name: "chan", arg: 2, scope: !9623, file: !714, line: 192, type: !9626)
!9630 = !DILocalVariable(name: "timeout", arg: 3, scope: !9623, file: !714, line: 193, type: !9274)
!9631 = !DILocation(line: 0, scope: !9623)
!9632 = !DILocation(line: 199, column: 11, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9623, file: !714, line: 199, column: 6)
!9634 = !DILocation(line: 199, column: 17, scope: !9633)
!9635 = !DILocation(line: 199, column: 6, scope: !9623)
!9636 = !DILocation(line: 203, column: 32, scope: !9623)
!9637 = !DILocation(line: 203, column: 9, scope: !9623)
!9638 = !DILocation(line: 203, column: 2, scope: !9623)
!9639 = !DILocation(line: 204, column: 1, scope: !9623)
!9640 = distinct !DISubprogram(name: "k_msgq_get", scope: !3734, file: !3734, line: 1147, type: !9641, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9643)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{!107, !9416, !106, !9274}
!9643 = !{!9644, !9645, !9646}
!9644 = !DILocalVariable(name: "msgq", arg: 1, scope: !9640, file: !3734, line: 1147, type: !9416)
!9645 = !DILocalVariable(name: "data", arg: 2, scope: !9640, file: !3734, line: 1147, type: !106)
!9646 = !DILocalVariable(name: "timeout", arg: 3, scope: !9640, file: !3734, line: 1147, type: !9274)
!9647 = !DILocation(line: 0, scope: !9640)
!9648 = !DILocation(line: 1157, column: 2, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9640, file: !3734, line: 1157, column: 2)
!9650 = !{i64 2155067199}
!9651 = !DILocation(line: 1158, column: 9, scope: !9640)
!9652 = !DILocation(line: 1158, column: 2, scope: !9640)
!9653 = distinct !DISubprogram(name: "zbus_iterate_over_channels", scope: !9654, file: !9654, line: 9, type: !9655, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3080, retainedNodes: !9806)
!9654 = !DIFile(filename: "zephyr/subsys/zbus/zbus_iterable_sections.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9655 = !DISubroutineType(types: !9656)
!9656 = !{!136, !9657}
!9657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9658, size: 32)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!136, !9660}
!9660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9661, size: 32)
!9661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9662)
!9662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 224, elements: !9663)
!9663 = !{!9664, !9665, !9666, !9667, !9668, !9669, !9777}
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9662, file: !117, line: 32, baseType: !120, size: 32)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9662, file: !117, line: 35, baseType: !125, size: 16, offset: 32)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9662, file: !117, line: 40, baseType: !129, size: 32, offset: 64)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9662, file: !117, line: 45, baseType: !129, size: 32, offset: 96)
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9662, file: !117, line: 51, baseType: !132, size: 32, offset: 128)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9662, file: !117, line: 56, baseType: !9670, size: 32, offset: 160)
!9670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9671, size: 32)
!9671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !9672)
!9672 = !{!9673, !9692, !9775, !9776}
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9671, file: !142, line: 2722, baseType: !9674, size: 64)
!9674 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !9675)
!9675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !9676)
!9676 = !{!9677}
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9675, file: !146, line: 232, baseType: !9678, size: 64)
!9678 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !9679)
!9679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !9680)
!9680 = !{!9681, !9687}
!9681 = !DIDerivedType(tag: DW_TAG_member, scope: !9679, file: !151, line: 38, baseType: !9682, size: 32)
!9682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9679, file: !151, line: 38, size: 32, elements: !9683)
!9683 = !{!9684, !9686}
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9682, file: !151, line: 39, baseType: !9685, size: 32)
!9685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9679, size: 32)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9682, file: !151, line: 40, baseType: !9685, size: 32)
!9687 = !DIDerivedType(tag: DW_TAG_member, scope: !9679, file: !151, line: 42, baseType: !9688, size: 32, offset: 32)
!9688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9679, file: !151, line: 42, size: 32, elements: !9689)
!9689 = !{!9690, !9691}
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9688, file: !151, line: 43, baseType: !9685, size: 32)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9688, file: !151, line: 44, baseType: !9685, size: 32)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9671, file: !142, line: 2724, baseType: !9693, size: 32, offset: 64)
!9693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9694, size: 32)
!9694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !9695)
!9695 = !{!9696, !9736, !9748, !9749, !9750, !9751, !9757, !9770}
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9694, file: !168, line: 247, baseType: !9697, size: 384)
!9697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !9698)
!9698 = !{!9699, !9710, !9712, !9713, !9714, !9723, !9724, !9725}
!9699 = !DIDerivedType(tag: DW_TAG_member, scope: !9697, file: !168, line: 60, baseType: !9700, size: 64)
!9700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9697, file: !168, line: 60, size: 64, elements: !9701)
!9701 = !{!9702, !9704}
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9700, file: !168, line: 61, baseType: !9703, size: 64)
!9703 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !9679)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9700, file: !168, line: 62, baseType: !9705, size: 64)
!9705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !9706)
!9706 = !{!9707}
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9705, file: !180, line: 50, baseType: !9708, size: 64)
!9708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9709, size: 64, elements: !185)
!9709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9705, size: 32)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9697, file: !168, line: 68, baseType: !9711, size: 32, offset: 64)
!9711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9674, size: 32)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9697, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9697, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!9714 = !DIDerivedType(tag: DW_TAG_member, scope: !9697, file: !168, line: 90, baseType: !9715, size: 16, offset: 112)
!9715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9697, file: !168, line: 90, size: 16, elements: !9716)
!9716 = !{!9717, !9722}
!9717 = !DIDerivedType(tag: DW_TAG_member, scope: !9715, file: !168, line: 91, baseType: !9718, size: 16)
!9718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9715, file: !168, line: 91, size: 16, elements: !9719)
!9719 = !{!9720, !9721}
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9718, file: !168, line: 96, baseType: !200, size: 8)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9718, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9715, file: !168, line: 100, baseType: !126, size: 16)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9697, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9697, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9697, file: !168, line: 131, baseType: !9726, size: 192, offset: 192)
!9726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !9727)
!9727 = !{!9728, !9729, !9735}
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9726, file: !146, line: 245, baseType: !9703, size: 64)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9726, file: !146, line: 246, baseType: !9730, size: 32, offset: 64)
!9730 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !9731)
!9731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9732, size: 32)
!9732 = !DISubroutineType(types: !9733)
!9733 = !{null, !9734}
!9734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9726, size: 32)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9726, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9694, file: !168, line: 250, baseType: !9737, size: 288, offset: 384)
!9737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !9738)
!9738 = !{!9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747}
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9737, file: !219, line: 26, baseType: !108, size: 32)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9737, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9737, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9737, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9737, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9737, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9737, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9737, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9737, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9694, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9694, file: !168, line: 256, baseType: !9674, size: 64, offset: 704)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9694, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9694, file: !168, line: 300, baseType: !9752, size: 96, offset: 800)
!9752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !9753)
!9753 = !{!9754, !9755, !9756}
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9752, file: !168, line: 153, baseType: !22, size: 32)
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9752, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!9756 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9752, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9694, file: !168, line: 325, baseType: !9758, size: 32, offset: 896)
!9758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9759, size: 32)
!9759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !9760)
!9760 = !{!9761, !9767, !9768}
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9759, file: !142, line: 5074, baseType: !9762, size: 96)
!9762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !9763)
!9763 = !{!9764, !9765, !9766}
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9762, file: !245, line: 57, baseType: !248, size: 32)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9762, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9762, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9759, file: !142, line: 5075, baseType: !9674, size: 64, offset: 96)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9759, file: !142, line: 5076, baseType: !9769, offset: 160)
!9769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9694, file: !168, line: 343, baseType: !9771, size: 64, offset: 928)
!9771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !9772)
!9772 = !{!9773, !9774}
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9771, file: !219, line: 63, baseType: !108, size: 32)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9771, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9671, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9671, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9662, file: !117, line: 67, baseType: !9778, size: 32, offset: 192)
!9778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9779, size: 32)
!9779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9780)
!9780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9781, size: 32)
!9781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9782)
!9782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 128, elements: !9783)
!9783 = !{!9784, !9785, !9786, !9801}
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9782, file: !117, line: 88, baseType: !120, size: 32)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9782, file: !117, line: 91, baseType: !136, size: 8, offset: 32)
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9782, file: !117, line: 93, baseType: !9787, size: 32, offset: 64)
!9787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9788)
!9788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9789, size: 32)
!9789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !9790)
!9790 = !{!9791, !9792, !9793, !9794, !9795, !9796, !9797, !9798, !9799, !9800}
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9789, file: !142, line: 4206, baseType: !9674, size: 64)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9789, file: !142, line: 4208, baseType: !9769, offset: 64)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9789, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9789, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9789, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9789, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9789, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9789, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!9799 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9789, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9789, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9782, file: !117, line: 96, baseType: !9802, size: 32, offset: 96)
!9802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9803)
!9803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9804, size: 32)
!9804 = !DISubroutineType(types: !9805)
!9805 = !{null, !9660}
!9806 = !{!9807, !9808}
!9807 = !DILocalVariable(name: "iterator_func", arg: 1, scope: !9653, file: !9654, line: 9, type: !9657)
!9808 = !DILocalVariable(name: "chan", scope: !9809, file: !9654, line: 11, type: !9810)
!9809 = distinct !DILexicalBlock(scope: !9653, file: !9654, line: 11, column: 2)
!9810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9662, size: 32)
!9811 = !DILocation(line: 0, scope: !9653)
!9812 = !DILocation(line: 0, scope: !9809)
!9813 = !DILocation(line: 11, column: 2, scope: !9809)
!9814 = !DILocation(line: 12, column: 8, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9816, file: !9654, line: 12, column: 7)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !9654, line: 11, column: 45)
!9817 = distinct !DILexicalBlock(scope: !9809, file: !9654, line: 11, column: 2)
!9818 = !DILocation(line: 12, column: 7, scope: !9816)
!9819 = !DILocation(line: 11, column: 2, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9817, file: !9654, line: 11, column: 2)
!9821 = distinct !{!9821, !9813, !9822}
!9822 = !DILocation(line: 15, column: 2, scope: !9809)
!9823 = !DILocation(line: 11, column: 2, scope: !9817)
!9824 = !DILocation(line: 17, column: 1, scope: !9653)
!9825 = distinct !DISubprogram(name: "zbus_iterate_over_observers", scope: !9654, file: !9654, line: 19, type: !9826, scopeLine: 20, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3080, retainedNodes: !9831)
!9826 = !DISubroutineType(types: !9827)
!9827 = !{!136, !9828}
!9828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9829, size: 32)
!9829 = !DISubroutineType(types: !9830)
!9830 = !{!136, !9780}
!9831 = !{!9832, !9833}
!9832 = !DILocalVariable(name: "iterator_func", arg: 1, scope: !9825, file: !9654, line: 19, type: !9828)
!9833 = !DILocalVariable(name: "obs", scope: !9834, file: !9654, line: 21, type: !9835)
!9834 = distinct !DILexicalBlock(scope: !9825, file: !9654, line: 21, column: 2)
!9835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9782, size: 32)
!9836 = !DILocation(line: 0, scope: !9825)
!9837 = !DILocation(line: 0, scope: !9834)
!9838 = !DILocation(line: 21, column: 2, scope: !9834)
!9839 = !DILocation(line: 22, column: 8, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !9654, line: 22, column: 7)
!9841 = distinct !DILexicalBlock(scope: !9842, file: !9654, line: 21, column: 45)
!9842 = distinct !DILexicalBlock(scope: !9834, file: !9654, line: 21, column: 2)
!9843 = !DILocation(line: 22, column: 7, scope: !9841)
!9844 = !DILocation(line: 21, column: 2, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9842, file: !9654, line: 21, column: 2)
!9846 = distinct !{!9846, !9838, !9847}
!9847 = !DILocation(line: 25, column: 2, scope: !9834)
!9848 = !DILocation(line: 21, column: 2, scope: !9842)
!9849 = !DILocation(line: 27, column: 1, scope: !9825)
!9850 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !835, file: !835, line: 368, type: !888, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9851)
!9851 = !{!9852}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9850, file: !835, line: 368, type: !864)
!9853 = !DILocation(line: 0, scope: !9850)
!9854 = !DILocation(line: 370, column: 2, scope: !9850)
!9855 = !DILocation(line: 371, column: 1, scope: !9850)
!9856 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !835, file: !835, line: 243, type: !9857, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9859)
!9857 = !DISubroutineType(types: !9858)
!9858 = !{null, !107, !107, !864}
!9859 = !{!9860, !9861, !9862, !9863, !9865}
!9860 = !DILocalVariable(name: "min", arg: 1, scope: !9856, file: !835, line: 243, type: !107)
!9861 = !DILocalVariable(name: "max", arg: 2, scope: !9856, file: !835, line: 243, type: !107)
!9862 = !DILocalVariable(name: "dev", arg: 3, scope: !9856, file: !835, line: 243, type: !864)
!9863 = !DILocalVariable(name: "data", scope: !9856, file: !835, line: 245, type: !9864)
!9864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 32)
!9865 = !DILocalVariable(name: "line", scope: !9856, file: !835, line: 246, type: !107)
!9866 = !DILocation(line: 0, scope: !9856)
!9867 = !DILocation(line: 245, column: 38, scope: !9856)
!9868 = !DILocation(line: 249, column: 24, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !835, line: 249, column: 2)
!9870 = distinct !DILexicalBlock(scope: !9856, file: !835, line: 249, column: 2)
!9871 = !DILocation(line: 249, column: 2, scope: !9870)
!9872 = !DILocation(line: 251, column: 7, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9874, file: !835, line: 251, column: 7)
!9874 = distinct !DILexicalBlock(scope: !9869, file: !835, line: 249, column: 39)
!9875 = !DILocation(line: 251, column: 7, scope: !9874)
!9876 = !DILocation(line: 253, column: 4, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9873, file: !835, line: 251, column: 36)
!9878 = !DILocation(line: 256, column: 24, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9877, file: !835, line: 256, column: 8)
!9880 = !DILocation(line: 256, column: 9, scope: !9879)
!9881 = !DILocation(line: 256, column: 8, scope: !9877)
!9882 = !DILocation(line: 260, column: 43, scope: !9877)
!9883 = !DILocation(line: 260, column: 4, scope: !9877)
!9884 = !DILocation(line: 261, column: 3, scope: !9877)
!9885 = !DILocation(line: 249, column: 35, scope: !9869)
!9886 = distinct !{!9886, !9871, !9887}
!9887 = !DILocation(line: 262, column: 2, scope: !9870)
!9888 = !DILocation(line: 263, column: 1, scope: !9856)
!9889 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !835, file: !835, line: 158, type: !418, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9890)
!9890 = !{!9891}
!9891 = !DILocalVariable(name: "line", arg: 1, scope: !9889, file: !835, line: 158, type: !107)
!9892 = !DILocation(line: 0, scope: !9889)
!9893 = !DILocation(line: 170, column: 38, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !835, line: 160, column: 17)
!9895 = distinct !DILexicalBlock(scope: !9889, file: !835, line: 160, column: 6)
!9896 = !DILocation(line: 170, column: 10, scope: !9894)
!9897 = !DILocation(line: 176, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !835, file: !835, line: 183, type: !9899, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9901)
!9899 = !DISubroutineType(types: !9900)
!9900 = !{null, !107}
!9901 = !{!9902}
!9902 = !DILocalVariable(name: "line", arg: 1, scope: !9898, file: !835, line: 183, type: !107)
!9903 = !DILocation(line: 0, scope: !9898)
!9904 = !DILocation(line: 195, column: 28, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !835, line: 185, column: 17)
!9906 = distinct !DILexicalBlock(scope: !9898, file: !835, line: 185, column: 6)
!9907 = !DILocation(line: 195, column: 3, scope: !9905)
!9908 = !DILocation(line: 200, column: 1, scope: !9898)
!9909 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9910, file: !9910, line: 910, type: !7530, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9911)
!9910 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9911 = !{!9912}
!9912 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9909, file: !9910, line: 910, type: !108)
!9913 = !DILocation(line: 0, scope: !9909)
!9914 = !DILocation(line: 912, column: 3, scope: !9909)
!9915 = !DILocation(line: 913, column: 1, scope: !9909)
!9916 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9910, file: !9910, line: 834, type: !8684, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9917)
!9917 = !{!9918}
!9918 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9916, file: !9910, line: 834, type: !108)
!9919 = !DILocation(line: 0, scope: !9916)
!9920 = !DILocation(line: 836, column: 11, scope: !9916)
!9921 = !DILocation(line: 836, column: 40, scope: !9916)
!9922 = !DILocation(line: 836, column: 3, scope: !9916)
!9923 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !835, file: !835, line: 304, type: !888, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9924)
!9924 = !{!9925}
!9925 = !DILocalVariable(name: "dev", arg: 1, scope: !9923, file: !835, line: 304, type: !864)
!9926 = !DILocation(line: 0, scope: !9923)
!9927 = !DILocation(line: 306, column: 2, scope: !9923)
!9928 = !DILocation(line: 307, column: 1, scope: !9923)
!9929 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !835, file: !835, line: 299, type: !888, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9930)
!9930 = !{!9931}
!9931 = !DILocalVariable(name: "dev", arg: 1, scope: !9929, file: !835, line: 299, type: !864)
!9932 = !DILocation(line: 0, scope: !9929)
!9933 = !DILocation(line: 301, column: 2, scope: !9929)
!9934 = !DILocation(line: 302, column: 1, scope: !9929)
!9935 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !835, file: !835, line: 294, type: !888, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9936)
!9936 = !{!9937}
!9937 = !DILocalVariable(name: "dev", arg: 1, scope: !9935, file: !835, line: 294, type: !864)
!9938 = !DILocation(line: 0, scope: !9935)
!9939 = !DILocation(line: 296, column: 2, scope: !9935)
!9940 = !DILocation(line: 297, column: 1, scope: !9935)
!9941 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !835, file: !835, line: 397, type: !888, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9942)
!9942 = !{!9943}
!9943 = !DILocalVariable(name: "dev", arg: 1, scope: !9941, file: !835, line: 397, type: !864)
!9944 = !DILocation(line: 0, scope: !9941)
!9945 = !DILocation(line: 399, column: 2, scope: !9941)
!9946 = !DILocation(line: 400, column: 1, scope: !9941)
!9947 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !835, file: !835, line: 392, type: !888, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9948)
!9948 = !{!9949}
!9949 = !DILocalVariable(name: "dev", arg: 1, scope: !9947, file: !835, line: 392, type: !864)
!9950 = !DILocation(line: 0, scope: !9947)
!9951 = !DILocation(line: 394, column: 2, scope: !9947)
!9952 = !DILocation(line: 395, column: 1, scope: !9947)
!9953 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !835, file: !835, line: 289, type: !888, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9954)
!9954 = !{!9955}
!9955 = !DILocalVariable(name: "dev", arg: 1, scope: !9953, file: !835, line: 289, type: !864)
!9956 = !DILocation(line: 0, scope: !9953)
!9957 = !DILocation(line: 291, column: 2, scope: !9953)
!9958 = !DILocation(line: 292, column: 1, scope: !9953)
!9959 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !835, file: !835, line: 387, type: !888, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9960)
!9960 = !{!9961}
!9961 = !DILocalVariable(name: "dev", arg: 1, scope: !9959, file: !835, line: 387, type: !864)
!9962 = !DILocation(line: 0, scope: !9959)
!9963 = !DILocation(line: 389, column: 2, scope: !9959)
!9964 = !DILocation(line: 390, column: 1, scope: !9959)
!9965 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !835, file: !835, line: 382, type: !888, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9966)
!9966 = !{!9967}
!9967 = !DILocalVariable(name: "dev", arg: 1, scope: !9965, file: !835, line: 382, type: !864)
!9968 = !DILocation(line: 0, scope: !9965)
!9969 = !DILocation(line: 384, column: 2, scope: !9965)
!9970 = !DILocation(line: 385, column: 1, scope: !9965)
!9971 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !835, file: !835, line: 373, type: !888, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9972)
!9972 = !{!9973}
!9973 = !DILocalVariable(name: "dev", arg: 1, scope: !9971, file: !835, line: 373, type: !864)
!9974 = !DILocation(line: 0, scope: !9971)
!9975 = !DILocation(line: 375, column: 2, scope: !9971)
!9976 = !DILocation(line: 376, column: 1, scope: !9971)
!9977 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !835, file: !835, line: 284, type: !888, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9978)
!9978 = !{!9979}
!9979 = !DILocalVariable(name: "dev", arg: 1, scope: !9977, file: !835, line: 284, type: !864)
!9980 = !DILocation(line: 0, scope: !9977)
!9981 = !DILocation(line: 286, column: 2, scope: !9977)
!9982 = !DILocation(line: 287, column: 1, scope: !9977)
!9983 = distinct !DISubprogram(name: "stm32_exti_init", scope: !835, file: !835, line: 416, type: !862, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !9984)
!9984 = !{!9985}
!9985 = !DILocalVariable(name: "dev", arg: 1, scope: !9983, file: !835, line: 416, type: !864)
!9986 = !DILocation(line: 0, scope: !9983)
!9987 = !DILocation(line: 418, column: 2, scope: !9983)
!9988 = !DILocation(line: 420, column: 2, scope: !9983)
!9989 = !DILocation(line: 0, scope: !887)
!9990 = !DILocation(line: 493, column: 2, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !887, file: !835, line: 493, column: 2)
!9992 = !DILocation(line: 497, column: 2, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !887, file: !835, line: 497, column: 2)
!9994 = !DILocation(line: 507, column: 2, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !887, file: !835, line: 507, column: 2)
!9996 = !DILocation(line: 512, column: 2, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !887, file: !835, line: 512, column: 2)
!9998 = !DILocation(line: 516, column: 2, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !887, file: !835, line: 516, column: 2)
!10000 = !DILocation(line: 523, column: 2, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !887, file: !835, line: 523, column: 2)
!10002 = !DILocation(line: 527, column: 2, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !887, file: !835, line: 527, column: 2)
!10004 = !DILocation(line: 581, column: 2, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !887, file: !835, line: 581, column: 2)
!10006 = !DILocation(line: 586, column: 2, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !887, file: !835, line: 586, column: 2)
!10008 = !DILocation(line: 591, column: 2, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !887, file: !835, line: 591, column: 2)
!10010 = !DILocation(line: 595, column: 2, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !887, file: !835, line: 595, column: 2)
!10012 = !DILocation(line: 607, column: 1, scope: !887)
!10013 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !835, file: !835, line: 112, type: !9899, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10014)
!10014 = !{!10015, !10016}
!10015 = !DILocalVariable(name: "line", arg: 1, scope: !10013, file: !835, line: 112, type: !107)
!10016 = !DILocalVariable(name: "irqnum", scope: !10013, file: !835, line: 114, type: !107)
!10017 = !DILocation(line: 0, scope: !10013)
!10018 = !DILocation(line: 121, column: 11, scope: !10013)
!10019 = !DILocation(line: 130, column: 26, scope: !10013)
!10020 = !DILocation(line: 130, column: 2, scope: !10013)
!10021 = !DILocation(line: 134, column: 2, scope: !10013)
!10022 = !DILocation(line: 135, column: 1, scope: !10013)
!10023 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9910, file: !9910, line: 268, type: !7530, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10024)
!10024 = !{!10025}
!10025 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10023, file: !9910, line: 268, type: !108)
!10026 = !DILocation(line: 0, scope: !10023)
!10027 = !DILocation(line: 270, column: 3, scope: !10023)
!10028 = !DILocation(line: 271, column: 1, scope: !10023)
!10029 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !835, file: !835, line: 137, type: !9899, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10030)
!10030 = !{!10031}
!10031 = !DILocalVariable(name: "line", arg: 1, scope: !10029, file: !835, line: 137, type: !107)
!10032 = !DILocation(line: 0, scope: !10029)
!10033 = !DILocation(line: 141, column: 11, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10029, file: !835, line: 141, column: 6)
!10035 = !DILocation(line: 141, column: 6, scope: !10029)
!10036 = !DILocation(line: 145, column: 28, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10034, file: !835, line: 141, column: 17)
!10038 = !DILocation(line: 145, column: 3, scope: !10037)
!10039 = !DILocation(line: 147, column: 2, scope: !10037)
!10040 = !DILocation(line: 151, column: 1, scope: !10029)
!10041 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9910, file: !9910, line: 309, type: !7530, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10042)
!10042 = !{!10043}
!10043 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10041, file: !9910, line: 309, type: !108)
!10044 = !DILocation(line: 0, scope: !10041)
!10045 = !DILocation(line: 311, column: 3, scope: !10041)
!10046 = !DILocation(line: 312, column: 1, scope: !10041)
!10047 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !835, file: !835, line: 202, type: !10048, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10050)
!10048 = !DISubroutineType(types: !10049)
!10049 = !{null, !107, !107}
!10050 = !{!10051, !10052}
!10051 = !DILocalVariable(name: "line", arg: 1, scope: !10047, file: !835, line: 202, type: !107)
!10052 = !DILocalVariable(name: "trigger", arg: 2, scope: !10047, file: !835, line: 202, type: !107)
!10053 = !DILocation(line: 0, scope: !10047)
!10054 = !DILocation(line: 211, column: 2, scope: !10047)
!10055 = !DILocation(line: 213, column: 36, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10047, file: !835, line: 211, column: 19)
!10057 = !DILocation(line: 213, column: 3, scope: !10056)
!10058 = !DILocation(line: 214, column: 3, scope: !10056)
!10059 = !DILocation(line: 215, column: 3, scope: !10056)
!10060 = !DILocation(line: 217, column: 35, scope: !10056)
!10061 = !DILocation(line: 217, column: 3, scope: !10056)
!10062 = !DILocation(line: 218, column: 3, scope: !10056)
!10063 = !DILocation(line: 219, column: 3, scope: !10056)
!10064 = !DILocation(line: 221, column: 36, scope: !10056)
!10065 = !DILocation(line: 221, column: 3, scope: !10056)
!10066 = !DILocation(line: 222, column: 3, scope: !10056)
!10067 = !DILocation(line: 223, column: 3, scope: !10056)
!10068 = !DILocation(line: 225, column: 35, scope: !10056)
!10069 = !DILocation(line: 225, column: 3, scope: !10056)
!10070 = !DILocation(line: 226, column: 3, scope: !10056)
!10071 = !DILocation(line: 227, column: 3, scope: !10056)
!10072 = !DILocation(line: 232, column: 1, scope: !10047)
!10073 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9910, file: !9910, line: 573, type: !7530, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10074)
!10074 = !{!10075}
!10075 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10073, file: !9910, line: 573, type: !108)
!10076 = !DILocation(line: 0, scope: !10073)
!10077 = !DILocation(line: 575, column: 3, scope: !10073)
!10078 = !DILocation(line: 577, column: 1, scope: !10073)
!10079 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9910, file: !9910, line: 703, type: !7530, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10080)
!10080 = !{!10081}
!10081 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10079, file: !9910, line: 703, type: !108)
!10082 = !DILocation(line: 0, scope: !10079)
!10083 = !DILocation(line: 705, column: 3, scope: !10079)
!10084 = !DILocation(line: 706, column: 1, scope: !10079)
!10085 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9910, file: !9910, line: 529, type: !7530, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10086)
!10086 = !{!10087}
!10087 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10085, file: !9910, line: 529, type: !108)
!10088 = !DILocation(line: 0, scope: !10085)
!10089 = !DILocation(line: 531, column: 3, scope: !10085)
!10090 = !DILocation(line: 533, column: 1, scope: !10085)
!10091 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9910, file: !9910, line: 661, type: !7530, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10092)
!10092 = !{!10093}
!10093 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10091, file: !9910, line: 661, type: !108)
!10094 = !DILocation(line: 0, scope: !10091)
!10095 = !DILocation(line: 663, column: 3, scope: !10091)
!10096 = !DILocation(line: 664, column: 1, scope: !10091)
!10097 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !835, file: !835, line: 433, type: !10098, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10100)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{!107, !107, !875, !106}
!10100 = !{!10101, !10102, !10103, !10104, !10106}
!10101 = !DILocalVariable(name: "line", arg: 1, scope: !10097, file: !835, line: 433, type: !107)
!10102 = !DILocalVariable(name: "cb", arg: 2, scope: !10097, file: !835, line: 433, type: !875)
!10103 = !DILocalVariable(name: "arg", arg: 3, scope: !10097, file: !835, line: 433, type: !106)
!10104 = !DILocalVariable(name: "dev", scope: !10097, file: !835, line: 435, type: !10105)
!10105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!10106 = !DILocalVariable(name: "data", scope: !10097, file: !835, line: 436, type: !9864)
!10107 = !DILocation(line: 0, scope: !10097)
!10108 = !DILocation(line: 438, column: 21, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10097, file: !835, line: 438, column: 6)
!10110 = !DILocation(line: 438, column: 6, scope: !10109)
!10111 = !DILocation(line: 438, column: 6, scope: !10097)
!10112 = !DILocation(line: 442, column: 20, scope: !10097)
!10113 = !DILocation(line: 443, column: 17, scope: !10097)
!10114 = !DILocation(line: 443, column: 22, scope: !10097)
!10115 = !DILocation(line: 445, column: 2, scope: !10097)
!10116 = !DILocation(line: 446, column: 1, scope: !10097)
!10117 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !835, file: !835, line: 448, type: !9899, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !10118)
!10118 = !{!10119, !10120, !10121}
!10119 = !DILocalVariable(name: "line", arg: 1, scope: !10117, file: !835, line: 448, type: !107)
!10120 = !DILocalVariable(name: "dev", scope: !10117, file: !835, line: 450, type: !10105)
!10121 = !DILocalVariable(name: "data", scope: !10117, file: !835, line: 451, type: !9864)
!10122 = !DILocation(line: 0, scope: !10117)
!10123 = !DILocation(line: 453, column: 17, scope: !10117)
!10124 = !DILocation(line: 453, column: 20, scope: !10117)
!10125 = !DILocation(line: 454, column: 17, scope: !10117)
!10126 = !DILocation(line: 454, column: 22, scope: !10117)
!10127 = !DILocation(line: 455, column: 1, scope: !10117)
!10128 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1024, file: !1024, line: 183, type: !1062, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10129)
!10129 = !{!10130, !10131, !10132, !10133, !10134}
!10130 = !DILocalVariable(name: "dev", arg: 1, scope: !10128, file: !1024, line: 183, type: !1053)
!10131 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10128, file: !1024, line: 184, type: !1064)
!10132 = !DILocalVariable(name: "pclken", scope: !10128, file: !1024, line: 186, type: !1014)
!10133 = !DILocalVariable(name: "reg", scope: !10128, file: !1024, line: 187, type: !1604)
!10134 = !DILocalVariable(name: "reg_val", scope: !10128, file: !1024, line: 188, type: !108)
!10135 = !DILocation(line: 0, scope: !10128)
!10136 = !DILocation(line: 192, column: 6, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10128, file: !1024, line: 192, column: 6)
!10138 = !DILocation(line: 192, column: 6, scope: !10128)
!10139 = !DILocation(line: 197, column: 52, scope: !10128)
!10140 = !DILocation(line: 197, column: 8, scope: !10128)
!10141 = !DILocation(line: 198, column: 12, scope: !10128)
!10142 = !DILocation(line: 199, column: 21, scope: !10128)
!10143 = !DILocation(line: 199, column: 10, scope: !10128)
!10144 = !DILocation(line: 200, column: 7, scope: !10128)
!10145 = !DILocation(line: 202, column: 2, scope: !10128)
!10146 = !DILocation(line: 203, column: 1, scope: !10128)
!10147 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1024, file: !1024, line: 205, type: !1062, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10148)
!10148 = !{!10149, !10150, !10151, !10152, !10153}
!10149 = !DILocalVariable(name: "dev", arg: 1, scope: !10147, file: !1024, line: 205, type: !1053)
!10150 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10147, file: !1024, line: 206, type: !1064)
!10151 = !DILocalVariable(name: "pclken", scope: !10147, file: !1024, line: 208, type: !1014)
!10152 = !DILocalVariable(name: "reg", scope: !10147, file: !1024, line: 209, type: !1604)
!10153 = !DILocalVariable(name: "reg_val", scope: !10147, file: !1024, line: 210, type: !108)
!10154 = !DILocation(line: 0, scope: !10147)
!10155 = !DILocation(line: 214, column: 6, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10147, file: !1024, line: 214, column: 6)
!10157 = !DILocation(line: 214, column: 6, scope: !10147)
!10158 = !DILocation(line: 219, column: 52, scope: !10147)
!10159 = !DILocation(line: 219, column: 8, scope: !10147)
!10160 = !DILocation(line: 220, column: 12, scope: !10147)
!10161 = !DILocation(line: 221, column: 22, scope: !10147)
!10162 = !DILocation(line: 221, column: 13, scope: !10147)
!10163 = !DILocation(line: 221, column: 10, scope: !10147)
!10164 = !DILocation(line: 222, column: 7, scope: !10147)
!10165 = !DILocation(line: 224, column: 2, scope: !10147)
!10166 = !DILocation(line: 225, column: 1, scope: !10147)
!10167 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1024, file: !1024, line: 262, type: !1078, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10168)
!10168 = !{!10169, !10170, !10171, !10172, !10173, !10174, !10175, !10176}
!10169 = !DILocalVariable(name: "clock", arg: 1, scope: !10167, file: !1024, line: 262, type: !1053)
!10170 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10167, file: !1024, line: 263, type: !1064)
!10171 = !DILocalVariable(name: "rate", arg: 3, scope: !10167, file: !1024, line: 264, type: !1020)
!10172 = !DILocalVariable(name: "pclken", scope: !10167, file: !1024, line: 266, type: !1014)
!10173 = !DILocalVariable(name: "ahb_clock", scope: !10167, file: !1024, line: 273, type: !108)
!10174 = !DILocalVariable(name: "apb1_clock", scope: !10167, file: !1024, line: 274, type: !108)
!10175 = !DILocalVariable(name: "apb2_clock", scope: !10167, file: !1024, line: 276, type: !108)
!10176 = !DILocalVariable(name: "ahb3_clock", scope: !10167, file: !1024, line: 286, type: !108)
!10177 = !DILocation(line: 0, scope: !10167)
!10178 = !DILocation(line: 273, column: 23, scope: !10167)
!10179 = !DILocation(line: 299, column: 18, scope: !10167)
!10180 = !DILocation(line: 299, column: 2, scope: !10167)
!10181 = !DILocation(line: 274, column: 24, scope: !10167)
!10182 = !DILocation(line: 319, column: 3, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10167, file: !1024, line: 299, column: 23)
!10184 = !DILocation(line: 276, column: 24, scope: !10167)
!10185 = !DILocation(line: 323, column: 3, scope: !10183)
!10186 = !DILocation(line: 346, column: 33, scope: !10183)
!10187 = !DILocation(line: 346, column: 11, scope: !10183)
!10188 = !DILocation(line: 350, column: 3, scope: !10183)
!10189 = !DILocation(line: 354, column: 33, scope: !10183)
!10190 = !DILocation(line: 354, column: 11, scope: !10183)
!10191 = !DILocation(line: 358, column: 3, scope: !10183)
!10192 = !DILocation(line: 374, column: 3, scope: !10183)
!10193 = !DILocation(line: 379, column: 3, scope: !10183)
!10194 = !DILocation(line: 0, scope: !10183)
!10195 = !DILocation(line: 396, column: 1, scope: !10167)
!10196 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1024, file: !1024, line: 227, type: !1094, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10197)
!10197 = !{!10198, !10199, !10200, !10201, !10202, !10203, !10204, !10205}
!10198 = !DILocalVariable(name: "dev", arg: 1, scope: !10196, file: !1024, line: 227, type: !1053)
!10199 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10196, file: !1024, line: 228, type: !1064)
!10200 = !DILocalVariable(name: "data", arg: 3, scope: !10196, file: !1024, line: 229, type: !106)
!10201 = !DILocalVariable(name: "pclken", scope: !10196, file: !1024, line: 233, type: !1014)
!10202 = !DILocalVariable(name: "reg", scope: !10196, file: !1024, line: 234, type: !1604)
!10203 = !DILocalVariable(name: "reg_val", scope: !10196, file: !1024, line: 235, type: !108)
!10204 = !DILocalVariable(name: "dt_val", scope: !10196, file: !1024, line: 235, type: !108)
!10205 = !DILocalVariable(name: "err", scope: !10196, file: !1024, line: 236, type: !107)
!10206 = !DILocation(line: 0, scope: !10196)
!10207 = !DILocation(line: 241, column: 30, scope: !10196)
!10208 = !DILocation(line: 241, column: 8, scope: !10196)
!10209 = !DILocation(line: 242, column: 10, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10196, file: !1024, line: 242, column: 6)
!10211 = !DILocation(line: 242, column: 6, scope: !10196)
!10212 = !DILocation(line: 247, column: 11, scope: !10196)
!10213 = !DILocation(line: 248, column: 6, scope: !10196)
!10214 = !DILocation(line: 247, column: 44, scope: !10196)
!10215 = !DILocation(line: 250, column: 6, scope: !10196)
!10216 = !DILocation(line: 249, column: 52, scope: !10196)
!10217 = !DILocation(line: 249, column: 8, scope: !10196)
!10218 = !DILocation(line: 251, column: 12, scope: !10196)
!10219 = !DILocation(line: 252, column: 10, scope: !10196)
!10220 = !DILocation(line: 253, column: 7, scope: !10196)
!10221 = !DILocation(line: 255, column: 2, scope: !10196)
!10222 = !DILocation(line: 260, column: 1, scope: !10196)
!10223 = distinct !DISubprogram(name: "enabled_clock", scope: !1024, file: !1024, line: 100, type: !10224, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10226)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{!107, !108}
!10226 = !{!10227, !10228}
!10227 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10223, file: !1024, line: 100, type: !108)
!10228 = !DILocalVariable(name: "r", scope: !10223, file: !1024, line: 102, type: !107)
!10229 = !DILocation(line: 0, scope: !10223)
!10230 = !DILocation(line: 104, column: 2, scope: !10223)
!10231 = !DILocation(line: 180, column: 2, scope: !10223)
!10232 = !DILocation(line: 181, column: 1, scope: !10223)
!10233 = distinct !DISubprogram(name: "get_bus_clock", scope: !1024, file: !1024, line: 79, type: !10234, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10236)
!10234 = !DISubroutineType(types: !10235)
!10235 = !{!108, !108, !108}
!10236 = !{!10237, !10238}
!10237 = !DILocalVariable(name: "clock", arg: 1, scope: !10233, file: !1024, line: 79, type: !108)
!10238 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10233, file: !1024, line: 79, type: !108)
!10239 = !DILocation(line: 0, scope: !10233)
!10240 = !DILocation(line: 81, column: 15, scope: !10233)
!10241 = !DILocation(line: 81, column: 2, scope: !10233)
!10242 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1024, file: !1024, line: 68, type: !10243, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10245)
!10243 = !DISubroutineType(types: !10244)
!10244 = !{!108, !108, !107, !107, !107}
!10245 = !{!10246, !10247, !10248, !10249}
!10246 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10242, file: !1024, line: 68, type: !108)
!10247 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10242, file: !1024, line: 69, type: !107)
!10248 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10242, file: !1024, line: 70, type: !107)
!10249 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10242, file: !1024, line: 71, type: !107)
!10250 = !DILocation(line: 0, scope: !10242)
!10251 = !DILocation(line: 75, column: 22, scope: !10242)
!10252 = !DILocation(line: 76, column: 13, scope: !10242)
!10253 = !DILocation(line: 75, column: 34, scope: !10242)
!10254 = !DILocation(line: 75, column: 2, scope: !10242)
!10255 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1024, file: !1024, line: 641, type: !1051, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10256)
!10256 = !{!10257, !10258, !10259}
!10257 = !DILocalVariable(name: "dev", arg: 1, scope: !10255, file: !1024, line: 641, type: !1053)
!10258 = !DILocalVariable(name: "old_flash_freq", scope: !10255, file: !1024, line: 664, type: !108)
!10259 = !DILocalVariable(name: "new_flash_freq", scope: !10255, file: !1024, line: 665, type: !108)
!10260 = !DILocation(line: 0, scope: !10255)
!10261 = !DILocation(line: 646, column: 2, scope: !10255)
!10262 = !DILocation(line: 667, column: 19, scope: !10255)
!10263 = !DILocation(line: 674, column: 21, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10255, file: !1024, line: 674, column: 6)
!10265 = !DILocation(line: 674, column: 6, scope: !10255)
!10266 = !DILocation(line: 675, column: 3, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10264, file: !1024, line: 674, column: 59)
!10268 = !DILocation(line: 676, column: 2, scope: !10267)
!10269 = !DILocation(line: 680, column: 2, scope: !10255)
!10270 = !DILocation(line: 683, column: 2, scope: !10255)
!10271 = !DILocation(line: 690, column: 3, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !1024, line: 689, column: 9)
!10273 = distinct !DILexicalBlock(scope: !10255, file: !1024, line: 685, column: 6)
!10274 = !DILocation(line: 695, column: 2, scope: !10255)
!10275 = !DILocation(line: 696, column: 2, scope: !10255)
!10276 = !DILocation(line: 696, column: 9, scope: !10255)
!10277 = !DILocation(line: 696, column: 34, scope: !10255)
!10278 = distinct !{!10278, !10275, !10279}
!10279 = !DILocation(line: 697, column: 2, scope: !10255)
!10280 = !DILocation(line: 720, column: 21, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10255, file: !1024, line: 720, column: 6)
!10282 = !DILocation(line: 720, column: 6, scope: !10255)
!10283 = !DILocation(line: 721, column: 3, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10281, file: !1024, line: 720, column: 60)
!10285 = !DILocation(line: 722, column: 2, scope: !10284)
!10286 = !DILocation(line: 725, column: 18, scope: !10255)
!10287 = !DILocation(line: 728, column: 2, scope: !10255)
!10288 = !DILocation(line: 730, column: 2, scope: !10255)
!10289 = !DILocation(line: 745, column: 2, scope: !10255)
!10290 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10291, file: !10291, line: 3275, type: !7520, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10291 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10292 = !DILocation(line: 3277, column: 21, scope: !10290)
!10293 = !DILocation(line: 3277, column: 3, scope: !10290)
!10294 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1024, file: !1024, line: 507, type: !337, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10295 = !DILocation(line: 516, column: 4, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10297, file: !1024, line: 515, column: 10)
!10297 = distinct !DILexicalBlock(scope: !10298, file: !1024, line: 513, column: 7)
!10298 = distinct !DILexicalBlock(scope: !10299, file: !1024, line: 510, column: 37)
!10299 = distinct !DILexicalBlock(scope: !10294, file: !1024, line: 510, column: 6)
!10300 = !DILocation(line: 526, column: 3, scope: !10298)
!10301 = !DILocation(line: 527, column: 3, scope: !10298)
!10302 = !DILocation(line: 527, column: 10, scope: !10298)
!10303 = !DILocation(line: 527, column: 31, scope: !10298)
!10304 = distinct !{!10304, !10301, !10305}
!10305 = !DILocation(line: 529, column: 3, scope: !10298)
!10306 = !DILocation(line: 583, column: 3, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !1024, line: 577, column: 37)
!10308 = distinct !DILexicalBlock(scope: !10294, file: !1024, line: 577, column: 6)
!10309 = !DILocation(line: 584, column: 3, scope: !10307)
!10310 = !DILocation(line: 584, column: 10, scope: !10307)
!10311 = !DILocation(line: 584, column: 31, scope: !10307)
!10312 = distinct !{!10312, !10309, !10313}
!10313 = !DILocation(line: 585, column: 3, scope: !10307)
!10314 = !DILocation(line: 627, column: 1, scope: !10294)
!10315 = distinct !DISubprogram(name: "set_up_plls", scope: !1024, file: !1024, line: 448, type: !337, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10316 = !DILocation(line: 460, column: 6, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10315, file: !1024, line: 460, column: 6)
!10318 = !DILocation(line: 460, column: 31, scope: !10317)
!10319 = !DILocation(line: 460, column: 6, scope: !10315)
!10320 = !DILocation(line: 461, column: 3, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10317, file: !1024, line: 460, column: 67)
!10322 = !DILocation(line: 462, column: 3, scope: !10321)
!10323 = !DILocation(line: 463, column: 2, scope: !10321)
!10324 = !DILocation(line: 464, column: 2, scope: !10315)
!10325 = !DILocation(line: 488, column: 2, scope: !10315)
!10326 = !DILocation(line: 492, column: 2, scope: !10315)
!10327 = !DILocation(line: 496, column: 2, scope: !10315)
!10328 = !DILocation(line: 499, column: 2, scope: !10315)
!10329 = !DILocation(line: 500, column: 2, scope: !10315)
!10330 = !DILocation(line: 500, column: 9, scope: !10315)
!10331 = !DILocation(line: 500, column: 30, scope: !10315)
!10332 = distinct !{!10332, !10329, !10333}
!10333 = !DILocation(line: 502, column: 2, scope: !10315)
!10334 = !DILocation(line: 505, column: 1, scope: !10315)
!10335 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10291, file: !10291, line: 3224, type: !7530, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10336)
!10336 = !{!10337}
!10337 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10335, file: !10291, line: 3224, type: !108)
!10338 = !DILocation(line: 0, scope: !10335)
!10339 = !DILocation(line: 3226, column: 3, scope: !10335)
!10340 = !DILocation(line: 3227, column: 1, scope: !10335)
!10341 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10291, file: !10291, line: 3188, type: !7530, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10342)
!10342 = !{!10343}
!10343 = !DILocalVariable(name: "Source", arg: 1, scope: !10341, file: !10291, line: 3188, type: !108)
!10344 = !DILocation(line: 0, scope: !10341)
!10345 = !DILocation(line: 3190, column: 3, scope: !10341)
!10346 = !DILocation(line: 3191, column: 1, scope: !10341)
!10347 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10291, file: !10291, line: 3204, type: !7520, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10348 = !DILocation(line: 3206, column: 21, scope: !10347)
!10349 = !DILocation(line: 3206, column: 3, scope: !10347)
!10350 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10291, file: !10291, line: 3240, type: !7530, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10351)
!10351 = !{!10352}
!10352 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10350, file: !10291, line: 3240, type: !108)
!10353 = !DILocation(line: 0, scope: !10350)
!10354 = !DILocation(line: 3242, column: 3, scope: !10350)
!10355 = !DILocation(line: 3243, column: 1, scope: !10350)
!10356 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10291, file: !10291, line: 3256, type: !7530, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !10357)
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10356, file: !10291, line: 3256, type: !108)
!10359 = !DILocation(line: 0, scope: !10356)
!10360 = !DILocation(line: 3258, column: 3, scope: !10356)
!10361 = !DILocation(line: 3259, column: 1, scope: !10356)
!10362 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1024, file: !1024, line: 409, type: !337, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10363 = !DILocation(line: 412, column: 6, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10362, file: !1024, line: 412, column: 6)
!10365 = !DILocation(line: 412, column: 27, scope: !10364)
!10366 = !DILocation(line: 412, column: 6, scope: !10362)
!10367 = !DILocation(line: 414, column: 3, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10364, file: !1024, line: 412, column: 33)
!10369 = !DILocation(line: 415, column: 3, scope: !10368)
!10370 = !DILocation(line: 415, column: 10, scope: !10368)
!10371 = !DILocation(line: 415, column: 31, scope: !10368)
!10372 = distinct !{!10372, !10369, !10373}
!10373 = !DILocation(line: 417, column: 3, scope: !10368)
!10374 = !DILocation(line: 421, column: 2, scope: !10362)
!10375 = !DILocation(line: 422, column: 2, scope: !10362)
!10376 = !DILocation(line: 422, column: 9, scope: !10362)
!10377 = !DILocation(line: 422, column: 34, scope: !10362)
!10378 = distinct !{!10378, !10375, !10379}
!10379 = !DILocation(line: 423, column: 2, scope: !10362)
!10380 = !DILocation(line: 424, column: 1, scope: !10362)
!10381 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10291, file: !10291, line: 4195, type: !337, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10382 = !DILocation(line: 4197, column: 3, scope: !10381)
!10383 = !DILocation(line: 4198, column: 1, scope: !10381)
!10384 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10291, file: !10291, line: 4184, type: !337, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10385 = !DILocation(line: 4186, column: 3, scope: !10384)
!10386 = !DILocation(line: 4187, column: 1, scope: !10384)
!10387 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10291, file: !10291, line: 4205, type: !7520, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10388 = !DILocation(line: 4207, column: 11, scope: !10387)
!10389 = !DILocation(line: 4207, column: 44, scope: !10387)
!10390 = !DILocation(line: 4207, column: 3, scope: !10387)
!10391 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10291, file: !10291, line: 3007, type: !7520, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10392 = !DILocation(line: 3009, column: 11, scope: !10391)
!10393 = !DILocation(line: 3009, column: 44, scope: !10391)
!10394 = !DILocation(line: 3009, column: 3, scope: !10391)
!10395 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10291, file: !10291, line: 2987, type: !337, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10396 = !DILocation(line: 2989, column: 3, scope: !10395)
!10397 = !DILocation(line: 2990, column: 1, scope: !10395)
!10398 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10291, file: !10291, line: 2939, type: !337, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10399 = !DILocation(line: 2941, column: 3, scope: !10398)
!10400 = !DILocation(line: 2942, column: 1, scope: !10398)
!10401 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10291, file: !10291, line: 2949, type: !337, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10402 = !DILocation(line: 2951, column: 3, scope: !10401)
!10403 = !DILocation(line: 2952, column: 1, scope: !10401)
!10404 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10291, file: !10291, line: 2969, type: !7520, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10405 = !DILocation(line: 2971, column: 11, scope: !10404)
!10406 = !DILocation(line: 2971, column: 44, scope: !10404)
!10407 = !DILocation(line: 2971, column: 3, scope: !10404)
!10408 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10291, file: !10291, line: 3143, type: !337, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10409 = !DILocation(line: 3145, column: 3, scope: !10408)
!10410 = !DILocation(line: 3146, column: 1, scope: !10408)
!10411 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10291, file: !10291, line: 3163, type: !7520, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !959, retainedNodes: !256)
!10412 = !DILocation(line: 3165, column: 11, scope: !10411)
!10413 = !DILocation(line: 3165, column: 46, scope: !10411)
!10414 = !DILocation(line: 3165, column: 3, scope: !10411)
!10415 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10416, file: !10416, line: 40, type: !7520, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !256)
!10416 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10417 = !DILocation(line: 45, column: 3, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !10416, line: 44, column: 44)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !10416, line: 44, column: 13)
!10420 = distinct !DILexicalBlock(scope: !10415, file: !10416, line: 42, column: 6)
!10421 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10416, file: !10416, line: 56, type: !337, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !256)
!10422 = !DILocation(line: 58, column: 2, scope: !10421)
!10423 = !DILocation(line: 62, column: 1, scope: !10421)
!10424 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10291, file: !10291, line: 4304, type: !10425, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !10427)
!10425 = !DISubroutineType(types: !10426)
!10426 = !{null, !108, !108, !108, !108}
!10427 = !{!10428, !10429, !10430, !10431}
!10428 = !DILocalVariable(name: "Source", arg: 1, scope: !10424, file: !10291, line: 4304, type: !108)
!10429 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10424, file: !10291, line: 4304, type: !108)
!10430 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10424, file: !10291, line: 4304, type: !108)
!10431 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10424, file: !10291, line: 4304, type: !108)
!10432 = !DILocation(line: 0, scope: !10424)
!10433 = !DILocation(line: 4306, column: 3, scope: !10424)
!10434 = !DILocation(line: 4308, column: 3, scope: !10424)
!10435 = !DILocation(line: 4310, column: 3, scope: !10424)
!10436 = !DILocation(line: 4312, column: 1, scope: !10424)
!10437 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10416, file: !10416, line: 69, type: !337, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !256)
!10438 = !DILocation(line: 72, column: 2, scope: !10437)
!10439 = !DILocation(line: 73, column: 1, scope: !10437)
!10440 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10441, file: !10441, line: 1185, type: !7530, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3082, retainedNodes: !10442)
!10441 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10442 = !{!10443, !10444}
!10443 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10440, file: !10441, line: 1185, type: !108)
!10444 = !DILocalVariable(name: "tmpreg", scope: !10440, file: !10441, line: 1187, type: !431)
!10445 = !DILocation(line: 0, scope: !10440)
!10446 = !DILocation(line: 1187, column: 3, scope: !10440)
!10447 = !DILocation(line: 1187, column: 17, scope: !10440)
!10448 = !DILocation(line: 1188, column: 3, scope: !10440)
!10449 = !DILocation(line: 1190, column: 12, scope: !10440)
!10450 = !DILocation(line: 1190, column: 10, scope: !10440)
!10451 = !DILocation(line: 1191, column: 9, scope: !10440)
!10452 = !DILocation(line: 1192, column: 1, scope: !10440)
!10453 = distinct !DISubprogram(name: "uart_console_init", scope: !1155, file: !1155, line: 588, type: !1132, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !10454)
!10454 = !{!10455}
!10455 = !DILocalVariable(name: "arg", arg: 1, scope: !10453, file: !1155, line: 588, type: !1110)
!10456 = !DILocation(line: 0, scope: !10453)
!10457 = !DILocation(line: 593, column: 7, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10453, file: !1155, line: 593, column: 6)
!10459 = !DILocation(line: 593, column: 6, scope: !10453)
!10460 = !DILocation(line: 597, column: 2, scope: !10453)
!10461 = !DILocation(line: 599, column: 2, scope: !10453)
!10462 = !DILocation(line: 600, column: 1, scope: !10453)
!10463 = distinct !DISubprogram(name: "device_is_ready", scope: !10464, file: !10464, line: 47, type: !10465, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !10467)
!10464 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!10465 = !DISubroutineType(types: !10466)
!10466 = !{!136, !1110}
!10467 = !{!10468}
!10468 = !DILocalVariable(name: "dev", arg: 1, scope: !10463, file: !10464, line: 47, type: !1110)
!10469 = !DILocation(line: 0, scope: !10463)
!10470 = !DILocation(line: 55, column: 2, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10463, file: !10464, line: 55, column: 2)
!10472 = !{i64 2155287847}
!10473 = !DILocation(line: 56, column: 9, scope: !10463)
!10474 = !DILocation(line: 56, column: 2, scope: !10463)
!10475 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1155, file: !1155, line: 573, type: !337, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !256)
!10476 = !DILocation(line: 576, column: 2, scope: !10475)
!10477 = !DILocation(line: 579, column: 2, scope: !10475)
!10478 = !DILocation(line: 581, column: 1, scope: !10475)
!10479 = distinct !DISubprogram(name: "console_out", scope: !1155, file: !1155, line: 77, type: !418, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !10480)
!10480 = !{!10481}
!10481 = !DILocalVariable(name: "c", arg: 1, scope: !10479, file: !1155, line: 77, type: !107)
!10482 = !DILocation(line: 0, scope: !10479)
!10483 = !DILocation(line: 89, column: 11, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10479, file: !1155, line: 89, column: 6)
!10485 = !DILocation(line: 89, column: 6, scope: !10479)
!10486 = !DILocation(line: 90, column: 3, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10484, file: !1155, line: 89, column: 17)
!10488 = !DILocation(line: 91, column: 2, scope: !10487)
!10489 = !DILocation(line: 92, column: 34, scope: !10479)
!10490 = !DILocation(line: 92, column: 2, scope: !10479)
!10491 = !DILocation(line: 94, column: 2, scope: !10479)
!10492 = distinct !DISubprogram(name: "uart_poll_out", scope: !10493, file: !10493, line: 95, type: !1128, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !10494)
!10493 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/subsys/zbus/hello_world")
!10494 = !{!10495, !10496}
!10495 = !DILocalVariable(name: "dev", arg: 1, scope: !10492, file: !10493, line: 95, type: !1110)
!10496 = !DILocalVariable(name: "out_char", arg: 2, scope: !10492, file: !10493, line: 95, type: !191)
!10497 = !DILocation(line: 0, scope: !10492)
!10498 = !DILocation(line: 105, column: 2, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10492, file: !10493, line: 105, column: 2)
!10500 = !{i64 2155371238}
!10501 = !DILocation(line: 106, column: 2, scope: !10492)
!10502 = !DILocation(line: 107, column: 1, scope: !10492)
!10503 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1104, file: !1104, line: 574, type: !1128, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !10504)
!10504 = !{!10505, !10506, !10507}
!10505 = !DILocalVariable(name: "dev", arg: 1, scope: !10503, file: !1104, line: 574, type: !1110)
!10506 = !DILocalVariable(name: "out_char", arg: 2, scope: !10503, file: !1104, line: 575, type: !191)
!10507 = !DILocalVariable(name: "api", scope: !10503, file: !1104, line: 577, type: !1101)
!10508 = !DILocation(line: 0, scope: !10503)
!10509 = !DILocation(line: 578, column: 40, scope: !10503)
!10510 = !DILocation(line: 580, column: 7, scope: !10503)
!10511 = !DILocation(line: 580, column: 2, scope: !10503)
!10512 = !DILocation(line: 581, column: 1, scope: !10503)
!10513 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !10465, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !10514)
!10514 = !{!10515}
!10515 = !DILocalVariable(name: "dev", arg: 1, scope: !10513, file: !451, line: 730, type: !1110)
!10516 = !DILocation(line: 0, scope: !10513)
!10517 = !DILocation(line: 732, column: 9, scope: !10513)
!10518 = !DILocation(line: 732, column: 2, scope: !10513)
!10519 = distinct !DISubprogram(name: "uart_register_input", scope: !1155, file: !1155, line: 560, type: !10520, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1098, retainedNodes: !10565)
!10520 = !DISubroutineType(types: !10521)
!10521 = !{null, !10522, !10522, !10562}
!10522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10523, size: 32)
!10523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !142, line: 2208, size: 128, elements: !10524)
!10524 = !{!10525}
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10523, file: !142, line: 2209, baseType: !10526, size: 128)
!10526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !142, line: 1709, size: 128, elements: !10527)
!10527 = !{!10528, !10541, !10543}
!10528 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10526, file: !142, line: 1710, baseType: !10529, size: 64)
!10529 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10530, line: 46, baseType: !10531)
!10530 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10530, line: 41, size: 64, elements: !10532)
!10532 = !{!10533, !10540}
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10531, file: !10530, line: 42, baseType: !10534, size: 32)
!10534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10535, size: 32)
!10535 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10530, line: 39, baseType: !10536)
!10536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10530, line: 35, size: 32, elements: !10537)
!10537 = !{!10538}
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10536, file: !10530, line: 36, baseType: !10539, size: 32)
!10539 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10530, line: 32, baseType: !108)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10531, file: !10530, line: 43, baseType: !10534, size: 32, offset: 32)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10526, file: !142, line: 1711, baseType: !10542, offset: 64)
!10542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10526, file: !142, line: 1712, baseType: !10544, size: 64, offset: 64)
!10544 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !10545)
!10545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !10546)
!10546 = !{!10547}
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10545, file: !146, line: 232, baseType: !10548, size: 64)
!10548 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !10549)
!10549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !10550)
!10550 = !{!10551, !10557}
!10551 = !DIDerivedType(tag: DW_TAG_member, scope: !10549, file: !151, line: 38, baseType: !10552, size: 32)
!10552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10549, file: !151, line: 38, size: 32, elements: !10553)
!10553 = !{!10554, !10556}
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10552, file: !151, line: 39, baseType: !10555, size: 32)
!10555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10549, size: 32)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10552, file: !151, line: 40, baseType: !10555, size: 32)
!10557 = !DIDerivedType(tag: DW_TAG_member, scope: !10549, file: !151, line: 42, baseType: !10558, size: 32, offset: 32)
!10558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10549, file: !151, line: 42, size: 32, elements: !10559)
!10559 = !{!10560, !10561}
!10560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10558, file: !151, line: 43, baseType: !10555, size: 32)
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10558, file: !151, line: 44, baseType: !10555, size: 32)
!10562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10563, size: 32)
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!190, !283, !190}
!10565 = !{!10566, !10567, !10568}
!10566 = !DILocalVariable(name: "avail", arg: 1, scope: !10519, file: !1155, line: 560, type: !10522)
!10567 = !DILocalVariable(name: "lines", arg: 2, scope: !10519, file: !1155, line: 560, type: !10522)
!10568 = !DILocalVariable(name: "completion", arg: 3, scope: !10519, file: !1155, line: 561, type: !10562)
!10569 = !DILocation(line: 0, scope: !10519)
!10570 = !DILocation(line: 566, column: 1, scope: !10519)
!10571 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1335, file: !1335, line: 523, type: !1191, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10572)
!10572 = !{!10573, !10574, !10575, !10576, !10577}
!10573 = !DILocalVariable(name: "dev", arg: 1, scope: !10571, file: !1335, line: 523, type: !1193)
!10574 = !DILocalVariable(name: "pin", arg: 2, scope: !10571, file: !1335, line: 524, type: !1208)
!10575 = !DILocalVariable(name: "flags", arg: 3, scope: !10571, file: !1335, line: 524, type: !1209)
!10576 = !DILocalVariable(name: "err", scope: !10571, file: !1335, line: 526, type: !107)
!10577 = !DILocalVariable(name: "pincfg", scope: !10571, file: !1335, line: 527, type: !107)
!10578 = !DILocation(line: 0, scope: !10571)
!10579 = !DILocation(line: 527, column: 2, scope: !10571)
!10580 = !DILocation(line: 532, column: 8, scope: !10571)
!10581 = !DILocation(line: 533, column: 10, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10571, file: !1335, line: 533, column: 6)
!10583 = !DILocation(line: 533, column: 6, scope: !10571)
!10584 = !DILocation(line: 543, column: 13, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10571, file: !1335, line: 543, column: 6)
!10586 = !DILocation(line: 543, column: 28, scope: !10585)
!10587 = !DILocation(line: 543, column: 6, scope: !10571)
!10588 = !DILocation(line: 544, column: 14, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !1335, line: 544, column: 7)
!10590 = distinct !DILexicalBlock(scope: !10585, file: !1335, line: 543, column: 34)
!10591 = !DILocation(line: 544, column: 39, scope: !10589)
!10592 = !DILocation(line: 544, column: 7, scope: !10590)
!10593 = !DILocation(line: 545, column: 38, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10589, file: !1335, line: 544, column: 45)
!10595 = !DILocation(line: 545, column: 4, scope: !10594)
!10596 = !DILocation(line: 546, column: 3, scope: !10594)
!10597 = !DILocation(line: 546, column: 21, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10589, file: !1335, line: 546, column: 14)
!10599 = !DILocation(line: 546, column: 45, scope: !10598)
!10600 = !DILocation(line: 546, column: 14, scope: !10589)
!10601 = !DILocation(line: 547, column: 40, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10598, file: !1335, line: 546, column: 51)
!10603 = !DILocation(line: 547, column: 4, scope: !10602)
!10604 = !DILocation(line: 548, column: 3, scope: !10602)
!10605 = !DILocation(line: 551, column: 32, scope: !10571)
!10606 = !DILocation(line: 551, column: 37, scope: !10571)
!10607 = !DILocation(line: 551, column: 2, scope: !10571)
!10608 = !DILocation(line: 554, column: 6, scope: !10571)
!10609 = !DILocation(line: 562, column: 1, scope: !10571)
!10610 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1335, file: !1335, line: 410, type: !10611, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10613)
!10611 = !DISubroutineType(types: !10612)
!10612 = !{!107, !1193, !1020}
!10613 = !{!10614, !10615, !10616, !10618}
!10614 = !DILocalVariable(name: "dev", arg: 1, scope: !10610, file: !1335, line: 410, type: !1193)
!10615 = !DILocalVariable(name: "value", arg: 2, scope: !10610, file: !1335, line: 410, type: !1020)
!10616 = !DILocalVariable(name: "cfg", scope: !10610, file: !1335, line: 412, type: !10617)
!10617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!10618 = !DILocalVariable(name: "gpio", scope: !10610, file: !1335, line: 413, type: !1266)
!10619 = !DILocation(line: 0, scope: !10610)
!10620 = !DILocation(line: 412, column: 45, scope: !10610)
!10621 = !DILocation(line: 413, column: 44, scope: !10610)
!10622 = !DILocation(line: 415, column: 11, scope: !10610)
!10623 = !DILocation(line: 415, column: 9, scope: !10610)
!10624 = !DILocation(line: 417, column: 2, scope: !10610)
!10625 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1335, file: !1335, line: 420, type: !1218, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10626)
!10626 = !{!10627, !10628, !10629, !10630, !10631, !10632}
!10627 = !DILocalVariable(name: "dev", arg: 1, scope: !10625, file: !1335, line: 420, type: !1193)
!10628 = !DILocalVariable(name: "mask", arg: 2, scope: !10625, file: !1335, line: 421, type: !1220)
!10629 = !DILocalVariable(name: "value", arg: 3, scope: !10625, file: !1335, line: 422, type: !1215)
!10630 = !DILocalVariable(name: "cfg", scope: !10625, file: !1335, line: 424, type: !10617)
!10631 = !DILocalVariable(name: "gpio", scope: !10625, file: !1335, line: 425, type: !1266)
!10632 = !DILocalVariable(name: "port_value", scope: !10625, file: !1335, line: 426, type: !108)
!10633 = !DILocation(line: 0, scope: !10625)
!10634 = !DILocation(line: 424, column: 45, scope: !10625)
!10635 = !DILocation(line: 425, column: 44, scope: !10625)
!10636 = !DILocation(line: 430, column: 15, scope: !10625)
!10637 = !DILocation(line: 431, column: 46, scope: !10625)
!10638 = !DILocation(line: 431, column: 44, scope: !10625)
!10639 = !DILocation(line: 431, column: 61, scope: !10625)
!10640 = !DILocation(line: 431, column: 53, scope: !10625)
!10641 = !DILocation(line: 431, column: 2, scope: !10625)
!10642 = !DILocation(line: 435, column: 2, scope: !10625)
!10643 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1335, file: !1335, line: 438, type: !1223, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10644)
!10644 = !{!10645, !10646, !10647, !10648}
!10645 = !DILocalVariable(name: "dev", arg: 1, scope: !10643, file: !1335, line: 438, type: !1193)
!10646 = !DILocalVariable(name: "pins", arg: 2, scope: !10643, file: !1335, line: 439, type: !1220)
!10647 = !DILocalVariable(name: "cfg", scope: !10643, file: !1335, line: 441, type: !10617)
!10648 = !DILocalVariable(name: "gpio", scope: !10643, file: !1335, line: 442, type: !1266)
!10649 = !DILocation(line: 0, scope: !10643)
!10650 = !DILocation(line: 441, column: 45, scope: !10643)
!10651 = !DILocation(line: 442, column: 44, scope: !10643)
!10652 = !DILocation(line: 448, column: 2, scope: !10643)
!10653 = !DILocation(line: 450, column: 2, scope: !10643)
!10654 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1335, file: !1335, line: 453, type: !1223, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10655)
!10655 = !{!10656, !10657, !10658, !10659}
!10656 = !DILocalVariable(name: "dev", arg: 1, scope: !10654, file: !1335, line: 453, type: !1193)
!10657 = !DILocalVariable(name: "pins", arg: 2, scope: !10654, file: !1335, line: 454, type: !1220)
!10658 = !DILocalVariable(name: "cfg", scope: !10654, file: !1335, line: 456, type: !10617)
!10659 = !DILocalVariable(name: "gpio", scope: !10654, file: !1335, line: 457, type: !1266)
!10660 = !DILocation(line: 0, scope: !10654)
!10661 = !DILocation(line: 456, column: 45, scope: !10654)
!10662 = !DILocation(line: 457, column: 44, scope: !10654)
!10663 = !DILocation(line: 467, column: 2, scope: !10654)
!10664 = !DILocation(line: 470, column: 2, scope: !10654)
!10665 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1335, file: !1335, line: 473, type: !1223, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10666)
!10666 = !{!10667, !10668, !10669, !10670}
!10667 = !DILocalVariable(name: "dev", arg: 1, scope: !10665, file: !1335, line: 473, type: !1193)
!10668 = !DILocalVariable(name: "pins", arg: 2, scope: !10665, file: !1335, line: 474, type: !1220)
!10669 = !DILocalVariable(name: "cfg", scope: !10665, file: !1335, line: 476, type: !10617)
!10670 = !DILocalVariable(name: "gpio", scope: !10665, file: !1335, line: 477, type: !1266)
!10671 = !DILocation(line: 0, scope: !10665)
!10672 = !DILocation(line: 476, column: 45, scope: !10665)
!10673 = !DILocation(line: 477, column: 44, scope: !10665)
!10674 = !DILocation(line: 484, column: 2, scope: !10665)
!10675 = !DILocation(line: 487, column: 2, scope: !10665)
!10676 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1335, file: !1335, line: 594, type: !1229, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10677)
!10677 = !{!10678, !10679, !10680, !10681, !10682, !10683, !10685, !10686, !10687}
!10678 = !DILocalVariable(name: "dev", arg: 1, scope: !10676, file: !1335, line: 594, type: !1193)
!10679 = !DILocalVariable(name: "pin", arg: 2, scope: !10676, file: !1335, line: 595, type: !1208)
!10680 = !DILocalVariable(name: "mode", arg: 3, scope: !10676, file: !1335, line: 596, type: !1167)
!10681 = !DILocalVariable(name: "trig", arg: 4, scope: !10676, file: !1335, line: 597, type: !1173)
!10682 = !DILocalVariable(name: "cfg", scope: !10676, file: !1335, line: 599, type: !10617)
!10683 = !DILocalVariable(name: "data", scope: !10676, file: !1335, line: 600, type: !10684)
!10684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!10685 = !DILocalVariable(name: "edge", scope: !10676, file: !1335, line: 601, type: !107)
!10686 = !DILocalVariable(name: "err", scope: !10676, file: !1335, line: 602, type: !107)
!10687 = !DILabel(scope: !10676, name: "exit", file: !1335, line: 643)
!10688 = !DILocation(line: 0, scope: !10676)
!10689 = !DILocation(line: 599, column: 45, scope: !10676)
!10690 = !DILocation(line: 604, column: 6, scope: !10676)
!10691 = !DILocation(line: 605, column: 34, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10693, file: !1335, line: 605, column: 7)
!10693 = distinct !DILexicalBlock(scope: !10694, file: !1335, line: 604, column: 38)
!10694 = distinct !DILexicalBlock(scope: !10676, file: !1335, line: 604, column: 6)
!10695 = !DILocation(line: 605, column: 7, scope: !10692)
!10696 = !DILocation(line: 605, column: 47, scope: !10692)
!10697 = !DILocation(line: 605, column: 39, scope: !10692)
!10698 = !DILocation(line: 605, column: 7, scope: !10693)
!10699 = !DILocation(line: 606, column: 4, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10692, file: !1335, line: 605, column: 53)
!10701 = !DILocation(line: 607, column: 4, scope: !10700)
!10702 = !DILocation(line: 608, column: 4, scope: !10700)
!10703 = !DILocation(line: 609, column: 3, scope: !10700)
!10704 = !DILocation(line: 600, column: 38, scope: !10676)
!10705 = !DILocation(line: 620, column: 30, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10676, file: !1335, line: 620, column: 6)
!10707 = !DILocation(line: 620, column: 6, scope: !10706)
!10708 = !DILocation(line: 620, column: 57, scope: !10706)
!10709 = !DILocation(line: 620, column: 6, scope: !10676)
!10710 = !DILocation(line: 625, column: 29, scope: !10676)
!10711 = !DILocation(line: 625, column: 2, scope: !10676)
!10712 = !DILocation(line: 627, column: 2, scope: !10676)
!10713 = !DILocation(line: 630, column: 3, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10676, file: !1335, line: 627, column: 16)
!10715 = !DILocation(line: 633, column: 3, scope: !10714)
!10716 = !DILocation(line: 636, column: 3, scope: !10714)
!10717 = !DILocation(line: 639, column: 2, scope: !10676)
!10718 = !DILocation(line: 641, column: 2, scope: !10676)
!10719 = !DILocation(line: 643, column: 1, scope: !10676)
!10720 = !DILocation(line: 644, column: 2, scope: !10676)
!10721 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1335, file: !1335, line: 647, type: !1233, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10722)
!10722 = !{!10723, !10724, !10725, !10726}
!10723 = !DILocalVariable(name: "dev", arg: 1, scope: !10721, file: !1335, line: 647, type: !1193)
!10724 = !DILocalVariable(name: "callback", arg: 2, scope: !10721, file: !1335, line: 648, type: !1235)
!10725 = !DILocalVariable(name: "set", arg: 3, scope: !10721, file: !1335, line: 649, type: !136)
!10726 = !DILocalVariable(name: "data", scope: !10721, file: !1335, line: 651, type: !10684)
!10727 = !DILocation(line: 0, scope: !10721)
!10728 = !DILocation(line: 651, column: 38, scope: !10721)
!10729 = !DILocation(line: 653, column: 37, scope: !10721)
!10730 = !DILocation(line: 653, column: 9, scope: !10721)
!10731 = !DILocation(line: 653, column: 2, scope: !10721)
!10732 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10733, file: !10733, line: 38, type: !10734, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10737)
!10733 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!107, !10736, !1235, !136}
!10736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!10737 = !{!10738, !10739, !10740}
!10738 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10732, file: !10733, line: 38, type: !10736)
!10739 = !DILocalVariable(name: "callback", arg: 2, scope: !10732, file: !10733, line: 39, type: !1235)
!10740 = !DILocalVariable(name: "set", arg: 3, scope: !10732, file: !10733, line: 40, type: !136)
!10741 = !DILocation(line: 0, scope: !10732)
!10742 = !DILocation(line: 45, column: 7, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10732, file: !10733, line: 45, column: 6)
!10744 = !DILocation(line: 45, column: 6, scope: !10732)
!10745 = !DILocation(line: 46, column: 56, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10747, file: !10733, line: 46, column: 7)
!10747 = distinct !DILexicalBlock(scope: !10743, file: !10733, line: 45, column: 38)
!10748 = !DILocation(line: 46, column: 8, scope: !10746)
!10749 = !DILocation(line: 46, column: 7, scope: !10747)
!10750 = !DILocation(line: 51, column: 13, scope: !10743)
!10751 = !DILocation(line: 56, column: 43, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10753, file: !10733, line: 55, column: 11)
!10753 = distinct !DILexicalBlock(scope: !10732, file: !10733, line: 55, column: 6)
!10754 = !DILocation(line: 56, column: 3, scope: !10752)
!10755 = !DILocation(line: 57, column: 2, scope: !10752)
!10756 = !DILocation(line: 60, column: 1, scope: !10732)
!10757 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1240, file: !1240, line: 261, type: !10758, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10760)
!10758 = !DISubroutineType(types: !10759)
!10759 = !{!136, !10736}
!10760 = !{!10761}
!10761 = !DILocalVariable(name: "list", arg: 1, scope: !10757, file: !1240, line: 261, type: !10736)
!10762 = !DILocation(line: 0, scope: !10757)
!10763 = !DILocation(line: 261, column: 1, scope: !10757)
!10764 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1240, file: !1240, line: 417, type: !10765, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10767)
!10765 = !DISubroutineType(types: !10766)
!10766 = !{!136, !10736, !1408}
!10767 = !{!10768, !10769, !10770, !10771}
!10768 = !DILocalVariable(name: "list", arg: 1, scope: !10764, file: !1240, line: 417, type: !10736)
!10769 = !DILocalVariable(name: "node", arg: 2, scope: !10764, file: !1240, line: 417, type: !1408)
!10770 = !DILocalVariable(name: "prev", scope: !10764, file: !1240, line: 417, type: !1408)
!10771 = !DILocalVariable(name: "test", scope: !10764, file: !1240, line: 417, type: !1408)
!10772 = !DILocation(line: 0, scope: !10764)
!10773 = !DILocation(line: 417, column: 1, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10764, file: !1240, line: 417, column: 1)
!10775 = !DILocation(line: 417, column: 1, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10774, file: !1240, line: 417, column: 1)
!10777 = !DILocation(line: 417, column: 1, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10779, file: !1240, line: 417, column: 1)
!10779 = distinct !DILexicalBlock(scope: !10776, file: !1240, line: 417, column: 1)
!10780 = !DILocation(line: 417, column: 1, scope: !10779)
!10781 = distinct !{!10781, !10773, !10773}
!10782 = !DILocation(line: 417, column: 1, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10778, file: !1240, line: 417, column: 1)
!10784 = !DILocation(line: 417, column: 1, scope: !10764)
!10785 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1240, file: !1240, line: 298, type: !10786, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10788)
!10786 = !DISubroutineType(types: !10787)
!10787 = !{null, !10736, !1408}
!10788 = !{!10789, !10790}
!10789 = !DILocalVariable(name: "list", arg: 1, scope: !10785, file: !1240, line: 298, type: !10736)
!10790 = !DILocalVariable(name: "node", arg: 2, scope: !10785, file: !1240, line: 298, type: !1408)
!10791 = !DILocation(line: 0, scope: !10785)
!10792 = !DILocation(line: 298, column: 1, scope: !10785)
!10793 = !DILocation(line: 298, column: 1, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10785, file: !1240, line: 298, column: 1)
!10795 = !DILocation(line: 298, column: 1, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10794, file: !1240, line: 298, column: 1)
!10797 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1240, file: !1240, line: 231, type: !10798, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10800)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{!1408, !10736}
!10800 = !{!10801}
!10801 = !DILocalVariable(name: "list", arg: 1, scope: !10797, file: !1240, line: 231, type: !10736)
!10802 = !DILocation(line: 0, scope: !10797)
!10803 = !DILocation(line: 233, column: 15, scope: !10797)
!10804 = !DILocation(line: 233, column: 2, scope: !10797)
!10805 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1240, file: !1240, line: 209, type: !10806, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10808)
!10806 = !DISubroutineType(types: !10807)
!10807 = !{null, !1408, !1408}
!10808 = !{!10809, !10810}
!10809 = !DILocalVariable(name: "parent", arg: 1, scope: !10805, file: !1240, line: 209, type: !1408)
!10810 = !DILocalVariable(name: "child", arg: 2, scope: !10805, file: !1240, line: 209, type: !1408)
!10811 = !DILocation(line: 0, scope: !10805)
!10812 = !DILocation(line: 211, column: 10, scope: !10805)
!10813 = !DILocation(line: 211, column: 15, scope: !10805)
!10814 = !DILocation(line: 212, column: 1, scope: !10805)
!10815 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1240, file: !1240, line: 214, type: !10786, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10816)
!10816 = !{!10817, !10818}
!10817 = !DILocalVariable(name: "list", arg: 1, scope: !10815, file: !1240, line: 214, type: !10736)
!10818 = !DILocalVariable(name: "node", arg: 2, scope: !10815, file: !1240, line: 214, type: !1408)
!10819 = !DILocation(line: 0, scope: !10815)
!10820 = !DILocation(line: 216, column: 8, scope: !10815)
!10821 = !DILocation(line: 216, column: 13, scope: !10815)
!10822 = !DILocation(line: 217, column: 1, scope: !10815)
!10823 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1240, file: !1240, line: 243, type: !10798, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10824)
!10824 = !{!10825}
!10825 = !DILocalVariable(name: "list", arg: 1, scope: !10823, file: !1240, line: 243, type: !10736)
!10826 = !DILocation(line: 0, scope: !10823)
!10827 = !DILocation(line: 245, column: 15, scope: !10823)
!10828 = !DILocation(line: 245, column: 2, scope: !10823)
!10829 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1240, file: !1240, line: 219, type: !10786, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10830)
!10830 = !{!10831, !10832}
!10831 = !DILocalVariable(name: "list", arg: 1, scope: !10829, file: !1240, line: 219, type: !10736)
!10832 = !DILocalVariable(name: "node", arg: 2, scope: !10829, file: !1240, line: 219, type: !1408)
!10833 = !DILocation(line: 0, scope: !10829)
!10834 = !DILocation(line: 221, column: 8, scope: !10829)
!10835 = !DILocation(line: 221, column: 13, scope: !10829)
!10836 = !DILocation(line: 222, column: 1, scope: !10829)
!10837 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1240, file: !1240, line: 401, type: !10838, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10840)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{null, !10736, !1408, !1408}
!10840 = !{!10841, !10842, !10843}
!10841 = !DILocalVariable(name: "list", arg: 1, scope: !10837, file: !1240, line: 401, type: !10736)
!10842 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10837, file: !1240, line: 401, type: !1408)
!10843 = !DILocalVariable(name: "node", arg: 3, scope: !10837, file: !1240, line: 401, type: !1408)
!10844 = !DILocation(line: 0, scope: !10837)
!10845 = !DILocation(line: 401, column: 1, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10837, file: !1240, line: 401, column: 1)
!10847 = !DILocation(line: 0, scope: !10846)
!10848 = !DILocation(line: 401, column: 1, scope: !10837)
!10849 = !DILocation(line: 401, column: 1, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10846, file: !1240, line: 401, column: 1)
!10851 = !DILocation(line: 401, column: 1, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10850, file: !1240, line: 401, column: 1)
!10853 = !DILocation(line: 401, column: 1, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10852, file: !1240, line: 401, column: 1)
!10855 = !DILocation(line: 401, column: 1, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10846, file: !1240, line: 401, column: 1)
!10857 = !DILocation(line: 401, column: 1, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10856, file: !1240, line: 401, column: 1)
!10859 = !DILocation(line: 401, column: 1, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10858, file: !1240, line: 401, column: 1)
!10861 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1240, file: !1240, line: 285, type: !10862, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10864)
!10862 = !DISubroutineType(types: !10863)
!10863 = !{!1408, !1408}
!10864 = !{!10865}
!10865 = !DILocalVariable(name: "node", arg: 1, scope: !10861, file: !1240, line: 285, type: !1408)
!10866 = !DILocation(line: 0, scope: !10861)
!10867 = !DILocation(line: 285, column: 1, scope: !10861)
!10868 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1240, file: !1240, line: 274, type: !10862, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10869)
!10869 = !{!10870}
!10870 = !DILocalVariable(name: "node", arg: 1, scope: !10868, file: !1240, line: 274, type: !1408)
!10871 = !DILocation(line: 0, scope: !10868)
!10872 = !DILocation(line: 274, column: 1, scope: !10868)
!10873 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1240, file: !1240, line: 204, type: !10862, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10874)
!10874 = !{!10875}
!10875 = !DILocalVariable(name: "node", arg: 1, scope: !10873, file: !1240, line: 204, type: !1408)
!10876 = !DILocation(line: 0, scope: !10873)
!10877 = !DILocation(line: 206, column: 15, scope: !10873)
!10878 = !DILocation(line: 206, column: 2, scope: !10873)
!10879 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1335, file: !1335, line: 342, type: !418, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10880)
!10880 = !{!10881, !10882, !10883}
!10881 = !DILocalVariable(name: "pin", arg: 1, scope: !10879, file: !1335, line: 342, type: !107)
!10882 = !DILocalVariable(name: "line", scope: !10879, file: !1335, line: 344, type: !108)
!10883 = !DILocalVariable(name: "port", scope: !10879, file: !1335, line: 345, type: !107)
!10884 = !DILocation(line: 0, scope: !10879)
!10885 = !DILocation(line: 344, column: 18, scope: !10879)
!10886 = !{i32 983040, i32 0}
!10887 = !DILocation(line: 356, column: 9, scope: !10879)
!10888 = !DILocation(line: 370, column: 2, scope: !10879)
!10889 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1335, file: !1335, line: 37, type: !878, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10890)
!10890 = !{!10891, !10892, !10893}
!10891 = !DILocalVariable(name: "line", arg: 1, scope: !10889, file: !1335, line: 37, type: !107)
!10892 = !DILocalVariable(name: "arg", arg: 2, scope: !10889, file: !1335, line: 37, type: !106)
!10893 = !DILocalVariable(name: "data", scope: !10889, file: !1335, line: 39, type: !10684)
!10894 = !DILocation(line: 0, scope: !10889)
!10895 = !DILocation(line: 41, column: 29, scope: !10889)
!10896 = !DILocation(line: 41, column: 39, scope: !10889)
!10897 = !DILocation(line: 41, column: 44, scope: !10889)
!10898 = !DILocation(line: 41, column: 2, scope: !10889)
!10899 = !DILocation(line: 42, column: 1, scope: !10889)
!10900 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1335, file: !1335, line: 376, type: !10901, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10903)
!10901 = !DISubroutineType(types: !10902)
!10902 = !{!107, !107, !107}
!10903 = !{!10904, !10905, !10906, !10908, !10909}
!10904 = !DILocalVariable(name: "port", arg: 1, scope: !10900, file: !1335, line: 376, type: !107)
!10905 = !DILocalVariable(name: "pin", arg: 2, scope: !10900, file: !1335, line: 376, type: !107)
!10906 = !DILocalVariable(name: "clk", scope: !10900, file: !1335, line: 386, type: !10907)
!10907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!10908 = !DILocalVariable(name: "pclken", scope: !10900, file: !1335, line: 387, type: !1451)
!10909 = !DILocalVariable(name: "ret", scope: !10900, file: !1335, line: 396, type: !107)
!10910 = !DILocation(line: 0, scope: !10900)
!10911 = !DILocation(line: 387, column: 2, scope: !10900)
!10912 = !DILocation(line: 387, column: 22, scope: !10900)
!10913 = !DILocation(line: 399, column: 8, scope: !10900)
!10914 = !DILocation(line: 400, column: 10, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10900, file: !1335, line: 400, column: 6)
!10916 = !DILocation(line: 400, column: 6, scope: !10900)
!10917 = !DILocation(line: 405, column: 2, scope: !10900)
!10918 = !DILocation(line: 407, column: 2, scope: !10900)
!10919 = !DILocation(line: 408, column: 1, scope: !10900)
!10920 = distinct !DISubprogram(name: "clock_control_on", scope: !968, file: !968, line: 123, type: !1300, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10921)
!10921 = !{!10922, !10923, !10924}
!10922 = !DILocalVariable(name: "dev", arg: 1, scope: !10920, file: !968, line: 123, type: !1193)
!10923 = !DILocalVariable(name: "sys", arg: 2, scope: !10920, file: !968, line: 124, type: !1064)
!10924 = !DILocalVariable(name: "api", scope: !10920, file: !968, line: 126, type: !1293)
!10925 = !DILocation(line: 0, scope: !10920)
!10926 = !DILocation(line: 127, column: 49, scope: !10920)
!10927 = !DILocation(line: 129, column: 14, scope: !10920)
!10928 = !DILocation(line: 129, column: 9, scope: !10920)
!10929 = !DILocation(line: 129, column: 2, scope: !10920)
!10930 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1335, file: !1335, line: 311, type: !10048, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10931)
!10931 = !{!10932, !10933, !10934}
!10932 = !DILocalVariable(name: "port", arg: 1, scope: !10930, file: !1335, line: 311, type: !107)
!10933 = !DILocalVariable(name: "pin", arg: 2, scope: !10930, file: !1335, line: 311, type: !107)
!10934 = !DILocalVariable(name: "line", scope: !10930, file: !1335, line: 313, type: !108)
!10935 = !DILocation(line: 0, scope: !10930)
!10936 = !DILocation(line: 313, column: 18, scope: !10930)
!10937 = !DILocation(line: 337, column: 2, scope: !10930)
!10938 = !DILocation(line: 340, column: 1, scope: !10930)
!10939 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1335, file: !1335, line: 295, type: !10940, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{!108, !107}
!10942 = !{!10943}
!10943 = !DILocalVariable(name: "pin", arg: 1, scope: !10939, file: !1335, line: 295, type: !107)
!10944 = !DILocation(line: 0, scope: !10939)
!10945 = !DILocation(line: 307, column: 46, scope: !10939)
!10946 = !DILocation(line: 307, column: 27, scope: !10939)
!10947 = !DILocation(line: 307, column: 32, scope: !10939)
!10948 = !DILocation(line: 307, column: 14, scope: !10939)
!10949 = !DILocation(line: 307, column: 39, scope: !10939)
!10950 = !DILocation(line: 307, column: 2, scope: !10939)
!10951 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7139, file: !7139, line: 671, type: !10952, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10954)
!10952 = !DISubroutineType(types: !10953)
!10953 = !{null, !108, !108}
!10954 = !{!10955, !10956}
!10955 = !DILocalVariable(name: "Port", arg: 1, scope: !10951, file: !7139, line: 671, type: !108)
!10956 = !DILocalVariable(name: "Line", arg: 2, scope: !10951, file: !7139, line: 671, type: !108)
!10957 = !DILocation(line: 0, scope: !10951)
!10958 = !DILocation(line: 673, column: 3, scope: !10951)
!10959 = !DILocalVariable(name: "value", arg: 1, scope: !10960, file: !7439, line: 373, type: !108)
!10960 = distinct !DISubprogram(name: "__RBIT", scope: !7439, file: !7439, line: 373, type: !8684, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10961)
!10961 = !{!10959, !10962}
!10962 = !DILocalVariable(name: "result", scope: !10960, file: !7439, line: 375, type: !108)
!10963 = !DILocation(line: 0, scope: !10960, inlinedAt: !10964)
!10964 = distinct !DILocation(line: 673, column: 3, scope: !10951)
!10965 = !DILocation(line: 380, column: 4, scope: !10960, inlinedAt: !10964)
!10966 = !{i64 3731929}
!10967 = !DILocalVariable(name: "value", arg: 1, scope: !10968, file: !7439, line: 403, type: !108)
!10968 = distinct !DISubprogram(name: "__CLZ", scope: !7439, file: !7439, line: 403, type: !10969, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10971)
!10969 = !DISubroutineType(types: !10970)
!10970 = !{!190, !108}
!10971 = !{!10967}
!10972 = !DILocation(line: 0, scope: !10968, inlinedAt: !10973)
!10973 = distinct !DILocation(line: 673, column: 3, scope: !10951)
!10974 = !DILocation(line: 414, column: 7, scope: !10968, inlinedAt: !10973)
!10975 = !DILocation(line: 674, column: 1, scope: !10951)
!10976 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10733, file: !10733, line: 69, type: !10977, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !10979)
!10977 = !DISubroutineType(types: !10978)
!10978 = !{null, !10736, !1193, !108}
!10979 = !{!10980, !10981, !10982, !10983, !10984}
!10980 = !DILocalVariable(name: "list", arg: 1, scope: !10976, file: !10733, line: 69, type: !10736)
!10981 = !DILocalVariable(name: "port", arg: 2, scope: !10976, file: !10733, line: 70, type: !1193)
!10982 = !DILocalVariable(name: "pins", arg: 3, scope: !10976, file: !10733, line: 71, type: !108)
!10983 = !DILocalVariable(name: "cb", scope: !10976, file: !10733, line: 73, type: !1235)
!10984 = !DILocalVariable(name: "tmp", scope: !10976, file: !10733, line: 73, type: !1235)
!10985 = !DILocation(line: 0, scope: !10976)
!10986 = !DILocation(line: 75, column: 2, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10976, file: !10733, line: 75, column: 2)
!10988 = !DILocation(line: 0, scope: !10987)
!10989 = !DILocation(line: 76, column: 11, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !10733, line: 76, column: 7)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !10733, line: 75, column: 57)
!10992 = distinct !DILexicalBlock(scope: !10987, file: !10733, line: 75, column: 2)
!10993 = !DILocation(line: 76, column: 20, scope: !10990)
!10994 = !DILocation(line: 76, column: 7, scope: !10991)
!10995 = !DILocation(line: 78, column: 8, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10990, file: !10733, line: 76, column: 28)
!10997 = !DILocation(line: 78, column: 4, scope: !10996)
!10998 = !DILocation(line: 79, column: 3, scope: !10996)
!10999 = !DILocation(line: 75, column: 2, scope: !10992)
!11000 = !DILocation(line: 81, column: 1, scope: !10976)
!11001 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7139, file: !7139, line: 710, type: !8684, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11002)
!11002 = !{!11003}
!11003 = !DILocalVariable(name: "Line", arg: 1, scope: !11001, file: !7139, line: 710, type: !108)
!11004 = !DILocation(line: 0, scope: !11001)
!11005 = !DILocation(line: 712, column: 21, scope: !11001)
!11006 = !DILocation(line: 0, scope: !10960, inlinedAt: !11007)
!11007 = distinct !DILocation(line: 712, column: 76, scope: !11001)
!11008 = !DILocation(line: 380, column: 4, scope: !10960, inlinedAt: !11007)
!11009 = !DILocation(line: 0, scope: !10968, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 712, column: 76, scope: !11001)
!11011 = !DILocation(line: 414, column: 7, scope: !10968, inlinedAt: !11010)
!11012 = !DILocation(line: 712, column: 73, scope: !11001)
!11013 = !DILocation(line: 712, column: 3, scope: !11001)
!11014 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11015, file: !11015, line: 910, type: !11016, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11018)
!11015 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11016 = !DISubroutineType(types: !11017)
!11017 = !{null, !1266, !108}
!11018 = !{!11019, !11020}
!11019 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11014, file: !11015, line: 910, type: !1266)
!11020 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11014, file: !11015, line: 910, type: !108)
!11021 = !DILocation(line: 0, scope: !11014)
!11022 = !DILocation(line: 912, column: 3, scope: !11014)
!11023 = !DILocation(line: 913, column: 1, scope: !11014)
!11024 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11015, file: !11015, line: 823, type: !11025, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11027)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{!108, !1266}
!11027 = !{!11028}
!11028 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11024, file: !11015, line: 823, type: !1266)
!11029 = !DILocation(line: 0, scope: !11024)
!11030 = !DILocation(line: 825, column: 21, scope: !11024)
!11031 = !DILocation(line: 825, column: 3, scope: !11024)
!11032 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11015, file: !11015, line: 812, type: !11016, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11033)
!11033 = !{!11034, !11035}
!11034 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11032, file: !11015, line: 812, type: !1266)
!11035 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11032, file: !11015, line: 812, type: !108)
!11036 = !DILocation(line: 0, scope: !11032)
!11037 = !DILocation(line: 814, column: 3, scope: !11032)
!11038 = !DILocation(line: 815, column: 1, scope: !11032)
!11039 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11015, file: !11015, line: 771, type: !11025, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11040)
!11040 = !{!11041}
!11041 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11039, file: !11015, line: 771, type: !1266)
!11042 = !DILocation(line: 0, scope: !11039)
!11043 = !DILocation(line: 773, column: 21, scope: !11039)
!11044 = !DILocation(line: 773, column: 3, scope: !11039)
!11045 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1335, file: !1335, line: 47, type: !11046, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11048)
!11046 = !DISubroutineType(types: !11047)
!11047 = !{!107, !1209, !396}
!11048 = !{!11049, !11050}
!11049 = !DILocalVariable(name: "flags", arg: 1, scope: !11045, file: !1335, line: 47, type: !1209)
!11050 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11045, file: !1335, line: 47, type: !396)
!11051 = !DILocation(line: 0, scope: !11045)
!11052 = !DILocation(line: 50, column: 13, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11045, file: !1335, line: 50, column: 6)
!11054 = !DILocation(line: 50, column: 28, scope: !11053)
!11055 = !DILocation(line: 50, column: 6, scope: !11045)
!11056 = !DILocation(line: 53, column: 11, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11053, file: !1335, line: 50, column: 34)
!11058 = !DILocation(line: 55, column: 14, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11057, file: !1335, line: 55, column: 7)
!11060 = !DILocation(line: 55, column: 35, scope: !11059)
!11061 = !DILocation(line: 55, column: 7, scope: !11057)
!11062 = !DILocation(line: 56, column: 14, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !1335, line: 56, column: 8)
!11064 = distinct !DILexicalBlock(scope: !11059, file: !1335, line: 55, column: 41)
!11065 = !DILocation(line: 56, column: 8, scope: !11064)
!11066 = !DILocation(line: 0, scope: !11059)
!11067 = !DILocation(line: 66, column: 14, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11057, file: !1335, line: 66, column: 7)
!11069 = !DILocation(line: 66, column: 30, scope: !11068)
!11070 = !DILocation(line: 66, column: 7, scope: !11057)
!11071 = !DILocation(line: 67, column: 12, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11068, file: !1335, line: 66, column: 36)
!11073 = !DILocation(line: 68, column: 3, scope: !11072)
!11074 = !DILocation(line: 68, column: 21, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11068, file: !1335, line: 68, column: 14)
!11076 = !DILocation(line: 68, column: 39, scope: !11075)
!11077 = !DILocation(line: 68, column: 14, scope: !11068)
!11078 = !DILocation(line: 69, column: 12, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !1335, line: 68, column: 45)
!11080 = !DILocation(line: 70, column: 3, scope: !11079)
!11081 = !DILocation(line: 72, column: 21, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11053, file: !1335, line: 72, column: 14)
!11083 = !DILocation(line: 72, column: 35, scope: !11082)
!11084 = !DILocation(line: 72, column: 14, scope: !11053)
!11085 = !DILocation(line: 77, column: 14, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !1335, line: 77, column: 7)
!11087 = distinct !DILexicalBlock(scope: !11082, file: !1335, line: 72, column: 41)
!11088 = !DILocation(line: 77, column: 30, scope: !11086)
!11089 = !DILocation(line: 77, column: 7, scope: !11087)
!11090 = !DILocation(line: 0, scope: !11053)
!11091 = !DILocation(line: 90, column: 1, scope: !11045)
!11092 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1335, file: !1335, line: 157, type: !11093, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11095)
!11093 = !DISubroutineType(types: !11094)
!11094 = !{null, !1193, !107, !107, !107}
!11095 = !{!11096, !11097, !11098, !11099, !11100, !11101, !11102, !11103, !11104, !11105, !11106}
!11096 = !DILocalVariable(name: "dev", arg: 1, scope: !11092, file: !1335, line: 157, type: !1193)
!11097 = !DILocalVariable(name: "pin", arg: 2, scope: !11092, file: !1335, line: 157, type: !107)
!11098 = !DILocalVariable(name: "conf", arg: 3, scope: !11092, file: !1335, line: 158, type: !107)
!11099 = !DILocalVariable(name: "func", arg: 4, scope: !11092, file: !1335, line: 158, type: !107)
!11100 = !DILocalVariable(name: "cfg", scope: !11092, file: !1335, line: 160, type: !10617)
!11101 = !DILocalVariable(name: "gpio", scope: !11092, file: !1335, line: 161, type: !1266)
!11102 = !DILocalVariable(name: "pin_ll", scope: !11092, file: !1335, line: 163, type: !107)
!11103 = !DILocalVariable(name: "mode", scope: !11092, file: !1335, line: 227, type: !32)
!11104 = !DILocalVariable(name: "otype", scope: !11092, file: !1335, line: 227, type: !32)
!11105 = !DILocalVariable(name: "ospeed", scope: !11092, file: !1335, line: 227, type: !32)
!11106 = !DILocalVariable(name: "pupd", scope: !11092, file: !1335, line: 227, type: !32)
!11107 = !DILocation(line: 0, scope: !11092)
!11108 = !DILocation(line: 160, column: 45, scope: !11092)
!11109 = !DILocation(line: 161, column: 44, scope: !11092)
!11110 = !DILocation(line: 163, column: 15, scope: !11092)
!11111 = !DILocation(line: 229, column: 14, scope: !11092)
!11112 = !DILocation(line: 246, column: 47, scope: !11092)
!11113 = !DILocation(line: 246, column: 2, scope: !11092)
!11114 = !DILocation(line: 248, column: 43, scope: !11092)
!11115 = !DILocation(line: 248, column: 2, scope: !11092)
!11116 = !DILocation(line: 250, column: 40, scope: !11092)
!11117 = !DILocation(line: 250, column: 2, scope: !11092)
!11118 = !DILocation(line: 252, column: 11, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11092, file: !1335, line: 252, column: 6)
!11120 = !DILocation(line: 252, column: 6, scope: !11092)
!11121 = !DILocation(line: 253, column: 11, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !1335, line: 253, column: 7)
!11123 = distinct !DILexicalBlock(scope: !11119, file: !1335, line: 252, column: 36)
!11124 = !DILocation(line: 253, column: 7, scope: !11123)
!11125 = !DILocation(line: 254, column: 4, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11122, file: !1335, line: 253, column: 16)
!11127 = !DILocation(line: 255, column: 3, scope: !11126)
!11128 = !DILocation(line: 256, column: 4, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11122, file: !1335, line: 255, column: 10)
!11130 = !DILocation(line: 260, column: 40, scope: !11092)
!11131 = !DILocation(line: 260, column: 2, scope: !11092)
!11132 = !DILocation(line: 265, column: 1, scope: !11092)
!11133 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1335, file: !1335, line: 137, type: !10940, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11134)
!11134 = !{!11135, !11136}
!11135 = !DILocalVariable(name: "pin", arg: 1, scope: !11133, file: !1335, line: 137, type: !107)
!11136 = !DILocalVariable(name: "pinval", scope: !11133, file: !1335, line: 139, type: !108)
!11137 = !DILocation(line: 0, scope: !11133)
!11138 = !DILocation(line: 149, column: 13, scope: !11133)
!11139 = !DILocation(line: 151, column: 2, scope: !11133)
!11140 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11015, file: !11015, line: 342, type: !11141, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11143)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{null, !1266, !108, !108}
!11143 = !{!11144, !11145, !11146}
!11144 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11140, file: !11015, line: 342, type: !1266)
!11145 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11140, file: !11015, line: 342, type: !108)
!11146 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11140, file: !11015, line: 342, type: !108)
!11147 = !DILocation(line: 0, scope: !11140)
!11148 = !DILocation(line: 344, column: 3, scope: !11140)
!11149 = !DILocation(line: 345, column: 1, scope: !11140)
!11150 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11015, file: !11015, line: 413, type: !11141, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11151)
!11151 = !{!11152, !11153, !11154}
!11152 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11150, file: !11015, line: 413, type: !1266)
!11153 = !DILocalVariable(name: "Pin", arg: 2, scope: !11150, file: !11015, line: 413, type: !108)
!11154 = !DILocalVariable(name: "Speed", arg: 3, scope: !11150, file: !11015, line: 413, type: !108)
!11155 = !DILocation(line: 0, scope: !11150)
!11156 = !DILocation(line: 415, column: 3, scope: !11150)
!11157 = !DILocation(line: 0, scope: !10960, inlinedAt: !11158)
!11158 = distinct !DILocation(line: 415, column: 3, scope: !11150)
!11159 = !DILocation(line: 380, column: 4, scope: !10960, inlinedAt: !11158)
!11160 = !DILocation(line: 0, scope: !10968, inlinedAt: !11161)
!11161 = distinct !DILocation(line: 415, column: 3, scope: !11150)
!11162 = !DILocation(line: 414, column: 7, scope: !10968, inlinedAt: !11161)
!11163 = !DILocation(line: 0, scope: !10960, inlinedAt: !11164)
!11164 = distinct !DILocation(line: 415, column: 3, scope: !11150)
!11165 = !DILocation(line: 0, scope: !10968, inlinedAt: !11166)
!11166 = distinct !DILocation(line: 415, column: 3, scope: !11150)
!11167 = !DILocation(line: 417, column: 1, scope: !11150)
!11168 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11015, file: !11015, line: 484, type: !11141, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11169)
!11169 = !{!11170, !11171, !11172}
!11170 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11168, file: !11015, line: 484, type: !1266)
!11171 = !DILocalVariable(name: "Pin", arg: 2, scope: !11168, file: !11015, line: 484, type: !108)
!11172 = !DILocalVariable(name: "Pull", arg: 3, scope: !11168, file: !11015, line: 484, type: !108)
!11173 = !DILocation(line: 0, scope: !11168)
!11174 = !DILocation(line: 486, column: 3, scope: !11168)
!11175 = !DILocation(line: 0, scope: !10960, inlinedAt: !11176)
!11176 = distinct !DILocation(line: 486, column: 3, scope: !11168)
!11177 = !DILocation(line: 380, column: 4, scope: !10960, inlinedAt: !11176)
!11178 = !DILocation(line: 0, scope: !10968, inlinedAt: !11179)
!11179 = distinct !DILocation(line: 486, column: 3, scope: !11168)
!11180 = !DILocation(line: 414, column: 7, scope: !10968, inlinedAt: !11179)
!11181 = !DILocation(line: 0, scope: !10960, inlinedAt: !11182)
!11182 = distinct !DILocation(line: 486, column: 3, scope: !11168)
!11183 = !DILocation(line: 0, scope: !10968, inlinedAt: !11184)
!11184 = distinct !DILocation(line: 486, column: 3, scope: !11168)
!11185 = !DILocation(line: 487, column: 1, scope: !11168)
!11186 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11015, file: !11015, line: 556, type: !11141, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11187)
!11187 = !{!11188, !11189, !11190}
!11188 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11186, file: !11015, line: 556, type: !1266)
!11189 = !DILocalVariable(name: "Pin", arg: 2, scope: !11186, file: !11015, line: 556, type: !108)
!11190 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11186, file: !11015, line: 556, type: !108)
!11191 = !DILocation(line: 0, scope: !11186)
!11192 = !DILocation(line: 558, column: 3, scope: !11186)
!11193 = !DILocation(line: 0, scope: !10960, inlinedAt: !11194)
!11194 = distinct !DILocation(line: 558, column: 3, scope: !11186)
!11195 = !DILocation(line: 380, column: 4, scope: !10960, inlinedAt: !11194)
!11196 = !DILocation(line: 0, scope: !10968, inlinedAt: !11197)
!11197 = distinct !DILocation(line: 558, column: 3, scope: !11186)
!11198 = !DILocation(line: 414, column: 7, scope: !10968, inlinedAt: !11197)
!11199 = !DILocation(line: 0, scope: !10960, inlinedAt: !11200)
!11200 = distinct !DILocation(line: 558, column: 3, scope: !11186)
!11201 = !DILocation(line: 0, scope: !10968, inlinedAt: !11202)
!11202 = distinct !DILocation(line: 558, column: 3, scope: !11186)
!11203 = !DILocation(line: 560, column: 1, scope: !11186)
!11204 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11015, file: !11015, line: 633, type: !11141, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11205)
!11205 = !{!11206, !11207, !11208}
!11206 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11204, file: !11015, line: 633, type: !1266)
!11207 = !DILocalVariable(name: "Pin", arg: 2, scope: !11204, file: !11015, line: 633, type: !108)
!11208 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11204, file: !11015, line: 633, type: !108)
!11209 = !DILocation(line: 0, scope: !11204)
!11210 = !DILocation(line: 635, column: 3, scope: !11204)
!11211 = !DILocation(line: 0, scope: !10960, inlinedAt: !11212)
!11212 = distinct !DILocation(line: 635, column: 3, scope: !11204)
!11213 = !DILocation(line: 380, column: 4, scope: !10960, inlinedAt: !11212)
!11214 = !DILocation(line: 0, scope: !10968, inlinedAt: !11215)
!11215 = distinct !DILocation(line: 635, column: 3, scope: !11204)
!11216 = !DILocation(line: 414, column: 7, scope: !10968, inlinedAt: !11215)
!11217 = !DILocation(line: 0, scope: !10960, inlinedAt: !11218)
!11218 = distinct !DILocation(line: 635, column: 3, scope: !11204)
!11219 = !DILocation(line: 0, scope: !10968, inlinedAt: !11220)
!11220 = distinct !DILocation(line: 635, column: 3, scope: !11204)
!11221 = !DILocation(line: 637, column: 1, scope: !11204)
!11222 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11015, file: !11015, line: 273, type: !11141, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11223)
!11223 = !{!11224, !11225, !11226}
!11224 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11222, file: !11015, line: 273, type: !1266)
!11225 = !DILocalVariable(name: "Pin", arg: 2, scope: !11222, file: !11015, line: 273, type: !108)
!11226 = !DILocalVariable(name: "Mode", arg: 3, scope: !11222, file: !11015, line: 273, type: !108)
!11227 = !DILocation(line: 0, scope: !11222)
!11228 = !DILocation(line: 275, column: 3, scope: !11222)
!11229 = !DILocation(line: 0, scope: !10960, inlinedAt: !11230)
!11230 = distinct !DILocation(line: 275, column: 3, scope: !11222)
!11231 = !DILocation(line: 380, column: 4, scope: !10960, inlinedAt: !11230)
!11232 = !DILocation(line: 0, scope: !10968, inlinedAt: !11233)
!11233 = distinct !DILocation(line: 275, column: 3, scope: !11222)
!11234 = !DILocation(line: 414, column: 7, scope: !10968, inlinedAt: !11233)
!11235 = !DILocation(line: 0, scope: !10960, inlinedAt: !11236)
!11236 = distinct !DILocation(line: 275, column: 3, scope: !11222)
!11237 = !DILocation(line: 0, scope: !10968, inlinedAt: !11238)
!11238 = distinct !DILocation(line: 275, column: 3, scope: !11222)
!11239 = !DILocation(line: 276, column: 1, scope: !11222)
!11240 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1335, file: !1335, line: 698, type: !1348, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11241)
!11241 = !{!11242, !11243, !11244}
!11242 = !DILocalVariable(name: "dev", arg: 1, scope: !11240, file: !1335, line: 698, type: !1193)
!11243 = !DILocalVariable(name: "data", scope: !11240, file: !1335, line: 700, type: !10684)
!11244 = !DILocalVariable(name: "ret", scope: !11240, file: !1335, line: 701, type: !107)
!11245 = !DILocation(line: 0, scope: !11240)
!11246 = !DILocation(line: 700, column: 38, scope: !11240)
!11247 = !DILocation(line: 703, column: 8, scope: !11240)
!11248 = !DILocation(line: 703, column: 12, scope: !11240)
!11249 = !DILocation(line: 705, column: 7, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11240, file: !1335, line: 705, column: 6)
!11251 = !DILocation(line: 705, column: 6, scope: !11240)
!11252 = !DILocation(line: 722, column: 8, scope: !11240)
!11253 = !DILocation(line: 723, column: 10, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11240, file: !1335, line: 723, column: 6)
!11255 = !DILocation(line: 723, column: 6, scope: !11240)
!11256 = !DILocation(line: 731, column: 1, scope: !11240)
!11257 = distinct !DISubprogram(name: "device_is_ready", scope: !10464, file: !10464, line: 47, type: !11258, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11260)
!11258 = !DISubroutineType(types: !11259)
!11259 = !{!136, !1193}
!11260 = !{!11261}
!11261 = !DILocalVariable(name: "dev", arg: 1, scope: !11257, file: !10464, line: 47, type: !1193)
!11262 = !DILocation(line: 0, scope: !11257)
!11263 = !DILocation(line: 55, column: 2, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11257, file: !10464, line: 55, column: 2)
!11265 = !{i64 2155279054}
!11266 = !DILocation(line: 56, column: 9, scope: !11257)
!11267 = !DILocation(line: 56, column: 2, scope: !11257)
!11268 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1335, file: !1335, line: 270, type: !11269, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11271)
!11269 = !DISubroutineType(types: !11270)
!11270 = !{!107, !1193, !136}
!11271 = !{!11272, !11273, !11274, !11275, !11276}
!11272 = !DILocalVariable(name: "dev", arg: 1, scope: !11268, file: !1335, line: 270, type: !1193)
!11273 = !DILocalVariable(name: "on", arg: 2, scope: !11268, file: !1335, line: 270, type: !136)
!11274 = !DILocalVariable(name: "cfg", scope: !11268, file: !1335, line: 272, type: !10617)
!11275 = !DILocalVariable(name: "ret", scope: !11268, file: !1335, line: 273, type: !107)
!11276 = !DILocalVariable(name: "clk", scope: !11268, file: !1335, line: 278, type: !10907)
!11277 = !DILocation(line: 0, scope: !11268)
!11278 = !DILocation(line: 272, column: 45, scope: !11268)
!11279 = !DILocation(line: 282, column: 38, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !1335, line: 280, column: 10)
!11281 = distinct !DILexicalBlock(scope: !11268, file: !1335, line: 280, column: 6)
!11282 = !DILocation(line: 282, column: 6, scope: !11280)
!11283 = !DILocation(line: 281, column: 9, scope: !11280)
!11284 = !DILocation(line: 293, column: 1, scope: !11268)
!11285 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !11258, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11286)
!11286 = !{!11287}
!11287 = !DILocalVariable(name: "dev", arg: 1, scope: !11285, file: !451, line: 730, type: !1193)
!11288 = !DILocation(line: 0, scope: !11285)
!11289 = !DILocation(line: 732, column: 9, scope: !11285)
!11290 = !DILocation(line: 732, column: 2, scope: !11285)
!11291 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1335, file: !1335, line: 496, type: !11292, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1164, retainedNodes: !11294)
!11292 = !DISubroutineType(types: !11293)
!11293 = !{!107, !1193, !107, !107, !107}
!11294 = !{!11295, !11296, !11297, !11298, !11299, !11300}
!11295 = !DILocalVariable(name: "dev", arg: 1, scope: !11291, file: !1335, line: 496, type: !1193)
!11296 = !DILocalVariable(name: "pin", arg: 2, scope: !11291, file: !1335, line: 496, type: !107)
!11297 = !DILocalVariable(name: "conf", arg: 3, scope: !11291, file: !1335, line: 496, type: !107)
!11298 = !DILocalVariable(name: "func", arg: 4, scope: !11291, file: !1335, line: 496, type: !107)
!11299 = !DILocalVariable(name: "ret", scope: !11291, file: !1335, line: 498, type: !107)
!11300 = !DILocalVariable(name: "gpio_out", scope: !11301, file: !1335, line: 508, type: !108)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !1335, line: 507, column: 27)
!11302 = distinct !DILexicalBlock(scope: !11291, file: !1335, line: 507, column: 6)
!11303 = !DILocation(line: 0, scope: !11291)
!11304 = !DILocation(line: 505, column: 2, scope: !11291)
!11305 = !DILocation(line: 507, column: 11, scope: !11302)
!11306 = !DILocation(line: 507, column: 6, scope: !11291)
!11307 = !DILocation(line: 508, column: 28, scope: !11301)
!11308 = !DILocation(line: 0, scope: !11301)
!11309 = !DILocation(line: 510, column: 16, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11301, file: !1335, line: 510, column: 7)
!11311 = !DILocation(line: 0, scope: !11310)
!11312 = !DILocation(line: 510, column: 7, scope: !11301)
!11313 = !DILocation(line: 511, column: 4, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11310, file: !1335, line: 510, column: 32)
!11315 = !DILocation(line: 512, column: 3, scope: !11314)
!11316 = !DILocation(line: 513, column: 4, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11318, file: !1335, line: 512, column: 39)
!11318 = distinct !DILexicalBlock(scope: !11310, file: !1335, line: 512, column: 14)
!11319 = !DILocation(line: 514, column: 3, scope: !11317)
!11320 = !DILocation(line: 518, column: 1, scope: !11291)
!11321 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1608, file: !1608, line: 526, type: !1511, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11322)
!11322 = !{!11323, !11324, !11325}
!11323 = !DILocalVariable(name: "dev", arg: 1, scope: !11321, file: !1608, line: 526, type: !1513)
!11324 = !DILocalVariable(name: "c", arg: 2, scope: !11321, file: !1608, line: 526, type: !1125)
!11325 = !DILocalVariable(name: "config", scope: !11321, file: !1608, line: 528, type: !11326)
!11326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!11327 = !DILocation(line: 0, scope: !11321)
!11328 = !DILocation(line: 528, column: 48, scope: !11321)
!11329 = !DILocation(line: 531, column: 40, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11321, file: !1608, line: 531, column: 6)
!11331 = !DILocation(line: 531, column: 6, scope: !11330)
!11332 = !DILocation(line: 531, column: 6, scope: !11321)
!11333 = !DILocation(line: 532, column: 34, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11330, file: !1608, line: 531, column: 48)
!11335 = !DILocation(line: 532, column: 3, scope: !11334)
!11336 = !DILocation(line: 533, column: 2, scope: !11334)
!11337 = !DILocation(line: 539, column: 42, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11321, file: !1608, line: 539, column: 6)
!11339 = !DILocation(line: 539, column: 7, scope: !11338)
!11340 = !DILocation(line: 539, column: 6, scope: !11321)
!11341 = !DILocation(line: 543, column: 52, scope: !11321)
!11342 = !DILocation(line: 543, column: 22, scope: !11321)
!11343 = !DILocation(line: 543, column: 5, scope: !11321)
!11344 = !DILocation(line: 545, column: 2, scope: !11321)
!11345 = !DILocation(line: 546, column: 1, scope: !11321)
!11346 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1608, file: !1608, line: 548, type: !1530, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11347)
!11347 = !{!11348, !11349, !11350, !11351}
!11348 = !DILocalVariable(name: "dev", arg: 1, scope: !11346, file: !1608, line: 548, type: !1513)
!11349 = !DILocalVariable(name: "c", arg: 2, scope: !11346, file: !1608, line: 549, type: !191)
!11350 = !DILocalVariable(name: "config", scope: !11346, file: !1608, line: 551, type: !11326)
!11351 = !DILocalVariable(name: "key", scope: !11346, file: !1608, line: 555, type: !32)
!11352 = !DILocation(line: 0, scope: !11346)
!11353 = !DILocation(line: 551, column: 48, scope: !11346)
!11354 = !DILocation(line: 562, column: 2, scope: !11346)
!11355 = !DILocation(line: 563, column: 41, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !1608, line: 563, column: 7)
!11357 = distinct !DILexicalBlock(scope: !11346, file: !1608, line: 562, column: 12)
!11358 = !DILocation(line: 563, column: 7, scope: !11356)
!11359 = !DILocation(line: 563, column: 7, scope: !11357)
!11360 = !DILocation(line: 55, column: 2, scope: !11361, inlinedAt: !11365)
!11361 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11362)
!11362 = !{!11363, !11364}
!11363 = !DILocalVariable(name: "key", scope: !11361, file: !7118, line: 44, type: !32)
!11364 = !DILocalVariable(name: "tmp", scope: !11361, file: !7118, line: 53, type: !32)
!11365 = distinct !DILocation(line: 564, column: 10, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11356, file: !1608, line: 563, column: 49)
!11367 = !{i64 2328779}
!11368 = !DILocation(line: 0, scope: !11361, inlinedAt: !11365)
!11369 = !DILocation(line: 565, column: 42, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11366, file: !1608, line: 565, column: 8)
!11371 = !DILocation(line: 565, column: 8, scope: !11370)
!11372 = !DILocation(line: 565, column: 8, scope: !11366)
!11373 = !DILocalVariable(name: "key", arg: 1, scope: !11374, file: !7118, line: 84, type: !32)
!11374 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11375)
!11375 = !{!11373}
!11376 = !DILocation(line: 0, scope: !11374, inlinedAt: !11377)
!11377 = distinct !DILocation(line: 568, column: 4, scope: !11366)
!11378 = !DILocation(line: 95, column: 2, scope: !11374, inlinedAt: !11377)
!11379 = !{i64 2329596}
!11380 = !DILocation(line: 569, column: 3, scope: !11366)
!11381 = distinct !{!11381, !11354, !11382}
!11382 = !DILocation(line: 570, column: 2, scope: !11346)
!11383 = !DILocation(line: 592, column: 33, scope: !11346)
!11384 = !DILocation(line: 592, column: 2, scope: !11346)
!11385 = !DILocation(line: 0, scope: !11374, inlinedAt: !11386)
!11386 = distinct !DILocation(line: 593, column: 2, scope: !11346)
!11387 = !DILocation(line: 95, column: 2, scope: !11374, inlinedAt: !11386)
!11388 = !DILocation(line: 594, column: 1, scope: !11346)
!11389 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1608, file: !1608, line: 596, type: !1534, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11390)
!11390 = !{!11391, !11392, !11393}
!11391 = !DILocalVariable(name: "dev", arg: 1, scope: !11389, file: !1608, line: 596, type: !1513)
!11392 = !DILocalVariable(name: "config", scope: !11389, file: !1608, line: 598, type: !11326)
!11393 = !DILocalVariable(name: "err", scope: !11389, file: !1608, line: 599, type: !108)
!11394 = !DILocation(line: 0, scope: !11389)
!11395 = !DILocation(line: 598, column: 48, scope: !11389)
!11396 = !DILocation(line: 606, column: 40, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 606, column: 6)
!11398 = !DILocation(line: 606, column: 6, scope: !11397)
!11399 = !DILocation(line: 606, column: 6, scope: !11389)
!11400 = !DILocation(line: 610, column: 39, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 610, column: 6)
!11402 = !DILocation(line: 610, column: 6, scope: !11401)
!11403 = !DILocation(line: 610, column: 6, scope: !11389)
!11404 = !DILocation(line: 614, column: 39, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 614, column: 6)
!11406 = !DILocation(line: 614, column: 6, scope: !11405)
!11407 = !DILocation(line: 614, column: 6, scope: !11389)
!11408 = !DILocation(line: 619, column: 40, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 619, column: 6)
!11410 = !DILocation(line: 619, column: 6, scope: !11409)
!11411 = !DILocation(line: 619, column: 6, scope: !11389)
!11412 = !DILocation(line: 623, column: 10, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 623, column: 6)
!11414 = !DILocation(line: 623, column: 6, scope: !11389)
!11415 = !DILocation(line: 624, column: 34, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11413, file: !1608, line: 623, column: 24)
!11417 = !DILocation(line: 624, column: 3, scope: !11416)
!11418 = !DILocation(line: 625, column: 2, scope: !11416)
!11419 = !DILocation(line: 632, column: 10, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 632, column: 6)
!11421 = !DILocation(line: 632, column: 6, scope: !11389)
!11422 = !DILocation(line: 633, column: 34, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11420, file: !1608, line: 632, column: 32)
!11424 = !DILocation(line: 633, column: 3, scope: !11423)
!11425 = !DILocation(line: 634, column: 2, scope: !11423)
!11426 = !DILocation(line: 636, column: 10, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 636, column: 6)
!11428 = !DILocation(line: 636, column: 6, scope: !11389)
!11429 = !DILocation(line: 637, column: 33, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11427, file: !1608, line: 636, column: 31)
!11431 = !DILocation(line: 637, column: 3, scope: !11430)
!11432 = !DILocation(line: 638, column: 2, scope: !11430)
!11433 = !DILocation(line: 640, column: 10, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11389, file: !1608, line: 640, column: 6)
!11435 = !DILocation(line: 640, column: 6, scope: !11389)
!11436 = !DILocation(line: 641, column: 33, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11434, file: !1608, line: 640, column: 32)
!11438 = !DILocation(line: 641, column: 3, scope: !11437)
!11439 = !DILocation(line: 642, column: 2, scope: !11437)
!11440 = !DILocation(line: 646, column: 32, scope: !11389)
!11441 = !DILocation(line: 646, column: 2, scope: !11389)
!11442 = !DILocation(line: 648, column: 2, scope: !11389)
!11443 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1608, file: !1608, line: 419, type: !1538, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11444)
!11444 = !{!11445, !11446, !11447, !11448, !11450, !11451, !11452, !11453}
!11445 = !DILocalVariable(name: "dev", arg: 1, scope: !11443, file: !1608, line: 419, type: !1513)
!11446 = !DILocalVariable(name: "cfg", arg: 2, scope: !11443, file: !1608, line: 420, type: !1540)
!11447 = !DILocalVariable(name: "config", scope: !11443, file: !1608, line: 422, type: !11326)
!11448 = !DILocalVariable(name: "data", scope: !11443, file: !1608, line: 423, type: !11449)
!11449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!11450 = !DILocalVariable(name: "parity", scope: !11443, file: !1608, line: 424, type: !7707)
!11451 = !DILocalVariable(name: "stopbits", scope: !11443, file: !1608, line: 425, type: !7707)
!11452 = !DILocalVariable(name: "databits", scope: !11443, file: !1608, line: 426, type: !7707)
!11453 = !DILocalVariable(name: "flowctrl", scope: !11443, file: !1608, line: 428, type: !7707)
!11454 = !DILocation(line: 0, scope: !11443)
!11455 = !DILocation(line: 422, column: 48, scope: !11443)
!11456 = !DILocation(line: 423, column: 38, scope: !11443)
!11457 = !DILocation(line: 424, column: 56, scope: !11443)
!11458 = !DILocation(line: 424, column: 51, scope: !11443)
!11459 = !DILocation(line: 424, column: 26, scope: !11443)
!11460 = !DILocation(line: 425, column: 60, scope: !11443)
!11461 = !DILocation(line: 425, column: 55, scope: !11443)
!11462 = !DILocation(line: 425, column: 28, scope: !11443)
!11463 = !DILocation(line: 426, column: 60, scope: !11443)
!11464 = !DILocation(line: 426, column: 55, scope: !11443)
!11465 = !DILocation(line: 426, column: 28, scope: !11443)
!11466 = !DILocation(line: 428, column: 58, scope: !11443)
!11467 = !DILocation(line: 428, column: 53, scope: !11443)
!11468 = !DILocation(line: 428, column: 28, scope: !11443)
!11469 = !DILocation(line: 431, column: 44, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 431, column: 6)
!11471 = !DILocation(line: 438, column: 22, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 437, column: 6)
!11473 = !DILocation(line: 437, column: 6, scope: !11443)
!11474 = !DILocation(line: 448, column: 6, scope: !11443)
!11475 = !DILocation(line: 465, column: 47, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 465, column: 6)
!11477 = !DILocation(line: 475, column: 21, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 475, column: 6)
!11479 = !DILocation(line: 475, column: 6, scope: !11443)
!11480 = !DILocation(line: 476, column: 8, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !1608, line: 476, column: 7)
!11482 = distinct !DILexicalBlock(scope: !11478, file: !1608, line: 475, column: 49)
!11483 = !DILocation(line: 477, column: 34, scope: !11481)
!11484 = !DILocation(line: 476, column: 7, scope: !11482)
!11485 = !DILocation(line: 482, column: 27, scope: !11443)
!11486 = !DILocation(line: 482, column: 2, scope: !11443)
!11487 = !DILocation(line: 484, column: 16, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 484, column: 6)
!11489 = !DILocation(line: 484, column: 13, scope: !11488)
!11490 = !DILocation(line: 484, column: 6, scope: !11443)
!11491 = !DILocation(line: 485, column: 3, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11488, file: !1608, line: 484, column: 44)
!11493 = !DILocation(line: 486, column: 2, scope: !11492)
!11494 = !DILocation(line: 488, column: 18, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 488, column: 6)
!11496 = !DILocation(line: 488, column: 15, scope: !11495)
!11497 = !DILocation(line: 488, column: 6, scope: !11443)
!11498 = !DILocation(line: 489, column: 3, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11495, file: !1608, line: 488, column: 48)
!11500 = !DILocation(line: 490, column: 2, scope: !11499)
!11501 = !DILocation(line: 492, column: 18, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 492, column: 6)
!11503 = !DILocation(line: 492, column: 15, scope: !11502)
!11504 = !DILocation(line: 492, column: 6, scope: !11443)
!11505 = !DILocation(line: 493, column: 3, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11502, file: !1608, line: 492, column: 48)
!11507 = !DILocation(line: 494, column: 2, scope: !11506)
!11508 = !DILocation(line: 496, column: 18, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 496, column: 6)
!11510 = !DILocation(line: 496, column: 15, scope: !11509)
!11511 = !DILocation(line: 496, column: 6, scope: !11443)
!11512 = !DILocation(line: 497, column: 3, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11509, file: !1608, line: 496, column: 46)
!11514 = !DILocation(line: 498, column: 2, scope: !11513)
!11515 = !DILocation(line: 500, column: 11, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11443, file: !1608, line: 500, column: 6)
!11517 = !DILocation(line: 500, column: 29, scope: !11516)
!11518 = !DILocation(line: 500, column: 20, scope: !11516)
!11519 = !DILocation(line: 500, column: 6, scope: !11443)
!11520 = !DILocation(line: 501, column: 3, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11516, file: !1608, line: 500, column: 40)
!11522 = !DILocation(line: 502, column: 26, scope: !11521)
!11523 = !DILocation(line: 502, column: 19, scope: !11521)
!11524 = !DILocation(line: 503, column: 2, scope: !11521)
!11525 = !DILocation(line: 505, column: 26, scope: !11443)
!11526 = !DILocation(line: 505, column: 2, scope: !11443)
!11527 = !DILocation(line: 506, column: 2, scope: !11443)
!11528 = !DILocation(line: 507, column: 1, scope: !11443)
!11529 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1608, file: !1608, line: 509, type: !1551, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11530)
!11530 = !{!11531, !11532, !11533}
!11531 = !DILocalVariable(name: "dev", arg: 1, scope: !11529, file: !1608, line: 509, type: !1513)
!11532 = !DILocalVariable(name: "cfg", arg: 2, scope: !11529, file: !1608, line: 510, type: !1553)
!11533 = !DILocalVariable(name: "data", scope: !11529, file: !1608, line: 512, type: !11449)
!11534 = !DILocation(line: 0, scope: !11529)
!11535 = !DILocation(line: 512, column: 38, scope: !11529)
!11536 = !DILocation(line: 514, column: 24, scope: !11529)
!11537 = !DILocation(line: 514, column: 7, scope: !11529)
!11538 = !DILocation(line: 514, column: 16, scope: !11529)
!11539 = !DILocation(line: 515, column: 41, scope: !11529)
!11540 = !{i32 0, i32 1537}
!11541 = !DILocation(line: 515, column: 16, scope: !11529)
!11542 = !DILocation(line: 515, column: 7, scope: !11529)
!11543 = !DILocation(line: 515, column: 14, scope: !11529)
!11544 = !DILocation(line: 517, column: 3, scope: !11529)
!11545 = !{i32 0, i32 12289}
!11546 = !DILocation(line: 516, column: 19, scope: !11529)
!11547 = !DILocation(line: 516, column: 7, scope: !11529)
!11548 = !DILocation(line: 516, column: 17, scope: !11529)
!11549 = !DILocation(line: 519, column: 3, scope: !11529)
!11550 = !DILocation(line: 519, column: 33, scope: !11529)
!11551 = !DILocation(line: 518, column: 19, scope: !11529)
!11552 = !DILocation(line: 518, column: 7, scope: !11529)
!11553 = !DILocation(line: 518, column: 17, scope: !11529)
!11554 = !DILocation(line: 521, column: 3, scope: !11529)
!11555 = !{i32 0, i32 769}
!11556 = !DILocation(line: 520, column: 19, scope: !11529)
!11557 = !DILocation(line: 520, column: 7, scope: !11529)
!11558 = !DILocation(line: 520, column: 17, scope: !11529)
!11559 = !DILocation(line: 522, column: 2, scope: !11529)
!11560 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1608, file: !1608, line: 205, type: !11561, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11563)
!11561 = !DISubroutineType(types: !11562)
!11562 = !{!108, !1513}
!11563 = !{!11564, !11565}
!11564 = !DILocalVariable(name: "dev", arg: 1, scope: !11560, file: !1608, line: 205, type: !1513)
!11565 = !DILocalVariable(name: "config", scope: !11560, file: !1608, line: 207, type: !11326)
!11566 = !DILocation(line: 0, scope: !11560)
!11567 = !DILocation(line: 207, column: 48, scope: !11560)
!11568 = !DILocation(line: 209, column: 36, scope: !11560)
!11569 = !DILocation(line: 209, column: 9, scope: !11560)
!11570 = !DILocation(line: 209, column: 2, scope: !11560)
!11571 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1608, file: !1608, line: 270, type: !11572, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11574)
!11572 = !DISubroutineType(types: !11573)
!11573 = !{!1479, !108}
!11574 = !{!11575}
!11575 = !DILocalVariable(name: "parity", arg: 1, scope: !11571, file: !1608, line: 270, type: !108)
!11576 = !DILocation(line: 0, scope: !11571)
!11577 = !DILocation(line: 272, column: 2, scope: !11571)
!11578 = !DILocation(line: 281, column: 1, scope: !11571)
!11579 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1608, file: !1608, line: 220, type: !11561, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11580)
!11580 = !{!11581, !11582}
!11581 = !DILocalVariable(name: "dev", arg: 1, scope: !11579, file: !1608, line: 220, type: !1513)
!11582 = !DILocalVariable(name: "config", scope: !11579, file: !1608, line: 222, type: !11326)
!11583 = !DILocation(line: 0, scope: !11579)
!11584 = !DILocation(line: 222, column: 48, scope: !11579)
!11585 = !DILocation(line: 224, column: 44, scope: !11579)
!11586 = !DILocation(line: 224, column: 9, scope: !11579)
!11587 = !DILocation(line: 224, column: 2, scope: !11579)
!11588 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1608, file: !1608, line: 304, type: !11589, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11591)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!1493, !108}
!11591 = !{!11592}
!11592 = !DILocalVariable(name: "sb", arg: 1, scope: !11588, file: !1608, line: 304, type: !108)
!11593 = !DILocation(line: 0, scope: !11588)
!11594 = !DILocation(line: 306, column: 2, scope: !11588)
!11595 = !DILocation(line: 0, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11588, file: !1608, line: 306, column: 14)
!11597 = !DILocation(line: 323, column: 1, scope: !11588)
!11598 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1608, file: !1608, line: 235, type: !11561, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11599)
!11599 = !{!11600, !11601}
!11600 = !DILocalVariable(name: "dev", arg: 1, scope: !11598, file: !1608, line: 235, type: !1513)
!11601 = !DILocalVariable(name: "config", scope: !11598, file: !1608, line: 237, type: !11326)
!11602 = !DILocation(line: 0, scope: !11598)
!11603 = !DILocation(line: 237, column: 48, scope: !11598)
!11604 = !DILocation(line: 239, column: 39, scope: !11598)
!11605 = !DILocation(line: 239, column: 9, scope: !11598)
!11606 = !DILocation(line: 239, column: 2, scope: !11598)
!11607 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1608, file: !1608, line: 355, type: !11608, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11610)
!11608 = !DISubroutineType(types: !11609)
!11609 = !{!1486, !108, !108}
!11610 = !{!11611, !11612}
!11611 = !DILocalVariable(name: "db", arg: 1, scope: !11607, file: !1608, line: 355, type: !108)
!11612 = !DILocalVariable(name: "p", arg: 2, scope: !11607, file: !1608, line: 356, type: !108)
!11613 = !DILocation(line: 0, scope: !11607)
!11614 = !DILocation(line: 358, column: 2, scope: !11607)
!11615 = !DILocation(line: 384, column: 1, scope: !11607)
!11616 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1608, file: !1608, line: 250, type: !11561, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11617)
!11617 = !{!11618, !11619}
!11618 = !DILocalVariable(name: "dev", arg: 1, scope: !11616, file: !1608, line: 250, type: !1513)
!11619 = !DILocalVariable(name: "config", scope: !11616, file: !1608, line: 252, type: !11326)
!11620 = !DILocation(line: 0, scope: !11616)
!11621 = !DILocation(line: 252, column: 48, scope: !11616)
!11622 = !DILocation(line: 254, column: 40, scope: !11616)
!11623 = !DILocation(line: 254, column: 9, scope: !11616)
!11624 = !DILocation(line: 254, column: 2, scope: !11616)
!11625 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1608, file: !1608, line: 409, type: !11626, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11628)
!11626 = !DISubroutineType(types: !11627)
!11627 = !{!1499, !108}
!11628 = !{!11629}
!11629 = !DILocalVariable(name: "fc", arg: 1, scope: !11625, file: !1608, line: 409, type: !108)
!11630 = !DILocation(line: 0, scope: !11625)
!11631 = !DILocation(line: 411, column: 9, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11625, file: !1608, line: 411, column: 6)
!11633 = !DILocation(line: 416, column: 1, scope: !11625)
!11634 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11635, file: !11635, line: 967, type: !11636, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11638)
!11635 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11636 = !DISubroutineType(types: !11637)
!11637 = !{!108, !1554}
!11638 = !{!11639}
!11639 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11634, file: !11635, line: 967, type: !1554)
!11640 = !DILocation(line: 0, scope: !11634)
!11641 = !DILocation(line: 969, column: 21, scope: !11634)
!11642 = !DILocation(line: 969, column: 3, scope: !11634)
!11643 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11635, file: !11635, line: 601, type: !11636, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11644)
!11644 = !{!11645}
!11645 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11643, file: !11635, line: 601, type: !1554)
!11646 = !DILocation(line: 0, scope: !11643)
!11647 = !DILocation(line: 603, column: 21, scope: !11643)
!11648 = !DILocation(line: 603, column: 3, scope: !11643)
!11649 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11635, file: !11635, line: 820, type: !11636, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11650)
!11650 = !{!11651}
!11651 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11649, file: !11635, line: 820, type: !1554)
!11652 = !DILocation(line: 0, scope: !11649)
!11653 = !DILocation(line: 822, column: 21, scope: !11649)
!11654 = !DILocation(line: 822, column: 3, scope: !11649)
!11655 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11635, file: !11635, line: 547, type: !11636, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11656)
!11656 = !{!11657}
!11657 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11655, file: !11635, line: 547, type: !1554)
!11658 = !DILocation(line: 0, scope: !11655)
!11659 = !DILocation(line: 549, column: 21, scope: !11655)
!11660 = !DILocation(line: 549, column: 3, scope: !11655)
!11661 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1608, file: !1608, line: 257, type: !11662, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11664)
!11662 = !DISubroutineType(types: !11663)
!11663 = !{!108, !1479}
!11664 = !{!11665}
!11665 = !DILocalVariable(name: "parity", arg: 1, scope: !11661, file: !1608, line: 257, type: !1479)
!11666 = !DILocation(line: 0, scope: !11661)
!11667 = !DILocation(line: 259, column: 2, scope: !11661)
!11668 = !DILocation(line: 268, column: 1, scope: !11661)
!11669 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1608, file: !1608, line: 283, type: !11670, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11672)
!11670 = !DISubroutineType(types: !11671)
!11671 = !{!108, !1493}
!11672 = !{!11673}
!11673 = !DILocalVariable(name: "sb", arg: 1, scope: !11669, file: !1608, line: 283, type: !1493)
!11674 = !DILocation(line: 0, scope: !11669)
!11675 = !DILocation(line: 285, column: 2, scope: !11669)
!11676 = !DILocation(line: 0, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11669, file: !1608, line: 285, column: 14)
!11678 = !DILocation(line: 302, column: 1, scope: !11669)
!11679 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1608, file: !1608, line: 325, type: !11680, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11682)
!11680 = !DISubroutineType(types: !11681)
!11681 = !{!108, !1486, !1479}
!11682 = !{!11683, !11684}
!11683 = !DILocalVariable(name: "db", arg: 1, scope: !11679, file: !1608, line: 325, type: !1486)
!11684 = !DILocalVariable(name: "p", arg: 2, scope: !11679, file: !1608, line: 326, type: !1479)
!11685 = !DILocation(line: 0, scope: !11679)
!11686 = !DILocation(line: 328, column: 2, scope: !11679)
!11687 = !DILocation(line: 353, column: 1, scope: !11679)
!11688 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1608, file: !1608, line: 393, type: !11689, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11691)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!108, !1499}
!11691 = !{!11692}
!11692 = !DILocalVariable(name: "fc", arg: 1, scope: !11688, file: !1608, line: 393, type: !1499)
!11693 = !DILocation(line: 0, scope: !11688)
!11694 = !DILocation(line: 395, column: 9, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11688, file: !1608, line: 395, column: 6)
!11696 = !DILocation(line: 400, column: 1, scope: !11688)
!11697 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11635, file: !11635, line: 424, type: !11698, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11700)
!11698 = !DISubroutineType(types: !11699)
!11699 = !{null, !1554}
!11700 = !{!11701}
!11701 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11697, file: !11635, line: 424, type: !1554)
!11702 = !DILocation(line: 0, scope: !11697)
!11703 = !DILocation(line: 426, column: 3, scope: !11697)
!11704 = !DILocation(line: 427, column: 1, scope: !11697)
!11705 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1608, file: !1608, line: 197, type: !11706, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11708)
!11706 = !DISubroutineType(types: !11707)
!11707 = !{null, !1513, !108}
!11708 = !{!11709, !11710, !11711}
!11709 = !DILocalVariable(name: "dev", arg: 1, scope: !11705, file: !1608, line: 197, type: !1513)
!11710 = !DILocalVariable(name: "parity", arg: 2, scope: !11705, file: !1608, line: 198, type: !108)
!11711 = !DILocalVariable(name: "config", scope: !11705, file: !1608, line: 200, type: !11326)
!11712 = !DILocation(line: 0, scope: !11705)
!11713 = !DILocation(line: 200, column: 48, scope: !11705)
!11714 = !DILocation(line: 202, column: 29, scope: !11705)
!11715 = !DILocation(line: 202, column: 2, scope: !11705)
!11716 = !DILocation(line: 203, column: 1, scope: !11705)
!11717 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1608, file: !1608, line: 212, type: !11706, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11718)
!11718 = !{!11719, !11720, !11721}
!11719 = !DILocalVariable(name: "dev", arg: 1, scope: !11717, file: !1608, line: 212, type: !1513)
!11720 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11717, file: !1608, line: 213, type: !108)
!11721 = !DILocalVariable(name: "config", scope: !11717, file: !1608, line: 215, type: !11326)
!11722 = !DILocation(line: 0, scope: !11717)
!11723 = !DILocation(line: 215, column: 48, scope: !11717)
!11724 = !DILocation(line: 217, column: 37, scope: !11717)
!11725 = !DILocation(line: 217, column: 2, scope: !11717)
!11726 = !DILocation(line: 218, column: 1, scope: !11717)
!11727 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1608, file: !1608, line: 227, type: !11706, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11728)
!11728 = !{!11729, !11730, !11731}
!11729 = !DILocalVariable(name: "dev", arg: 1, scope: !11727, file: !1608, line: 227, type: !1513)
!11730 = !DILocalVariable(name: "databits", arg: 2, scope: !11727, file: !1608, line: 228, type: !108)
!11731 = !DILocalVariable(name: "config", scope: !11727, file: !1608, line: 230, type: !11326)
!11732 = !DILocation(line: 0, scope: !11727)
!11733 = !DILocation(line: 230, column: 48, scope: !11727)
!11734 = !DILocation(line: 232, column: 32, scope: !11727)
!11735 = !DILocation(line: 232, column: 2, scope: !11727)
!11736 = !DILocation(line: 233, column: 1, scope: !11727)
!11737 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1608, file: !1608, line: 242, type: !11706, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11738)
!11738 = !{!11739, !11740, !11741}
!11739 = !DILocalVariable(name: "dev", arg: 1, scope: !11737, file: !1608, line: 242, type: !1513)
!11740 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11737, file: !1608, line: 243, type: !108)
!11741 = !DILocalVariable(name: "config", scope: !11737, file: !1608, line: 245, type: !11326)
!11742 = !DILocation(line: 0, scope: !11737)
!11743 = !DILocation(line: 245, column: 48, scope: !11737)
!11744 = !DILocation(line: 247, column: 33, scope: !11737)
!11745 = !DILocation(line: 247, column: 2, scope: !11737)
!11746 = !DILocation(line: 248, column: 1, scope: !11737)
!11747 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1608, file: !1608, line: 107, type: !11706, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11748)
!11748 = !{!11749, !11750, !11751, !11752, !11753}
!11749 = !DILocalVariable(name: "dev", arg: 1, scope: !11747, file: !1608, line: 107, type: !1513)
!11750 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11747, file: !1608, line: 107, type: !108)
!11751 = !DILocalVariable(name: "config", scope: !11747, file: !1608, line: 109, type: !11326)
!11752 = !DILocalVariable(name: "data", scope: !11747, file: !1608, line: 110, type: !11449)
!11753 = !DILocalVariable(name: "clock_rate", scope: !11747, file: !1608, line: 112, type: !108)
!11754 = !DILocation(line: 0, scope: !11747)
!11755 = !DILocation(line: 109, column: 48, scope: !11747)
!11756 = !DILocation(line: 110, column: 38, scope: !11747)
!11757 = !DILocation(line: 112, column: 2, scope: !11747)
!11758 = !DILocation(line: 123, column: 36, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !1608, line: 123, column: 7)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !1608, line: 122, column: 9)
!11761 = distinct !DILexicalBlock(scope: !11747, file: !1608, line: 115, column: 6)
!11762 = !DILocation(line: 124, column: 42, scope: !11759)
!11763 = !DILocation(line: 123, column: 7, scope: !11759)
!11764 = !DILocation(line: 125, column: 22, scope: !11759)
!11765 = !DILocation(line: 123, column: 7, scope: !11760)
!11766 = !DILocation(line: 126, column: 4, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !1608, line: 126, column: 4)
!11768 = distinct !DILexicalBlock(scope: !11769, file: !1608, line: 126, column: 4)
!11769 = distinct !DILexicalBlock(scope: !11770, file: !1608, line: 126, column: 4)
!11770 = distinct !DILexicalBlock(scope: !11771, file: !1608, line: 126, column: 4)
!11771 = distinct !DILexicalBlock(scope: !11759, file: !1608, line: 125, column: 27)
!11772 = !DILocation(line: 127, column: 4, scope: !11771)
!11773 = !DILocation(line: 176, column: 36, scope: !11747)
!11774 = !DILocation(line: 176, column: 3, scope: !11747)
!11775 = !DILocation(line: 179, column: 32, scope: !11747)
!11776 = !DILocation(line: 180, column: 10, scope: !11747)
!11777 = !DILocation(line: 179, column: 3, scope: !11747)
!11778 = !DILocation(line: 195, column: 1, scope: !11747)
!11779 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11635, file: !11635, line: 410, type: !11698, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11780)
!11780 = !{!11781}
!11781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11779, file: !11635, line: 410, type: !1554)
!11782 = !DILocation(line: 0, scope: !11779)
!11783 = !DILocation(line: 412, column: 3, scope: !11779)
!11784 = !DILocation(line: 413, column: 1, scope: !11779)
!11785 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !968, file: !968, line: 216, type: !1587, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11786)
!11786 = !{!11787, !11788, !11789, !11790}
!11787 = !DILocalVariable(name: "dev", arg: 1, scope: !11785, file: !968, line: 216, type: !1513)
!11788 = !DILocalVariable(name: "sys", arg: 2, scope: !11785, file: !968, line: 217, type: !1064)
!11789 = !DILocalVariable(name: "rate", arg: 3, scope: !11785, file: !968, line: 218, type: !1020)
!11790 = !DILocalVariable(name: "api", scope: !11785, file: !968, line: 220, type: !1565)
!11791 = !DILocation(line: 0, scope: !11785)
!11792 = !DILocation(line: 221, column: 49, scope: !11785)
!11793 = !DILocation(line: 223, column: 11, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11785, file: !968, line: 223, column: 6)
!11795 = !DILocation(line: 223, column: 20, scope: !11794)
!11796 = !DILocation(line: 223, column: 6, scope: !11785)
!11797 = !DILocation(line: 227, column: 9, scope: !11785)
!11798 = !DILocation(line: 227, column: 2, scope: !11785)
!11799 = !DILocation(line: 228, column: 1, scope: !11785)
!11800 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7196, file: !7196, line: 175, type: !7197, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11801)
!11801 = !{!11802}
!11802 = !DILocalVariable(name: "level", arg: 1, scope: !11800, file: !7196, line: 175, type: !107)
!11803 = !DILocation(line: 0, scope: !11800)
!11804 = !DILocation(line: 177, column: 2, scope: !11800)
!11805 = !DILocation(line: 189, column: 1, scope: !11800)
!11806 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11635, file: !11635, line: 615, type: !11807, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11809)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{null, !1554, !108}
!11809 = !{!11810, !11811}
!11810 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11806, file: !11635, line: 615, type: !1554)
!11811 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11806, file: !11635, line: 615, type: !108)
!11812 = !DILocation(line: 0, scope: !11806)
!11813 = !DILocation(line: 617, column: 3, scope: !11806)
!11814 = !DILocation(line: 618, column: 1, scope: !11806)
!11815 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11635, file: !11635, line: 1020, type: !11816, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11818)
!11816 = !DISubroutineType(types: !11817)
!11817 = !{null, !1554, !108, !108, !108}
!11818 = !{!11819, !11820, !11821, !11822}
!11819 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11815, file: !11635, line: 1020, type: !1554)
!11820 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11815, file: !11635, line: 1020, type: !108)
!11821 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11815, file: !11635, line: 1020, type: !108)
!11822 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11815, file: !11635, line: 1021, type: !108)
!11823 = !DILocation(line: 0, scope: !11815)
!11824 = !DILocation(line: 1029, column: 30, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11826, file: !11635, line: 1028, column: 3)
!11826 = distinct !DILexicalBlock(scope: !11815, file: !11635, line: 1023, column: 7)
!11827 = !DILocation(line: 1029, column: 19, scope: !11825)
!11828 = !DILocation(line: 1029, column: 13, scope: !11825)
!11829 = !DILocation(line: 1029, column: 17, scope: !11825)
!11830 = !DILocation(line: 1031, column: 1, scope: !11815)
!11831 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11635, file: !11635, line: 949, type: !11807, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11832)
!11832 = !{!11833, !11834}
!11833 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11831, file: !11635, line: 949, type: !1554)
!11834 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11831, file: !11635, line: 949, type: !108)
!11835 = !DILocation(line: 0, scope: !11831)
!11836 = !DILocation(line: 951, column: 3, scope: !11831)
!11837 = !DILocation(line: 952, column: 1, scope: !11831)
!11838 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11635, file: !11635, line: 588, type: !11807, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11839)
!11839 = !{!11840, !11841}
!11840 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11838, file: !11635, line: 588, type: !1554)
!11841 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11838, file: !11635, line: 588, type: !108)
!11842 = !DILocation(line: 0, scope: !11838)
!11843 = !DILocation(line: 590, column: 3, scope: !11838)
!11844 = !DILocation(line: 591, column: 1, scope: !11838)
!11845 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11635, file: !11635, line: 805, type: !11807, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11846)
!11846 = !{!11847, !11848}
!11847 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11845, file: !11635, line: 805, type: !1554)
!11848 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11845, file: !11635, line: 805, type: !108)
!11849 = !DILocation(line: 0, scope: !11845)
!11850 = !DILocation(line: 807, column: 3, scope: !11845)
!11851 = !DILocation(line: 808, column: 1, scope: !11845)
!11852 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11635, file: !11635, line: 532, type: !11807, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11853)
!11853 = !{!11854, !11855}
!11854 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11852, file: !11635, line: 532, type: !1554)
!11855 = !DILocalVariable(name: "Parity", arg: 2, scope: !11852, file: !11635, line: 532, type: !108)
!11856 = !DILocation(line: 0, scope: !11852)
!11857 = !DILocation(line: 534, column: 3, scope: !11852)
!11858 = !DILocation(line: 535, column: 1, scope: !11852)
!11859 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11635, file: !11635, line: 1770, type: !11636, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11860)
!11860 = !{!11861}
!11861 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11859, file: !11635, line: 1770, type: !1554)
!11862 = !DILocation(line: 0, scope: !11859)
!11863 = !DILocation(line: 1772, column: 11, scope: !11859)
!11864 = !DILocation(line: 1772, column: 46, scope: !11859)
!11865 = !DILocation(line: 1772, column: 3, scope: !11859)
!11866 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11635, file: !11635, line: 1737, type: !11636, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11867)
!11867 = !{!11868}
!11868 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11866, file: !11635, line: 1737, type: !1554)
!11869 = !DILocation(line: 0, scope: !11866)
!11870 = !DILocation(line: 1739, column: 11, scope: !11866)
!11871 = !DILocation(line: 1739, column: 3, scope: !11866)
!11872 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11635, file: !11635, line: 1748, type: !11636, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11873)
!11873 = !{!11874}
!11874 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11872, file: !11635, line: 1748, type: !1554)
!11875 = !DILocation(line: 0, scope: !11872)
!11876 = !DILocation(line: 1750, column: 11, scope: !11872)
!11877 = !DILocation(line: 1750, column: 45, scope: !11872)
!11878 = !DILocation(line: 1750, column: 3, scope: !11872)
!11879 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11635, file: !11635, line: 1827, type: !11636, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11880)
!11880 = !{!11881}
!11881 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11879, file: !11635, line: 1827, type: !1554)
!11882 = !DILocation(line: 0, scope: !11879)
!11883 = !DILocation(line: 1829, column: 11, scope: !11879)
!11884 = !DILocation(line: 1829, column: 46, scope: !11879)
!11885 = !DILocation(line: 1829, column: 3, scope: !11879)
!11886 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11635, file: !11635, line: 1992, type: !11698, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11887)
!11887 = !{!11888}
!11888 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11886, file: !11635, line: 1992, type: !1554)
!11889 = !DILocation(line: 0, scope: !11886)
!11890 = !DILocation(line: 1994, column: 3, scope: !11886)
!11891 = !DILocation(line: 1995, column: 1, scope: !11886)
!11892 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11635, file: !11635, line: 1934, type: !11698, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11893)
!11893 = !{!11894, !11895}
!11894 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11892, file: !11635, line: 1934, type: !1554)
!11895 = !DILocalVariable(name: "tmpreg", scope: !11892, file: !11635, line: 1936, type: !431)
!11896 = !DILocation(line: 0, scope: !11892)
!11897 = !DILocation(line: 1936, column: 3, scope: !11892)
!11898 = !DILocation(line: 1936, column: 17, scope: !11892)
!11899 = !DILocation(line: 1937, column: 20, scope: !11892)
!11900 = !DILocation(line: 1937, column: 10, scope: !11892)
!11901 = !DILocation(line: 1938, column: 10, scope: !11892)
!11902 = !DILocation(line: 1939, column: 20, scope: !11892)
!11903 = !DILocation(line: 1939, column: 10, scope: !11892)
!11904 = !DILocation(line: 1940, column: 10, scope: !11892)
!11905 = !DILocation(line: 1941, column: 1, scope: !11892)
!11906 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11635, file: !11635, line: 1877, type: !11698, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11907)
!11907 = !{!11908, !11909}
!11908 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11906, file: !11635, line: 1877, type: !1554)
!11909 = !DILocalVariable(name: "tmpreg", scope: !11906, file: !11635, line: 1879, type: !431)
!11910 = !DILocation(line: 0, scope: !11906)
!11911 = !DILocation(line: 1879, column: 3, scope: !11906)
!11912 = !DILocation(line: 1879, column: 17, scope: !11906)
!11913 = !DILocation(line: 1880, column: 20, scope: !11906)
!11914 = !DILocation(line: 1880, column: 10, scope: !11906)
!11915 = !DILocation(line: 1881, column: 10, scope: !11906)
!11916 = !DILocation(line: 1882, column: 20, scope: !11906)
!11917 = !DILocation(line: 1882, column: 10, scope: !11906)
!11918 = !DILocation(line: 1883, column: 10, scope: !11906)
!11919 = !DILocation(line: 1884, column: 1, scope: !11906)
!11920 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11635, file: !11635, line: 1896, type: !11698, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11921)
!11921 = !{!11922, !11923}
!11922 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11920, file: !11635, line: 1896, type: !1554)
!11923 = !DILocalVariable(name: "tmpreg", scope: !11920, file: !11635, line: 1898, type: !431)
!11924 = !DILocation(line: 0, scope: !11920)
!11925 = !DILocation(line: 1898, column: 3, scope: !11920)
!11926 = !DILocation(line: 1898, column: 17, scope: !11920)
!11927 = !DILocation(line: 1899, column: 20, scope: !11920)
!11928 = !DILocation(line: 1899, column: 10, scope: !11920)
!11929 = !DILocation(line: 1900, column: 10, scope: !11920)
!11930 = !DILocation(line: 1901, column: 20, scope: !11920)
!11931 = !DILocation(line: 1901, column: 10, scope: !11920)
!11932 = !DILocation(line: 1902, column: 10, scope: !11920)
!11933 = !DILocation(line: 1903, column: 1, scope: !11920)
!11934 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11635, file: !11635, line: 1915, type: !11698, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11935)
!11935 = !{!11936, !11937}
!11936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11934, file: !11635, line: 1915, type: !1554)
!11937 = !DILocalVariable(name: "tmpreg", scope: !11934, file: !11635, line: 1917, type: !431)
!11938 = !DILocation(line: 0, scope: !11934)
!11939 = !DILocation(line: 1917, column: 3, scope: !11934)
!11940 = !DILocation(line: 1917, column: 17, scope: !11934)
!11941 = !DILocation(line: 1918, column: 20, scope: !11934)
!11942 = !DILocation(line: 1918, column: 10, scope: !11934)
!11943 = !DILocation(line: 1919, column: 10, scope: !11934)
!11944 = !DILocation(line: 1920, column: 20, scope: !11934)
!11945 = !DILocation(line: 1920, column: 10, scope: !11934)
!11946 = !DILocation(line: 1921, column: 10, scope: !11934)
!11947 = !DILocation(line: 1922, column: 1, scope: !11934)
!11948 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11635, file: !11635, line: 1814, type: !11636, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11949)
!11949 = !{!11950}
!11950 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11948, file: !11635, line: 1814, type: !1554)
!11951 = !DILocation(line: 0, scope: !11948)
!11952 = !DILocation(line: 1816, column: 11, scope: !11948)
!11953 = !DILocation(line: 1816, column: 46, scope: !11948)
!11954 = !DILocation(line: 1816, column: 3, scope: !11948)
!11955 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11635, file: !11635, line: 2426, type: !11956, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11958)
!11956 = !DISubroutineType(types: !11957)
!11957 = !{null, !1554, !190}
!11958 = !{!11959, !11960}
!11959 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11955, file: !11635, line: 2426, type: !1554)
!11960 = !DILocalVariable(name: "Value", arg: 2, scope: !11955, file: !11635, line: 2426, type: !190)
!11961 = !DILocation(line: 0, scope: !11955)
!11962 = !DILocation(line: 2428, column: 16, scope: !11955)
!11963 = !DILocation(line: 2428, column: 11, scope: !11955)
!11964 = !DILocation(line: 2428, column: 14, scope: !11955)
!11965 = !DILocation(line: 2429, column: 1, scope: !11955)
!11966 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11635, file: !11635, line: 1792, type: !11636, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11967)
!11967 = !{!11968}
!11968 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11966, file: !11635, line: 1792, type: !1554)
!11969 = !DILocation(line: 0, scope: !11966)
!11970 = !DILocation(line: 1794, column: 11, scope: !11966)
!11971 = !DILocation(line: 1794, column: 47, scope: !11966)
!11972 = !DILocation(line: 1794, column: 3, scope: !11966)
!11973 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11635, file: !11635, line: 2403, type: !11974, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11976)
!11974 = !DISubroutineType(types: !11975)
!11975 = !{!190, !1554}
!11976 = !{!11977}
!11977 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11973, file: !11635, line: 2403, type: !1554)
!11978 = !DILocation(line: 0, scope: !11973)
!11979 = !DILocation(line: 2405, column: 20, scope: !11973)
!11980 = !DILocation(line: 2405, column: 10, scope: !11973)
!11981 = !DILocation(line: 2405, column: 3, scope: !11973)
!11982 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1608, file: !1608, line: 1583, type: !1534, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !11983)
!11983 = !{!11984, !11985, !11986, !11987, !11988, !11989}
!11984 = !DILocalVariable(name: "dev", arg: 1, scope: !11982, file: !1608, line: 1583, type: !1513)
!11985 = !DILocalVariable(name: "config", scope: !11982, file: !1608, line: 1585, type: !11326)
!11986 = !DILocalVariable(name: "data", scope: !11982, file: !1608, line: 1586, type: !11449)
!11987 = !DILocalVariable(name: "ll_parity", scope: !11982, file: !1608, line: 1587, type: !108)
!11988 = !DILocalVariable(name: "ll_datawidth", scope: !11982, file: !1608, line: 1588, type: !108)
!11989 = !DILocalVariable(name: "err", scope: !11982, file: !1608, line: 1589, type: !107)
!11990 = !DILocation(line: 0, scope: !11982)
!11991 = !DILocation(line: 1585, column: 48, scope: !11982)
!11992 = !DILocation(line: 1586, column: 38, scope: !11982)
!11993 = !DILocation(line: 1591, column: 2, scope: !11982)
!11994 = !DILocation(line: 1593, column: 29, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11982, file: !1608, line: 1593, column: 6)
!11996 = !DILocation(line: 1593, column: 7, scope: !11995)
!11997 = !DILocation(line: 1593, column: 6, scope: !11982)
!11998 = !DILocation(line: 1594, column: 3, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !1608, line: 1594, column: 3)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !1608, line: 1594, column: 3)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !1608, line: 1594, column: 3)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !1608, line: 1594, column: 3)
!12003 = distinct !DILexicalBlock(scope: !11995, file: !1608, line: 1593, column: 37)
!12004 = !DILocation(line: 1595, column: 3, scope: !12003)
!12005 = !DILocation(line: 1599, column: 31, scope: !11982)
!12006 = !DILocation(line: 1599, column: 71, scope: !11982)
!12007 = !DILocation(line: 1599, column: 8, scope: !11982)
!12008 = !DILocation(line: 1600, column: 10, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11982, file: !1608, line: 1600, column: 6)
!12010 = !DILocation(line: 1600, column: 6, scope: !11982)
!12011 = !DILocation(line: 1601, column: 3, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12013, file: !1608, line: 1601, column: 3)
!12013 = distinct !DILexicalBlock(scope: !12014, file: !1608, line: 1601, column: 3)
!12014 = distinct !DILexicalBlock(scope: !12015, file: !1608, line: 1601, column: 3)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !1608, line: 1601, column: 3)
!12016 = distinct !DILexicalBlock(scope: !12009, file: !1608, line: 1600, column: 16)
!12017 = !DILocation(line: 1602, column: 3, scope: !12016)
!12018 = !DILocation(line: 1616, column: 36, scope: !11982)
!12019 = !DILocation(line: 1616, column: 8, scope: !11982)
!12020 = !DILocation(line: 1617, column: 10, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11982, file: !1608, line: 1617, column: 6)
!12022 = !DILocation(line: 1617, column: 6, scope: !11982)
!12023 = !DILocation(line: 1621, column: 27, scope: !11982)
!12024 = !DILocation(line: 1621, column: 2, scope: !11982)
!12025 = !DILocation(line: 1624, column: 40, scope: !11982)
!12026 = !DILocation(line: 1624, column: 2, scope: !11982)
!12027 = !DILocation(line: 1630, column: 14, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !11982, file: !1608, line: 1630, column: 6)
!12029 = !DILocation(line: 1630, column: 6, scope: !11982)
!12030 = !DILocation(line: 1640, column: 4, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !1608, line: 1640, column: 4)
!12032 = distinct !DILexicalBlock(scope: !12033, file: !1608, line: 1640, column: 4)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !1608, line: 1640, column: 4)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !1608, line: 1640, column: 4)
!12035 = distinct !DILexicalBlock(scope: !12036, file: !1608, line: 1639, column: 28)
!12036 = distinct !DILexicalBlock(scope: !12037, file: !1608, line: 1639, column: 7)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !1608, line: 1638, column: 9)
!12038 = distinct !DILexicalBlock(scope: !12028, file: !1608, line: 1634, column: 13)
!12039 = !DILocation(line: 0, scope: !12028)
!12040 = !DILocation(line: 1649, column: 35, scope: !11982)
!12041 = !DILocation(line: 1649, column: 2, scope: !11982)
!12042 = !DILocation(line: 1654, column: 14, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !11982, file: !1608, line: 1654, column: 6)
!12044 = !DILocation(line: 1654, column: 6, scope: !11982)
!12045 = !DILocation(line: 1655, column: 3, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12043, file: !1608, line: 1654, column: 31)
!12047 = !DILocation(line: 1656, column: 2, scope: !12046)
!12048 = !DILocation(line: 1659, column: 37, scope: !11982)
!12049 = !DILocation(line: 1659, column: 2, scope: !11982)
!12050 = !DILocation(line: 1662, column: 14, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !11982, file: !1608, line: 1662, column: 6)
!12052 = !DILocation(line: 1662, column: 6, scope: !11982)
!12053 = !DILocation(line: 1663, column: 37, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12051, file: !1608, line: 1662, column: 27)
!12055 = !DILocation(line: 1663, column: 3, scope: !12054)
!12056 = !DILocation(line: 1664, column: 2, scope: !12054)
!12057 = !DILocation(line: 1684, column: 26, scope: !11982)
!12058 = !DILocation(line: 1684, column: 2, scope: !11982)
!12059 = !DILocation(line: 1722, column: 2, scope: !11982)
!12060 = !DILocation(line: 1724, column: 1, scope: !11982)
!12061 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1608, file: !1608, line: 651, type: !12062, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12064)
!12062 = !DISubroutineType(types: !12063)
!12063 = !{null, !1513}
!12064 = !{!12065, !12066, !12067}
!12065 = !DILocalVariable(name: "dev", arg: 1, scope: !12061, file: !1608, line: 651, type: !1513)
!12066 = !DILocalVariable(name: "data", scope: !12061, file: !1608, line: 653, type: !11449)
!12067 = !DILocalVariable(name: "clk", scope: !12061, file: !1608, line: 654, type: !12068)
!12068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!12069 = !DILocation(line: 0, scope: !12061)
!12070 = !DILocation(line: 653, column: 38, scope: !12061)
!12071 = !DILocation(line: 656, column: 8, scope: !12061)
!12072 = !DILocation(line: 656, column: 14, scope: !12061)
!12073 = !DILocation(line: 657, column: 1, scope: !12061)
!12074 = distinct !DISubprogram(name: "device_is_ready", scope: !10464, file: !10464, line: 47, type: !12075, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12077)
!12075 = !DISubroutineType(types: !12076)
!12076 = !{!136, !1513}
!12077 = !{!12078}
!12078 = !DILocalVariable(name: "dev", arg: 1, scope: !12074, file: !10464, line: 47, type: !1513)
!12079 = !DILocation(line: 0, scope: !12074)
!12080 = !DILocation(line: 55, column: 2, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12074, file: !10464, line: 55, column: 2)
!12082 = !{i64 2155370217}
!12083 = !DILocation(line: 56, column: 9, scope: !12074)
!12084 = !DILocation(line: 56, column: 2, scope: !12074)
!12085 = distinct !DISubprogram(name: "clock_control_on", scope: !968, file: !968, line: 123, type: !1572, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12086)
!12086 = !{!12087, !12088, !12089}
!12087 = !DILocalVariable(name: "dev", arg: 1, scope: !12085, file: !968, line: 123, type: !1513)
!12088 = !DILocalVariable(name: "sys", arg: 2, scope: !12085, file: !968, line: 124, type: !1064)
!12089 = !DILocalVariable(name: "api", scope: !12085, file: !968, line: 126, type: !1565)
!12090 = !DILocation(line: 0, scope: !12085)
!12091 = !DILocation(line: 127, column: 49, scope: !12085)
!12092 = !DILocation(line: 129, column: 14, scope: !12085)
!12093 = !DILocation(line: 129, column: 9, scope: !12085)
!12094 = !DILocation(line: 129, column: 2, scope: !12085)
!12095 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1672, file: !1672, line: 342, type: !12096, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12098)
!12096 = !DISubroutineType(types: !12097)
!12097 = !{!107, !1669, !190}
!12098 = !{!12099, !12100, !12101, !12102}
!12099 = !DILocalVariable(name: "config", arg: 1, scope: !12095, file: !1672, line: 342, type: !1669)
!12100 = !DILocalVariable(name: "id", arg: 2, scope: !12095, file: !1672, line: 343, type: !190)
!12101 = !DILocalVariable(name: "ret", scope: !12095, file: !1672, line: 345, type: !107)
!12102 = !DILocalVariable(name: "state", scope: !12095, file: !1672, line: 346, type: !1675)
!12103 = !DILocation(line: 0, scope: !12095)
!12104 = !DILocation(line: 346, column: 2, scope: !12095)
!12105 = !DILocation(line: 348, column: 8, scope: !12095)
!12106 = !DILocation(line: 349, column: 10, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12095, file: !1672, line: 349, column: 6)
!12108 = !DILocation(line: 349, column: 6, scope: !12095)
!12109 = !DILocation(line: 353, column: 44, scope: !12095)
!12110 = !DILocation(line: 353, column: 9, scope: !12095)
!12111 = !DILocation(line: 353, column: 2, scope: !12095)
!12112 = !DILocation(line: 354, column: 1, scope: !12095)
!12113 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11635, file: !11635, line: 497, type: !11807, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12114)
!12114 = !{!12115, !12116, !12117}
!12115 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12113, file: !11635, line: 497, type: !1554)
!12116 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12113, file: !11635, line: 497, type: !108)
!12117 = !DILocalVariable(name: "val", scope: !12118, file: !11635, line: 499, type: !108)
!12118 = distinct !DILexicalBlock(scope: !12113, file: !11635, line: 499, column: 3)
!12119 = !DILocation(line: 0, scope: !12113)
!12120 = !DILocation(line: 499, column: 3, scope: !12118)
!12121 = !DILocalVariable(name: "addr", arg: 1, scope: !12122, file: !7439, line: 476, type: !1604)
!12122 = distinct !DISubprogram(name: "__LDREXW", scope: !7439, file: !7439, line: 476, type: !12123, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12125)
!12123 = !DISubroutineType(types: !12124)
!12124 = !{!108, !1604}
!12125 = !{!12121, !12126}
!12126 = !DILocalVariable(name: "result", scope: !12122, file: !7439, line: 478, type: !108)
!12127 = !DILocation(line: 0, scope: !12122, inlinedAt: !12128)
!12128 = distinct !DILocation(line: 499, column: 3, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12118, file: !11635, line: 499, column: 3)
!12130 = !DILocation(line: 480, column: 4, scope: !12122, inlinedAt: !12128)
!12131 = !{i64 3759536}
!12132 = !DILocation(line: 499, column: 3, scope: !12129)
!12133 = !DILocation(line: 0, scope: !12118)
!12134 = !DILocalVariable(name: "value", arg: 1, scope: !12135, file: !7439, line: 527, type: !108)
!12135 = distinct !DISubprogram(name: "__STREXW", scope: !7439, file: !7439, line: 527, type: !12136, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12138)
!12136 = !DISubroutineType(types: !12137)
!12137 = !{!108, !108, !1604}
!12138 = !{!12134, !12139, !12140}
!12139 = !DILocalVariable(name: "addr", arg: 2, scope: !12135, file: !7439, line: 527, type: !1604)
!12140 = !DILocalVariable(name: "result", scope: !12135, file: !7439, line: 529, type: !108)
!12141 = !DILocation(line: 0, scope: !12135, inlinedAt: !12142)
!12142 = distinct !DILocation(line: 499, column: 3, scope: !12118)
!12143 = !DILocation(line: 531, column: 4, scope: !12135, inlinedAt: !12142)
!12144 = !{i64 3760972}
!12145 = distinct !{!12145, !12120, !12120}
!12146 = !DILocation(line: 500, column: 1, scope: !12113)
!12147 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11635, file: !11635, line: 850, type: !11816, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12148)
!12148 = !{!12149, !12150, !12151, !12152}
!12149 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12147, file: !11635, line: 850, type: !1554)
!12150 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12147, file: !11635, line: 850, type: !108)
!12151 = !DILocalVariable(name: "Parity", arg: 3, scope: !12147, file: !11635, line: 850, type: !108)
!12152 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12147, file: !11635, line: 851, type: !108)
!12153 = !DILocation(line: 0, scope: !12147)
!12154 = !DILocation(line: 853, column: 3, scope: !12147)
!12155 = !DILocation(line: 854, column: 3, scope: !12147)
!12156 = !DILocation(line: 855, column: 1, scope: !12147)
!12157 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11635, file: !11635, line: 1337, type: !11698, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12158)
!12158 = !{!12159}
!12159 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12157, file: !11635, line: 1337, type: !1554)
!12160 = !DILocation(line: 0, scope: !12157)
!12161 = !DILocation(line: 1339, column: 3, scope: !12157)
!12162 = !DILocation(line: 1340, column: 1, scope: !12157)
!12163 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1672, file: !1672, line: 316, type: !12164, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12166)
!12164 = !DISubroutineType(types: !12165)
!12165 = !{!107, !1669, !1675}
!12166 = !{!12167, !12168, !12169}
!12167 = !DILocalVariable(name: "config", arg: 1, scope: !12163, file: !1672, line: 317, type: !1669)
!12168 = !DILocalVariable(name: "state", arg: 2, scope: !12163, file: !1672, line: 318, type: !1675)
!12169 = !DILocalVariable(name: "reg", scope: !12163, file: !1672, line: 320, type: !22)
!12170 = !DILocation(line: 0, scope: !12163)
!12171 = !DILocation(line: 329, column: 39, scope: !12163)
!12172 = !DILocation(line: 329, column: 52, scope: !12163)
!12173 = !DILocation(line: 329, column: 9, scope: !12163)
!12174 = !DILocation(line: 329, column: 2, scope: !12163)
!12175 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !12075, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1469, retainedNodes: !12176)
!12176 = !{!12177}
!12177 = !DILocalVariable(name: "dev", arg: 1, scope: !12175, file: !451, line: 730, type: !1513)
!12178 = !DILocation(line: 0, scope: !12175)
!12179 = !DILocation(line: 732, column: 9, scope: !12175)
!12180 = !DILocation(line: 732, column: 2, scope: !12175)
!12181 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1831, file: !1831, line: 270, type: !1837, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12182)
!12182 = !{!12183}
!12183 = !DILocalVariable(name: "dev", arg: 1, scope: !12181, file: !1831, line: 270, type: !1839)
!12184 = !DILocation(line: 0, scope: !12181)
!12185 = !DILocation(line: 274, column: 2, scope: !12181)
!12186 = !DILocation(line: 275, column: 12, scope: !12181)
!12187 = !DILocation(line: 276, column: 15, scope: !12181)
!12188 = !DILocation(line: 277, column: 16, scope: !12181)
!12189 = !DILocation(line: 278, column: 15, scope: !12181)
!12190 = !DILocation(line: 279, column: 16, scope: !12181)
!12191 = !DILocation(line: 282, column: 2, scope: !12181)
!12192 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7473, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12193)
!12193 = !{!12194, !12195}
!12194 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12192, file: !644, line: 1814, type: !920)
!12195 = !DILocalVariable(name: "priority", arg: 2, scope: !12192, file: !644, line: 1814, type: !108)
!12196 = !DILocation(line: 0, scope: !12192)
!12197 = !DILocation(line: 1822, column: 46, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12199, file: !644, line: 1821, column: 3)
!12199 = distinct !DILexicalBlock(scope: !12192, file: !644, line: 1816, column: 7)
!12200 = !DILocation(line: 1824, column: 1, scope: !12192)
!12201 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1831, file: !1831, line: 118, type: !7376, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12202)
!12202 = !{!12203, !12204}
!12203 = !DILocalVariable(name: "arg", arg: 1, scope: !12201, file: !1831, line: 118, type: !106)
!12204 = !DILocalVariable(name: "dticks", scope: !12201, file: !1831, line: 121, type: !108)
!12205 = !DILocation(line: 0, scope: !12201)
!12206 = !DILocation(line: 124, column: 2, scope: !12201)
!12207 = !DILocation(line: 129, column: 17, scope: !12201)
!12208 = !DILocation(line: 129, column: 14, scope: !12201)
!12209 = !DILocation(line: 130, column: 15, scope: !12201)
!12210 = !DILocation(line: 145, column: 27, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12212, file: !1831, line: 132, column: 16)
!12212 = distinct !DILexicalBlock(scope: !12201, file: !1831, line: 132, column: 6)
!12213 = !DILocation(line: 145, column: 25, scope: !12211)
!12214 = !DILocation(line: 145, column: 45, scope: !12211)
!12215 = !DILocation(line: 146, column: 30, scope: !12211)
!12216 = !DILocation(line: 146, column: 20, scope: !12211)
!12217 = !DILocation(line: 147, column: 3, scope: !12211)
!12218 = !DILocation(line: 151, column: 2, scope: !12201)
!12219 = !DILocation(line: 152, column: 1, scope: !12201)
!12220 = distinct !DISubprogram(name: "elapsed", scope: !1831, file: !1831, line: 85, type: !7520, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12221)
!12221 = !{!12222, !12223, !12224}
!12222 = !DILocalVariable(name: "val1", scope: !12220, file: !1831, line: 87, type: !108)
!12223 = !DILocalVariable(name: "ctrl", scope: !12220, file: !1831, line: 88, type: !108)
!12224 = !DILocalVariable(name: "val2", scope: !12220, file: !1831, line: 89, type: !108)
!12225 = !DILocation(line: 87, column: 27, scope: !12220)
!12226 = !DILocation(line: 0, scope: !12220)
!12227 = !DILocation(line: 88, column: 27, scope: !12220)
!12228 = !DILocation(line: 89, column: 27, scope: !12220)
!12229 = !DILocation(line: 105, column: 12, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12220, file: !1831, line: 105, column: 6)
!12231 = !DILocation(line: 106, column: 6, scope: !12230)
!12232 = !DILocation(line: 107, column: 16, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12230, file: !1831, line: 106, column: 24)
!12234 = !DILocation(line: 111, column: 18, scope: !12233)
!12235 = !DILocation(line: 112, column: 2, scope: !12233)
!12236 = !DILocation(line: 114, column: 20, scope: !12220)
!12237 = !DILocation(line: 114, column: 30, scope: !12220)
!12238 = !DILocation(line: 114, column: 28, scope: !12220)
!12239 = !DILocation(line: 114, column: 2, scope: !12220)
!12240 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1831, file: !1831, line: 154, type: !12241, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12243)
!12241 = !DISubroutineType(types: !12242)
!12242 = !{null, !334, !136}
!12243 = !{!12244, !12245, !12246, !12247, !12248, !12249, !12250, !12255, !12256}
!12244 = !DILocalVariable(name: "ticks", arg: 1, scope: !12240, file: !1831, line: 154, type: !334)
!12245 = !DILocalVariable(name: "idle", arg: 2, scope: !12240, file: !1831, line: 154, type: !136)
!12246 = !DILocalVariable(name: "delay", scope: !12240, file: !1831, line: 169, type: !108)
!12247 = !DILocalVariable(name: "val1", scope: !12240, file: !1831, line: 170, type: !108)
!12248 = !DILocalVariable(name: "val2", scope: !12240, file: !1831, line: 170, type: !108)
!12249 = !DILocalVariable(name: "last_load_", scope: !12240, file: !1831, line: 171, type: !108)
!12250 = !DILocalVariable(name: "key", scope: !12240, file: !1831, line: 176, type: !12251)
!12251 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !12252)
!12252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !12253)
!12253 = !{!12254}
!12254 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12252, file: !255, line: 33, baseType: !107, size: 32)
!12255 = !DILocalVariable(name: "pending", scope: !12240, file: !1831, line: 178, type: !108)
!12256 = !DILocalVariable(name: "unannounced", scope: !12240, file: !1831, line: 185, type: !108)
!12257 = !DILocation(line: 0, scope: !12240)
!12258 = !DILocation(line: 162, column: 49, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12240, file: !1831, line: 162, column: 6)
!12260 = !DILocation(line: 163, column: 17, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12259, file: !1831, line: 162, column: 78)
!12262 = !DILocation(line: 164, column: 13, scope: !12261)
!12263 = !DILocation(line: 165, column: 3, scope: !12261)
!12264 = !DILocation(line: 171, column: 24, scope: !12240)
!12265 = !DILocation(line: 173, column: 10, scope: !12240)
!12266 = !DILocation(line: 174, column: 10, scope: !12240)
!12267 = !DILocalVariable(name: "l", arg: 1, scope: !12268, file: !255, line: 136, type: !12271)
!12268 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !12269, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12272)
!12269 = !DISubroutineType(types: !12270)
!12270 = !{!12251, !12271}
!12271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!12272 = !{!12267, !12273}
!12273 = !DILocalVariable(name: "k", scope: !12268, file: !255, line: 139, type: !12251)
!12274 = !DILocation(line: 0, scope: !12268, inlinedAt: !12275)
!12275 = distinct !DILocation(line: 176, column: 25, scope: !12240)
!12276 = !DILocation(line: 55, column: 2, scope: !12277, inlinedAt: !12281)
!12277 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12278)
!12278 = !{!12279, !12280}
!12279 = !DILocalVariable(name: "key", scope: !12277, file: !7118, line: 44, type: !32)
!12280 = !DILocalVariable(name: "tmp", scope: !12277, file: !7118, line: 53, type: !32)
!12281 = distinct !DILocation(line: 145, column: 10, scope: !12268, inlinedAt: !12275)
!12282 = !{i64 2280388}
!12283 = !DILocation(line: 0, scope: !12277, inlinedAt: !12281)
!12284 = !DILocation(line: 178, column: 21, scope: !12240)
!12285 = !DILocation(line: 180, column: 18, scope: !12240)
!12286 = !DILocation(line: 182, column: 14, scope: !12240)
!12287 = !DILocation(line: 183, column: 15, scope: !12240)
!12288 = !DILocation(line: 185, column: 39, scope: !12240)
!12289 = !DILocation(line: 185, column: 37, scope: !12240)
!12290 = !DILocation(line: 187, column: 27, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12240, file: !1831, line: 187, column: 6)
!12292 = !DILocation(line: 187, column: 6, scope: !12240)
!12293 = !DILocation(line: 202, column: 27, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12291, file: !1831, line: 195, column: 9)
!12295 = !DILocation(line: 202, column: 48, scope: !12294)
!12296 = !DILocation(line: 203, column: 9, scope: !12294)
!12297 = !DILocation(line: 204, column: 11, scope: !12294)
!12298 = !DILocation(line: 205, column: 13, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12294, file: !1831, line: 205, column: 7)
!12300 = !DILocation(line: 205, column: 7, scope: !12294)
!12301 = !DILocation(line: 0, scope: !12291)
!12302 = !DILocation(line: 212, column: 18, scope: !12240)
!12303 = !DILocation(line: 214, column: 28, scope: !12240)
!12304 = !DILocation(line: 214, column: 16, scope: !12240)
!12305 = !DILocation(line: 215, column: 15, scope: !12240)
!12306 = !DILocation(line: 227, column: 11, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12240, file: !1831, line: 227, column: 6)
!12308 = !DILocation(line: 227, column: 6, scope: !12240)
!12309 = !DILocation(line: 228, column: 15, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12307, file: !1831, line: 227, column: 19)
!12311 = !DILocation(line: 228, column: 38, scope: !12310)
!12312 = !DILocation(line: 228, column: 24, scope: !12310)
!12313 = !DILocation(line: 229, column: 2, scope: !12310)
!12314 = !DILocation(line: 230, column: 24, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12307, file: !1831, line: 229, column: 9)
!12316 = !DILocation(line: 230, column: 15, scope: !12315)
!12317 = !DILocation(line: 0, scope: !12307)
!12318 = !DILocalVariable(name: "key", arg: 2, scope: !12319, file: !255, line: 190, type: !12251)
!12319 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !12320, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12322)
!12320 = !DISubroutineType(types: !12321)
!12321 = !{null, !12271, !12251}
!12322 = !{!12323, !12318}
!12323 = !DILocalVariable(name: "l", arg: 1, scope: !12319, file: !255, line: 189, type: !12271)
!12324 = !DILocation(line: 0, scope: !12319, inlinedAt: !12325)
!12325 = distinct !DILocation(line: 232, column: 2, scope: !12240)
!12326 = !DILocalVariable(name: "key", arg: 1, scope: !12327, file: !7118, line: 84, type: !32)
!12327 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12328)
!12328 = !{!12326}
!12329 = !DILocation(line: 0, scope: !12327, inlinedAt: !12330)
!12330 = distinct !DILocation(line: 215, column: 2, scope: !12319, inlinedAt: !12325)
!12331 = !DILocation(line: 95, column: 2, scope: !12327, inlinedAt: !12330)
!12332 = !{i64 2281205}
!12333 = !DILocation(line: 234, column: 1, scope: !12240)
!12334 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1831, file: !1831, line: 236, type: !7520, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12335)
!12335 = !{!12336, !12337}
!12336 = !DILocalVariable(name: "key", scope: !12334, file: !1831, line: 242, type: !12251)
!12337 = !DILocalVariable(name: "cyc", scope: !12334, file: !1831, line: 243, type: !108)
!12338 = !DILocation(line: 0, scope: !12268, inlinedAt: !12339)
!12339 = distinct !DILocation(line: 242, column: 25, scope: !12334)
!12340 = !DILocation(line: 55, column: 2, scope: !12277, inlinedAt: !12341)
!12341 = distinct !DILocation(line: 145, column: 10, scope: !12268, inlinedAt: !12339)
!12342 = !DILocation(line: 0, scope: !12277, inlinedAt: !12341)
!12343 = !DILocation(line: 0, scope: !12334)
!12344 = !DILocation(line: 243, column: 17, scope: !12334)
!12345 = !DILocation(line: 243, column: 29, scope: !12334)
!12346 = !DILocation(line: 243, column: 27, scope: !12334)
!12347 = !DILocation(line: 243, column: 43, scope: !12334)
!12348 = !DILocation(line: 243, column: 41, scope: !12334)
!12349 = !DILocation(line: 0, scope: !12319, inlinedAt: !12350)
!12350 = distinct !DILocation(line: 245, column: 2, scope: !12334)
!12351 = !DILocation(line: 0, scope: !12327, inlinedAt: !12352)
!12352 = distinct !DILocation(line: 215, column: 2, scope: !12319, inlinedAt: !12350)
!12353 = !DILocation(line: 95, column: 2, scope: !12327, inlinedAt: !12352)
!12354 = !DILocation(line: 246, column: 13, scope: !12334)
!12355 = !DILocation(line: 246, column: 2, scope: !12334)
!12356 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1831, file: !1831, line: 249, type: !7520, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !12357)
!12357 = !{!12358, !12359}
!12358 = !DILocalVariable(name: "key", scope: !12356, file: !1831, line: 251, type: !12251)
!12359 = !DILocalVariable(name: "ret", scope: !12356, file: !1831, line: 252, type: !108)
!12360 = !DILocation(line: 0, scope: !12268, inlinedAt: !12361)
!12361 = distinct !DILocation(line: 251, column: 25, scope: !12356)
!12362 = !DILocation(line: 55, column: 2, scope: !12277, inlinedAt: !12363)
!12363 = distinct !DILocation(line: 145, column: 10, scope: !12268, inlinedAt: !12361)
!12364 = !DILocation(line: 0, scope: !12277, inlinedAt: !12363)
!12365 = !DILocation(line: 0, scope: !12356)
!12366 = !DILocation(line: 252, column: 17, scope: !12356)
!12367 = !DILocation(line: 252, column: 29, scope: !12356)
!12368 = !DILocation(line: 252, column: 27, scope: !12356)
!12369 = !DILocation(line: 0, scope: !12319, inlinedAt: !12370)
!12370 = distinct !DILocation(line: 254, column: 2, scope: !12356)
!12371 = !DILocation(line: 0, scope: !12327, inlinedAt: !12372)
!12372 = distinct !DILocation(line: 215, column: 2, scope: !12319, inlinedAt: !12370)
!12373 = !DILocation(line: 95, column: 2, scope: !12327, inlinedAt: !12372)
!12374 = !DILocation(line: 255, column: 2, scope: !12356)
!12375 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1831, file: !1831, line: 258, type: !337, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !256)
!12376 = !DILocation(line: 260, column: 6, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12375, file: !1831, line: 260, column: 6)
!12378 = !DILocation(line: 260, column: 16, scope: !12377)
!12379 = !DILocation(line: 260, column: 6, scope: !12375)
!12380 = !DILocation(line: 261, column: 17, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12377, file: !1831, line: 260, column: 34)
!12382 = !DILocation(line: 262, column: 2, scope: !12381)
!12383 = !DILocation(line: 263, column: 1, scope: !12375)
!12384 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1831, file: !1831, line: 265, type: !337, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1753, retainedNodes: !256)
!12385 = !DILocation(line: 267, column: 16, scope: !12384)
!12386 = !DILocation(line: 268, column: 1, scope: !12384)
!12387 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12388, file: !12388, line: 9, type: !12389, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3123, retainedNodes: !12412)
!12388 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12389 = !DISubroutineType(types: !12390)
!12390 = !{!107, !12391, !190, !12411}
!12391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12392, size: 32)
!12392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12393)
!12393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1672, line: 60, size: 64, elements: !12394)
!12394 = !{!12395, !12410}
!12395 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12393, file: !1672, line: 69, baseType: !12396, size: 32)
!12396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12397, size: 32)
!12397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12398)
!12398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1672, line: 50, size: 64, elements: !12399)
!12399 = !{!12400, !12408, !12409}
!12400 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12398, file: !1672, line: 52, baseType: !12401, size: 32)
!12401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12402, size: 32)
!12402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12403)
!12403 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1683, line: 37, baseType: !12404)
!12404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1683, line: 32, size: 64, elements: !12405)
!12405 = !{!12406, !12407}
!12406 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12404, file: !1683, line: 34, baseType: !108, size: 32)
!12407 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12404, file: !1683, line: 36, baseType: !108, size: 32, offset: 32)
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12398, file: !1672, line: 54, baseType: !190, size: 8, offset: 32)
!12409 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12398, file: !1672, line: 56, baseType: !190, size: 8, offset: 40)
!12410 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12393, file: !1672, line: 71, baseType: !190, size: 8, offset: 32)
!12411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12396, size: 32)
!12412 = !{!12413, !12414, !12415}
!12413 = !DILocalVariable(name: "config", arg: 1, scope: !12387, file: !12388, line: 9, type: !12391)
!12414 = !DILocalVariable(name: "id", arg: 2, scope: !12387, file: !12388, line: 9, type: !190)
!12415 = !DILocalVariable(name: "state", arg: 3, scope: !12387, file: !12388, line: 10, type: !12411)
!12416 = !DILocation(line: 0, scope: !12387)
!12417 = !DILocation(line: 12, column: 20, scope: !12387)
!12418 = !DILocation(line: 13, column: 27, scope: !12387)
!12419 = !DILocation(line: 13, column: 42, scope: !12387)
!12420 = !DILocation(line: 13, column: 19, scope: !12387)
!12421 = !DILocation(line: 13, column: 16, scope: !12387)
!12422 = !DILocation(line: 13, column: 2, scope: !12387)
!12423 = distinct !{!12423, !12422, !12424}
!12424 = !DILocation(line: 19, column: 2, scope: !12387)
!12425 = !DILocation(line: 14, column: 23, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12427, file: !12388, line: 14, column: 7)
!12427 = distinct !DILexicalBlock(scope: !12387, file: !12388, line: 13, column: 54)
!12428 = !DILocation(line: 14, column: 10, scope: !12426)
!12429 = !DILocation(line: 18, column: 11, scope: !12427)
!12430 = !DILocation(line: 14, column: 7, scope: !12427)
!12431 = !DILocation(line: 22, column: 1, scope: !12387)
!12432 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1948, file: !1948, line: 193, type: !12433, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1866, retainedNodes: !12442)
!12433 = !DISubroutineType(types: !12434)
!12434 = !{!107, !12435, !190, !22}
!12435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12436, size: 32)
!12436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12437)
!12437 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1683, line: 37, baseType: !12438)
!12438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1683, line: 32, size: 64, elements: !12439)
!12439 = !{!12440, !12441}
!12440 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12438, file: !1683, line: 34, baseType: !108, size: 32)
!12441 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12438, file: !1683, line: 36, baseType: !108, size: 32, offset: 32)
!12442 = !{!12443, !12444, !12445, !12446, !12447, !12448, !12449, !12450, !12452}
!12443 = !DILocalVariable(name: "pins", arg: 1, scope: !12432, file: !1948, line: 193, type: !12435)
!12444 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12432, file: !1948, line: 193, type: !190)
!12445 = !DILocalVariable(name: "reg", arg: 3, scope: !12432, file: !1948, line: 194, type: !22)
!12446 = !DILocalVariable(name: "pin", scope: !12432, file: !1948, line: 196, type: !108)
!12447 = !DILocalVariable(name: "mux", scope: !12432, file: !1948, line: 196, type: !108)
!12448 = !DILocalVariable(name: "pin_cgf", scope: !12432, file: !1948, line: 197, type: !108)
!12449 = !DILocalVariable(name: "ret", scope: !12432, file: !1948, line: 198, type: !107)
!12450 = !DILocalVariable(name: "i", scope: !12451, file: !1948, line: 209, type: !190)
!12451 = distinct !DILexicalBlock(scope: !12432, file: !1948, line: 209, column: 2)
!12452 = !DILocalVariable(name: "gpio_out", scope: !12453, file: !1948, line: 239, type: !108)
!12453 = distinct !DILexicalBlock(scope: !12454, file: !1948, line: 238, column: 55)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !1948, line: 238, column: 14)
!12455 = distinct !DILexicalBlock(scope: !12456, file: !1948, line: 236, column: 14)
!12456 = distinct !DILexicalBlock(scope: !12457, file: !1948, line: 234, column: 7)
!12457 = distinct !DILexicalBlock(scope: !12458, file: !1948, line: 209, column: 41)
!12458 = distinct !DILexicalBlock(scope: !12451, file: !1948, line: 209, column: 2)
!12459 = !DILocation(line: 0, scope: !12432)
!12460 = !DILocation(line: 0, scope: !12451)
!12461 = !DILocation(line: 209, column: 25, scope: !12458)
!12462 = !DILocation(line: 209, column: 2, scope: !12451)
!12463 = distinct !{!12463, !12462, !12464}
!12464 = !DILocation(line: 259, column: 2, scope: !12451)
!12465 = !DILocation(line: 210, column: 17, scope: !12457)
!12466 = !DILocation(line: 234, column: 7, scope: !12456)
!12467 = !DILocation(line: 234, column: 33, scope: !12456)
!12468 = !DILocation(line: 234, column: 7, scope: !12457)
!12469 = !DILocation(line: 235, column: 22, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12456, file: !1948, line: 234, column: 49)
!12471 = !DILocation(line: 235, column: 29, scope: !12470)
!12472 = !DILocation(line: 236, column: 3, scope: !12470)
!12473 = !DILocation(line: 236, column: 14, scope: !12456)
!12474 = !DILocation(line: 239, column: 32, scope: !12453)
!12475 = !DILocation(line: 0, scope: !12453)
!12476 = !DILocation(line: 241, column: 8, scope: !12453)
!12477 = !DILocation(line: 246, column: 3, scope: !12453)
!12478 = !DILocation(line: 252, column: 9, scope: !12457)
!12479 = !DILocation(line: 255, column: 9, scope: !12457)
!12480 = !DILocation(line: 256, column: 11, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12457, file: !1948, line: 256, column: 7)
!12482 = !DILocation(line: 209, column: 37, scope: !12458)
!12483 = !DILocation(line: 256, column: 7, scope: !12457)
!12484 = !DILocation(line: 262, column: 1, scope: !12432)
!12485 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1948, file: !1948, line: 176, type: !12486, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1866, retainedNodes: !12488)
!12486 = !DISubroutineType(types: !12487)
!12487 = !{!107, !108, !108, !108}
!12488 = !{!12489, !12490, !12491, !12492}
!12489 = !DILocalVariable(name: "pin", arg: 1, scope: !12485, file: !1948, line: 176, type: !108)
!12490 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12485, file: !1948, line: 176, type: !108)
!12491 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12485, file: !1948, line: 176, type: !108)
!12492 = !DILocalVariable(name: "port_device", scope: !12485, file: !1948, line: 178, type: !1878)
!12493 = !DILocation(line: 0, scope: !12485)
!12494 = !DILocation(line: 180, column: 22, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12485, file: !1948, line: 180, column: 6)
!12496 = !DILocation(line: 180, column: 6, scope: !12485)
!12497 = !DILocation(line: 180, column: 6, scope: !12495)
!12498 = !DILocation(line: 184, column: 16, scope: !12485)
!12499 = !DILocation(line: 186, column: 19, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12485, file: !1948, line: 186, column: 6)
!12501 = !DILocation(line: 186, column: 28, scope: !12500)
!12502 = !DILocation(line: 186, column: 33, scope: !12500)
!12503 = !DILocation(line: 186, column: 6, scope: !12485)
!12504 = !DILocation(line: 190, column: 43, scope: !12485)
!12505 = !DILocation(line: 190, column: 9, scope: !12485)
!12506 = !DILocation(line: 190, column: 2, scope: !12485)
!12507 = !DILocation(line: 191, column: 1, scope: !12485)
!12508 = distinct !DISubprogram(name: "device_is_ready", scope: !10464, file: !10464, line: 47, type: !12509, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1866, retainedNodes: !12511)
!12509 = !DISubroutineType(types: !12510)
!12510 = !{!136, !1878}
!12511 = !{!12512}
!12512 = !DILocalVariable(name: "dev", arg: 1, scope: !12508, file: !10464, line: 47, type: !1878)
!12513 = !DILocation(line: 0, scope: !12508)
!12514 = !DILocation(line: 55, column: 2, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12508, file: !10464, line: 55, column: 2)
!12516 = !{i64 2149514397}
!12517 = !DILocation(line: 56, column: 9, scope: !12508)
!12518 = !DILocation(line: 56, column: 2, scope: !12508)
!12519 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !451, file: !451, line: 730, type: !12509, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1866, retainedNodes: !12520)
!12520 = !{!12521}
!12521 = !DILocalVariable(name: "dev", arg: 1, scope: !12519, file: !451, line: 730, type: !1878)
!12522 = !DILocation(line: 0, scope: !12519)
!12523 = !DILocation(line: 732, column: 9, scope: !12519)
!12524 = !DILocation(line: 732, column: 2, scope: !12519)
!12525 = distinct !DISubprogram(name: "SystemInit", scope: !2000, file: !2000, line: 167, type: !337, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1956, retainedNodes: !256)
!12526 = !DILocation(line: 182, column: 1, scope: !12525)
!12527 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2000, file: !2000, line: 220, type: !337, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1956, retainedNodes: !12528)
!12528 = !{!12529, !12530, !12531, !12532, !12533}
!12529 = !DILocalVariable(name: "tmp", scope: !12527, file: !2000, line: 222, type: !108)
!12530 = !DILocalVariable(name: "pllvco", scope: !12527, file: !2000, line: 222, type: !108)
!12531 = !DILocalVariable(name: "pllp", scope: !12527, file: !2000, line: 222, type: !108)
!12532 = !DILocalVariable(name: "pllsource", scope: !12527, file: !2000, line: 222, type: !108)
!12533 = !DILocalVariable(name: "pllm", scope: !12527, file: !2000, line: 222, type: !108)
!12534 = !DILocation(line: 0, scope: !12527)
!12535 = !DILocation(line: 225, column: 14, scope: !12527)
!12536 = !DILocation(line: 225, column: 19, scope: !12527)
!12537 = !DILocation(line: 227, column: 3, scope: !12527)
!12538 = !DILocation(line: 240, column: 25, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12527, file: !2000, line: 228, column: 3)
!12540 = !DILocation(line: 241, column: 19, scope: !12539)
!12541 = !DILocation(line: 241, column: 27, scope: !12539)
!12542 = !DILocation(line: 0, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12539, file: !2000, line: 243, column: 11)
!12544 = !DILocation(line: 254, column: 22, scope: !12539)
!12545 = !DILocation(line: 254, column: 62, scope: !12539)
!12546 = !DILocation(line: 255, column: 31, scope: !12539)
!12547 = !DILocation(line: 256, column: 7, scope: !12539)
!12548 = !DILocation(line: 0, scope: !12539)
!12549 = !DILocation(line: 263, column: 30, scope: !12527)
!12550 = !DILocation(line: 263, column: 52, scope: !12527)
!12551 = !DILocation(line: 263, column: 9, scope: !12527)
!12552 = !DILocation(line: 265, column: 19, scope: !12527)
!12553 = !DILocation(line: 266, column: 1, scope: !12527)
!12554 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !12555, file: !12555, line: 87, type: !12556, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !12595)
!12555 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12556 = !DISubroutineType(types: !12557)
!12557 = !{!12558, !12559}
!12558 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3129, line: 44, baseType: !3128)
!12559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12560, size: 32)
!12560 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !12561, line: 172, baseType: !12562)
!12561 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12561, line: 121, size: 736, elements: !12563)
!12563 = !{!12564, !12565, !12574, !12582, !12583, !12584, !12585, !12586, !12587, !12588, !12589, !12590, !12591, !12592, !12593, !12594}
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !12562, file: !12561, line: 123, baseType: !108, size: 32)
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !12562, file: !12561, line: 126, baseType: !12566, size: 160, offset: 32)
!12566 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !12561, line: 97, baseType: !12567)
!12567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12561, line: 79, size: 160, elements: !12568)
!12568 = !{!12569, !12570, !12571, !12572, !12573}
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !12567, file: !12561, line: 81, baseType: !108, size: 32)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !12567, file: !12561, line: 84, baseType: !108, size: 32, offset: 32)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !12567, file: !12561, line: 87, baseType: !108, size: 32, offset: 64)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !12567, file: !12561, line: 90, baseType: !108, size: 32, offset: 96)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !12567, file: !12561, line: 94, baseType: !108, size: 32, offset: 128)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !12562, file: !12561, line: 129, baseType: !12575, size: 128, offset: 192)
!12575 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !12561, line: 116, baseType: !12576)
!12576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12561, line: 102, size: 128, elements: !12577)
!12577 = !{!12578, !12579, !12580, !12581}
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !12576, file: !12561, line: 104, baseType: !108, size: 32)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !12576, file: !12561, line: 107, baseType: !108, size: 32, offset: 32)
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !12576, file: !12561, line: 110, baseType: !108, size: 32, offset: 64)
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !12576, file: !12561, line: 113, baseType: !108, size: 32, offset: 96)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !12562, file: !12561, line: 132, baseType: !108, size: 32, offset: 320)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !12562, file: !12561, line: 136, baseType: !108, size: 32, offset: 352)
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !12562, file: !12561, line: 140, baseType: !108, size: 32, offset: 384)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !12562, file: !12561, line: 143, baseType: !108, size: 32, offset: 416)
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !12562, file: !12561, line: 146, baseType: !108, size: 32, offset: 448)
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !12562, file: !12561, line: 149, baseType: !108, size: 32, offset: 480)
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !12562, file: !12561, line: 152, baseType: !108, size: 32, offset: 512)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !12562, file: !12561, line: 155, baseType: !108, size: 32, offset: 544)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !12562, file: !12561, line: 158, baseType: !108, size: 32, offset: 576)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !12562, file: !12561, line: 161, baseType: !108, size: 32, offset: 608)
!12592 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !12562, file: !12561, line: 164, baseType: !108, size: 32, offset: 640)
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !12562, file: !12561, line: 167, baseType: !108, size: 32, offset: 672)
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !12562, file: !12561, line: 170, baseType: !190, size: 8, offset: 704)
!12595 = !{!12596, !12597, !12598, !12599, !12600, !12601, !12602, !12603, !12604, !12605, !12606}
!12596 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12554, file: !12555, line: 87, type: !12559)
!12597 = !DILocalVariable(name: "tickstart", scope: !12554, file: !12555, line: 89, type: !108)
!12598 = !DILocalVariable(name: "tmpreg1", scope: !12554, file: !12555, line: 90, type: !108)
!12599 = !DILocalVariable(name: "plli2sp", scope: !12554, file: !12555, line: 91, type: !108)
!12600 = !DILocalVariable(name: "plli2sq", scope: !12554, file: !12555, line: 92, type: !108)
!12601 = !DILocalVariable(name: "plli2sr", scope: !12554, file: !12555, line: 93, type: !108)
!12602 = !DILocalVariable(name: "pllsaip", scope: !12554, file: !12555, line: 94, type: !108)
!12603 = !DILocalVariable(name: "pllsaiq", scope: !12554, file: !12555, line: 95, type: !108)
!12604 = !DILocalVariable(name: "plli2sused", scope: !12554, file: !12555, line: 96, type: !108)
!12605 = !DILocalVariable(name: "pllsaiused", scope: !12554, file: !12555, line: 97, type: !108)
!12606 = !DILocalVariable(name: "tmpreg", scope: !12607, file: !12555, line: 184, type: !431)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12555, line: 184, column: 5)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !12555, line: 179, column: 3)
!12609 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 178, column: 6)
!12610 = !DILocation(line: 0, scope: !12554)
!12611 = !DILocation(line: 103, column: 23, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 103, column: 6)
!12613 = !DILocation(line: 103, column: 45, scope: !12612)
!12614 = !DILocation(line: 103, column: 71, scope: !12612)
!12615 = !DILocation(line: 103, column: 6, scope: !12554)
!12616 = !DILocation(line: 109, column: 5, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12612, file: !12555, line: 104, column: 3)
!12618 = !DILocation(line: 111, column: 23, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12617, file: !12555, line: 111, column: 8)
!12620 = !DILocation(line: 111, column: 45, scope: !12619)
!12621 = !DILocation(line: 111, column: 8, scope: !12617)
!12622 = !DILocation(line: 119, column: 23, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 119, column: 6)
!12624 = !DILocation(line: 119, column: 45, scope: !12623)
!12625 = !DILocation(line: 119, column: 71, scope: !12623)
!12626 = !DILocation(line: 119, column: 6, scope: !12554)
!12627 = !DILocation(line: 125, column: 5, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12623, file: !12555, line: 120, column: 3)
!12629 = !DILocation(line: 127, column: 23, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12628, file: !12555, line: 127, column: 8)
!12631 = !DILocation(line: 127, column: 45, scope: !12630)
!12632 = !DILocation(line: 127, column: 8, scope: !12628)
!12633 = !DILocation(line: 135, column: 23, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 135, column: 6)
!12635 = !DILocation(line: 135, column: 45, scope: !12634)
!12636 = !DILocation(line: 135, column: 67, scope: !12634)
!12637 = !DILocation(line: 135, column: 6, scope: !12554)
!12638 = !DILocation(line: 141, column: 5, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12634, file: !12555, line: 136, column: 3)
!12640 = !DILocation(line: 143, column: 23, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12639, file: !12555, line: 143, column: 8)
!12642 = !DILocation(line: 143, column: 42, scope: !12641)
!12643 = !DILocation(line: 143, column: 8, scope: !12639)
!12644 = !DILocation(line: 148, column: 42, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12639, file: !12555, line: 148, column: 8)
!12646 = !DILocation(line: 148, column: 8, scope: !12639)
!12647 = !DILocation(line: 156, column: 23, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 156, column: 6)
!12649 = !DILocation(line: 156, column: 45, scope: !12648)
!12650 = !DILocation(line: 156, column: 67, scope: !12648)
!12651 = !DILocation(line: 156, column: 6, scope: !12554)
!12652 = !DILocation(line: 162, column: 5, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12648, file: !12555, line: 157, column: 3)
!12654 = !DILocation(line: 165, column: 23, scope: !12655)
!12655 = distinct !DILexicalBlock(scope: !12653, file: !12555, line: 165, column: 8)
!12656 = !DILocation(line: 165, column: 42, scope: !12655)
!12657 = !DILocation(line: 165, column: 8, scope: !12653)
!12658 = !DILocation(line: 170, column: 42, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12653, file: !12555, line: 170, column: 8)
!12660 = !DILocation(line: 170, column: 8, scope: !12653)
!12661 = !DILocation(line: 178, column: 23, scope: !12609)
!12662 = !DILocation(line: 178, column: 45, scope: !12609)
!12663 = !DILocation(line: 178, column: 66, scope: !12609)
!12664 = !DILocation(line: 178, column: 6, scope: !12554)
!12665 = !DILocation(line: 184, column: 5, scope: !12607)
!12666 = !DILocation(line: 184, column: 5, scope: !12608)
!12667 = !DILocation(line: 187, column: 13, scope: !12608)
!12668 = !DILocation(line: 190, column: 17, scope: !12608)
!12669 = !DILocation(line: 192, column: 5, scope: !12608)
!12670 = !DILocation(line: 192, column: 17, scope: !12608)
!12671 = !DILocation(line: 192, column: 20, scope: !12608)
!12672 = !DILocation(line: 192, column: 34, scope: !12608)
!12673 = !DILocation(line: 194, column: 11, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !12555, line: 194, column: 10)
!12675 = distinct !DILexicalBlock(scope: !12608, file: !12555, line: 193, column: 5)
!12676 = !DILocation(line: 194, column: 25, scope: !12674)
!12677 = !DILocation(line: 194, column: 39, scope: !12674)
!12678 = !DILocation(line: 194, column: 10, scope: !12675)
!12679 = distinct !{!12679, !12669, !12680}
!12680 = !DILocation(line: 198, column: 5, scope: !12608)
!12681 = !DILocation(line: 200, column: 21, scope: !12608)
!12682 = !DILocation(line: 200, column: 26, scope: !12608)
!12683 = !DILocation(line: 201, column: 17, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12608, file: !12555, line: 201, column: 8)
!12685 = !DILocation(line: 201, column: 33, scope: !12684)
!12686 = !DILocation(line: 201, column: 66, scope: !12684)
!12687 = !DILocation(line: 201, column: 84, scope: !12684)
!12688 = !DILocation(line: 201, column: 47, scope: !12684)
!12689 = !DILocation(line: 201, column: 8, scope: !12608)
!12690 = !DILocation(line: 204, column: 23, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12684, file: !12555, line: 202, column: 5)
!12692 = !DILocation(line: 204, column: 28, scope: !12691)
!12693 = !DILocation(line: 206, column: 7, scope: !12691)
!12694 = !DILocation(line: 207, column: 7, scope: !12691)
!12695 = !DILocation(line: 209, column: 17, scope: !12691)
!12696 = !DILocation(line: 212, column: 10, scope: !12697)
!12697 = distinct !DILexicalBlock(scope: !12691, file: !12555, line: 212, column: 10)
!12698 = !DILocation(line: 212, column: 10, scope: !12691)
!12699 = !DILocation(line: 215, column: 21, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12697, file: !12555, line: 213, column: 7)
!12701 = !DILocation(line: 218, column: 9, scope: !12700)
!12702 = !DILocation(line: 218, column: 15, scope: !12700)
!12703 = !DILocation(line: 218, column: 51, scope: !12700)
!12704 = !DILocation(line: 220, column: 15, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12706, file: !12555, line: 220, column: 14)
!12706 = distinct !DILexicalBlock(scope: !12700, file: !12555, line: 219, column: 9)
!12707 = !DILocation(line: 220, column: 29, scope: !12705)
!12708 = !DILocation(line: 220, column: 43, scope: !12705)
!12709 = !DILocation(line: 220, column: 14, scope: !12706)
!12710 = distinct !{!12710, !12701, !12711}
!12711 = !DILocation(line: 224, column: 9, scope: !12700)
!12712 = !DILocation(line: 227, column: 5, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12608, file: !12555, line: 227, column: 5)
!12714 = !DILocation(line: 232, column: 23, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 232, column: 6)
!12716 = !DILocation(line: 228, column: 3, scope: !12608)
!12717 = !DILocation(line: 232, column: 45, scope: !12715)
!12718 = !DILocation(line: 232, column: 66, scope: !12715)
!12719 = !DILocation(line: 232, column: 6, scope: !12554)
!12720 = !DILocation(line: 235, column: 5, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12715, file: !12555, line: 233, column: 3)
!12722 = !DILocation(line: 240, column: 23, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 240, column: 6)
!12724 = !DILocation(line: 236, column: 3, scope: !12721)
!12725 = !DILocation(line: 240, column: 45, scope: !12723)
!12726 = !DILocation(line: 240, column: 70, scope: !12723)
!12727 = !DILocation(line: 240, column: 6, scope: !12554)
!12728 = !DILocation(line: 246, column: 5, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12723, file: !12555, line: 241, column: 3)
!12730 = !DILocation(line: 251, column: 23, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 251, column: 6)
!12732 = !DILocation(line: 247, column: 3, scope: !12729)
!12733 = !DILocation(line: 251, column: 45, scope: !12731)
!12734 = !DILocation(line: 251, column: 66, scope: !12731)
!12735 = !DILocation(line: 251, column: 6, scope: !12554)
!12736 = !DILocation(line: 257, column: 5, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12731, file: !12555, line: 252, column: 3)
!12738 = !DILocation(line: 262, column: 23, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 262, column: 6)
!12740 = !DILocation(line: 258, column: 3, scope: !12737)
!12741 = !DILocation(line: 262, column: 45, scope: !12739)
!12742 = !DILocation(line: 262, column: 68, scope: !12739)
!12743 = !DILocation(line: 262, column: 6, scope: !12554)
!12744 = !DILocation(line: 268, column: 5, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12739, file: !12555, line: 263, column: 3)
!12746 = !DILocation(line: 271, column: 23, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12745, file: !12555, line: 271, column: 8)
!12748 = !DILocation(line: 271, column: 43, scope: !12747)
!12749 = !DILocation(line: 271, column: 8, scope: !12745)
!12750 = !DILocation(line: 279, column: 23, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 279, column: 6)
!12752 = !DILocation(line: 279, column: 45, scope: !12751)
!12753 = !DILocation(line: 279, column: 67, scope: !12751)
!12754 = !DILocation(line: 279, column: 6, scope: !12554)
!12755 = !DILocation(line: 285, column: 5, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12751, file: !12555, line: 280, column: 3)
!12757 = !DILocation(line: 290, column: 23, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 290, column: 6)
!12759 = !DILocation(line: 286, column: 3, scope: !12756)
!12760 = !DILocation(line: 290, column: 45, scope: !12758)
!12761 = !DILocation(line: 290, column: 70, scope: !12758)
!12762 = !DILocation(line: 290, column: 6, scope: !12554)
!12763 = !DILocation(line: 296, column: 5, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12758, file: !12555, line: 291, column: 3)
!12765 = !DILocation(line: 298, column: 23, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12764, file: !12555, line: 298, column: 8)
!12767 = !DILocation(line: 298, column: 43, scope: !12766)
!12768 = !DILocation(line: 298, column: 8, scope: !12764)
!12769 = !DILocation(line: 308, column: 44, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 308, column: 6)
!12771 = !DILocation(line: 308, column: 18, scope: !12770)
!12772 = !DILocation(line: 308, column: 25, scope: !12770)
!12773 = !DILocation(line: 308, column: 65, scope: !12770)
!12774 = !DILocation(line: 308, column: 6, scope: !12554)
!12775 = !DILocation(line: 311, column: 5, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12770, file: !12555, line: 309, column: 3)
!12777 = !DILocation(line: 313, column: 17, scope: !12776)
!12778 = !DILocation(line: 315, column: 5, scope: !12776)
!12779 = !DILocation(line: 315, column: 11, scope: !12776)
!12780 = !DILocation(line: 317, column: 11, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12782, file: !12555, line: 317, column: 10)
!12782 = distinct !DILexicalBlock(scope: !12776, file: !12555, line: 316, column: 5)
!12783 = !DILocation(line: 317, column: 25, scope: !12781)
!12784 = !DILocation(line: 317, column: 39, scope: !12781)
!12785 = !DILocation(line: 317, column: 10, scope: !12782)
!12786 = distinct !{!12786, !12778, !12787}
!12787 = !DILocation(line: 322, column: 5, scope: !12776)
!12788 = !DILocation(line: 329, column: 27, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12776, file: !12555, line: 329, column: 8)
!12790 = !DILocation(line: 329, column: 49, scope: !12789)
!12791 = !DILocation(line: 329, column: 75, scope: !12789)
!12792 = !DILocation(line: 329, column: 102, scope: !12789)
!12793 = !DILocation(line: 329, column: 121, scope: !12789)
!12794 = !DILocation(line: 329, column: 143, scope: !12789)
!12795 = !DILocation(line: 329, column: 176, scope: !12789)
!12796 = !DILocation(line: 330, column: 49, scope: !12789)
!12797 = !DILocation(line: 330, column: 75, scope: !12789)
!12798 = !DILocation(line: 330, column: 102, scope: !12789)
!12799 = !DILocation(line: 330, column: 121, scope: !12789)
!12800 = !DILocation(line: 330, column: 143, scope: !12789)
!12801 = !DILocation(line: 329, column: 8, scope: !12776)
!12802 = !DILocation(line: 336, column: 26, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12789, file: !12555, line: 331, column: 5)
!12804 = !DILocation(line: 336, column: 100, scope: !12803)
!12805 = !DILocation(line: 337, column: 24, scope: !12803)
!12806 = !DILocation(line: 337, column: 61, scope: !12803)
!12807 = !DILocation(line: 341, column: 7, scope: !12803)
!12808 = !DILocation(line: 345, column: 27, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12776, file: !12555, line: 345, column: 8)
!12810 = !DILocation(line: 342, column: 5, scope: !12803)
!12811 = !DILocation(line: 345, column: 49, scope: !12809)
!12812 = !DILocation(line: 345, column: 71, scope: !12809)
!12813 = !DILocation(line: 345, column: 94, scope: !12809)
!12814 = !DILocation(line: 345, column: 113, scope: !12809)
!12815 = !DILocation(line: 345, column: 132, scope: !12809)
!12816 = !DILocation(line: 345, column: 162, scope: !12809)
!12817 = !DILocation(line: 346, column: 49, scope: !12809)
!12818 = !DILocation(line: 346, column: 71, scope: !12809)
!12819 = !DILocation(line: 346, column: 94, scope: !12809)
!12820 = !DILocation(line: 346, column: 113, scope: !12809)
!12821 = !DILocation(line: 346, column: 132, scope: !12809)
!12822 = !DILocation(line: 345, column: 8, scope: !12776)
!12823 = !DILocation(line: 354, column: 26, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12809, file: !12555, line: 347, column: 5)
!12825 = !DILocation(line: 354, column: 100, scope: !12824)
!12826 = !DILocation(line: 355, column: 24, scope: !12824)
!12827 = !DILocation(line: 355, column: 61, scope: !12824)
!12828 = !DILocation(line: 360, column: 7, scope: !12824)
!12829 = !DILocation(line: 363, column: 7, scope: !12824)
!12830 = !DILocation(line: 367, column: 26, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12776, file: !12555, line: 367, column: 8)
!12832 = !DILocation(line: 364, column: 5, scope: !12824)
!12833 = !DILocation(line: 367, column: 48, scope: !12831)
!12834 = !DILocation(line: 367, column: 73, scope: !12831)
!12835 = !DILocation(line: 367, column: 99, scope: !12831)
!12836 = !DILocation(line: 367, column: 118, scope: !12831)
!12837 = !DILocation(line: 367, column: 138, scope: !12831)
!12838 = !DILocation(line: 367, column: 8, scope: !12776)
!12839 = !DILocation(line: 372, column: 26, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12831, file: !12555, line: 368, column: 5)
!12841 = !DILocation(line: 373, column: 24, scope: !12840)
!12842 = !DILocation(line: 373, column: 61, scope: !12840)
!12843 = !DILocation(line: 377, column: 7, scope: !12840)
!12844 = !DILocation(line: 381, column: 24, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12776, file: !12555, line: 381, column: 8)
!12846 = !DILocation(line: 378, column: 5, scope: !12840)
!12847 = !DILocation(line: 381, column: 45, scope: !12845)
!12848 = !DILocation(line: 381, column: 69, scope: !12845)
!12849 = !DILocation(line: 381, column: 8, scope: !12776)
!12850 = !DILocation(line: 390, column: 7, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12845, file: !12555, line: 382, column: 5)
!12852 = !DILocation(line: 391, column: 5, scope: !12851)
!12853 = !DILocation(line: 394, column: 5, scope: !12776)
!12854 = !DILocation(line: 396, column: 17, scope: !12776)
!12855 = !DILocation(line: 398, column: 5, scope: !12776)
!12856 = !DILocation(line: 398, column: 11, scope: !12776)
!12857 = !DILocation(line: 398, column: 51, scope: !12776)
!12858 = !DILocation(line: 400, column: 11, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !12555, line: 400, column: 10)
!12860 = distinct !DILexicalBlock(scope: !12776, file: !12555, line: 399, column: 5)
!12861 = !DILocation(line: 400, column: 25, scope: !12859)
!12862 = !DILocation(line: 400, column: 39, scope: !12859)
!12863 = !DILocation(line: 400, column: 10, scope: !12860)
!12864 = distinct !{!12864, !12855, !12865}
!12865 = !DILocation(line: 405, column: 5, scope: !12776)
!12866 = !DILocation(line: 411, column: 17, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12554, file: !12555, line: 411, column: 6)
!12868 = !DILocation(line: 411, column: 6, scope: !12554)
!12869 = !DILocation(line: 414, column: 5, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12867, file: !12555, line: 412, column: 3)
!12871 = !DILocation(line: 416, column: 17, scope: !12870)
!12872 = !DILocation(line: 418, column: 5, scope: !12870)
!12873 = !DILocation(line: 418, column: 11, scope: !12870)
!12874 = !DILocation(line: 420, column: 11, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !12555, line: 420, column: 10)
!12876 = distinct !DILexicalBlock(scope: !12870, file: !12555, line: 419, column: 5)
!12877 = !DILocation(line: 420, column: 25, scope: !12875)
!12878 = !DILocation(line: 420, column: 39, scope: !12875)
!12879 = !DILocation(line: 420, column: 10, scope: !12876)
!12880 = distinct !{!12880, !12872, !12881}
!12881 = !DILocation(line: 425, column: 5, scope: !12870)
!12882 = !DILocation(line: 432, column: 27, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12870, file: !12555, line: 432, column: 8)
!12884 = !DILocation(line: 432, column: 49, scope: !12883)
!12885 = !DILocation(line: 432, column: 71, scope: !12883)
!12886 = !DILocation(line: 432, column: 94, scope: !12883)
!12887 = !DILocation(line: 432, column: 113, scope: !12883)
!12888 = !DILocation(line: 432, column: 132, scope: !12883)
!12889 = !DILocation(line: 432, column: 162, scope: !12883)
!12890 = !DILocation(line: 433, column: 49, scope: !12883)
!12891 = !DILocation(line: 433, column: 71, scope: !12883)
!12892 = !DILocation(line: 433, column: 94, scope: !12883)
!12893 = !DILocation(line: 433, column: 113, scope: !12883)
!12894 = !DILocation(line: 433, column: 132, scope: !12883)
!12895 = !DILocation(line: 432, column: 8, scope: !12870)
!12896 = !DILocation(line: 441, column: 26, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12883, file: !12555, line: 434, column: 5)
!12898 = !DILocation(line: 441, column: 100, scope: !12897)
!12899 = !DILocation(line: 445, column: 7, scope: !12897)
!12900 = !DILocation(line: 448, column: 7, scope: !12897)
!12901 = !DILocation(line: 453, column: 26, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12870, file: !12555, line: 453, column: 8)
!12903 = !DILocation(line: 449, column: 5, scope: !12897)
!12904 = !DILocation(line: 453, column: 48, scope: !12902)
!12905 = !DILocation(line: 453, column: 71, scope: !12902)
!12906 = !DILocation(line: 453, column: 95, scope: !12902)
!12907 = !DILocation(line: 453, column: 114, scope: !12902)
!12908 = !DILocation(line: 453, column: 134, scope: !12902)
!12909 = !DILocation(line: 453, column: 8, scope: !12870)
!12910 = !DILocation(line: 458, column: 24, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12902, file: !12555, line: 454, column: 5)
!12912 = !DILocation(line: 458, column: 61, scope: !12911)
!12913 = !DILocation(line: 462, column: 7, scope: !12911)
!12914 = !DILocation(line: 463, column: 5, scope: !12911)
!12915 = !DILocation(line: 466, column: 5, scope: !12870)
!12916 = !DILocation(line: 468, column: 17, scope: !12870)
!12917 = !DILocation(line: 470, column: 5, scope: !12870)
!12918 = !DILocation(line: 470, column: 11, scope: !12870)
!12919 = !DILocation(line: 470, column: 39, scope: !12870)
!12920 = !DILocation(line: 472, column: 11, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !12555, line: 472, column: 10)
!12922 = distinct !DILexicalBlock(scope: !12870, file: !12555, line: 471, column: 5)
!12923 = !DILocation(line: 472, column: 25, scope: !12921)
!12924 = !DILocation(line: 472, column: 39, scope: !12921)
!12925 = !DILocation(line: 472, column: 10, scope: !12922)
!12926 = distinct !{!12926, !12917, !12927}
!12927 = !DILocation(line: 477, column: 5, scope: !12870)
!12928 = !DILocation(line: 480, column: 1, scope: !12554)
!12929 = !DISubprogram(name: "HAL_GetTick", scope: !12930, file: !12930, line: 234, type: !7520, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!12930 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12931 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !12555, file: !12555, line: 489, type: !12932, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !12934)
!12932 = !DISubroutineType(types: !12933)
!12933 = !{null, !12559}
!12934 = !{!12935, !12936}
!12935 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12931, file: !12555, line: 489, type: !12559)
!12936 = !DILocalVariable(name: "tempreg", scope: !12931, file: !12555, line: 491, type: !108)
!12937 = !DILocation(line: 0, scope: !12931)
!12938 = !DILocation(line: 494, column: 18, scope: !12931)
!12939 = !DILocation(line: 494, column: 39, scope: !12931)
!12940 = !DILocation(line: 502, column: 52, scope: !12931)
!12941 = !DILocation(line: 502, column: 63, scope: !12931)
!12942 = !DILocation(line: 502, column: 25, scope: !12931)
!12943 = !DILocation(line: 502, column: 33, scope: !12931)
!12944 = !DILocation(line: 503, column: 52, scope: !12931)
!12945 = !DILocation(line: 503, column: 89, scope: !12931)
!12946 = !DILocation(line: 503, column: 25, scope: !12931)
!12947 = !DILocation(line: 503, column: 33, scope: !12931)
!12948 = !DILocation(line: 504, column: 54, scope: !12931)
!12949 = !DILocation(line: 504, column: 128, scope: !12931)
!12950 = !DILocation(line: 504, column: 25, scope: !12931)
!12951 = !DILocation(line: 504, column: 33, scope: !12931)
!12952 = !DILocation(line: 505, column: 52, scope: !12931)
!12953 = !DILocation(line: 505, column: 89, scope: !12931)
!12954 = !DILocation(line: 505, column: 25, scope: !12931)
!12955 = !DILocation(line: 505, column: 33, scope: !12931)
!12956 = !DILocation(line: 506, column: 52, scope: !12931)
!12957 = !DILocation(line: 506, column: 89, scope: !12931)
!12958 = !DILocation(line: 506, column: 25, scope: !12931)
!12959 = !DILocation(line: 506, column: 33, scope: !12931)
!12960 = !DILocation(line: 508, column: 52, scope: !12931)
!12961 = !DILocation(line: 508, column: 63, scope: !12931)
!12962 = !DILocation(line: 508, column: 25, scope: !12931)
!12963 = !DILocation(line: 508, column: 33, scope: !12931)
!12964 = !DILocation(line: 509, column: 52, scope: !12931)
!12965 = !DILocation(line: 509, column: 89, scope: !12931)
!12966 = !DILocation(line: 509, column: 25, scope: !12931)
!12967 = !DILocation(line: 509, column: 33, scope: !12931)
!12968 = !DILocation(line: 510, column: 54, scope: !12931)
!12969 = !DILocation(line: 510, column: 128, scope: !12931)
!12970 = !DILocation(line: 510, column: 25, scope: !12931)
!12971 = !DILocation(line: 510, column: 33, scope: !12931)
!12972 = !DILocation(line: 511, column: 52, scope: !12931)
!12973 = !DILocation(line: 511, column: 89, scope: !12931)
!12974 = !DILocation(line: 511, column: 25, scope: !12931)
!12975 = !DILocation(line: 511, column: 33, scope: !12931)
!12976 = !DILocation(line: 513, column: 48, scope: !12931)
!12977 = !DILocation(line: 513, column: 56, scope: !12931)
!12978 = !DILocation(line: 513, column: 18, scope: !12931)
!12979 = !DILocation(line: 513, column: 29, scope: !12931)
!12980 = !DILocation(line: 514, column: 48, scope: !12931)
!12981 = !DILocation(line: 514, column: 82, scope: !12931)
!12982 = !DILocation(line: 514, column: 18, scope: !12931)
!12983 = !DILocation(line: 514, column: 29, scope: !12931)
!12984 = !DILocation(line: 517, column: 39, scope: !12931)
!12985 = !DILocation(line: 517, column: 18, scope: !12931)
!12986 = !DILocation(line: 517, column: 37, scope: !12931)
!12987 = !DILocation(line: 520, column: 39, scope: !12931)
!12988 = !DILocation(line: 520, column: 18, scope: !12931)
!12989 = !DILocation(line: 520, column: 37, scope: !12931)
!12990 = !DILocation(line: 523, column: 42, scope: !12931)
!12991 = !DILocation(line: 523, column: 18, scope: !12931)
!12992 = !DILocation(line: 523, column: 40, scope: !12931)
!12993 = !DILocation(line: 526, column: 42, scope: !12931)
!12994 = !DILocation(line: 526, column: 18, scope: !12931)
!12995 = !DILocation(line: 526, column: 40, scope: !12931)
!12996 = !DILocation(line: 529, column: 19, scope: !12931)
!12997 = !DILocation(line: 529, column: 24, scope: !12931)
!12998 = !DILocation(line: 530, column: 67, scope: !12931)
!12999 = !DILocation(line: 530, column: 72, scope: !12931)
!13000 = !DILocation(line: 530, column: 59, scope: !12931)
!13001 = !DILocation(line: 530, column: 18, scope: !12931)
!13002 = !DILocation(line: 530, column: 36, scope: !12931)
!13003 = !DILocation(line: 533, column: 38, scope: !12931)
!13004 = !DILocation(line: 533, column: 18, scope: !12931)
!13005 = !DILocation(line: 533, column: 36, scope: !12931)
!13006 = !DILocation(line: 536, column: 42, scope: !12931)
!13007 = !DILocation(line: 536, column: 18, scope: !12931)
!13008 = !DILocation(line: 536, column: 40, scope: !12931)
!13009 = !DILocation(line: 539, column: 40, scope: !12931)
!13010 = !DILocation(line: 539, column: 18, scope: !12931)
!13011 = !DILocation(line: 539, column: 38, scope: !12931)
!13012 = !DILocation(line: 542, column: 39, scope: !12931)
!13013 = !DILocation(line: 542, column: 18, scope: !12931)
!13014 = !DILocation(line: 542, column: 37, scope: !12931)
!13015 = !DILocation(line: 545, column: 40, scope: !12931)
!13016 = !DILocation(line: 545, column: 18, scope: !12931)
!13017 = !DILocation(line: 545, column: 38, scope: !12931)
!13018 = !DILocation(line: 548, column: 13, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !12931, file: !12555, line: 548, column: 7)
!13020 = !DILocation(line: 548, column: 7, scope: !12931)
!13021 = !DILocation(line: 550, column: 20, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13019, file: !12555, line: 549, column: 3)
!13023 = !DILocation(line: 550, column: 37, scope: !13022)
!13024 = !DILocation(line: 556, column: 1, scope: !12931)
!13025 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !12555, file: !12555, line: 569, type: !8684, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13026)
!13026 = !{!13027, !13028, !13029, !13030, !13031, !13032, !13033}
!13027 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !13025, file: !12555, line: 569, type: !108)
!13028 = !DILocalVariable(name: "tmpreg1", scope: !13025, file: !12555, line: 571, type: !108)
!13029 = !DILocalVariable(name: "frequency", scope: !13025, file: !12555, line: 573, type: !108)
!13030 = !DILocalVariable(name: "vcoinput", scope: !13025, file: !12555, line: 575, type: !108)
!13031 = !DILocalVariable(name: "saiclocksource", scope: !13025, file: !12555, line: 577, type: !108)
!13032 = !DILocalVariable(name: "srcclk", scope: !13025, file: !12555, line: 578, type: !108)
!13033 = !DILocalVariable(name: "vcooutput", scope: !13025, file: !12555, line: 580, type: !108)
!13034 = !DILocation(line: 0, scope: !13025)
!13035 = !DILocation(line: 581, column: 3, scope: !13025)
!13036 = !DILocation(line: 586, column: 29, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13038, file: !12555, line: 585, column: 5)
!13038 = distinct !DILexicalBlock(scope: !13025, file: !12555, line: 582, column: 3)
!13039 = !DILocation(line: 588, column: 7, scope: !13037)
!13040 = !DILocation(line: 594, column: 20, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13042, file: !12555, line: 594, column: 14)
!13042 = distinct !DILexicalBlock(scope: !13043, file: !12555, line: 591, column: 9)
!13043 = distinct !DILexicalBlock(scope: !13037, file: !12555, line: 589, column: 7)
!13044 = !DILocation(line: 0, scope: !13041)
!13045 = !DILocation(line: 606, column: 27, scope: !13042)
!13046 = !DILocation(line: 606, column: 64, scope: !13042)
!13047 = !DILocation(line: 607, column: 42, scope: !13042)
!13048 = !DILocation(line: 607, column: 79, scope: !13042)
!13049 = !DILocation(line: 607, column: 33, scope: !13042)
!13050 = !DILocation(line: 607, column: 86, scope: !13042)
!13051 = !DILocation(line: 610, column: 29, scope: !13042)
!13052 = !DILocation(line: 610, column: 63, scope: !13042)
!13053 = !DILocation(line: 610, column: 70, scope: !13042)
!13054 = !DILocation(line: 611, column: 32, scope: !13042)
!13055 = !DILocation(line: 612, column: 11, scope: !13042)
!13056 = !DILocation(line: 619, column: 20, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13058, file: !12555, line: 619, column: 14)
!13058 = distinct !DILexicalBlock(scope: !13043, file: !12555, line: 616, column: 9)
!13059 = !DILocation(line: 0, scope: !13057)
!13060 = !DILocation(line: 632, column: 27, scope: !13058)
!13061 = !DILocation(line: 632, column: 64, scope: !13058)
!13062 = !DILocation(line: 633, column: 42, scope: !13058)
!13063 = !DILocation(line: 633, column: 79, scope: !13058)
!13064 = !DILocation(line: 633, column: 33, scope: !13058)
!13065 = !DILocation(line: 633, column: 86, scope: !13058)
!13066 = !DILocation(line: 636, column: 28, scope: !13058)
!13067 = !DILocation(line: 636, column: 36, scope: !13058)
!13068 = !DILocation(line: 636, column: 62, scope: !13058)
!13069 = !DILocation(line: 637, column: 32, scope: !13058)
!13070 = !DILocation(line: 638, column: 11, scope: !13058)
!13071 = !DILocation(line: 645, column: 20, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13073, file: !12555, line: 645, column: 14)
!13073 = distinct !DILexicalBlock(scope: !13043, file: !12555, line: 642, column: 9)
!13074 = !DILocation(line: 0, scope: !13072)
!13075 = !DILocation(line: 658, column: 27, scope: !13073)
!13076 = !DILocation(line: 658, column: 55, scope: !13073)
!13077 = !DILocation(line: 659, column: 42, scope: !13073)
!13078 = !DILocation(line: 659, column: 70, scope: !13073)
!13079 = !DILocation(line: 659, column: 33, scope: !13073)
!13080 = !DILocation(line: 659, column: 77, scope: !13073)
!13081 = !DILocation(line: 660, column: 11, scope: !13073)
!13082 = !DILocation(line: 665, column: 11, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13043, file: !12555, line: 663, column: 9)
!13084 = !DILocation(line: 669, column: 20, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13086, file: !12555, line: 669, column: 14)
!13086 = distinct !DILexicalBlock(scope: !13043, file: !12555, line: 668, column: 9)
!13087 = !DILocation(line: 691, column: 16, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13038, file: !12555, line: 689, column: 5)
!13089 = !DILocation(line: 692, column: 7, scope: !13088)
!13090 = !DILocation(line: 706, column: 20, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13092, file: !12555, line: 706, column: 14)
!13092 = distinct !DILexicalBlock(scope: !13093, file: !12555, line: 703, column: 9)
!13093 = distinct !DILexicalBlock(scope: !13088, file: !12555, line: 693, column: 7)
!13094 = !DILocation(line: 0, scope: !13091)
!13095 = !DILocation(line: 718, column: 53, scope: !13092)
!13096 = !DILocation(line: 718, column: 90, scope: !13092)
!13097 = !DILocation(line: 718, column: 43, scope: !13092)
!13098 = !DILocation(line: 720, column: 53, scope: !13092)
!13099 = !DILocation(line: 720, column: 90, scope: !13092)
!13100 = !DILocation(line: 720, column: 44, scope: !13092)
!13101 = !DILocation(line: 721, column: 11, scope: !13092)
!13102 = !DILocation(line: 728, column: 20, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13104, file: !12555, line: 728, column: 14)
!13104 = distinct !DILexicalBlock(scope: !13093, file: !12555, line: 725, column: 9)
!13105 = !DILocation(line: 0, scope: !13103)
!13106 = !DILocation(line: 740, column: 53, scope: !13104)
!13107 = !DILocation(line: 740, column: 81, scope: !13104)
!13108 = !DILocation(line: 740, column: 43, scope: !13104)
!13109 = !DILocation(line: 742, column: 53, scope: !13104)
!13110 = !DILocation(line: 742, column: 81, scope: !13104)
!13111 = !DILocation(line: 742, column: 44, scope: !13104)
!13112 = !DILocation(line: 743, column: 11, scope: !13104)
!13113 = !DILocation(line: 748, column: 20, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13115, file: !12555, line: 748, column: 14)
!13115 = distinct !DILexicalBlock(scope: !13093, file: !12555, line: 747, column: 9)
!13116 = !DILocation(line: 770, column: 16, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13038, file: !12555, line: 768, column: 5)
!13118 = !DILocation(line: 771, column: 7, scope: !13117)
!13119 = !DILocation(line: 785, column: 20, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !12555, line: 785, column: 14)
!13121 = distinct !DILexicalBlock(scope: !13122, file: !12555, line: 782, column: 9)
!13122 = distinct !DILexicalBlock(scope: !13117, file: !12555, line: 772, column: 7)
!13123 = !DILocation(line: 0, scope: !13120)
!13124 = !DILocation(line: 797, column: 53, scope: !13121)
!13125 = !DILocation(line: 797, column: 90, scope: !13121)
!13126 = !DILocation(line: 797, column: 43, scope: !13121)
!13127 = !DILocation(line: 799, column: 53, scope: !13121)
!13128 = !DILocation(line: 799, column: 90, scope: !13121)
!13129 = !DILocation(line: 799, column: 44, scope: !13121)
!13130 = !DILocation(line: 800, column: 11, scope: !13121)
!13131 = !DILocation(line: 807, column: 20, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13133, file: !12555, line: 807, column: 14)
!13133 = distinct !DILexicalBlock(scope: !13122, file: !12555, line: 804, column: 9)
!13134 = !DILocation(line: 0, scope: !13132)
!13135 = !DILocation(line: 819, column: 53, scope: !13133)
!13136 = !DILocation(line: 819, column: 81, scope: !13133)
!13137 = !DILocation(line: 819, column: 43, scope: !13133)
!13138 = !DILocation(line: 821, column: 53, scope: !13133)
!13139 = !DILocation(line: 821, column: 81, scope: !13133)
!13140 = !DILocation(line: 821, column: 44, scope: !13133)
!13141 = !DILocation(line: 822, column: 11, scope: !13133)
!13142 = !DILocation(line: 827, column: 20, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13144, file: !12555, line: 827, column: 14)
!13144 = distinct !DILexicalBlock(scope: !13122, file: !12555, line: 826, column: 9)
!13145 = !DILocation(line: 847, column: 3, scope: !13025)
!13146 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !12555, file: !12555, line: 2766, type: !13147, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13149)
!13147 = !DISubroutineType(types: !13148)
!13148 = !{null, !190}
!13149 = !{!13150}
!13150 = !DILocalVariable(name: "Mode", arg: 1, scope: !13146, file: !12555, line: 2766, type: !190)
!13151 = !DILocation(line: 0, scope: !13146)
!13152 = !DILocation(line: 2770, column: 11, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13146, file: !12555, line: 2770, column: 6)
!13154 = !DILocation(line: 0, scope: !13153)
!13155 = !DILocation(line: 2770, column: 6, scope: !13146)
!13156 = !DILocation(line: 2778, column: 1, scope: !13146)
!13157 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !12555, file: !12555, line: 2803, type: !13158, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13161)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{!12558, !13160}
!13160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12566, size: 32)
!13161 = !{!13162, !13163}
!13162 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !13157, file: !12555, line: 2803, type: !13160)
!13163 = !DILocalVariable(name: "tickstart", scope: !13157, file: !12555, line: 2805, type: !108)
!13164 = !DILocation(line: 0, scope: !13157)
!13165 = !DILocation(line: 2821, column: 3, scope: !13157)
!13166 = !DILocation(line: 2824, column: 15, scope: !13157)
!13167 = !DILocation(line: 2825, column: 3, scope: !13157)
!13168 = !DILocation(line: 2825, column: 9, scope: !13157)
!13169 = !DILocation(line: 2827, column: 9, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !12555, line: 2827, column: 8)
!13171 = distinct !DILexicalBlock(scope: !13157, file: !12555, line: 2826, column: 3)
!13172 = !DILocation(line: 2827, column: 23, scope: !13170)
!13173 = !DILocation(line: 2827, column: 37, scope: !13170)
!13174 = !DILocation(line: 2827, column: 8, scope: !13171)
!13175 = distinct !{!13175, !13167, !13176}
!13176 = !DILocation(line: 2832, column: 3, scope: !13157)
!13177 = !DILocation(line: 2840, column: 3, scope: !13157)
!13178 = !DILocation(line: 2866, column: 3, scope: !13157)
!13179 = !DILocation(line: 2869, column: 15, scope: !13157)
!13180 = !DILocation(line: 2870, column: 3, scope: !13157)
!13181 = !DILocation(line: 2870, column: 9, scope: !13157)
!13182 = !DILocation(line: 2870, column: 48, scope: !13157)
!13183 = !DILocation(line: 2872, column: 9, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !12555, line: 2872, column: 8)
!13185 = distinct !DILexicalBlock(scope: !13157, file: !12555, line: 2871, column: 3)
!13186 = !DILocation(line: 2872, column: 23, scope: !13184)
!13187 = !DILocation(line: 2872, column: 37, scope: !13184)
!13188 = !DILocation(line: 2872, column: 8, scope: !13185)
!13189 = distinct !{!13189, !13180, !13190}
!13190 = !DILocation(line: 2877, column: 3, scope: !13157)
!13191 = !DILocation(line: 2880, column: 1, scope: !13157)
!13192 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !12555, file: !12555, line: 2886, type: !13193, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13195)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{!12558}
!13195 = !{!13196}
!13196 = !DILocalVariable(name: "tickstart", scope: !13192, file: !12555, line: 2888, type: !108)
!13197 = !DILocation(line: 2891, column: 3, scope: !13192)
!13198 = !DILocation(line: 2894, column: 15, scope: !13192)
!13199 = !DILocation(line: 0, scope: !13192)
!13200 = !DILocation(line: 2895, column: 3, scope: !13192)
!13201 = !DILocation(line: 2895, column: 9, scope: !13192)
!13202 = !DILocation(line: 2895, column: 45, scope: !13192)
!13203 = !DILocation(line: 2897, column: 9, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13205, file: !12555, line: 2897, column: 8)
!13205 = distinct !DILexicalBlock(scope: !13192, file: !12555, line: 2896, column: 3)
!13206 = !DILocation(line: 2897, column: 23, scope: !13204)
!13207 = !DILocation(line: 2897, column: 36, scope: !13204)
!13208 = !DILocation(line: 2897, column: 8, scope: !13205)
!13209 = distinct !{!13209, !13200, !13210}
!13210 = !DILocation(line: 2902, column: 3, scope: !13192)
!13211 = !DILocation(line: 2905, column: 1, scope: !13192)
!13212 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !12555, file: !12555, line: 2916, type: !13213, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13216)
!13213 = !DISubroutineType(types: !13214)
!13214 = !{!12558, !13215}
!13215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12575, size: 32)
!13216 = !{!13217, !13218}
!13217 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !13212, file: !12555, line: 2916, type: !13215)
!13218 = !DILocalVariable(name: "tickstart", scope: !13212, file: !12555, line: 2918, type: !108)
!13219 = !DILocation(line: 0, scope: !13212)
!13220 = !DILocation(line: 2934, column: 3, scope: !13212)
!13221 = !DILocation(line: 2937, column: 15, scope: !13212)
!13222 = !DILocation(line: 2938, column: 3, scope: !13212)
!13223 = !DILocation(line: 2938, column: 9, scope: !13212)
!13224 = !DILocation(line: 2940, column: 9, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13226, file: !12555, line: 2940, column: 8)
!13226 = distinct !DILexicalBlock(scope: !13212, file: !12555, line: 2939, column: 3)
!13227 = !DILocation(line: 2940, column: 23, scope: !13225)
!13228 = !DILocation(line: 2940, column: 37, scope: !13225)
!13229 = !DILocation(line: 2940, column: 8, scope: !13226)
!13230 = distinct !{!13230, !13222, !13231}
!13231 = !DILocation(line: 2945, column: 3, scope: !13212)
!13232 = !DILocation(line: 2953, column: 3, scope: !13212)
!13233 = !DILocation(line: 2970, column: 3, scope: !13212)
!13234 = !DILocation(line: 2973, column: 15, scope: !13212)
!13235 = !DILocation(line: 2974, column: 3, scope: !13212)
!13236 = !DILocation(line: 2974, column: 9, scope: !13212)
!13237 = !DILocation(line: 2974, column: 37, scope: !13212)
!13238 = !DILocation(line: 2976, column: 9, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !12555, line: 2976, column: 8)
!13240 = distinct !DILexicalBlock(scope: !13212, file: !12555, line: 2975, column: 3)
!13241 = !DILocation(line: 2976, column: 23, scope: !13239)
!13242 = !DILocation(line: 2976, column: 37, scope: !13239)
!13243 = !DILocation(line: 2976, column: 8, scope: !13240)
!13244 = distinct !{!13244, !13235, !13245}
!13245 = !DILocation(line: 2981, column: 3, scope: !13212)
!13246 = !DILocation(line: 2984, column: 1, scope: !13212)
!13247 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !12555, file: !12555, line: 2990, type: !13193, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13248)
!13248 = !{!13249}
!13249 = !DILocalVariable(name: "tickstart", scope: !13247, file: !12555, line: 2992, type: !108)
!13250 = !DILocation(line: 2995, column: 3, scope: !13247)
!13251 = !DILocation(line: 2998, column: 15, scope: !13247)
!13252 = !DILocation(line: 0, scope: !13247)
!13253 = !DILocation(line: 2999, column: 3, scope: !13247)
!13254 = !DILocation(line: 2999, column: 9, scope: !13247)
!13255 = !DILocation(line: 3001, column: 9, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !12555, line: 3001, column: 8)
!13257 = distinct !DILexicalBlock(scope: !13247, file: !12555, line: 3000, column: 3)
!13258 = !DILocation(line: 3001, column: 23, scope: !13256)
!13259 = !DILocation(line: 3001, column: 36, scope: !13256)
!13260 = !DILocation(line: 3001, column: 8, scope: !13257)
!13261 = distinct !{!13261, !13253, !13262}
!13262 = !DILocation(line: 3006, column: 3, scope: !13247)
!13263 = !DILocation(line: 3009, column: 1, scope: !13247)
!13264 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12555, file: !12555, line: 3051, type: !7520, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13265)
!13265 = !{!13266, !13267, !13268, !13269, !13270}
!13266 = !DILocalVariable(name: "pllm", scope: !13264, file: !12555, line: 3053, type: !108)
!13267 = !DILocalVariable(name: "pllvco", scope: !13264, file: !12555, line: 3054, type: !108)
!13268 = !DILocalVariable(name: "pllp", scope: !13264, file: !12555, line: 3055, type: !108)
!13269 = !DILocalVariable(name: "pllr", scope: !13264, file: !12555, line: 3056, type: !108)
!13270 = !DILocalVariable(name: "sysclockfreq", scope: !13264, file: !12555, line: 3057, type: !108)
!13271 = !DILocation(line: 0, scope: !13264)
!13272 = !DILocation(line: 3060, column: 16, scope: !13264)
!13273 = !DILocation(line: 3060, column: 3, scope: !13264)
!13274 = !DILocation(line: 3076, column: 19, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13276, file: !12555, line: 3073, column: 5)
!13276 = distinct !DILexicalBlock(scope: !13264, file: !12555, line: 3061, column: 3)
!13277 = !DILocation(line: 3076, column: 27, scope: !13275)
!13278 = !DILocation(line: 3077, column: 10, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13275, file: !12555, line: 3077, column: 10)
!13280 = !DILocation(line: 0, scope: !13279)
!13281 = !DILocation(line: 3087, column: 23, scope: !13275)
!13282 = !DILocation(line: 3087, column: 82, scope: !13275)
!13283 = !DILocation(line: 3089, column: 28, scope: !13275)
!13284 = !DILocation(line: 3090, column: 7, scope: !13275)
!13285 = !DILocation(line: 3096, column: 19, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13276, file: !12555, line: 3093, column: 5)
!13287 = !DILocation(line: 3096, column: 27, scope: !13286)
!13288 = !DILocation(line: 3097, column: 10, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13286, file: !12555, line: 3097, column: 10)
!13290 = !DILocation(line: 0, scope: !13289)
!13291 = !DILocation(line: 3107, column: 21, scope: !13286)
!13292 = !DILocation(line: 3107, column: 49, scope: !13286)
!13293 = !DILocation(line: 3109, column: 28, scope: !13286)
!13294 = !DILocation(line: 3110, column: 7, scope: !13286)
!13295 = !DILocation(line: 0, scope: !13276)
!13296 = !DILocation(line: 3118, column: 3, scope: !13264)
!13297 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12555, file: !12555, line: 3143, type: !13193, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13298)
!13298 = !{!13299}
!13299 = !DILocalVariable(name: "tickstart", scope: !13297, file: !12555, line: 3145, type: !108)
!13300 = !DILocation(line: 3148, column: 15, scope: !13297)
!13301 = !DILocation(line: 0, scope: !13297)
!13302 = !DILocation(line: 3151, column: 3, scope: !13297)
!13303 = !DILocation(line: 3154, column: 3, scope: !13297)
!13304 = !DILocation(line: 3154, column: 10, scope: !13297)
!13305 = !DILocation(line: 3154, column: 43, scope: !13297)
!13306 = !DILocation(line: 3156, column: 10, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13308, file: !12555, line: 3156, column: 9)
!13308 = distinct !DILexicalBlock(scope: !13297, file: !12555, line: 3155, column: 3)
!13309 = !DILocation(line: 3156, column: 24, scope: !13307)
!13310 = !DILocation(line: 3156, column: 37, scope: !13307)
!13311 = !DILocation(line: 3156, column: 9, scope: !13308)
!13312 = distinct !{!13312, !13303, !13313}
!13313 = !DILocation(line: 3160, column: 3, scope: !13297)
!13314 = !DILocation(line: 3163, column: 3, scope: !13297)
!13315 = !DILocation(line: 3166, column: 15, scope: !13297)
!13316 = !DILocation(line: 3169, column: 3, scope: !13297)
!13317 = !DILocation(line: 3172, column: 3, scope: !13297)
!13318 = !DILocation(line: 3172, column: 10, scope: !13297)
!13319 = !DILocation(line: 3172, column: 44, scope: !13297)
!13320 = !DILocation(line: 3174, column: 24, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !12555, line: 3174, column: 9)
!13322 = distinct !DILexicalBlock(scope: !13297, file: !12555, line: 3173, column: 3)
!13323 = !DILocation(line: 3174, column: 37, scope: !13321)
!13324 = !DILocation(line: 3174, column: 9, scope: !13322)
!13325 = distinct !{!13325, !13317, !13326}
!13326 = !DILocation(line: 3178, column: 3, scope: !13297)
!13327 = !DILocation(line: 3184, column: 3, scope: !13297)
!13328 = !DILocation(line: 3187, column: 3, scope: !13297)
!13329 = !DILocation(line: 3187, column: 10, scope: !13297)
!13330 = !DILocation(line: 3187, column: 43, scope: !13297)
!13331 = !DILocation(line: 3189, column: 24, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !12555, line: 3189, column: 9)
!13333 = distinct !DILexicalBlock(scope: !13297, file: !12555, line: 3188, column: 3)
!13334 = !DILocation(line: 3189, column: 37, scope: !13332)
!13335 = !DILocation(line: 3189, column: 9, scope: !13333)
!13336 = distinct !{!13336, !13328, !13337}
!13337 = !DILocation(line: 3193, column: 3, scope: !13297)
!13338 = !DILocation(line: 3199, column: 3, scope: !13297)
!13339 = !DILocation(line: 3202, column: 3, scope: !13297)
!13340 = !DILocation(line: 3202, column: 10, scope: !13297)
!13341 = !DILocation(line: 3202, column: 43, scope: !13297)
!13342 = !DILocation(line: 3204, column: 24, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13344, file: !12555, line: 3204, column: 9)
!13344 = distinct !DILexicalBlock(scope: !13297, file: !12555, line: 3203, column: 3)
!13345 = !DILocation(line: 3204, column: 37, scope: !13343)
!13346 = !DILocation(line: 3204, column: 9, scope: !13344)
!13347 = distinct !{!13347, !13339, !13348}
!13348 = !DILocation(line: 3208, column: 3, scope: !13297)
!13349 = !DILocation(line: 3215, column: 3, scope: !13297)
!13350 = !DILocation(line: 3218, column: 3, scope: !13297)
!13351 = !DILocation(line: 3218, column: 10, scope: !13297)
!13352 = !DILocation(line: 3218, column: 46, scope: !13297)
!13353 = !DILocation(line: 3220, column: 24, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !12555, line: 3220, column: 9)
!13355 = distinct !DILexicalBlock(scope: !13297, file: !12555, line: 3219, column: 3)
!13356 = !DILocation(line: 3220, column: 37, scope: !13354)
!13357 = !DILocation(line: 3220, column: 9, scope: !13355)
!13358 = distinct !{!13358, !13350, !13359}
!13359 = !DILocation(line: 3224, column: 3, scope: !13297)
!13360 = !DILocation(line: 3232, column: 3, scope: !13297)
!13361 = !DILocation(line: 3235, column: 3, scope: !13297)
!13362 = !DILocation(line: 3235, column: 10, scope: !13297)
!13363 = !DILocation(line: 3235, column: 46, scope: !13297)
!13364 = !DILocation(line: 3237, column: 10, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13366, file: !12555, line: 3237, column: 9)
!13366 = distinct !DILexicalBlock(scope: !13297, file: !12555, line: 3236, column: 3)
!13367 = !DILocation(line: 3237, column: 24, scope: !13365)
!13368 = !DILocation(line: 3237, column: 37, scope: !13365)
!13369 = !DILocation(line: 3237, column: 9, scope: !13366)
!13370 = distinct !{!13370, !13361, !13371}
!13371 = !DILocation(line: 3241, column: 3, scope: !13297)
!13372 = !DILocation(line: 3247, column: 16, scope: !13297)
!13373 = !DILocation(line: 3257, column: 19, scope: !13297)
!13374 = !DILocation(line: 3270, column: 19, scope: !13297)
!13375 = !DILocation(line: 3274, column: 3, scope: !13297)
!13376 = !DILocation(line: 3277, column: 3, scope: !13297)
!13377 = !DILocation(line: 3281, column: 3, scope: !13297)
!13378 = !DILocation(line: 3285, column: 3, scope: !13297)
!13379 = !DILocation(line: 3288, column: 3, scope: !13297)
!13380 = !DILocation(line: 3292, column: 3, scope: !13297)
!13381 = !DILocation(line: 3296, column: 3, scope: !13297)
!13382 = !DILocation(line: 3299, column: 3, scope: !13297)
!13383 = !DILocation(line: 3302, column: 19, scope: !13297)
!13384 = !DILocation(line: 3305, column: 19, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13297, file: !12555, line: 3305, column: 6)
!13386 = !DILocation(line: 3305, column: 6, scope: !13385)
!13387 = !DILocation(line: 3305, column: 31, scope: !13385)
!13388 = !DILocation(line: 0, scope: !13385)
!13389 = !DILocation(line: 3313, column: 1, scope: !13297)
!13390 = !DISubprogram(name: "HAL_InitTick", scope: !12930, file: !12930, line: 223, type: !13391, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!13391 = !DISubroutineType(types: !13392)
!13392 = !{!12558, !108}
!13393 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12555, file: !12555, line: 3333, type: !13394, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13418)
!13394 = !DISubroutineType(types: !13395)
!13395 = !{!12558, !13396}
!13396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13397, size: 32)
!13397 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13398, line: 70, baseType: !13399)
!13398 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13398, line: 49, size: 416, elements: !13400)
!13400 = !{!13401, !13402, !13403, !13404, !13405, !13406, !13407}
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13399, file: !13398, line: 51, baseType: !108, size: 32)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13399, file: !13398, line: 54, baseType: !108, size: 32, offset: 32)
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13399, file: !13398, line: 57, baseType: !108, size: 32, offset: 64)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13399, file: !13398, line: 60, baseType: !108, size: 32, offset: 96)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13399, file: !13398, line: 63, baseType: !108, size: 32, offset: 128)
!13406 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13399, file: !13398, line: 66, baseType: !108, size: 32, offset: 160)
!13407 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13399, file: !13398, line: 69, baseType: !13408, size: 224, offset: 192)
!13408 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12561, line: 73, baseType: !13409)
!13409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12561, line: 45, size: 224, elements: !13410)
!13410 = !{!13411, !13412, !13413, !13414, !13415, !13416, !13417}
!13411 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13409, file: !12561, line: 47, baseType: !108, size: 32)
!13412 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13409, file: !12561, line: 50, baseType: !108, size: 32, offset: 32)
!13413 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13409, file: !12561, line: 53, baseType: !108, size: 32, offset: 64)
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13409, file: !12561, line: 56, baseType: !108, size: 32, offset: 96)
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13409, file: !12561, line: 60, baseType: !108, size: 32, offset: 128)
!13416 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13409, file: !12561, line: 63, baseType: !108, size: 32, offset: 160)
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13409, file: !12561, line: 68, baseType: !108, size: 32, offset: 192)
!13418 = !{!13419, !13420, !13421, !13422, !13426}
!13419 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13393, file: !12555, line: 3333, type: !13396)
!13420 = !DILocalVariable(name: "tickstart", scope: !13393, file: !12555, line: 3335, type: !108)
!13421 = !DILocalVariable(name: "pll_config", scope: !13393, file: !12555, line: 3335, type: !108)
!13422 = !DILocalVariable(name: "pwrclkchanged", scope: !13423, file: !12555, line: 3517, type: !13425)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !12555, line: 3516, column: 3)
!13424 = distinct !DILexicalBlock(scope: !13393, file: !12555, line: 3515, column: 6)
!13425 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !963, line: 188, baseType: !3135)
!13426 = !DILocalVariable(name: "tmpreg", scope: !13427, file: !12555, line: 3526, type: !431)
!13427 = distinct !DILexicalBlock(scope: !13428, file: !12555, line: 3526, column: 7)
!13428 = distinct !DILexicalBlock(scope: !13429, file: !12555, line: 3525, column: 5)
!13429 = distinct !DILexicalBlock(scope: !13423, file: !12555, line: 3524, column: 8)
!13430 = !DILocation(line: 0, scope: !13393)
!13431 = !DILocation(line: 3338, column: 24, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13393, file: !12555, line: 3338, column: 6)
!13433 = !DILocation(line: 3338, column: 6, scope: !13393)
!13434 = !DILocation(line: 3346, column: 27, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13393, file: !12555, line: 3346, column: 6)
!13436 = !DILocation(line: 3346, column: 43, scope: !13435)
!13437 = !DILocation(line: 3346, column: 69, scope: !13435)
!13438 = !DILocation(line: 3346, column: 6, scope: !13393)
!13439 = !DILocation(line: 3352, column: 9, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13441, file: !12555, line: 3352, column: 8)
!13441 = distinct !DILexicalBlock(scope: !13435, file: !12555, line: 3347, column: 3)
!13442 = !DILocation(line: 3352, column: 39, scope: !13440)
!13443 = !DILocation(line: 3352, column: 128, scope: !13440)
!13444 = !DILocation(line: 3353, column: 9, scope: !13440)
!13445 = !DILocation(line: 3353, column: 39, scope: !13440)
!13446 = !DILocation(line: 3353, column: 60, scope: !13440)
!13447 = !DILocation(line: 3353, column: 70, scope: !13440)
!13448 = !DILocation(line: 3353, column: 78, scope: !13440)
!13449 = !DILocation(line: 3353, column: 100, scope: !13440)
!13450 = !DILocation(line: 3353, column: 128, scope: !13440)
!13451 = !DILocation(line: 3354, column: 9, scope: !13440)
!13452 = !DILocation(line: 3354, column: 39, scope: !13440)
!13453 = !DILocation(line: 3354, column: 61, scope: !13440)
!13454 = !DILocation(line: 3354, column: 71, scope: !13440)
!13455 = !DILocation(line: 3354, column: 79, scope: !13440)
!13456 = !DILocation(line: 3354, column: 101, scope: !13440)
!13457 = !DILocation(line: 3352, column: 8, scope: !13441)
!13458 = !DILocation(line: 3360, column: 11, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !12555, line: 3360, column: 10)
!13460 = distinct !DILexicalBlock(scope: !13440, file: !12555, line: 3359, column: 5)
!13461 = !DILocation(line: 3360, column: 57, scope: !13459)
!13462 = !DILocation(line: 3360, column: 80, scope: !13459)
!13463 = !DILocation(line: 3360, column: 89, scope: !13459)
!13464 = !DILocation(line: 3360, column: 10, scope: !13460)
!13465 = !DILocation(line: 3368, column: 7, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13467, file: !12555, line: 3368, column: 7)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !12555, line: 3368, column: 7)
!13468 = distinct !DILexicalBlock(scope: !13440, file: !12555, line: 3366, column: 5)
!13469 = !DILocation(line: 3368, column: 7, scope: !13467)
!13470 = !DILocation(line: 3368, column: 7, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13466, file: !12555, line: 3368, column: 7)
!13472 = !DILocation(line: 3368, column: 7, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !12555, line: 3368, column: 7)
!13474 = distinct !DILexicalBlock(scope: !13466, file: !12555, line: 3368, column: 7)
!13475 = !DILocation(line: 3368, column: 7, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13474, file: !12555, line: 3368, column: 7)
!13477 = !DILocation(line: 0, scope: !13466)
!13478 = !DILocation(line: 3371, column: 30, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13468, file: !12555, line: 3371, column: 10)
!13480 = !DILocation(line: 3371, column: 40, scope: !13479)
!13481 = !DILocation(line: 0, scope: !13479)
!13482 = !DILocation(line: 3371, column: 10, scope: !13468)
!13483 = !DILocation(line: 3377, column: 15, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13479, file: !12555, line: 3372, column: 7)
!13485 = !DILocation(line: 3377, column: 51, scope: !13484)
!13486 = !DILocation(line: 3377, column: 9, scope: !13484)
!13487 = !DILocation(line: 3379, column: 15, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !12555, line: 3379, column: 14)
!13489 = distinct !DILexicalBlock(scope: !13484, file: !12555, line: 3378, column: 9)
!13490 = !DILocation(line: 3379, column: 29, scope: !13488)
!13491 = !DILocation(line: 3379, column: 43, scope: !13488)
!13492 = !DILocation(line: 3379, column: 14, scope: !13489)
!13493 = distinct !{!13493, !13486, !13494}
!13494 = !DILocation(line: 3383, column: 9, scope: !13484)
!13495 = !DILocation(line: 3391, column: 15, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13479, file: !12555, line: 3386, column: 7)
!13497 = !DILocation(line: 3391, column: 9, scope: !13496)
!13498 = !DILocation(line: 3393, column: 15, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13500, file: !12555, line: 3393, column: 14)
!13500 = distinct !DILexicalBlock(scope: !13496, file: !12555, line: 3392, column: 9)
!13501 = !DILocation(line: 3393, column: 29, scope: !13499)
!13502 = !DILocation(line: 3393, column: 43, scope: !13499)
!13503 = !DILocation(line: 3393, column: 14, scope: !13500)
!13504 = distinct !{!13504, !13497, !13505}
!13505 = !DILocation(line: 3397, column: 9, scope: !13496)
!13506 = !DILocation(line: 3402, column: 27, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13393, file: !12555, line: 3402, column: 6)
!13508 = !DILocation(line: 3402, column: 43, scope: !13507)
!13509 = !DILocation(line: 3402, column: 69, scope: !13507)
!13510 = !DILocation(line: 3402, column: 6, scope: !13393)
!13511 = !DILocation(line: 3410, column: 9, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13513, file: !12555, line: 3410, column: 8)
!13513 = distinct !DILexicalBlock(scope: !13507, file: !12555, line: 3403, column: 3)
!13514 = !DILocation(line: 3410, column: 39, scope: !13512)
!13515 = !DILocation(line: 3410, column: 128, scope: !13512)
!13516 = !DILocation(line: 3411, column: 9, scope: !13512)
!13517 = !DILocation(line: 3411, column: 39, scope: !13512)
!13518 = !DILocation(line: 3411, column: 60, scope: !13512)
!13519 = !DILocation(line: 3411, column: 70, scope: !13512)
!13520 = !DILocation(line: 3411, column: 78, scope: !13512)
!13521 = !DILocation(line: 3411, column: 100, scope: !13512)
!13522 = !DILocation(line: 3411, column: 128, scope: !13512)
!13523 = !DILocation(line: 3412, column: 9, scope: !13512)
!13524 = !DILocation(line: 3412, column: 39, scope: !13512)
!13525 = !DILocation(line: 3412, column: 61, scope: !13512)
!13526 = !DILocation(line: 3412, column: 71, scope: !13512)
!13527 = !DILocation(line: 3412, column: 79, scope: !13512)
!13528 = !DILocation(line: 3412, column: 101, scope: !13512)
!13529 = !DILocation(line: 3410, column: 8, scope: !13513)
!13530 = !DILocation(line: 3419, column: 11, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13532, file: !12555, line: 3419, column: 10)
!13532 = distinct !DILexicalBlock(scope: !13512, file: !12555, line: 3417, column: 5)
!13533 = !DILocation(line: 3419, column: 57, scope: !13531)
!13534 = !DILocation(line: 3419, column: 80, scope: !13531)
!13535 = !DILocation(line: 3419, column: 89, scope: !13531)
!13536 = !DILocation(line: 3419, column: 10, scope: !13532)
!13537 = !DILocation(line: 3433, column: 30, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !12555, line: 3433, column: 10)
!13539 = distinct !DILexicalBlock(scope: !13512, file: !12555, line: 3431, column: 5)
!13540 = !DILocation(line: 3433, column: 39, scope: !13538)
!13541 = !DILocation(line: 3433, column: 10, scope: !13539)
!13542 = !DILocation(line: 3436, column: 9, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13538, file: !12555, line: 3434, column: 7)
!13544 = !DILocation(line: 3439, column: 21, scope: !13543)
!13545 = !DILocation(line: 3442, column: 9, scope: !13543)
!13546 = !DILocation(line: 3442, column: 15, scope: !13543)
!13547 = !DILocation(line: 3442, column: 51, scope: !13543)
!13548 = !DILocation(line: 3444, column: 15, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !12555, line: 3444, column: 14)
!13550 = distinct !DILexicalBlock(scope: !13543, file: !12555, line: 3443, column: 9)
!13551 = !DILocation(line: 3444, column: 29, scope: !13549)
!13552 = !DILocation(line: 3444, column: 43, scope: !13549)
!13553 = !DILocation(line: 3444, column: 14, scope: !13550)
!13554 = distinct !{!13554, !13545, !13555}
!13555 = !DILocation(line: 3448, column: 9, scope: !13543)
!13556 = !DILocation(line: 3456, column: 9, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13538, file: !12555, line: 3454, column: 7)
!13558 = !DILocation(line: 3459, column: 21, scope: !13557)
!13559 = !DILocation(line: 3462, column: 9, scope: !13557)
!13560 = !DILocation(line: 3462, column: 15, scope: !13557)
!13561 = !DILocation(line: 3464, column: 15, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13563, file: !12555, line: 3464, column: 14)
!13563 = distinct !DILexicalBlock(scope: !13557, file: !12555, line: 3463, column: 9)
!13564 = !DILocation(line: 3464, column: 29, scope: !13562)
!13565 = !DILocation(line: 3464, column: 43, scope: !13562)
!13566 = !DILocation(line: 3464, column: 14, scope: !13563)
!13567 = distinct !{!13567, !13559, !13568}
!13568 = !DILocation(line: 3468, column: 9, scope: !13557)
!13569 = !DILocation(line: 0, scope: !13512)
!13570 = !DILocation(line: 3473, column: 27, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13393, file: !12555, line: 3473, column: 6)
!13572 = !DILocation(line: 3473, column: 43, scope: !13571)
!13573 = !DILocation(line: 3473, column: 69, scope: !13571)
!13574 = !DILocation(line: 3473, column: 6, scope: !13393)
!13575 = !DILocation(line: 3479, column: 28, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13577, file: !12555, line: 3479, column: 8)
!13577 = distinct !DILexicalBlock(scope: !13571, file: !12555, line: 3474, column: 3)
!13578 = !DILocation(line: 3479, column: 37, scope: !13576)
!13579 = !DILocation(line: 3479, column: 8, scope: !13577)
!13580 = !DILocation(line: 3482, column: 7, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13576, file: !12555, line: 3480, column: 5)
!13582 = !DILocation(line: 3485, column: 19, scope: !13581)
!13583 = !DILocation(line: 3488, column: 7, scope: !13581)
!13584 = !DILocation(line: 3488, column: 13, scope: !13581)
!13585 = !DILocation(line: 3488, column: 49, scope: !13581)
!13586 = !DILocation(line: 3490, column: 13, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !12555, line: 3490, column: 12)
!13588 = distinct !DILexicalBlock(scope: !13581, file: !12555, line: 3489, column: 7)
!13589 = !DILocation(line: 3490, column: 27, scope: !13587)
!13590 = !DILocation(line: 3490, column: 41, scope: !13587)
!13591 = !DILocation(line: 3490, column: 12, scope: !13588)
!13592 = distinct !{!13592, !13583, !13593}
!13593 = !DILocation(line: 3494, column: 7, scope: !13581)
!13594 = !DILocation(line: 3499, column: 7, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13576, file: !12555, line: 3497, column: 5)
!13596 = !DILocation(line: 3502, column: 19, scope: !13595)
!13597 = !DILocation(line: 3505, column: 7, scope: !13595)
!13598 = !DILocation(line: 3505, column: 13, scope: !13595)
!13599 = !DILocation(line: 3507, column: 13, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !12555, line: 3507, column: 12)
!13601 = distinct !DILexicalBlock(scope: !13595, file: !12555, line: 3506, column: 7)
!13602 = !DILocation(line: 3507, column: 27, scope: !13600)
!13603 = !DILocation(line: 3507, column: 41, scope: !13600)
!13604 = !DILocation(line: 3507, column: 12, scope: !13601)
!13605 = distinct !{!13605, !13597, !13606}
!13606 = !DILocation(line: 3511, column: 7, scope: !13595)
!13607 = !DILocation(line: 3515, column: 27, scope: !13424)
!13608 = !DILocation(line: 3515, column: 43, scope: !13424)
!13609 = !DILocation(line: 3515, column: 69, scope: !13424)
!13610 = !DILocation(line: 3515, column: 6, scope: !13393)
!13611 = !DILocation(line: 0, scope: !13423)
!13612 = !DILocation(line: 3524, column: 8, scope: !13429)
!13613 = !DILocation(line: 3524, column: 8, scope: !13423)
!13614 = !DILocation(line: 3526, column: 7, scope: !13427)
!13615 = !DILocation(line: 3526, column: 7, scope: !13428)
!13616 = !DILocation(line: 3528, column: 5, scope: !13428)
!13617 = !DILocation(line: 3530, column: 8, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13423, file: !12555, line: 3530, column: 8)
!13619 = !DILocation(line: 3530, column: 8, scope: !13423)
!13620 = !DILocation(line: 3533, column: 7, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13618, file: !12555, line: 3531, column: 5)
!13622 = !DILocation(line: 3536, column: 19, scope: !13621)
!13623 = !DILocation(line: 3538, column: 7, scope: !13621)
!13624 = !DILocation(line: 3538, column: 13, scope: !13621)
!13625 = !DILocation(line: 3540, column: 13, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13627, file: !12555, line: 3540, column: 12)
!13627 = distinct !DILexicalBlock(scope: !13621, file: !12555, line: 3539, column: 7)
!13628 = !DILocation(line: 3540, column: 27, scope: !13626)
!13629 = !DILocation(line: 3540, column: 40, scope: !13626)
!13630 = !DILocation(line: 3540, column: 12, scope: !13627)
!13631 = distinct !{!13631, !13623, !13632}
!13632 = !DILocation(line: 3544, column: 7, scope: !13621)
!13633 = !DILocation(line: 3548, column: 5, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13635, file: !12555, line: 3548, column: 5)
!13635 = distinct !DILexicalBlock(scope: !13423, file: !12555, line: 3548, column: 5)
!13636 = !DILocation(line: 3548, column: 5, scope: !13635)
!13637 = !DILocation(line: 3548, column: 5, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13634, file: !12555, line: 3548, column: 5)
!13639 = !DILocation(line: 3548, column: 5, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13641, file: !12555, line: 3548, column: 5)
!13641 = distinct !DILexicalBlock(scope: !13634, file: !12555, line: 3548, column: 5)
!13642 = !DILocation(line: 3548, column: 5, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13641, file: !12555, line: 3548, column: 5)
!13644 = !DILocation(line: 0, scope: !13634)
!13645 = !DILocation(line: 3550, column: 28, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13423, file: !12555, line: 3550, column: 8)
!13647 = !DILocation(line: 3550, column: 38, scope: !13646)
!13648 = !DILocation(line: 0, scope: !13646)
!13649 = !DILocation(line: 3550, column: 8, scope: !13423)
!13650 = !DILocation(line: 3556, column: 13, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13646, file: !12555, line: 3551, column: 5)
!13652 = !DILocation(line: 3556, column: 49, scope: !13651)
!13653 = !DILocation(line: 3556, column: 7, scope: !13651)
!13654 = !DILocation(line: 3558, column: 13, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13656, file: !12555, line: 3558, column: 12)
!13656 = distinct !DILexicalBlock(scope: !13651, file: !12555, line: 3557, column: 7)
!13657 = !DILocation(line: 3558, column: 27, scope: !13655)
!13658 = !DILocation(line: 3558, column: 41, scope: !13655)
!13659 = !DILocation(line: 3558, column: 12, scope: !13656)
!13660 = distinct !{!13660, !13653, !13661}
!13661 = !DILocation(line: 3562, column: 7, scope: !13651)
!13662 = !DILocation(line: 3570, column: 13, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13646, file: !12555, line: 3565, column: 5)
!13664 = !DILocation(line: 3570, column: 7, scope: !13663)
!13665 = !DILocation(line: 3572, column: 13, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !12555, line: 3572, column: 12)
!13667 = distinct !DILexicalBlock(scope: !13663, file: !12555, line: 3571, column: 7)
!13668 = !DILocation(line: 3572, column: 27, scope: !13666)
!13669 = !DILocation(line: 3572, column: 41, scope: !13666)
!13670 = !DILocation(line: 3572, column: 12, scope: !13667)
!13671 = distinct !{!13671, !13664, !13672}
!13672 = !DILocation(line: 3576, column: 7, scope: !13663)
!13673 = !DILocation(line: 3580, column: 8, scope: !13423)
!13674 = !DILocation(line: 3582, column: 7, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13676, file: !12555, line: 3581, column: 5)
!13676 = distinct !DILexicalBlock(scope: !13423, file: !12555, line: 3580, column: 8)
!13677 = !DILocation(line: 3583, column: 5, scope: !13675)
!13678 = !DILocation(line: 3588, column: 31, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13393, file: !12555, line: 3588, column: 7)
!13680 = !DILocation(line: 3588, column: 41, scope: !13679)
!13681 = !DILocation(line: 3588, column: 7, scope: !13393)
!13682 = !DILocation(line: 3591, column: 8, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !12555, line: 3591, column: 8)
!13684 = distinct !DILexicalBlock(scope: !13679, file: !12555, line: 3589, column: 3)
!13685 = !DILocation(line: 3591, column: 38, scope: !13683)
!13686 = !DILocation(line: 3591, column: 8, scope: !13684)
!13687 = !DILocation(line: 3593, column: 44, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !12555, line: 3593, column: 10)
!13689 = distinct !DILexicalBlock(scope: !13683, file: !12555, line: 3592, column: 5)
!13690 = !DILocation(line: 0, scope: !13688)
!13691 = !DILocation(line: 3593, column: 10, scope: !13689)
!13692 = !DILocation(line: 3610, column: 15, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13688, file: !12555, line: 3594, column: 7)
!13694 = !DILocation(line: 3610, column: 9, scope: !13693)
!13695 = !DILocation(line: 3612, column: 15, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13697, file: !12555, line: 3612, column: 14)
!13697 = distinct !DILexicalBlock(scope: !13693, file: !12555, line: 3611, column: 9)
!13698 = !DILocation(line: 3612, column: 29, scope: !13696)
!13699 = !DILocation(line: 3612, column: 43, scope: !13696)
!13700 = !DILocation(line: 3612, column: 14, scope: !13697)
!13701 = distinct !{!13701, !13694, !13702}
!13702 = !DILocation(line: 3616, column: 9, scope: !13693)
!13703 = !DILocation(line: 3619, column: 9, scope: !13693)
!13704 = !DILocation(line: 3626, column: 9, scope: !13693)
!13705 = !DILocation(line: 3629, column: 21, scope: !13693)
!13706 = !DILocation(line: 3632, column: 9, scope: !13693)
!13707 = !DILocation(line: 3632, column: 15, scope: !13693)
!13708 = !DILocation(line: 3632, column: 51, scope: !13693)
!13709 = !DILocation(line: 3634, column: 15, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13711, file: !12555, line: 3634, column: 14)
!13711 = distinct !DILexicalBlock(scope: !13693, file: !12555, line: 3633, column: 9)
!13712 = !DILocation(line: 3634, column: 29, scope: !13710)
!13713 = !DILocation(line: 3634, column: 43, scope: !13710)
!13714 = !DILocation(line: 3634, column: 14, scope: !13711)
!13715 = distinct !{!13715, !13706, !13716}
!13716 = !DILocation(line: 3638, column: 9, scope: !13693)
!13717 = !DILocation(line: 3649, column: 15, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13688, file: !12555, line: 3641, column: 7)
!13719 = !DILocation(line: 3649, column: 9, scope: !13718)
!13720 = !DILocation(line: 3651, column: 15, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13722, file: !12555, line: 3651, column: 14)
!13722 = distinct !DILexicalBlock(scope: !13718, file: !12555, line: 3650, column: 9)
!13723 = !DILocation(line: 3651, column: 29, scope: !13721)
!13724 = !DILocation(line: 3651, column: 43, scope: !13721)
!13725 = !DILocation(line: 3651, column: 14, scope: !13722)
!13726 = distinct !{!13726, !13719, !13727}
!13727 = !DILocation(line: 3655, column: 9, scope: !13718)
!13728 = !DILocation(line: 3661, column: 44, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13730, file: !12555, line: 3661, column: 10)
!13730 = distinct !DILexicalBlock(scope: !13683, file: !12555, line: 3659, column: 5)
!13731 = !DILocation(line: 3661, column: 10, scope: !13730)
!13732 = !DILocation(line: 3668, column: 27, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13729, file: !12555, line: 3666, column: 7)
!13734 = !DILocation(line: 3671, column: 14, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13733, file: !12555, line: 3670, column: 13)
!13736 = !DILocation(line: 3671, column: 81, scope: !13735)
!13737 = !DILocation(line: 3671, column: 55, scope: !13735)
!13738 = !DILocation(line: 3671, column: 92, scope: !13735)
!13739 = !DILocation(line: 3672, column: 14, scope: !13735)
!13740 = !DILocation(line: 3672, column: 80, scope: !13735)
!13741 = !DILocation(line: 3672, column: 53, scope: !13735)
!13742 = !DILocation(line: 3672, column: 111, scope: !13735)
!13743 = !DILocation(line: 3673, column: 14, scope: !13735)
!13744 = !DILocation(line: 3673, column: 80, scope: !13735)
!13745 = !DILocation(line: 3673, column: 86, scope: !13735)
!13746 = !DILocation(line: 3673, column: 53, scope: !13735)
!13747 = !DILocation(line: 3673, column: 111, scope: !13735)
!13748 = !DILocation(line: 3674, column: 14, scope: !13735)
!13749 = !DILocation(line: 3674, column: 82, scope: !13735)
!13750 = !DILocation(line: 3674, column: 101, scope: !13735)
!13751 = !DILocation(line: 3674, column: 53, scope: !13735)
!13752 = !DILocation(line: 3674, column: 126, scope: !13735)
!13753 = !DILocation(line: 3675, column: 14, scope: !13735)
!13754 = !DILocation(line: 3675, column: 80, scope: !13735)
!13755 = !DILocation(line: 3675, column: 85, scope: !13735)
!13756 = !DILocation(line: 3675, column: 53, scope: !13735)
!13757 = !DILocation(line: 3675, column: 111, scope: !13735)
!13758 = !DILocation(line: 3676, column: 14, scope: !13735)
!13759 = !DILocation(line: 3676, column: 80, scope: !13735)
!13760 = !DILocation(line: 3676, column: 85, scope: !13735)
!13761 = !DILocation(line: 3676, column: 53, scope: !13735)
!13762 = !DILocation(line: 3670, column: 13, scope: !13733)
!13763 = !DILocation(line: 3691, column: 3, scope: !13393)
!13764 = !DILocation(line: 3692, column: 1, scope: !13393)
!13765 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12555, file: !12555, line: 3703, type: !13766, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13768)
!13766 = !DISubroutineType(types: !13767)
!13767 = !{null, !13396}
!13768 = !{!13769}
!13769 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13765, file: !12555, line: 3703, type: !13396)
!13770 = !DILocation(line: 0, scope: !13765)
!13771 = !DILocation(line: 3706, column: 22, scope: !13765)
!13772 = !DILocation(line: 3706, column: 37, scope: !13765)
!13773 = !DILocation(line: 3709, column: 12, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13765, file: !12555, line: 3709, column: 6)
!13775 = !DILocation(line: 3709, column: 15, scope: !13774)
!13776 = !DILocation(line: 3709, column: 31, scope: !13774)
!13777 = !DILocation(line: 3709, column: 6, scope: !13765)
!13778 = !DILocation(line: 3711, column: 24, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13774, file: !12555, line: 3710, column: 3)
!13780 = !DILocation(line: 3711, column: 33, scope: !13779)
!13781 = !DILocation(line: 3712, column: 3, scope: !13779)
!13782 = !DILocation(line: 3713, column: 17, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13774, file: !12555, line: 3713, column: 11)
!13784 = !DILocation(line: 3713, column: 20, scope: !13783)
!13785 = !DILocation(line: 3713, column: 35, scope: !13783)
!13786 = !DILocation(line: 0, scope: !13783)
!13787 = !DILocation(line: 3713, column: 11, scope: !13774)
!13788 = !DILocation(line: 3715, column: 33, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13783, file: !12555, line: 3714, column: 3)
!13790 = !DILocation(line: 3716, column: 3, scope: !13789)
!13791 = !DILocation(line: 3719, column: 33, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13783, file: !12555, line: 3718, column: 3)
!13793 = !DILocation(line: 3723, column: 12, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13765, file: !12555, line: 3723, column: 6)
!13795 = !DILocation(line: 3723, column: 15, scope: !13794)
!13796 = !DILocation(line: 3729, column: 24, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13794, file: !12555, line: 3728, column: 3)
!13798 = !DILocation(line: 3729, column: 33, scope: !13797)
!13799 = !DILocation(line: 3732, column: 61, scope: !13765)
!13800 = !DILocation(line: 3732, column: 81, scope: !13765)
!13801 = !DILocation(line: 3732, column: 22, scope: !13765)
!13802 = !DILocation(line: 3732, column: 42, scope: !13765)
!13803 = !DILocation(line: 3735, column: 12, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13765, file: !12555, line: 3735, column: 6)
!13805 = !DILocation(line: 3735, column: 17, scope: !13804)
!13806 = !DILocation(line: 3735, column: 35, scope: !13804)
!13807 = !DILocation(line: 3735, column: 6, scope: !13765)
!13808 = !DILocation(line: 3737, column: 24, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13804, file: !12555, line: 3736, column: 3)
!13810 = !DILocation(line: 3737, column: 33, scope: !13809)
!13811 = !DILocation(line: 3738, column: 3, scope: !13809)
!13812 = !DILocation(line: 3739, column: 17, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13804, file: !12555, line: 3739, column: 11)
!13814 = !DILocation(line: 3739, column: 22, scope: !13813)
!13815 = !DILocation(line: 3739, column: 39, scope: !13813)
!13816 = !DILocation(line: 0, scope: !13813)
!13817 = !DILocation(line: 3739, column: 11, scope: !13804)
!13818 = !DILocation(line: 3741, column: 33, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13813, file: !12555, line: 3740, column: 3)
!13820 = !DILocation(line: 3742, column: 3, scope: !13819)
!13821 = !DILocation(line: 3745, column: 33, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13813, file: !12555, line: 3744, column: 3)
!13823 = !DILocation(line: 3749, column: 12, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13765, file: !12555, line: 3749, column: 6)
!13825 = !DILocation(line: 3749, column: 16, scope: !13824)
!13826 = !DILocation(line: 3755, column: 24, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13824, file: !12555, line: 3754, column: 3)
!13828 = !DILocation(line: 3755, column: 33, scope: !13827)
!13829 = !DILocation(line: 3759, column: 12, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13765, file: !12555, line: 3759, column: 6)
!13831 = !DILocation(line: 3759, column: 15, scope: !13830)
!13832 = !DILocation(line: 3759, column: 30, scope: !13830)
!13833 = !DILocation(line: 3759, column: 6, scope: !13765)
!13834 = !DILocation(line: 3765, column: 28, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13830, file: !12555, line: 3764, column: 3)
!13836 = !DILocation(line: 3765, column: 37, scope: !13835)
!13837 = !DILocation(line: 3767, column: 54, scope: !13765)
!13838 = !DILocation(line: 3767, column: 62, scope: !13765)
!13839 = !DILocation(line: 3767, column: 26, scope: !13765)
!13840 = !DILocation(line: 3767, column: 36, scope: !13765)
!13841 = !DILocation(line: 3768, column: 49, scope: !13765)
!13842 = !DILocation(line: 3768, column: 57, scope: !13765)
!13843 = !DILocation(line: 3768, column: 26, scope: !13765)
!13844 = !DILocation(line: 3768, column: 31, scope: !13765)
!13845 = !DILocation(line: 3769, column: 50, scope: !13765)
!13846 = !DILocation(line: 3769, column: 78, scope: !13765)
!13847 = !DILocation(line: 3769, column: 26, scope: !13765)
!13848 = !DILocation(line: 3769, column: 31, scope: !13765)
!13849 = !DILocation(line: 3770, column: 52, scope: !13765)
!13850 = !DILocation(line: 3770, column: 102, scope: !13765)
!13851 = !DILocation(line: 3770, column: 109, scope: !13765)
!13852 = !DILocation(line: 3770, column: 26, scope: !13765)
!13853 = !DILocation(line: 3770, column: 31, scope: !13765)
!13854 = !DILocation(line: 3771, column: 50, scope: !13765)
!13855 = !DILocation(line: 3771, column: 78, scope: !13765)
!13856 = !DILocation(line: 3771, column: 26, scope: !13765)
!13857 = !DILocation(line: 3771, column: 31, scope: !13765)
!13858 = !DILocation(line: 3772, column: 50, scope: !13765)
!13859 = !DILocation(line: 3772, column: 78, scope: !13765)
!13860 = !DILocation(line: 3772, column: 26, scope: !13765)
!13861 = !DILocation(line: 3772, column: 31, scope: !13765)
!13862 = !DILocation(line: 3773, column: 1, scope: !13765)
!13863 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13864, file: !13864, line: 257, type: !7530, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !13865)
!13864 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13865 = !{!13866}
!13866 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13863, file: !13864, line: 257, type: !108)
!13867 = !DILocation(line: 0, scope: !13863)
!13868 = !DILocation(line: 260, column: 3, scope: !13863)
!13869 = !DILocation(line: 261, column: 1, scope: !13863)
!13870 = distinct !DISubprogram(name: "LL_InitTick", scope: !13871, file: !13871, line: 260, type: !10952, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !13872)
!13871 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13872 = !{!13873, !13874}
!13873 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13870, file: !13871, line: 260, type: !108)
!13874 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13870, file: !13871, line: 260, type: !108)
!13875 = !DILocation(line: 0, scope: !13870)
!13876 = !DILocation(line: 263, column: 46, scope: !13870)
!13877 = !DILocation(line: 263, column: 55, scope: !13870)
!13878 = !DILocation(line: 263, column: 18, scope: !13870)
!13879 = !DILocation(line: 264, column: 18, scope: !13870)
!13880 = !DILocation(line: 265, column: 18, scope: !13870)
!13881 = !DILocation(line: 267, column: 1, scope: !13870)
!13882 = distinct !DISubprogram(name: "LL_mDelay", scope: !13864, file: !13864, line: 273, type: !7530, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !13883)
!13883 = !{!13884, !13885}
!13884 = !DILocalVariable(name: "Delay", arg: 1, scope: !13882, file: !13864, line: 273, type: !108)
!13885 = !DILocalVariable(name: "tmp", scope: !13882, file: !13864, line: 275, type: !431)
!13886 = !DILocation(line: 0, scope: !13882)
!13887 = !DILocation(line: 275, column: 3, scope: !13882)
!13888 = !DILocation(line: 275, column: 18, scope: !13882)
!13889 = !DILocation(line: 275, column: 33, scope: !13882)
!13890 = !DILocation(line: 277, column: 10, scope: !13882)
!13891 = !DILocation(line: 280, column: 12, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13882, file: !13864, line: 280, column: 6)
!13893 = !DILocation(line: 285, column: 3, scope: !13882)
!13894 = !DILocation(line: 287, column: 18, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13896, file: !13864, line: 287, column: 8)
!13896 = distinct !DILexicalBlock(scope: !13882, file: !13864, line: 286, column: 3)
!13897 = !DILocation(line: 292, column: 1, scope: !13882)
!13898 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13864, file: !13864, line: 323, type: !7530, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !13899)
!13899 = !{!13900}
!13900 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13898, file: !13864, line: 323, type: !108)
!13901 = !DILocation(line: 0, scope: !13898)
!13902 = !DILocation(line: 326, column: 19, scope: !13898)
!13903 = !DILocation(line: 327, column: 1, scope: !13898)
!13904 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13864, file: !13864, line: 338, type: !13905, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !13908)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{!13907, !108}
!13907 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !963, line: 201, baseType: !962)
!13908 = !{!13909, !13910, !13911, !13912, !13913}
!13909 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13904, file: !13864, line: 338, type: !108)
!13910 = !DILocalVariable(name: "timeout", scope: !13904, file: !13864, line: 340, type: !108)
!13911 = !DILocalVariable(name: "getlatency", scope: !13904, file: !13864, line: 341, type: !108)
!13912 = !DILocalVariable(name: "latency", scope: !13904, file: !13864, line: 342, type: !108)
!13913 = !DILocalVariable(name: "status", scope: !13904, file: !13864, line: 343, type: !13907)
!13914 = !DILocation(line: 0, scope: !13904)
!13915 = !DILocation(line: 347, column: 21, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13904, file: !13864, line: 347, column: 6)
!13917 = !DILocation(line: 347, column: 6, scope: !13904)
!13918 = !DILocation(line: 353, column: 8, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13920, file: !13864, line: 353, column: 8)
!13920 = distinct !DILexicalBlock(scope: !13916, file: !13864, line: 352, column: 3)
!13921 = !DILocation(line: 353, column: 40, scope: !13919)
!13922 = !DILocation(line: 353, column: 8, scope: !13920)
!13923 = !DILocation(line: 356, column: 26, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13925, file: !13864, line: 356, column: 10)
!13925 = distinct !DILexicalBlock(scope: !13919, file: !13864, line: 354, column: 5)
!13926 = !DILocation(line: 356, column: 55, scope: !13924)
!13927 = !DILocation(line: 362, column: 55, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13925, file: !13864, line: 362, column: 10)
!13929 = !DILocation(line: 368, column: 55, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13925, file: !13864, line: 368, column: 10)
!13931 = !DILocation(line: 374, column: 26, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13925, file: !13864, line: 374, column: 10)
!13933 = !DILocation(line: 374, column: 55, scope: !13932)
!13934 = !DILocation(line: 380, column: 28, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13936, file: !13864, line: 380, column: 12)
!13936 = distinct !DILexicalBlock(scope: !13932, file: !13864, line: 379, column: 7)
!13937 = !DILocation(line: 380, column: 57, scope: !13935)
!13938 = !DILocation(line: 387, column: 8, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13920, file: !13864, line: 387, column: 8)
!13940 = !DILocation(line: 387, column: 40, scope: !13939)
!13941 = !DILocation(line: 387, column: 8, scope: !13920)
!13942 = !DILocation(line: 390, column: 26, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13944, file: !13864, line: 390, column: 10)
!13944 = distinct !DILexicalBlock(scope: !13939, file: !13864, line: 388, column: 5)
!13945 = !DILocation(line: 390, column: 55, scope: !13943)
!13946 = !DILocation(line: 396, column: 26, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13944, file: !13864, line: 396, column: 10)
!13948 = !DILocation(line: 396, column: 55, scope: !13947)
!13949 = !DILocation(line: 402, column: 26, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13944, file: !13864, line: 402, column: 10)
!13951 = !DILocation(line: 402, column: 55, scope: !13950)
!13952 = !DILocation(line: 407, column: 26, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13944, file: !13864, line: 407, column: 10)
!13954 = !DILocation(line: 407, column: 55, scope: !13953)
!13955 = !DILocation(line: 413, column: 28, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13957, file: !13864, line: 413, column: 12)
!13957 = distinct !DILexicalBlock(scope: !13953, file: !13864, line: 412, column: 7)
!13958 = !DILocation(line: 413, column: 57, scope: !13956)
!13959 = !DILocation(line: 0, scope: !13920)
!13960 = !DILocation(line: 420, column: 8, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13920, file: !13864, line: 420, column: 8)
!13962 = !DILocation(line: 420, column: 40, scope: !13961)
!13963 = !DILocation(line: 420, column: 8, scope: !13920)
!13964 = !DILocation(line: 423, column: 26, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !13864, line: 423, column: 10)
!13966 = distinct !DILexicalBlock(scope: !13961, file: !13864, line: 421, column: 5)
!13967 = !DILocation(line: 423, column: 55, scope: !13965)
!13968 = !DILocation(line: 429, column: 26, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13966, file: !13864, line: 429, column: 10)
!13970 = !DILocation(line: 429, column: 55, scope: !13969)
!13971 = !DILocation(line: 435, column: 28, scope: !13972)
!13972 = distinct !DILexicalBlock(scope: !13973, file: !13864, line: 435, column: 12)
!13973 = distinct !DILexicalBlock(scope: !13969, file: !13864, line: 434, column: 7)
!13974 = !DILocation(line: 435, column: 57, scope: !13972)
!13975 = !DILocation(line: 444, column: 5, scope: !13920)
!13976 = !DILocation(line: 448, column: 5, scope: !13920)
!13977 = !DILocation(line: 451, column: 18, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13920, file: !13864, line: 449, column: 5)
!13979 = !DILocation(line: 452, column: 12, scope: !13978)
!13980 = !DILocation(line: 453, column: 26, scope: !13920)
!13981 = !DILocation(line: 453, column: 38, scope: !13920)
!13982 = !DILocation(line: 453, column: 5, scope: !13978)
!13983 = distinct !{!13983, !13976, !13984}
!13984 = !DILocation(line: 453, column: 54, scope: !13920)
!13985 = !DILocation(line: 0, scope: !13916)
!13986 = !DILocation(line: 464, column: 3, scope: !13904)
!13987 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13988, file: !13988, line: 519, type: !7520, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!13988 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13989 = !DILocation(line: 521, column: 21, scope: !13987)
!13990 = !DILocation(line: 521, column: 3, scope: !13987)
!13991 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7139, file: !7139, line: 1543, type: !7530, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !13992)
!13992 = !{!13993}
!13993 = !DILocalVariable(name: "Latency", arg: 1, scope: !13991, file: !7139, line: 1543, type: !108)
!13994 = !DILocation(line: 0, scope: !13991)
!13995 = !DILocation(line: 1545, column: 3, scope: !13991)
!13996 = !DILocation(line: 1546, column: 1, scope: !13991)
!13997 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7139, file: !7139, line: 1569, type: !7520, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!13998 = !DILocation(line: 1571, column: 21, scope: !13997)
!13999 = !DILocation(line: 1571, column: 3, scope: !13997)
!14000 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13864, file: !13864, line: 483, type: !14001, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14017)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!13907, !14003, !14010}
!14003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14004, size: 32)
!14004 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13871, line: 114, baseType: !14005)
!14005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13871, line: 94, size: 96, elements: !14006)
!14006 = !{!14007, !14008, !14009}
!14007 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14005, file: !13871, line: 96, baseType: !108, size: 32)
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14005, file: !13871, line: 102, baseType: !108, size: 32, offset: 32)
!14009 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14005, file: !13871, line: 109, baseType: !108, size: 32, offset: 64)
!14010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14011, size: 32)
!14011 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13871, line: 139, baseType: !14012)
!14012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13871, line: 119, size: 96, elements: !14013)
!14013 = !{!14014, !14015, !14016}
!14014 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14012, file: !13871, line: 121, baseType: !108, size: 32)
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14012, file: !13871, line: 127, baseType: !108, size: 32, offset: 32)
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14012, file: !13871, line: 133, baseType: !108, size: 32, offset: 64)
!14017 = !{!14018, !14019, !14020, !14021}
!14018 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14000, file: !13864, line: 483, type: !14003)
!14019 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14000, file: !13864, line: 484, type: !14010)
!14020 = !DILocalVariable(name: "status", scope: !14000, file: !13864, line: 486, type: !13907)
!14021 = !DILocalVariable(name: "pllfreq", scope: !14000, file: !13864, line: 487, type: !108)
!14022 = !DILocation(line: 0, scope: !14000)
!14023 = !DILocation(line: 490, column: 6, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14000, file: !13864, line: 490, column: 6)
!14025 = !DILocation(line: 490, column: 25, scope: !14024)
!14026 = !DILocation(line: 490, column: 6, scope: !14000)
!14027 = !DILocation(line: 493, column: 15, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14024, file: !13864, line: 491, column: 3)
!14029 = !DILocation(line: 496, column: 8, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14028, file: !13864, line: 496, column: 8)
!14031 = !DILocation(line: 496, column: 29, scope: !14030)
!14032 = !DILocation(line: 496, column: 8, scope: !14028)
!14033 = !DILocation(line: 498, column: 7, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14030, file: !13864, line: 497, column: 5)
!14035 = !DILocation(line: 499, column: 7, scope: !14034)
!14036 = !DILocation(line: 499, column: 14, scope: !14034)
!14037 = !DILocation(line: 499, column: 35, scope: !14034)
!14038 = distinct !{!14038, !14035, !14039}
!14039 = !DILocation(line: 502, column: 7, scope: !14034)
!14040 = !DILocation(line: 506, column: 76, scope: !14028)
!14041 = !DILocation(line: 506, column: 103, scope: !14028)
!14042 = !DILocation(line: 507, column: 54, scope: !14028)
!14043 = !DILocation(line: 506, column: 5, scope: !14028)
!14044 = !DILocation(line: 510, column: 14, scope: !14028)
!14045 = !DILocation(line: 511, column: 3, scope: !14028)
!14046 = !DILocation(line: 0, scope: !14024)
!14047 = !DILocation(line: 518, column: 3, scope: !14000)
!14048 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13864, file: !13864, line: 642, type: !14049, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14051)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{!13907}
!14051 = !{!14052}
!14052 = !DILocalVariable(name: "status", scope: !14048, file: !13864, line: 644, type: !13907)
!14053 = !DILocation(line: 0, scope: !14048)
!14054 = !DILocation(line: 647, column: 6, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14048, file: !13864, line: 647, column: 6)
!14056 = !DILocation(line: 647, column: 27, scope: !14055)
!14057 = !DILocation(line: 655, column: 6, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14048, file: !13864, line: 655, column: 6)
!14059 = !DILocation(line: 655, column: 30, scope: !14058)
!14060 = !DILocation(line: 663, column: 6, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14048, file: !13864, line: 663, column: 6)
!14062 = !DILocation(line: 663, column: 30, scope: !14061)
!14063 = !DILocation(line: 663, column: 6, scope: !14048)
!14064 = !DILocation(line: 669, column: 3, scope: !14048)
!14065 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13864, file: !13864, line: 611, type: !14066, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14068)
!14066 = !DISubroutineType(types: !14067)
!14067 = !{!108, !108, !14003}
!14068 = !{!14069, !14070, !14071}
!14069 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14065, file: !13864, line: 611, type: !108)
!14070 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14065, file: !13864, line: 611, type: !14003)
!14071 = !DILocalVariable(name: "pllfreq", scope: !14065, file: !13864, line: 613, type: !108)
!14072 = !DILocation(line: 0, scope: !14065)
!14073 = !DILocation(line: 622, column: 56, scope: !14065)
!14074 = !DILocation(line: 622, column: 61, scope: !14065)
!14075 = !DILocation(line: 622, column: 32, scope: !14065)
!14076 = !DILocation(line: 626, column: 45, scope: !14065)
!14077 = !DILocation(line: 626, column: 50, scope: !14065)
!14078 = !DILocation(line: 626, column: 21, scope: !14065)
!14079 = !DILocation(line: 630, column: 47, scope: !14065)
!14080 = !DILocation(line: 630, column: 82, scope: !14065)
!14081 = !DILocation(line: 630, column: 21, scope: !14065)
!14082 = !DILocation(line: 633, column: 3, scope: !14065)
!14083 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10291, file: !10291, line: 3007, type: !7520, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14084 = !DILocation(line: 3009, column: 11, scope: !14083)
!14085 = !DILocation(line: 3009, column: 44, scope: !14083)
!14086 = !DILocation(line: 3009, column: 3, scope: !14083)
!14087 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10291, file: !10291, line: 2987, type: !337, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14088 = !DILocation(line: 2989, column: 3, scope: !14087)
!14089 = !DILocation(line: 2990, column: 1, scope: !14087)
!14090 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10291, file: !10291, line: 4304, type: !10425, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14091)
!14091 = !{!14092, !14093, !14094, !14095}
!14092 = !DILocalVariable(name: "Source", arg: 1, scope: !14090, file: !10291, line: 4304, type: !108)
!14093 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14090, file: !10291, line: 4304, type: !108)
!14094 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14090, file: !10291, line: 4304, type: !108)
!14095 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14090, file: !10291, line: 4304, type: !108)
!14096 = !DILocation(line: 0, scope: !14090)
!14097 = !DILocation(line: 4306, column: 3, scope: !14090)
!14098 = !DILocation(line: 4308, column: 3, scope: !14090)
!14099 = !DILocation(line: 4310, column: 3, scope: !14090)
!14100 = !DILocation(line: 4312, column: 1, scope: !14090)
!14101 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13864, file: !13864, line: 681, type: !14102, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14104)
!14102 = !DISubroutineType(types: !14103)
!14103 = !{!13907, !108, !14010}
!14104 = !{!14105, !14106, !14107, !14108}
!14105 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14101, file: !13864, line: 681, type: !108)
!14106 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14101, file: !13864, line: 681, type: !14010)
!14107 = !DILocalVariable(name: "status", scope: !14101, file: !13864, line: 683, type: !13907)
!14108 = !DILocalVariable(name: "hclk_frequency", scope: !14101, file: !13864, line: 684, type: !108)
!14109 = !DILocation(line: 0, scope: !14101)
!14110 = !DILocation(line: 691, column: 20, scope: !14101)
!14111 = !DILocation(line: 694, column: 6, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14101, file: !13864, line: 694, column: 6)
!14113 = !DILocation(line: 694, column: 22, scope: !14112)
!14114 = !DILocation(line: 694, column: 6, scope: !14101)
!14115 = !DILocation(line: 697, column: 14, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14112, file: !13864, line: 695, column: 3)
!14117 = !DILocation(line: 701, column: 13, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14101, file: !13864, line: 701, column: 6)
!14119 = !DILocation(line: 701, column: 6, scope: !14101)
!14120 = !DILocation(line: 704, column: 5, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14118, file: !13864, line: 702, column: 3)
!14122 = !DILocation(line: 705, column: 5, scope: !14121)
!14123 = !DILocation(line: 705, column: 12, scope: !14121)
!14124 = !DILocation(line: 705, column: 33, scope: !14121)
!14125 = distinct !{!14125, !14122, !14126}
!14126 = !DILocation(line: 708, column: 5, scope: !14121)
!14127 = !DILocation(line: 711, column: 49, scope: !14121)
!14128 = !DILocation(line: 711, column: 5, scope: !14121)
!14129 = !DILocation(line: 712, column: 5, scope: !14121)
!14130 = !DILocation(line: 713, column: 5, scope: !14121)
!14131 = !DILocation(line: 713, column: 12, scope: !14121)
!14132 = !DILocation(line: 713, column: 37, scope: !14121)
!14133 = distinct !{!14133, !14130, !14134}
!14134 = !DILocation(line: 716, column: 5, scope: !14121)
!14135 = !DILocation(line: 719, column: 50, scope: !14121)
!14136 = !DILocation(line: 719, column: 5, scope: !14121)
!14137 = !DILocation(line: 720, column: 50, scope: !14121)
!14138 = !DILocation(line: 720, column: 5, scope: !14121)
!14139 = !DILocation(line: 721, column: 3, scope: !14121)
!14140 = !DILocation(line: 724, column: 6, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14101, file: !13864, line: 724, column: 6)
!14142 = !DILocation(line: 724, column: 22, scope: !14141)
!14143 = !DILocation(line: 724, column: 6, scope: !14101)
!14144 = !DILocation(line: 727, column: 14, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14141, file: !13864, line: 725, column: 3)
!14146 = !DILocation(line: 728, column: 3, scope: !14145)
!14147 = !DILocation(line: 731, column: 13, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14101, file: !13864, line: 731, column: 6)
!14149 = !DILocation(line: 731, column: 6, scope: !14101)
!14150 = !DILocation(line: 733, column: 5, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14148, file: !13864, line: 732, column: 3)
!14152 = !DILocation(line: 734, column: 3, scope: !14151)
!14153 = !DILocation(line: 736, column: 3, scope: !14101)
!14154 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10291, file: !10291, line: 4184, type: !337, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14155 = !DILocation(line: 4186, column: 3, scope: !14154)
!14156 = !DILocation(line: 4187, column: 1, scope: !14154)
!14157 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10291, file: !10291, line: 4205, type: !7520, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14158 = !DILocation(line: 4207, column: 11, scope: !14157)
!14159 = !DILocation(line: 4207, column: 44, scope: !14157)
!14160 = !DILocation(line: 4207, column: 3, scope: !14157)
!14161 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10291, file: !10291, line: 3224, type: !7530, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14162)
!14162 = !{!14163}
!14163 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14161, file: !10291, line: 3224, type: !108)
!14164 = !DILocation(line: 0, scope: !14161)
!14165 = !DILocation(line: 3226, column: 3, scope: !14161)
!14166 = !DILocation(line: 3227, column: 1, scope: !14161)
!14167 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10291, file: !10291, line: 3188, type: !7530, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14168)
!14168 = !{!14169}
!14169 = !DILocalVariable(name: "Source", arg: 1, scope: !14167, file: !10291, line: 3188, type: !108)
!14170 = !DILocation(line: 0, scope: !14167)
!14171 = !DILocation(line: 3190, column: 3, scope: !14167)
!14172 = !DILocation(line: 3191, column: 1, scope: !14167)
!14173 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10291, file: !10291, line: 3204, type: !7520, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14174 = !DILocation(line: 3206, column: 21, scope: !14173)
!14175 = !DILocation(line: 3206, column: 3, scope: !14173)
!14176 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10291, file: !10291, line: 3240, type: !7530, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14177)
!14177 = !{!14178}
!14178 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14176, file: !10291, line: 3240, type: !108)
!14179 = !DILocation(line: 0, scope: !14176)
!14180 = !DILocation(line: 3242, column: 3, scope: !14176)
!14181 = !DILocation(line: 3243, column: 1, scope: !14176)
!14182 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10291, file: !10291, line: 3256, type: !7530, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14183)
!14183 = !{!14184}
!14184 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14182, file: !10291, line: 3256, type: !108)
!14185 = !DILocation(line: 0, scope: !14182)
!14186 = !DILocation(line: 3258, column: 3, scope: !14182)
!14187 = !DILocation(line: 3259, column: 1, scope: !14182)
!14188 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10291, file: !10291, line: 5969, type: !7520, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14189 = !DILocation(line: 5971, column: 11, scope: !14188)
!14190 = !DILocation(line: 5971, column: 47, scope: !14188)
!14191 = !DILocation(line: 5971, column: 3, scope: !14188)
!14192 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10291, file: !10291, line: 5153, type: !7520, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14193 = !DILocation(line: 5155, column: 11, scope: !14192)
!14194 = !DILocation(line: 5155, column: 47, scope: !14192)
!14195 = !DILocation(line: 5155, column: 3, scope: !14192)
!14196 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13864, file: !13864, line: 540, type: !14197, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !14199)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{!13907, !108, !108, !14003, !14010}
!14199 = !{!14200, !14201, !14202, !14203, !14204, !14205}
!14200 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14196, file: !13864, line: 540, type: !108)
!14201 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14196, file: !13864, line: 540, type: !108)
!14202 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14196, file: !13864, line: 541, type: !14003)
!14203 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14196, file: !13864, line: 541, type: !14010)
!14204 = !DILocalVariable(name: "status", scope: !14196, file: !13864, line: 543, type: !13907)
!14205 = !DILocalVariable(name: "pllfreq", scope: !14196, file: !13864, line: 544, type: !108)
!14206 = !DILocation(line: 0, scope: !14196)
!14207 = !DILocation(line: 551, column: 6, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14196, file: !13864, line: 551, column: 6)
!14209 = !DILocation(line: 551, column: 25, scope: !14208)
!14210 = !DILocation(line: 551, column: 6, scope: !14196)
!14211 = !DILocation(line: 554, column: 15, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14208, file: !13864, line: 552, column: 3)
!14213 = !DILocation(line: 557, column: 8, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14212, file: !13864, line: 557, column: 8)
!14215 = !DILocation(line: 557, column: 29, scope: !14214)
!14216 = !DILocation(line: 557, column: 8, scope: !14212)
!14217 = !DILocation(line: 560, column: 20, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14219, file: !13864, line: 560, column: 10)
!14219 = distinct !DILexicalBlock(scope: !14214, file: !13864, line: 558, column: 5)
!14220 = !DILocation(line: 560, column: 10, scope: !14219)
!14221 = !DILocation(line: 562, column: 9, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14218, file: !13864, line: 561, column: 7)
!14223 = !DILocation(line: 563, column: 7, scope: !14222)
!14224 = !DILocation(line: 566, column: 9, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14218, file: !13864, line: 565, column: 7)
!14226 = !DILocation(line: 570, column: 7, scope: !14219)
!14227 = !DILocation(line: 571, column: 7, scope: !14219)
!14228 = !DILocation(line: 571, column: 14, scope: !14219)
!14229 = !DILocation(line: 571, column: 35, scope: !14219)
!14230 = distinct !{!14230, !14227, !14231}
!14231 = !DILocation(line: 574, column: 7, scope: !14219)
!14232 = !DILocation(line: 578, column: 76, scope: !14212)
!14233 = !DILocation(line: 578, column: 103, scope: !14212)
!14234 = !DILocation(line: 579, column: 54, scope: !14212)
!14235 = !DILocation(line: 578, column: 5, scope: !14212)
!14236 = !DILocation(line: 582, column: 14, scope: !14212)
!14237 = !DILocation(line: 583, column: 3, scope: !14212)
!14238 = !DILocation(line: 0, scope: !14208)
!14239 = !DILocation(line: 590, column: 3, scope: !14196)
!14240 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10291, file: !10291, line: 2969, type: !7520, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14241 = !DILocation(line: 2971, column: 11, scope: !14240)
!14242 = !DILocation(line: 2971, column: 44, scope: !14240)
!14243 = !DILocation(line: 2971, column: 3, scope: !14240)
!14244 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10291, file: !10291, line: 2929, type: !337, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14245 = !DILocation(line: 2931, column: 3, scope: !14244)
!14246 = !DILocation(line: 2932, column: 1, scope: !14244)
!14247 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10291, file: !10291, line: 2939, type: !337, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14248 = !DILocation(line: 2941, column: 3, scope: !14247)
!14249 = !DILocation(line: 2942, column: 1, scope: !14247)
!14250 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10291, file: !10291, line: 2949, type: !337, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3188, retainedNodes: !256)
!14251 = !DILocation(line: 2951, column: 3, scope: !14250)
!14252 = !DILocation(line: 2952, column: 1, scope: !14250)
!14253 = distinct !DISubprogram(name: "z_device_state_init", scope: !14254, file: !14254, line: 23, type: !337, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14255)
!14254 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14255 = !{!14256}
!14256 = !DILocalVariable(name: "dev", scope: !14253, file: !14254, line: 25, type: !14257)
!14257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14258, size: 32)
!14258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14259)
!14259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !451, line: 378, size: 192, elements: !14260)
!14260 = !{!14261, !14262, !14263, !14264, !14270, !14271}
!14261 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14259, file: !451, line: 380, baseType: !121, size: 32)
!14262 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14259, file: !451, line: 382, baseType: !13, size: 32, offset: 32)
!14263 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14259, file: !451, line: 384, baseType: !13, size: 32, offset: 64)
!14264 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14259, file: !451, line: 386, baseType: !14265, size: 32, offset: 96)
!14265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14266, size: 32)
!14266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !451, line: 351, size: 16, elements: !14267)
!14267 = !{!14268, !14269}
!14268 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14266, file: !451, line: 359, baseType: !190, size: 8)
!14269 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14266, file: !451, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14259, file: !451, line: 388, baseType: !106, size: 32, offset: 128)
!14271 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14259, file: !451, line: 396, baseType: !464, size: 32, offset: 160)
!14272 = !DILocation(line: 0, scope: !14253)
!14273 = !DILocation(line: 31, column: 1, scope: !14253)
!14274 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14254, file: !14254, line: 33, type: !14275, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14277)
!14275 = !DISubroutineType(types: !14276)
!14276 = !{!14257, !121}
!14277 = !{!14278, !14279}
!14278 = !DILocalVariable(name: "name", arg: 1, scope: !14274, file: !14254, line: 33, type: !121)
!14279 = !DILocalVariable(name: "dev", scope: !14274, file: !14254, line: 35, type: !14257)
!14280 = !DILocation(line: 0, scope: !14274)
!14281 = !DILocation(line: 40, column: 12, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14274, file: !14254, line: 40, column: 6)
!14283 = !DILocation(line: 40, column: 21, scope: !14282)
!14284 = !DILocation(line: 40, column: 25, scope: !14282)
!14285 = !DILocation(line: 40, column: 33, scope: !14282)
!14286 = !DILocation(line: 40, column: 6, scope: !14274)
!14287 = !DILocation(line: 55, column: 2, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14274, file: !14254, line: 55, column: 2)
!14289 = !DILocation(line: 50, column: 7, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !14254, line: 50, column: 7)
!14291 = distinct !DILexicalBlock(scope: !14292, file: !14254, line: 49, column: 57)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !14254, line: 49, column: 2)
!14293 = distinct !DILexicalBlock(scope: !14274, file: !14254, line: 49, column: 2)
!14294 = !DILocation(line: 50, column: 30, scope: !14290)
!14295 = !DILocation(line: 50, column: 39, scope: !14290)
!14296 = !DILocation(line: 50, column: 44, scope: !14290)
!14297 = !DILocation(line: 50, column: 7, scope: !14291)
!14298 = !DILocation(line: 49, column: 53, scope: !14292)
!14299 = !DILocation(line: 49, column: 33, scope: !14292)
!14300 = !DILocation(line: 49, column: 2, scope: !14293)
!14301 = distinct !{!14301, !14300, !14302}
!14302 = !DILocation(line: 53, column: 2, scope: !14293)
!14303 = !DILocation(line: 56, column: 7, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14305, file: !14254, line: 56, column: 7)
!14305 = distinct !DILexicalBlock(scope: !14306, file: !14254, line: 55, column: 57)
!14306 = distinct !DILexicalBlock(scope: !14288, file: !14254, line: 55, column: 2)
!14307 = !DILocation(line: 56, column: 30, scope: !14304)
!14308 = !DILocation(line: 56, column: 52, scope: !14304)
!14309 = !DILocation(line: 56, column: 34, scope: !14304)
!14310 = !DILocation(line: 56, column: 58, scope: !14304)
!14311 = !DILocation(line: 56, column: 7, scope: !14305)
!14312 = !DILocation(line: 55, column: 53, scope: !14306)
!14313 = !DILocation(line: 55, column: 33, scope: !14306)
!14314 = distinct !{!14314, !14287, !14315}
!14315 = !DILocation(line: 59, column: 2, scope: !14288)
!14316 = !DILocation(line: 62, column: 1, scope: !14274)
!14317 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14254, file: !14254, line: 93, type: !14318, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14320)
!14318 = !DISubroutineType(types: !14319)
!14319 = !{!136, !14257}
!14320 = !{!14321}
!14321 = !DILocalVariable(name: "dev", arg: 1, scope: !14317, file: !14254, line: 93, type: !14257)
!14322 = !DILocation(line: 0, scope: !14317)
!14323 = !DILocation(line: 99, column: 10, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14317, file: !14254, line: 99, column: 6)
!14325 = !DILocation(line: 99, column: 6, scope: !14317)
!14326 = !DILocation(line: 103, column: 14, scope: !14317)
!14327 = !DILocation(line: 103, column: 21, scope: !14317)
!14328 = !DILocation(line: 103, column: 33, scope: !14317)
!14329 = !DILocation(line: 103, column: 49, scope: !14317)
!14330 = !DILocation(line: 103, column: 58, scope: !14317)
!14331 = !DILocation(line: 104, column: 1, scope: !14317)
!14332 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14254, file: !14254, line: 87, type: !14333, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14336)
!14333 = !DISubroutineType(types: !14334)
!14334 = !{!137, !14335}
!14335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14257, size: 32)
!14336 = !{!14337}
!14337 = !DILocalVariable(name: "devices", arg: 1, scope: !14332, file: !14254, line: 87, type: !14335)
!14338 = !DILocation(line: 0, scope: !14332)
!14339 = !DILocation(line: 89, column: 11, scope: !14332)
!14340 = !DILocation(line: 90, column: 2, scope: !14332)
!14341 = distinct !DISubprogram(name: "device_required_foreach", scope: !14254, file: !14254, line: 125, type: !14342, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14348)
!14342 = !DISubroutineType(types: !14343)
!14343 = !{!107, !14257, !14344, !106}
!14344 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !451, line: 471, baseType: !14345)
!14345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14346, size: 32)
!14346 = !DISubroutineType(types: !14347)
!14347 = !{!107, !14257, !106}
!14348 = !{!14349, !14350, !14351, !14352, !14353}
!14349 = !DILocalVariable(name: "dev", arg: 1, scope: !14341, file: !14254, line: 125, type: !14257)
!14350 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14341, file: !14254, line: 126, type: !14344)
!14351 = !DILocalVariable(name: "context", arg: 3, scope: !14341, file: !14254, line: 127, type: !106)
!14352 = !DILocalVariable(name: "handle_count", scope: !14341, file: !14254, line: 129, type: !137)
!14353 = !DILocalVariable(name: "handles", scope: !14341, file: !14254, line: 130, type: !464)
!14354 = !DILocation(line: 0, scope: !14341)
!14355 = !DILocation(line: 129, column: 2, scope: !14341)
!14356 = !DILocation(line: 129, column: 9, scope: !14341)
!14357 = !DILocation(line: 130, column: 35, scope: !14341)
!14358 = !DILocation(line: 132, column: 33, scope: !14341)
!14359 = !DILocation(line: 132, column: 9, scope: !14341)
!14360 = !DILocation(line: 133, column: 1, scope: !14341)
!14361 = !DILocation(line: 132, column: 2, scope: !14341)
!14362 = distinct !DISubprogram(name: "device_required_handles_get", scope: !451, file: !451, line: 493, type: !14363, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14365)
!14363 = !DISubroutineType(types: !14364)
!14364 = !{!464, !14257, !2765}
!14365 = !{!14366, !14367, !14368, !14369}
!14366 = !DILocalVariable(name: "dev", arg: 1, scope: !14362, file: !451, line: 493, type: !14257)
!14367 = !DILocalVariable(name: "count", arg: 2, scope: !14362, file: !451, line: 493, type: !2765)
!14368 = !DILocalVariable(name: "rv", scope: !14362, file: !451, line: 495, type: !464)
!14369 = !DILocalVariable(name: "i", scope: !14370, file: !451, line: 498, type: !137)
!14370 = distinct !DILexicalBlock(scope: !14371, file: !451, line: 497, column: 18)
!14371 = distinct !DILexicalBlock(scope: !14362, file: !451, line: 497, column: 6)
!14372 = !DILocation(line: 0, scope: !14362)
!14373 = !DILocation(line: 495, column: 35, scope: !14362)
!14374 = !DILocation(line: 497, column: 9, scope: !14371)
!14375 = !DILocation(line: 497, column: 6, scope: !14362)
!14376 = !DILocation(line: 0, scope: !14370)
!14377 = !DILocation(line: 500, column: 11, scope: !14370)
!14378 = !DILocation(line: 500, column: 40, scope: !14370)
!14379 = !DILocation(line: 502, column: 4, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14370, file: !451, line: 501, column: 40)
!14381 = distinct !{!14381, !14382, !14383}
!14382 = !DILocation(line: 500, column: 3, scope: !14370)
!14383 = !DILocation(line: 503, column: 3, scope: !14370)
!14384 = !DILocation(line: 504, column: 10, scope: !14370)
!14385 = !DILocation(line: 505, column: 2, scope: !14370)
!14386 = !DILocation(line: 507, column: 2, scope: !14362)
!14387 = distinct !DISubprogram(name: "device_visitor", scope: !14254, file: !14254, line: 106, type: !14388, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14390)
!14388 = !DISubroutineType(types: !14389)
!14389 = !{!107, !464, !137, !14344, !106}
!14390 = !{!14391, !14392, !14393, !14394, !14395, !14397, !14400, !14401}
!14391 = !DILocalVariable(name: "handles", arg: 1, scope: !14387, file: !14254, line: 106, type: !464)
!14392 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14387, file: !14254, line: 107, type: !137)
!14393 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14387, file: !14254, line: 108, type: !14344)
!14394 = !DILocalVariable(name: "context", arg: 4, scope: !14387, file: !14254, line: 109, type: !106)
!14395 = !DILocalVariable(name: "i", scope: !14396, file: !14254, line: 112, type: !137)
!14396 = distinct !DILexicalBlock(scope: !14387, file: !14254, line: 112, column: 2)
!14397 = !DILocalVariable(name: "dh", scope: !14398, file: !14254, line: 113, type: !466)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !14254, line: 112, column: 44)
!14399 = distinct !DILexicalBlock(scope: !14396, file: !14254, line: 112, column: 2)
!14400 = !DILocalVariable(name: "rdev", scope: !14398, file: !14254, line: 114, type: !14257)
!14401 = !DILocalVariable(name: "rc", scope: !14398, file: !14254, line: 115, type: !107)
!14402 = !DILocation(line: 0, scope: !14387)
!14403 = !DILocation(line: 0, scope: !14396)
!14404 = !DILocation(line: 112, column: 23, scope: !14399)
!14405 = !DILocation(line: 112, column: 2, scope: !14396)
!14406 = distinct !{!14406, !14405, !14407}
!14407 = !DILocation(line: 120, column: 2, scope: !14396)
!14408 = !DILocation(line: 113, column: 24, scope: !14398)
!14409 = !DILocation(line: 0, scope: !14398)
!14410 = !DILocation(line: 114, column: 31, scope: !14398)
!14411 = !DILocation(line: 115, column: 12, scope: !14398)
!14412 = !DILocation(line: 117, column: 10, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14398, file: !14254, line: 117, column: 7)
!14414 = !DILocation(line: 112, column: 39, scope: !14399)
!14415 = !DILocation(line: 123, column: 1, scope: !14387)
!14416 = distinct !DISubprogram(name: "device_from_handle", scope: !451, file: !451, line: 439, type: !14417, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14419)
!14417 = !DISubroutineType(types: !14418)
!14418 = !{!14257, !466}
!14419 = !{!14420, !14421, !14422}
!14420 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14416, file: !451, line: 439, type: !466)
!14421 = !DILocalVariable(name: "dev", scope: !14416, file: !451, line: 443, type: !14257)
!14422 = !DILocalVariable(name: "numdev", scope: !14416, file: !451, line: 444, type: !137)
!14423 = !DILocation(line: 0, scope: !14416)
!14424 = !DILocation(line: 446, column: 7, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14416, file: !451, line: 446, column: 6)
!14426 = !DILocation(line: 446, column: 18, scope: !14425)
!14427 = !DILocation(line: 446, column: 23, scope: !14425)
!14428 = !DILocation(line: 450, column: 2, scope: !14416)
!14429 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14254, file: !14254, line: 135, type: !14342, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14430)
!14430 = !{!14431, !14432, !14433, !14434, !14435}
!14431 = !DILocalVariable(name: "dev", arg: 1, scope: !14429, file: !14254, line: 135, type: !14257)
!14432 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14429, file: !14254, line: 136, type: !14344)
!14433 = !DILocalVariable(name: "context", arg: 3, scope: !14429, file: !14254, line: 137, type: !106)
!14434 = !DILocalVariable(name: "handle_count", scope: !14429, file: !14254, line: 139, type: !137)
!14435 = !DILocalVariable(name: "handles", scope: !14429, file: !14254, line: 140, type: !464)
!14436 = !DILocation(line: 0, scope: !14429)
!14437 = !DILocation(line: 139, column: 2, scope: !14429)
!14438 = !DILocation(line: 139, column: 9, scope: !14429)
!14439 = !DILocation(line: 140, column: 35, scope: !14429)
!14440 = !DILocation(line: 142, column: 33, scope: !14429)
!14441 = !DILocation(line: 142, column: 9, scope: !14429)
!14442 = !DILocation(line: 143, column: 1, scope: !14429)
!14443 = !DILocation(line: 142, column: 2, scope: !14429)
!14444 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !451, file: !451, line: 573, type: !14363, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3255, retainedNodes: !14445)
!14445 = !{!14446, !14447, !14448, !14449, !14450}
!14446 = !DILocalVariable(name: "dev", arg: 1, scope: !14444, file: !451, line: 573, type: !14257)
!14447 = !DILocalVariable(name: "count", arg: 2, scope: !14444, file: !451, line: 573, type: !2765)
!14448 = !DILocalVariable(name: "rv", scope: !14444, file: !451, line: 575, type: !464)
!14449 = !DILocalVariable(name: "region", scope: !14444, file: !451, line: 576, type: !137)
!14450 = !DILocalVariable(name: "i", scope: !14444, file: !451, line: 577, type: !137)
!14451 = !DILocation(line: 0, scope: !14444)
!14452 = !DILocation(line: 575, column: 35, scope: !14444)
!14453 = !DILocation(line: 579, column: 9, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14444, file: !451, line: 579, column: 6)
!14455 = !DILocation(line: 579, column: 6, scope: !14444)
!14456 = !DILocation(line: 582, column: 8, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14458, file: !451, line: 582, column: 8)
!14458 = distinct !DILexicalBlock(scope: !14459, file: !451, line: 581, column: 23)
!14459 = distinct !DILexicalBlock(scope: !14454, file: !451, line: 579, column: 18)
!14460 = !DILocation(line: 582, column: 12, scope: !14457)
!14461 = !DILocation(line: 585, column: 6, scope: !14458)
!14462 = !DILocation(line: 0, scope: !14459)
!14463 = !DILocation(line: 581, column: 17, scope: !14459)
!14464 = !DILocation(line: 581, column: 3, scope: !14459)
!14465 = !DILocation(line: 588, column: 10, scope: !14459)
!14466 = !DILocation(line: 588, column: 16, scope: !14459)
!14467 = !DILocation(line: 589, column: 4, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14459, file: !451, line: 588, column: 39)
!14469 = !DILocation(line: 588, column: 3, scope: !14459)
!14470 = distinct !{!14470, !14469, !14471}
!14471 = !DILocation(line: 590, column: 3, scope: !14459)
!14472 = !DILocation(line: 591, column: 10, scope: !14459)
!14473 = !DILocation(line: 592, column: 2, scope: !14459)
!14474 = !DILocation(line: 575, column: 25, scope: !14444)
!14475 = !DILocation(line: 594, column: 2, scope: !14444)
!14476 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2011, file: !2011, line: 49, type: !14477, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2008, retainedNodes: !256)
!14477 = !DISubroutineType(types: !14478)
!14478 = !{!396}
!14479 = !DILocation(line: 51, column: 10, scope: !14476)
!14480 = !DILocation(line: 51, column: 20, scope: !14476)
!14481 = !DILocation(line: 51, column: 2, scope: !14476)
!14482 = distinct !DISubprogram(name: "coredump", scope: !3262, file: !3262, line: 209, type: !14483, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14629)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{null, !32, !14485, !14529}
!14485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14486, size: 32)
!14486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14487)
!14487 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2893, line: 141, baseType: !14488)
!14488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2893, line: 97, size: 256, elements: !14489)
!14489 = !{!14490}
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14488, file: !2893, line: 107, baseType: !14491, size: 256)
!14491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2893, line: 98, size: 256, elements: !14492)
!14492 = !{!14493, !14498, !14503, !14508, !14513, !14518, !14523, !14528}
!14493 = !DIDerivedType(tag: DW_TAG_member, scope: !14491, file: !2893, line: 99, baseType: !14494, size: 32)
!14494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14491, file: !2893, line: 99, size: 32, elements: !14495)
!14495 = !{!14496, !14497}
!14496 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14494, file: !2893, line: 99, baseType: !108, size: 32)
!14497 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14494, file: !2893, line: 99, baseType: !108, size: 32)
!14498 = !DIDerivedType(tag: DW_TAG_member, scope: !14491, file: !2893, line: 100, baseType: !14499, size: 32, offset: 32)
!14499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14491, file: !2893, line: 100, size: 32, elements: !14500)
!14500 = !{!14501, !14502}
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14499, file: !2893, line: 100, baseType: !108, size: 32)
!14502 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14499, file: !2893, line: 100, baseType: !108, size: 32)
!14503 = !DIDerivedType(tag: DW_TAG_member, scope: !14491, file: !2893, line: 101, baseType: !14504, size: 32, offset: 64)
!14504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14491, file: !2893, line: 101, size: 32, elements: !14505)
!14505 = !{!14506, !14507}
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14504, file: !2893, line: 101, baseType: !108, size: 32)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14504, file: !2893, line: 101, baseType: !108, size: 32)
!14508 = !DIDerivedType(tag: DW_TAG_member, scope: !14491, file: !2893, line: 102, baseType: !14509, size: 32, offset: 96)
!14509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14491, file: !2893, line: 102, size: 32, elements: !14510)
!14510 = !{!14511, !14512}
!14511 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14509, file: !2893, line: 102, baseType: !108, size: 32)
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14509, file: !2893, line: 102, baseType: !108, size: 32)
!14513 = !DIDerivedType(tag: DW_TAG_member, scope: !14491, file: !2893, line: 103, baseType: !14514, size: 32, offset: 128)
!14514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14491, file: !2893, line: 103, size: 32, elements: !14515)
!14515 = !{!14516, !14517}
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14514, file: !2893, line: 103, baseType: !108, size: 32)
!14517 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14514, file: !2893, line: 103, baseType: !108, size: 32)
!14518 = !DIDerivedType(tag: DW_TAG_member, scope: !14491, file: !2893, line: 104, baseType: !14519, size: 32, offset: 160)
!14519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14491, file: !2893, line: 104, size: 32, elements: !14520)
!14520 = !{!14521, !14522}
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14519, file: !2893, line: 104, baseType: !108, size: 32)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14519, file: !2893, line: 104, baseType: !108, size: 32)
!14523 = !DIDerivedType(tag: DW_TAG_member, scope: !14491, file: !2893, line: 105, baseType: !14524, size: 32, offset: 192)
!14524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14491, file: !2893, line: 105, size: 32, elements: !14525)
!14525 = !{!14526, !14527}
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14524, file: !2893, line: 105, baseType: !108, size: 32)
!14527 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14524, file: !2893, line: 105, baseType: !108, size: 32)
!14528 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14491, file: !2893, line: 106, baseType: !108, size: 32, offset: 224)
!14529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14530, size: 32)
!14530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !168, line: 245, size: 1024, elements: !14531)
!14531 = !{!14532, !14590, !14602, !14603, !14604, !14605, !14611, !14624}
!14532 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14530, file: !168, line: 247, baseType: !14533, size: 384)
!14533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !168, line: 57, size: 384, elements: !14534)
!14534 = !{!14535, !14559, !14566, !14567, !14568, !14577, !14578, !14579}
!14535 = !DIDerivedType(tag: DW_TAG_member, scope: !14533, file: !168, line: 60, baseType: !14536, size: 64)
!14536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14533, file: !168, line: 60, size: 64, elements: !14537)
!14537 = !{!14538, !14553}
!14538 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14536, file: !168, line: 61, baseType: !14539, size: 64)
!14539 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !151, line: 49, baseType: !14540)
!14540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !151, line: 37, size: 64, elements: !14541)
!14541 = !{!14542, !14548}
!14542 = !DIDerivedType(tag: DW_TAG_member, scope: !14540, file: !151, line: 38, baseType: !14543, size: 32)
!14543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14540, file: !151, line: 38, size: 32, elements: !14544)
!14544 = !{!14545, !14547}
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14543, file: !151, line: 39, baseType: !14546, size: 32)
!14546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14540, size: 32)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14543, file: !151, line: 40, baseType: !14546, size: 32)
!14548 = !DIDerivedType(tag: DW_TAG_member, scope: !14540, file: !151, line: 42, baseType: !14549, size: 32, offset: 32)
!14549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14540, file: !151, line: 42, size: 32, elements: !14550)
!14550 = !{!14551, !14552}
!14551 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14549, file: !151, line: 43, baseType: !14546, size: 32)
!14552 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14549, file: !151, line: 44, baseType: !14546, size: 32)
!14553 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14536, file: !168, line: 62, baseType: !14554, size: 64)
!14554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !180, line: 49, size: 64, elements: !14555)
!14555 = !{!14556}
!14556 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14554, file: !180, line: 50, baseType: !14557, size: 64)
!14557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14558, size: 64, elements: !185)
!14558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14554, size: 32)
!14559 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14533, file: !168, line: 68, baseType: !14560, size: 32, offset: 64)
!14560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14561, size: 32)
!14561 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !14562)
!14562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !14563)
!14563 = !{!14564}
!14564 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14562, file: !146, line: 232, baseType: !14565, size: 64)
!14565 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !14540)
!14566 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14533, file: !168, line: 71, baseType: !190, size: 8, offset: 96)
!14567 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14533, file: !168, line: 74, baseType: !190, size: 8, offset: 104)
!14568 = !DIDerivedType(tag: DW_TAG_member, scope: !14533, file: !168, line: 90, baseType: !14569, size: 16, offset: 112)
!14569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14533, file: !168, line: 90, size: 16, elements: !14570)
!14570 = !{!14571, !14576}
!14571 = !DIDerivedType(tag: DW_TAG_member, scope: !14569, file: !168, line: 91, baseType: !14572, size: 16)
!14572 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14569, file: !168, line: 91, size: 16, elements: !14573)
!14573 = !{!14574, !14575}
!14574 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14572, file: !168, line: 96, baseType: !200, size: 8)
!14575 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14572, file: !168, line: 97, baseType: !190, size: 8, offset: 8)
!14576 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14569, file: !168, line: 100, baseType: !126, size: 16)
!14577 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14533, file: !168, line: 107, baseType: !108, size: 32, offset: 128)
!14578 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14533, file: !168, line: 127, baseType: !106, size: 32, offset: 160)
!14579 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14533, file: !168, line: 131, baseType: !14580, size: 192, offset: 192)
!14580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !146, line: 244, size: 192, elements: !14581)
!14581 = !{!14582, !14583, !14589}
!14582 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14580, file: !146, line: 245, baseType: !14539, size: 64)
!14583 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14580, file: !146, line: 246, baseType: !14584, size: 32, offset: 64)
!14584 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !146, line: 242, baseType: !14585)
!14585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14586, size: 32)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{null, !14588}
!14588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14580, size: 32)
!14589 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14580, file: !146, line: 249, baseType: !104, size: 64, offset: 128)
!14590 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14530, file: !168, line: 250, baseType: !14591, size: 288, offset: 384)
!14591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !219, line: 25, size: 288, elements: !14592)
!14592 = !{!14593, !14594, !14595, !14596, !14597, !14598, !14599, !14600, !14601}
!14593 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14591, file: !219, line: 26, baseType: !108, size: 32)
!14594 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14591, file: !219, line: 27, baseType: !108, size: 32, offset: 32)
!14595 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14591, file: !219, line: 28, baseType: !108, size: 32, offset: 64)
!14596 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14591, file: !219, line: 29, baseType: !108, size: 32, offset: 96)
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14591, file: !219, line: 30, baseType: !108, size: 32, offset: 128)
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14591, file: !219, line: 31, baseType: !108, size: 32, offset: 160)
!14599 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14591, file: !219, line: 32, baseType: !108, size: 32, offset: 192)
!14600 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14591, file: !219, line: 33, baseType: !108, size: 32, offset: 224)
!14601 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14591, file: !219, line: 34, baseType: !108, size: 32, offset: 256)
!14602 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14530, file: !168, line: 253, baseType: !106, size: 32, offset: 672)
!14603 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14530, file: !168, line: 256, baseType: !14561, size: 64, offset: 704)
!14604 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14530, file: !168, line: 294, baseType: !107, size: 32, offset: 768)
!14605 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14530, file: !168, line: 300, baseType: !14606, size: 96, offset: 800)
!14606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !168, line: 149, size: 96, elements: !14607)
!14607 = !{!14608, !14609, !14610}
!14608 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14606, file: !168, line: 153, baseType: !22, size: 32)
!14609 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14606, file: !168, line: 162, baseType: !137, size: 32, offset: 32)
!14610 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14606, file: !168, line: 168, baseType: !137, size: 32, offset: 64)
!14611 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14530, file: !168, line: 325, baseType: !14612, size: 32, offset: 896)
!14612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14613, size: 32)
!14613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !14614)
!14614 = !{!14615, !14621, !14622}
!14615 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14613, file: !142, line: 5074, baseType: !14616, size: 96)
!14616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !14617)
!14617 = !{!14618, !14619, !14620}
!14618 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14616, file: !245, line: 57, baseType: !248, size: 32)
!14619 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14616, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!14620 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14616, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!14621 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14613, file: !142, line: 5075, baseType: !14561, size: 64, offset: 96)
!14622 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14613, file: !142, line: 5076, baseType: !14623, offset: 160)
!14623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!14624 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14530, file: !168, line: 343, baseType: !14625, size: 64, offset: 928)
!14625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !219, line: 60, size: 64, elements: !14626)
!14626 = !{!14627, !14628}
!14627 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14625, file: !219, line: 63, baseType: !108, size: 32)
!14628 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14625, file: !219, line: 66, baseType: !108, size: 32, offset: 32)
!14629 = !{!14630, !14631, !14632}
!14630 = !DILocalVariable(name: "reason", arg: 1, scope: !14482, file: !3262, line: 209, type: !32)
!14631 = !DILocalVariable(name: "esf", arg: 2, scope: !14482, file: !3262, line: 209, type: !14485)
!14632 = !DILocalVariable(name: "thread", arg: 3, scope: !14482, file: !3262, line: 210, type: !14529)
!14633 = !DILocation(line: 0, scope: !14482)
!14634 = !DILocation(line: 212, column: 1, scope: !14482)
!14635 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3262, file: !3262, line: 214, type: !14636, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14638)
!14636 = !DISubroutineType(types: !14637)
!14637 = !{null, !22, !22}
!14638 = !{!14639, !14640}
!14639 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14635, file: !3262, line: 214, type: !22)
!14640 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14635, file: !3262, line: 214, type: !22)
!14641 = !DILocation(line: 0, scope: !14635)
!14642 = !DILocation(line: 216, column: 1, scope: !14635)
!14643 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3262, file: !3262, line: 218, type: !14644, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14646)
!14644 = !DISubroutineType(types: !14645)
!14645 = !{null, !401, !137}
!14646 = !{!14647, !14648}
!14647 = !DILocalVariable(name: "buf", arg: 1, scope: !14643, file: !3262, line: 218, type: !401)
!14648 = !DILocalVariable(name: "buflen", arg: 2, scope: !14643, file: !3262, line: 218, type: !137)
!14649 = !DILocation(line: 0, scope: !14643)
!14650 = !DILocation(line: 220, column: 1, scope: !14643)
!14651 = distinct !DISubprogram(name: "coredump_query", scope: !3262, file: !3262, line: 222, type: !14652, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14654)
!14652 = !DISubroutineType(types: !14653)
!14653 = !{!107, !3261, !106}
!14654 = !{!14655, !14656}
!14655 = !DILocalVariable(name: "query_id", arg: 1, scope: !14651, file: !3262, line: 222, type: !3261)
!14656 = !DILocalVariable(name: "arg", arg: 2, scope: !14651, file: !3262, line: 222, type: !106)
!14657 = !DILocation(line: 0, scope: !14651)
!14658 = !DILocation(line: 224, column: 2, scope: !14651)
!14659 = distinct !DISubprogram(name: "coredump_cmd", scope: !3262, file: !3262, line: 227, type: !14660, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14662)
!14660 = !DISubroutineType(types: !14661)
!14661 = !{!107, !3268, !106}
!14662 = !{!14663, !14664}
!14663 = !DILocalVariable(name: "query_id", arg: 1, scope: !14659, file: !3262, line: 227, type: !3268)
!14664 = !DILocalVariable(name: "arg", arg: 2, scope: !14659, file: !3262, line: 227, type: !106)
!14665 = !DILocation(line: 0, scope: !14659)
!14666 = !DILocation(line: 229, column: 2, scope: !14659)
!14667 = distinct !DISubprogram(name: "arch_system_halt", scope: !14668, file: !14668, line: 23, type: !7129, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14669)
!14668 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14669 = !{!14670}
!14670 = !DILocalVariable(name: "reason", arg: 1, scope: !14667, file: !14668, line: 23, type: !32)
!14671 = !DILocation(line: 0, scope: !14667)
!14672 = !DILocation(line: 55, column: 2, scope: !14673, inlinedAt: !14677)
!14673 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14674)
!14674 = !{!14675, !14676}
!14675 = !DILocalVariable(name: "key", scope: !14673, file: !7118, line: 44, type: !32)
!14676 = !DILocalVariable(name: "tmp", scope: !14673, file: !7118, line: 53, type: !32)
!14677 = distinct !DILocation(line: 31, column: 8, scope: !14667)
!14678 = !{i64 2281339}
!14679 = !DILocation(line: 0, scope: !14673, inlinedAt: !14677)
!14680 = !DILocation(line: 32, column: 2, scope: !14667)
!14681 = !DILocation(line: 32, column: 2, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14683, file: !14668, line: 32, column: 2)
!14683 = distinct !DILexicalBlock(scope: !14667, file: !14668, line: 32, column: 2)
!14684 = distinct !{!14684, !14685, !14686}
!14685 = !DILocation(line: 32, column: 2, scope: !14683)
!14686 = !DILocation(line: 34, column: 2, scope: !14683)
!14687 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14668, file: !14668, line: 39, type: !14688, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14690)
!14688 = !DISubroutineType(types: !14689)
!14689 = !{null, !32, !14485}
!14690 = !{!14691, !14692}
!14691 = !DILocalVariable(name: "reason", arg: 1, scope: !14687, file: !14668, line: 39, type: !32)
!14692 = !DILocalVariable(name: "esf", arg: 2, scope: !14687, file: !14668, line: 40, type: !14485)
!14693 = !DILocation(line: 0, scope: !14687)
!14694 = !DILocation(line: 45, column: 2, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14696, file: !14668, line: 45, column: 2)
!14696 = distinct !DILexicalBlock(scope: !14697, file: !14668, line: 45, column: 2)
!14697 = distinct !DILexicalBlock(scope: !14698, file: !14668, line: 45, column: 2)
!14698 = distinct !DILexicalBlock(scope: !14687, file: !14668, line: 45, column: 2)
!14699 = !DILocation(line: 46, column: 2, scope: !14687)
!14700 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14668, file: !14668, line: 81, type: !7129, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14701)
!14701 = !{!14702}
!14702 = !DILocalVariable(name: "reason", arg: 1, scope: !14700, file: !14668, line: 81, type: !32)
!14703 = !DILocation(line: 0, scope: !14700)
!14704 = !DILocation(line: 83, column: 2, scope: !14700)
!14705 = distinct !DISubprogram(name: "z_fatal_error", scope: !14668, file: !14668, line: 96, type: !14688, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14706)
!14706 = !{!14707, !14708, !14709, !14710}
!14707 = !DILocalVariable(name: "reason", arg: 1, scope: !14705, file: !14668, line: 96, type: !32)
!14708 = !DILocalVariable(name: "esf", arg: 2, scope: !14705, file: !14668, line: 96, type: !14485)
!14709 = !DILocalVariable(name: "key", scope: !14705, file: !14668, line: 102, type: !32)
!14710 = !DILocalVariable(name: "thread", scope: !14705, file: !14668, line: 103, type: !14529)
!14711 = !DILocation(line: 0, scope: !14705)
!14712 = !DILocation(line: 55, column: 2, scope: !14673, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 102, column: 21, scope: !14705)
!14714 = !DILocation(line: 0, scope: !14673, inlinedAt: !14713)
!14715 = !DILocation(line: 104, column: 4, scope: !14705)
!14716 = !DILocation(line: 109, column: 2, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14718, file: !14668, line: 109, column: 2)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !14668, line: 109, column: 2)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !14668, line: 109, column: 2)
!14720 = distinct !DILexicalBlock(scope: !14705, file: !14668, line: 109, column: 2)
!14721 = !DILocation(line: 119, column: 11, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14705, file: !14668, line: 119, column: 6)
!14723 = !DILocation(line: 119, column: 20, scope: !14722)
!14724 = !DILocalVariable(name: "esf", arg: 1, scope: !14725, file: !8457, line: 71, type: !14485)
!14725 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8457, file: !8457, line: 71, type: !14726, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14728)
!14726 = !DISubroutineType(types: !14727)
!14727 = !{!136, !14485}
!14728 = !{!14724}
!14729 = !DILocation(line: 0, scope: !14725, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 119, column: 23, scope: !14722)
!14731 = !DILocation(line: 73, column: 21, scope: !14725, inlinedAt: !14730)
!14732 = !DILocation(line: 73, column: 26, scope: !14725, inlinedAt: !14730)
!14733 = !DILocation(line: 73, column: 9, scope: !14725, inlinedAt: !14730)
!14734 = !DILocation(line: 119, column: 6, scope: !14705)
!14735 = !DILocation(line: 120, column: 3, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14737, file: !14668, line: 120, column: 3)
!14737 = distinct !DILexicalBlock(scope: !14738, file: !14668, line: 120, column: 3)
!14738 = distinct !DILexicalBlock(scope: !14739, file: !14668, line: 120, column: 3)
!14739 = distinct !DILexicalBlock(scope: !14740, file: !14668, line: 120, column: 3)
!14740 = distinct !DILexicalBlock(scope: !14722, file: !14668, line: 119, column: 57)
!14741 = !DILocation(line: 121, column: 2, scope: !14740)
!14742 = !DILocation(line: 124, column: 2, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14744, file: !14668, line: 124, column: 2)
!14744 = distinct !DILexicalBlock(scope: !14745, file: !14668, line: 124, column: 2)
!14745 = distinct !DILexicalBlock(scope: !14746, file: !14668, line: 124, column: 2)
!14746 = distinct !DILexicalBlock(scope: !14705, file: !14668, line: 124, column: 2)
!14747 = !DILocation(line: 131, column: 2, scope: !14705)
!14748 = !DILocation(line: 0, scope: !14725, inlinedAt: !14749)
!14749 = distinct !DILocation(line: 151, column: 24, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14751, file: !14668, line: 151, column: 7)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !14668, line: 146, column: 32)
!14752 = distinct !DILexicalBlock(scope: !14705, file: !14668, line: 146, column: 6)
!14753 = !DILocation(line: 151, column: 7, scope: !14751)
!14754 = !DILocation(line: 151, column: 21, scope: !14750)
!14755 = !DILocalVariable(name: "key", arg: 1, scope: !14756, file: !7118, line: 84, type: !32)
!14756 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14757)
!14757 = !{!14755}
!14758 = !DILocation(line: 0, scope: !14756, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 186, column: 2, scope: !14705)
!14760 = !DILocation(line: 95, column: 2, scope: !14756, inlinedAt: !14759)
!14761 = !{i64 2282156}
!14762 = !DILocation(line: 189, column: 3, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14764, file: !14668, line: 188, column: 41)
!14764 = distinct !DILexicalBlock(scope: !14705, file: !14668, line: 188, column: 6)
!14765 = !DILocation(line: 191, column: 1, scope: !14705)
!14766 = distinct !DISubprogram(name: "k_current_get", scope: !142, file: !142, line: 530, type: !14767, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !256)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{!14769}
!14769 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !14529)
!14770 = !DILocation(line: 535, column: 9, scope: !14766)
!14771 = !DILocation(line: 535, column: 2, scope: !14766)
!14772 = distinct !DISubprogram(name: "reason_to_str", scope: !14668, file: !14668, line: 62, type: !14773, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14775)
!14773 = !DISubroutineType(types: !14774)
!14774 = !{!121, !32}
!14775 = !{!14776}
!14776 = !DILocalVariable(name: "reason", arg: 1, scope: !14772, file: !14668, line: 62, type: !32)
!14777 = !DILocation(line: 0, scope: !14772)
!14778 = !DILocation(line: 64, column: 2, scope: !14772)
!14779 = !DILocation(line: 0, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14772, file: !14668, line: 64, column: 18)
!14781 = !DILocation(line: 78, column: 1, scope: !14772)
!14782 = distinct !DISubprogram(name: "thread_name_get", scope: !14668, file: !14668, line: 51, type: !14783, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14785)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{!121, !14529}
!14785 = !{!14786, !14787}
!14786 = !DILocalVariable(name: "thread", arg: 1, scope: !14782, file: !14668, line: 51, type: !14529)
!14787 = !DILocalVariable(name: "thread_name", scope: !14782, file: !14668, line: 53, type: !121)
!14788 = !DILocation(line: 0, scope: !14782)
!14789 = !DILocation(line: 53, column: 36, scope: !14782)
!14790 = !DILocation(line: 53, column: 28, scope: !14782)
!14791 = !DILocation(line: 53, column: 47, scope: !14782)
!14792 = !DILocation(line: 55, column: 19, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14782, file: !14668, line: 55, column: 6)
!14794 = !DILocation(line: 55, column: 28, scope: !14793)
!14795 = !DILocation(line: 55, column: 32, scope: !14793)
!14796 = !DILocation(line: 55, column: 47, scope: !14793)
!14797 = !DILocation(line: 55, column: 6, scope: !14782)
!14798 = !DILocation(line: 57, column: 2, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14793, file: !14668, line: 55, column: 57)
!14800 = !DILocation(line: 59, column: 2, scope: !14782)
!14801 = distinct !DISubprogram(name: "k_thread_abort", scope: !3734, file: !3734, line: 188, type: !14802, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !14804)
!14802 = !DISubroutineType(types: !14803)
!14803 = !{null, !14769}
!14804 = !{!14805}
!14805 = !DILocalVariable(name: "thread", arg: 1, scope: !14801, file: !3734, line: 188, type: !14769)
!14806 = !DILocation(line: 0, scope: !14801)
!14807 = !DILocation(line: 197, column: 2, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14801, file: !3734, line: 197, column: 2)
!14809 = !{i64 2155062910}
!14810 = !DILocation(line: 198, column: 2, scope: !14801)
!14811 = !DILocation(line: 199, column: 1, scope: !14801)
!14812 = distinct !DISubprogram(name: "z_current_get", scope: !3734, file: !3734, line: 173, type: !14767, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3258, retainedNodes: !256)
!14813 = !DILocation(line: 180, column: 2, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14812, file: !3734, line: 180, column: 2)
!14815 = !{i64 2155062842}
!14816 = !DILocation(line: 181, column: 9, scope: !14812)
!14817 = !DILocation(line: 181, column: 2, scope: !14812)
!14818 = distinct !DISubprogram(name: "z_early_memset", scope: !2019, file: !2019, line: 108, type: !14819, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14821)
!14819 = !DISubroutineType(types: !14820)
!14820 = !{null, !106, !107, !137}
!14821 = !{!14822, !14823, !14824}
!14822 = !DILocalVariable(name: "dst", arg: 1, scope: !14818, file: !2019, line: 108, type: !106)
!14823 = !DILocalVariable(name: "c", arg: 2, scope: !14818, file: !2019, line: 108, type: !107)
!14824 = !DILocalVariable(name: "n", arg: 3, scope: !14818, file: !2019, line: 108, type: !137)
!14825 = !DILocation(line: 0, scope: !14818)
!14826 = !DILocation(line: 110, column: 9, scope: !14818)
!14827 = !DILocation(line: 111, column: 1, scope: !14818)
!14828 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2019, file: !2019, line: 121, type: !14829, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14831)
!14829 = !DISubroutineType(types: !14830)
!14830 = !{null, !106, !13, !137}
!14831 = !{!14832, !14833, !14834}
!14832 = !DILocalVariable(name: "dst", arg: 1, scope: !14828, file: !2019, line: 121, type: !106)
!14833 = !DILocalVariable(name: "src", arg: 2, scope: !14828, file: !2019, line: 121, type: !13)
!14834 = !DILocalVariable(name: "n", arg: 3, scope: !14828, file: !2019, line: 121, type: !137)
!14835 = !DILocation(line: 0, scope: !14828)
!14836 = !DILocation(line: 123, column: 9, scope: !14828)
!14837 = !DILocation(line: 124, column: 1, scope: !14828)
!14838 = distinct !DISubprogram(name: "z_bss_zero", scope: !2019, file: !2019, line: 132, type: !337, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !256)
!14839 = !DILocation(line: 143, column: 2, scope: !14838)
!14840 = !DILocation(line: 168, column: 1, scope: !14838)
!14841 = distinct !DISubprogram(name: "z_init_cpu", scope: !2019, file: !2019, line: 372, type: !9899, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14842)
!14842 = !{!14843}
!14843 = !DILocalVariable(name: "id", arg: 1, scope: !14841, file: !2019, line: 372, type: !107)
!14844 = !DILocation(line: 0, scope: !14841)
!14845 = !DILocation(line: 374, column: 2, scope: !14841)
!14846 = !DILocation(line: 375, column: 34, scope: !14841)
!14847 = !DILocation(line: 375, column: 19, scope: !14841)
!14848 = !DILocation(line: 375, column: 31, scope: !14841)
!14849 = !DILocation(line: 376, column: 24, scope: !14841)
!14850 = !DILocation(line: 376, column: 19, scope: !14841)
!14851 = !DILocation(line: 376, column: 22, scope: !14841)
!14852 = !DILocation(line: 378, column: 26, scope: !14841)
!14853 = !DILocation(line: 378, column: 4, scope: !14841)
!14854 = !DILocation(line: 378, column: 50, scope: !14841)
!14855 = !DILocation(line: 377, column: 19, scope: !14841)
!14856 = !DILocation(line: 377, column: 29, scope: !14841)
!14857 = !DILocation(line: 384, column: 1, scope: !14841)
!14858 = distinct !DISubprogram(name: "init_idle_thread", scope: !2019, file: !2019, line: 343, type: !9899, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14859)
!14859 = !{!14860, !14861, !14862, !14865}
!14860 = !DILocalVariable(name: "i", arg: 1, scope: !14858, file: !2019, line: 343, type: !107)
!14861 = !DILocalVariable(name: "thread", scope: !14858, file: !2019, line: 345, type: !2111)
!14862 = !DILocalVariable(name: "stack", scope: !14858, file: !2019, line: 346, type: !14863)
!14863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14864, size: 32)
!14864 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !2225)
!14865 = !DILocalVariable(name: "tname", scope: !14858, file: !2019, line: 358, type: !283)
!14866 = !DILocation(line: 0, scope: !14858)
!14867 = !DILocation(line: 345, column: 29, scope: !14858)
!14868 = !DILocation(line: 346, column: 28, scope: !14858)
!14869 = !DILocation(line: 362, column: 37, scope: !14858)
!14870 = !DILocation(line: 362, column: 36, scope: !14858)
!14871 = !DILocation(line: 361, column: 2, scope: !14858)
!14872 = !DILocation(line: 365, column: 2, scope: !14858)
!14873 = !DILocation(line: 370, column: 1, scope: !14858)
!14874 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !319, file: !319, line: 331, type: !14875, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14877)
!14875 = !DISubroutineType(types: !14876)
!14876 = !{!283, !14863}
!14877 = !{!14878}
!14878 = !DILocalVariable(name: "sym", arg: 1, scope: !14874, file: !319, line: 331, type: !14863)
!14879 = !DILocation(line: 0, scope: !14874)
!14880 = !DILocation(line: 333, column: 21, scope: !14874)
!14881 = !DILocation(line: 333, column: 2, scope: !14874)
!14882 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14883, file: !14883, line: 155, type: !14884, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14886)
!14883 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14884 = !DISubroutineType(types: !14885)
!14885 = !{null, !2111}
!14886 = !{!14887}
!14887 = !DILocalVariable(name: "thread", arg: 1, scope: !14882, file: !14883, line: 155, type: !2111)
!14888 = !DILocation(line: 0, scope: !14882)
!14889 = !DILocation(line: 157, column: 15, scope: !14882)
!14890 = !DILocation(line: 157, column: 28, scope: !14882)
!14891 = !DILocation(line: 158, column: 1, scope: !14882)
!14892 = distinct !DISubprogram(name: "z_cstart", scope: !2019, file: !2019, line: 501, type: !337, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14893)
!14893 = !{!14894}
!14894 = !DILocalVariable(name: "dummy_thread", scope: !14892, file: !2019, line: 518, type: !2112)
!14895 = !DILocation(line: 507, column: 2, scope: !14892)
!14896 = !DILocation(line: 43, column: 14, scope: !14897, inlinedAt: !14901)
!14897 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14898, file: !14898, line: 40, type: !337, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14899)
!14898 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14899 = !{!14900}
!14900 = !DILocalVariable(name: "msp", scope: !14897, file: !14898, line: 42, type: !108)
!14901 = distinct !DILocation(line: 44, column: 2, scope: !14902, inlinedAt: !14904)
!14902 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14903, file: !14903, line: 42, type: !337, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !256)
!14903 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14904 = distinct !DILocation(line: 510, column: 2, scope: !14892)
!14905 = !DILocation(line: 43, column: 3, scope: !14897, inlinedAt: !14901)
!14906 = !DILocation(line: 43, column: 60, scope: !14897, inlinedAt: !14901)
!14907 = !DILocation(line: 0, scope: !14897, inlinedAt: !14901)
!14908 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14909, file: !7439, line: 1153, type: !108)
!14909 = distinct !DISubprogram(name: "__set_MSP", scope: !7439, file: !7439, line: 1153, type: !7530, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14910)
!14910 = !{!14908}
!14911 = !DILocation(line: 0, scope: !14909, inlinedAt: !14912)
!14912 = distinct !DILocation(line: 46, column: 2, scope: !14897, inlinedAt: !14901)
!14913 = !DILocation(line: 1155, column: 3, scope: !14909, inlinedAt: !14912)
!14914 = !{i64 3747278}
!14915 = !DILocation(line: 62, column: 11, scope: !14897, inlinedAt: !14901)
!14916 = !DILocation(line: 102, column: 2, scope: !14917, inlinedAt: !14918)
!14917 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8457, file: !8457, line: 97, type: !337, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !256)
!14918 = distinct !DILocation(line: 45, column: 2, scope: !14902, inlinedAt: !14904)
!14919 = !DILocation(line: 108, column: 2, scope: !14917, inlinedAt: !14918)
!14920 = !DILocation(line: 112, column: 2, scope: !14917, inlinedAt: !14918)
!14921 = !DILocation(line: 113, column: 2, scope: !14917, inlinedAt: !14918)
!14922 = !DILocation(line: 114, column: 2, scope: !14917, inlinedAt: !14918)
!14923 = !DILocation(line: 116, column: 2, scope: !14917, inlinedAt: !14918)
!14924 = !DILocation(line: 123, column: 13, scope: !14917, inlinedAt: !14918)
!14925 = !DILocation(line: 46, column: 2, scope: !14902, inlinedAt: !14904)
!14926 = !DILocation(line: 47, column: 2, scope: !14902, inlinedAt: !14904)
!14927 = !DILocation(line: 174, column: 12, scope: !14928, inlinedAt: !14929)
!14928 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8457, file: !8457, line: 169, type: !337, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !256)
!14929 = distinct !DILocation(line: 48, column: 2, scope: !14902, inlinedAt: !14904)
!14930 = !DILocation(line: 179, column: 12, scope: !14928, inlinedAt: !14929)
!14931 = !DILocation(line: 50, column: 2, scope: !14902, inlinedAt: !14904)
!14932 = !DILocation(line: 57, column: 2, scope: !14902, inlinedAt: !14904)
!14933 = !DILocation(line: 518, column: 2, scope: !14892)
!14934 = !DILocation(line: 518, column: 18, scope: !14892)
!14935 = !DILocation(line: 520, column: 2, scope: !14892)
!14936 = !DILocation(line: 523, column: 2, scope: !14892)
!14937 = !DILocation(line: 526, column: 2, scope: !14892)
!14938 = !DILocation(line: 527, column: 2, scope: !14892)
!14939 = !DILocation(line: 543, column: 24, scope: !14892)
!14940 = !DILocation(line: 543, column: 2, scope: !14892)
!14941 = !DILocation(line: 0, scope: !2249)
!14942 = !DILocation(line: 246, column: 15, scope: !2267)
!14943 = !DILocation(line: 246, column: 36, scope: !2266)
!14944 = !DILocation(line: 246, column: 2, scope: !2267)
!14945 = !DILocation(line: 247, column: 37, scope: !2265)
!14946 = !DILocation(line: 0, scope: !2265)
!14947 = !DILocation(line: 248, column: 19, scope: !2265)
!14948 = !DILocation(line: 248, column: 12, scope: !2265)
!14949 = !DILocation(line: 250, column: 11, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !2265, file: !2019, line: 250, column: 7)
!14951 = !DILocation(line: 250, column: 7, scope: !2265)
!14952 = !DILocation(line: 254, column: 11, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14954, file: !2019, line: 254, column: 8)
!14954 = distinct !DILexicalBlock(scope: !14950, file: !2019, line: 250, column: 20)
!14955 = !DILocation(line: 254, column: 8, scope: !14954)
!14956 = !DILocation(line: 255, column: 9, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14953, file: !2019, line: 254, column: 17)
!14958 = !DILocation(line: 258, column: 9, scope: !14957)
!14959 = !DILocation(line: 261, column: 28, scope: !14957)
!14960 = !DILocation(line: 261, column: 10, scope: !14957)
!14961 = !DILocation(line: 261, column: 17, scope: !14957)
!14962 = !DILocation(line: 261, column: 26, scope: !14957)
!14963 = !DILocation(line: 262, column: 4, scope: !14957)
!14964 = !DILocation(line: 263, column: 9, scope: !14954)
!14965 = !DILocation(line: 263, column: 16, scope: !14954)
!14966 = !DILocation(line: 263, column: 28, scope: !14954)
!14967 = !DILocation(line: 264, column: 3, scope: !14954)
!14968 = !DILocation(line: 246, column: 60, scope: !2266)
!14969 = distinct !{!14969, !14944, !14970}
!14970 = !DILocation(line: 265, column: 2, scope: !2267)
!14971 = !DILocation(line: 266, column: 1, scope: !2249)
!14972 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !644, file: !644, line: 1814, type: !7473, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14973)
!14973 = !{!14974, !14975}
!14974 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14972, file: !644, line: 1814, type: !920)
!14975 = !DILocalVariable(name: "priority", arg: 2, scope: !14972, file: !644, line: 1814, type: !108)
!14976 = !DILocation(line: 0, scope: !14972)
!14977 = !DILocation(line: 1822, column: 48, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14979, file: !644, line: 1821, column: 3)
!14979 = distinct !DILexicalBlock(scope: !14972, file: !644, line: 1816, column: 7)
!14980 = !DILocation(line: 1822, column: 32, scope: !14978)
!14981 = !DILocation(line: 1822, column: 40, scope: !14978)
!14982 = !DILocation(line: 1822, column: 5, scope: !14978)
!14983 = !DILocation(line: 1822, column: 46, scope: !14978)
!14984 = !DILocation(line: 1824, column: 1, scope: !14972)
!14985 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14903, file: !14903, line: 32, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!14986 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14987, file: !14987, line: 215, type: !14884, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !14988)
!14987 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14988 = !{!14989}
!14989 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14986, file: !14987, line: 215, type: !2111)
!14990 = !DILocation(line: 0, scope: !14986)
!14991 = !DILocation(line: 217, column: 21, scope: !14986)
!14992 = !DILocation(line: 217, column: 34, scope: !14986)
!14993 = !DILocation(line: 221, column: 21, scope: !14986)
!14994 = !DILocation(line: 221, column: 34, scope: !14986)
!14995 = !DILocation(line: 223, column: 27, scope: !14986)
!14996 = !DILocation(line: 223, column: 33, scope: !14986)
!14997 = !DILocation(line: 224, column: 27, scope: !14986)
!14998 = !DILocation(line: 224, column: 32, scope: !14986)
!14999 = !DILocation(line: 232, column: 16, scope: !14986)
!15000 = !DILocation(line: 232, column: 30, scope: !14986)
!15001 = !DILocation(line: 239, column: 24, scope: !14986)
!15002 = !DILocation(line: 240, column: 1, scope: !14986)
!15003 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2019, file: !2019, line: 399, type: !15004, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !15006)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{!283}
!15006 = !{!15007}
!15007 = !DILocalVariable(name: "stack_ptr", scope: !15003, file: !2019, line: 401, type: !283)
!15008 = !DILocation(line: 404, column: 2, scope: !15003)
!15009 = !DILocation(line: 416, column: 24, scope: !15003)
!15010 = !DILocation(line: 418, column: 14, scope: !15003)
!15011 = !DILocation(line: 0, scope: !15003)
!15012 = !DILocation(line: 423, column: 2, scope: !15003)
!15013 = !DILocation(line: 424, column: 2, scope: !15003)
!15014 = !DILocation(line: 426, column: 2, scope: !15003)
!15015 = !DILocation(line: 428, column: 2, scope: !15003)
!15016 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2019, file: !2019, line: 432, type: !15017, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !15019)
!15017 = !DISubroutineType(types: !15018)
!15018 = !{null, !283}
!15019 = !{!15020}
!15020 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15016, file: !2019, line: 432, type: !283)
!15021 = !DILocation(line: 0, scope: !15016)
!15022 = !DILocation(line: 435, column: 2, scope: !15016)
!15023 = !DILocation(line: 445, column: 2, scope: !15016)
!15024 = distinct !DISubprogram(name: "bg_thread_main", scope: !2019, file: !2019, line: 277, type: !326, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2015, retainedNodes: !15025)
!15025 = !{!15026, !15027, !15028}
!15026 = !DILocalVariable(name: "unused1", arg: 1, scope: !15024, file: !2019, line: 277, type: !106)
!15027 = !DILocalVariable(name: "unused2", arg: 2, scope: !15024, file: !2019, line: 277, type: !106)
!15028 = !DILocalVariable(name: "unused3", arg: 3, scope: !15024, file: !2019, line: 277, type: !106)
!15029 = !DILocation(line: 0, scope: !15024)
!15030 = !DILocation(line: 291, column: 20, scope: !15024)
!15031 = !DILocation(line: 293, column: 2, scope: !15024)
!15032 = !DILocation(line: 297, column: 2, scope: !15024)
!15033 = !DILocation(line: 305, column: 2, scope: !15024)
!15034 = !DILocation(line: 307, column: 2, scope: !15024)
!15035 = !DILocation(line: 330, column: 8, scope: !15024)
!15036 = !DILocation(line: 333, column: 34, scope: !15024)
!15037 = !DILocation(line: 339, column: 1, scope: !15024)
!15038 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2280, file: !2280, line: 45, type: !15039, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15047)
!15039 = !DISubroutineType(types: !15040)
!15040 = !{null, !15041, !106}
!15041 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !142, line: 103, baseType: !15042)
!15042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15043, size: 32)
!15043 = !DISubroutineType(types: !15044)
!15044 = !{null, !15045, !106}
!15045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15046, size: 32)
!15046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2285)
!15047 = !{!15048, !15049}
!15048 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15038, file: !2280, line: 45, type: !15041)
!15049 = !DILocalVariable(name: "user_data", arg: 2, scope: !15038, file: !2280, line: 45, type: !106)
!15050 = !DILocation(line: 0, scope: !15038)
!15051 = !DILocation(line: 71, column: 1, scope: !15038)
!15052 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2280, file: !2280, line: 73, type: !15039, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15053)
!15053 = !{!15054, !15055}
!15054 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15052, file: !2280, line: 73, type: !15041)
!15055 = !DILocalVariable(name: "user_data", arg: 2, scope: !15052, file: !2280, line: 73, type: !106)
!15056 = !DILocation(line: 0, scope: !15052)
!15057 = !DILocation(line: 95, column: 1, scope: !15052)
!15058 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2280, file: !2280, line: 97, type: !8458, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !256)
!15059 = !DILocation(line: 1031, column: 3, scope: !15060, inlinedAt: !15063)
!15060 = distinct !DISubprogram(name: "__get_IPSR", scope: !7439, file: !7439, line: 1027, type: !7520, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15061)
!15061 = !{!15062}
!15062 = !DILocalVariable(name: "result", scope: !15060, file: !7439, line: 1029, type: !108)
!15063 = distinct !DILocation(line: 48, column: 10, scope: !15064, inlinedAt: !15065)
!15064 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8457, file: !8457, line: 46, type: !8458, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !256)
!15065 = distinct !DILocation(line: 99, column: 9, scope: !15058)
!15066 = !{i64 3752929}
!15067 = !DILocation(line: 0, scope: !15060, inlinedAt: !15063)
!15068 = !DILocation(line: 48, column: 9, scope: !15064, inlinedAt: !15065)
!15069 = !DILocation(line: 99, column: 2, scope: !15058)
!15070 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2280, file: !2280, line: 106, type: !337, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !256)
!15071 = !DILocation(line: 108, column: 2, scope: !15070)
!15072 = !DILocation(line: 108, column: 17, scope: !15070)
!15073 = !DILocation(line: 108, column: 30, scope: !15070)
!15074 = !DILocation(line: 109, column: 1, scope: !15070)
!15075 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2280, file: !2280, line: 116, type: !337, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !256)
!15076 = !DILocation(line: 118, column: 2, scope: !15075)
!15077 = !DILocation(line: 118, column: 17, scope: !15075)
!15078 = !DILocation(line: 118, column: 30, scope: !15075)
!15079 = !DILocation(line: 119, column: 1, scope: !15075)
!15080 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2280, file: !2280, line: 126, type: !8458, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !256)
!15081 = !DILocation(line: 128, column: 10, scope: !15080)
!15082 = !DILocation(line: 128, column: 25, scope: !15080)
!15083 = !DILocation(line: 128, column: 38, scope: !15080)
!15084 = !DILocation(line: 128, column: 53, scope: !15080)
!15085 = !DILocation(line: 128, column: 2, scope: !15080)
!15086 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2280, file: !2280, line: 187, type: !15087, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15089)
!15087 = !DISubroutineType(types: !15088)
!15088 = !{!107, !2284, !121}
!15089 = !{!15090, !15091}
!15090 = !DILocalVariable(name: "thread", arg: 1, scope: !15086, file: !2280, line: 187, type: !2284)
!15091 = !DILocalVariable(name: "value", arg: 2, scope: !15086, file: !2280, line: 187, type: !121)
!15092 = !DILocation(line: 0, scope: !15086)
!15093 = !DILocation(line: 206, column: 2, scope: !15086)
!15094 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2280, file: !2280, line: 238, type: !15095, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15097)
!15095 = !DISubroutineType(types: !15096)
!15096 = !{!121, !2284}
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "thread", arg: 1, scope: !15094, file: !2280, line: 238, type: !2284)
!15099 = !DILocation(line: 0, scope: !15094)
!15100 = !DILocation(line: 244, column: 2, scope: !15094)
!15101 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2280, file: !2280, line: 248, type: !15102, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15104)
!15102 = !DISubroutineType(types: !15103)
!15103 = !{!107, !2283, !283, !137}
!15104 = !{!15105, !15106, !15107}
!15105 = !DILocalVariable(name: "thread", arg: 1, scope: !15101, file: !2280, line: 248, type: !2283)
!15106 = !DILocalVariable(name: "buf", arg: 2, scope: !15101, file: !2280, line: 248, type: !283)
!15107 = !DILocalVariable(name: "size", arg: 3, scope: !15101, file: !2280, line: 248, type: !137)
!15108 = !DILocation(line: 0, scope: !15101)
!15109 = !DILocation(line: 257, column: 2, scope: !15101)
!15110 = !DILocation(line: 0, scope: !2279)
!15111 = !DILocation(line: 281, column: 11, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !2279, file: !2280, line: 281, column: 6)
!15113 = !DILocation(line: 281, column: 20, scope: !15112)
!15114 = !DILocation(line: 275, column: 45, scope: !2279)
!15115 = !DILocation(line: 285, column: 10, scope: !2279)
!15116 = !DILocation(line: 0, scope: !2400)
!15117 = !DILocation(line: 293, column: 39, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !2400, file: !2280, line: 293, column: 2)
!15119 = !DILocation(line: 293, column: 2, scope: !2400)
!15120 = !DILocation(line: 273, column: 14, scope: !2279)
!15121 = !DILocation(line: 309, column: 2, scope: !2279)
!15122 = !DILocation(line: 309, column: 11, scope: !2279)
!15123 = !DILocation(line: 311, column: 2, scope: !2279)
!15124 = !DILocation(line: 293, column: 26, scope: !15118)
!15125 = !DILocation(line: 294, column: 9, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15118, file: !2280, line: 293, column: 54)
!15127 = !DILocation(line: 295, column: 21, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15126, file: !2280, line: 295, column: 7)
!15129 = !DILocation(line: 295, column: 28, scope: !15128)
!15130 = !DILocation(line: 295, column: 7, scope: !15126)
!15131 = !DILocation(line: 299, column: 25, scope: !15126)
!15132 = !DILocation(line: 299, column: 41, scope: !15126)
!15133 = !DILocation(line: 300, column: 7, scope: !15126)
!15134 = !DILocation(line: 300, column: 26, scope: !15126)
!15135 = !DILocation(line: 299, column: 10, scope: !15126)
!15136 = !DILocation(line: 299, column: 7, scope: !15126)
!15137 = !DILocation(line: 302, column: 16, scope: !15126)
!15138 = !DILocation(line: 304, column: 20, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15126, file: !2280, line: 304, column: 7)
!15140 = !DILocation(line: 304, column: 7, scope: !15126)
!15141 = !DILocation(line: 305, column: 26, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15139, file: !2280, line: 304, column: 26)
!15143 = !DILocation(line: 305, column: 42, scope: !15142)
!15144 = !DILocation(line: 305, column: 11, scope: !15142)
!15145 = !DILocation(line: 305, column: 8, scope: !15142)
!15146 = !DILocation(line: 306, column: 3, scope: !15142)
!15147 = !DILocation(line: 293, column: 50, scope: !15118)
!15148 = !DILocation(line: 312, column: 1, scope: !2279)
!15149 = distinct !DISubprogram(name: "copy_bytes", scope: !2280, file: !2280, line: 261, type: !15150, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15152)
!15150 = !DISubroutineType(types: !15151)
!15151 = !{!137, !283, !137, !121, !137}
!15152 = !{!15153, !15154, !15155, !15156, !15157}
!15153 = !DILocalVariable(name: "dest", arg: 1, scope: !15149, file: !2280, line: 261, type: !283)
!15154 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15149, file: !2280, line: 261, type: !137)
!15155 = !DILocalVariable(name: "src", arg: 3, scope: !15149, file: !2280, line: 261, type: !121)
!15156 = !DILocalVariable(name: "src_size", arg: 4, scope: !15149, file: !2280, line: 261, type: !137)
!15157 = !DILocalVariable(name: "bytes_to_copy", scope: !15149, file: !2280, line: 263, type: !137)
!15158 = !DILocation(line: 0, scope: !15149)
!15159 = !DILocation(line: 265, column: 18, scope: !15149)
!15160 = !DILocation(line: 266, column: 2, scope: !15149)
!15161 = !DILocation(line: 268, column: 2, scope: !15149)
!15162 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2280, file: !2280, line: 383, type: !15163, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15165)
!15163 = !DISubroutineType(types: !15164)
!15164 = !{null, !2284}
!15165 = !{!15166}
!15166 = !DILocalVariable(name: "thread", arg: 1, scope: !15162, file: !2280, line: 383, type: !2284)
!15167 = !DILocation(line: 0, scope: !15162)
!15168 = !DILocation(line: 387, column: 2, scope: !15162)
!15169 = !DILocation(line: 388, column: 1, scope: !15162)
!15170 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2280, file: !2280, line: 528, type: !15171, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15178)
!15171 = !DISubroutineType(types: !15172)
!15172 = !{!283, !2284, !15173, !137, !324, !106, !106, !106, !107, !108, !121}
!15173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15174, size: 32)
!15174 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !317, line: 44, baseType: !15175)
!15175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !319, line: 47, size: 8, elements: !15176)
!15176 = !{!15177}
!15177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15175, file: !319, line: 48, baseType: !123, size: 8)
!15178 = !{!15179, !15180, !15181, !15182, !15183, !15184, !15185, !15186, !15187, !15188, !15189}
!15179 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15170, file: !2280, line: 528, type: !2284)
!15180 = !DILocalVariable(name: "stack", arg: 2, scope: !15170, file: !2280, line: 529, type: !15173)
!15181 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15170, file: !2280, line: 529, type: !137)
!15182 = !DILocalVariable(name: "entry", arg: 4, scope: !15170, file: !2280, line: 530, type: !324)
!15183 = !DILocalVariable(name: "p1", arg: 5, scope: !15170, file: !2280, line: 531, type: !106)
!15184 = !DILocalVariable(name: "p2", arg: 6, scope: !15170, file: !2280, line: 531, type: !106)
!15185 = !DILocalVariable(name: "p3", arg: 7, scope: !15170, file: !2280, line: 531, type: !106)
!15186 = !DILocalVariable(name: "prio", arg: 8, scope: !15170, file: !2280, line: 532, type: !107)
!15187 = !DILocalVariable(name: "options", arg: 9, scope: !15170, file: !2280, line: 532, type: !108)
!15188 = !DILocalVariable(name: "name", arg: 10, scope: !15170, file: !2280, line: 532, type: !121)
!15189 = !DILocalVariable(name: "stack_ptr", scope: !15170, file: !2280, line: 534, type: !283)
!15190 = !DILocation(line: 0, scope: !15170)
!15191 = !DILocation(line: 550, column: 28, scope: !15170)
!15192 = !DILocation(line: 550, column: 2, scope: !15170)
!15193 = !DILocation(line: 553, column: 34, scope: !15170)
!15194 = !DILocation(line: 553, column: 2, scope: !15170)
!15195 = !DILocation(line: 554, column: 14, scope: !15170)
!15196 = !DILocation(line: 564, column: 2, scope: !15170)
!15197 = !DILocation(line: 567, column: 14, scope: !15170)
!15198 = !DILocation(line: 567, column: 24, scope: !15170)
!15199 = !DILocation(line: 612, column: 7, scope: !15200)
!15200 = distinct !DILexicalBlock(scope: !15170, file: !2280, line: 612, column: 6)
!15201 = !DILocation(line: 612, column: 6, scope: !15170)
!15202 = !DILocation(line: 627, column: 40, scope: !15170)
!15203 = !DILocation(line: 637, column: 2, scope: !15170)
!15204 = !DILocation(line: 613, column: 15, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15200, file: !2280, line: 612, column: 17)
!15206 = !DILocation(line: 613, column: 29, scope: !15205)
!15207 = !DILocation(line: 638, column: 1, scope: !15170)
!15208 = distinct !DISubprogram(name: "z_waitq_init", scope: !15209, file: !15209, line: 47, type: !15210, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15212)
!15209 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15210 = !DISubroutineType(types: !15211)
!15211 = !{null, !2315}
!15212 = !{!15213}
!15213 = !DILocalVariable(name: "w", arg: 1, scope: !15208, file: !15209, line: 47, type: !2315)
!15214 = !DILocation(line: 0, scope: !15208)
!15215 = !DILocation(line: 49, column: 21, scope: !15208)
!15216 = !DILocation(line: 49, column: 2, scope: !15208)
!15217 = !DILocation(line: 50, column: 1, scope: !15208)
!15218 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2280, file: !2280, line: 791, type: !15219, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15222)
!15219 = !DISubroutineType(types: !15220)
!15220 = !{null, !15221, !107, !108, !32}
!15221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!15222 = !{!15223, !15224, !15225, !15226}
!15223 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15218, file: !2280, line: 791, type: !15221)
!15224 = !DILocalVariable(name: "priority", arg: 2, scope: !15218, file: !2280, line: 791, type: !107)
!15225 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15218, file: !2280, line: 792, type: !108)
!15226 = !DILocalVariable(name: "options", arg: 4, scope: !15218, file: !2280, line: 792, type: !32)
!15227 = !DILocation(line: 0, scope: !15218)
!15228 = !DILocation(line: 795, column: 15, scope: !15218)
!15229 = !DILocation(line: 795, column: 25, scope: !15218)
!15230 = !DILocation(line: 796, column: 30, scope: !15218)
!15231 = !DILocation(line: 796, column: 15, scope: !15218)
!15232 = !DILocation(line: 796, column: 28, scope: !15218)
!15233 = !DILocation(line: 797, column: 30, scope: !15218)
!15234 = !DILocation(line: 797, column: 15, scope: !15218)
!15235 = !DILocation(line: 797, column: 28, scope: !15218)
!15236 = !DILocation(line: 799, column: 22, scope: !15218)
!15237 = !DILocation(line: 799, column: 15, scope: !15218)
!15238 = !DILocation(line: 799, column: 20, scope: !15218)
!15239 = !DILocation(line: 801, column: 15, scope: !15218)
!15240 = !DILocation(line: 801, column: 28, scope: !15218)
!15241 = !DILocation(line: 814, column: 2, scope: !15218)
!15242 = !DILocation(line: 815, column: 1, scope: !15218)
!15243 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2280, file: !2280, line: 449, type: !15244, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15246)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{!283, !2284, !15173, !137}
!15246 = !{!15247, !15248, !15249, !15250, !15251, !15252, !15253, !15254}
!15247 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15243, file: !2280, line: 449, type: !2284)
!15248 = !DILocalVariable(name: "stack", arg: 2, scope: !15243, file: !2280, line: 450, type: !15173)
!15249 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15243, file: !2280, line: 450, type: !137)
!15250 = !DILocalVariable(name: "stack_obj_size", scope: !15243, file: !2280, line: 452, type: !137)
!15251 = !DILocalVariable(name: "stack_buf_size", scope: !15243, file: !2280, line: 452, type: !137)
!15252 = !DILocalVariable(name: "stack_ptr", scope: !15243, file: !2280, line: 453, type: !283)
!15253 = !DILocalVariable(name: "stack_buf_start", scope: !15243, file: !2280, line: 453, type: !283)
!15254 = !DILocalVariable(name: "delta", scope: !15243, file: !2280, line: 454, type: !137)
!15255 = !DILocation(line: 0, scope: !15243)
!15256 = !DILocation(line: 465, column: 20, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15243, file: !2280, line: 463, column: 2)
!15258 = !DILocation(line: 466, column: 21, scope: !15257)
!15259 = !DILocation(line: 473, column: 28, scope: !15243)
!15260 = !DILocation(line: 514, column: 33, scope: !15243)
!15261 = !DILocation(line: 514, column: 25, scope: !15243)
!15262 = !DILocation(line: 514, column: 31, scope: !15243)
!15263 = !DILocation(line: 515, column: 25, scope: !15243)
!15264 = !DILocation(line: 515, column: 30, scope: !15243)
!15265 = !DILocation(line: 516, column: 25, scope: !15243)
!15266 = !DILocation(line: 516, column: 31, scope: !15243)
!15267 = !DILocation(line: 520, column: 2, scope: !15243)
!15268 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !319, file: !319, line: 331, type: !15269, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15271)
!15269 = !DISubroutineType(types: !15270)
!15270 = !{!283, !15173}
!15271 = !{!15272}
!15272 = !DILocalVariable(name: "sym", arg: 1, scope: !15268, file: !319, line: 331, type: !15173)
!15273 = !DILocation(line: 0, scope: !15268)
!15274 = !DILocation(line: 333, column: 21, scope: !15268)
!15275 = !DILocation(line: 333, column: 2, scope: !15268)
!15276 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15277, file: !15277, line: 40, type: !15278, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15280)
!15277 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15278 = !DISubroutineType(types: !15279)
!15279 = !{null, !15221}
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15276, file: !15277, line: 40, type: !15221)
!15282 = !DILocation(line: 0, scope: !15276)
!15283 = !DILocation(line: 42, column: 31, scope: !15276)
!15284 = !DILocation(line: 42, column: 2, scope: !15276)
!15285 = !DILocation(line: 43, column: 1, scope: !15276)
!15286 = distinct !DISubprogram(name: "z_init_timeout", scope: !15277, file: !15277, line: 25, type: !2341, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15287)
!15287 = !{!15288}
!15288 = !DILocalVariable(name: "to", arg: 1, scope: !15286, file: !15277, line: 25, type: !2343)
!15289 = !DILocation(line: 0, scope: !15286)
!15290 = !DILocation(line: 27, column: 22, scope: !15286)
!15291 = !DILocation(line: 27, column: 2, scope: !15286)
!15292 = !DILocation(line: 28, column: 1, scope: !15286)
!15293 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !15294, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15296)
!15294 = !DISubroutineType(types: !15295)
!15295 = !{null, !2387}
!15296 = !{!15297}
!15297 = !DILocalVariable(name: "node", arg: 1, scope: !15293, file: !151, line: 211, type: !2387)
!15298 = !DILocation(line: 0, scope: !15293)
!15299 = !DILocation(line: 213, column: 8, scope: !15293)
!15300 = !DILocation(line: 213, column: 13, scope: !15293)
!15301 = !DILocation(line: 214, column: 8, scope: !15293)
!15302 = !DILocation(line: 214, column: 13, scope: !15293)
!15303 = !DILocation(line: 215, column: 1, scope: !15293)
!15304 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !15305, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15308)
!15305 = !DISubroutineType(types: !15306)
!15306 = !{null, !15307}
!15307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!15308 = !{!15309}
!15309 = !DILocalVariable(name: "list", arg: 1, scope: !15304, file: !151, line: 197, type: !15307)
!15310 = !DILocation(line: 0, scope: !15304)
!15311 = !DILocation(line: 199, column: 8, scope: !15304)
!15312 = !DILocation(line: 199, column: 13, scope: !15304)
!15313 = !DILocation(line: 200, column: 8, scope: !15304)
!15314 = !DILocation(line: 200, column: 13, scope: !15304)
!15315 = !DILocation(line: 201, column: 1, scope: !15304)
!15316 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2280, file: !2280, line: 641, type: !15317, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15323)
!15317 = !DISubroutineType(types: !15318)
!15318 = !{!2283, !2284, !15173, !137, !324, !106, !106, !106, !107, !108, !15319}
!15319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !15320)
!15320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !15321)
!15321 = !{!15322}
!15322 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15320, file: !103, line: 66, baseType: !102, size: 64)
!15323 = !{!15324, !15325, !15326, !15327, !15328, !15329, !15330, !15331, !15332, !15333}
!15324 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15316, file: !2280, line: 641, type: !2284)
!15325 = !DILocalVariable(name: "stack", arg: 2, scope: !15316, file: !2280, line: 642, type: !15173)
!15326 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15316, file: !2280, line: 643, type: !137)
!15327 = !DILocalVariable(name: "entry", arg: 4, scope: !15316, file: !2280, line: 643, type: !324)
!15328 = !DILocalVariable(name: "p1", arg: 5, scope: !15316, file: !2280, line: 644, type: !106)
!15329 = !DILocalVariable(name: "p2", arg: 6, scope: !15316, file: !2280, line: 644, type: !106)
!15330 = !DILocalVariable(name: "p3", arg: 7, scope: !15316, file: !2280, line: 644, type: !106)
!15331 = !DILocalVariable(name: "prio", arg: 8, scope: !15316, file: !2280, line: 645, type: !107)
!15332 = !DILocalVariable(name: "options", arg: 9, scope: !15316, file: !2280, line: 645, type: !108)
!15333 = !DILocalVariable(name: "delay", arg: 10, scope: !15316, file: !2280, line: 645, type: !15319)
!15334 = !DILocation(line: 0, scope: !15316)
!15335 = !DILocation(line: 649, column: 2, scope: !15316)
!15336 = !DILocation(line: 652, column: 7, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15316, file: !2280, line: 652, column: 6)
!15338 = !DILocation(line: 652, column: 6, scope: !15316)
!15339 = !DILocation(line: 653, column: 3, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15337, file: !2280, line: 652, column: 39)
!15341 = !DILocation(line: 654, column: 2, scope: !15340)
!15342 = !DILocation(line: 656, column: 2, scope: !15316)
!15343 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2280, file: !2280, line: 401, type: !15344, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15346)
!15344 = !DISubroutineType(types: !15345)
!15345 = !{null, !2284, !15319}
!15346 = !{!15347, !15348}
!15347 = !DILocalVariable(name: "thread", arg: 1, scope: !15343, file: !2280, line: 401, type: !2284)
!15348 = !DILocalVariable(name: "delay", arg: 2, scope: !15343, file: !2280, line: 401, type: !15319)
!15349 = !DILocation(line: 0, scope: !15343)
!15350 = !DILocation(line: 404, column: 6, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15343, file: !2280, line: 404, column: 6)
!15352 = !DILocation(line: 404, column: 6, scope: !15343)
!15353 = !DILocation(line: 405, column: 3, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15351, file: !2280, line: 404, column: 38)
!15355 = !DILocation(line: 406, column: 2, scope: !15354)
!15356 = !DILocation(line: 407, column: 3, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15351, file: !2280, line: 406, column: 9)
!15358 = !DILocation(line: 413, column: 1, scope: !15343)
!15359 = distinct !DISubprogram(name: "k_thread_start", scope: !3734, file: !3734, line: 205, type: !15360, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15362)
!15360 = !DISubroutineType(types: !15361)
!15361 = !{null, !2283}
!15362 = !{!15363}
!15363 = !DILocalVariable(name: "thread", arg: 1, scope: !15359, file: !3734, line: 205, type: !2283)
!15364 = !DILocation(line: 0, scope: !15359)
!15365 = !DILocation(line: 214, column: 2, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15359, file: !3734, line: 214, column: 2)
!15367 = !{i64 2155088134}
!15368 = !DILocation(line: 215, column: 2, scope: !15359)
!15369 = !DILocation(line: 216, column: 1, scope: !15359)
!15370 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15277, file: !15277, line: 47, type: !15344, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15371)
!15371 = !{!15372, !15373}
!15372 = !DILocalVariable(name: "thread", arg: 1, scope: !15370, file: !15277, line: 47, type: !2284)
!15373 = !DILocalVariable(name: "ticks", arg: 2, scope: !15370, file: !15277, line: 47, type: !15319)
!15374 = !DILocation(line: 0, scope: !15370)
!15375 = !DILocation(line: 49, column: 30, scope: !15370)
!15376 = !DILocation(line: 49, column: 2, scope: !15370)
!15377 = !DILocation(line: 50, column: 1, scope: !15370)
!15378 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2280, file: !2280, line: 748, type: !337, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15379)
!15379 = !{!15380, !15397}
!15380 = !DILocalVariable(name: "thread_data", scope: !15381, file: !2280, line: 750, type: !15382)
!15381 = distinct !DILexicalBlock(scope: !15378, file: !2280, line: 750, column: 2)
!15382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15383, size: 32)
!15383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !142, line: 620, size: 384, elements: !15384)
!15384 = !{!15385, !15386, !15387, !15388, !15389, !15390, !15391, !15392, !15393, !15394, !15395, !15396}
!15385 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15383, file: !142, line: 621, baseType: !2284, size: 32)
!15386 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15383, file: !142, line: 622, baseType: !15173, size: 32, offset: 32)
!15387 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15383, file: !142, line: 623, baseType: !32, size: 32, offset: 64)
!15388 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15383, file: !142, line: 624, baseType: !324, size: 32, offset: 96)
!15389 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15383, file: !142, line: 625, baseType: !106, size: 32, offset: 128)
!15390 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15383, file: !142, line: 626, baseType: !106, size: 32, offset: 160)
!15391 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15383, file: !142, line: 627, baseType: !106, size: 32, offset: 192)
!15392 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15383, file: !142, line: 628, baseType: !107, size: 32, offset: 224)
!15393 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15383, file: !142, line: 629, baseType: !108, size: 32, offset: 256)
!15394 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15383, file: !142, line: 630, baseType: !334, size: 32, offset: 288)
!15395 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15383, file: !142, line: 631, baseType: !336, size: 32, offset: 320)
!15396 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15383, file: !142, line: 632, baseType: !121, size: 32, offset: 352)
!15397 = !DILocalVariable(name: "thread_data", scope: !15398, file: !2280, line: 781, type: !15382)
!15398 = distinct !DILexicalBlock(scope: !15378, file: !2280, line: 781, column: 2)
!15399 = !DILocation(line: 0, scope: !15381)
!15400 = !DILocation(line: 750, column: 2, scope: !15381)
!15401 = !DILocation(line: 780, column: 2, scope: !15378)
!15402 = !DILocation(line: 0, scope: !15398)
!15403 = !DILocation(line: 781, column: 2, scope: !15398)
!15404 = !DILocation(line: 752, column: 17, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15406, file: !2280, line: 750, column: 38)
!15406 = distinct !DILexicalBlock(scope: !15381, file: !2280, line: 750, column: 2)
!15407 = !DILocation(line: 753, column: 17, scope: !15405)
!15408 = !DILocation(line: 754, column: 17, scope: !15405)
!15409 = !DILocation(line: 755, column: 17, scope: !15405)
!15410 = !DILocation(line: 756, column: 17, scope: !15405)
!15411 = !DILocation(line: 757, column: 17, scope: !15405)
!15412 = !DILocation(line: 758, column: 17, scope: !15405)
!15413 = !DILocation(line: 759, column: 17, scope: !15405)
!15414 = !DILocation(line: 760, column: 17, scope: !15405)
!15415 = !DILocation(line: 751, column: 3, scope: !15405)
!15416 = !DILocation(line: 763, column: 16, scope: !15405)
!15417 = !DILocation(line: 763, column: 29, scope: !15405)
!15418 = !DILocation(line: 763, column: 39, scope: !15405)
!15419 = !DILocation(line: 750, column: 2, scope: !15406)
!15420 = !DILocation(line: 750, column: 2, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15406, file: !2280, line: 750, column: 2)
!15422 = distinct !{!15422, !15400, !15423}
!15423 = !DILocation(line: 764, column: 2, scope: !15381)
!15424 = !DILocation(line: 787, column: 2, scope: !15378)
!15425 = !DILocation(line: 788, column: 1, scope: !15378)
!15426 = !DILocation(line: 782, column: 20, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15428, file: !2280, line: 782, column: 7)
!15428 = distinct !DILexicalBlock(scope: !15429, file: !2280, line: 781, column: 38)
!15429 = distinct !DILexicalBlock(scope: !15398, file: !2280, line: 781, column: 2)
!15430 = !DILocation(line: 782, column: 31, scope: !15427)
!15431 = !DILocation(line: 782, column: 7, scope: !15428)
!15432 = !DILocation(line: 783, column: 37, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15427, file: !2280, line: 782, column: 51)
!15434 = !DILocation(line: 784, column: 10, scope: !15433)
!15435 = !DILocation(line: 783, column: 4, scope: !15433)
!15436 = !DILocation(line: 785, column: 3, scope: !15433)
!15437 = !DILocation(line: 781, column: 2, scope: !15429)
!15438 = !DILocation(line: 781, column: 2, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15429, file: !2280, line: 781, column: 2)
!15440 = distinct !{!15440, !15403, !15441}
!15441 = !DILocation(line: 786, column: 2, scope: !15398)
!15442 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3571, file: !3571, line: 403, type: !3572, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15443)
!15443 = !{!15444}
!15444 = !DILocalVariable(name: "t", arg: 1, scope: !15442, file: !3571, line: 403, type: !109)
!15445 = !DILocation(line: 0, scope: !15442)
!15446 = !DILocalVariable(name: "t", arg: 1, scope: !15447, file: !3571, line: 102, type: !109)
!15447 = distinct !DISubprogram(name: "z_tmcvt", scope: !3571, file: !3571, line: 102, type: !3579, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15448)
!15448 = !{!15446, !15449, !15450, !15451, !15452, !15453, !15454, !15455, !15456, !15457, !15458}
!15449 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15447, file: !3571, line: 102, type: !108)
!15450 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15447, file: !3571, line: 103, type: !108)
!15451 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15447, file: !3571, line: 103, type: !136)
!15452 = !DILocalVariable(name: "result32", arg: 5, scope: !15447, file: !3571, line: 104, type: !136)
!15453 = !DILocalVariable(name: "round_up", arg: 6, scope: !15447, file: !3571, line: 104, type: !136)
!15454 = !DILocalVariable(name: "round_off", arg: 7, scope: !15447, file: !3571, line: 105, type: !136)
!15455 = !DILocalVariable(name: "mul_ratio", scope: !15447, file: !3571, line: 107, type: !136)
!15456 = !DILocalVariable(name: "div_ratio", scope: !15447, file: !3571, line: 109, type: !136)
!15457 = !DILocalVariable(name: "off", scope: !15447, file: !3571, line: 116, type: !109)
!15458 = !DILocalVariable(name: "rdivisor", scope: !15459, file: !3571, line: 119, type: !108)
!15459 = distinct !DILexicalBlock(scope: !15460, file: !3571, line: 118, column: 18)
!15460 = distinct !DILexicalBlock(scope: !15447, file: !3571, line: 118, column: 6)
!15461 = !DILocation(line: 0, scope: !15447, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 406, column: 9, scope: !15442)
!15463 = !DILocation(line: 145, column: 13, scope: !15464, inlinedAt: !15462)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !3571, line: 144, column: 10)
!15465 = distinct !DILexicalBlock(scope: !15466, file: !3571, line: 142, column: 7)
!15466 = distinct !DILexicalBlock(scope: !15467, file: !3571, line: 141, column: 24)
!15467 = distinct !DILexicalBlock(scope: !15468, file: !3571, line: 141, column: 13)
!15468 = distinct !DILexicalBlock(scope: !15447, file: !3571, line: 134, column: 6)
!15469 = !DILocation(line: 406, column: 2, scope: !15442)
!15470 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2280, file: !2280, line: 817, type: !4804, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15471)
!15471 = !{!15472, !15473, !15474, !15475}
!15472 = !DILocalVariable(name: "entry", arg: 1, scope: !15470, file: !2280, line: 817, type: !324)
!15473 = !DILocalVariable(name: "p1", arg: 2, scope: !15470, file: !2280, line: 818, type: !106)
!15474 = !DILocalVariable(name: "p2", arg: 3, scope: !15470, file: !2280, line: 818, type: !106)
!15475 = !DILocalVariable(name: "p3", arg: 4, scope: !15470, file: !2280, line: 818, type: !106)
!15476 = !DILocation(line: 0, scope: !15470)
!15477 = !DILocation(line: 822, column: 2, scope: !15470)
!15478 = !DILocation(line: 822, column: 17, scope: !15470)
!15479 = !DILocation(line: 822, column: 30, scope: !15470)
!15480 = !DILocation(line: 823, column: 2, scope: !15470)
!15481 = !DILocation(line: 845, column: 2, scope: !15470)
!15482 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2280, file: !2280, line: 888, type: !15483, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15485)
!15483 = !DISubroutineType(types: !15484)
!15484 = !{!107, !2284}
!15485 = !{!15486}
!15486 = !DILocalVariable(name: "thread", arg: 1, scope: !15482, file: !2280, line: 888, type: !2284)
!15487 = !DILocation(line: 0, scope: !15482)
!15488 = !DILocation(line: 893, column: 2, scope: !15482)
!15489 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2280, file: !2280, line: 897, type: !15490, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15492)
!15490 = !DISubroutineType(types: !15491)
!15491 = !{!107, !2284, !32}
!15492 = !{!15493, !15494}
!15493 = !DILocalVariable(name: "thread", arg: 1, scope: !15489, file: !2280, line: 897, type: !2284)
!15494 = !DILocalVariable(name: "options", arg: 2, scope: !15489, file: !2280, line: 897, type: !32)
!15495 = !DILocation(line: 0, scope: !15489)
!15496 = !DILocation(line: 902, column: 2, scope: !15489)
!15497 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2280, file: !2280, line: 1072, type: !15498, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15503)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{!107, !2283, !15500}
!15500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15501, size: 32)
!15501 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !168, line: 234, baseType: !15502)
!15502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !168, line: 192, elements: !256)
!15503 = !{!15504, !15505}
!15504 = !DILocalVariable(name: "thread", arg: 1, scope: !15497, file: !2280, line: 1072, type: !2283)
!15505 = !DILocalVariable(name: "stats", arg: 2, scope: !15497, file: !2280, line: 1073, type: !15500)
!15506 = !DILocation(line: 0, scope: !15497)
!15507 = !DILocation(line: 1075, column: 14, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15497, file: !2280, line: 1075, column: 6)
!15509 = !DILocation(line: 1075, column: 23, scope: !15508)
!15510 = !DILocation(line: 1086, column: 1, scope: !15497)
!15511 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2280, file: !2280, line: 1088, type: !15512, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15514)
!15512 = !DISubroutineType(types: !15513)
!15513 = !{!107, !15500}
!15514 = !{!15515}
!15515 = !DILocalVariable(name: "stats", arg: 1, scope: !15511, file: !2280, line: 1088, type: !15500)
!15516 = !DILocation(line: 0, scope: !15511)
!15517 = !DILocation(line: 1094, column: 12, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15511, file: !2280, line: 1094, column: 6)
!15519 = !DILocation(line: 1120, column: 1, scope: !15511)
!15520 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15521, file: !15521, line: 20, type: !337, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !256)
!15521 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15522 = !DILocation(line: 30, column: 2, scope: !15520)
!15523 = !DILocation(line: 31, column: 1, scope: !15520)
!15524 = distinct !DISubprogram(name: "idle", scope: !15521, file: !15521, line: 33, type: !326, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !15525)
!15525 = !{!15526, !15527, !15528}
!15526 = !DILocalVariable(name: "unused1", arg: 1, scope: !15524, file: !15521, line: 33, type: !106)
!15527 = !DILocalVariable(name: "unused2", arg: 2, scope: !15524, file: !15521, line: 33, type: !106)
!15528 = !DILocalVariable(name: "unused3", arg: 3, scope: !15524, file: !15521, line: 33, type: !106)
!15529 = !DILocation(line: 0, scope: !15524)
!15530 = !DILocation(line: 41, column: 2, scope: !15524)
!15531 = !DILocation(line: 55, column: 2, scope: !15532, inlinedAt: !15536)
!15532 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !15533)
!15533 = !{!15534, !15535}
!15534 = !DILocalVariable(name: "key", scope: !15532, file: !7118, line: 44, type: !32)
!15535 = !DILocalVariable(name: "tmp", scope: !15532, file: !7118, line: 53, type: !32)
!15536 = distinct !DILocation(line: 62, column: 10, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15524, file: !15521, line: 41, column: 15)
!15538 = !{i64 2279681}
!15539 = !DILocation(line: 0, scope: !15532, inlinedAt: !15536)
!15540 = !DILocation(line: 86, column: 3, scope: !15537)
!15541 = distinct !{!15541, !15530, !15542}
!15542 = !DILocation(line: 105, column: 2, scope: !15524)
!15543 = distinct !DISubprogram(name: "k_cpu_idle", scope: !142, file: !142, line: 5627, type: !337, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !256)
!15544 = !DILocation(line: 5629, column: 2, scope: !15543)
!15545 = !DILocation(line: 5630, column: 1, scope: !15543)
!15546 = !DISubprogram(name: "arch_cpu_idle", scope: !317, file: !317, line: 167, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!15547 = distinct !DISubprogram(name: "k_msgq_init", scope: !15548, file: !15548, line: 35, type: !15549, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15564)
!15548 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15549 = !DISubroutineType(types: !15550)
!15550 = !{null, !15551, !283, !137, !108}
!15551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15552, size: 32)
!15552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !142, line: 4204, size: 320, elements: !15553)
!15553 = !{!15554, !15555, !15556, !15557, !15558, !15559, !15560, !15561, !15562, !15563}
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15552, file: !142, line: 4206, baseType: !3314, size: 64)
!15555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15552, file: !142, line: 4208, baseType: !3376, offset: 64)
!15556 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15552, file: !142, line: 4210, baseType: !137, size: 32, offset: 64)
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15552, file: !142, line: 4212, baseType: !108, size: 32, offset: 96)
!15558 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !15552, file: !142, line: 4214, baseType: !283, size: 32, offset: 128)
!15559 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !15552, file: !142, line: 4216, baseType: !283, size: 32, offset: 160)
!15560 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !15552, file: !142, line: 4218, baseType: !283, size: 32, offset: 192)
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !15552, file: !142, line: 4220, baseType: !283, size: 32, offset: 224)
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15552, file: !142, line: 4222, baseType: !108, size: 32, offset: 256)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15552, file: !142, line: 4227, baseType: !190, size: 8, offset: 288)
!15564 = !{!15565, !15566, !15567, !15568}
!15565 = !DILocalVariable(name: "msgq", arg: 1, scope: !15547, file: !15548, line: 35, type: !15551)
!15566 = !DILocalVariable(name: "buffer", arg: 2, scope: !15547, file: !15548, line: 35, type: !283)
!15567 = !DILocalVariable(name: "msg_size", arg: 3, scope: !15547, file: !15548, line: 35, type: !137)
!15568 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !15547, file: !15548, line: 36, type: !108)
!15569 = !DILocation(line: 0, scope: !15547)
!15570 = !DILocation(line: 38, column: 8, scope: !15547)
!15571 = !DILocation(line: 38, column: 17, scope: !15547)
!15572 = !DILocation(line: 39, column: 8, scope: !15547)
!15573 = !DILocation(line: 39, column: 17, scope: !15547)
!15574 = !DILocation(line: 40, column: 8, scope: !15547)
!15575 = !DILocation(line: 40, column: 21, scope: !15547)
!15576 = !DILocation(line: 41, column: 40, scope: !15547)
!15577 = !DILocation(line: 41, column: 28, scope: !15547)
!15578 = !DILocation(line: 41, column: 8, scope: !15547)
!15579 = !DILocation(line: 41, column: 19, scope: !15547)
!15580 = !DILocation(line: 42, column: 8, scope: !15547)
!15581 = !DILocation(line: 42, column: 17, scope: !15547)
!15582 = !DILocation(line: 43, column: 8, scope: !15547)
!15583 = !DILocation(line: 43, column: 18, scope: !15547)
!15584 = !DILocation(line: 44, column: 8, scope: !15547)
!15585 = !DILocation(line: 44, column: 18, scope: !15547)
!15586 = !DILocation(line: 45, column: 8, scope: !15547)
!15587 = !DILocation(line: 45, column: 14, scope: !15547)
!15588 = !DILocation(line: 46, column: 22, scope: !15547)
!15589 = !DILocation(line: 46, column: 2, scope: !15547)
!15590 = !DILocation(line: 55, column: 1, scope: !15547)
!15591 = distinct !DISubprogram(name: "z_waitq_init", scope: !15209, file: !15209, line: 47, type: !15592, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15594)
!15592 = !DISubroutineType(types: !15593)
!15593 = !{null, !3313}
!15594 = !{!15595}
!15595 = !DILocalVariable(name: "w", arg: 1, scope: !15591, file: !15209, line: 47, type: !3313)
!15596 = !DILocation(line: 0, scope: !15591)
!15597 = !DILocation(line: 49, column: 21, scope: !15591)
!15598 = !DILocation(line: 49, column: 2, scope: !15591)
!15599 = !DILocation(line: 50, column: 1, scope: !15591)
!15600 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !15601, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15604)
!15601 = !DISubroutineType(types: !15602)
!15602 = !{null, !15603}
!15603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 32)
!15604 = !{!15605}
!15605 = !DILocalVariable(name: "list", arg: 1, scope: !15600, file: !151, line: 197, type: !15603)
!15606 = !DILocation(line: 0, scope: !15600)
!15607 = !DILocation(line: 199, column: 8, scope: !15600)
!15608 = !DILocation(line: 199, column: 13, scope: !15600)
!15609 = !DILocation(line: 200, column: 8, scope: !15600)
!15610 = !DILocation(line: 200, column: 13, scope: !15600)
!15611 = !DILocation(line: 201, column: 1, scope: !15600)
!15612 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !15548, file: !15548, line: 57, type: !15613, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15615)
!15613 = !DISubroutineType(types: !15614)
!15614 = !{!107, !15551, !137, !108}
!15615 = !{!15616, !15617, !15618, !15619, !15620, !15621}
!15616 = !DILocalVariable(name: "msgq", arg: 1, scope: !15612, file: !15548, line: 57, type: !15551)
!15617 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15612, file: !15548, line: 57, type: !137)
!15618 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15612, file: !15548, line: 58, type: !108)
!15619 = !DILocalVariable(name: "buffer", scope: !15612, file: !15548, line: 60, type: !106)
!15620 = !DILocalVariable(name: "ret", scope: !15612, file: !15548, line: 61, type: !107)
!15621 = !DILocalVariable(name: "total_size", scope: !15612, file: !15548, line: 62, type: !137)
!15622 = !DILocation(line: 0, scope: !15612)
!15623 = !DILocation(line: 62, column: 2, scope: !15612)
!15624 = !DILocation(line: 66, column: 6, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15612, file: !15548, line: 66, column: 6)
!15626 = !DILocation(line: 66, column: 6, scope: !15612)
!15627 = !DILocation(line: 69, column: 28, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15625, file: !15548, line: 68, column: 9)
!15629 = !DILocation(line: 69, column: 12, scope: !15628)
!15630 = !DILocation(line: 70, column: 14, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15628, file: !15548, line: 70, column: 7)
!15632 = !DILocation(line: 70, column: 7, scope: !15628)
!15633 = !DILocation(line: 71, column: 4, scope: !15634)
!15634 = distinct !DILexicalBlock(scope: !15631, file: !15548, line: 70, column: 23)
!15635 = !DILocation(line: 72, column: 10, scope: !15634)
!15636 = !DILocation(line: 72, column: 16, scope: !15634)
!15637 = !DILocation(line: 74, column: 3, scope: !15634)
!15638 = !DILocation(line: 0, scope: !15625)
!15639 = !DILocation(line: 82, column: 1, scope: !15612)
!15640 = !DILocation(line: 81, column: 2, scope: !15612)
!15641 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15642, file: !15642, line: 105, type: !15643, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15645)
!15642 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15643 = !DISubroutineType(types: !15644)
!15644 = !{!136, !137, !137, !2765}
!15645 = !{!15646, !15647, !15648}
!15646 = !DILocalVariable(name: "a", arg: 1, scope: !15641, file: !15642, line: 105, type: !137)
!15647 = !DILocalVariable(name: "b", arg: 2, scope: !15641, file: !15642, line: 105, type: !137)
!15648 = !DILocalVariable(name: "result", arg: 3, scope: !15641, file: !15642, line: 105, type: !2765)
!15649 = !DILocation(line: 0, scope: !15641)
!15650 = !DILocation(line: 107, column: 9, scope: !15641)
!15651 = !DILocation(line: 107, column: 2, scope: !15641)
!15652 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15653, file: !15653, line: 102, type: !15654, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15655)
!15653 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15654 = !DISubroutineType(types: !3257)
!15655 = !{!15656}
!15656 = !DILocalVariable(name: "size", arg: 1, scope: !15652, file: !15653, line: 102, type: !137)
!15657 = !DILocation(line: 0, scope: !15652)
!15658 = !DILocation(line: 104, column: 9, scope: !15652)
!15659 = !DILocation(line: 104, column: 2, scope: !15652)
!15660 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15653, file: !15653, line: 87, type: !15661, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!15661 = !DISubroutineType(types: !15662)
!15662 = !{!106, !137, !137}
!15663 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !15548, file: !15548, line: 95, type: !15664, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15666)
!15664 = !DISubroutineType(types: !15665)
!15665 = !{!107, !15551}
!15666 = !{!15667}
!15667 = !DILocalVariable(name: "msgq", arg: 1, scope: !15663, file: !15548, line: 95, type: !15551)
!15668 = !DILocation(line: 0, scope: !15663)
!15669 = !DILocation(line: 99, column: 2, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15663, file: !15548, line: 99, column: 2)
!15671 = !DILocation(line: 99, column: 2, scope: !15663)
!15672 = !DILocation(line: 105, column: 13, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15663, file: !15548, line: 105, column: 6)
!15674 = !DILocation(line: 105, column: 19, scope: !15673)
!15675 = !DILocation(line: 105, column: 40, scope: !15673)
!15676 = !DILocation(line: 105, column: 6, scope: !15663)
!15677 = !DILocation(line: 106, column: 16, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15673, file: !15548, line: 105, column: 47)
!15679 = !DILocation(line: 106, column: 3, scope: !15678)
!15680 = !DILocation(line: 107, column: 15, scope: !15678)
!15681 = !DILocation(line: 108, column: 2, scope: !15678)
!15682 = !DILocation(line: 113, column: 1, scope: !15663)
!15683 = distinct !DISubprogram(name: "z_waitq_head", scope: !15209, file: !15209, line: 52, type: !15684, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15686)
!15684 = !DISubroutineType(types: !15685)
!15685 = !{!3296, !3313}
!15686 = !{!15687}
!15687 = !DILocalVariable(name: "w", arg: 1, scope: !15683, file: !15209, line: 52, type: !3313)
!15688 = !DILocation(line: 0, scope: !15683)
!15689 = !DILocation(line: 54, column: 52, scope: !15683)
!15690 = !DILocation(line: 54, column: 28, scope: !15683)
!15691 = !DILocation(line: 54, column: 9, scope: !15683)
!15692 = !DILocation(line: 54, column: 2, scope: !15683)
!15693 = !DISubprogram(name: "k_free", scope: !142, file: !142, line: 5272, type: !7376, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!15694 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !15695, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15697)
!15695 = !DISubroutineType(types: !15696)
!15696 = !{!3281, !15603}
!15697 = !{!15698}
!15698 = !DILocalVariable(name: "list", arg: 1, scope: !15694, file: !151, line: 294, type: !15603)
!15699 = !DILocation(line: 0, scope: !15694)
!15700 = !DILocation(line: 296, column: 9, scope: !15694)
!15701 = !DILocation(line: 296, column: 49, scope: !15694)
!15702 = !DILocation(line: 296, column: 2, scope: !15694)
!15703 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !15704, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15706)
!15704 = !DISubroutineType(types: !15705)
!15705 = !{!136, !15603}
!15706 = !{!15707}
!15707 = !DILocalVariable(name: "list", arg: 1, scope: !15703, file: !151, line: 266, type: !15603)
!15708 = !DILocation(line: 0, scope: !15703)
!15709 = !DILocation(line: 268, column: 15, scope: !15703)
!15710 = !DILocation(line: 268, column: 20, scope: !15703)
!15711 = !DILocation(line: 268, column: 2, scope: !15703)
!15712 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !15548, file: !15548, line: 116, type: !15713, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15719)
!15713 = !DISubroutineType(types: !15714)
!15714 = !{!107, !15551, !13, !15715}
!15715 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !15716)
!15716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !15717)
!15717 = !{!15718}
!15718 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15716, file: !103, line: 66, baseType: !102, size: 64)
!15719 = !{!15720, !15721, !15722, !15723, !15724, !15729}
!15720 = !DILocalVariable(name: "msgq", arg: 1, scope: !15712, file: !15548, line: 116, type: !15551)
!15721 = !DILocalVariable(name: "data", arg: 2, scope: !15712, file: !15548, line: 116, type: !13)
!15722 = !DILocalVariable(name: "timeout", arg: 3, scope: !15712, file: !15548, line: 116, type: !15715)
!15723 = !DILocalVariable(name: "pending_thread", scope: !15712, file: !15548, line: 120, type: !3296)
!15724 = !DILocalVariable(name: "key", scope: !15712, file: !15548, line: 121, type: !15725)
!15725 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !15726)
!15726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !15727)
!15727 = !{!15728}
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15726, file: !255, line: 33, baseType: !107, size: 32)
!15729 = !DILocalVariable(name: "result", scope: !15712, file: !15548, line: 122, type: !107)
!15730 = !DILocation(line: 0, scope: !15712)
!15731 = !DILocation(line: 124, column: 27, scope: !15712)
!15732 = !DILocalVariable(name: "l", arg: 1, scope: !15733, file: !255, line: 136, type: !15736)
!15733 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !15734, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15737)
!15734 = !DISubroutineType(types: !15735)
!15735 = !{!15725, !15736}
!15736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 32)
!15737 = !{!15732, !15738}
!15738 = !DILocalVariable(name: "k", scope: !15733, file: !255, line: 139, type: !15725)
!15739 = !DILocation(line: 0, scope: !15733, inlinedAt: !15740)
!15740 = distinct !DILocation(line: 124, column: 8, scope: !15712)
!15741 = !DILocation(line: 55, column: 2, scope: !15742, inlinedAt: !15746)
!15742 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15743)
!15743 = !{!15744, !15745}
!15744 = !DILocalVariable(name: "key", scope: !15742, file: !7118, line: 44, type: !32)
!15745 = !DILocalVariable(name: "tmp", scope: !15742, file: !7118, line: 53, type: !32)
!15746 = distinct !DILocation(line: 145, column: 10, scope: !15733, inlinedAt: !15740)
!15747 = !{i64 2285818}
!15748 = !DILocation(line: 0, scope: !15742, inlinedAt: !15746)
!15749 = !DILocation(line: 128, column: 12, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15712, file: !15548, line: 128, column: 6)
!15751 = !DILocation(line: 128, column: 30, scope: !15750)
!15752 = !DILocation(line: 128, column: 22, scope: !15750)
!15753 = !DILocation(line: 128, column: 6, scope: !15712)
!15754 = !DILocation(line: 130, column: 49, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15750, file: !15548, line: 128, column: 40)
!15756 = !DILocation(line: 130, column: 20, scope: !15755)
!15757 = !DILocation(line: 131, column: 22, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15755, file: !15548, line: 131, column: 7)
!15759 = !DILocation(line: 131, column: 7, scope: !15755)
!15760 = !DILocation(line: 135, column: 38, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15758, file: !15548, line: 131, column: 31)
!15762 = !DILocation(line: 136, column: 17, scope: !15761)
!15763 = !DILocation(line: 135, column: 10, scope: !15761)
!15764 = !DILocalVariable(name: "thread", arg: 1, scope: !15765, file: !14903, line: 65, type: !3296)
!15765 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14903, file: !14903, line: 65, type: !15766, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15768)
!15766 = !DISubroutineType(types: !15767)
!15767 = !{null, !3296, !32}
!15768 = !{!15764, !15769}
!15769 = !DILocalVariable(name: "value", arg: 2, scope: !15765, file: !14903, line: 65, type: !32)
!15770 = !DILocation(line: 0, scope: !15765, inlinedAt: !15771)
!15771 = distinct !DILocation(line: 138, column: 4, scope: !15761)
!15772 = !DILocation(line: 67, column: 15, scope: !15765, inlinedAt: !15771)
!15773 = !DILocation(line: 67, column: 33, scope: !15765, inlinedAt: !15771)
!15774 = !DILocation(line: 139, column: 4, scope: !15761)
!15775 = !DILocation(line: 140, column: 4, scope: !15761)
!15776 = !DILocation(line: 141, column: 4, scope: !15761)
!15777 = !DILocation(line: 144, column: 23, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15758, file: !15548, line: 142, column: 10)
!15779 = !DILocation(line: 144, column: 46, scope: !15778)
!15780 = !DILocation(line: 144, column: 10, scope: !15778)
!15781 = !DILocation(line: 145, column: 29, scope: !15778)
!15782 = !DILocation(line: 145, column: 20, scope: !15778)
!15783 = !DILocation(line: 146, column: 33, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15778, file: !15548, line: 146, column: 8)
!15785 = !DILocation(line: 146, column: 24, scope: !15784)
!15786 = !DILocation(line: 146, column: 8, scope: !15778)
!15787 = !DILocation(line: 147, column: 29, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15784, file: !15548, line: 146, column: 45)
!15789 = !DILocation(line: 147, column: 21, scope: !15788)
!15790 = !DILocation(line: 148, column: 4, scope: !15788)
!15791 = !DILocation(line: 149, column: 19, scope: !15778)
!15792 = !DILocation(line: 155, column: 2, scope: !15755)
!15793 = !DILocation(line: 155, column: 13, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15750, file: !15548, line: 155, column: 13)
!15795 = !DILocation(line: 155, column: 13, scope: !15750)
!15796 = !DILocation(line: 162, column: 3, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15794, file: !15548, line: 158, column: 9)
!15798 = !DILocation(line: 162, column: 18, scope: !15797)
!15799 = !DILocation(line: 162, column: 28, scope: !15797)
!15800 = !DILocation(line: 164, column: 49, scope: !15797)
!15801 = !DILocation(line: 164, column: 12, scope: !15797)
!15802 = !DILocation(line: 166, column: 3, scope: !15797)
!15803 = !DILocation(line: 0, scope: !15750)
!15804 = !DILocalVariable(name: "key", arg: 2, scope: !15805, file: !255, line: 190, type: !15725)
!15805 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !15806, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15808)
!15806 = !DISubroutineType(types: !15807)
!15807 = !{null, !15736, !15725}
!15808 = !{!15809, !15804}
!15809 = !DILocalVariable(name: "l", arg: 1, scope: !15805, file: !255, line: 189, type: !15736)
!15810 = !DILocation(line: 0, scope: !15805, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 171, column: 2, scope: !15712)
!15812 = !DILocalVariable(name: "key", arg: 1, scope: !15813, file: !7118, line: 84, type: !32)
!15813 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15814)
!15814 = !{!15812}
!15815 = !DILocation(line: 0, scope: !15813, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 215, column: 2, scope: !15805, inlinedAt: !15811)
!15817 = !DILocation(line: 95, column: 2, scope: !15813, inlinedAt: !15816)
!15818 = !{i64 2286635}
!15819 = !DILocation(line: 173, column: 2, scope: !15712)
!15820 = !DILocation(line: 174, column: 1, scope: !15712)
!15821 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !15548, file: !15548, line: 188, type: !15822, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15830)
!15822 = !DISubroutineType(types: !15823)
!15823 = !{null, !15551, !15824}
!15824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15825, size: 32)
!15825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !142, line: 4259, size: 96, elements: !15826)
!15826 = !{!15827, !15828, !15829}
!15827 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15825, file: !142, line: 4261, baseType: !137, size: 32)
!15828 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15825, file: !142, line: 4263, baseType: !108, size: 32, offset: 32)
!15829 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15825, file: !142, line: 4265, baseType: !108, size: 32, offset: 64)
!15830 = !{!15831, !15832}
!15831 = !DILocalVariable(name: "msgq", arg: 1, scope: !15821, file: !15548, line: 188, type: !15551)
!15832 = !DILocalVariable(name: "attrs", arg: 2, scope: !15821, file: !15548, line: 188, type: !15824)
!15833 = !DILocation(line: 0, scope: !15821)
!15834 = !DILocation(line: 190, column: 26, scope: !15821)
!15835 = !DILocation(line: 190, column: 9, scope: !15821)
!15836 = !DILocation(line: 190, column: 18, scope: !15821)
!15837 = !DILocation(line: 191, column: 26, scope: !15821)
!15838 = !DILocation(line: 191, column: 9, scope: !15821)
!15839 = !DILocation(line: 191, column: 18, scope: !15821)
!15840 = !DILocation(line: 192, column: 27, scope: !15821)
!15841 = !DILocation(line: 192, column: 9, scope: !15821)
!15842 = !DILocation(line: 192, column: 19, scope: !15821)
!15843 = !DILocation(line: 193, column: 1, scope: !15821)
!15844 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !15548, file: !15548, line: 206, type: !15845, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15847)
!15845 = !DISubroutineType(types: !15846)
!15846 = !{!107, !15551, !106, !15715}
!15847 = !{!15848, !15849, !15850, !15851, !15852, !15853}
!15848 = !DILocalVariable(name: "msgq", arg: 1, scope: !15844, file: !15548, line: 206, type: !15551)
!15849 = !DILocalVariable(name: "data", arg: 2, scope: !15844, file: !15548, line: 206, type: !106)
!15850 = !DILocalVariable(name: "timeout", arg: 3, scope: !15844, file: !15548, line: 206, type: !15715)
!15851 = !DILocalVariable(name: "key", scope: !15844, file: !15548, line: 210, type: !15725)
!15852 = !DILocalVariable(name: "pending_thread", scope: !15844, file: !15548, line: 211, type: !3296)
!15853 = !DILocalVariable(name: "result", scope: !15844, file: !15548, line: 212, type: !107)
!15854 = !DILocation(line: 0, scope: !15844)
!15855 = !DILocation(line: 214, column: 27, scope: !15844)
!15856 = !DILocation(line: 0, scope: !15733, inlinedAt: !15857)
!15857 = distinct !DILocation(line: 214, column: 8, scope: !15844)
!15858 = !DILocation(line: 55, column: 2, scope: !15742, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 145, column: 10, scope: !15733, inlinedAt: !15857)
!15860 = !DILocation(line: 0, scope: !15742, inlinedAt: !15859)
!15861 = !DILocation(line: 218, column: 12, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15844, file: !15548, line: 218, column: 6)
!15863 = !DILocation(line: 218, column: 22, scope: !15862)
!15864 = !DILocation(line: 218, column: 6, scope: !15844)
!15865 = !DILocation(line: 220, column: 28, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15862, file: !15548, line: 218, column: 28)
!15867 = !DILocation(line: 220, column: 44, scope: !15866)
!15868 = !DILocation(line: 220, column: 9, scope: !15866)
!15869 = !DILocation(line: 221, column: 27, scope: !15866)
!15870 = !DILocation(line: 221, column: 18, scope: !15866)
!15871 = !DILocation(line: 222, column: 31, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15866, file: !15548, line: 222, column: 7)
!15873 = !DILocation(line: 222, column: 22, scope: !15872)
!15874 = !DILocation(line: 222, column: 7, scope: !15866)
!15875 = !DILocation(line: 223, column: 27, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15872, file: !15548, line: 222, column: 43)
!15877 = !DILocation(line: 223, column: 19, scope: !15876)
!15878 = !DILocation(line: 224, column: 3, scope: !15876)
!15879 = !DILocation(line: 225, column: 18, scope: !15866)
!15880 = !DILocation(line: 228, column: 49, scope: !15866)
!15881 = !DILocation(line: 228, column: 20, scope: !15866)
!15882 = !DILocation(line: 229, column: 22, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15866, file: !15548, line: 229, column: 7)
!15884 = !DILocation(line: 229, column: 7, scope: !15866)
!15885 = !DILocation(line: 233, column: 23, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15883, file: !15548, line: 229, column: 31)
!15887 = !DILocation(line: 233, column: 55, scope: !15886)
!15888 = !DILocation(line: 234, column: 17, scope: !15886)
!15889 = !DILocation(line: 233, column: 10, scope: !15886)
!15890 = !DILocation(line: 235, column: 29, scope: !15886)
!15891 = !DILocation(line: 235, column: 20, scope: !15886)
!15892 = !DILocation(line: 236, column: 33, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15886, file: !15548, line: 236, column: 8)
!15894 = !DILocation(line: 236, column: 24, scope: !15893)
!15895 = !DILocation(line: 236, column: 8, scope: !15886)
!15896 = !DILocation(line: 237, column: 29, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15893, file: !15548, line: 236, column: 45)
!15898 = !DILocation(line: 237, column: 21, scope: !15897)
!15899 = !DILocation(line: 238, column: 4, scope: !15897)
!15900 = !DILocation(line: 239, column: 19, scope: !15886)
!15901 = !DILocation(line: 0, scope: !15765, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 242, column: 4, scope: !15886)
!15903 = !DILocation(line: 67, column: 15, scope: !15765, inlinedAt: !15902)
!15904 = !DILocation(line: 67, column: 33, scope: !15765, inlinedAt: !15902)
!15905 = !DILocation(line: 243, column: 4, scope: !15886)
!15906 = !DILocation(line: 244, column: 4, scope: !15886)
!15907 = !DILocation(line: 248, column: 4, scope: !15886)
!15908 = !DILocation(line: 251, column: 13, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15862, file: !15548, line: 251, column: 13)
!15910 = !DILocation(line: 251, column: 13, scope: !15862)
!15911 = !DILocation(line: 258, column: 3, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15909, file: !15548, line: 254, column: 9)
!15913 = !DILocation(line: 258, column: 18, scope: !15912)
!15914 = !DILocation(line: 258, column: 28, scope: !15912)
!15915 = !DILocation(line: 260, column: 49, scope: !15912)
!15916 = !DILocation(line: 260, column: 12, scope: !15912)
!15917 = !DILocation(line: 262, column: 3, scope: !15912)
!15918 = !DILocation(line: 0, scope: !15862)
!15919 = !DILocation(line: 0, scope: !15805, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 267, column: 2, scope: !15844)
!15921 = !DILocation(line: 0, scope: !15813, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 215, column: 2, scope: !15805, inlinedAt: !15920)
!15923 = !DILocation(line: 95, column: 2, scope: !15813, inlinedAt: !15922)
!15924 = !DILocation(line: 269, column: 2, scope: !15844)
!15925 = !DILocation(line: 270, column: 1, scope: !15844)
!15926 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !15548, file: !15548, line: 284, type: !15927, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15929)
!15927 = !DISubroutineType(types: !15928)
!15928 = !{!107, !15551, !106}
!15929 = !{!15930, !15931, !15932, !15933}
!15930 = !DILocalVariable(name: "msgq", arg: 1, scope: !15926, file: !15548, line: 284, type: !15551)
!15931 = !DILocalVariable(name: "data", arg: 2, scope: !15926, file: !15548, line: 284, type: !106)
!15932 = !DILocalVariable(name: "key", scope: !15926, file: !15548, line: 286, type: !15725)
!15933 = !DILocalVariable(name: "result", scope: !15926, file: !15548, line: 287, type: !107)
!15934 = !DILocation(line: 0, scope: !15926)
!15935 = !DILocation(line: 0, scope: !15733, inlinedAt: !15936)
!15936 = distinct !DILocation(line: 289, column: 8, scope: !15926)
!15937 = !DILocation(line: 55, column: 2, scope: !15742, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 145, column: 10, scope: !15733, inlinedAt: !15936)
!15939 = !DILocation(line: 0, scope: !15742, inlinedAt: !15938)
!15940 = !DILocation(line: 291, column: 12, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15926, file: !15548, line: 291, column: 6)
!15942 = !DILocation(line: 291, column: 22, scope: !15941)
!15943 = !DILocation(line: 291, column: 6, scope: !15926)
!15944 = !DILocation(line: 293, column: 28, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15941, file: !15548, line: 291, column: 28)
!15946 = !DILocation(line: 293, column: 44, scope: !15945)
!15947 = !DILocation(line: 293, column: 9, scope: !15945)
!15948 = !DILocation(line: 295, column: 2, scope: !15945)
!15949 = !DILocation(line: 0, scope: !15941)
!15950 = !DILocation(line: 0, scope: !15805, inlinedAt: !15951)
!15951 = distinct !DILocation(line: 302, column: 2, scope: !15926)
!15952 = !DILocation(line: 0, scope: !15813, inlinedAt: !15953)
!15953 = distinct !DILocation(line: 215, column: 2, scope: !15805, inlinedAt: !15951)
!15954 = !DILocation(line: 95, column: 2, scope: !15813, inlinedAt: !15953)
!15955 = !DILocation(line: 304, column: 2, scope: !15926)
!15956 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !15548, file: !15548, line: 318, type: !15957, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15959)
!15957 = !DISubroutineType(types: !15958)
!15958 = !{null, !15551}
!15959 = !{!15960, !15961, !15962}
!15960 = !DILocalVariable(name: "msgq", arg: 1, scope: !15956, file: !15548, line: 318, type: !15551)
!15961 = !DILocalVariable(name: "key", scope: !15956, file: !15548, line: 320, type: !15725)
!15962 = !DILocalVariable(name: "pending_thread", scope: !15956, file: !15548, line: 321, type: !3296)
!15963 = !DILocation(line: 0, scope: !15956)
!15964 = !DILocation(line: 0, scope: !15733, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 323, column: 8, scope: !15956)
!15966 = !DILocation(line: 55, column: 2, scope: !15742, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 145, column: 10, scope: !15733, inlinedAt: !15965)
!15968 = !DILocation(line: 0, scope: !15742, inlinedAt: !15967)
!15969 = !DILocation(line: 328, column: 27, scope: !15956)
!15970 = !DILocation(line: 328, column: 65, scope: !15956)
!15971 = !DILocation(line: 328, column: 2, scope: !15956)
!15972 = !DILocation(line: 0, scope: !15765, inlinedAt: !15973)
!15973 = distinct !DILocation(line: 329, column: 3, scope: !15974)
!15974 = distinct !DILexicalBlock(scope: !15956, file: !15548, line: 328, column: 74)
!15975 = !DILocation(line: 67, column: 15, scope: !15765, inlinedAt: !15973)
!15976 = !DILocation(line: 67, column: 33, scope: !15765, inlinedAt: !15973)
!15977 = !DILocation(line: 330, column: 3, scope: !15974)
!15978 = distinct !{!15978, !15971, !15979}
!15979 = !DILocation(line: 331, column: 2, scope: !15956)
!15980 = !DILocation(line: 323, column: 27, scope: !15956)
!15981 = !DILocation(line: 333, column: 8, scope: !15956)
!15982 = !DILocation(line: 333, column: 18, scope: !15956)
!15983 = !DILocation(line: 334, column: 25, scope: !15956)
!15984 = !DILocation(line: 334, column: 8, scope: !15956)
!15985 = !DILocation(line: 334, column: 17, scope: !15956)
!15986 = !DILocation(line: 336, column: 2, scope: !15956)
!15987 = !DILocation(line: 337, column: 1, scope: !15956)
!15988 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2509, file: !2509, line: 49, type: !15989, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !15998)
!15989 = !DISubroutineType(types: !15990)
!15990 = !{!107, !15991}
!15991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15992, size: 32)
!15992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !142, line: 2720, size: 160, elements: !15993)
!15993 = !{!15994, !15995, !15996, !15997}
!15994 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15992, file: !142, line: 2722, baseType: !2440, size: 64)
!15995 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15992, file: !142, line: 2724, baseType: !2422, size: 32, offset: 64)
!15996 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15992, file: !142, line: 2727, baseType: !108, size: 32, offset: 96)
!15997 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15992, file: !142, line: 2730, baseType: !107, size: 32, offset: 128)
!15998 = !{!15999}
!15999 = !DILocalVariable(name: "mutex", arg: 1, scope: !15988, file: !2509, line: 49, type: !15991)
!16000 = !DILocation(line: 0, scope: !15988)
!16001 = !DILocation(line: 51, column: 9, scope: !15988)
!16002 = !DILocation(line: 51, column: 15, scope: !15988)
!16003 = !DILocation(line: 52, column: 9, scope: !15988)
!16004 = !DILocation(line: 52, column: 20, scope: !15988)
!16005 = !DILocation(line: 54, column: 23, scope: !15988)
!16006 = !DILocation(line: 54, column: 2, scope: !15988)
!16007 = !DILocation(line: 60, column: 2, scope: !15988)
!16008 = distinct !DISubprogram(name: "z_waitq_init", scope: !15209, file: !15209, line: 47, type: !16009, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16011)
!16009 = !DISubroutineType(types: !16010)
!16010 = !{null, !2439}
!16011 = !{!16012}
!16012 = !DILocalVariable(name: "w", arg: 1, scope: !16008, file: !15209, line: 47, type: !2439)
!16013 = !DILocation(line: 0, scope: !16008)
!16014 = !DILocation(line: 49, column: 21, scope: !16008)
!16015 = !DILocation(line: 49, column: 2, scope: !16008)
!16016 = !DILocation(line: 50, column: 1, scope: !16008)
!16017 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !16018, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16021)
!16018 = !DISubroutineType(types: !16019)
!16019 = !{null, !16020}
!16020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!16021 = !{!16022}
!16022 = !DILocalVariable(name: "list", arg: 1, scope: !16017, file: !151, line: 197, type: !16020)
!16023 = !DILocation(line: 0, scope: !16017)
!16024 = !DILocation(line: 199, column: 8, scope: !16017)
!16025 = !DILocation(line: 199, column: 13, scope: !16017)
!16026 = !DILocation(line: 200, column: 8, scope: !16017)
!16027 = !DILocation(line: 200, column: 13, scope: !16017)
!16028 = !DILocation(line: 201, column: 1, scope: !16017)
!16029 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2509, file: !2509, line: 95, type: !16030, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16036)
!16030 = !DISubroutineType(types: !16031)
!16031 = !{!107, !15991, !16032}
!16032 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !16033)
!16033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !16034)
!16034 = !{!16035}
!16035 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16033, file: !103, line: 66, baseType: !102, size: 64)
!16036 = !{!16037, !16038, !16039, !16040, !16045, !16046, !16047}
!16037 = !DILocalVariable(name: "mutex", arg: 1, scope: !16029, file: !2509, line: 95, type: !15991)
!16038 = !DILocalVariable(name: "timeout", arg: 2, scope: !16029, file: !2509, line: 95, type: !16032)
!16039 = !DILocalVariable(name: "new_prio", scope: !16029, file: !2509, line: 97, type: !107)
!16040 = !DILocalVariable(name: "key", scope: !16029, file: !2509, line: 98, type: !16041)
!16041 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !16042)
!16042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !16043)
!16043 = !{!16044}
!16044 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16042, file: !255, line: 33, baseType: !107, size: 32)
!16045 = !DILocalVariable(name: "resched", scope: !16029, file: !2509, line: 99, type: !136)
!16046 = !DILocalVariable(name: "got_mutex", scope: !16029, file: !2509, line: 146, type: !107)
!16047 = !DILocalVariable(name: "waiter", scope: !16048, file: !2509, line: 169, type: !2422)
!16048 = distinct !DILexicalBlock(scope: !16049, file: !2509, line: 168, column: 36)
!16049 = distinct !DILexicalBlock(scope: !16029, file: !2509, line: 168, column: 6)
!16050 = !DILocation(line: 0, scope: !16029)
!16051 = !DILocalVariable(name: "l", arg: 1, scope: !16052, file: !255, line: 136, type: !16055)
!16052 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !16053, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16056)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{!16041, !16055}
!16055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!16056 = !{!16051, !16057}
!16057 = !DILocalVariable(name: "k", scope: !16052, file: !255, line: 139, type: !16041)
!16058 = !DILocation(line: 0, scope: !16052, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 105, column: 8, scope: !16029)
!16060 = !DILocation(line: 55, column: 2, scope: !16061, inlinedAt: !16065)
!16061 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16062)
!16062 = !{!16063, !16064}
!16063 = !DILocalVariable(name: "key", scope: !16061, file: !7118, line: 44, type: !32)
!16064 = !DILocalVariable(name: "tmp", scope: !16061, file: !7118, line: 53, type: !32)
!16065 = distinct !DILocation(line: 145, column: 10, scope: !16052, inlinedAt: !16059)
!16066 = !{i64 2284089}
!16067 = !DILocation(line: 0, scope: !16061, inlinedAt: !16065)
!16068 = !DILocation(line: 107, column: 6, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16029, file: !2509, line: 107, column: 6)
!16070 = !DILocation(line: 107, column: 6, scope: !16029)
!16071 = !{!"branch_weights", i32 2000, i32 1}
!16072 = !DILocation(line: 110, column: 6, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16069, file: !2509, line: 107, column: 71)
!16074 = !DILocation(line: 110, column: 21, scope: !16073)
!16075 = !DILocation(line: 109, column: 28, scope: !16073)
!16076 = !DILocation(line: 111, column: 13, scope: !16073)
!16077 = !DILocation(line: 114, column: 18, scope: !16073)
!16078 = !DILocation(line: 109, column: 10, scope: !16073)
!16079 = !DILocation(line: 109, column: 26, scope: !16073)
!16080 = !DILocation(line: 113, column: 20, scope: !16073)
!16081 = !DILocation(line: 114, column: 10, scope: !16073)
!16082 = !DILocation(line: 114, column: 16, scope: !16073)
!16083 = !DILocalVariable(name: "key", arg: 2, scope: !16084, file: !255, line: 190, type: !16041)
!16084 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !16085, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16087)
!16085 = !DISubroutineType(types: !16086)
!16086 = !{null, !16055, !16041}
!16087 = !{!16088, !16083}
!16088 = !DILocalVariable(name: "l", arg: 1, scope: !16084, file: !255, line: 189, type: !16055)
!16089 = !DILocation(line: 0, scope: !16084, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 120, column: 3, scope: !16073)
!16091 = !DILocalVariable(name: "key", arg: 1, scope: !16092, file: !7118, line: 84, type: !32)
!16092 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16093)
!16093 = !{!16091}
!16094 = !DILocation(line: 0, scope: !16092, inlinedAt: !16095)
!16095 = distinct !DILocation(line: 215, column: 2, scope: !16084, inlinedAt: !16090)
!16096 = !DILocation(line: 95, column: 2, scope: !16092, inlinedAt: !16095)
!16097 = !{i64 2284906}
!16098 = !DILocation(line: 124, column: 3, scope: !16073)
!16099 = !DILocation(line: 127, column: 6, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16029, file: !2509, line: 127, column: 6)
!16101 = !DILocation(line: 127, column: 6, scope: !16029)
!16102 = !{!"branch_weights", i32 1, i32 2000}
!16103 = !DILocation(line: 0, scope: !16084, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 128, column: 3, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16100, file: !2509, line: 127, column: 50)
!16106 = !DILocation(line: 0, scope: !16092, inlinedAt: !16107)
!16107 = distinct !DILocation(line: 215, column: 2, scope: !16084, inlinedAt: !16104)
!16108 = !DILocation(line: 95, column: 2, scope: !16092, inlinedAt: !16107)
!16109 = !DILocation(line: 132, column: 3, scope: !16105)
!16110 = !DILocation(line: 137, column: 53, scope: !16029)
!16111 = !DILocation(line: 137, column: 38, scope: !16029)
!16112 = !DILocation(line: 138, column: 29, scope: !16029)
!16113 = !DILocation(line: 138, column: 10, scope: !16029)
!16114 = !DILocation(line: 137, column: 13, scope: !16029)
!16115 = !DILocation(line: 142, column: 6, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16029, file: !2509, line: 142, column: 6)
!16117 = !DILocation(line: 142, column: 6, scope: !16029)
!16118 = !DILocation(line: 143, column: 13, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16116, file: !2509, line: 142, column: 59)
!16120 = !DILocation(line: 144, column: 2, scope: !16119)
!16121 = !DILocation(line: 146, column: 50, scope: !16029)
!16122 = !DILocation(line: 146, column: 18, scope: !16029)
!16123 = !DILocation(line: 153, column: 16, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16029, file: !2509, line: 153, column: 6)
!16125 = !DILocation(line: 153, column: 6, scope: !16029)
!16126 = !DILocation(line: 0, scope: !16052, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 162, column: 8, scope: !16029)
!16128 = !DILocation(line: 55, column: 2, scope: !16061, inlinedAt: !16129)
!16129 = distinct !DILocation(line: 145, column: 10, scope: !16052, inlinedAt: !16127)
!16130 = !DILocation(line: 0, scope: !16061, inlinedAt: !16129)
!16131 = !DILocation(line: 168, column: 6, scope: !16049)
!16132 = !DILocation(line: 168, column: 6, scope: !16029)
!16133 = !DILocation(line: 169, column: 29, scope: !16048)
!16134 = !DILocation(line: 0, scope: !16048)
!16135 = !DILocation(line: 171, column: 22, scope: !16048)
!16136 = !DILocation(line: 171, column: 14, scope: !16048)
!16137 = !DILocation(line: 172, column: 42, scope: !16048)
!16138 = !DILocation(line: 172, column: 29, scope: !16048)
!16139 = !DILocation(line: 172, column: 55, scope: !16048)
!16140 = !DILocation(line: 172, column: 4, scope: !16048)
!16141 = !DILocation(line: 173, column: 11, scope: !16048)
!16142 = !DILocation(line: 177, column: 13, scope: !16048)
!16143 = !DILocation(line: 177, column: 48, scope: !16048)
!16144 = !DILocation(line: 180, column: 6, scope: !16029)
!16145 = !DILocation(line: 181, column: 3, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16147, file: !2509, line: 180, column: 15)
!16147 = distinct !DILexicalBlock(scope: !16029, file: !2509, line: 180, column: 6)
!16148 = !DILocation(line: 182, column: 2, scope: !16146)
!16149 = !DILocation(line: 0, scope: !16084, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 183, column: 3, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16147, file: !2509, line: 182, column: 9)
!16152 = !DILocation(line: 0, scope: !16092, inlinedAt: !16153)
!16153 = distinct !DILocation(line: 215, column: 2, scope: !16084, inlinedAt: !16150)
!16154 = !DILocation(line: 95, column: 2, scope: !16092, inlinedAt: !16153)
!16155 = !DILocation(line: 189, column: 1, scope: !16029)
!16156 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2509, file: !2509, line: 72, type: !16157, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16159)
!16157 = !DISubroutineType(types: !16158)
!16158 = !{!334, !334, !334}
!16159 = !{!16160, !16161, !16162}
!16160 = !DILocalVariable(name: "target", arg: 1, scope: !16156, file: !2509, line: 72, type: !334)
!16161 = !DILocalVariable(name: "limit", arg: 2, scope: !16156, file: !2509, line: 72, type: !334)
!16162 = !DILocalVariable(name: "new_prio", scope: !16156, file: !2509, line: 74, type: !107)
!16163 = !DILocation(line: 0, scope: !16156)
!16164 = !DILocation(line: 74, column: 17, scope: !16156)
!16165 = !DILocation(line: 76, column: 13, scope: !16156)
!16166 = !DILocation(line: 78, column: 2, scope: !16156)
!16167 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14883, file: !14883, line: 211, type: !16168, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16170)
!16168 = !DISubroutineType(types: !16169)
!16169 = !{!136, !107, !107}
!16170 = !{!16171, !16172}
!16171 = !DILocalVariable(name: "prio", arg: 1, scope: !16167, file: !14883, line: 211, type: !107)
!16172 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16167, file: !14883, line: 211, type: !107)
!16173 = !DILocation(line: 0, scope: !16167)
!16174 = !DILocation(line: 213, column: 9, scope: !16167)
!16175 = !DILocation(line: 213, column: 2, scope: !16167)
!16176 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2509, file: !2509, line: 81, type: !16177, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16179)
!16177 = !DISubroutineType(types: !16178)
!16178 = !{!136, !15991, !334}
!16179 = !{!16180, !16181}
!16180 = !DILocalVariable(name: "mutex", arg: 1, scope: !16176, file: !2509, line: 81, type: !15991)
!16181 = !DILocalVariable(name: "new_prio", arg: 2, scope: !16176, file: !2509, line: 81, type: !334)
!16182 = !DILocation(line: 0, scope: !16176)
!16183 = !DILocation(line: 83, column: 13, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16176, file: !2509, line: 83, column: 6)
!16185 = !DILocation(line: 83, column: 25, scope: !16184)
!16186 = !DILocation(line: 83, column: 6, scope: !16184)
!16187 = !DILocation(line: 83, column: 30, scope: !16184)
!16188 = !DILocation(line: 83, column: 6, scope: !16176)
!16189 = !DILocation(line: 90, column: 10, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16184, file: !2509, line: 83, column: 43)
!16191 = !DILocation(line: 90, column: 3, scope: !16190)
!16192 = !DILocation(line: 93, column: 1, scope: !16176)
!16193 = distinct !DISubprogram(name: "z_waitq_head", scope: !15209, file: !15209, line: 52, type: !16194, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16196)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{!2422, !2439}
!16196 = !{!16197}
!16197 = !DILocalVariable(name: "w", arg: 1, scope: !16193, file: !15209, line: 52, type: !2439)
!16198 = !DILocation(line: 0, scope: !16193)
!16199 = !DILocation(line: 54, column: 52, scope: !16193)
!16200 = !DILocation(line: 54, column: 28, scope: !16193)
!16201 = !DILocation(line: 54, column: 9, scope: !16193)
!16202 = !DILocation(line: 54, column: 2, scope: !16193)
!16203 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !16204, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16206)
!16204 = !DISubroutineType(types: !16205)
!16205 = !{!2407, !16020}
!16206 = !{!16207}
!16207 = !DILocalVariable(name: "list", arg: 1, scope: !16203, file: !151, line: 294, type: !16020)
!16208 = !DILocation(line: 0, scope: !16203)
!16209 = !DILocation(line: 296, column: 9, scope: !16203)
!16210 = !DILocation(line: 296, column: 49, scope: !16203)
!16211 = !DILocation(line: 296, column: 2, scope: !16203)
!16212 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !16213, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16215)
!16213 = !DISubroutineType(types: !16214)
!16214 = !{!136, !16020}
!16215 = !{!16216}
!16216 = !DILocalVariable(name: "list", arg: 1, scope: !16212, file: !151, line: 266, type: !16020)
!16217 = !DILocation(line: 0, scope: !16212)
!16218 = !DILocation(line: 268, column: 15, scope: !16212)
!16219 = !DILocation(line: 268, column: 20, scope: !16212)
!16220 = !DILocation(line: 268, column: 2, scope: !16212)
!16221 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14883, file: !14883, line: 206, type: !16168, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16222)
!16222 = !{!16223, !16224}
!16223 = !DILocalVariable(name: "prio1", arg: 1, scope: !16221, file: !14883, line: 206, type: !107)
!16224 = !DILocalVariable(name: "prio2", arg: 2, scope: !16221, file: !14883, line: 206, type: !107)
!16225 = !DILocation(line: 0, scope: !16221)
!16226 = !DILocation(line: 208, column: 15, scope: !16221)
!16227 = !DILocation(line: 208, column: 2, scope: !16221)
!16228 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !14883, file: !14883, line: 186, type: !418, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16229)
!16229 = !{!16230}
!16230 = !DILocalVariable(name: "prio", arg: 1, scope: !16228, file: !14883, line: 186, type: !107)
!16231 = !DILocation(line: 0, scope: !16228)
!16232 = !DILocation(line: 188, column: 9, scope: !16228)
!16233 = !DILocation(line: 188, column: 2, scope: !16228)
!16234 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !14883, file: !14883, line: 181, type: !16235, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16237)
!16235 = !DISubroutineType(types: !16236)
!16236 = !{!136, !107}
!16237 = !{!16238}
!16238 = !DILocalVariable(name: "prio", arg: 1, scope: !16234, file: !14883, line: 181, type: !107)
!16239 = !DILocation(line: 0, scope: !16234)
!16240 = !DILocation(line: 183, column: 14, scope: !16234)
!16241 = !DILocation(line: 183, column: 2, scope: !16234)
!16242 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2509, file: !2509, line: 201, type: !15989, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16243)
!16243 = !{!16244, !16245, !16246, !16247}
!16244 = !DILocalVariable(name: "mutex", arg: 1, scope: !16242, file: !2509, line: 201, type: !15991)
!16245 = !DILocalVariable(name: "new_owner", scope: !16242, file: !2509, line: 203, type: !2422)
!16246 = !DILocalVariable(name: "key", scope: !16242, file: !2509, line: 242, type: !16041)
!16247 = !DILabel(scope: !16242, name: "k_mutex_unlock_return", file: !2509, line: 270)
!16248 = !DILocation(line: 0, scope: !16242)
!16249 = !DILocation(line: 209, column: 2, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16242, file: !2509, line: 209, column: 2)
!16251 = !DILocation(line: 209, column: 2, scope: !16242)
!16252 = !DILocation(line: 217, column: 2, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16242, file: !2509, line: 217, column: 2)
!16254 = !DILocation(line: 217, column: 2, scope: !16242)
!16255 = !DILocation(line: 237, column: 13, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16242, file: !2509, line: 237, column: 6)
!16257 = !DILocation(line: 237, column: 24, scope: !16256)
!16258 = !DILocation(line: 237, column: 6, scope: !16242)
!16259 = !DILocation(line: 238, column: 20, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16256, file: !2509, line: 237, column: 30)
!16261 = !DILocation(line: 239, column: 3, scope: !16260)
!16262 = !DILocation(line: 0, scope: !16052, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 242, column: 25, scope: !16242)
!16264 = !DILocation(line: 55, column: 2, scope: !16061, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 145, column: 10, scope: !16052, inlinedAt: !16263)
!16266 = !DILocation(line: 0, scope: !16061, inlinedAt: !16265)
!16267 = !DILocation(line: 244, column: 34, scope: !16242)
!16268 = !DILocation(line: 244, column: 2, scope: !16242)
!16269 = !DILocation(line: 247, column: 44, scope: !16242)
!16270 = !DILocation(line: 247, column: 14, scope: !16242)
!16271 = !DILocation(line: 249, column: 15, scope: !16242)
!16272 = !DILocation(line: 254, column: 16, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16242, file: !2509, line: 254, column: 6)
!16274 = !DILocation(line: 254, column: 6, scope: !16242)
!16275 = !DILocation(line: 260, column: 44, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16273, file: !2509, line: 254, column: 25)
!16277 = !DILocation(line: 260, column: 28, scope: !16276)
!16278 = !DILocation(line: 260, column: 26, scope: !16276)
!16279 = !DILocalVariable(name: "thread", arg: 1, scope: !16280, file: !14903, line: 65, type: !2422)
!16280 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14903, file: !14903, line: 65, type: !16281, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !16283)
!16281 = !DISubroutineType(types: !16282)
!16282 = !{null, !2422, !32}
!16283 = !{!16279, !16284}
!16284 = !DILocalVariable(name: "value", arg: 2, scope: !16280, file: !14903, line: 65, type: !32)
!16285 = !DILocation(line: 0, scope: !16280, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 261, column: 3, scope: !16276)
!16287 = !DILocation(line: 67, column: 15, scope: !16280, inlinedAt: !16286)
!16288 = !DILocation(line: 67, column: 33, scope: !16280, inlinedAt: !16286)
!16289 = !DILocation(line: 262, column: 3, scope: !16276)
!16290 = !DILocation(line: 263, column: 3, scope: !16276)
!16291 = !DILocation(line: 264, column: 2, scope: !16276)
!16292 = !DILocation(line: 265, column: 21, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16273, file: !2509, line: 264, column: 9)
!16294 = !DILocation(line: 0, scope: !16084, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 266, column: 3, scope: !16293)
!16296 = !DILocation(line: 0, scope: !16092, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 215, column: 2, scope: !16084, inlinedAt: !16295)
!16298 = !DILocation(line: 95, column: 2, scope: !16092, inlinedAt: !16297)
!16299 = !DILocation(line: 274, column: 1, scope: !16242)
!16300 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2620, file: !2620, line: 93, type: !16301, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16303)
!16301 = !DISubroutineType(types: !16302)
!16302 = !{!334, !2515, !2515}
!16303 = !{!16304, !16305, !16306, !16307}
!16304 = !DILocalVariable(name: "thread_1", arg: 1, scope: !16300, file: !2620, line: 93, type: !2515)
!16305 = !DILocalVariable(name: "thread_2", arg: 2, scope: !16300, file: !2620, line: 94, type: !2515)
!16306 = !DILocalVariable(name: "b1", scope: !16300, file: !2620, line: 97, type: !334)
!16307 = !DILocalVariable(name: "b2", scope: !16300, file: !2620, line: 98, type: !334)
!16308 = !DILocation(line: 0, scope: !16300)
!16309 = !DILocation(line: 97, column: 30, scope: !16300)
!16310 = !DILocation(line: 98, column: 30, scope: !16300)
!16311 = !DILocation(line: 100, column: 9, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16300, file: !2620, line: 100, column: 6)
!16313 = !DILocation(line: 100, column: 6, scope: !16300)
!16314 = !DILocation(line: 125, column: 1, scope: !16300)
!16315 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2620, file: !2620, line: 428, type: !16316, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16318)
!16316 = !DISubroutineType(types: !16317)
!16317 = !{null, !2515}
!16318 = !{!16319}
!16319 = !DILocalVariable(name: "curr", arg: 1, scope: !16315, file: !2620, line: 428, type: !2515)
!16320 = !DILocation(line: 0, scope: !16315)
!16321 = !DILocation(line: 434, column: 6, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16315, file: !2620, line: 434, column: 6)
!16323 = !DILocation(line: 434, column: 23, scope: !16322)
!16324 = !DILocation(line: 434, column: 6, scope: !16315)
!16325 = !DILocation(line: 435, column: 50, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16322, file: !2620, line: 434, column: 29)
!16327 = !DILocation(line: 435, column: 48, scope: !16326)
!16328 = !DILocation(line: 435, column: 29, scope: !16326)
!16329 = !DILocation(line: 436, column: 24, scope: !16326)
!16330 = !DILocation(line: 436, column: 3, scope: !16326)
!16331 = !DILocation(line: 437, column: 2, scope: !16326)
!16332 = !DILocation(line: 438, column: 1, scope: !16315)
!16333 = distinct !DISubprogram(name: "slice_time", scope: !2620, file: !2620, line: 407, type: !16334, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16336)
!16334 = !DISubroutineType(types: !16335)
!16335 = !{!107, !2515}
!16336 = !{!16337, !16338}
!16337 = !DILocalVariable(name: "curr", arg: 1, scope: !16333, file: !2620, line: 407, type: !2515)
!16338 = !DILocalVariable(name: "ret", scope: !16333, file: !2620, line: 409, type: !107)
!16339 = !DILocation(line: 0, scope: !16333)
!16340 = !DILocation(line: 409, column: 12, scope: !16333)
!16341 = !DILocation(line: 416, column: 2, scope: !16333)
!16342 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2620, file: !2620, line: 440, type: !16343, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16345)
!16343 = !DISubroutineType(types: !16344)
!16344 = !{null, !334, !107}
!16345 = !{!16346, !16347, !16348, !16354}
!16346 = !DILocalVariable(name: "slice", arg: 1, scope: !16342, file: !2620, line: 440, type: !334)
!16347 = !DILocalVariable(name: "prio", arg: 2, scope: !16342, file: !2620, line: 440, type: !107)
!16348 = !DILocalVariable(name: "__i", scope: !16349, file: !2620, line: 442, type: !16350)
!16349 = distinct !DILexicalBlock(scope: !16342, file: !2620, line: 442, column: 2)
!16350 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !16351)
!16351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !16352)
!16352 = !{!16353}
!16353 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16351, file: !255, line: 33, baseType: !107, size: 32)
!16354 = !DILocalVariable(name: "__key", scope: !16349, file: !2620, line: 442, type: !16350)
!16355 = !DILocation(line: 0, scope: !16342)
!16356 = !DILocation(line: 0, scope: !16349)
!16357 = !DILocalVariable(name: "l", arg: 1, scope: !16358, file: !255, line: 136, type: !16361)
!16358 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !16359, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16362)
!16359 = !DISubroutineType(types: !16360)
!16360 = !{!16350, !16361}
!16361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!16362 = !{!16357, !16363}
!16363 = !DILocalVariable(name: "k", scope: !16358, file: !255, line: 139, type: !16350)
!16364 = !DILocation(line: 0, scope: !16358, inlinedAt: !16365)
!16365 = distinct !DILocation(line: 442, column: 2, scope: !16349)
!16366 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !16371)
!16367 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16368)
!16368 = !{!16369, !16370}
!16369 = !DILocalVariable(name: "key", scope: !16367, file: !7118, line: 44, type: !32)
!16370 = !DILocalVariable(name: "tmp", scope: !16367, file: !7118, line: 53, type: !32)
!16371 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !16365)
!16372 = !{i64 2323652}
!16373 = !DILocation(line: 0, scope: !16367, inlinedAt: !16371)
!16374 = !DILocation(line: 443, column: 29, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16376, file: !2620, line: 442, column: 26)
!16376 = distinct !DILexicalBlock(scope: !16349, file: !2620, line: 442, column: 2)
!16377 = !DILocation(line: 444, column: 17, scope: !16375)
!16378 = !DILocation(line: 445, column: 51, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16375, file: !2620, line: 445, column: 7)
!16380 = !DILocation(line: 445, column: 7, scope: !16375)
!16381 = !DILocation(line: 0, scope: !16375)
!16382 = !DILocation(line: 451, column: 18, scope: !16375)
!16383 = !DILocation(line: 452, column: 3, scope: !16375)
!16384 = !DILocalVariable(name: "key", arg: 2, scope: !16385, file: !255, line: 190, type: !16350)
!16385 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !16386, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16388)
!16386 = !DISubroutineType(types: !16387)
!16387 = !{null, !16361, !16350}
!16388 = !{!16389, !16384}
!16389 = !DILocalVariable(name: "l", arg: 1, scope: !16385, file: !255, line: 189, type: !16361)
!16390 = !DILocation(line: 0, scope: !16385, inlinedAt: !16391)
!16391 = distinct !DILocation(line: 442, column: 2, scope: !16376)
!16392 = !DILocalVariable(name: "key", arg: 1, scope: !16393, file: !7118, line: 84, type: !32)
!16393 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16394)
!16394 = !{!16392}
!16395 = !DILocation(line: 0, scope: !16393, inlinedAt: !16396)
!16396 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !16391)
!16397 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !16396)
!16398 = !{i64 2324469}
!16399 = !DILocation(line: 454, column: 1, scope: !16342)
!16400 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3571, file: !3571, line: 389, type: !8684, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16401)
!16401 = !{!16402}
!16402 = !DILocalVariable(name: "t", arg: 1, scope: !16400, file: !3571, line: 389, type: !108)
!16403 = !DILocation(line: 0, scope: !16400)
!16404 = !DILocalVariable(name: "t", arg: 1, scope: !16405, file: !3571, line: 102, type: !109)
!16405 = distinct !DISubprogram(name: "z_tmcvt", scope: !3571, file: !3571, line: 102, type: !3579, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16406)
!16406 = !{!16404, !16407, !16408, !16409, !16410, !16411, !16412, !16413, !16414, !16415, !16416}
!16407 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16405, file: !3571, line: 102, type: !108)
!16408 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16405, file: !3571, line: 103, type: !108)
!16409 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16405, file: !3571, line: 103, type: !136)
!16410 = !DILocalVariable(name: "result32", arg: 5, scope: !16405, file: !3571, line: 104, type: !136)
!16411 = !DILocalVariable(name: "round_up", arg: 6, scope: !16405, file: !3571, line: 104, type: !136)
!16412 = !DILocalVariable(name: "round_off", arg: 7, scope: !16405, file: !3571, line: 105, type: !136)
!16413 = !DILocalVariable(name: "mul_ratio", scope: !16405, file: !3571, line: 107, type: !136)
!16414 = !DILocalVariable(name: "div_ratio", scope: !16405, file: !3571, line: 109, type: !136)
!16415 = !DILocalVariable(name: "off", scope: !16405, file: !3571, line: 116, type: !109)
!16416 = !DILocalVariable(name: "rdivisor", scope: !16417, file: !3571, line: 119, type: !108)
!16417 = distinct !DILexicalBlock(scope: !16418, file: !3571, line: 118, column: 18)
!16418 = distinct !DILexicalBlock(scope: !16405, file: !3571, line: 118, column: 6)
!16419 = !DILocation(line: 0, scope: !16405, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 392, column: 9, scope: !16400)
!16421 = !DILocation(line: 143, column: 25, scope: !16422, inlinedAt: !16420)
!16422 = distinct !DILexicalBlock(scope: !16423, file: !3571, line: 142, column: 17)
!16423 = distinct !DILexicalBlock(scope: !16424, file: !3571, line: 142, column: 7)
!16424 = distinct !DILexicalBlock(scope: !16425, file: !3571, line: 141, column: 24)
!16425 = distinct !DILexicalBlock(scope: !16426, file: !3571, line: 141, column: 13)
!16426 = distinct !DILexicalBlock(scope: !16405, file: !3571, line: 134, column: 6)
!16427 = !DILocation(line: 392, column: 2, scope: !16400)
!16428 = distinct !DISubprogram(name: "z_time_slice", scope: !2620, file: !2620, line: 502, type: !9899, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16429)
!16429 = !{!16430, !16431}
!16430 = !DILocalVariable(name: "ticks", arg: 1, scope: !16428, file: !2620, line: 502, type: !107)
!16431 = !DILocalVariable(name: "key", scope: !16428, file: !2620, line: 511, type: !16350)
!16432 = !DILocation(line: 0, scope: !16428)
!16433 = !DILocation(line: 0, scope: !16358, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 511, column: 25, scope: !16428)
!16435 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !16434)
!16437 = !DILocation(line: 0, scope: !16367, inlinedAt: !16436)
!16438 = !DILocation(line: 514, column: 6, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16428, file: !2620, line: 514, column: 6)
!16440 = !DILocation(line: 514, column: 25, scope: !16439)
!16441 = !DILocation(line: 514, column: 22, scope: !16439)
!16442 = !DILocation(line: 514, column: 6, scope: !16428)
!16443 = !DILocation(line: 515, column: 3, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16439, file: !2620, line: 514, column: 35)
!16445 = !DILocation(line: 0, scope: !16385, inlinedAt: !16446)
!16446 = distinct !DILocation(line: 516, column: 3, scope: !16444)
!16447 = !DILocation(line: 0, scope: !16393, inlinedAt: !16448)
!16448 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !16446)
!16449 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !16448)
!16450 = !DILocation(line: 517, column: 3, scope: !16444)
!16451 = !DILocation(line: 519, column: 18, scope: !16428)
!16452 = !DILocation(line: 522, column: 6, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16428, file: !2620, line: 522, column: 6)
!16454 = !DILocation(line: 522, column: 27, scope: !16453)
!16455 = !DILocation(line: 522, column: 30, scope: !16453)
!16456 = !DILocation(line: 522, column: 6, scope: !16428)
!16457 = !DILocation(line: 523, column: 30, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16459, file: !2620, line: 523, column: 7)
!16459 = distinct !DILexicalBlock(scope: !16453, file: !2620, line: 522, column: 51)
!16460 = !DILocation(line: 523, column: 13, scope: !16458)
!16461 = !DILocation(line: 523, column: 7, scope: !16459)
!16462 = !DILocation(line: 530, column: 10, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16458, file: !2620, line: 523, column: 43)
!16464 = !DILocation(line: 531, column: 3, scope: !16463)
!16465 = !DILocation(line: 532, column: 30, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16458, file: !2620, line: 531, column: 10)
!16467 = !DILocation(line: 535, column: 29, scope: !16468)
!16468 = distinct !DILexicalBlock(scope: !16453, file: !2620, line: 534, column: 9)
!16469 = !DILocation(line: 0, scope: !16385, inlinedAt: !16470)
!16470 = distinct !DILocation(line: 537, column: 2, scope: !16428)
!16471 = !DILocation(line: 0, scope: !16393, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !16470)
!16473 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !16472)
!16474 = !DILocation(line: 538, column: 1, scope: !16428)
!16475 = distinct !DISubprogram(name: "sliceable", scope: !2620, file: !2620, line: 468, type: !16476, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16478)
!16476 = !DISubroutineType(types: !16477)
!16477 = !{!136, !2515}
!16478 = !{!16479, !16480}
!16479 = !DILocalVariable(name: "thread", arg: 1, scope: !16475, file: !2620, line: 468, type: !2515)
!16480 = !DILocalVariable(name: "ret", scope: !16475, file: !2620, line: 470, type: !136)
!16481 = !DILocation(line: 0, scope: !16475)
!16482 = !DILocation(line: 470, column: 13, scope: !16475)
!16483 = !DILocation(line: 471, column: 3, scope: !16475)
!16484 = !DILocation(line: 471, column: 7, scope: !16475)
!16485 = !DILocation(line: 472, column: 3, scope: !16475)
!16486 = !DILocation(line: 472, column: 37, scope: !16475)
!16487 = !DILocation(line: 472, column: 24, scope: !16475)
!16488 = !DILocation(line: 472, column: 43, scope: !16475)
!16489 = !DILocation(line: 472, column: 7, scope: !16475)
!16490 = !DILocation(line: 473, column: 3, scope: !16475)
!16491 = !DILocation(line: 473, column: 7, scope: !16475)
!16492 = !DILocation(line: 473, column: 6, scope: !16475)
!16493 = !DILocation(line: 479, column: 2, scope: !16475)
!16494 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2620, file: !2620, line: 482, type: !16495, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16497)
!16495 = !DISubroutineType(types: !16496)
!16496 = !{!16350, !16350}
!16497 = !{!16498, !16499}
!16498 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16494, file: !2620, line: 482, type: !16350)
!16499 = !DILocalVariable(name: "curr", scope: !16494, file: !2620, line: 484, type: !2515)
!16500 = !DILocation(line: 0, scope: !16494)
!16501 = !DILocation(line: 484, column: 26, scope: !16494)
!16502 = !DILocation(line: 493, column: 7, scope: !16503)
!16503 = distinct !DILexicalBlock(scope: !16494, file: !2620, line: 493, column: 6)
!16504 = !DILocation(line: 493, column: 6, scope: !16494)
!16505 = !DILocation(line: 494, column: 3, scope: !16506)
!16506 = distinct !DILexicalBlock(scope: !16503, file: !2620, line: 493, column: 49)
!16507 = !DILocation(line: 495, column: 2, scope: !16506)
!16508 = !DILocation(line: 496, column: 2, scope: !16494)
!16509 = !DILocation(line: 499, column: 1, scope: !16494)
!16510 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14883, file: !14883, line: 106, type: !16476, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16511)
!16511 = !{!16512, !16513}
!16512 = !DILocalVariable(name: "thread", arg: 1, scope: !16510, file: !14883, line: 106, type: !2515)
!16513 = !DILocalVariable(name: "state", scope: !16510, file: !14883, line: 108, type: !190)
!16514 = !DILocation(line: 0, scope: !16510)
!16515 = !DILocation(line: 108, column: 31, scope: !16510)
!16516 = !DILocation(line: 110, column: 16, scope: !16510)
!16517 = !DILocation(line: 111, column: 41, scope: !16510)
!16518 = !DILocation(line: 110, column: 2, scope: !16510)
!16519 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2620, file: !2620, line: 393, type: !16316, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16520)
!16520 = !{!16521}
!16521 = !DILocalVariable(name: "thread", arg: 1, scope: !16519, file: !2620, line: 393, type: !2515)
!16522 = !DILocation(line: 0, scope: !16519)
!16523 = !DILocation(line: 395, column: 6, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16519, file: !2620, line: 395, column: 6)
!16525 = !DILocation(line: 395, column: 6, scope: !16519)
!16526 = !DILocalVariable(name: "thread", arg: 1, scope: !16527, file: !2620, line: 264, type: !2515)
!16527 = distinct !DISubprogram(name: "dequeue_thread", scope: !2620, file: !2620, line: 264, type: !16316, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16528)
!16528 = !{!16526}
!16529 = !DILocation(line: 0, scope: !16527, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 396, column: 3, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16524, file: !2620, line: 395, column: 34)
!16532 = !DILocation(line: 266, column: 15, scope: !16527, inlinedAt: !16530)
!16533 = !DILocation(line: 266, column: 28, scope: !16527, inlinedAt: !16530)
!16534 = !DILocalVariable(name: "thread", arg: 1, scope: !16535, file: !2620, line: 232, type: !2515)
!16535 = distinct !DISubprogram(name: "runq_remove", scope: !2620, file: !2620, line: 232, type: !16316, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16536)
!16536 = !{!16534}
!16537 = !DILocation(line: 0, scope: !16535, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 268, column: 3, scope: !16539, inlinedAt: !16530)
!16539 = distinct !DILexicalBlock(scope: !16540, file: !2620, line: 267, column: 35)
!16540 = distinct !DILexicalBlock(scope: !16527, file: !2620, line: 267, column: 6)
!16541 = !DILocation(line: 234, column: 2, scope: !16535, inlinedAt: !16538)
!16542 = !DILocation(line: 397, column: 2, scope: !16531)
!16543 = !DILocalVariable(name: "thread", arg: 1, scope: !16544, file: !2620, line: 250, type: !2515)
!16544 = distinct !DISubprogram(name: "queue_thread", scope: !2620, file: !2620, line: 250, type: !16316, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16545)
!16545 = !{!16543}
!16546 = !DILocation(line: 0, scope: !16544, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 398, column: 2, scope: !16519)
!16548 = !DILocation(line: 252, column: 15, scope: !16544, inlinedAt: !16547)
!16549 = !DILocation(line: 252, column: 28, scope: !16544, inlinedAt: !16547)
!16550 = !DILocalVariable(name: "thread", arg: 1, scope: !16551, file: !2620, line: 227, type: !2515)
!16551 = distinct !DISubprogram(name: "runq_add", scope: !2620, file: !2620, line: 227, type: !16316, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16552)
!16552 = !{!16550}
!16553 = !DILocation(line: 0, scope: !16551, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 254, column: 3, scope: !16555, inlinedAt: !16547)
!16555 = distinct !DILexicalBlock(scope: !16556, file: !2620, line: 253, column: 35)
!16556 = distinct !DILexicalBlock(scope: !16544, file: !2620, line: 253, column: 6)
!16557 = !DILocalVariable(name: "pq", arg: 1, scope: !16558, file: !2620, line: 181, type: !16561)
!16558 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2620, file: !2620, line: 181, type: !16559, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16562)
!16559 = !DISubroutineType(types: !16560)
!16560 = !{null, !16561, !2515}
!16561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!16562 = !{!16557, !16563, !16564}
!16563 = !DILocalVariable(name: "thread", arg: 2, scope: !16558, file: !2620, line: 182, type: !2515)
!16564 = !DILocalVariable(name: "t", scope: !16558, file: !2620, line: 184, type: !2515)
!16565 = !DILocation(line: 0, scope: !16558, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 229, column: 2, scope: !16551, inlinedAt: !16554)
!16567 = !DILocation(line: 188, column: 2, scope: !16568, inlinedAt: !16566)
!16568 = distinct !DILexicalBlock(scope: !16558, file: !2620, line: 188, column: 2)
!16569 = !DILocation(line: 188, column: 2, scope: !16570, inlinedAt: !16566)
!16570 = distinct !DILexicalBlock(scope: !16568, file: !2620, line: 188, column: 2)
!16571 = !DILocation(line: 0, scope: !16568, inlinedAt: !16566)
!16572 = !DILocation(line: 189, column: 7, scope: !16573, inlinedAt: !16566)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !2620, line: 189, column: 7)
!16574 = distinct !DILexicalBlock(scope: !16570, file: !2620, line: 188, column: 56)
!16575 = !DILocation(line: 189, column: 35, scope: !16573, inlinedAt: !16566)
!16576 = !DILocation(line: 189, column: 7, scope: !16574, inlinedAt: !16566)
!16577 = !DILocation(line: 191, column: 21, scope: !16578, inlinedAt: !16566)
!16578 = distinct !DILexicalBlock(scope: !16573, file: !2620, line: 189, column: 40)
!16579 = !DILocation(line: 190, column: 4, scope: !16578, inlinedAt: !16566)
!16580 = !DILocation(line: 192, column: 4, scope: !16578, inlinedAt: !16566)
!16581 = distinct !{!16581, !16567, !16582}
!16582 = !DILocation(line: 194, column: 2, scope: !16568, inlinedAt: !16566)
!16583 = !DILocation(line: 196, column: 37, scope: !16558, inlinedAt: !16566)
!16584 = !DILocation(line: 196, column: 2, scope: !16558, inlinedAt: !16566)
!16585 = !DILocation(line: 197, column: 1, scope: !16558, inlinedAt: !16566)
!16586 = !DILocation(line: 399, column: 25, scope: !16519)
!16587 = !DILocation(line: 399, column: 22, scope: !16519)
!16588 = !DILocation(line: 399, column: 2, scope: !16519)
!16589 = !DILocation(line: 400, column: 1, scope: !16519)
!16590 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14883, file: !14883, line: 136, type: !16476, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16591)
!16591 = !{!16592}
!16592 = !DILocalVariable(name: "thread", arg: 1, scope: !16590, file: !14883, line: 136, type: !2515)
!16593 = !DILocation(line: 0, scope: !16590)
!16594 = !DILocation(line: 138, column: 9, scope: !16590)
!16595 = !DILocation(line: 138, column: 2, scope: !16590)
!16596 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2620, file: !2620, line: 1137, type: !16559, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16597)
!16597 = !{!16598, !16599}
!16598 = !DILocalVariable(name: "pq", arg: 1, scope: !16596, file: !2620, line: 1137, type: !16561)
!16599 = !DILocalVariable(name: "thread", arg: 2, scope: !16596, file: !2620, line: 1137, type: !2515)
!16600 = !DILocation(line: 0, scope: !16596)
!16601 = !DILocation(line: 1141, column: 33, scope: !16596)
!16602 = !DILocation(line: 1141, column: 2, scope: !16596)
!16603 = !DILocation(line: 1142, column: 1, scope: !16596)
!16604 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !16605, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16607)
!16605 = !DISubroutineType(types: !16606)
!16606 = !{!2616, !16561}
!16607 = !{!16608}
!16608 = !DILocalVariable(name: "list", arg: 1, scope: !16604, file: !151, line: 294, type: !16561)
!16609 = !DILocation(line: 0, scope: !16604)
!16610 = !DILocation(line: 296, column: 9, scope: !16604)
!16611 = !DILocation(line: 296, column: 49, scope: !16604)
!16612 = !DILocation(line: 296, column: 2, scope: !16604)
!16613 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !151, file: !151, line: 443, type: !16614, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16616)
!16614 = !DISubroutineType(types: !16615)
!16615 = !{null, !2616, !2616}
!16616 = !{!16617, !16618, !16619}
!16617 = !DILocalVariable(name: "successor", arg: 1, scope: !16613, file: !151, line: 443, type: !2616)
!16618 = !DILocalVariable(name: "node", arg: 2, scope: !16613, file: !151, line: 443, type: !2616)
!16619 = !DILocalVariable(name: "prev", scope: !16613, file: !151, line: 445, type: !16620)
!16620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2616)
!16621 = !DILocation(line: 0, scope: !16613)
!16622 = !DILocation(line: 445, column: 39, scope: !16613)
!16623 = !DILocation(line: 447, column: 8, scope: !16613)
!16624 = !DILocation(line: 447, column: 13, scope: !16613)
!16625 = !DILocation(line: 448, column: 8, scope: !16613)
!16626 = !DILocation(line: 448, column: 13, scope: !16613)
!16627 = !DILocation(line: 449, column: 8, scope: !16613)
!16628 = !DILocation(line: 449, column: 13, scope: !16613)
!16629 = !DILocation(line: 450, column: 18, scope: !16613)
!16630 = !DILocation(line: 451, column: 1, scope: !16613)
!16631 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !151, file: !151, line: 341, type: !16632, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16634)
!16632 = !DISubroutineType(types: !16633)
!16633 = !{!2616, !16561, !2616}
!16634 = !{!16635, !16636}
!16635 = !DILocalVariable(name: "list", arg: 1, scope: !16631, file: !151, line: 341, type: !16561)
!16636 = !DILocalVariable(name: "node", arg: 2, scope: !16631, file: !151, line: 342, type: !2616)
!16637 = !DILocation(line: 0, scope: !16631)
!16638 = !DILocation(line: 344, column: 15, scope: !16631)
!16639 = !DILocation(line: 344, column: 9, scope: !16631)
!16640 = !DILocation(line: 344, column: 26, scope: !16631)
!16641 = !DILocation(line: 344, column: 2, scope: !16631)
!16642 = distinct !DISubprogram(name: "sys_dlist_append", scope: !151, file: !151, line: 404, type: !16643, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16645)
!16643 = !DISubroutineType(types: !16644)
!16644 = !{null, !16561, !2616}
!16645 = !{!16646, !16647, !16648}
!16646 = !DILocalVariable(name: "list", arg: 1, scope: !16642, file: !151, line: 404, type: !16561)
!16647 = !DILocalVariable(name: "node", arg: 2, scope: !16642, file: !151, line: 404, type: !2616)
!16648 = !DILocalVariable(name: "tail", scope: !16642, file: !151, line: 406, type: !16620)
!16649 = !DILocation(line: 0, scope: !16642)
!16650 = !DILocation(line: 406, column: 34, scope: !16642)
!16651 = !DILocation(line: 408, column: 8, scope: !16642)
!16652 = !DILocation(line: 408, column: 13, scope: !16642)
!16653 = !DILocation(line: 409, column: 8, scope: !16642)
!16654 = !DILocation(line: 409, column: 13, scope: !16642)
!16655 = !DILocation(line: 411, column: 8, scope: !16642)
!16656 = !DILocation(line: 411, column: 13, scope: !16642)
!16657 = !DILocation(line: 412, column: 13, scope: !16642)
!16658 = !DILocation(line: 413, column: 1, scope: !16642)
!16659 = distinct !DISubprogram(name: "update_cache", scope: !2620, file: !2620, line: 559, type: !9899, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16660)
!16660 = !{!16661, !16662}
!16661 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16659, file: !2620, line: 559, type: !107)
!16662 = !DILocalVariable(name: "thread", scope: !16659, file: !2620, line: 562, type: !2515)
!16663 = !DILocation(line: 0, scope: !16659)
!16664 = !DILocation(line: 239, column: 9, scope: !16665, inlinedAt: !16668)
!16665 = distinct !DISubprogram(name: "runq_best", scope: !2620, file: !2620, line: 237, type: !16666, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!16666 = !DISubroutineType(types: !16667)
!16667 = !{!2515}
!16668 = distinct !DILocation(line: 314, column: 28, scope: !16669, inlinedAt: !16672)
!16669 = distinct !DISubprogram(name: "next_up", scope: !2620, file: !2620, line: 312, type: !16666, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16670)
!16670 = !{!16671}
!16671 = !DILocalVariable(name: "thread", scope: !16669, file: !2620, line: 314, type: !2515)
!16672 = distinct !DILocation(line: 562, column: 28, scope: !16659)
!16673 = !DILocation(line: 0, scope: !16669, inlinedAt: !16672)
!16674 = !DILocation(line: 340, column: 17, scope: !16669, inlinedAt: !16672)
!16675 = !DILocation(line: 340, column: 9, scope: !16669, inlinedAt: !16672)
!16676 = !DILocalVariable(name: "thread", arg: 1, scope: !16677, file: !2620, line: 127, type: !2515)
!16677 = distinct !DISubprogram(name: "should_preempt", scope: !2620, file: !2620, line: 127, type: !16678, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16680)
!16678 = !DISubroutineType(types: !16679)
!16679 = !{!136, !2515, !107}
!16680 = !{!16676, !16681}
!16681 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16677, file: !2620, line: 128, type: !107)
!16682 = !DILocation(line: 0, scope: !16677, inlinedAt: !16683)
!16683 = distinct !DILocation(line: 564, column: 6, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16659, file: !2620, line: 564, column: 6)
!16685 = !DILocation(line: 133, column: 17, scope: !16686, inlinedAt: !16683)
!16686 = distinct !DILexicalBlock(scope: !16677, file: !2620, line: 133, column: 6)
!16687 = !DILocation(line: 0, scope: !16684)
!16688 = !DILocation(line: 133, column: 6, scope: !16677, inlinedAt: !16683)
!16689 = !DILocation(line: 140, column: 6, scope: !16690, inlinedAt: !16683)
!16690 = distinct !DILexicalBlock(scope: !16677, file: !2620, line: 140, column: 6)
!16691 = !DILocation(line: 140, column: 6, scope: !16677, inlinedAt: !16683)
!16692 = !DILocation(line: 150, column: 9, scope: !16693, inlinedAt: !16683)
!16693 = distinct !DILexicalBlock(scope: !16677, file: !2620, line: 149, column: 6)
!16694 = !DILocation(line: 149, column: 6, scope: !16677, inlinedAt: !16683)
!16695 = !DILocation(line: 157, column: 6, scope: !16696, inlinedAt: !16683)
!16696 = distinct !DILexicalBlock(scope: !16677, file: !2620, line: 157, column: 6)
!16697 = !DILocation(line: 564, column: 6, scope: !16659)
!16698 = !DILocation(line: 566, column: 14, scope: !16699)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !2620, line: 566, column: 7)
!16700 = distinct !DILexicalBlock(scope: !16684, file: !2620, line: 564, column: 42)
!16701 = !DILocation(line: 566, column: 7, scope: !16700)
!16702 = !DILocation(line: 567, column: 4, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16699, file: !2620, line: 566, column: 27)
!16704 = !DILocation(line: 568, column: 3, scope: !16703)
!16705 = !DILocation(line: 585, column: 1, scope: !16659)
!16706 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2620, file: !2620, line: 1144, type: !16707, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16709)
!16707 = !DISubroutineType(types: !16708)
!16708 = !{!2515, !16561}
!16709 = !{!16710, !16711, !16712}
!16710 = !DILocalVariable(name: "pq", arg: 1, scope: !16706, file: !2620, line: 1144, type: !16561)
!16711 = !DILocalVariable(name: "thread", scope: !16706, file: !2620, line: 1146, type: !2515)
!16712 = !DILocalVariable(name: "n", scope: !16706, file: !2620, line: 1147, type: !2616)
!16713 = !DILocation(line: 0, scope: !16706)
!16714 = !DILocation(line: 1147, column: 19, scope: !16706)
!16715 = !DILocation(line: 1152, column: 2, scope: !16706)
!16716 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14883, file: !14883, line: 115, type: !16476, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16717)
!16717 = !{!16718}
!16718 = !DILocalVariable(name: "thread", arg: 1, scope: !16716, file: !14883, line: 115, type: !2515)
!16719 = !DILocation(line: 0, scope: !16716)
!16720 = !DILocation(line: 117, column: 46, scope: !16716)
!16721 = !DILocation(line: 117, column: 10, scope: !16716)
!16722 = !DILocation(line: 117, column: 9, scope: !16716)
!16723 = !DILocation(line: 117, column: 2, scope: !16716)
!16724 = distinct !DISubprogram(name: "is_preempt", scope: !2620, file: !2620, line: 62, type: !16334, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16725)
!16725 = !{!16726}
!16726 = !DILocalVariable(name: "thread", arg: 1, scope: !16724, file: !2620, line: 62, type: !2515)
!16727 = !DILocation(line: 0, scope: !16724)
!16728 = !DILocation(line: 65, column: 22, scope: !16724)
!16729 = !DILocation(line: 65, column: 30, scope: !16724)
!16730 = !DILocation(line: 65, column: 2, scope: !16724)
!16731 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15277, file: !15277, line: 35, type: !16732, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16736)
!16732 = !DISubroutineType(types: !16733)
!16733 = !{!136, !16734}
!16734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16735, size: 32)
!16735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2566)
!16736 = !{!16737}
!16737 = !DILocalVariable(name: "to", arg: 1, scope: !16731, file: !15277, line: 35, type: !16734)
!16738 = !DILocation(line: 0, scope: !16731)
!16739 = !DILocation(line: 37, column: 35, scope: !16731)
!16740 = !DILocation(line: 37, column: 10, scope: !16731)
!16741 = !DILocation(line: 37, column: 9, scope: !16731)
!16742 = !DILocation(line: 37, column: 2, scope: !16731)
!16743 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !151, file: !151, line: 225, type: !16744, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16748)
!16744 = !DISubroutineType(types: !16745)
!16745 = !{!136, !16746}
!16746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16747, size: 32)
!16747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2525)
!16748 = !{!16749}
!16749 = !DILocalVariable(name: "node", arg: 1, scope: !16743, file: !151, line: 225, type: !16746)
!16750 = !DILocation(line: 0, scope: !16743)
!16751 = !DILocation(line: 227, column: 15, scope: !16743)
!16752 = !DILocation(line: 227, column: 20, scope: !16743)
!16753 = !DILocation(line: 227, column: 2, scope: !16743)
!16754 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !151, file: !151, line: 325, type: !16632, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16755)
!16755 = !{!16756, !16757}
!16756 = !DILocalVariable(name: "list", arg: 1, scope: !16754, file: !151, line: 325, type: !16561)
!16757 = !DILocalVariable(name: "node", arg: 2, scope: !16754, file: !151, line: 326, type: !2616)
!16758 = !DILocation(line: 0, scope: !16754)
!16759 = !DILocation(line: 328, column: 24, scope: !16754)
!16760 = !DILocation(line: 328, column: 15, scope: !16754)
!16761 = !DILocation(line: 328, column: 9, scope: !16754)
!16762 = !DILocation(line: 328, column: 45, scope: !16754)
!16763 = !DILocation(line: 328, column: 2, scope: !16754)
!16764 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !16765, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16767)
!16765 = !DISubroutineType(types: !16766)
!16766 = !{!136, !16561}
!16767 = !{!16768}
!16768 = !DILocalVariable(name: "list", arg: 1, scope: !16764, file: !151, line: 266, type: !16561)
!16769 = !DILocation(line: 0, scope: !16764)
!16770 = !DILocation(line: 268, column: 15, scope: !16764)
!16771 = !DILocation(line: 268, column: 20, scope: !16764)
!16772 = !DILocation(line: 268, column: 2, scope: !16764)
!16773 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !151, file: !151, line: 496, type: !16774, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16776)
!16774 = !DISubroutineType(types: !16775)
!16775 = !{null, !2616}
!16776 = !{!16777, !16778, !16779}
!16777 = !DILocalVariable(name: "node", arg: 1, scope: !16773, file: !151, line: 496, type: !2616)
!16778 = !DILocalVariable(name: "prev", scope: !16773, file: !151, line: 498, type: !16620)
!16779 = !DILocalVariable(name: "next", scope: !16773, file: !151, line: 499, type: !16620)
!16780 = !DILocation(line: 0, scope: !16773)
!16781 = !DILocation(line: 498, column: 34, scope: !16773)
!16782 = !DILocation(line: 499, column: 34, scope: !16773)
!16783 = !DILocation(line: 501, column: 8, scope: !16773)
!16784 = !DILocation(line: 501, column: 13, scope: !16773)
!16785 = !DILocation(line: 502, column: 8, scope: !16773)
!16786 = !DILocation(line: 502, column: 13, scope: !16773)
!16787 = !DILocation(line: 503, column: 2, scope: !16773)
!16788 = !DILocation(line: 504, column: 1, scope: !16773)
!16789 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !16774, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16790)
!16790 = !{!16791}
!16791 = !DILocalVariable(name: "node", arg: 1, scope: !16789, file: !151, line: 211, type: !2616)
!16792 = !DILocation(line: 0, scope: !16789)
!16793 = !DILocation(line: 213, column: 8, scope: !16789)
!16794 = !DILocation(line: 213, column: 13, scope: !16789)
!16795 = !DILocation(line: 214, column: 8, scope: !16789)
!16796 = !DILocation(line: 214, column: 13, scope: !16789)
!16797 = !DILocation(line: 215, column: 1, scope: !16789)
!16798 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14883, file: !14883, line: 131, type: !16799, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16801)
!16799 = !DISubroutineType(types: !16800)
!16800 = !{!136, !2515, !108}
!16801 = !{!16802, !16803}
!16802 = !DILocalVariable(name: "thread", arg: 1, scope: !16798, file: !14883, line: 131, type: !2515)
!16803 = !DILocalVariable(name: "state", arg: 2, scope: !16798, file: !14883, line: 131, type: !108)
!16804 = !DILocation(line: 0, scope: !16798)
!16805 = !DILocation(line: 133, column: 23, scope: !16798)
!16806 = !DILocation(line: 133, column: 45, scope: !16798)
!16807 = !DILocation(line: 133, column: 2, scope: !16798)
!16808 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14883, file: !14883, line: 211, type: !16168, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16809)
!16809 = !{!16810, !16811}
!16810 = !DILocalVariable(name: "prio", arg: 1, scope: !16808, file: !14883, line: 211, type: !107)
!16811 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16808, file: !14883, line: 211, type: !107)
!16812 = !DILocation(line: 0, scope: !16808)
!16813 = !DILocation(line: 213, column: 9, scope: !16808)
!16814 = !DILocation(line: 213, column: 2, scope: !16808)
!16815 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14883, file: !14883, line: 83, type: !16476, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16816)
!16816 = !{!16817}
!16817 = !DILocalVariable(name: "thread", arg: 1, scope: !16815, file: !14883, line: 83, type: !2515)
!16818 = !DILocation(line: 0, scope: !16815)
!16819 = !DILocation(line: 89, column: 16, scope: !16815)
!16820 = !DILocation(line: 89, column: 2, scope: !16815)
!16821 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14883, file: !14883, line: 206, type: !16168, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16822)
!16822 = !{!16823, !16824}
!16823 = !DILocalVariable(name: "prio1", arg: 1, scope: !16821, file: !14883, line: 206, type: !107)
!16824 = !DILocalVariable(name: "prio2", arg: 2, scope: !16821, file: !14883, line: 206, type: !107)
!16825 = !DILocation(line: 0, scope: !16821)
!16826 = !DILocation(line: 208, column: 15, scope: !16821)
!16827 = !DILocation(line: 208, column: 2, scope: !16821)
!16828 = distinct !DISubprogram(name: "z_ready_thread", scope: !2620, file: !2620, line: 635, type: !16316, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16829)
!16829 = !{!16830, !16831, !16833}
!16830 = !DILocalVariable(name: "thread", arg: 1, scope: !16828, file: !2620, line: 635, type: !2515)
!16831 = !DILocalVariable(name: "__i", scope: !16832, file: !2620, line: 637, type: !16350)
!16832 = distinct !DILexicalBlock(scope: !16828, file: !2620, line: 637, column: 2)
!16833 = !DILocalVariable(name: "__key", scope: !16832, file: !2620, line: 637, type: !16350)
!16834 = !DILocation(line: 0, scope: !16828)
!16835 = !DILocation(line: 0, scope: !16832)
!16836 = !DILocation(line: 0, scope: !16358, inlinedAt: !16837)
!16837 = distinct !DILocation(line: 637, column: 2, scope: !16832)
!16838 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !16839)
!16839 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !16837)
!16840 = !DILocation(line: 0, scope: !16367, inlinedAt: !16839)
!16841 = !DILocation(line: 639, column: 4, scope: !16842)
!16842 = distinct !DILexicalBlock(scope: !16843, file: !2620, line: 638, column: 41)
!16843 = distinct !DILexicalBlock(scope: !16844, file: !2620, line: 638, column: 7)
!16844 = distinct !DILexicalBlock(scope: !16845, file: !2620, line: 637, column: 26)
!16845 = distinct !DILexicalBlock(scope: !16832, file: !2620, line: 637, column: 2)
!16846 = !DILocation(line: 0, scope: !16385, inlinedAt: !16847)
!16847 = distinct !DILocation(line: 637, column: 2, scope: !16845)
!16848 = !DILocation(line: 0, scope: !16393, inlinedAt: !16849)
!16849 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !16847)
!16850 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !16849)
!16851 = !DILocation(line: 642, column: 1, scope: !16828)
!16852 = distinct !DISubprogram(name: "ready_thread", scope: !2620, file: !2620, line: 617, type: !16316, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16853)
!16853 = !{!16854}
!16854 = !DILocalVariable(name: "thread", arg: 1, scope: !16852, file: !2620, line: 617, type: !2515)
!16855 = !DILocation(line: 0, scope: !16852)
!16856 = !DILocation(line: 626, column: 7, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16852, file: !2620, line: 626, column: 6)
!16858 = !DILocation(line: 626, column: 34, scope: !16857)
!16859 = !DILocation(line: 626, column: 37, scope: !16857)
!16860 = !DILocation(line: 626, column: 6, scope: !16852)
!16861 = !DILocation(line: 0, scope: !16544, inlinedAt: !16862)
!16862 = distinct !DILocation(line: 629, column: 3, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16857, file: !2620, line: 626, column: 64)
!16864 = !DILocation(line: 252, column: 15, scope: !16544, inlinedAt: !16862)
!16865 = !DILocation(line: 252, column: 28, scope: !16544, inlinedAt: !16862)
!16866 = !DILocation(line: 0, scope: !16551, inlinedAt: !16867)
!16867 = distinct !DILocation(line: 254, column: 3, scope: !16555, inlinedAt: !16862)
!16868 = !DILocation(line: 0, scope: !16558, inlinedAt: !16869)
!16869 = distinct !DILocation(line: 229, column: 2, scope: !16551, inlinedAt: !16867)
!16870 = !DILocation(line: 188, column: 2, scope: !16568, inlinedAt: !16869)
!16871 = !DILocation(line: 188, column: 2, scope: !16570, inlinedAt: !16869)
!16872 = !DILocation(line: 0, scope: !16568, inlinedAt: !16869)
!16873 = !DILocation(line: 189, column: 7, scope: !16573, inlinedAt: !16869)
!16874 = !DILocation(line: 189, column: 35, scope: !16573, inlinedAt: !16869)
!16875 = !DILocation(line: 189, column: 7, scope: !16574, inlinedAt: !16869)
!16876 = !DILocation(line: 191, column: 21, scope: !16578, inlinedAt: !16869)
!16877 = !DILocation(line: 190, column: 4, scope: !16578, inlinedAt: !16869)
!16878 = !DILocation(line: 192, column: 4, scope: !16578, inlinedAt: !16869)
!16879 = distinct !{!16879, !16870, !16880}
!16880 = !DILocation(line: 194, column: 2, scope: !16568, inlinedAt: !16869)
!16881 = !DILocation(line: 196, column: 37, scope: !16558, inlinedAt: !16869)
!16882 = !DILocation(line: 196, column: 2, scope: !16558, inlinedAt: !16869)
!16883 = !DILocation(line: 197, column: 1, scope: !16558, inlinedAt: !16869)
!16884 = !DILocation(line: 630, column: 3, scope: !16863)
!16885 = !DILocation(line: 632, column: 2, scope: !16863)
!16886 = !DILocation(line: 633, column: 1, scope: !16852)
!16887 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14883, file: !14883, line: 120, type: !16476, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16888)
!16888 = !{!16889}
!16889 = !DILocalVariable(name: "thread", arg: 1, scope: !16887, file: !14883, line: 120, type: !2515)
!16890 = !DILocation(line: 0, scope: !16887)
!16891 = !DILocation(line: 122, column: 12, scope: !16887)
!16892 = !DILocation(line: 122, column: 62, scope: !16887)
!16893 = !DILocation(line: 123, column: 4, scope: !16887)
!16894 = !DILocation(line: 122, column: 2, scope: !16887)
!16895 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2620, file: !2620, line: 644, type: !16316, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16896)
!16896 = !{!16897, !16898, !16900}
!16897 = !DILocalVariable(name: "thread", arg: 1, scope: !16895, file: !2620, line: 644, type: !2515)
!16898 = !DILocalVariable(name: "__i", scope: !16899, file: !2620, line: 646, type: !16350)
!16899 = distinct !DILexicalBlock(scope: !16895, file: !2620, line: 646, column: 2)
!16900 = !DILocalVariable(name: "__key", scope: !16899, file: !2620, line: 646, type: !16350)
!16901 = !DILocation(line: 0, scope: !16895)
!16902 = !DILocation(line: 0, scope: !16899)
!16903 = !DILocation(line: 0, scope: !16358, inlinedAt: !16904)
!16904 = distinct !DILocation(line: 646, column: 2, scope: !16899)
!16905 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !16906)
!16906 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !16904)
!16907 = !DILocation(line: 0, scope: !16367, inlinedAt: !16906)
!16908 = !DILocation(line: 647, column: 3, scope: !16909)
!16909 = distinct !DILexicalBlock(scope: !16910, file: !2620, line: 646, column: 26)
!16910 = distinct !DILexicalBlock(scope: !16899, file: !2620, line: 646, column: 2)
!16911 = !DILocation(line: 0, scope: !16385, inlinedAt: !16912)
!16912 = distinct !DILocation(line: 646, column: 2, scope: !16910)
!16913 = !DILocation(line: 0, scope: !16393, inlinedAt: !16914)
!16914 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !16912)
!16915 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !16914)
!16916 = !DILocation(line: 649, column: 1, scope: !16895)
!16917 = distinct !DISubprogram(name: "z_sched_start", scope: !2620, file: !2620, line: 651, type: !16316, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16918)
!16918 = !{!16919, !16920}
!16919 = !DILocalVariable(name: "thread", arg: 1, scope: !16917, file: !2620, line: 651, type: !2515)
!16920 = !DILocalVariable(name: "key", scope: !16917, file: !2620, line: 653, type: !16350)
!16921 = !DILocation(line: 0, scope: !16917)
!16922 = !DILocation(line: 0, scope: !16358, inlinedAt: !16923)
!16923 = distinct !DILocation(line: 653, column: 25, scope: !16917)
!16924 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !16925)
!16925 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !16923)
!16926 = !DILocation(line: 0, scope: !16367, inlinedAt: !16925)
!16927 = !DILocation(line: 655, column: 6, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16917, file: !2620, line: 655, column: 6)
!16929 = !DILocation(line: 655, column: 6, scope: !16917)
!16930 = !DILocation(line: 0, scope: !16385, inlinedAt: !16931)
!16931 = distinct !DILocation(line: 656, column: 3, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16928, file: !2620, line: 655, column: 36)
!16933 = !DILocation(line: 0, scope: !16393, inlinedAt: !16934)
!16934 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !16931)
!16935 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !16934)
!16936 = !DILocation(line: 657, column: 3, scope: !16932)
!16937 = !DILocation(line: 660, column: 2, scope: !16917)
!16938 = !DILocation(line: 661, column: 2, scope: !16917)
!16939 = !DILocation(line: 662, column: 2, scope: !16917)
!16940 = !DILocation(line: 663, column: 1, scope: !16917)
!16941 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14883, file: !14883, line: 126, type: !16476, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16942)
!16942 = !{!16943}
!16943 = !DILocalVariable(name: "thread", arg: 1, scope: !16941, file: !14883, line: 126, type: !2515)
!16944 = !DILocation(line: 0, scope: !16941)
!16945 = !DILocation(line: 128, column: 23, scope: !16941)
!16946 = !DILocation(line: 128, column: 36, scope: !16941)
!16947 = !DILocation(line: 128, column: 56, scope: !16941)
!16948 = !DILocation(line: 128, column: 2, scope: !16941)
!16949 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14883, file: !14883, line: 155, type: !16316, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16950)
!16950 = !{!16951}
!16951 = !DILocalVariable(name: "thread", arg: 1, scope: !16949, file: !14883, line: 155, type: !2515)
!16952 = !DILocation(line: 0, scope: !16949)
!16953 = !DILocation(line: 157, column: 15, scope: !16949)
!16954 = !DILocation(line: 157, column: 28, scope: !16949)
!16955 = !DILocation(line: 158, column: 1, scope: !16949)
!16956 = distinct !DISubprogram(name: "z_reschedule", scope: !2620, file: !2620, line: 967, type: !16386, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16957)
!16957 = !{!16958, !16959}
!16958 = !DILocalVariable(name: "lock", arg: 1, scope: !16956, file: !2620, line: 967, type: !16361)
!16959 = !DILocalVariable(name: "key", arg: 2, scope: !16956, file: !2620, line: 967, type: !16350)
!16960 = !DILocation(line: 0, scope: !16956)
!16961 = !DILocation(line: 969, column: 6, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16956, file: !2620, line: 969, column: 6)
!16963 = !DILocation(line: 969, column: 23, scope: !16962)
!16964 = !DILocation(line: 969, column: 26, scope: !16962)
!16965 = !DILocation(line: 969, column: 6, scope: !16956)
!16966 = !DILocalVariable(name: "key", arg: 2, scope: !16967, file: !14987, line: 193, type: !16350)
!16967 = distinct !DISubprogram(name: "z_swap", scope: !14987, file: !14987, line: 193, type: !16968, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16970)
!16968 = !DISubroutineType(types: !16969)
!16969 = !{!107, !16361, !16350}
!16970 = !{!16971, !16966}
!16971 = !DILocalVariable(name: "lock", arg: 1, scope: !16967, file: !14987, line: 193, type: !16361)
!16972 = !DILocation(line: 0, scope: !16967, inlinedAt: !16973)
!16973 = distinct !DILocation(line: 970, column: 3, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16962, file: !2620, line: 969, column: 39)
!16975 = !DILocation(line: 196, column: 9, scope: !16967, inlinedAt: !16973)
!16976 = !DILocation(line: 971, column: 2, scope: !16974)
!16977 = !DILocation(line: 0, scope: !16385, inlinedAt: !16978)
!16978 = distinct !DILocation(line: 972, column: 3, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16962, file: !2620, line: 971, column: 9)
!16980 = !DILocation(line: 0, scope: !16393, inlinedAt: !16981)
!16981 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !16978)
!16982 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !16981)
!16983 = !DILocation(line: 975, column: 1, scope: !16956)
!16984 = distinct !DISubprogram(name: "resched", scope: !2620, file: !2620, line: 940, type: !16985, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16987)
!16985 = !DISubroutineType(types: !16986)
!16986 = !{!136, !108}
!16987 = !{!16988}
!16988 = !DILocalVariable(name: "key", arg: 1, scope: !16984, file: !2620, line: 940, type: !108)
!16989 = !DILocation(line: 0, scope: !16984)
!16990 = !DILocalVariable(name: "key", arg: 1, scope: !16991, file: !7118, line: 112, type: !32)
!16991 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7118, file: !7118, line: 112, type: !16992, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !16994)
!16992 = !DISubroutineType(types: !16993)
!16993 = !{!136, !32}
!16994 = !{!16990}
!16995 = !DILocation(line: 0, scope: !16991, inlinedAt: !16996)
!16996 = distinct !DILocation(line: 946, column: 9, scope: !16984)
!16997 = !DILocation(line: 115, column: 13, scope: !16991, inlinedAt: !16996)
!16998 = !DILocation(line: 946, column: 32, scope: !16984)
!16999 = !DILocation(line: 1031, column: 3, scope: !17000, inlinedAt: !17003)
!17000 = distinct !DISubprogram(name: "__get_IPSR", scope: !7439, file: !7439, line: 1027, type: !7520, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17001)
!17001 = !{!17002}
!17002 = !DILocalVariable(name: "result", scope: !17000, file: !7439, line: 1029, type: !108)
!17003 = distinct !DILocation(line: 48, column: 10, scope: !17004, inlinedAt: !17005)
!17004 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8457, file: !8457, line: 46, type: !8458, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17005 = distinct !DILocation(line: 946, column: 36, scope: !16984)
!17006 = !{i64 3770086}
!17007 = !DILocation(line: 0, scope: !17000, inlinedAt: !17003)
!17008 = !DILocation(line: 48, column: 9, scope: !17004, inlinedAt: !17005)
!17009 = !DILocation(line: 946, column: 2, scope: !16984)
!17010 = distinct !DISubprogram(name: "need_swap", scope: !2620, file: !2620, line: 953, type: !8458, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17011)
!17011 = !{!17012}
!17012 = !DILocalVariable(name: "new_thread", scope: !17010, file: !2620, line: 959, type: !2515)
!17013 = !DILocation(line: 962, column: 31, scope: !17010)
!17014 = !DILocation(line: 0, scope: !17010)
!17015 = !DILocation(line: 963, column: 23, scope: !17010)
!17016 = !DILocation(line: 963, column: 20, scope: !17010)
!17017 = !DILocation(line: 963, column: 2, scope: !17010)
!17018 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14987, file: !14987, line: 181, type: !7449, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17019)
!17019 = !{!17020, !17021}
!17020 = !DILocalVariable(name: "key", arg: 1, scope: !17018, file: !14987, line: 181, type: !32)
!17021 = !DILocalVariable(name: "ret", scope: !17018, file: !14987, line: 183, type: !107)
!17022 = !DILocation(line: 0, scope: !17018)
!17023 = !DILocation(line: 185, column: 8, scope: !17018)
!17024 = !DILocation(line: 186, column: 2, scope: !17018)
!17025 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2620, file: !2620, line: 665, type: !16316, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17026)
!17026 = !{!17027, !17028, !17030}
!17027 = !DILocalVariable(name: "thread", arg: 1, scope: !17025, file: !2620, line: 665, type: !2515)
!17028 = !DILocalVariable(name: "__i", scope: !17029, file: !2620, line: 671, type: !16350)
!17029 = distinct !DILexicalBlock(scope: !17025, file: !2620, line: 671, column: 2)
!17030 = !DILocalVariable(name: "__key", scope: !17029, file: !2620, line: 671, type: !16350)
!17031 = !DILocation(line: 0, scope: !17025)
!17032 = !DILocation(line: 669, column: 8, scope: !17025)
!17033 = !DILocation(line: 0, scope: !17029)
!17034 = !DILocation(line: 0, scope: !16358, inlinedAt: !17035)
!17035 = distinct !DILocation(line: 671, column: 2, scope: !17029)
!17036 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17035)
!17038 = !DILocation(line: 0, scope: !16367, inlinedAt: !17037)
!17039 = !DILocation(line: 672, column: 7, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17041, file: !2620, line: 672, column: 7)
!17041 = distinct !DILexicalBlock(scope: !17042, file: !2620, line: 671, column: 26)
!17042 = distinct !DILexicalBlock(scope: !17029, file: !2620, line: 671, column: 2)
!17043 = !DILocation(line: 672, column: 7, scope: !17041)
!17044 = !DILocation(line: 0, scope: !16527, inlinedAt: !17045)
!17045 = distinct !DILocation(line: 673, column: 4, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !17040, file: !2620, line: 672, column: 35)
!17047 = !DILocation(line: 266, column: 15, scope: !16527, inlinedAt: !17045)
!17048 = !DILocation(line: 266, column: 28, scope: !16527, inlinedAt: !17045)
!17049 = !DILocation(line: 0, scope: !16535, inlinedAt: !17050)
!17050 = distinct !DILocation(line: 268, column: 3, scope: !16539, inlinedAt: !17045)
!17051 = !DILocation(line: 234, column: 2, scope: !16535, inlinedAt: !17050)
!17052 = !DILocation(line: 674, column: 3, scope: !17046)
!17053 = !DILocation(line: 675, column: 3, scope: !17041)
!17054 = !DILocation(line: 676, column: 26, scope: !17041)
!17055 = !DILocation(line: 676, column: 23, scope: !17041)
!17056 = !DILocation(line: 676, column: 3, scope: !17041)
!17057 = !DILocation(line: 0, scope: !16385, inlinedAt: !17058)
!17058 = distinct !DILocation(line: 671, column: 2, scope: !17042)
!17059 = !DILocation(line: 0, scope: !16393, inlinedAt: !17060)
!17060 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17058)
!17061 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17060)
!17062 = !DILocation(line: 679, column: 16, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17025, file: !2620, line: 679, column: 6)
!17064 = !DILocation(line: 679, column: 13, scope: !17063)
!17065 = !DILocation(line: 679, column: 6, scope: !17025)
!17066 = !DILocation(line: 680, column: 3, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17063, file: !2620, line: 679, column: 26)
!17068 = !DILocation(line: 681, column: 2, scope: !17067)
!17069 = !DILocation(line: 684, column: 1, scope: !17025)
!17070 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15277, file: !15277, line: 52, type: !16334, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17071)
!17071 = !{!17072}
!17072 = !DILocalVariable(name: "thread", arg: 1, scope: !17070, file: !15277, line: 52, type: !2515)
!17073 = !DILocation(line: 0, scope: !17070)
!17074 = !DILocation(line: 54, column: 39, scope: !17070)
!17075 = !DILocation(line: 54, column: 9, scope: !17070)
!17076 = !DILocation(line: 54, column: 2, scope: !17070)
!17077 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14883, file: !14883, line: 141, type: !16316, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17078)
!17078 = !{!17079}
!17079 = !DILocalVariable(name: "thread", arg: 1, scope: !17077, file: !14883, line: 141, type: !2515)
!17080 = !DILocation(line: 0, scope: !17077)
!17081 = !DILocation(line: 143, column: 15, scope: !17077)
!17082 = !DILocation(line: 143, column: 28, scope: !17077)
!17083 = !DILocation(line: 146, column: 1, scope: !17077)
!17084 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14883, file: !14883, line: 73, type: !337, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17085 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 75, column: 30, scope: !17084)
!17087 = !DILocation(line: 0, scope: !16367, inlinedAt: !17086)
!17088 = !DILocation(line: 75, column: 9, scope: !17084)
!17089 = !DILocation(line: 76, column: 1, scope: !17084)
!17090 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2620, file: !2620, line: 977, type: !7530, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17091)
!17091 = !{!17092}
!17092 = !DILocalVariable(name: "key", arg: 1, scope: !17090, file: !2620, line: 977, type: !108)
!17093 = !DILocation(line: 0, scope: !17090)
!17094 = !DILocation(line: 979, column: 6, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17090, file: !2620, line: 979, column: 6)
!17096 = !DILocation(line: 979, column: 6, scope: !17090)
!17097 = !DILocation(line: 980, column: 3, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !17095, file: !2620, line: 979, column: 20)
!17099 = !DILocation(line: 981, column: 2, scope: !17098)
!17100 = !DILocation(line: 0, scope: !16393, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 982, column: 3, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17095, file: !2620, line: 981, column: 9)
!17103 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17101)
!17104 = !DILocation(line: 985, column: 1, scope: !17090)
!17105 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2620, file: !2620, line: 695, type: !16316, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17106)
!17106 = !{!17107, !17108}
!17107 = !DILocalVariable(name: "thread", arg: 1, scope: !17105, file: !2620, line: 695, type: !2515)
!17108 = !DILocalVariable(name: "key", scope: !17105, file: !2620, line: 699, type: !16350)
!17109 = !DILocation(line: 0, scope: !17105)
!17110 = !DILocation(line: 0, scope: !16358, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 699, column: 25, scope: !17105)
!17112 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17113)
!17113 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17111)
!17114 = !DILocation(line: 0, scope: !16367, inlinedAt: !17113)
!17115 = !DILocation(line: 702, column: 7, scope: !17116)
!17116 = distinct !DILexicalBlock(scope: !17105, file: !2620, line: 702, column: 6)
!17117 = !DILocation(line: 702, column: 6, scope: !17105)
!17118 = !DILocation(line: 0, scope: !16385, inlinedAt: !17119)
!17119 = distinct !DILocation(line: 703, column: 3, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17116, file: !2620, line: 702, column: 38)
!17121 = !DILocation(line: 0, scope: !16393, inlinedAt: !17122)
!17122 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17119)
!17123 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17122)
!17124 = !DILocation(line: 704, column: 3, scope: !17120)
!17125 = !DILocation(line: 707, column: 2, scope: !17105)
!17126 = !DILocation(line: 708, column: 2, scope: !17105)
!17127 = !DILocation(line: 710, column: 2, scope: !17105)
!17128 = !DILocation(line: 713, column: 1, scope: !17105)
!17129 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14883, file: !14883, line: 96, type: !16476, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17130)
!17130 = !{!17131}
!17131 = !DILocalVariable(name: "thread", arg: 1, scope: !17129, file: !14883, line: 96, type: !2515)
!17132 = !DILocation(line: 0, scope: !17129)
!17133 = !DILocation(line: 98, column: 23, scope: !17129)
!17134 = !DILocation(line: 98, column: 36, scope: !17129)
!17135 = !DILocation(line: 98, column: 57, scope: !17129)
!17136 = !DILocation(line: 98, column: 2, scope: !17129)
!17137 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14883, file: !14883, line: 148, type: !16316, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17138)
!17138 = !{!17139}
!17139 = !DILocalVariable(name: "thread", arg: 1, scope: !17137, file: !14883, line: 148, type: !2515)
!17140 = !DILocation(line: 0, scope: !17137)
!17141 = !DILocation(line: 150, column: 15, scope: !17137)
!17142 = !DILocation(line: 150, column: 28, scope: !17137)
!17143 = !DILocation(line: 153, column: 1, scope: !17137)
!17144 = distinct !DISubprogram(name: "z_pend_thread", scope: !2620, file: !2620, line: 770, type: !17145, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17151)
!17145 = !DISubroutineType(types: !17146)
!17146 = !{null, !2515, !2546, !17147}
!17147 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !17148)
!17148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !17149)
!17149 = !{!17150}
!17150 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17148, file: !103, line: 66, baseType: !102, size: 64)
!17151 = !{!17152, !17153, !17154, !17155, !17157}
!17152 = !DILocalVariable(name: "thread", arg: 1, scope: !17144, file: !2620, line: 770, type: !2515)
!17153 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17144, file: !2620, line: 770, type: !2546)
!17154 = !DILocalVariable(name: "timeout", arg: 3, scope: !17144, file: !2620, line: 771, type: !17147)
!17155 = !DILocalVariable(name: "__i", scope: !17156, file: !2620, line: 774, type: !16350)
!17156 = distinct !DILexicalBlock(scope: !17144, file: !2620, line: 774, column: 2)
!17157 = !DILocalVariable(name: "__key", scope: !17156, file: !2620, line: 774, type: !16350)
!17158 = !DILocation(line: 0, scope: !17144)
!17159 = !DILocation(line: 0, scope: !17156)
!17160 = !DILocation(line: 0, scope: !16358, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 774, column: 2, scope: !17156)
!17162 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17161)
!17164 = !DILocation(line: 0, scope: !16367, inlinedAt: !17163)
!17165 = !DILocation(line: 775, column: 3, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17167, file: !2620, line: 774, column: 26)
!17167 = distinct !DILexicalBlock(scope: !17156, file: !2620, line: 774, column: 2)
!17168 = !DILocation(line: 0, scope: !16385, inlinedAt: !17169)
!17169 = distinct !DILocation(line: 774, column: 2, scope: !17167)
!17170 = !DILocation(line: 0, scope: !16393, inlinedAt: !17171)
!17171 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17169)
!17172 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17171)
!17173 = !DILocation(line: 777, column: 1, scope: !17144)
!17174 = distinct !DISubprogram(name: "pend_locked", scope: !2620, file: !2620, line: 760, type: !17145, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17175)
!17175 = !{!17176, !17177, !17178}
!17176 = !DILocalVariable(name: "thread", arg: 1, scope: !17174, file: !2620, line: 760, type: !2515)
!17177 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17174, file: !2620, line: 760, type: !2546)
!17178 = !DILocalVariable(name: "timeout", arg: 3, scope: !17174, file: !2620, line: 761, type: !17147)
!17179 = !DILocation(line: 0, scope: !17174)
!17180 = !DILocation(line: 766, column: 2, scope: !17174)
!17181 = !DILocation(line: 767, column: 2, scope: !17174)
!17182 = !DILocation(line: 768, column: 1, scope: !17174)
!17183 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2620, file: !2620, line: 740, type: !17184, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17186)
!17184 = !DISubroutineType(types: !17185)
!17185 = !{null, !2515, !2546}
!17186 = !{!17187, !17188}
!17187 = !DILocalVariable(name: "thread", arg: 1, scope: !17183, file: !2620, line: 740, type: !2515)
!17188 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17183, file: !2620, line: 740, type: !2546)
!17189 = !DILocation(line: 0, scope: !17183)
!17190 = !DILocation(line: 742, column: 2, scope: !17183)
!17191 = !DILocation(line: 743, column: 2, scope: !17183)
!17192 = !DILocation(line: 747, column: 13, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17183, file: !2620, line: 747, column: 6)
!17194 = !DILocation(line: 747, column: 6, scope: !17183)
!17195 = !DILocation(line: 748, column: 16, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17193, file: !2620, line: 747, column: 22)
!17197 = !DILocation(line: 748, column: 26, scope: !17196)
!17198 = !DILocation(line: 749, column: 28, scope: !17196)
!17199 = !DILocation(line: 0, scope: !16558, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 749, column: 3, scope: !17196)
!17201 = !DILocation(line: 188, column: 2, scope: !16568, inlinedAt: !17200)
!17202 = !DILocation(line: 188, column: 2, scope: !16570, inlinedAt: !17200)
!17203 = !DILocation(line: 0, scope: !16568, inlinedAt: !17200)
!17204 = !DILocation(line: 189, column: 7, scope: !16573, inlinedAt: !17200)
!17205 = !DILocation(line: 189, column: 35, scope: !16573, inlinedAt: !17200)
!17206 = !DILocation(line: 189, column: 7, scope: !16574, inlinedAt: !17200)
!17207 = !DILocation(line: 191, column: 21, scope: !16578, inlinedAt: !17200)
!17208 = !DILocation(line: 190, column: 4, scope: !16578, inlinedAt: !17200)
!17209 = !DILocation(line: 192, column: 4, scope: !16578, inlinedAt: !17200)
!17210 = distinct !{!17210, !17201, !17211}
!17211 = !DILocation(line: 194, column: 2, scope: !16568, inlinedAt: !17200)
!17212 = !DILocation(line: 196, column: 37, scope: !16558, inlinedAt: !17200)
!17213 = !DILocation(line: 196, column: 2, scope: !16558, inlinedAt: !17200)
!17214 = !DILocation(line: 197, column: 1, scope: !16558, inlinedAt: !17200)
!17215 = !DILocation(line: 751, column: 1, scope: !17183)
!17216 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2620, file: !2620, line: 753, type: !17217, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17219)
!17217 = !DISubroutineType(types: !17218)
!17218 = !{null, !2515, !17147}
!17219 = !{!17220, !17221}
!17220 = !DILocalVariable(name: "thread", arg: 1, scope: !17216, file: !2620, line: 753, type: !2515)
!17221 = !DILocalVariable(name: "timeout", arg: 2, scope: !17216, file: !2620, line: 753, type: !17147)
!17222 = !DILocation(line: 0, scope: !17216)
!17223 = !DILocation(line: 755, column: 7, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17216, file: !2620, line: 755, column: 6)
!17225 = !DILocation(line: 755, column: 6, scope: !17216)
!17226 = !DILocation(line: 756, column: 3, scope: !17227)
!17227 = distinct !DILexicalBlock(scope: !17224, file: !2620, line: 755, column: 41)
!17228 = !DILocation(line: 757, column: 2, scope: !17227)
!17229 = !DILocation(line: 758, column: 1, scope: !17216)
!17230 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15277, file: !15277, line: 47, type: !17217, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17231)
!17231 = !{!17232, !17233}
!17232 = !DILocalVariable(name: "thread", arg: 1, scope: !17230, file: !15277, line: 47, type: !2515)
!17233 = !DILocalVariable(name: "ticks", arg: 2, scope: !17230, file: !15277, line: 47, type: !17147)
!17234 = !DILocation(line: 0, scope: !17230)
!17235 = !DILocation(line: 49, column: 30, scope: !17230)
!17236 = !DILocation(line: 49, column: 2, scope: !17230)
!17237 = !DILocation(line: 50, column: 1, scope: !17230)
!17238 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2620, file: !2620, line: 795, type: !2572, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17239)
!17239 = !{!17240, !17241, !17242, !17244, !17245}
!17240 = !DILocalVariable(name: "timeout", arg: 1, scope: !17238, file: !2620, line: 795, type: !2574)
!17241 = !DILocalVariable(name: "thread", scope: !17238, file: !2620, line: 797, type: !2515)
!17242 = !DILocalVariable(name: "__i", scope: !17243, file: !2620, line: 800, type: !16350)
!17243 = distinct !DILexicalBlock(scope: !17238, file: !2620, line: 800, column: 2)
!17244 = !DILocalVariable(name: "__key", scope: !17243, file: !2620, line: 800, type: !16350)
!17245 = !DILocalVariable(name: "killed", scope: !17246, file: !2620, line: 801, type: !136)
!17246 = distinct !DILexicalBlock(scope: !17247, file: !2620, line: 800, column: 26)
!17247 = distinct !DILexicalBlock(scope: !17243, file: !2620, line: 800, column: 2)
!17248 = !DILocation(line: 0, scope: !17238)
!17249 = !DILocation(line: 797, column: 28, scope: !17238)
!17250 = !DILocation(line: 0, scope: !17243)
!17251 = !DILocation(line: 0, scope: !16358, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 800, column: 2, scope: !17243)
!17253 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17254)
!17254 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17252)
!17255 = !DILocation(line: 0, scope: !16367, inlinedAt: !17254)
!17256 = !DILocation(line: 801, column: 27, scope: !17246)
!17257 = !DILocation(line: 801, column: 32, scope: !17246)
!17258 = !DILocation(line: 801, column: 61, scope: !17246)
!17259 = !DILocation(line: 0, scope: !17246)
!17260 = !DILocation(line: 804, column: 7, scope: !17246)
!17261 = !DILocation(line: 805, column: 21, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17263, file: !2620, line: 805, column: 8)
!17263 = distinct !DILexicalBlock(scope: !17264, file: !2620, line: 804, column: 16)
!17264 = distinct !DILexicalBlock(scope: !17246, file: !2620, line: 804, column: 7)
!17265 = !DILocation(line: 805, column: 31, scope: !17262)
!17266 = !DILocation(line: 805, column: 8, scope: !17263)
!17267 = !DILocation(line: 806, column: 5, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17262, file: !2620, line: 805, column: 40)
!17269 = !DILocation(line: 807, column: 4, scope: !17268)
!17270 = !DILocation(line: 808, column: 4, scope: !17263)
!17271 = !DILocation(line: 809, column: 4, scope: !17263)
!17272 = !DILocation(line: 810, column: 4, scope: !17263)
!17273 = !DILocation(line: 811, column: 3, scope: !17263)
!17274 = !DILocation(line: 0, scope: !16385, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 800, column: 2, scope: !17247)
!17276 = !DILocation(line: 0, scope: !16393, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17275)
!17278 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17277)
!17279 = !DILocation(line: 813, column: 1, scope: !17238)
!17280 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2620, file: !2620, line: 779, type: !16316, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17281)
!17281 = !{!17282}
!17282 = !DILocalVariable(name: "thread", arg: 1, scope: !17280, file: !2620, line: 779, type: !2515)
!17283 = !DILocation(line: 0, scope: !17280)
!17284 = !DILocation(line: 781, column: 2, scope: !17280)
!17285 = !DILocation(line: 782, column: 2, scope: !17280)
!17286 = !DILocation(line: 783, column: 15, scope: !17280)
!17287 = !DILocation(line: 783, column: 25, scope: !17280)
!17288 = !DILocation(line: 784, column: 1, scope: !17280)
!17289 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14883, file: !14883, line: 165, type: !16316, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17290)
!17290 = !{!17291}
!17291 = !DILocalVariable(name: "thread", arg: 1, scope: !17289, file: !14883, line: 165, type: !2515)
!17292 = !DILocation(line: 0, scope: !17289)
!17293 = !DILocation(line: 167, column: 15, scope: !17289)
!17294 = !DILocation(line: 167, column: 28, scope: !17289)
!17295 = !DILocation(line: 168, column: 1, scope: !17289)
!17296 = distinct !DISubprogram(name: "unready_thread", scope: !2620, file: !2620, line: 731, type: !16316, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17297)
!17297 = !{!17298}
!17298 = !DILocalVariable(name: "thread", arg: 1, scope: !17296, file: !2620, line: 731, type: !2515)
!17299 = !DILocation(line: 0, scope: !17296)
!17300 = !DILocation(line: 733, column: 6, scope: !17301)
!17301 = distinct !DILexicalBlock(scope: !17296, file: !2620, line: 733, column: 6)
!17302 = !DILocation(line: 733, column: 6, scope: !17296)
!17303 = !DILocation(line: 0, scope: !16527, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 734, column: 3, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17301, file: !2620, line: 733, column: 34)
!17306 = !DILocation(line: 266, column: 15, scope: !16527, inlinedAt: !17304)
!17307 = !DILocation(line: 266, column: 28, scope: !16527, inlinedAt: !17304)
!17308 = !DILocation(line: 0, scope: !16535, inlinedAt: !17309)
!17309 = distinct !DILocation(line: 268, column: 3, scope: !16539, inlinedAt: !17304)
!17310 = !DILocation(line: 234, column: 2, scope: !16535, inlinedAt: !17309)
!17311 = !DILocation(line: 735, column: 2, scope: !17305)
!17312 = !DILocation(line: 736, column: 25, scope: !17296)
!17313 = !DILocation(line: 736, column: 22, scope: !17296)
!17314 = !DILocation(line: 736, column: 2, scope: !17296)
!17315 = !DILocation(line: 737, column: 1, scope: !17296)
!17316 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14883, file: !14883, line: 160, type: !16316, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17317)
!17317 = !{!17318}
!17318 = !DILocalVariable(name: "thread", arg: 1, scope: !17316, file: !14883, line: 160, type: !2515)
!17319 = !DILocation(line: 0, scope: !17316)
!17320 = !DILocation(line: 162, column: 15, scope: !17316)
!17321 = !DILocation(line: 162, column: 28, scope: !17316)
!17322 = !DILocation(line: 163, column: 1, scope: !17316)
!17323 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2620, file: !2620, line: 786, type: !16316, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17324)
!17324 = !{!17325, !17326, !17328}
!17325 = !DILocalVariable(name: "thread", arg: 1, scope: !17323, file: !2620, line: 786, type: !2515)
!17326 = !DILocalVariable(name: "__i", scope: !17327, file: !2620, line: 788, type: !16350)
!17327 = distinct !DILexicalBlock(scope: !17323, file: !2620, line: 788, column: 2)
!17328 = !DILocalVariable(name: "__key", scope: !17327, file: !2620, line: 788, type: !16350)
!17329 = !DILocation(line: 0, scope: !17323)
!17330 = !DILocation(line: 0, scope: !17327)
!17331 = !DILocation(line: 0, scope: !16358, inlinedAt: !17332)
!17332 = distinct !DILocation(line: 788, column: 2, scope: !17327)
!17333 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17334)
!17334 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17332)
!17335 = !DILocation(line: 0, scope: !16367, inlinedAt: !17334)
!17336 = !DILocation(line: 789, column: 3, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17338, file: !2620, line: 788, column: 26)
!17338 = distinct !DILexicalBlock(scope: !17327, file: !2620, line: 788, column: 2)
!17339 = !DILocation(line: 0, scope: !16385, inlinedAt: !17340)
!17340 = distinct !DILocation(line: 788, column: 2, scope: !17338)
!17341 = !DILocation(line: 0, scope: !16393, inlinedAt: !17342)
!17342 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17340)
!17343 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17342)
!17344 = !DILocation(line: 791, column: 1, scope: !17323)
!17345 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2620, file: !2620, line: 816, type: !17346, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17348)
!17346 = !DISubroutineType(types: !17347)
!17347 = !{!107, !108, !2546, !17147}
!17348 = !{!17349, !17350, !17351, !17352, !17353, !17355}
!17349 = !DILocalVariable(name: "key", arg: 1, scope: !17345, file: !2620, line: 816, type: !108)
!17350 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17345, file: !2620, line: 816, type: !2546)
!17351 = !DILocalVariable(name: "timeout", arg: 3, scope: !17345, file: !2620, line: 816, type: !17147)
!17352 = !DILocalVariable(name: "ret", scope: !17345, file: !2620, line: 828, type: !107)
!17353 = !DILocalVariable(name: "__i", scope: !17354, file: !2620, line: 829, type: !16350)
!17354 = distinct !DILexicalBlock(scope: !17345, file: !2620, line: 829, column: 2)
!17355 = !DILocalVariable(name: "__key", scope: !17354, file: !2620, line: 829, type: !16350)
!17356 = !DILocation(line: 0, scope: !17345)
!17357 = !DILocation(line: 823, column: 14, scope: !17345)
!17358 = !DILocation(line: 823, column: 2, scope: !17345)
!17359 = !DILocation(line: 826, column: 20, scope: !17345)
!17360 = !DILocation(line: 826, column: 18, scope: !17345)
!17361 = !DILocation(line: 828, column: 12, scope: !17345)
!17362 = !DILocation(line: 0, scope: !17354)
!17363 = !DILocation(line: 0, scope: !16358, inlinedAt: !17364)
!17364 = distinct !DILocation(line: 829, column: 2, scope: !17354)
!17365 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17366)
!17366 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17364)
!17367 = !DILocation(line: 0, scope: !16367, inlinedAt: !17366)
!17368 = !DILocation(line: 830, column: 7, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17370, file: !2620, line: 830, column: 7)
!17370 = distinct !DILexicalBlock(scope: !17371, file: !2620, line: 829, column: 26)
!17371 = distinct !DILexicalBlock(scope: !17354, file: !2620, line: 829, column: 2)
!17372 = !DILocation(line: 830, column: 26, scope: !17369)
!17373 = !DILocation(line: 830, column: 23, scope: !17369)
!17374 = !DILocation(line: 830, column: 7, scope: !17370)
!17375 = !DILocation(line: 831, column: 20, scope: !17376)
!17376 = distinct !DILexicalBlock(scope: !17369, file: !2620, line: 830, column: 36)
!17377 = !DILocation(line: 832, column: 3, scope: !17376)
!17378 = !DILocation(line: 0, scope: !16385, inlinedAt: !17379)
!17379 = distinct !DILocation(line: 829, column: 2, scope: !17371)
!17380 = !DILocation(line: 0, scope: !16393, inlinedAt: !17381)
!17381 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17379)
!17382 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17381)
!17383 = !DILocation(line: 834, column: 2, scope: !17345)
!17384 = distinct !DISubprogram(name: "z_pend_curr", scope: !2620, file: !2620, line: 840, type: !17385, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17387)
!17385 = !DISubroutineType(types: !17386)
!17386 = !{!107, !16361, !16350, !2546, !17147}
!17387 = !{!17388, !17389, !17390, !17391}
!17388 = !DILocalVariable(name: "lock", arg: 1, scope: !17384, file: !2620, line: 840, type: !16361)
!17389 = !DILocalVariable(name: "key", arg: 2, scope: !17384, file: !2620, line: 840, type: !16350)
!17390 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17384, file: !2620, line: 841, type: !2546)
!17391 = !DILocalVariable(name: "timeout", arg: 4, scope: !17384, file: !2620, line: 841, type: !17147)
!17392 = !DILocation(line: 0, scope: !17384)
!17393 = !DILocation(line: 844, column: 20, scope: !17384)
!17394 = !DILocation(line: 844, column: 18, scope: !17384)
!17395 = !DILocation(line: 0, scope: !16358, inlinedAt: !17396)
!17396 = distinct !DILocation(line: 856, column: 9, scope: !17384)
!17397 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17398)
!17398 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17396)
!17399 = !DILocation(line: 0, scope: !16367, inlinedAt: !17398)
!17400 = !DILocation(line: 857, column: 14, scope: !17384)
!17401 = !DILocation(line: 857, column: 2, scope: !17384)
!17402 = !DILocation(line: 0, scope: !16967, inlinedAt: !17403)
!17403 = distinct !DILocation(line: 859, column: 9, scope: !17384)
!17404 = !DILocation(line: 196, column: 9, scope: !16967, inlinedAt: !17403)
!17405 = !DILocation(line: 859, column: 2, scope: !17384)
!17406 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2620, file: !2620, line: 862, type: !17407, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17409)
!17407 = !DISubroutineType(types: !17408)
!17408 = !{!2515, !2546}
!17409 = !{!17410, !17411, !17412, !17414}
!17410 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17406, file: !2620, line: 862, type: !2546)
!17411 = !DILocalVariable(name: "thread", scope: !17406, file: !2620, line: 864, type: !2515)
!17412 = !DILocalVariable(name: "__i", scope: !17413, file: !2620, line: 866, type: !16350)
!17413 = distinct !DILexicalBlock(scope: !17406, file: !2620, line: 866, column: 2)
!17414 = !DILocalVariable(name: "__key", scope: !17413, file: !2620, line: 866, type: !16350)
!17415 = !DILocation(line: 0, scope: !17406)
!17416 = !DILocation(line: 0, scope: !17413)
!17417 = !DILocation(line: 0, scope: !16358, inlinedAt: !17418)
!17418 = distinct !DILocation(line: 866, column: 2, scope: !17413)
!17419 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17420)
!17420 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17418)
!17421 = !DILocation(line: 0, scope: !16367, inlinedAt: !17420)
!17422 = !DILocation(line: 867, column: 12, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17424, file: !2620, line: 866, column: 26)
!17424 = distinct !DILexicalBlock(scope: !17413, file: !2620, line: 866, column: 2)
!17425 = !DILocation(line: 869, column: 14, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17423, file: !2620, line: 869, column: 7)
!17427 = !DILocation(line: 869, column: 7, scope: !17423)
!17428 = !DILocation(line: 870, column: 4, scope: !17429)
!17429 = distinct !DILexicalBlock(scope: !17426, file: !2620, line: 869, column: 23)
!17430 = !DILocation(line: 871, column: 3, scope: !17429)
!17431 = !DILocation(line: 0, scope: !16385, inlinedAt: !17432)
!17432 = distinct !DILocation(line: 866, column: 2, scope: !17424)
!17433 = !DILocation(line: 0, scope: !16393, inlinedAt: !17434)
!17434 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17432)
!17435 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17434)
!17436 = !DILocation(line: 874, column: 2, scope: !17406)
!17437 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2620, file: !2620, line: 877, type: !17407, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17438)
!17438 = !{!17439, !17440, !17441, !17443}
!17439 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17437, file: !2620, line: 877, type: !2546)
!17440 = !DILocalVariable(name: "thread", scope: !17437, file: !2620, line: 879, type: !2515)
!17441 = !DILocalVariable(name: "__i", scope: !17442, file: !2620, line: 881, type: !16350)
!17442 = distinct !DILexicalBlock(scope: !17437, file: !2620, line: 881, column: 2)
!17443 = !DILocalVariable(name: "__key", scope: !17442, file: !2620, line: 881, type: !16350)
!17444 = !DILocation(line: 0, scope: !17437)
!17445 = !DILocation(line: 0, scope: !17442)
!17446 = !DILocation(line: 0, scope: !16358, inlinedAt: !17447)
!17447 = distinct !DILocation(line: 881, column: 2, scope: !17442)
!17448 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17447)
!17450 = !DILocation(line: 0, scope: !16367, inlinedAt: !17449)
!17451 = !DILocation(line: 882, column: 12, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17453, file: !2620, line: 881, column: 26)
!17453 = distinct !DILexicalBlock(scope: !17442, file: !2620, line: 881, column: 2)
!17454 = !DILocation(line: 884, column: 14, scope: !17455)
!17455 = distinct !DILexicalBlock(scope: !17452, file: !2620, line: 884, column: 7)
!17456 = !DILocation(line: 884, column: 7, scope: !17452)
!17457 = !DILocation(line: 885, column: 4, scope: !17458)
!17458 = distinct !DILexicalBlock(scope: !17455, file: !2620, line: 884, column: 23)
!17459 = !DILocation(line: 886, column: 10, scope: !17458)
!17460 = !DILocation(line: 887, column: 3, scope: !17458)
!17461 = !DILocation(line: 0, scope: !16385, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 881, column: 2, scope: !17453)
!17463 = !DILocation(line: 0, scope: !16393, inlinedAt: !17464)
!17464 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17462)
!17465 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17464)
!17466 = !DILocation(line: 890, column: 2, scope: !17437)
!17467 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2620, file: !2620, line: 893, type: !16316, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17468)
!17468 = !{!17469}
!17469 = !DILocalVariable(name: "thread", arg: 1, scope: !17467, file: !2620, line: 893, type: !2515)
!17470 = !DILocation(line: 0, scope: !17467)
!17471 = !DILocation(line: 0, scope: !17323, inlinedAt: !17472)
!17472 = distinct !DILocation(line: 895, column: 2, scope: !17467)
!17473 = !DILocation(line: 0, scope: !17327, inlinedAt: !17472)
!17474 = !DILocation(line: 0, scope: !16358, inlinedAt: !17475)
!17475 = distinct !DILocation(line: 788, column: 2, scope: !17327, inlinedAt: !17472)
!17476 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17477)
!17477 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17475)
!17478 = !DILocation(line: 0, scope: !16367, inlinedAt: !17477)
!17479 = !DILocation(line: 789, column: 3, scope: !17337, inlinedAt: !17472)
!17480 = !DILocation(line: 0, scope: !16385, inlinedAt: !17481)
!17481 = distinct !DILocation(line: 788, column: 2, scope: !17338, inlinedAt: !17472)
!17482 = !DILocation(line: 0, scope: !16393, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17481)
!17484 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17483)
!17485 = !DILocation(line: 896, column: 8, scope: !17467)
!17486 = !DILocation(line: 897, column: 1, scope: !17467)
!17487 = distinct !DISubprogram(name: "z_set_prio", scope: !2620, file: !2620, line: 902, type: !16678, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17488)
!17488 = !{!17489, !17490, !17491, !17492, !17494}
!17489 = !DILocalVariable(name: "thread", arg: 1, scope: !17487, file: !2620, line: 902, type: !2515)
!17490 = !DILocalVariable(name: "prio", arg: 2, scope: !17487, file: !2620, line: 902, type: !107)
!17491 = !DILocalVariable(name: "need_sched", scope: !17487, file: !2620, line: 904, type: !136)
!17492 = !DILocalVariable(name: "__i", scope: !17493, file: !2620, line: 906, type: !16350)
!17493 = distinct !DILexicalBlock(scope: !17487, file: !2620, line: 906, column: 2)
!17494 = !DILocalVariable(name: "__key", scope: !17493, file: !2620, line: 906, type: !16350)
!17495 = !DILocation(line: 0, scope: !17487)
!17496 = !DILocation(line: 0, scope: !17493)
!17497 = !DILocation(line: 0, scope: !16358, inlinedAt: !17498)
!17498 = distinct !DILocation(line: 906, column: 2, scope: !17493)
!17499 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17500)
!17500 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17498)
!17501 = !DILocation(line: 0, scope: !16367, inlinedAt: !17500)
!17502 = !DILocation(line: 907, column: 16, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17504, file: !2620, line: 906, column: 26)
!17504 = distinct !DILexicalBlock(scope: !17493, file: !2620, line: 906, column: 2)
!17505 = !DILocation(line: 909, column: 7, scope: !17503)
!17506 = !DILocation(line: 0, scope: !16527, inlinedAt: !17507)
!17507 = distinct !DILocation(line: 912, column: 5, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17509, file: !2620, line: 911, column: 63)
!17509 = distinct !DILexicalBlock(scope: !17510, file: !2620, line: 911, column: 8)
!17510 = distinct !DILexicalBlock(scope: !17511, file: !2620, line: 909, column: 19)
!17511 = distinct !DILexicalBlock(scope: !17503, file: !2620, line: 909, column: 7)
!17512 = !DILocation(line: 266, column: 28, scope: !16527, inlinedAt: !17507)
!17513 = !DILocation(line: 0, scope: !16535, inlinedAt: !17514)
!17514 = distinct !DILocation(line: 268, column: 3, scope: !16539, inlinedAt: !17507)
!17515 = !DILocation(line: 234, column: 2, scope: !16535, inlinedAt: !17514)
!17516 = !DILocation(line: 913, column: 23, scope: !17508)
!17517 = !DILocation(line: 0, scope: !16544, inlinedAt: !17518)
!17518 = distinct !DILocation(line: 914, column: 5, scope: !17508)
!17519 = !DILocation(line: 252, column: 28, scope: !16544, inlinedAt: !17518)
!17520 = !DILocation(line: 0, scope: !16551, inlinedAt: !17521)
!17521 = distinct !DILocation(line: 254, column: 3, scope: !16555, inlinedAt: !17518)
!17522 = !DILocation(line: 0, scope: !16558, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 229, column: 2, scope: !16551, inlinedAt: !17521)
!17524 = !DILocation(line: 188, column: 2, scope: !16568, inlinedAt: !17523)
!17525 = !DILocation(line: 188, column: 2, scope: !16570, inlinedAt: !17523)
!17526 = !DILocation(line: 0, scope: !16568, inlinedAt: !17523)
!17527 = !DILocation(line: 189, column: 7, scope: !16573, inlinedAt: !17523)
!17528 = !DILocation(line: 189, column: 35, scope: !16573, inlinedAt: !17523)
!17529 = !DILocation(line: 189, column: 7, scope: !16574, inlinedAt: !17523)
!17530 = !DILocation(line: 190, column: 4, scope: !16578, inlinedAt: !17523)
!17531 = !DILocation(line: 192, column: 4, scope: !16578, inlinedAt: !17523)
!17532 = distinct !{!17532, !17524, !17533}
!17533 = !DILocation(line: 194, column: 2, scope: !16568, inlinedAt: !17523)
!17534 = !DILocation(line: 196, column: 2, scope: !16558, inlinedAt: !17523)
!17535 = !DILocation(line: 197, column: 1, scope: !16558, inlinedAt: !17523)
!17536 = !DILocation(line: 918, column: 4, scope: !17510)
!17537 = !DILocation(line: 919, column: 3, scope: !17510)
!17538 = !DILocation(line: 920, column: 22, scope: !17539)
!17539 = distinct !DILexicalBlock(scope: !17511, file: !2620, line: 919, column: 10)
!17540 = !DILocation(line: 0, scope: !16385, inlinedAt: !17541)
!17541 = distinct !DILocation(line: 906, column: 2, scope: !17504)
!17542 = !DILocation(line: 0, scope: !16393, inlinedAt: !17543)
!17543 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17541)
!17544 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17543)
!17545 = !DILocation(line: 926, column: 2, scope: !17487)
!17546 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2620, file: !2620, line: 929, type: !17547, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17549)
!17547 = !DISubroutineType(types: !17548)
!17548 = !{null, !2515, !107}
!17549 = !{!17550, !17551, !17552}
!17550 = !DILocalVariable(name: "thread", arg: 1, scope: !17546, file: !2620, line: 929, type: !2515)
!17551 = !DILocalVariable(name: "prio", arg: 2, scope: !17546, file: !2620, line: 929, type: !107)
!17552 = !DILocalVariable(name: "need_sched", scope: !17546, file: !2620, line: 931, type: !136)
!17553 = !DILocation(line: 0, scope: !17546)
!17554 = !DILocation(line: 931, column: 20, scope: !17546)
!17555 = !DILocation(line: 935, column: 17, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17546, file: !2620, line: 935, column: 6)
!17557 = !DILocation(line: 935, column: 20, scope: !17556)
!17558 = !DILocation(line: 935, column: 35, scope: !17556)
!17559 = !DILocation(line: 935, column: 48, scope: !17556)
!17560 = !DILocation(line: 935, column: 6, scope: !17546)
!17561 = !DILocation(line: 936, column: 3, scope: !17562)
!17562 = distinct !DILexicalBlock(scope: !17556, file: !2620, line: 935, column: 55)
!17563 = !DILocation(line: 937, column: 2, scope: !17562)
!17564 = !DILocation(line: 938, column: 1, scope: !17546)
!17565 = distinct !DISubprogram(name: "k_sched_lock", scope: !2620, file: !2620, line: 987, type: !337, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17566)
!17566 = !{!17567, !17569}
!17567 = !DILocalVariable(name: "__i", scope: !17568, file: !2620, line: 989, type: !16350)
!17568 = distinct !DILexicalBlock(scope: !17565, file: !2620, line: 989, column: 2)
!17569 = !DILocalVariable(name: "__key", scope: !17568, file: !2620, line: 989, type: !16350)
!17570 = !DILocation(line: 0, scope: !17568)
!17571 = !DILocation(line: 0, scope: !16358, inlinedAt: !17572)
!17572 = distinct !DILocation(line: 989, column: 2, scope: !17568)
!17573 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17574)
!17574 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17572)
!17575 = !DILocation(line: 0, scope: !16367, inlinedAt: !17574)
!17576 = !DILocation(line: 992, column: 3, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17578, file: !2620, line: 989, column: 26)
!17578 = distinct !DILexicalBlock(scope: !17568, file: !2620, line: 989, column: 2)
!17579 = !DILocation(line: 0, scope: !16385, inlinedAt: !17580)
!17580 = distinct !DILocation(line: 989, column: 2, scope: !17578)
!17581 = !DILocation(line: 0, scope: !16393, inlinedAt: !17582)
!17582 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17580)
!17583 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17582)
!17584 = !DILocation(line: 994, column: 1, scope: !17565)
!17585 = distinct !DISubprogram(name: "z_sched_lock", scope: !14883, file: !14883, line: 251, type: !337, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17586 = !DILocation(line: 256, column: 4, scope: !17585)
!17587 = !DILocation(line: 256, column: 19, scope: !17585)
!17588 = !DILocation(line: 256, column: 2, scope: !17585)
!17589 = !DILocation(line: 258, column: 2, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17585, file: !14883, line: 258, column: 2)
!17591 = !{i64 2155187310}
!17592 = !DILocation(line: 259, column: 1, scope: !17585)
!17593 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2620, file: !2620, line: 996, type: !337, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17594)
!17594 = !{!17595, !17597}
!17595 = !DILocalVariable(name: "__i", scope: !17596, file: !2620, line: 998, type: !16350)
!17596 = distinct !DILexicalBlock(scope: !17593, file: !2620, line: 998, column: 2)
!17597 = !DILocalVariable(name: "__key", scope: !17596, file: !2620, line: 998, type: !16350)
!17598 = !DILocation(line: 0, scope: !17596)
!17599 = !DILocation(line: 0, scope: !16358, inlinedAt: !17600)
!17600 = distinct !DILocation(line: 998, column: 2, scope: !17596)
!17601 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17602)
!17602 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17600)
!17603 = !DILocation(line: 0, scope: !16367, inlinedAt: !17602)
!17604 = !DILocation(line: 1002, column: 5, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17606, file: !2620, line: 998, column: 26)
!17606 = distinct !DILexicalBlock(scope: !17596, file: !2620, line: 998, column: 2)
!17607 = !DILocation(line: 1002, column: 20, scope: !17605)
!17608 = !DILocation(line: 1002, column: 3, scope: !17605)
!17609 = !DILocation(line: 1003, column: 3, scope: !17605)
!17610 = !DILocation(line: 0, scope: !16385, inlinedAt: !17611)
!17611 = distinct !DILocation(line: 998, column: 2, scope: !17606)
!17612 = !DILocation(line: 0, scope: !16393, inlinedAt: !17613)
!17613 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !17611)
!17614 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !17613)
!17615 = !DILocation(line: 1011, column: 2, scope: !17593)
!17616 = !DILocation(line: 1012, column: 1, scope: !17593)
!17617 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2620, file: !2620, line: 1014, type: !16666, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17618 = !DILocation(line: 1028, column: 25, scope: !17617)
!17619 = !DILocation(line: 1028, column: 2, scope: !17617)
!17620 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2620, file: !2620, line: 1155, type: !17621, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17623)
!17621 = !DISubroutineType(types: !17622)
!17622 = !{!136, !2544, !2544}
!17623 = !{!17624, !17625, !17626, !17627, !17628}
!17624 = !DILocalVariable(name: "a", arg: 1, scope: !17620, file: !2620, line: 1155, type: !2544)
!17625 = !DILocalVariable(name: "b", arg: 2, scope: !17620, file: !2620, line: 1155, type: !2544)
!17626 = !DILocalVariable(name: "thread_a", scope: !17620, file: !2620, line: 1157, type: !2515)
!17627 = !DILocalVariable(name: "thread_b", scope: !17620, file: !2620, line: 1157, type: !2515)
!17628 = !DILocalVariable(name: "cmp", scope: !17620, file: !2620, line: 1158, type: !334)
!17629 = !DILocation(line: 0, scope: !17620)
!17630 = !DILocation(line: 1160, column: 13, scope: !17620)
!17631 = !DILocation(line: 1161, column: 13, scope: !17620)
!17632 = !DILocation(line: 1163, column: 8, scope: !17620)
!17633 = !DILocation(line: 1165, column: 10, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17620, file: !2620, line: 1165, column: 6)
!17635 = !DILocation(line: 1165, column: 6, scope: !17620)
!17636 = !DILocation(line: 1167, column: 17, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !17634, file: !2620, line: 1167, column: 13)
!17638 = !DILocation(line: 1167, column: 13, scope: !17634)
!17639 = !DILocation(line: 1170, column: 25, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17637, file: !2620, line: 1169, column: 9)
!17641 = !DILocation(line: 1170, column: 52, scope: !17640)
!17642 = !DILocation(line: 1170, column: 35, scope: !17640)
!17643 = !DILocation(line: 1170, column: 3, scope: !17640)
!17644 = !DILocation(line: 0, scope: !17634)
!17645 = !DILocation(line: 1173, column: 1, scope: !17620)
!17646 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2620, file: !2620, line: 1175, type: !17647, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17662)
!17647 = !DISubroutineType(types: !17648)
!17648 = !{null, !17649, !2515}
!17649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17650, size: 32)
!17650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17651, line: 37, size: 128, elements: !17652)
!17651 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17652 = !{!17653, !17661}
!17653 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17650, file: !17651, line: 38, baseType: !17654, size: 96)
!17654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !180, line: 83, size: 96, elements: !17655)
!17655 = !{!17656, !17657, !17660}
!17656 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17654, file: !180, line: 84, baseType: !2544, size: 32)
!17657 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17654, file: !180, line: 85, baseType: !17658, size: 32, offset: 32)
!17658 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !180, line: 81, baseType: !17659)
!17659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17621, size: 32)
!17660 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17654, file: !180, line: 86, baseType: !107, size: 32, offset: 64)
!17661 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17650, file: !17651, line: 39, baseType: !107, size: 32, offset: 96)
!17662 = !{!17663, !17664, !17665, !17666, !17675}
!17663 = !DILocalVariable(name: "pq", arg: 1, scope: !17646, file: !2620, line: 1175, type: !17649)
!17664 = !DILocalVariable(name: "thread", arg: 2, scope: !17646, file: !2620, line: 1175, type: !2515)
!17665 = !DILocalVariable(name: "t", scope: !17646, file: !2620, line: 1177, type: !2515)
!17666 = !DILocalVariable(name: "__f", scope: !17667, file: !2620, line: 1190, type: !17670)
!17667 = distinct !DILexicalBlock(scope: !17668, file: !2620, line: 1190, column: 3)
!17668 = distinct !DILexicalBlock(scope: !17669, file: !2620, line: 1189, column: 27)
!17669 = distinct !DILexicalBlock(scope: !17646, file: !2620, line: 1189, column: 6)
!17670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !180, line: 155, size: 96, elements: !17671)
!17671 = !{!17672, !17673, !17674}
!17672 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17670, file: !180, line: 156, baseType: !2615, size: 32)
!17673 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17670, file: !180, line: 157, baseType: !401, size: 32, offset: 32)
!17674 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17670, file: !180, line: 158, baseType: !334, size: 32, offset: 64)
!17675 = !DILocalVariable(name: "n", scope: !17676, file: !2620, line: 1190, type: !2544)
!17676 = distinct !DILexicalBlock(scope: !17677, file: !2620, line: 1190, column: 3)
!17677 = distinct !DILexicalBlock(scope: !17667, file: !2620, line: 1190, column: 3)
!17678 = !DILocation(line: 0, scope: !17646)
!17679 = !DILocation(line: 1181, column: 31, scope: !17646)
!17680 = !DILocation(line: 1181, column: 45, scope: !17646)
!17681 = !DILocation(line: 1181, column: 15, scope: !17646)
!17682 = !DILocation(line: 1181, column: 25, scope: !17646)
!17683 = !DILocation(line: 1189, column: 11, scope: !17669)
!17684 = !DILocation(line: 1189, column: 7, scope: !17669)
!17685 = !DILocation(line: 1189, column: 6, scope: !17646)
!17686 = !DILocation(line: 1190, column: 3, scope: !17667)
!17687 = !DILocation(line: 1190, column: 3, scope: !17676)
!17688 = !DILocation(line: 0, scope: !17676)
!17689 = !DILocation(line: 1190, column: 3, scope: !17677)
!17690 = !DILocation(line: 1193, column: 2, scope: !17668)
!17691 = !DILocation(line: 1191, column: 42, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17677, file: !2620, line: 1190, column: 54)
!17693 = !DILocation(line: 1191, column: 12, scope: !17692)
!17694 = !DILocation(line: 1191, column: 22, scope: !17692)
!17695 = distinct !{!17695, !17686, !17696}
!17696 = !DILocation(line: 1192, column: 3, scope: !17667)
!17697 = !DILocation(line: 1195, column: 17, scope: !17646)
!17698 = !DILocation(line: 1195, column: 37, scope: !17646)
!17699 = !DILocation(line: 1195, column: 2, scope: !17646)
!17700 = !DILocation(line: 1196, column: 1, scope: !17646)
!17701 = !DISubprogram(name: "z_rb_foreach_next", scope: !180, file: !180, line: 176, type: !17702, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17702 = !DISubroutineType(types: !17703)
!17703 = !{!2544, !17704, !17705}
!17704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17654, size: 32)
!17705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17670, size: 32)
!17706 = !DISubprogram(name: "rb_insert", scope: !180, file: !180, line: 105, type: !17707, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17707 = !DISubroutineType(types: !17708)
!17708 = !{null, !17704, !2544}
!17709 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2620, file: !2620, line: 1198, type: !17647, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17710)
!17710 = !{!17711, !17712}
!17711 = !DILocalVariable(name: "pq", arg: 1, scope: !17709, file: !2620, line: 1198, type: !17649)
!17712 = !DILocalVariable(name: "thread", arg: 2, scope: !17709, file: !2620, line: 1198, type: !2515)
!17713 = !DILocation(line: 0, scope: !17709)
!17714 = !DILocation(line: 1202, column: 17, scope: !17709)
!17715 = !DILocation(line: 1202, column: 37, scope: !17709)
!17716 = !DILocation(line: 1202, column: 2, scope: !17709)
!17717 = !DILocation(line: 1204, column: 16, scope: !17718)
!17718 = distinct !DILexicalBlock(scope: !17709, file: !2620, line: 1204, column: 6)
!17719 = !DILocation(line: 1204, column: 7, scope: !17718)
!17720 = !DILocation(line: 1204, column: 6, scope: !17709)
!17721 = !DILocation(line: 1205, column: 7, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17718, file: !2620, line: 1204, column: 22)
!17723 = !DILocation(line: 1205, column: 22, scope: !17722)
!17724 = !DILocation(line: 1206, column: 2, scope: !17722)
!17725 = !DILocation(line: 1207, column: 1, scope: !17709)
!17726 = !DISubprogram(name: "rb_remove", scope: !180, file: !180, line: 110, type: !17707, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17727 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2620, file: !2620, line: 1209, type: !17728, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17730)
!17728 = !DISubroutineType(types: !17729)
!17729 = !{!2515, !17649}
!17730 = !{!17731, !17732, !17733}
!17731 = !DILocalVariable(name: "pq", arg: 1, scope: !17727, file: !2620, line: 1209, type: !17649)
!17732 = !DILocalVariable(name: "thread", scope: !17727, file: !2620, line: 1211, type: !2515)
!17733 = !DILocalVariable(name: "n", scope: !17727, file: !2620, line: 1212, type: !2544)
!17734 = !DILocation(line: 0, scope: !17727)
!17735 = !DILocation(line: 1212, column: 37, scope: !17727)
!17736 = !DILocation(line: 1212, column: 21, scope: !17727)
!17737 = !DILocation(line: 1217, column: 2, scope: !17727)
!17738 = distinct !DISubprogram(name: "rb_get_min", scope: !180, file: !180, line: 115, type: !17739, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17741)
!17739 = !DISubroutineType(types: !17740)
!17740 = !{!2544, !17704}
!17741 = !{!17742}
!17742 = !DILocalVariable(name: "tree", arg: 1, scope: !17738, file: !180, line: 115, type: !17704)
!17743 = !DILocation(line: 0, scope: !17738)
!17744 = !DILocation(line: 117, column: 9, scope: !17738)
!17745 = !DILocation(line: 117, column: 2, scope: !17738)
!17746 = !DISubprogram(name: "z_rb_get_minmax", scope: !180, file: !180, line: 100, type: !17747, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !256)
!17747 = !DISubroutineType(types: !17748)
!17748 = !{!2544, !17704, !190}
!17749 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2620, file: !2620, line: 1246, type: !17750, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17760)
!17750 = !DISubroutineType(types: !17751)
!17751 = !{!2515, !17752}
!17752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17753, size: 32)
!17753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17651, line: 53, size: 2080, elements: !17754)
!17754 = !{!17755, !17759}
!17755 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17753, file: !17651, line: 54, baseType: !17756, size: 2048)
!17756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2551, size: 2048, elements: !17757)
!17757 = !{!17758}
!17758 = !DISubrange(count: 32)
!17759 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17753, file: !17651, line: 55, baseType: !32, size: 32, offset: 2048)
!17760 = !{!17761, !17762, !17763, !17764}
!17761 = !DILocalVariable(name: "pq", arg: 1, scope: !17749, file: !2620, line: 1246, type: !17752)
!17762 = !DILocalVariable(name: "thread", scope: !17749, file: !2620, line: 1252, type: !2515)
!17763 = !DILocalVariable(name: "l", scope: !17749, file: !2620, line: 1253, type: !16561)
!17764 = !DILocalVariable(name: "n", scope: !17749, file: !2620, line: 1254, type: !2616)
!17765 = !DILocation(line: 0, scope: !17749)
!17766 = !DILocation(line: 1248, column: 11, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17749, file: !2620, line: 1248, column: 6)
!17768 = !DILocation(line: 1248, column: 7, scope: !17767)
!17769 = !DILocation(line: 1248, column: 6, scope: !17749)
!17770 = !DILocation(line: 1253, column: 31, scope: !17749)
!17771 = !DILocation(line: 1253, column: 20, scope: !17749)
!17772 = !DILocation(line: 1254, column: 19, scope: !17749)
!17773 = !DILocation(line: 1260, column: 1, scope: !17749)
!17774 = distinct !DISubprogram(name: "z_unpend_all", scope: !2620, file: !2620, line: 1262, type: !17775, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17777)
!17775 = !DISubroutineType(types: !17776)
!17776 = !{!107, !2546}
!17777 = !{!17778, !17779, !17780}
!17778 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17774, file: !2620, line: 1262, type: !2546)
!17779 = !DILocalVariable(name: "need_sched", scope: !17774, file: !2620, line: 1264, type: !107)
!17780 = !DILocalVariable(name: "thread", scope: !17774, file: !2620, line: 1265, type: !2515)
!17781 = !DILocation(line: 0, scope: !17774)
!17782 = !DILocation(line: 1267, column: 19, scope: !17774)
!17783 = !DILocation(line: 1267, column: 41, scope: !17774)
!17784 = !DILocation(line: 1267, column: 2, scope: !17774)
!17785 = !DILocation(line: 1268, column: 3, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17774, file: !2620, line: 1267, column: 50)
!17787 = !DILocation(line: 1269, column: 3, scope: !17786)
!17788 = distinct !{!17788, !17784, !17789}
!17789 = !DILocation(line: 1271, column: 2, scope: !17774)
!17790 = !DILocation(line: 1273, column: 2, scope: !17774)
!17791 = distinct !DISubprogram(name: "z_waitq_head", scope: !15209, file: !15209, line: 52, type: !17407, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17792)
!17792 = !{!17793}
!17793 = !DILocalVariable(name: "w", arg: 1, scope: !17791, file: !15209, line: 52, type: !2546)
!17794 = !DILocation(line: 0, scope: !17791)
!17795 = !DILocation(line: 54, column: 52, scope: !17791)
!17796 = !DILocation(line: 54, column: 28, scope: !17791)
!17797 = !DILocation(line: 54, column: 9, scope: !17791)
!17798 = !DILocation(line: 54, column: 2, scope: !17791)
!17799 = distinct !DISubprogram(name: "init_ready_q", scope: !2620, file: !2620, line: 1276, type: !17800, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17807)
!17800 = !DISubroutineType(types: !17801)
!17801 = !{null, !17802}
!17802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17803, size: 32)
!17803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !146, line: 83, size: 96, elements: !17804)
!17804 = !{!17805, !17806}
!17805 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17803, file: !146, line: 86, baseType: !2515, size: 32)
!17806 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17803, file: !146, line: 90, baseType: !2551, size: 64, offset: 32)
!17807 = !{!17808}
!17808 = !DILocalVariable(name: "rq", arg: 1, scope: !17799, file: !2620, line: 1276, type: !17802)
!17809 = !DILocation(line: 0, scope: !17799)
!17810 = !DILocation(line: 1289, column: 22, scope: !17799)
!17811 = !DILocation(line: 1289, column: 2, scope: !17799)
!17812 = !DILocation(line: 1291, column: 1, scope: !17799)
!17813 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !17814, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17816)
!17814 = !DISubroutineType(types: !17815)
!17815 = !{null, !16561}
!17816 = !{!17817}
!17817 = !DILocalVariable(name: "list", arg: 1, scope: !17813, file: !151, line: 197, type: !16561)
!17818 = !DILocation(line: 0, scope: !17813)
!17819 = !DILocation(line: 199, column: 8, scope: !17813)
!17820 = !DILocation(line: 199, column: 13, scope: !17813)
!17821 = !DILocation(line: 200, column: 8, scope: !17813)
!17822 = !DILocation(line: 200, column: 13, scope: !17813)
!17823 = !DILocation(line: 201, column: 1, scope: !17813)
!17824 = distinct !DISubprogram(name: "z_sched_init", scope: !2620, file: !2620, line: 1293, type: !337, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17825 = !DILocation(line: 1302, column: 2, scope: !17824)
!17826 = !DILocation(line: 1306, column: 2, scope: !17824)
!17827 = !DILocation(line: 1309, column: 1, scope: !17824)
!17828 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2620, file: !2620, line: 1311, type: !17829, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17832)
!17829 = !DISubroutineType(types: !17830)
!17830 = !{!107, !17831}
!17831 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !168, line: 347, baseType: !2515)
!17832 = !{!17833}
!17833 = !DILocalVariable(name: "thread", arg: 1, scope: !17828, file: !2620, line: 1311, type: !17831)
!17834 = !DILocation(line: 0, scope: !17828)
!17835 = !DILocation(line: 1313, column: 22, scope: !17828)
!17836 = !DILocation(line: 1313, column: 9, scope: !17828)
!17837 = !DILocation(line: 1313, column: 2, scope: !17828)
!17838 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2620, file: !2620, line: 1325, type: !17839, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17841)
!17839 = !DISubroutineType(types: !17840)
!17840 = !{null, !17831, !107}
!17841 = !{!17842, !17843, !17844}
!17842 = !DILocalVariable(name: "thread", arg: 1, scope: !17838, file: !2620, line: 1325, type: !17831)
!17843 = !DILocalVariable(name: "prio", arg: 2, scope: !17838, file: !2620, line: 1325, type: !107)
!17844 = !DILocalVariable(name: "th", scope: !17838, file: !2620, line: 1334, type: !2515)
!17845 = !DILocation(line: 0, scope: !17838)
!17846 = !DILocation(line: 1336, column: 2, scope: !17838)
!17847 = !DILocation(line: 1337, column: 1, scope: !17838)
!17848 = distinct !DISubprogram(name: "k_can_yield", scope: !2620, file: !2620, line: 1384, type: !8458, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17849 = !DILocation(line: 1386, column: 11, scope: !17848)
!17850 = !DILocation(line: 1386, column: 29, scope: !17848)
!17851 = !DILocation(line: 1386, column: 32, scope: !17848)
!17852 = !DILocation(line: 1386, column: 46, scope: !17848)
!17853 = !DILocation(line: 1387, column: 28, scope: !17848)
!17854 = !DILocation(line: 1387, column: 4, scope: !17848)
!17855 = !DILocation(line: 1386, column: 2, scope: !17848)
!17856 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !142, file: !142, line: 989, type: !8458, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17857 = !DILocation(line: 993, column: 10, scope: !17856)
!17858 = !DILocation(line: 993, column: 2, scope: !17856)
!17859 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2620, file: !2620, line: 1390, type: !337, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17860)
!17860 = !{!17861}
!17861 = !DILocalVariable(name: "key", scope: !17859, file: !2620, line: 1396, type: !16350)
!17862 = !DILocation(line: 0, scope: !16358, inlinedAt: !17863)
!17863 = distinct !DILocation(line: 1396, column: 25, scope: !17859)
!17864 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17865)
!17865 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17863)
!17866 = !DILocation(line: 0, scope: !16367, inlinedAt: !17865)
!17867 = !DILocation(line: 0, scope: !17859)
!17868 = !DILocation(line: 1400, column: 18, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17870, file: !2620, line: 1399, column: 36)
!17870 = distinct !DILexicalBlock(scope: !17859, file: !2620, line: 1398, column: 6)
!17871 = !DILocation(line: 0, scope: !16527, inlinedAt: !17872)
!17872 = distinct !DILocation(line: 1400, column: 3, scope: !17869)
!17873 = !DILocation(line: 266, column: 15, scope: !16527, inlinedAt: !17872)
!17874 = !DILocation(line: 266, column: 28, scope: !16527, inlinedAt: !17872)
!17875 = !DILocation(line: 0, scope: !16535, inlinedAt: !17876)
!17876 = distinct !DILocation(line: 268, column: 3, scope: !16539, inlinedAt: !17872)
!17877 = !DILocation(line: 234, column: 2, scope: !16535, inlinedAt: !17876)
!17878 = !DILocation(line: 1402, column: 15, scope: !17859)
!17879 = !DILocation(line: 0, scope: !16544, inlinedAt: !17880)
!17880 = distinct !DILocation(line: 1402, column: 2, scope: !17859)
!17881 = !DILocation(line: 252, column: 15, scope: !16544, inlinedAt: !17880)
!17882 = !DILocation(line: 252, column: 28, scope: !16544, inlinedAt: !17880)
!17883 = !DILocation(line: 0, scope: !16551, inlinedAt: !17884)
!17884 = distinct !DILocation(line: 254, column: 3, scope: !16555, inlinedAt: !17880)
!17885 = !DILocation(line: 0, scope: !16558, inlinedAt: !17886)
!17886 = distinct !DILocation(line: 229, column: 2, scope: !16551, inlinedAt: !17884)
!17887 = !DILocation(line: 188, column: 2, scope: !16568, inlinedAt: !17886)
!17888 = !DILocation(line: 188, column: 2, scope: !16570, inlinedAt: !17886)
!17889 = !DILocation(line: 0, scope: !16568, inlinedAt: !17886)
!17890 = !DILocation(line: 189, column: 7, scope: !16573, inlinedAt: !17886)
!17891 = !DILocation(line: 189, column: 35, scope: !16573, inlinedAt: !17886)
!17892 = !DILocation(line: 189, column: 7, scope: !16574, inlinedAt: !17886)
!17893 = !DILocation(line: 191, column: 21, scope: !16578, inlinedAt: !17886)
!17894 = !DILocation(line: 190, column: 4, scope: !16578, inlinedAt: !17886)
!17895 = !DILocation(line: 192, column: 4, scope: !16578, inlinedAt: !17886)
!17896 = distinct !{!17896, !17887, !17897}
!17897 = !DILocation(line: 194, column: 2, scope: !16568, inlinedAt: !17886)
!17898 = !DILocation(line: 196, column: 37, scope: !16558, inlinedAt: !17886)
!17899 = !DILocation(line: 196, column: 2, scope: !16558, inlinedAt: !17886)
!17900 = !DILocation(line: 197, column: 1, scope: !16558, inlinedAt: !17886)
!17901 = !DILocation(line: 1403, column: 2, scope: !17859)
!17902 = !DILocation(line: 0, scope: !16967, inlinedAt: !17903)
!17903 = distinct !DILocation(line: 1404, column: 2, scope: !17859)
!17904 = !DILocation(line: 196, column: 9, scope: !16967, inlinedAt: !17903)
!17905 = !DILocation(line: 1405, column: 1, scope: !17859)
!17906 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2620, file: !2620, line: 1459, type: !17907, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17909)
!17907 = !DISubroutineType(types: !17908)
!17908 = !{!334, !17147}
!17909 = !{!17910, !17911, !17912}
!17910 = !DILocalVariable(name: "timeout", arg: 1, scope: !17906, file: !2620, line: 1459, type: !17147)
!17911 = !DILocalVariable(name: "ticks", scope: !17906, file: !2620, line: 1461, type: !102)
!17912 = !DILocalVariable(name: "ret", scope: !17906, file: !2620, line: 1480, type: !334)
!17913 = !DILocation(line: 0, scope: !17906)
!17914 = !DILocation(line: 1468, column: 6, scope: !17915)
!17915 = distinct !DILexicalBlock(scope: !17906, file: !2620, line: 1468, column: 6)
!17916 = !DILocation(line: 1468, column: 6, scope: !17906)
!17917 = !DILocation(line: 1469, column: 20, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !17915, file: !2620, line: 1468, column: 40)
!17919 = !DILocation(line: 1469, column: 3, scope: !17918)
!17920 = !DILocation(line: 1473, column: 3, scope: !17918)
!17921 = !DILocation(line: 1478, column: 10, scope: !17906)
!17922 = !DILocation(line: 1480, column: 16, scope: !17906)
!17923 = !DILocation(line: 1485, column: 1, scope: !17906)
!17924 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3734, file: !3734, line: 310, type: !17925, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17927)
!17925 = !DISubroutineType(types: !17926)
!17926 = !{null, !17831}
!17927 = !{!17928}
!17928 = !DILocalVariable(name: "thread", arg: 1, scope: !17924, file: !3734, line: 310, type: !17831)
!17929 = !DILocation(line: 0, scope: !17924)
!17930 = !DILocation(line: 319, column: 2, scope: !17931)
!17931 = distinct !DILexicalBlock(scope: !17924, file: !3734, line: 319, column: 2)
!17932 = !{i64 2155105699}
!17933 = !DILocation(line: 320, column: 2, scope: !17924)
!17934 = !DILocation(line: 321, column: 1, scope: !17924)
!17935 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2620, file: !2620, line: 1415, type: !17936, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17938)
!17936 = !DISubroutineType(types: !17937)
!17937 = !{!334, !102}
!17938 = !{!17939, !17940, !17941, !17942}
!17939 = !DILocalVariable(name: "ticks", arg: 1, scope: !17935, file: !2620, line: 1415, type: !102)
!17940 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17935, file: !2620, line: 1418, type: !108)
!17941 = !DILocalVariable(name: "timeout", scope: !17935, file: !2620, line: 1430, type: !17147)
!17942 = !DILocalVariable(name: "key", scope: !17935, file: !2620, line: 1437, type: !16350)
!17943 = !DILocation(line: 0, scope: !17935)
!17944 = !DILocation(line: 1425, column: 12, scope: !17945)
!17945 = distinct !DILexicalBlock(scope: !17935, file: !2620, line: 1425, column: 6)
!17946 = !DILocation(line: 1425, column: 6, scope: !17935)
!17947 = !DILocation(line: 1426, column: 3, scope: !17948)
!17948 = distinct !DILexicalBlock(scope: !17945, file: !2620, line: 1425, column: 18)
!17949 = !DILocation(line: 1427, column: 3, scope: !17948)
!17950 = !DILocation(line: 1431, column: 24, scope: !17951)
!17951 = distinct !DILexicalBlock(scope: !17935, file: !2620, line: 1431, column: 6)
!17952 = !DILocation(line: 1431, column: 6, scope: !17935)
!17953 = !DILocation(line: 1432, column: 35, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17951, file: !2620, line: 1431, column: 30)
!17955 = !DILocation(line: 1432, column: 27, scope: !17954)
!17956 = !DILocation(line: 1433, column: 2, scope: !17954)
!17957 = !DILocation(line: 1434, column: 27, scope: !17958)
!17958 = distinct !DILexicalBlock(scope: !17951, file: !2620, line: 1433, column: 9)
!17959 = !DILocation(line: 0, scope: !17951)
!17960 = !DILocation(line: 0, scope: !16358, inlinedAt: !17961)
!17961 = distinct !DILocation(line: 1437, column: 25, scope: !17935)
!17962 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !17963)
!17963 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !17961)
!17964 = !DILocation(line: 0, scope: !16367, inlinedAt: !17963)
!17965 = !DILocation(line: 1440, column: 20, scope: !17935)
!17966 = !DILocation(line: 1440, column: 18, scope: !17935)
!17967 = !DILocation(line: 1442, column: 2, scope: !17935)
!17968 = !DILocation(line: 1443, column: 23, scope: !17935)
!17969 = !DILocation(line: 1443, column: 2, scope: !17935)
!17970 = !DILocation(line: 1444, column: 29, scope: !17935)
!17971 = !DILocation(line: 1444, column: 2, scope: !17935)
!17972 = !DILocation(line: 0, scope: !16967, inlinedAt: !17973)
!17973 = distinct !DILocation(line: 1446, column: 8, scope: !17935)
!17974 = !DILocation(line: 196, column: 9, scope: !16967, inlinedAt: !17973)
!17975 = !DILocation(line: 1450, column: 10, scope: !17935)
!17976 = !DILocation(line: 1450, column: 45, scope: !17935)
!17977 = !DILocation(line: 1450, column: 43, scope: !17935)
!17978 = !DILocation(line: 1451, column: 6, scope: !17935)
!17979 = !DILocation(line: 1457, column: 1, scope: !17935)
!17980 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3571, file: !3571, line: 1103, type: !3572, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !17981)
!17981 = !{!17982}
!17982 = !DILocalVariable(name: "t", arg: 1, scope: !17980, file: !3571, line: 1103, type: !109)
!17983 = !DILocation(line: 0, scope: !17980)
!17984 = !DILocation(line: 0, scope: !16405, inlinedAt: !17985)
!17985 = distinct !DILocation(line: 1106, column: 9, scope: !17980)
!17986 = !DILocation(line: 139, column: 13, scope: !17987, inlinedAt: !17985)
!17987 = distinct !DILexicalBlock(scope: !17988, file: !3571, line: 138, column: 10)
!17988 = distinct !DILexicalBlock(scope: !17989, file: !3571, line: 136, column: 7)
!17989 = distinct !DILexicalBlock(scope: !16426, file: !3571, line: 134, column: 17)
!17990 = !DILocation(line: 1106, column: 2, scope: !17980)
!17991 = distinct !DISubprogram(name: "k_yield", scope: !3734, file: !3734, line: 140, type: !337, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!17992 = !DILocation(line: 148, column: 2, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17991, file: !3734, line: 148, column: 2)
!17994 = !{i64 2155105019}
!17995 = !DILocation(line: 149, column: 2, scope: !17991)
!17996 = !DILocation(line: 150, column: 1, scope: !17991)
!17997 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2620, file: !2620, line: 1495, type: !17998, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18000)
!17998 = !DISubroutineType(types: !17999)
!17999 = !{!334, !107}
!18000 = !{!18001, !18002}
!18001 = !DILocalVariable(name: "us", arg: 1, scope: !17997, file: !2620, line: 1495, type: !107)
!18002 = !DILocalVariable(name: "ticks", scope: !17997, file: !2620, line: 1497, type: !334)
!18003 = !DILocation(line: 0, scope: !17997)
!18004 = !DILocation(line: 1501, column: 31, scope: !17997)
!18005 = !DILocation(line: 1501, column: 10, scope: !17997)
!18006 = !DILocation(line: 1502, column: 23, scope: !17997)
!18007 = !DILocation(line: 1502, column: 10, scope: !17997)
!18008 = !DILocation(line: 1506, column: 31, scope: !17997)
!18009 = !DILocation(line: 1506, column: 9, scope: !17997)
!18010 = !DILocation(line: 1506, column: 2, scope: !17997)
!18011 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3571, file: !3571, line: 571, type: !3572, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18012)
!18012 = !{!18013}
!18013 = !DILocalVariable(name: "t", arg: 1, scope: !18011, file: !3571, line: 571, type: !109)
!18014 = !DILocation(line: 0, scope: !18011)
!18015 = !DILocation(line: 0, scope: !16405, inlinedAt: !18016)
!18016 = distinct !DILocation(line: 574, column: 9, scope: !18011)
!18017 = !DILocation(line: 135, column: 5, scope: !17989, inlinedAt: !18016)
!18018 = !DILocation(line: 139, column: 13, scope: !17987, inlinedAt: !18016)
!18019 = !DILocation(line: 574, column: 2, scope: !18011)
!18020 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3571, file: !3571, line: 1187, type: !3572, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18021)
!18021 = !{!18022}
!18022 = !DILocalVariable(name: "t", arg: 1, scope: !18020, file: !3571, line: 1187, type: !109)
!18023 = !DILocation(line: 0, scope: !18020)
!18024 = !DILocation(line: 0, scope: !16405, inlinedAt: !18025)
!18025 = distinct !DILocation(line: 1190, column: 9, scope: !18020)
!18026 = !DILocation(line: 145, column: 13, scope: !18027, inlinedAt: !18025)
!18027 = distinct !DILexicalBlock(scope: !16423, file: !3571, line: 144, column: 10)
!18028 = !DILocation(line: 1190, column: 2, scope: !18020)
!18029 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2620, file: !2620, line: 1517, type: !17925, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18030)
!18030 = !{!18031}
!18031 = !DILocalVariable(name: "thread", arg: 1, scope: !18029, file: !2620, line: 1517, type: !17831)
!18032 = !DILocation(line: 0, scope: !18029)
!18033 = !DILocation(line: 1521, column: 6, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18029, file: !2620, line: 1521, column: 6)
!18035 = !DILocation(line: 1521, column: 6, scope: !18029)
!18036 = !DILocation(line: 1525, column: 6, scope: !18037)
!18037 = distinct !DILexicalBlock(scope: !18029, file: !2620, line: 1525, column: 6)
!18038 = !DILocation(line: 1525, column: 37, scope: !18037)
!18039 = !DILocation(line: 1525, column: 6, scope: !18029)
!18040 = !DILocation(line: 1527, column: 20, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18042, file: !2620, line: 1527, column: 7)
!18042 = distinct !DILexicalBlock(scope: !18037, file: !2620, line: 1525, column: 42)
!18043 = !DILocation(line: 1527, column: 33, scope: !18041)
!18044 = !DILocation(line: 1527, column: 7, scope: !18042)
!18045 = !DILocation(line: 1532, column: 2, scope: !18029)
!18046 = !DILocation(line: 1533, column: 2, scope: !18029)
!18047 = !DILocation(line: 1031, column: 3, scope: !17000, inlinedAt: !18048)
!18048 = distinct !DILocation(line: 48, column: 10, scope: !17004, inlinedAt: !18049)
!18049 = distinct !DILocation(line: 1537, column: 7, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18029, file: !2620, line: 1537, column: 6)
!18051 = !DILocation(line: 0, scope: !17000, inlinedAt: !18048)
!18052 = !DILocation(line: 48, column: 9, scope: !17004, inlinedAt: !18049)
!18053 = !DILocation(line: 1537, column: 6, scope: !18029)
!18054 = !DILocation(line: 1538, column: 3, scope: !18055)
!18055 = distinct !DILexicalBlock(scope: !18050, file: !2620, line: 1537, column: 25)
!18056 = !DILocation(line: 1539, column: 2, scope: !18055)
!18057 = !DILocation(line: 1540, column: 1, scope: !18029)
!18058 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14883, file: !14883, line: 101, type: !16476, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18059)
!18059 = !{!18060}
!18060 = !DILocalVariable(name: "thread", arg: 1, scope: !18058, file: !14883, line: 101, type: !2515)
!18061 = !DILocation(line: 0, scope: !18058)
!18062 = !DILocation(line: 103, column: 23, scope: !18058)
!18063 = !DILocation(line: 103, column: 36, scope: !18058)
!18064 = !DILocation(line: 103, column: 55, scope: !18058)
!18065 = !DILocation(line: 103, column: 2, scope: !18058)
!18066 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2620, file: !2620, line: 1567, type: !18067, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18069)
!18067 = !DISubroutineType(types: !18068)
!18068 = !{!17831}
!18069 = !{!18070}
!18070 = !DILocalVariable(name: "ret", scope: !18066, file: !2620, line: 1577, type: !17831)
!18071 = !DILocation(line: 1577, column: 30, scope: !18066)
!18072 = !DILocation(line: 0, scope: !18066)
!18073 = !DILocation(line: 1582, column: 2, scope: !18066)
!18074 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2620, file: !2620, line: 1593, type: !8746, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !256)
!18075 = !DILocation(line: 1031, column: 3, scope: !17000, inlinedAt: !18076)
!18076 = distinct !DILocation(line: 48, column: 10, scope: !17004, inlinedAt: !18077)
!18077 = distinct !DILocation(line: 1595, column: 10, scope: !18074)
!18078 = !DILocation(line: 0, scope: !17000, inlinedAt: !18076)
!18079 = !DILocation(line: 48, column: 9, scope: !17004, inlinedAt: !18077)
!18080 = !DILocation(line: 1595, column: 27, scope: !18074)
!18081 = !DILocation(line: 1595, column: 41, scope: !18074)
!18082 = !DILocation(line: 1595, column: 30, scope: !18074)
!18083 = !DILocation(line: 1595, column: 2, scope: !18074)
!18084 = distinct !DISubprogram(name: "z_thread_abort", scope: !2620, file: !2620, line: 1725, type: !16316, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18085)
!18085 = !{!18086, !18087}
!18086 = !DILocalVariable(name: "thread", arg: 1, scope: !18084, file: !2620, line: 1725, type: !2515)
!18087 = !DILocalVariable(name: "key", scope: !18084, file: !2620, line: 1727, type: !16350)
!18088 = !DILocation(line: 0, scope: !18084)
!18089 = !DILocation(line: 0, scope: !16358, inlinedAt: !18090)
!18090 = distinct !DILocation(line: 1727, column: 25, scope: !18084)
!18091 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !18092)
!18092 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !18090)
!18093 = !DILocation(line: 0, scope: !16367, inlinedAt: !18092)
!18094 = !DILocation(line: 1729, column: 20, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18084, file: !2620, line: 1729, column: 6)
!18096 = !DILocation(line: 1729, column: 33, scope: !18095)
!18097 = !DILocation(line: 1729, column: 48, scope: !18095)
!18098 = !DILocation(line: 1729, column: 6, scope: !18084)
!18099 = !DILocation(line: 0, scope: !16385, inlinedAt: !18100)
!18100 = distinct !DILocation(line: 1730, column: 3, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18095, file: !2620, line: 1729, column: 54)
!18102 = !DILocation(line: 0, scope: !16393, inlinedAt: !18103)
!18103 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !18100)
!18104 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !18103)
!18105 = !DILocation(line: 1732, column: 3, scope: !18106)
!18106 = distinct !DILexicalBlock(scope: !18101, file: !2620, line: 1732, column: 3)
!18107 = !{i64 2155841024, i64 2155841040, i64 2155841066, i64 2155841094, i64 2155841114}
!18108 = !DILocation(line: 1733, column: 3, scope: !18101)
!18109 = !DILocation(line: 1736, column: 20, scope: !18110)
!18110 = distinct !DILexicalBlock(scope: !18084, file: !2620, line: 1736, column: 6)
!18111 = !DILocation(line: 1736, column: 33, scope: !18110)
!18112 = !DILocation(line: 1736, column: 49, scope: !18110)
!18113 = !DILocation(line: 1736, column: 6, scope: !18084)
!18114 = !DILocation(line: 0, scope: !16385, inlinedAt: !18115)
!18115 = distinct !DILocation(line: 1737, column: 3, scope: !18116)
!18116 = distinct !DILexicalBlock(scope: !18110, file: !2620, line: 1736, column: 56)
!18117 = !DILocation(line: 0, scope: !16393, inlinedAt: !18118)
!18118 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !18115)
!18119 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !18118)
!18120 = !DILocation(line: 1738, column: 3, scope: !18116)
!18121 = !DILocation(line: 1775, column: 2, scope: !18084)
!18122 = !DILocation(line: 1776, column: 16, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !18084, file: !2620, line: 1776, column: 6)
!18124 = !DILocation(line: 1776, column: 13, scope: !18123)
!18125 = !DILocation(line: 1776, column: 25, scope: !18123)
!18126 = !DILocation(line: 1031, column: 3, scope: !17000, inlinedAt: !18127)
!18127 = distinct !DILocation(line: 48, column: 10, scope: !17004, inlinedAt: !18128)
!18128 = distinct !DILocation(line: 1776, column: 29, scope: !18123)
!18129 = !DILocation(line: 0, scope: !17000, inlinedAt: !18127)
!18130 = !DILocation(line: 48, column: 9, scope: !17004, inlinedAt: !18128)
!18131 = !DILocation(line: 1776, column: 6, scope: !18084)
!18132 = !DILocation(line: 0, scope: !16967, inlinedAt: !18133)
!18133 = distinct !DILocation(line: 1777, column: 3, scope: !18134)
!18134 = distinct !DILexicalBlock(scope: !18123, file: !2620, line: 1776, column: 47)
!18135 = !DILocation(line: 196, column: 9, scope: !16967, inlinedAt: !18133)
!18136 = !DILocation(line: 1779, column: 2, scope: !18134)
!18137 = !DILocation(line: 0, scope: !16385, inlinedAt: !18138)
!18138 = distinct !DILocation(line: 1780, column: 2, scope: !18084)
!18139 = !DILocation(line: 0, scope: !16393, inlinedAt: !18140)
!18140 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !18138)
!18141 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !18140)
!18142 = !DILocation(line: 1781, column: 1, scope: !18084)
!18143 = distinct !DISubprogram(name: "end_thread", scope: !2620, file: !2620, line: 1690, type: !16316, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18144)
!18144 = !{!18145}
!18145 = !DILocalVariable(name: "thread", arg: 1, scope: !18143, file: !2620, line: 1690, type: !2515)
!18146 = !DILocation(line: 0, scope: !18143)
!18147 = !DILocation(line: 1695, column: 20, scope: !18148)
!18148 = distinct !DILexicalBlock(scope: !18143, file: !2620, line: 1695, column: 6)
!18149 = !DILocation(line: 1695, column: 33, scope: !18148)
!18150 = !DILocation(line: 1695, column: 49, scope: !18148)
!18151 = !DILocation(line: 1695, column: 6, scope: !18143)
!18152 = !DILocation(line: 1697, column: 29, scope: !18153)
!18153 = distinct !DILexicalBlock(scope: !18148, file: !2620, line: 1695, column: 56)
!18154 = !DILocation(line: 1698, column: 7, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18153, file: !2620, line: 1698, column: 7)
!18156 = !DILocation(line: 1698, column: 7, scope: !18153)
!18157 = !DILocation(line: 0, scope: !16527, inlinedAt: !18158)
!18158 = distinct !DILocation(line: 1699, column: 4, scope: !18159)
!18159 = distinct !DILexicalBlock(scope: !18155, file: !2620, line: 1698, column: 35)
!18160 = !DILocation(line: 266, column: 28, scope: !16527, inlinedAt: !18158)
!18161 = !DILocation(line: 0, scope: !16535, inlinedAt: !18162)
!18162 = distinct !DILocation(line: 268, column: 3, scope: !16539, inlinedAt: !18158)
!18163 = !DILocation(line: 234, column: 2, scope: !16535, inlinedAt: !18162)
!18164 = !DILocation(line: 1700, column: 3, scope: !18159)
!18165 = !DILocation(line: 1701, column: 20, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18153, file: !2620, line: 1701, column: 7)
!18167 = !DILocation(line: 1701, column: 30, scope: !18166)
!18168 = !DILocation(line: 1701, column: 7, scope: !18153)
!18169 = !DILocation(line: 1702, column: 4, scope: !18170)
!18170 = distinct !DILexicalBlock(scope: !18166, file: !2620, line: 1701, column: 39)
!18171 = !DILocation(line: 1703, column: 3, scope: !18170)
!18172 = !DILocation(line: 1704, column: 9, scope: !18153)
!18173 = !DILocation(line: 1705, column: 23, scope: !18153)
!18174 = !DILocation(line: 1705, column: 3, scope: !18153)
!18175 = !DILocation(line: 1706, column: 3, scope: !18153)
!18176 = !DILocation(line: 1722, column: 2, scope: !18153)
!18177 = !DILocation(line: 1723, column: 1, scope: !18143)
!18178 = distinct !DISubprogram(name: "unpend_all", scope: !2620, file: !2620, line: 1674, type: !18179, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18181)
!18179 = !DISubroutineType(types: !18180)
!18180 = !{null, !2546}
!18181 = !{!18182, !18183}
!18182 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18178, file: !2620, line: 1674, type: !2546)
!18183 = !DILocalVariable(name: "thread", scope: !18178, file: !2620, line: 1676, type: !2515)
!18184 = !DILocation(line: 0, scope: !18178)
!18185 = !DILocation(line: 1678, column: 19, scope: !18178)
!18186 = !DILocation(line: 1678, column: 41, scope: !18178)
!18187 = !DILocation(line: 1678, column: 2, scope: !18178)
!18188 = !DILocation(line: 1679, column: 3, scope: !18189)
!18189 = distinct !DILexicalBlock(scope: !18178, file: !2620, line: 1678, column: 50)
!18190 = !DILocation(line: 1680, column: 9, scope: !18189)
!18191 = !DILocalVariable(name: "thread", arg: 1, scope: !18192, file: !14903, line: 65, type: !2515)
!18192 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14903, file: !14903, line: 65, type: !18193, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18195)
!18193 = !DISubroutineType(types: !18194)
!18194 = !{null, !2515, !32}
!18195 = !{!18191, !18196}
!18196 = !DILocalVariable(name: "value", arg: 2, scope: !18192, file: !14903, line: 65, type: !32)
!18197 = !DILocation(line: 0, scope: !18192, inlinedAt: !18198)
!18198 = distinct !DILocation(line: 1681, column: 3, scope: !18189)
!18199 = !DILocation(line: 67, column: 15, scope: !18192, inlinedAt: !18198)
!18200 = !DILocation(line: 67, column: 33, scope: !18192, inlinedAt: !18198)
!18201 = !DILocation(line: 1682, column: 3, scope: !18189)
!18202 = distinct !{!18202, !18187, !18203}
!18203 = !DILocation(line: 1683, column: 2, scope: !18178)
!18204 = !DILocation(line: 1684, column: 1, scope: !18178)
!18205 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2620, file: !2620, line: 1794, type: !18206, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18208)
!18206 = !DISubroutineType(types: !18207)
!18207 = !{!107, !2515, !17147}
!18208 = !{!18209, !18210, !18211, !18212}
!18209 = !DILocalVariable(name: "thread", arg: 1, scope: !18205, file: !2620, line: 1794, type: !2515)
!18210 = !DILocalVariable(name: "timeout", arg: 2, scope: !18205, file: !2620, line: 1794, type: !17147)
!18211 = !DILocalVariable(name: "key", scope: !18205, file: !2620, line: 1796, type: !16350)
!18212 = !DILocalVariable(name: "ret", scope: !18205, file: !2620, line: 1797, type: !107)
!18213 = !DILocation(line: 0, scope: !18205)
!18214 = !DILocation(line: 0, scope: !16358, inlinedAt: !18215)
!18215 = distinct !DILocation(line: 1796, column: 25, scope: !18205)
!18216 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !18217)
!18217 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !18215)
!18218 = !DILocation(line: 0, scope: !16367, inlinedAt: !18217)
!18219 = !DILocation(line: 1801, column: 20, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18205, file: !2620, line: 1801, column: 6)
!18221 = !DILocation(line: 1801, column: 33, scope: !18220)
!18222 = !DILocation(line: 1801, column: 49, scope: !18220)
!18223 = !DILocation(line: 1801, column: 6, scope: !18205)
!18224 = !DILocation(line: 1803, column: 13, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18220, file: !2620, line: 1803, column: 13)
!18226 = !DILocation(line: 1803, column: 13, scope: !18220)
!18227 = !DILocation(line: 1805, column: 24, scope: !18228)
!18228 = distinct !DILexicalBlock(scope: !18225, file: !2620, line: 1805, column: 13)
!18229 = !DILocation(line: 1805, column: 21, scope: !18228)
!18230 = !DILocation(line: 1805, column: 34, scope: !18228)
!18231 = !DILocation(line: 1806, column: 20, scope: !18228)
!18232 = !DILocation(line: 1806, column: 44, scope: !18228)
!18233 = !DILocation(line: 1806, column: 30, scope: !18228)
!18234 = !DILocation(line: 1805, column: 13, scope: !18225)
!18235 = !DILocation(line: 1810, column: 42, scope: !18236)
!18236 = distinct !DILexicalBlock(scope: !18228, file: !2620, line: 1808, column: 9)
!18237 = !DILocation(line: 1810, column: 3, scope: !18236)
!18238 = !DILocation(line: 1811, column: 22, scope: !18236)
!18239 = !DILocation(line: 1811, column: 3, scope: !18236)
!18240 = !DILocation(line: 0, scope: !16967, inlinedAt: !18241)
!18241 = distinct !DILocation(line: 1814, column: 9, scope: !18236)
!18242 = !DILocation(line: 196, column: 9, scope: !16967, inlinedAt: !18241)
!18243 = !DILocation(line: 1817, column: 3, scope: !18236)
!18244 = !DILocation(line: 0, scope: !18220)
!18245 = !DILocation(line: 0, scope: !16385, inlinedAt: !18246)
!18246 = distinct !DILocation(line: 1822, column: 2, scope: !18205)
!18247 = !DILocation(line: 0, scope: !16393, inlinedAt: !18248)
!18248 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !18246)
!18249 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !18248)
!18250 = !DILocation(line: 1823, column: 2, scope: !18205)
!18251 = !DILocation(line: 1824, column: 1, scope: !18205)
!18252 = distinct !DISubprogram(name: "z_sched_wake", scope: !2620, file: !2620, line: 1882, type: !18253, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18255)
!18253 = !DISubroutineType(types: !18254)
!18254 = !{!136, !2546, !107, !106}
!18255 = !{!18256, !18257, !18258, !18259, !18260, !18261, !18263}
!18256 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18252, file: !2620, line: 1882, type: !2546)
!18257 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18252, file: !2620, line: 1882, type: !107)
!18258 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18252, file: !2620, line: 1882, type: !106)
!18259 = !DILocalVariable(name: "thread", scope: !18252, file: !2620, line: 1884, type: !2515)
!18260 = !DILocalVariable(name: "ret", scope: !18252, file: !2620, line: 1885, type: !136)
!18261 = !DILocalVariable(name: "__i", scope: !18262, file: !2620, line: 1887, type: !16350)
!18262 = distinct !DILexicalBlock(scope: !18252, file: !2620, line: 1887, column: 2)
!18263 = !DILocalVariable(name: "__key", scope: !18262, file: !2620, line: 1887, type: !16350)
!18264 = !DILocation(line: 0, scope: !18252)
!18265 = !DILocation(line: 0, scope: !18262)
!18266 = !DILocation(line: 0, scope: !16358, inlinedAt: !18267)
!18267 = distinct !DILocation(line: 1887, column: 2, scope: !18262)
!18268 = !DILocation(line: 55, column: 2, scope: !16367, inlinedAt: !18269)
!18269 = distinct !DILocation(line: 145, column: 10, scope: !16358, inlinedAt: !18267)
!18270 = !DILocation(line: 0, scope: !16367, inlinedAt: !18269)
!18271 = !DILocation(line: 1888, column: 12, scope: !18272)
!18272 = distinct !DILexicalBlock(scope: !18273, file: !2620, line: 1887, column: 26)
!18273 = distinct !DILexicalBlock(scope: !18262, file: !2620, line: 1887, column: 2)
!18274 = !DILocation(line: 1890, column: 14, scope: !18275)
!18275 = distinct !DILexicalBlock(scope: !18272, file: !2620, line: 1890, column: 7)
!18276 = !DILocation(line: 1890, column: 7, scope: !18272)
!18277 = !DILocalVariable(name: "thread", arg: 1, scope: !18278, file: !15653, line: 134, type: !2515)
!18278 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15653, file: !15653, line: 134, type: !18279, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18281)
!18279 = !DISubroutineType(types: !18280)
!18280 = !{null, !2515, !32, !106}
!18281 = !{!18277, !18282, !18283}
!18282 = !DILocalVariable(name: "value", arg: 2, scope: !18278, file: !15653, line: 135, type: !32)
!18283 = !DILocalVariable(name: "data", arg: 3, scope: !18278, file: !15653, line: 136, type: !106)
!18284 = !DILocation(line: 0, scope: !18278, inlinedAt: !18285)
!18285 = distinct !DILocation(line: 1891, column: 4, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !18275, file: !2620, line: 1890, column: 23)
!18287 = !DILocation(line: 0, scope: !18192, inlinedAt: !18288)
!18288 = distinct !DILocation(line: 138, column: 2, scope: !18278, inlinedAt: !18285)
!18289 = !DILocation(line: 67, column: 15, scope: !18192, inlinedAt: !18288)
!18290 = !DILocation(line: 67, column: 33, scope: !18192, inlinedAt: !18288)
!18291 = !DILocation(line: 139, column: 15, scope: !18278, inlinedAt: !18285)
!18292 = !DILocation(line: 139, column: 25, scope: !18278, inlinedAt: !18285)
!18293 = !DILocation(line: 1894, column: 4, scope: !18286)
!18294 = !DILocation(line: 1895, column: 10, scope: !18286)
!18295 = !DILocation(line: 1896, column: 4, scope: !18286)
!18296 = !DILocation(line: 1898, column: 3, scope: !18286)
!18297 = !DILocation(line: 0, scope: !16385, inlinedAt: !18298)
!18298 = distinct !DILocation(line: 1887, column: 2, scope: !18273)
!18299 = !DILocation(line: 0, scope: !16393, inlinedAt: !18300)
!18300 = distinct !DILocation(line: 215, column: 2, scope: !16385, inlinedAt: !18298)
!18301 = !DILocation(line: 95, column: 2, scope: !16393, inlinedAt: !18300)
!18302 = !DILocation(line: 1901, column: 2, scope: !18252)
!18303 = distinct !DISubprogram(name: "z_sched_wait", scope: !2620, file: !2620, line: 1904, type: !18304, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !18307)
!18304 = !DISubroutineType(types: !18305)
!18305 = !{!107, !16361, !16350, !2546, !17147, !18306}
!18306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!18307 = !{!18308, !18309, !18310, !18311, !18312, !18313}
!18308 = !DILocalVariable(name: "lock", arg: 1, scope: !18303, file: !2620, line: 1904, type: !16361)
!18309 = !DILocalVariable(name: "key", arg: 2, scope: !18303, file: !2620, line: 1904, type: !16350)
!18310 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18303, file: !2620, line: 1905, type: !2546)
!18311 = !DILocalVariable(name: "timeout", arg: 4, scope: !18303, file: !2620, line: 1905, type: !17147)
!18312 = !DILocalVariable(name: "data", arg: 5, scope: !18303, file: !2620, line: 1905, type: !18306)
!18313 = !DILocalVariable(name: "ret", scope: !18303, file: !2620, line: 1907, type: !107)
!18314 = !DILocation(line: 0, scope: !18303)
!18315 = !DILocation(line: 1907, column: 12, scope: !18303)
!18316 = !DILocation(line: 1909, column: 11, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18303, file: !2620, line: 1909, column: 6)
!18318 = !DILocation(line: 1909, column: 6, scope: !18303)
!18319 = !DILocation(line: 1910, column: 11, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18317, file: !2620, line: 1909, column: 20)
!18321 = !DILocation(line: 1910, column: 26, scope: !18320)
!18322 = !DILocation(line: 1910, column: 9, scope: !18320)
!18323 = !DILocation(line: 1911, column: 2, scope: !18320)
!18324 = !DILocation(line: 1912, column: 2, scope: !18303)
!18325 = distinct !DISubprogram(name: "z_data_copy", scope: !18326, file: !18326, line: 22, type: !337, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3382, retainedNodes: !256)
!18326 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18327 = !DILocation(line: 24, column: 2, scope: !18325)
!18328 = !DILocation(line: 27, column: 2, scope: !18325)
!18329 = !DILocation(line: 71, column: 1, scope: !18325)
!18330 = distinct !DISubprogram(name: "z_add_timeout", scope: !2657, file: !2657, line: 88, type: !18331, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18337)
!18331 = !DISubroutineType(types: !18332)
!18332 = !{null, !2630, !2649, !18333}
!18333 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !18334)
!18334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !18335)
!18335 = !{!18336}
!18336 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18334, file: !103, line: 66, baseType: !102, size: 64)
!18337 = !{!18338, !18339, !18340, !18341, !18347, !18348, !18351, !18354}
!18338 = !DILocalVariable(name: "to", arg: 1, scope: !18330, file: !2657, line: 88, type: !2630)
!18339 = !DILocalVariable(name: "fn", arg: 2, scope: !18330, file: !2657, line: 88, type: !2649)
!18340 = !DILocalVariable(name: "timeout", arg: 3, scope: !18330, file: !2657, line: 89, type: !18333)
!18341 = !DILocalVariable(name: "__i", scope: !18342, file: !2657, line: 102, type: !18343)
!18342 = distinct !DILexicalBlock(scope: !18330, file: !2657, line: 102, column: 2)
!18343 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !18344)
!18344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !18345)
!18345 = !{!18346}
!18346 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18344, file: !255, line: 33, baseType: !107, size: 32)
!18347 = !DILocalVariable(name: "__key", scope: !18342, file: !2657, line: 102, type: !18343)
!18348 = !DILocalVariable(name: "t", scope: !18349, file: !2657, line: 103, type: !2630)
!18349 = distinct !DILexicalBlock(scope: !18350, file: !2657, line: 102, column: 24)
!18350 = distinct !DILexicalBlock(scope: !18342, file: !2657, line: 102, column: 2)
!18351 = !DILocalVariable(name: "ticks", scope: !18352, file: !2657, line: 107, type: !102)
!18352 = distinct !DILexicalBlock(scope: !18353, file: !2657, line: 106, column: 39)
!18353 = distinct !DILexicalBlock(scope: !18349, file: !2657, line: 105, column: 7)
!18354 = !DILocalVariable(name: "next_time", scope: !18355, file: !2657, line: 137, type: !334)
!18355 = distinct !DILexicalBlock(scope: !18356, file: !2657, line: 127, column: 22)
!18356 = distinct !DILexicalBlock(scope: !18349, file: !2657, line: 127, column: 7)
!18357 = !DILocation(line: 0, scope: !18330)
!18358 = !DILocation(line: 91, column: 6, scope: !18359)
!18359 = distinct !DILexicalBlock(scope: !18330, file: !2657, line: 91, column: 6)
!18360 = !DILocation(line: 91, column: 6, scope: !18330)
!18361 = !DILocation(line: 100, column: 6, scope: !18330)
!18362 = !DILocation(line: 100, column: 9, scope: !18330)
!18363 = !DILocation(line: 0, scope: !18342)
!18364 = !DILocalVariable(name: "l", arg: 1, scope: !18365, file: !255, line: 136, type: !18368)
!18365 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !18366, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18369)
!18366 = !DISubroutineType(types: !18367)
!18367 = !{!18343, !18368}
!18368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 32)
!18369 = !{!18364, !18370}
!18370 = !DILocalVariable(name: "k", scope: !18365, file: !255, line: 139, type: !18343)
!18371 = !DILocation(line: 0, scope: !18365, inlinedAt: !18372)
!18372 = distinct !DILocation(line: 102, column: 2, scope: !18342)
!18373 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18378)
!18374 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18375)
!18375 = !{!18376, !18377}
!18376 = !DILocalVariable(name: "key", scope: !18374, file: !7118, line: 44, type: !32)
!18377 = !DILocalVariable(name: "tmp", scope: !18374, file: !7118, line: 53, type: !32)
!18378 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18372)
!18379 = !{i64 2285194}
!18380 = !DILocation(line: 0, scope: !18374, inlinedAt: !18378)
!18381 = !DILocation(line: 106, column: 33, scope: !18353)
!18382 = !DILocation(line: 105, column: 7, scope: !18349)
!18383 = !DILocation(line: 107, column: 50, scope: !18352)
!18384 = !DILocation(line: 107, column: 48, scope: !18352)
!18385 = !DILocation(line: 0, scope: !18352)
!18386 = !DILocation(line: 109, column: 17, scope: !18352)
!18387 = !DILocation(line: 110, column: 3, scope: !18352)
!18388 = !DILocation(line: 111, column: 31, scope: !18389)
!18389 = distinct !DILexicalBlock(scope: !18353, file: !2657, line: 110, column: 10)
!18390 = !DILocation(line: 111, column: 37, scope: !18389)
!18391 = !DILocation(line: 111, column: 35, scope: !18389)
!18392 = !DILocation(line: 0, scope: !18353)
!18393 = !DILocation(line: 109, column: 8, scope: !18352)
!18394 = !DILocation(line: 109, column: 15, scope: !18352)
!18395 = !DILocation(line: 114, column: 12, scope: !18396)
!18396 = distinct !DILexicalBlock(scope: !18349, file: !2657, line: 114, column: 3)
!18397 = !DILocation(line: 0, scope: !18349)
!18398 = !DILocation(line: 114, column: 3, scope: !18396)
!18399 = !DILocation(line: 115, column: 24, scope: !18400)
!18400 = distinct !DILexicalBlock(scope: !18401, file: !2657, line: 115, column: 8)
!18401 = distinct !DILexicalBlock(scope: !18402, file: !2657, line: 114, column: 45)
!18402 = distinct !DILexicalBlock(scope: !18396, file: !2657, line: 114, column: 3)
!18403 = !DILocation(line: 115, column: 11, scope: !18400)
!18404 = !DILocation(line: 115, column: 18, scope: !18400)
!18405 = !DILocation(line: 115, column: 8, scope: !18401)
!18406 = !DILocation(line: 116, column: 15, scope: !18407)
!18407 = distinct !DILexicalBlock(scope: !18400, file: !2657, line: 115, column: 32)
!18408 = !DILocation(line: 117, column: 26, scope: !18407)
!18409 = !DILocation(line: 117, column: 37, scope: !18407)
!18410 = !DILocation(line: 117, column: 5, scope: !18407)
!18411 = !DILocation(line: 123, column: 7, scope: !18349)
!18412 = !DILocation(line: 120, column: 15, scope: !18401)
!18413 = !DILocation(line: 114, column: 36, scope: !18402)
!18414 = distinct !{!18414, !18398, !18415}
!18415 = !DILocation(line: 121, column: 3, scope: !18396)
!18416 = !DILocation(line: 124, column: 41, scope: !18417)
!18417 = distinct !DILexicalBlock(scope: !18418, file: !2657, line: 123, column: 18)
!18418 = distinct !DILexicalBlock(scope: !18349, file: !2657, line: 123, column: 7)
!18419 = !DILocation(line: 124, column: 4, scope: !18417)
!18420 = !DILocation(line: 125, column: 3, scope: !18417)
!18421 = !DILocation(line: 127, column: 13, scope: !18356)
!18422 = !DILocation(line: 127, column: 10, scope: !18356)
!18423 = !DILocation(line: 127, column: 7, scope: !18349)
!18424 = !DILocation(line: 137, column: 24, scope: !18355)
!18425 = !DILocation(line: 0, scope: !18355)
!18426 = !DILocation(line: 139, column: 18, scope: !18427)
!18427 = distinct !DILexicalBlock(scope: !18355, file: !2657, line: 139, column: 8)
!18428 = !DILocation(line: 139, column: 23, scope: !18427)
!18429 = !DILocation(line: 141, column: 5, scope: !18430)
!18430 = distinct !DILexicalBlock(scope: !18427, file: !2657, line: 140, column: 48)
!18431 = !DILocation(line: 142, column: 4, scope: !18430)
!18432 = !DILocalVariable(name: "key", arg: 2, scope: !18433, file: !255, line: 190, type: !18343)
!18433 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !18434, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18436)
!18434 = !DISubroutineType(types: !18435)
!18435 = !{null, !18368, !18343}
!18436 = !{!18437, !18432}
!18437 = !DILocalVariable(name: "l", arg: 1, scope: !18433, file: !255, line: 189, type: !18368)
!18438 = !DILocation(line: 0, scope: !18433, inlinedAt: !18439)
!18439 = distinct !DILocation(line: 102, column: 2, scope: !18350)
!18440 = !DILocalVariable(name: "key", arg: 1, scope: !18441, file: !7118, line: 84, type: !32)
!18441 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18442)
!18442 = !{!18440}
!18443 = !DILocation(line: 0, scope: !18441, inlinedAt: !18444)
!18444 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18439)
!18445 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18444)
!18446 = !{i64 2286011}
!18447 = !DILocation(line: 148, column: 1, scope: !18330)
!18448 = distinct !DISubprogram(name: "elapsed", scope: !2657, file: !2657, line: 62, type: !18449, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !256)
!18449 = !DISubroutineType(types: !18450)
!18450 = !{!334}
!18451 = !DILocation(line: 64, column: 9, scope: !18448)
!18452 = !DILocation(line: 64, column: 28, scope: !18448)
!18453 = !DILocation(line: 64, column: 35, scope: !18448)
!18454 = !DILocation(line: 64, column: 2, scope: !18448)
!18455 = distinct !DISubprogram(name: "first", scope: !2657, file: !2657, line: 39, type: !18456, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18458)
!18456 = !DISubroutineType(types: !18457)
!18457 = !{!2630}
!18458 = !{!18459}
!18459 = !DILocalVariable(name: "t", scope: !18455, file: !2657, line: 41, type: !18460)
!18460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!18461 = !DILocation(line: 41, column: 19, scope: !18455)
!18462 = !DILocation(line: 0, scope: !18455)
!18463 = !DILocation(line: 43, column: 9, scope: !18455)
!18464 = !DILocation(line: 43, column: 2, scope: !18455)
!18465 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !151, file: !151, line: 443, type: !18466, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18468)
!18466 = !DISubroutineType(types: !18467)
!18467 = !{null, !18460, !18460}
!18468 = !{!18469, !18470, !18471}
!18469 = !DILocalVariable(name: "successor", arg: 1, scope: !18465, file: !151, line: 443, type: !18460)
!18470 = !DILocalVariable(name: "node", arg: 2, scope: !18465, file: !151, line: 443, type: !18460)
!18471 = !DILocalVariable(name: "prev", scope: !18465, file: !151, line: 445, type: !18472)
!18472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18460)
!18473 = !DILocation(line: 0, scope: !18465)
!18474 = !DILocation(line: 445, column: 39, scope: !18465)
!18475 = !DILocation(line: 447, column: 8, scope: !18465)
!18476 = !DILocation(line: 447, column: 13, scope: !18465)
!18477 = !DILocation(line: 448, column: 8, scope: !18465)
!18478 = !DILocation(line: 448, column: 13, scope: !18465)
!18479 = !DILocation(line: 449, column: 8, scope: !18465)
!18480 = !DILocation(line: 449, column: 13, scope: !18465)
!18481 = !DILocation(line: 450, column: 18, scope: !18465)
!18482 = !DILocation(line: 451, column: 1, scope: !18465)
!18483 = distinct !DISubprogram(name: "next", scope: !2657, file: !2657, line: 46, type: !18484, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18486)
!18484 = !DISubroutineType(types: !18485)
!18485 = !{!2630, !2630}
!18486 = !{!18487, !18488}
!18487 = !DILocalVariable(name: "t", arg: 1, scope: !18483, file: !2657, line: 46, type: !2630)
!18488 = !DILocalVariable(name: "n", scope: !18483, file: !2657, line: 48, type: !18460)
!18489 = !DILocation(line: 0, scope: !18483)
!18490 = !DILocation(line: 48, column: 58, scope: !18483)
!18491 = !DILocation(line: 48, column: 19, scope: !18483)
!18492 = !DILocation(line: 50, column: 9, scope: !18483)
!18493 = !DILocation(line: 50, column: 2, scope: !18483)
!18494 = distinct !DISubprogram(name: "sys_dlist_append", scope: !151, file: !151, line: 404, type: !18495, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18498)
!18495 = !DISubroutineType(types: !18496)
!18496 = !{null, !18497, !18460}
!18497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 32)
!18498 = !{!18499, !18500, !18501}
!18499 = !DILocalVariable(name: "list", arg: 1, scope: !18494, file: !151, line: 404, type: !18497)
!18500 = !DILocalVariable(name: "node", arg: 2, scope: !18494, file: !151, line: 404, type: !18460)
!18501 = !DILocalVariable(name: "tail", scope: !18494, file: !151, line: 406, type: !18472)
!18502 = !DILocation(line: 0, scope: !18494)
!18503 = !DILocation(line: 406, column: 34, scope: !18494)
!18504 = !DILocation(line: 408, column: 8, scope: !18494)
!18505 = !DILocation(line: 408, column: 13, scope: !18494)
!18506 = !DILocation(line: 409, column: 8, scope: !18494)
!18507 = !DILocation(line: 409, column: 13, scope: !18494)
!18508 = !DILocation(line: 411, column: 8, scope: !18494)
!18509 = !DILocation(line: 411, column: 13, scope: !18494)
!18510 = !DILocation(line: 412, column: 13, scope: !18494)
!18511 = !DILocation(line: 413, column: 1, scope: !18494)
!18512 = distinct !DISubprogram(name: "next_timeout", scope: !2657, file: !2657, line: 67, type: !18449, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18513)
!18513 = !{!18514, !18515, !18516}
!18514 = !DILocalVariable(name: "to", scope: !18512, file: !2657, line: 69, type: !2630)
!18515 = !DILocalVariable(name: "ticks_elapsed", scope: !18512, file: !2657, line: 70, type: !334)
!18516 = !DILocalVariable(name: "ret", scope: !18512, file: !2657, line: 71, type: !334)
!18517 = !DILocation(line: 69, column: 24, scope: !18512)
!18518 = !DILocation(line: 0, scope: !18512)
!18519 = !DILocation(line: 70, column: 26, scope: !18512)
!18520 = !DILocation(line: 73, column: 10, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18512, file: !2657, line: 73, column: 6)
!18522 = !DILocation(line: 73, column: 19, scope: !18521)
!18523 = !DILocation(line: 74, column: 21, scope: !18521)
!18524 = !DILocation(line: 74, column: 30, scope: !18521)
!18525 = !DILocation(line: 74, column: 28, scope: !18521)
!18526 = !DILocation(line: 74, column: 45, scope: !18521)
!18527 = !DILocation(line: 73, column: 6, scope: !18512)
!18528 = !DILocation(line: 77, column: 9, scope: !18529)
!18529 = distinct !DILexicalBlock(scope: !18521, file: !2657, line: 76, column: 9)
!18530 = !DILocation(line: 0, scope: !18521)
!18531 = !DILocation(line: 81, column: 20, scope: !18532)
!18532 = distinct !DILexicalBlock(scope: !18512, file: !2657, line: 81, column: 6)
!18533 = !DILocation(line: 81, column: 6, scope: !18532)
!18534 = !DILocation(line: 81, column: 32, scope: !18532)
!18535 = !DILocation(line: 85, column: 2, scope: !18512)
!18536 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !151, file: !151, line: 341, type: !18537, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18539)
!18537 = !DISubroutineType(types: !18538)
!18538 = !{!18460, !18497, !18460}
!18539 = !{!18540, !18541}
!18540 = !DILocalVariable(name: "list", arg: 1, scope: !18536, file: !151, line: 341, type: !18497)
!18541 = !DILocalVariable(name: "node", arg: 2, scope: !18536, file: !151, line: 342, type: !18460)
!18542 = !DILocation(line: 0, scope: !18536)
!18543 = !DILocation(line: 344, column: 15, scope: !18536)
!18544 = !DILocation(line: 344, column: 9, scope: !18536)
!18545 = !DILocation(line: 344, column: 26, scope: !18536)
!18546 = !DILocation(line: 344, column: 2, scope: !18536)
!18547 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !151, file: !151, line: 325, type: !18537, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18548)
!18548 = !{!18549, !18550}
!18549 = !DILocalVariable(name: "list", arg: 1, scope: !18547, file: !151, line: 325, type: !18497)
!18550 = !DILocalVariable(name: "node", arg: 2, scope: !18547, file: !151, line: 326, type: !18460)
!18551 = !DILocation(line: 0, scope: !18547)
!18552 = !DILocation(line: 328, column: 24, scope: !18547)
!18553 = !DILocation(line: 328, column: 15, scope: !18547)
!18554 = !DILocation(line: 328, column: 9, scope: !18547)
!18555 = !DILocation(line: 328, column: 45, scope: !18547)
!18556 = !DILocation(line: 328, column: 2, scope: !18547)
!18557 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !151, file: !151, line: 294, type: !18558, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18560)
!18558 = !DISubroutineType(types: !18559)
!18559 = !{!18460, !18497}
!18560 = !{!18561}
!18561 = !DILocalVariable(name: "list", arg: 1, scope: !18557, file: !151, line: 294, type: !18497)
!18562 = !DILocation(line: 0, scope: !18557)
!18563 = !DILocation(line: 296, column: 9, scope: !18557)
!18564 = !DILocation(line: 296, column: 2, scope: !18557)
!18565 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !151, file: !151, line: 266, type: !18566, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18568)
!18566 = !DISubroutineType(types: !18567)
!18567 = !{!136, !18497}
!18568 = !{!18569}
!18569 = !DILocalVariable(name: "list", arg: 1, scope: !18565, file: !151, line: 266, type: !18497)
!18570 = !DILocation(line: 0, scope: !18565)
!18571 = !DILocation(line: 268, column: 15, scope: !18565)
!18572 = !DILocation(line: 268, column: 20, scope: !18565)
!18573 = !DILocation(line: 268, column: 2, scope: !18565)
!18574 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2657, file: !2657, line: 150, type: !18575, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18577)
!18575 = !DISubroutineType(types: !18576)
!18576 = !{!107, !2630}
!18577 = !{!18578, !18579, !18580, !18582}
!18578 = !DILocalVariable(name: "to", arg: 1, scope: !18574, file: !2657, line: 150, type: !2630)
!18579 = !DILocalVariable(name: "ret", scope: !18574, file: !2657, line: 152, type: !107)
!18580 = !DILocalVariable(name: "__i", scope: !18581, file: !2657, line: 154, type: !18343)
!18581 = distinct !DILexicalBlock(scope: !18574, file: !2657, line: 154, column: 2)
!18582 = !DILocalVariable(name: "__key", scope: !18581, file: !2657, line: 154, type: !18343)
!18583 = !DILocation(line: 0, scope: !18574)
!18584 = !DILocation(line: 0, scope: !18581)
!18585 = !DILocation(line: 0, scope: !18365, inlinedAt: !18586)
!18586 = distinct !DILocation(line: 154, column: 2, scope: !18581)
!18587 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18588)
!18588 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18586)
!18589 = !DILocation(line: 0, scope: !18374, inlinedAt: !18588)
!18590 = !DILocation(line: 155, column: 7, scope: !18591)
!18591 = distinct !DILexicalBlock(scope: !18592, file: !2657, line: 155, column: 7)
!18592 = distinct !DILexicalBlock(scope: !18593, file: !2657, line: 154, column: 24)
!18593 = distinct !DILexicalBlock(scope: !18581, file: !2657, line: 154, column: 2)
!18594 = !DILocation(line: 155, column: 7, scope: !18592)
!18595 = !DILocation(line: 156, column: 4, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18591, file: !2657, line: 155, column: 39)
!18597 = !DILocation(line: 158, column: 3, scope: !18596)
!18598 = !DILocation(line: 0, scope: !18433, inlinedAt: !18599)
!18599 = distinct !DILocation(line: 154, column: 2, scope: !18593)
!18600 = !DILocation(line: 0, scope: !18441, inlinedAt: !18601)
!18601 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18599)
!18602 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18601)
!18603 = !DILocation(line: 161, column: 2, scope: !18574)
!18604 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !151, file: !151, line: 225, type: !18605, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18609)
!18605 = !DISubroutineType(types: !18606)
!18606 = !{!136, !18607}
!18607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18608, size: 32)
!18608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2634)
!18609 = !{!18610}
!18610 = !DILocalVariable(name: "node", arg: 1, scope: !18604, file: !151, line: 225, type: !18607)
!18611 = !DILocation(line: 0, scope: !18604)
!18612 = !DILocation(line: 227, column: 15, scope: !18604)
!18613 = !DILocation(line: 227, column: 20, scope: !18604)
!18614 = !DILocation(line: 227, column: 2, scope: !18604)
!18615 = distinct !DISubprogram(name: "remove_timeout", scope: !2657, file: !2657, line: 53, type: !2651, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18616)
!18616 = !{!18617}
!18617 = !DILocalVariable(name: "t", arg: 1, scope: !18615, file: !2657, line: 53, type: !2630)
!18618 = !DILocation(line: 0, scope: !18615)
!18619 = !DILocation(line: 55, column: 6, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18615, file: !2657, line: 55, column: 6)
!18621 = !DILocation(line: 55, column: 14, scope: !18620)
!18622 = !DILocation(line: 55, column: 6, scope: !18615)
!18623 = !DILocation(line: 56, column: 25, scope: !18624)
!18624 = distinct !DILexicalBlock(scope: !18620, file: !2657, line: 55, column: 23)
!18625 = !DILocation(line: 56, column: 12, scope: !18624)
!18626 = !DILocation(line: 56, column: 19, scope: !18624)
!18627 = !DILocation(line: 57, column: 2, scope: !18624)
!18628 = !DILocation(line: 59, column: 23, scope: !18615)
!18629 = !DILocation(line: 59, column: 2, scope: !18615)
!18630 = !DILocation(line: 60, column: 1, scope: !18615)
!18631 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !151, file: !151, line: 496, type: !18632, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18634)
!18632 = !DISubroutineType(types: !18633)
!18633 = !{null, !18460}
!18634 = !{!18635, !18636, !18637}
!18635 = !DILocalVariable(name: "node", arg: 1, scope: !18631, file: !151, line: 496, type: !18460)
!18636 = !DILocalVariable(name: "prev", scope: !18631, file: !151, line: 498, type: !18472)
!18637 = !DILocalVariable(name: "next", scope: !18631, file: !151, line: 499, type: !18472)
!18638 = !DILocation(line: 0, scope: !18631)
!18639 = !DILocation(line: 498, column: 34, scope: !18631)
!18640 = !DILocation(line: 499, column: 34, scope: !18631)
!18641 = !DILocation(line: 501, column: 8, scope: !18631)
!18642 = !DILocation(line: 501, column: 13, scope: !18631)
!18643 = !DILocation(line: 502, column: 8, scope: !18631)
!18644 = !DILocation(line: 502, column: 13, scope: !18631)
!18645 = !DILocation(line: 503, column: 2, scope: !18631)
!18646 = !DILocation(line: 504, column: 1, scope: !18631)
!18647 = distinct !DISubprogram(name: "sys_dnode_init", scope: !151, file: !151, line: 211, type: !18632, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18648)
!18648 = !{!18649}
!18649 = !DILocalVariable(name: "node", arg: 1, scope: !18647, file: !151, line: 211, type: !18460)
!18650 = !DILocation(line: 0, scope: !18647)
!18651 = !DILocation(line: 213, column: 8, scope: !18647)
!18652 = !DILocation(line: 213, column: 13, scope: !18647)
!18653 = !DILocation(line: 214, column: 8, scope: !18647)
!18654 = !DILocation(line: 214, column: 13, scope: !18647)
!18655 = !DILocation(line: 215, column: 1, scope: !18647)
!18656 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2657, file: !2657, line: 183, type: !18657, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18661)
!18657 = !DISubroutineType(types: !18658)
!18658 = !{!102, !18659}
!18659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18660, size: 32)
!18660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2631)
!18661 = !{!18662, !18663, !18664, !18666}
!18662 = !DILocalVariable(name: "timeout", arg: 1, scope: !18656, file: !2657, line: 183, type: !18659)
!18663 = !DILocalVariable(name: "ticks", scope: !18656, file: !2657, line: 185, type: !102)
!18664 = !DILocalVariable(name: "__i", scope: !18665, file: !2657, line: 187, type: !18343)
!18665 = distinct !DILexicalBlock(scope: !18656, file: !2657, line: 187, column: 2)
!18666 = !DILocalVariable(name: "__key", scope: !18665, file: !2657, line: 187, type: !18343)
!18667 = !DILocation(line: 0, scope: !18656)
!18668 = !DILocation(line: 0, scope: !18665)
!18669 = !DILocation(line: 0, scope: !18365, inlinedAt: !18670)
!18670 = distinct !DILocation(line: 187, column: 2, scope: !18665)
!18671 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18672)
!18672 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18670)
!18673 = !DILocation(line: 0, scope: !18374, inlinedAt: !18672)
!18674 = !DILocation(line: 188, column: 11, scope: !18675)
!18675 = distinct !DILexicalBlock(scope: !18676, file: !2657, line: 187, column: 24)
!18676 = distinct !DILexicalBlock(scope: !18665, file: !2657, line: 187, column: 2)
!18677 = !DILocation(line: 0, scope: !18433, inlinedAt: !18678)
!18678 = distinct !DILocation(line: 187, column: 2, scope: !18676)
!18679 = !DILocation(line: 0, scope: !18441, inlinedAt: !18680)
!18680 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18678)
!18681 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18680)
!18682 = !DILocation(line: 191, column: 2, scope: !18656)
!18683 = distinct !DISubprogram(name: "timeout_rem", scope: !2657, file: !2657, line: 165, type: !18657, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18684)
!18684 = !{!18685, !18686, !18687}
!18685 = !DILocalVariable(name: "timeout", arg: 1, scope: !18683, file: !2657, line: 165, type: !18659)
!18686 = !DILocalVariable(name: "ticks", scope: !18683, file: !2657, line: 167, type: !102)
!18687 = !DILocalVariable(name: "t", scope: !18688, file: !2657, line: 173, type: !2630)
!18688 = distinct !DILexicalBlock(scope: !18683, file: !2657, line: 173, column: 2)
!18689 = !DILocation(line: 0, scope: !18683)
!18690 = !DILocation(line: 169, column: 6, scope: !18691)
!18691 = distinct !DILexicalBlock(scope: !18683, file: !2657, line: 169, column: 6)
!18692 = !DILocation(line: 169, column: 6, scope: !18683)
!18693 = !DILocation(line: 173, column: 28, scope: !18688)
!18694 = !DILocation(line: 0, scope: !18688)
!18695 = !DILocation(line: 173, column: 39, scope: !18696)
!18696 = distinct !DILexicalBlock(scope: !18688, file: !2657, line: 173, column: 2)
!18697 = !DILocation(line: 173, column: 2, scope: !18688)
!18698 = !DILocation(line: 174, column: 15, scope: !18699)
!18699 = distinct !DILexicalBlock(scope: !18696, file: !2657, line: 173, column: 61)
!18700 = !DILocation(line: 174, column: 9, scope: !18699)
!18701 = !DILocation(line: 175, column: 15, scope: !18702)
!18702 = distinct !DILexicalBlock(scope: !18699, file: !2657, line: 175, column: 7)
!18703 = !DILocation(line: 175, column: 7, scope: !18699)
!18704 = !DILocation(line: 173, column: 52, scope: !18696)
!18705 = distinct !{!18705, !18697, !18706}
!18706 = !DILocation(line: 178, column: 2, scope: !18688)
!18707 = !DILocation(line: 180, column: 17, scope: !18683)
!18708 = !DILocation(line: 180, column: 15, scope: !18683)
!18709 = !DILocation(line: 180, column: 2, scope: !18683)
!18710 = !DILocation(line: 181, column: 1, scope: !18683)
!18711 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15277, file: !15277, line: 35, type: !18712, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18714)
!18712 = !DISubroutineType(types: !18713)
!18713 = !{!136, !18659}
!18714 = !{!18715}
!18715 = !DILocalVariable(name: "to", arg: 1, scope: !18711, file: !15277, line: 35, type: !18659)
!18716 = !DILocation(line: 0, scope: !18711)
!18717 = !DILocation(line: 37, column: 35, scope: !18711)
!18718 = !DILocation(line: 37, column: 10, scope: !18711)
!18719 = !DILocation(line: 37, column: 9, scope: !18711)
!18720 = !DILocation(line: 37, column: 2, scope: !18711)
!18721 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2657, file: !2657, line: 194, type: !18657, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18722)
!18722 = !{!18723, !18724, !18725, !18727}
!18723 = !DILocalVariable(name: "timeout", arg: 1, scope: !18721, file: !2657, line: 194, type: !18659)
!18724 = !DILocalVariable(name: "ticks", scope: !18721, file: !2657, line: 196, type: !102)
!18725 = !DILocalVariable(name: "__i", scope: !18726, file: !2657, line: 198, type: !18343)
!18726 = distinct !DILexicalBlock(scope: !18721, file: !2657, line: 198, column: 2)
!18727 = !DILocalVariable(name: "__key", scope: !18726, file: !2657, line: 198, type: !18343)
!18728 = !DILocation(line: 0, scope: !18721)
!18729 = !DILocation(line: 0, scope: !18726)
!18730 = !DILocation(line: 0, scope: !18365, inlinedAt: !18731)
!18731 = distinct !DILocation(line: 198, column: 2, scope: !18726)
!18732 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18733)
!18733 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18731)
!18734 = !DILocation(line: 0, scope: !18374, inlinedAt: !18733)
!18735 = !DILocation(line: 199, column: 11, scope: !18736)
!18736 = distinct !DILexicalBlock(scope: !18737, file: !2657, line: 198, column: 24)
!18737 = distinct !DILexicalBlock(scope: !18726, file: !2657, line: 198, column: 2)
!18738 = !DILocation(line: 199, column: 23, scope: !18736)
!18739 = !DILocation(line: 0, scope: !18433, inlinedAt: !18740)
!18740 = distinct !DILocation(line: 198, column: 2, scope: !18737)
!18741 = !DILocation(line: 0, scope: !18441, inlinedAt: !18742)
!18742 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18740)
!18743 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18742)
!18744 = !DILocation(line: 199, column: 21, scope: !18736)
!18745 = !DILocation(line: 202, column: 2, scope: !18721)
!18746 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2657, file: !2657, line: 205, type: !18449, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18747)
!18747 = !{!18748, !18749, !18751}
!18748 = !DILocalVariable(name: "ret", scope: !18746, file: !2657, line: 207, type: !334)
!18749 = !DILocalVariable(name: "__i", scope: !18750, file: !2657, line: 209, type: !18343)
!18750 = distinct !DILexicalBlock(scope: !18746, file: !2657, line: 209, column: 2)
!18751 = !DILocalVariable(name: "__key", scope: !18750, file: !2657, line: 209, type: !18343)
!18752 = !DILocation(line: 0, scope: !18746)
!18753 = !DILocation(line: 0, scope: !18750)
!18754 = !DILocation(line: 0, scope: !18365, inlinedAt: !18755)
!18755 = distinct !DILocation(line: 209, column: 2, scope: !18750)
!18756 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18757)
!18757 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18755)
!18758 = !DILocation(line: 0, scope: !18374, inlinedAt: !18757)
!18759 = !DILocation(line: 210, column: 9, scope: !18760)
!18760 = distinct !DILexicalBlock(scope: !18761, file: !2657, line: 209, column: 24)
!18761 = distinct !DILexicalBlock(scope: !18750, file: !2657, line: 209, column: 2)
!18762 = !DILocation(line: 0, scope: !18433, inlinedAt: !18763)
!18763 = distinct !DILocation(line: 209, column: 2, scope: !18761)
!18764 = !DILocation(line: 0, scope: !18441, inlinedAt: !18765)
!18765 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18763)
!18766 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18765)
!18767 = !DILocation(line: 212, column: 2, scope: !18746)
!18768 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2657, file: !2657, line: 215, type: !12241, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18769)
!18769 = !{!18770, !18771, !18772, !18774, !18775, !18778, !18779}
!18770 = !DILocalVariable(name: "ticks", arg: 1, scope: !18768, file: !2657, line: 215, type: !334)
!18771 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18768, file: !2657, line: 215, type: !136)
!18772 = !DILocalVariable(name: "__i", scope: !18773, file: !2657, line: 217, type: !18343)
!18773 = distinct !DILexicalBlock(scope: !18768, file: !2657, line: 217, column: 2)
!18774 = !DILocalVariable(name: "__key", scope: !18773, file: !2657, line: 217, type: !18343)
!18775 = !DILocalVariable(name: "next_to", scope: !18776, file: !2657, line: 218, type: !107)
!18776 = distinct !DILexicalBlock(scope: !18777, file: !2657, line: 217, column: 24)
!18777 = distinct !DILexicalBlock(scope: !18773, file: !2657, line: 217, column: 2)
!18778 = !DILocalVariable(name: "sooner", scope: !18776, file: !2657, line: 219, type: !136)
!18779 = !DILocalVariable(name: "imminent", scope: !18776, file: !2657, line: 221, type: !136)
!18780 = !DILocation(line: 0, scope: !18768)
!18781 = !DILocation(line: 0, scope: !18773)
!18782 = !DILocation(line: 0, scope: !18365, inlinedAt: !18783)
!18783 = distinct !DILocation(line: 217, column: 2, scope: !18773)
!18784 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18785)
!18785 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18783)
!18786 = !DILocation(line: 0, scope: !18374, inlinedAt: !18785)
!18787 = !DILocation(line: 218, column: 17, scope: !18776)
!18788 = !DILocation(line: 0, scope: !18776)
!18789 = !DILocation(line: 221, column: 27, scope: !18776)
!18790 = !DILocation(line: 233, column: 17, scope: !18791)
!18791 = distinct !DILexicalBlock(scope: !18776, file: !2657, line: 233, column: 7)
!18792 = !DILocation(line: 234, column: 26, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18791, file: !2657, line: 233, column: 56)
!18794 = !DILocation(line: 234, column: 4, scope: !18793)
!18795 = !DILocation(line: 235, column: 3, scope: !18793)
!18796 = !DILocation(line: 0, scope: !18433, inlinedAt: !18797)
!18797 = distinct !DILocation(line: 217, column: 2, scope: !18777)
!18798 = !DILocation(line: 0, scope: !18441, inlinedAt: !18799)
!18799 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18797)
!18800 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18799)
!18801 = !DILocation(line: 237, column: 1, scope: !18768)
!18802 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2657, file: !2657, line: 239, type: !18803, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18805)
!18803 = !DISubroutineType(types: !18804)
!18804 = !{null, !334}
!18805 = !{!18806, !18807, !18808, !18810}
!18806 = !DILocalVariable(name: "ticks", arg: 1, scope: !18802, file: !2657, line: 239, type: !334)
!18807 = !DILocalVariable(name: "key", scope: !18802, file: !2657, line: 245, type: !18343)
!18808 = !DILocalVariable(name: "t", scope: !18809, file: !2657, line: 262, type: !2630)
!18809 = distinct !DILexicalBlock(scope: !18802, file: !2657, line: 261, column: 67)
!18810 = !DILocalVariable(name: "dt", scope: !18809, file: !2657, line: 263, type: !107)
!18811 = !DILocation(line: 0, scope: !18802)
!18812 = !DILocation(line: 242, column: 2, scope: !18802)
!18813 = !DILocation(line: 0, scope: !18365, inlinedAt: !18814)
!18814 = distinct !DILocation(line: 245, column: 25, scope: !18802)
!18815 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18816)
!18816 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18814)
!18817 = !DILocation(line: 0, scope: !18374, inlinedAt: !18816)
!18818 = !DILocation(line: 261, column: 9, scope: !18802)
!18819 = !DILocation(line: 261, column: 17, scope: !18802)
!18820 = !DILocation(line: 261, column: 25, scope: !18802)
!18821 = !DILocation(line: 261, column: 37, scope: !18802)
!18822 = !DILocation(line: 261, column: 47, scope: !18802)
!18823 = !DILocation(line: 261, column: 44, scope: !18802)
!18824 = !DILocation(line: 261, column: 2, scope: !18802)
!18825 = !DILocation(line: 0, scope: !18809)
!18826 = !DILocation(line: 263, column: 12, scope: !18809)
!18827 = !DILocation(line: 265, column: 16, scope: !18809)
!18828 = !DILocation(line: 265, column: 13, scope: !18809)
!18829 = !DILocation(line: 266, column: 13, scope: !18809)
!18830 = !DILocation(line: 267, column: 3, scope: !18809)
!18831 = !DILocation(line: 0, scope: !18433, inlinedAt: !18832)
!18832 = distinct !DILocation(line: 269, column: 3, scope: !18809)
!18833 = !DILocation(line: 0, scope: !18441, inlinedAt: !18834)
!18834 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18832)
!18835 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18834)
!18836 = !DILocation(line: 270, column: 6, scope: !18809)
!18837 = !DILocation(line: 270, column: 3, scope: !18809)
!18838 = !DILocation(line: 0, scope: !18365, inlinedAt: !18839)
!18839 = distinct !DILocation(line: 271, column: 9, scope: !18809)
!18840 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18841)
!18841 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18839)
!18842 = !DILocation(line: 0, scope: !18374, inlinedAt: !18841)
!18843 = !DILocation(line: 272, column: 22, scope: !18809)
!18844 = distinct !{!18844, !18824, !18845}
!18845 = !DILocation(line: 273, column: 2, scope: !18802)
!18846 = !DILocation(line: 276, column: 19, scope: !18847)
!18847 = distinct !DILexicalBlock(scope: !18848, file: !2657, line: 275, column: 23)
!18848 = distinct !DILexicalBlock(scope: !18802, file: !2657, line: 275, column: 6)
!18849 = !DILocation(line: 277, column: 2, scope: !18847)
!18850 = !DILocation(line: 279, column: 15, scope: !18802)
!18851 = !DILocation(line: 279, column: 12, scope: !18802)
!18852 = !DILocation(line: 280, column: 21, scope: !18802)
!18853 = !DILocation(line: 282, column: 24, scope: !18802)
!18854 = !DILocation(line: 282, column: 2, scope: !18802)
!18855 = !DILocation(line: 0, scope: !18433, inlinedAt: !18856)
!18856 = distinct !DILocation(line: 284, column: 2, scope: !18802)
!18857 = !DILocation(line: 0, scope: !18441, inlinedAt: !18858)
!18858 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18856)
!18859 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18858)
!18860 = !DILocation(line: 285, column: 1, scope: !18802)
!18861 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2657, file: !2657, line: 287, type: !18862, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18864)
!18862 = !DISubroutineType(types: !18863)
!18863 = !{!104}
!18864 = !{!18865, !18866, !18868}
!18865 = !DILocalVariable(name: "t", scope: !18861, file: !2657, line: 289, type: !109)
!18866 = !DILocalVariable(name: "__i", scope: !18867, file: !2657, line: 291, type: !18343)
!18867 = distinct !DILexicalBlock(scope: !18861, file: !2657, line: 291, column: 2)
!18868 = !DILocalVariable(name: "__key", scope: !18867, file: !2657, line: 291, type: !18343)
!18869 = !DILocation(line: 0, scope: !18861)
!18870 = !DILocation(line: 0, scope: !18867)
!18871 = !DILocation(line: 0, scope: !18365, inlinedAt: !18872)
!18872 = distinct !DILocation(line: 291, column: 2, scope: !18867)
!18873 = !DILocation(line: 55, column: 2, scope: !18374, inlinedAt: !18874)
!18874 = distinct !DILocation(line: 145, column: 10, scope: !18365, inlinedAt: !18872)
!18875 = !DILocation(line: 0, scope: !18374, inlinedAt: !18874)
!18876 = !DILocation(line: 292, column: 7, scope: !18877)
!18877 = distinct !DILexicalBlock(scope: !18878, file: !2657, line: 291, column: 24)
!18878 = distinct !DILexicalBlock(scope: !18867, file: !2657, line: 291, column: 2)
!18879 = !DILocation(line: 292, column: 19, scope: !18877)
!18880 = !DILocation(line: 0, scope: !18433, inlinedAt: !18881)
!18881 = distinct !DILocation(line: 291, column: 2, scope: !18878)
!18882 = !DILocation(line: 0, scope: !18441, inlinedAt: !18883)
!18883 = distinct !DILocation(line: 215, column: 2, scope: !18433, inlinedAt: !18881)
!18884 = !DILocation(line: 95, column: 2, scope: !18441, inlinedAt: !18883)
!18885 = !DILocation(line: 292, column: 17, scope: !18877)
!18886 = !DILocation(line: 294, column: 2, scope: !18861)
!18887 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2657, file: !2657, line: 297, type: !7520, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !256)
!18888 = !DILocation(line: 300, column: 19, scope: !18887)
!18889 = !DILocation(line: 300, column: 9, scope: !18887)
!18890 = !DILocation(line: 300, column: 2, scope: !18887)
!18891 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2657, file: !2657, line: 306, type: !18862, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !256)
!18892 = !DILocation(line: 308, column: 9, scope: !18891)
!18893 = !DILocation(line: 308, column: 2, scope: !18891)
!18894 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2657, file: !2657, line: 319, type: !7530, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18895)
!18895 = !{!18896, !18897, !18898, !18899}
!18896 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18894, file: !2657, line: 319, type: !108)
!18897 = !DILocalVariable(name: "start_cycles", scope: !18894, file: !2657, line: 328, type: !108)
!18898 = !DILocalVariable(name: "cycles_to_wait", scope: !18894, file: !2657, line: 331, type: !108)
!18899 = !DILocalVariable(name: "current_cycles", scope: !18900, file: !2657, line: 338, type: !108)
!18900 = distinct !DILexicalBlock(scope: !18901, file: !2657, line: 337, column: 11)
!18901 = distinct !DILexicalBlock(scope: !18902, file: !2657, line: 337, column: 2)
!18902 = distinct !DILexicalBlock(scope: !18894, file: !2657, line: 337, column: 2)
!18903 = !DILocation(line: 0, scope: !18894)
!18904 = !DILocation(line: 322, column: 19, scope: !18905)
!18905 = distinct !DILexicalBlock(scope: !18894, file: !2657, line: 322, column: 6)
!18906 = !DILocation(line: 322, column: 6, scope: !18894)
!18907 = !DILocation(line: 328, column: 26, scope: !18894)
!18908 = !DILocation(line: 333, column: 43, scope: !18894)
!18909 = !DILocation(line: 337, column: 2, scope: !18894)
!18910 = !DILocation(line: 338, column: 29, scope: !18900)
!18911 = !DILocation(line: 0, scope: !18900)
!18912 = !DILocation(line: 341, column: 23, scope: !18913)
!18913 = distinct !DILexicalBlock(scope: !18900, file: !2657, line: 341, column: 7)
!18914 = !DILocation(line: 341, column: 39, scope: !18913)
!18915 = !DILocation(line: 349, column: 1, scope: !18894)
!18916 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !142, file: !142, line: 1675, type: !7520, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !256)
!18917 = !DILocation(line: 1677, column: 9, scope: !18916)
!18918 = !DILocation(line: 1677, column: 2, scope: !18916)
!18919 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18920, file: !18920, line: 24, type: !7520, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !256)
!18920 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18921 = !DILocation(line: 26, column: 9, scope: !18919)
!18922 = !DILocation(line: 26, column: 2, scope: !18919)
!18923 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2657, file: !2657, line: 364, type: !18924, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !18926)
!18924 = !DISubroutineType(types: !18925)
!18925 = !{!109, !18333}
!18926 = !{!18927, !18928}
!18927 = !DILocalVariable(name: "timeout", arg: 1, scope: !18923, file: !2657, line: 364, type: !18333)
!18928 = !DILocalVariable(name: "dt", scope: !18923, file: !2657, line: 366, type: !102)
!18929 = !DILocation(line: 0, scope: !18923)
!18930 = !DILocation(line: 368, column: 6, scope: !18923)
!18931 = !DILocation(line: 371, column: 10, scope: !18932)
!18932 = distinct !DILexicalBlock(scope: !18933, file: !2657, line: 370, column: 47)
!18933 = distinct !DILexicalBlock(scope: !18934, file: !2657, line: 370, column: 13)
!18934 = distinct !DILexicalBlock(scope: !18923, file: !2657, line: 368, column: 6)
!18935 = !DILocation(line: 371, column: 3, scope: !18932)
!18936 = !DILocation(line: 376, column: 58, scope: !18937)
!18937 = distinct !DILexicalBlock(scope: !18938, file: !2657, line: 376, column: 7)
!18938 = distinct !DILexicalBlock(scope: !18933, file: !2657, line: 372, column: 9)
!18939 = !DILocation(line: 376, column: 7, scope: !18938)
!18940 = !DILocation(line: 376, column: 43, scope: !18937)
!18941 = !DILocation(line: 377, column: 4, scope: !18942)
!18942 = distinct !DILexicalBlock(scope: !18937, file: !2657, line: 376, column: 64)
!18943 = !DILocation(line: 379, column: 10, scope: !18938)
!18944 = !DILocation(line: 379, column: 33, scope: !18938)
!18945 = !DILocation(line: 379, column: 31, scope: !18938)
!18946 = !DILocation(line: 379, column: 3, scope: !18938)
!18947 = !DILocation(line: 0, scope: !18934)
!18948 = !DILocation(line: 381, column: 1, scope: !18923)
!18949 = distinct !DISubprogram(name: "boot_banner", scope: !18950, file: !18950, line: 26, type: !337, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3385, retainedNodes: !256)
!18950 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18951 = !DILocation(line: 36, column: 1, scope: !18949)
!18952 = distinct !DISubprogram(name: "statics_init", scope: !2685, file: !2685, line: 21, type: !2691, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !18953)
!18953 = !{!18954, !18955}
!18954 = !DILocalVariable(name: "unused", arg: 1, scope: !18952, file: !2685, line: 21, type: !2693)
!18955 = !DILocalVariable(name: "h", scope: !18956, file: !2685, line: 24, type: !18957)
!18956 = distinct !DILexicalBlock(scope: !18952, file: !2685, line: 24, column: 2)
!18957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18958, size: 32)
!18958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !142, line: 5073, size: 160, elements: !18959)
!18959 = !{!18960, !18966, !18972}
!18960 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18958, file: !142, line: 5074, baseType: !18961, size: 96)
!18961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !245, line: 56, size: 96, elements: !18962)
!18962 = !{!18963, !18964, !18965}
!18963 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18961, file: !245, line: 57, baseType: !248, size: 32)
!18964 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18961, file: !245, line: 58, baseType: !106, size: 32, offset: 32)
!18965 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18961, file: !245, line: 59, baseType: !137, size: 32, offset: 64)
!18966 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18958, file: !142, line: 5075, baseType: !18967, size: 64, offset: 96)
!18967 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !146, line: 233, baseType: !18968)
!18968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !146, line: 231, size: 64, elements: !18969)
!18969 = !{!18970}
!18970 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18968, file: !146, line: 232, baseType: !18971, size: 64)
!18971 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !151, line: 48, baseType: !2671)
!18972 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18958, file: !142, line: 5076, baseType: !18973, offset: 160)
!18973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !255, line: 43, elements: !256)
!18974 = !DILocation(line: 0, scope: !18952)
!18975 = !DILocation(line: 0, scope: !18956)
!18976 = !DILocation(line: 24, column: 2, scope: !18956)
!18977 = !DILocation(line: 52, column: 2, scope: !18952)
!18978 = !DILocation(line: 49, column: 27, scope: !18979)
!18979 = distinct !DILexicalBlock(scope: !18980, file: !2685, line: 48, column: 3)
!18980 = distinct !DILexicalBlock(scope: !18981, file: !2685, line: 24, column: 36)
!18981 = distinct !DILexicalBlock(scope: !18956, file: !2685, line: 24, column: 2)
!18982 = !DILocation(line: 49, column: 45, scope: !18979)
!18983 = !DILocation(line: 49, column: 4, scope: !18979)
!18984 = !DILocation(line: 24, column: 2, scope: !18981)
!18985 = !DILocation(line: 24, column: 2, scope: !18986)
!18986 = distinct !DILexicalBlock(scope: !18981, file: !2685, line: 24, column: 2)
!18987 = distinct !{!18987, !18976, !18988}
!18988 = !DILocation(line: 51, column: 2, scope: !18956)
!18989 = distinct !DISubprogram(name: "k_heap_init", scope: !2685, file: !2685, line: 13, type: !18990, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !18992)
!18990 = !DISubroutineType(types: !18991)
!18991 = !{null, !18957, !106, !137}
!18992 = !{!18993, !18994, !18995}
!18993 = !DILocalVariable(name: "h", arg: 1, scope: !18989, file: !2685, line: 13, type: !18957)
!18994 = !DILocalVariable(name: "mem", arg: 2, scope: !18989, file: !2685, line: 13, type: !106)
!18995 = !DILocalVariable(name: "bytes", arg: 3, scope: !18989, file: !2685, line: 13, type: !137)
!18996 = !DILocation(line: 0, scope: !18989)
!18997 = !DILocation(line: 15, column: 19, scope: !18989)
!18998 = !DILocation(line: 15, column: 2, scope: !18989)
!18999 = !DILocation(line: 16, column: 20, scope: !18989)
!19000 = !DILocation(line: 16, column: 2, scope: !18989)
!19001 = !DILocation(line: 19, column: 1, scope: !18989)
!19002 = distinct !DISubprogram(name: "z_waitq_init", scope: !15209, file: !15209, line: 47, type: !19003, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19006)
!19003 = !DISubroutineType(types: !19004)
!19004 = !{null, !19005}
!19005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18967, size: 32)
!19006 = !{!19007}
!19007 = !DILocalVariable(name: "w", arg: 1, scope: !19002, file: !15209, line: 47, type: !19005)
!19008 = !DILocation(line: 0, scope: !19002)
!19009 = !DILocation(line: 49, column: 21, scope: !19002)
!19010 = !DILocation(line: 49, column: 2, scope: !19002)
!19011 = !DILocation(line: 50, column: 1, scope: !19002)
!19012 = distinct !DISubprogram(name: "sys_dlist_init", scope: !151, file: !151, line: 197, type: !19013, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19016)
!19013 = !DISubroutineType(types: !19014)
!19014 = !{null, !19015}
!19015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18971, size: 32)
!19016 = !{!19017}
!19017 = !DILocalVariable(name: "list", arg: 1, scope: !19012, file: !151, line: 197, type: !19015)
!19018 = !DILocation(line: 0, scope: !19012)
!19019 = !DILocation(line: 199, column: 8, scope: !19012)
!19020 = !DILocation(line: 199, column: 13, scope: !19012)
!19021 = !DILocation(line: 200, column: 8, scope: !19012)
!19022 = !DILocation(line: 200, column: 13, scope: !19012)
!19023 = !DILocation(line: 201, column: 1, scope: !19012)
!19024 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2685, file: !2685, line: 64, type: !19025, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19031)
!19025 = !DISubroutineType(types: !19026)
!19026 = !{!106, !18957, !137, !137, !19027}
!19027 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !103, line: 67, baseType: !19028)
!19028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !103, line: 65, size: 64, elements: !19029)
!19029 = !{!19030}
!19030 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19028, file: !103, line: 66, baseType: !102, size: 64)
!19031 = !{!19032, !19033, !19034, !19035, !19036, !19037, !19038, !19039, !19044}
!19032 = !DILocalVariable(name: "h", arg: 1, scope: !19024, file: !2685, line: 64, type: !18957)
!19033 = !DILocalVariable(name: "align", arg: 2, scope: !19024, file: !2685, line: 64, type: !137)
!19034 = !DILocalVariable(name: "bytes", arg: 3, scope: !19024, file: !2685, line: 64, type: !137)
!19035 = !DILocalVariable(name: "timeout", arg: 4, scope: !19024, file: !2685, line: 65, type: !19027)
!19036 = !DILocalVariable(name: "now", scope: !19024, file: !2685, line: 67, type: !104)
!19037 = !DILocalVariable(name: "end", scope: !19024, file: !2685, line: 67, type: !104)
!19038 = !DILocalVariable(name: "ret", scope: !19024, file: !2685, line: 68, type: !106)
!19039 = !DILocalVariable(name: "key", scope: !19024, file: !2685, line: 72, type: !19040)
!19040 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !255, line: 106, baseType: !19041)
!19041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !255, line: 32, size: 32, elements: !19042)
!19042 = !{!19043}
!19043 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19041, file: !255, line: 33, baseType: !107, size: 32)
!19044 = !DILocalVariable(name: "blocked_alloc", scope: !19024, file: !2685, line: 78, type: !136)
!19045 = !DILocation(line: 0, scope: !19024)
!19046 = !DILocation(line: 67, column: 21, scope: !19024)
!19047 = !DILocation(line: 70, column: 8, scope: !19024)
!19048 = !DILocation(line: 72, column: 41, scope: !19024)
!19049 = !DILocalVariable(name: "l", arg: 1, scope: !19050, file: !255, line: 136, type: !19053)
!19050 = distinct !DISubprogram(name: "k_spin_lock", scope: !255, file: !255, line: 136, type: !19051, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19054)
!19051 = !DISubroutineType(types: !19052)
!19052 = !{!19040, !19053}
!19053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18973, size: 32)
!19054 = !{!19049, !19055}
!19055 = !DILocalVariable(name: "k", scope: !19050, file: !255, line: 139, type: !19040)
!19056 = !DILocation(line: 0, scope: !19050, inlinedAt: !19057)
!19057 = distinct !DILocation(line: 72, column: 25, scope: !19024)
!19058 = !DILocation(line: 55, column: 2, scope: !19059, inlinedAt: !19063)
!19059 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7118, file: !7118, line: 42, type: !7119, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19060)
!19060 = !{!19061, !19062}
!19061 = !DILocalVariable(name: "key", scope: !19059, file: !7118, line: 44, type: !32)
!19062 = !DILocalVariable(name: "tmp", scope: !19059, file: !7118, line: 53, type: !32)
!19063 = distinct !DILocation(line: 145, column: 10, scope: !19050, inlinedAt: !19057)
!19064 = !{i64 2280248}
!19065 = !DILocation(line: 0, scope: !19059, inlinedAt: !19063)
!19066 = !DILocation(line: 81, column: 9, scope: !19067)
!19067 = distinct !DILexicalBlock(scope: !19024, file: !2685, line: 80, column: 22)
!19068 = !DILocation(line: 83, column: 9, scope: !19067)
!19069 = !DILocation(line: 85, column: 12, scope: !19070)
!19070 = distinct !DILexicalBlock(scope: !19067, file: !2685, line: 84, column: 7)
!19071 = !DILocation(line: 85, column: 21, scope: !19070)
!19072 = !DILocation(line: 85, column: 30, scope: !19070)
!19073 = !DILocation(line: 85, column: 37, scope: !19070)
!19074 = !DILocation(line: 84, column: 7, scope: !19067)
!19075 = !DILocation(line: 99, column: 10, scope: !19067)
!19076 = !DILocation(line: 0, scope: !19050, inlinedAt: !19077)
!19077 = distinct !DILocation(line: 101, column: 9, scope: !19067)
!19078 = !DILocation(line: 55, column: 2, scope: !19059, inlinedAt: !19079)
!19079 = distinct !DILocation(line: 145, column: 10, scope: !19050, inlinedAt: !19077)
!19080 = !DILocation(line: 0, scope: !19059, inlinedAt: !19079)
!19081 = distinct !{!19081, !19082, !19083}
!19082 = !DILocation(line: 80, column: 2, scope: !19024)
!19083 = !DILocation(line: 102, column: 2, scope: !19024)
!19084 = !DILocalVariable(name: "key", arg: 2, scope: !19085, file: !255, line: 190, type: !19040)
!19085 = distinct !DISubprogram(name: "k_spin_unlock", scope: !255, file: !255, line: 189, type: !19086, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19088)
!19086 = !DISubroutineType(types: !19087)
!19087 = !{null, !19053, !19040}
!19088 = !{!19089, !19084}
!19089 = !DILocalVariable(name: "l", arg: 1, scope: !19085, file: !255, line: 189, type: !19053)
!19090 = !DILocation(line: 0, scope: !19085, inlinedAt: !19091)
!19091 = distinct !DILocation(line: 106, column: 2, scope: !19024)
!19092 = !DILocalVariable(name: "key", arg: 1, scope: !19093, file: !7118, line: 84, type: !32)
!19093 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7118, file: !7118, line: 84, type: !7129, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19094)
!19094 = !{!19092}
!19095 = !DILocation(line: 0, scope: !19093, inlinedAt: !19096)
!19096 = distinct !DILocation(line: 215, column: 2, scope: !19085, inlinedAt: !19091)
!19097 = !DILocation(line: 95, column: 2, scope: !19093, inlinedAt: !19096)
!19098 = !{i64 2281065}
!19099 = !DILocation(line: 107, column: 2, scope: !19024)
!19100 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2685, file: !2685, line: 110, type: !19101, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19103)
!19101 = !DISubroutineType(types: !19102)
!19102 = !{!106, !18957, !137, !19027}
!19103 = !{!19104, !19105, !19106, !19107}
!19104 = !DILocalVariable(name: "h", arg: 1, scope: !19100, file: !2685, line: 110, type: !18957)
!19105 = !DILocalVariable(name: "bytes", arg: 2, scope: !19100, file: !2685, line: 110, type: !137)
!19106 = !DILocalVariable(name: "timeout", arg: 3, scope: !19100, file: !2685, line: 110, type: !19027)
!19107 = !DILocalVariable(name: "ret", scope: !19100, file: !2685, line: 114, type: !106)
!19108 = !DILocation(line: 0, scope: !19100)
!19109 = !DILocation(line: 114, column: 14, scope: !19100)
!19110 = !DILocation(line: 118, column: 2, scope: !19100)
!19111 = distinct !DISubprogram(name: "k_heap_free", scope: !2685, file: !2685, line: 121, type: !19112, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2666, retainedNodes: !19114)
!19112 = !DISubroutineType(types: !19113)
!19113 = !{null, !18957, !106}
!19114 = !{!19115, !19116, !19117}
!19115 = !DILocalVariable(name: "h", arg: 1, scope: !19111, file: !2685, line: 121, type: !18957)
!19116 = !DILocalVariable(name: "mem", arg: 2, scope: !19111, file: !2685, line: 121, type: !106)
!19117 = !DILocalVariable(name: "key", scope: !19111, file: !2685, line: 123, type: !19040)
!19118 = !DILocation(line: 0, scope: !19111)
!19119 = !DILocation(line: 0, scope: !19050, inlinedAt: !19120)
!19120 = distinct !DILocation(line: 123, column: 25, scope: !19111)
!19121 = !DILocation(line: 55, column: 2, scope: !19059, inlinedAt: !19122)
!19122 = distinct !DILocation(line: 145, column: 10, scope: !19050, inlinedAt: !19120)
!19123 = !DILocation(line: 0, scope: !19059, inlinedAt: !19122)
!19124 = !DILocation(line: 125, column: 20, scope: !19111)
!19125 = !DILocation(line: 125, column: 2, scope: !19111)
!19126 = !DILocation(line: 128, column: 60, scope: !19127)
!19127 = distinct !DILexicalBlock(scope: !19111, file: !2685, line: 128, column: 6)
!19128 = !DILocation(line: 128, column: 43, scope: !19127)
!19129 = !DILocation(line: 128, column: 68, scope: !19127)
!19130 = !DILocation(line: 128, column: 6, scope: !19111)
!19131 = !DILocation(line: 123, column: 41, scope: !19111)
!19132 = !DILocation(line: 129, column: 3, scope: !19133)
!19133 = distinct !DILexicalBlock(scope: !19127, file: !2685, line: 128, column: 74)
!19134 = !DILocation(line: 130, column: 2, scope: !19133)
!19135 = !DILocation(line: 0, scope: !19085, inlinedAt: !19136)
!19136 = distinct !DILocation(line: 131, column: 3, scope: !19137)
!19137 = distinct !DILexicalBlock(scope: !19127, file: !2685, line: 130, column: 9)
!19138 = !DILocation(line: 0, scope: !19093, inlinedAt: !19139)
!19139 = distinct !DILocation(line: 215, column: 2, scope: !19085, inlinedAt: !19136)
!19140 = !DILocation(line: 95, column: 2, scope: !19093, inlinedAt: !19139)
!19141 = !DILocation(line: 133, column: 1, scope: !19111)
