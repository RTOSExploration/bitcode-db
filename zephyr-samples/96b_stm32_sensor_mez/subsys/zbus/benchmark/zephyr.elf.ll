; ModuleID = 'build/96b_stm32_sensor_mez/benchmark/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.external_data_msg = type { i8*, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.bm_msg = type { [256 x i8] }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231457 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231437 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231427 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231527 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231517 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231507 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231497 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231487 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231477 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231467 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233640 to i8*), void (i8*)* inttoptr (i32 134231447 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [61 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_bm_channel to i8*), i8* bitcast (%struct.zbus_channel* @bm_channel to i8*), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s1, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s2, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s3, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s4, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s5, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s6, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s7, i32 0, i32 0), i8* getelementptr inbounds (%struct.zbus_observer, %struct.zbus_observer* @s8, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_mutex_bm_channel = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_bm_channel, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_bm_channel", align 4, !dbg !25
@_zbus_message_bm_channel = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !350
@_zbus_observers_bm_channel = internal constant [9 x %struct.zbus_observer*] [%struct.zbus_observer* @s1, %struct.zbus_observer* @s2, %struct.zbus_observer* @s3, %struct.zbus_observer* @s4, %struct.zbus_observer* @s5, %struct.zbus_observer* @s6, %struct.zbus_observer* @s7, %struct.zbus_observer* @s8, %struct.zbus_observer* null], align 4, !dbg !357
@bm_channel = dso_local constant %struct.zbus_channel { i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_bm_channel to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_bm_channel, %struct.zbus_observer** getelementptr inbounds ([9 x %struct.zbus_observer*], [9 x %struct.zbus_observer*]* @_zbus_observers_bm_channel, i32 0, i32 0) }, section "._zbus_channel.static.bm_channel", align 4, !dbg !112
@s1 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s1", align 4, !dbg !290
@s2 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s2", align 4, !dbg !292
@s3 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s3", align 4, !dbg !294
@s4 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s4", align 4, !dbg !296
@s5 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s5", align 4, !dbg !298
@s6 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s6", align 4, !dbg !300
@s7 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s7", align 4, !dbg !302
@s8 = dso_local global %struct.zbus_observer { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel*)* @s_cb }, section "._zbus_observer.static.s8", align 4, !dbg !304
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !348
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/benchmark.c\22.0", align 64, !dbg !343
@.str = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !306
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !339
@count = internal unnamed_addr global i64 0, align 8, !dbg !362
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Benchmark 1 to %d: Dynamic memory, %sSYNC transmission and message size %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"%c: Something wrong. Duration is zero!\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%c: Bytes sent = %lld, received = %llu\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"%c: Average data rate: %llu.%lluB/s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"%c: Duration: %ums\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"\0A@%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !364
@.str.1.10 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !388
@.str.15 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !398
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !448
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.45 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.41 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.42 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.44 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.38 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.39 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.36 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.37 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.35 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.34 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !477
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !608
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !483
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !617
@.str.57 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !653
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.70, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !663
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !668
@.str.69 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.70 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !688
@.str.1.73 = private unnamed_addr constant [60 x i8] c"%c: Observer %s at %p could not be notified. Error code %d\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !700
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !901
@.str.81 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !863
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !846
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !819
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !835
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !865
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !878
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !880
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !882
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !884
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !886
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !888
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !890
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !892
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !896
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !906
@.str.83 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !939
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1037
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1026
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1078
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.92 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1144
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1420
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1390
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1376
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1323
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !924
@.str.1.93 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1422
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1394
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1392
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1337
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !922
@.str.2.94 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1435
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1398
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1396
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1343
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !920
@.str.3.95 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1437
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1402
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1400
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1350
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !918
@.str.4.96 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1439
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1406
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1356
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !916
@.str.5.97 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1441
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1410
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1408
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1362
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !914
@.str.6.98 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1443
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1414
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1412
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1368
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !912
@.str.7.99 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1445
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1416
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1374
@.str.103 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1447
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.1.104 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1627
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1682
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1619
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1684
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.104, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1592
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1594
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.2.107 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1690
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1621
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1700
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.107, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1603
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1605
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !930
@.str.3.108 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1702
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1623
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1712
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.108, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1609
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1611
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.4.111 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1714
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1625
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1724
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.111, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1615
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1617
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1671
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1674
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1676
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1679
@.str.5.106 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.114 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.7.116 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1010
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1692
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1694
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1696
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1698
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1704
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1706
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1708
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1710
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1716
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1718
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1720
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1722
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.9 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1731
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1840
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1842
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1838
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1809
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1844
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1321
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1335
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1341
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1348
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1354
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1360
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1366
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.99, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1372
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1934
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1978
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1981
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1988
@.str.152 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.156 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.157 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.158 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.162 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.163 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.164 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.165 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.166 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.161 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.160 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.162, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.163, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.164, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.165, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.166, i32 0, i32 0)], align 4
@.str.168 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1995
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2215
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2204
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2210
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2222
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2227
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.177 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.184, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.185, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.186, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.187, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.181, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.188, i32 0, i32 0)], align 4, !dbg !2257
@.str.182 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.183 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.184 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.185 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.186 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.187 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.181 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.188 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2369
@.str.8.180 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2382
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2490
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2598
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2601
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2603
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2220
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2212
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2605
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2641
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2639
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2644
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2649
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2082
@.str.289 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2684
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3417 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3419, !srcloc !3420
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3421, !srcloc !3422
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3423, !srcloc !3424
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3425, !srcloc !3426
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3427, !srcloc !3428
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3429, !srcloc !3430
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3431, !srcloc !3432
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3433, !srcloc !3434
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3435, !srcloc !3436
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3437, !srcloc !3438
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3439, !srcloc !3440
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3441, !srcloc !3442
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3443, !srcloc !3444
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3445, !srcloc !3446
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3447, !srcloc !3448
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3449, !srcloc !3450
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3451, !srcloc !3452
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3453, !srcloc !3454
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3455, !srcloc !3456
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3457, !srcloc !3458
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3459, !srcloc !3460
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3461, !srcloc !3462
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3463, !srcloc !3464
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3465, !srcloc !3466
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3467, !srcloc !3468
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3469, !srcloc !3470
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3471, !srcloc !3472
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3473, !srcloc !3476
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3477, !srcloc !3478
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3479, !srcloc !3480
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3481, !srcloc !3482
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3483, !srcloc !3484
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3485, !srcloc !3486
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3487, !srcloc !3488
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3489, !srcloc !3490
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3491, !srcloc !3492
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3493, !srcloc !3494
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3495, !srcloc !3496
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3497, !srcloc !3498
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3499, !srcloc !3500
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3501, !srcloc !3502
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3503, !srcloc !3504
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3505, !srcloc !3506
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3507, !srcloc !3508
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3509, !srcloc !3510
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3511, !srcloc !3512
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3513, !srcloc !3514
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3515, !srcloc !3516
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3517, !srcloc !3518
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3519, !srcloc !3520
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3521, !srcloc !3522
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3523, !srcloc !3524
  ret void, !dbg !3525
}

; Function Attrs: noinline nounwind optsize
define internal void @s_cb(%struct.zbus_channel* nocapture noundef readonly %0) #1 !dbg !3528 {
  %2 = alloca [256 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3530, metadata !DIExpression()), !dbg !3541
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3542
  call void @llvm.dbg.declare(metadata %struct.bm_msg* undef, metadata !3531, metadata !DIExpression()), !dbg !3543
  %4 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* noundef %0) #26, !dbg !3544
  call void @llvm.dbg.value(metadata i8* %4, metadata !3538, metadata !DIExpression()), !dbg !3541
  %5 = bitcast i8* %4 to i8**, !dbg !3545
  %6 = load i8*, i8** %5, align 4, !dbg !3545
  %7 = call i8* @memcpy(i8* noundef nonnull %3, i8* noundef %6, i32 noundef 256) #27, !dbg !3546
  %8 = load i64, i64* @count, align 8, !dbg !3547
  %9 = add i64 %8, 256, !dbg !3547
  store i64 %9, i64* @count, align 8, !dbg !3547
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #25, !dbg !3548
  ret void, !dbg !3548
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel* nocapture noundef readonly %0) unnamed_addr #4 !dbg !3549 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !3553, metadata !DIExpression()), !dbg !3554
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !3555
  %3 = load i8*, i8** %2, align 4, !dbg !3555
  ret i8* %3, !dbg !3556
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3557 {
  %1 = alloca %struct.bm_msg, align 1
  %2 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3570
  %3 = zext i8 %2 to i32, !dbg !3570
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %3, i32 noundef 8, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i32 noundef 256) #27, !dbg !3570
  %4 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 0, !dbg !3575
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3575
  call void @llvm.dbg.declare(metadata %struct.bm_msg* %1, metadata !3559, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i64 255, metadata !3562, metadata !DIExpression()), !dbg !3577
  br label %10, !dbg !3578

5:                                                ; preds = %10
  %6 = tail call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3579
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3560, metadata !DIExpression()), !dbg !3580
  %7 = tail call i8* @k_malloc(i32 noundef 256) #27, !dbg !3581
  store i8* %7, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3582
  store i32 256, i32* getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 1), align 4, !dbg !3583
  %8 = tail call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3584
  %9 = tail call fastcc i32 @k_uptime_get_32() #26, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %9, metadata !3564, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.value(metadata i64 32768, metadata !3565, metadata !DIExpression()), !dbg !3586
  br label %21, !dbg !3587

10:                                               ; preds = %0, %10
  %11 = phi i64 [ 255, %0 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata i64 %11, metadata !3562, metadata !DIExpression()), !dbg !3577
  %12 = trunc i64 %11 to i8, !dbg !3588
  %13 = trunc i64 %11 to i32, !dbg !3591
  %14 = getelementptr inbounds %struct.bm_msg, %struct.bm_msg* %1, i32 0, i32 0, i32 %13, !dbg !3591
  store i8 %12, i8* %14, align 1, !dbg !3592
  %15 = add nsw i64 %11, -1, !dbg !3593
  call void @llvm.dbg.value(metadata i64 %15, metadata !3562, metadata !DIExpression()), !dbg !3577
  %16 = icmp eq i64 %15, 0, !dbg !3594
  br i1 %16, label %5, label %10, !dbg !3578, !llvm.loop !3595

17:                                               ; preds = %21
  %18 = call fastcc i32 @k_uptime_get_32() #26, !dbg !3597
  %19 = sub i32 %18, %9, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %19, metadata !3567, metadata !DIExpression()), !dbg !3580
  %20 = icmp eq i32 %19, 0, !dbg !3599
  br i1 %20, label %32, label %35, !dbg !3601

21:                                               ; preds = %5, %21
  %22 = phi i64 [ 32768, %5 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3565, metadata !DIExpression()), !dbg !3586
  %23 = call i32 @zbus_chan_claim(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] zeroinitializer) #27, !dbg !3602
  call void @llvm.dbg.value(metadata %struct.external_data_msg* @_zbus_message_bm_channel, metadata !3560, metadata !DIExpression()), !dbg !3580
  %24 = load i8*, i8** getelementptr inbounds (%struct.external_data_msg, %struct.external_data_msg* @_zbus_message_bm_channel, i32 0, i32 0), align 4, !dbg !3605
  %25 = call i8* @memcpy(i8* noundef %24, i8* noundef nonnull %4, i32 noundef 256) #27, !dbg !3606
  %26 = call i32 @zbus_chan_finish(%struct.zbus_channel* noundef nonnull @bm_channel) #27, !dbg !3607
  %27 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #26, !dbg !3608
  %28 = insertvalue [1 x i64] poison, i64 %27, 0, !dbg !3609
  %29 = call i32 @zbus_chan_notify(%struct.zbus_channel* noundef nonnull @bm_channel, [1 x i64] %28) #27, !dbg !3609
  %30 = add nsw i64 %22, -256, !dbg !3610
  call void @llvm.dbg.value(metadata i64 %30, metadata !3565, metadata !DIExpression()), !dbg !3586
  %31 = icmp eq i64 %30, 0, !dbg !3611
  br i1 %31, label %17, label %21, !dbg !3587, !llvm.loop !3612

32:                                               ; preds = %17
  %33 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3614
  %34 = zext i8 %33 to i32, !dbg !3614
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0), i32 noundef %34) #27, !dbg !3614
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 3, i32 2) #25, !dbg !3620, !srcloc !3622
  br label %35, !dbg !3623

35:                                               ; preds = %32, %17
  %36 = zext i32 %19 to i64, !dbg !3624
  %37 = udiv i32 262144000, %19, !dbg !3625
  %38 = zext i32 %37 to i64, !dbg !3625
  call void @llvm.dbg.value(metadata i64 %38, metadata !3568, metadata !DIExpression()), !dbg !3580
  %39 = udiv i64 26214400000, %36, !dbg !3626
  %40 = urem i64 %39, 100, !dbg !3627
  call void @llvm.dbg.value(metadata i64 %40, metadata !3569, metadata !DIExpression()), !dbg !3580
  %41 = load i64, i64* @count, align 8, !dbg !3628
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), i32 noundef %3, i64 noundef 262144, i64 noundef %41) #27, !dbg !3628
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i32 0, i32 0), i32 noundef %3, i64 noundef %38, i64 noundef %40) #27, !dbg !3633
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i32 noundef %3, i32 noundef %19) #27, !dbg !3638
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 noundef %19) #27, !dbg !3643
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %4) #25, !dbg !3644
  ret void, !dbg !3644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3650, metadata !DIExpression()), !dbg !3651
  %2 = add i32 %0, -1, !dbg !3652
  %3 = icmp ult i32 %2, 3, !dbg !3652
  %4 = trunc i32 %2 to i24, !dbg !3652
  %5 = shl i24 %4, 3, !dbg !3652
  %6 = lshr i24 4806469, %5, !dbg !3652
  %7 = trunc i24 %6 to i8, !dbg !3652
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3652
  ret i8 %8, !dbg !3653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3654 {
  %1 = tail call fastcc i64 @k_uptime_get() #26, !dbg !3657
  %2 = trunc i64 %1 to i32, !dbg !3658
  ret i32 %2, !dbg !3659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #5 !dbg !3660 {
  call void @llvm.dbg.value(metadata i64 200, metadata !3665, metadata !DIExpression()), !dbg !3666
  ret i64 2000, !dbg !3667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3668 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #26, !dbg !3671
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #26, !dbg !3672
  ret i64 %2, !dbg !3673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3674 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3676, !srcloc !3678
  %1 = tail call i64 @z_impl_k_uptime_ticks() #27, !dbg !3679
  ret i64 %1, !dbg !3680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !3681 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3683, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.value(metadata i64 %0, metadata !3685, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i32 10000, metadata !3690, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i32 1000, metadata !3691, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i8 1, metadata !3692, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i8 0, metadata !3693, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i1 false, metadata !3694, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3702
  call void @llvm.dbg.value(metadata i8 0, metadata !3695, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i1 false, metadata !3696, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3702
  call void @llvm.dbg.value(metadata i1 true, metadata !3697, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3702
  call void @llvm.dbg.value(metadata i64 0, metadata !3698, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata i64 0, metadata !3698, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3685, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3702
  call void @llvm.dbg.value(metadata i64 %0, metadata !3685, metadata !DIExpression()), !dbg !3702
  %2 = udiv i64 %0, 10, !dbg !3704
  ret i64 %2, !dbg !3709
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3710 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %0, metadata !3721, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %1, metadata !3722, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %2, metadata !3723, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %3, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %0, metadata !3726, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %0, metadata !3727, metadata !DIExpression()), !dbg !3788
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3789
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3789
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3730, metadata !DIExpression()), !dbg !3790
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3791
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3791
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3732, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata i32 0, metadata !3733, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3734, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3735, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 -1, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 0, metadata !3739, metadata !DIExpression()), !dbg !3788
  %12 = and i32 %2, 4, !dbg !3793
  %13 = icmp eq i32 %12, 0, !dbg !3794
  call void @llvm.dbg.value(metadata i1 %13, metadata !3740, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3788
  %14 = lshr i32 %2, 3, !dbg !3795
  %15 = and i32 %14, 7, !dbg !3795
  %16 = add nuw nsw i32 %15, 1, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %16, metadata !3741, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 0, metadata !3742, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %0, metadata !3743, metadata !DIExpression()), !dbg !3788
  %17 = ptrtoint i8* %0 to i32, !dbg !3797
  %18 = and i32 %17, 3, !dbg !3799
  %19 = icmp eq i32 %18, 0, !dbg !3799
  br i1 %19, label %20, label %316, !dbg !3800

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3801
  call void @llvm.dbg.value(metadata i8* %21, metadata !3727, metadata !DIExpression()), !dbg !3788
  %22 = icmp eq i8* %0, null, !dbg !3802
  %23 = and i32 %1, 7, !dbg !3804
  %24 = sub nuw nsw i32 8, %23, !dbg !3804
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3804
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3804
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %27, metadata !3722, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %26, metadata !3727, metadata !DIExpression()), !dbg !3788
  br i1 %22, label %33, label %28, !dbg !3805

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3807
  %30 = sub i32 4, %17, !dbg !3807
  %31 = add i32 %30, %29, !dbg !3808
  %32 = icmp ugt i32 %31, %27, !dbg !3809
  br i1 %32, label %316, label %33, !dbg !3810

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3811
  call void @llvm.dbg.value(metadata i8* %34, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %3, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 4, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 4, metadata !3728, metadata !DIExpression()), !dbg !3788
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3812

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %42, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %43, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %44, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %45, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %72, metadata !3736, metadata !DIExpression()), !dbg !3788
  br i1 %46, label %73, label %47, !dbg !3813

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3814
  %49 = zext i1 %48 to i32, !dbg !3818
  %50 = add nsw i32 %72, %49, !dbg !3818
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3818
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %52, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %51, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %50, metadata !3736, metadata !DIExpression()), !dbg !3788
  br label %53, !dbg !3819

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %40, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %58, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %57, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %56, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %54, metadata !3736, metadata !DIExpression()), !dbg !3788
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %60, metadata !3724, metadata !DIExpression()), !dbg !3788
  %61 = load i8, i8* %60, align 1, !dbg !3822
  %62 = icmp eq i8 %61, 0, !dbg !3823
  br i1 %62, label %223, label %63, !dbg !3824, !llvm.loop !3825

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !3813

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3828

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3739, metadata !DIExpression()), !dbg !3788
  %75 = add nsw i32 %72, -1, !dbg !3829
  call void @llvm.dbg.value(metadata i32 %75, metadata !3736, metadata !DIExpression()), !dbg !3788
  br label %53, !dbg !3830

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3831

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 4, metadata !3728, metadata !DIExpression()), !dbg !3788
  br label %53, !dbg !3832

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 4, metadata !3728, metadata !DIExpression()), !dbg !3788
  br label %53, !dbg !3833

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3834
  %81 = icmp eq i8 %80, 108, !dbg !3836
  br i1 %81, label %82, label %109, !dbg !3837

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3838
  %84 = load i8, i8* %83, align 1, !dbg !3838
  %85 = icmp eq i8 %84, 108, !dbg !3841
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3842
  %89 = add i32 %88, 7, !dbg !3842
  %90 = and i32 %89, -8, !dbg !3842
  %91 = inttoptr i32 %90 to i8*, !dbg !3842
  %92 = inttoptr i32 %90 to double*, !dbg !3842
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3842
  %94 = load double, double* %92, align 8, !dbg !3842
  call void @llvm.dbg.value(metadata i8* %93, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 8, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 8, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata double %94, metadata !3756, metadata !DIExpression()), !dbg !3844
  %95 = ptrtoint i8* %43 to i32, !dbg !3845
  %96 = add i32 %95, 7, !dbg !3845
  %97 = and i32 %96, -8, !dbg !3845
  %98 = inttoptr i32 %97 to i8*, !dbg !3846
  call void @llvm.dbg.value(metadata i8* %98, metadata !3727, metadata !DIExpression()), !dbg !3788
  br i1 %22, label %104, label %99, !dbg !3847

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3848
  %101 = icmp ugt i32 %100, %194, !dbg !3852
  br i1 %101, label %316, label %102, !dbg !3853

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3854
  store double %94, double* %103, align 8, !dbg !3854
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3857
  call void @llvm.dbg.value(metadata i8* %105, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3788
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3739, metadata !DIExpression()), !dbg !3788
  br label %53, !dbg !3858

107:                                              ; preds = %73, %73
  br label %109, !dbg !3859

108:                                              ; preds = %73
  br label %109, !dbg !3859

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3788
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3788
  call void @llvm.dbg.value(metadata i32 %113, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %112, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3742, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3788
  %114 = ptrtoint i8* %43 to i32, !dbg !3859
  %115 = add i32 %114, -1, !dbg !3859
  %116 = add i32 %115, %112, !dbg !3859
  %117 = sub i32 0, %112, !dbg !3859
  %118 = and i32 %116, %117, !dbg !3859
  %119 = inttoptr i32 %118 to i8*, !dbg !3860
  call void @llvm.dbg.value(metadata i8* %119, metadata !3727, metadata !DIExpression()), !dbg !3788
  br i1 %22, label %124, label %120, !dbg !3861

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3863
  %122 = add i32 %121, %118, !dbg !3864
  %123 = icmp ugt i32 %122, %194, !dbg !3865
  br i1 %123, label %316, label %124, !dbg !3866

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !3867

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3860
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3868
  call void @llvm.dbg.value(metadata i8* %127, metadata !3725, metadata !DIExpression()), !dbg !3788
  %128 = bitcast i8* %41 to i8**, !dbg !3868
  %129 = load i8*, i8** %128, align 4, !dbg !3868
  call void @llvm.dbg.value(metadata i8* %129, metadata !3738, metadata !DIExpression()), !dbg !3788
  br label %130, !dbg !3869

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !3870
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3871
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3788
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !3872
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3788
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3873
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3788
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3788
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3788
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3788
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !3874
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %142, metadata !3722, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %141, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %140, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %139, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %138, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %137, metadata !3733, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %136, metadata !3741, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %135, metadata !3734, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %133, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %132, metadata !3736, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %131, metadata !3735, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.label(metadata !3787), !dbg !3876
  br i1 %22, label %146, label %144, !dbg !3877

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3878
  store i8* %133, i8** %145, align 4, !dbg !3881
  br label %146, !dbg !3882

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %147, metadata !3741, metadata !DIExpression()), !dbg !3788
  %148 = icmp sgt i32 %136, 0, !dbg !3884
  br i1 %148, label %152, label %149, !dbg !3885

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3886
  %151 = zext i1 %150 to i32, !dbg !3886
  br label %152, !dbg !3885

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3885
  %154 = icmp eq i32 %153, 0, !dbg !3885
  call void @llvm.dbg.value(metadata i1 %154, metadata !3765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3887
  call void @llvm.dbg.value(metadata i1 %36, metadata !3768, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3887
  %155 = or i1 %36, %154, !dbg !3888
  br i1 %155, label %156, label %190, !dbg !3888

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3889
  %158 = sub i32 %157, %17, !dbg !3889
  %159 = lshr i32 %158, 2, !dbg !3890
  call void @llvm.dbg.value(metadata i32 %159, metadata !3769, metadata !DIExpression()), !dbg !3891
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3892
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !3892
  br i1 %163, label %316, label %164, !dbg !3892

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !3894

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !3895
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3898
  store i8 %166, i8* %167, align 1, !dbg !3899
  %168 = trunc i32 %132 to i8, !dbg !3900
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3901
  store i8 %168, i8* %169, align 1, !dbg !3902
  br i1 %154, label %173, label %170, !dbg !3903

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !3904
  store i8 %171, i8* %167, align 1, !dbg !3904
  %172 = add i32 %131, 1, !dbg !3907
  call void @llvm.dbg.value(metadata i32 %172, metadata !3735, metadata !DIExpression()), !dbg !3788
  br label %185, !dbg !3908

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %174, metadata !3734, metadata !DIExpression()), !dbg !3788
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !3911

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !3912
  call void @llvm.dbg.value(metadata i32 %177, metadata !3722, metadata !DIExpression()), !dbg !3788
  br label %185, !dbg !3915

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !3916

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !3917
  call void @llvm.dbg.value(metadata i32 %180, metadata !3722, metadata !DIExpression()), !dbg !3788
  br label %185, !dbg !3920

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !3921
  %183 = add i32 %142, 2, !dbg !3923
  %184 = add i32 %183, %182, !dbg !3924
  call void @llvm.dbg.value(metadata i32 %184, metadata !3722, metadata !DIExpression()), !dbg !3788
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !3788
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !3788
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !3788
  call void @llvm.dbg.value(metadata i32 %188, metadata !3722, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %187, metadata !3734, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %186, metadata !3735, metadata !DIExpression()), !dbg !3788
  %189 = add nuw nsw i32 %137, 1, !dbg !3925
  call void @llvm.dbg.value(metadata i32 undef, metadata !3722, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 undef, metadata !3733, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 undef, metadata !3734, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 undef, metadata !3735, metadata !DIExpression()), !dbg !3788
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !3870
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !3872
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !3873
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !3874
  call void @llvm.dbg.value(metadata i32 %194, metadata !3722, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %193, metadata !3733, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %192, metadata !3734, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %191, metadata !3735, metadata !DIExpression()), !dbg !3788
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3926
  call void @llvm.dbg.value(metadata i8* %195, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %143, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %141, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %139, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %138, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3742, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %132, metadata !3736, metadata !DIExpression()), !dbg !3788
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %196, metadata !3724, metadata !DIExpression()), !dbg !3788
  %197 = load i8, i8* %196, align 1, !dbg !3822
  %198 = icmp eq i8 %197, 0, !dbg !3823
  br i1 %198, label %223, label %63, !dbg !3824

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !3927

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3928
  call void @llvm.dbg.value(metadata i8* %201, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 undef, metadata !3772, metadata !DIExpression()), !dbg !3929
  br i1 %22, label %216, label %202, !dbg !3930

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !3928
  %204 = load i32, i32* %203, align 4, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %204, metadata !3772, metadata !DIExpression()), !dbg !3929
  %205 = inttoptr i32 %118 to i32*, !dbg !3931
  store i32 %204, i32* %205, align 4, !dbg !3934
  br label %216, !dbg !3935

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !3936
  %208 = add i32 %207, 7, !dbg !3936
  %209 = and i32 %208, -8, !dbg !3936
  %210 = inttoptr i32 %209 to i8*, !dbg !3936
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %211, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i64 undef, metadata !3778, metadata !DIExpression()), !dbg !3937
  br i1 %22, label %216, label %212, !dbg !3938

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !3936
  %214 = load i64, i64* %213, align 8, !dbg !3936
  call void @llvm.dbg.value(metadata i64 %214, metadata !3778, metadata !DIExpression()), !dbg !3937
  %215 = inttoptr i32 %118 to i64*, !dbg !3939
  store i64 %214, i64* %215, align 8, !dbg !3944
  br label %216, !dbg !3945

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !3946
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !3946
  call void @llvm.dbg.value(metadata i8* %218, metadata !3725, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %40, metadata !3724, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %219, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %113, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %112, metadata !3729, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3742, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8 poison, metadata !3739, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %72, metadata !3736, metadata !DIExpression()), !dbg !3788
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %220, metadata !3724, metadata !DIExpression()), !dbg !3788
  %221 = load i8, i8* %220, align 1, !dbg !3822
  %222 = icmp eq i8 %221, 0, !dbg !3823
  br i1 %222, label %223, label %38, !dbg !3824

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !3947
  %225 = ptrtoint i8* %224 to i32, !dbg !3948
  %226 = sub i32 %225, %17, !dbg !3948
  %227 = lshr i32 %226, 2, !dbg !3950
  %228 = icmp ugt i32 %226, 1023, !dbg !3951
  br i1 %228, label %316, label %229, !dbg !3952

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !3953

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !3954
  %232 = add i32 %231, %226, !dbg !3957
  br label %316, !dbg !3958

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !3959
  store i8 %234, i8* %0, align 1, !dbg !3960
  %235 = trunc i32 %192 to i8, !dbg !3961
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3963
  store i8 %236, i8* %238, align 1, !dbg !3965
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3966
  store i8 %237, i8* %239, align 1, !dbg !3967
  %240 = trunc i32 %191 to i8, !dbg !3968
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3969
  store i8 %240, i8* %241, align 1, !dbg !3970
  %242 = icmp eq i32 %191, 0, !dbg !3971
  %243 = xor i1 %242, true, !dbg !3972
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !3972
  call void @llvm.dbg.value(metadata i8* %224, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3737, metadata !DIExpression()), !dbg !3788
  br i1 %245, label %246, label %265, !dbg !3972

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !3973

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %250, metadata !3737, metadata !DIExpression()), !dbg !3788
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !3974
  %252 = load i8, i8* %251, align 1, !dbg !3974
  %253 = icmp sgt i8 %252, -1, !dbg !3976
  br i1 %253, label %261, label %254, !dbg !3977

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !3781, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3978
  %255 = ptrtoint i8* %249 to i32, !dbg !3979
  %256 = add i32 %247, %255, !dbg !3981
  %257 = icmp ugt i32 %256, %194, !dbg !3982
  br i1 %257, label %316, label %258, !dbg !3983

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !3984
  call void @llvm.dbg.value(metadata i8 %259, metadata !3781, metadata !DIExpression()), !dbg !3978
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !3985
  call void @llvm.dbg.value(metadata i8* %260, metadata !3727, metadata !DIExpression()), !dbg !3788
  store i8 %259, i8* %249, align 1, !dbg !3986
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !3926
  call void @llvm.dbg.value(metadata i8* %262, metadata !3727, metadata !DIExpression()), !dbg !3788
  %263 = add nuw i32 %250, 1, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %263, metadata !3737, metadata !DIExpression()), !dbg !3788
  %264 = icmp eq i32 %263, %193, !dbg !3988
  br i1 %264, label %265, label %248, !dbg !3973, !llvm.loop !3989

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !3926
  call void @llvm.dbg.value(metadata i8* %266, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 0, metadata !3737, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %133, metadata !3738, metadata !DIExpression()), !dbg !3788
  %267 = icmp eq i32 %193, 0, !dbg !3991
  br i1 %267, label %312, label %268, !dbg !3994

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !3994

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %272, metadata !3738, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %273, metadata !3737, metadata !DIExpression()), !dbg !3788
  br i1 %242, label %278, label %274, !dbg !3995

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !3998
  %276 = load i8, i8* %275, align 1, !dbg !3998
  %277 = icmp sgt i8 %276, -1, !dbg !3999
  br i1 %277, label %278, label %307, !dbg !4000

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4001

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !3728, metadata !DIExpression()), !dbg !3788
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4002
  %281 = load i8, i8* %280, align 1, !dbg !4002
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4005
  call void @llvm.dbg.value(metadata i8* %282, metadata !3727, metadata !DIExpression()), !dbg !3788
  store i8 %281, i8* %271, align 1, !dbg !4006
  br label %293, !dbg !4007

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4008
  %285 = load i8, i8* %284, align 1, !dbg !4008
  %286 = zext i8 %285 to i32, !dbg !4008
  %287 = shl nuw nsw i32 %286, 2, !dbg !4010
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4011
  %289 = bitcast i8* %288 to i8**, !dbg !4012
  %290 = load i8*, i8** %289, align 4, !dbg !4012
  call void @llvm.dbg.value(metadata i8* %290, metadata !3738, metadata !DIExpression()), !dbg !3788
  store i8* null, i8** %289, align 4, !dbg !4013
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4014
  %292 = add i32 %291, 1, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %292, metadata !3728, metadata !DIExpression()), !dbg !3788
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !3788
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4016
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !3788
  call void @llvm.dbg.value(metadata i8* %296, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i32 %295, metadata !3728, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %294, metadata !3738, metadata !DIExpression()), !dbg !3788
  %297 = ptrtoint i8* %296 to i32, !dbg !4017
  %298 = add i32 %269, %295, !dbg !4019
  %299 = add i32 %298, %297, !dbg !4020
  %300 = icmp ugt i32 %299, %194, !dbg !4021
  br i1 %300, label %316, label %301, !dbg !4022

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4023
  %303 = load i8, i8* %302, align 1, !dbg !4023
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4024
  call void @llvm.dbg.value(metadata i8* %304, metadata !3727, metadata !DIExpression()), !dbg !3788
  store i8 %303, i8* %296, align 1, !dbg !4025
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4026
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4027
  call void @llvm.dbg.value(metadata i8* %306, metadata !3727, metadata !DIExpression()), !dbg !3788
  br label %307, !dbg !4028

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4029
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !3788
  call void @llvm.dbg.value(metadata i8* %309, metadata !3727, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.value(metadata i8* %308, metadata !3738, metadata !DIExpression()), !dbg !3788
  %310 = add nuw i32 %273, 1, !dbg !4030
  call void @llvm.dbg.value(metadata i32 %310, metadata !3737, metadata !DIExpression()), !dbg !3788
  %311 = icmp eq i32 %310, %193, !dbg !3991
  br i1 %311, label %312, label %270, !dbg !3994, !llvm.loop !4031

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !3926
  %314 = ptrtoint i8* %313 to i32, !dbg !4033
  %315 = sub i32 %314, %17, !dbg !4033
  br label %316, !dbg !4034

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !3788
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4035
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4035
  ret i32 %317, !dbg !4035
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4036 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4040, metadata !DIExpression()), !dbg !4041
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4042
  ret i1 %2, !dbg !4043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4049, metadata !DIExpression()), !dbg !4050
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4051
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4052
  %4 = and i1 %2, %3, !dbg !4052
  ret i1 %4, !dbg !4053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4054 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4058, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i32 %1, metadata !4059, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i32 %2, metadata !4060, metadata !DIExpression()), !dbg !4064
  call void @llvm.dbg.value(metadata i8* %3, metadata !4061, metadata !DIExpression()), !dbg !4064
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4065
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4065
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4062, metadata !DIExpression()), !dbg !4066
  call void @llvm.va_start(i8* nonnull %6), !dbg !4067
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4068
  %8 = load i32, i32* %7, align 4, !dbg !4068
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4068
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %10, metadata !4063, metadata !DIExpression()), !dbg !4064
  call void @llvm.va_end(i8* nonnull %6), !dbg !4069
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4070
  ret i32 %10, !dbg !4071
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4072 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4084, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4085, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %2, metadata !4086, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %3, metadata !4087, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %3, metadata !4088, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8* %3, metadata !4089, metadata !DIExpression()), !dbg !4103
  %5 = icmp eq i8* %3, null, !dbg !4104
  br i1 %5, label %45, label %6, !dbg !4106

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4098, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4103
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4107
  %8 = load i8, i8* %7, align 1, !dbg !4107
  %9 = zext i8 %8 to i32, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %9, metadata !4099, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i8 undef, metadata !4100, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata i8 undef, metadata !4101, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata i32 0, metadata !4097, metadata !DIExpression()), !dbg !4103
  %10 = icmp eq i8 %8, 0, !dbg !4109
  br i1 %10, label %39, label %11, !dbg !4112

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4113
  call void @llvm.dbg.value(metadata i8 %12, metadata !4098, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %13 = zext i8 %12 to i32, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %13, metadata !4098, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %14 = shl nuw nsw i32 %13, 2, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %14, metadata !4098, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4116
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4117
  %17 = load i8, i8* %16, align 1, !dbg !4117
  call void @llvm.dbg.value(metadata i8 %17, metadata !4100, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %18 = zext i8 %17 to i32, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %18, metadata !4100, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4119
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4120
  %21 = load i8, i8* %20, align 1, !dbg !4120
  call void @llvm.dbg.value(metadata i8 %21, metadata !4101, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %22 = zext i8 %21 to i32, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %22, metadata !4101, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %23 = shl nuw nsw i32 %22, 1, !dbg !4122
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4095, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4103
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4123
  call void @llvm.dbg.value(metadata i8* %24, metadata !4095, metadata !DIExpression()), !dbg !4103
  br label %25, !dbg !4112

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4095, metadata !DIExpression()), !dbg !4103
  call void @llvm.dbg.value(metadata i32 %27, metadata !4097, metadata !DIExpression()), !dbg !4103
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4124
  call void @llvm.dbg.value(metadata i8* %28, metadata !4095, metadata !DIExpression()), !dbg !4103
  %29 = load i8, i8* %26, align 1, !dbg !4126
  %30 = zext i8 %29 to i32, !dbg !4126
  call void @llvm.dbg.value(metadata i32 %30, metadata !4102, metadata !DIExpression()), !dbg !4103
  %31 = shl nuw nsw i32 %30, 2, !dbg !4127
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4128
  %33 = bitcast i8* %32 to i8**, !dbg !4129
  call void @llvm.dbg.value(metadata i8** %33, metadata !4096, metadata !DIExpression()), !dbg !4103
  store i8* %28, i8** %33, align 4, !dbg !4130
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4131
  %35 = add i32 %34, 1, !dbg !4132
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %36, metadata !4095, metadata !DIExpression()), !dbg !4103
  %37 = add nuw nsw i32 %27, 1, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %37, metadata !4097, metadata !DIExpression()), !dbg !4103
  %38 = icmp eq i32 %37, %9, !dbg !4109
  br i1 %38, label %39, label %25, !dbg !4112, !llvm.loop !4135

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4137
  call void @llvm.dbg.value(metadata i8* %40, metadata !4088, metadata !DIExpression()), !dbg !4103
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4138
  %42 = bitcast i8* %41 to i8**, !dbg !4138
  %43 = load i8*, i8** %42, align 1, !dbg !4138
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4139
  br label %45, !dbg !4140

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4103
  ret i32 %46, !dbg !4141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4142 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4146, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4147, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %2, metadata !4148, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %3, metadata !4149, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %4, metadata !4150, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i8* %4, metadata !4151, metadata !DIExpression()), !dbg !4156
  %6 = ptrtoint i8* %4 to i32, !dbg !4157
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4157
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4157
  ret i32 %8, !dbg !4158
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !4159 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4163, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i32 %1, metadata !4164, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i8 0, metadata !4166, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i32 0, metadata !4167, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i8* %0, metadata !4163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4168
  %3 = load i8, i8* %0, align 1, !dbg !4169
  call void @llvm.dbg.value(metadata i8 %3, metadata !4165, metadata !DIExpression()), !dbg !4168
  %4 = icmp eq i8 %3, 0, !dbg !4170
  br i1 %4, label %29, label %5, !dbg !4171

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %8, metadata !4167, metadata !DIExpression()), !dbg !4168
  br i1 %9, label %11, label %22, !dbg !4173

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4175
  br i1 %12, label %13, label %17, !dbg !4179

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4180
  br i1 %14, label %29, label %15, !dbg !4183

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4184
  br i1 %16, label %29, label %22, !dbg !4186

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4187
  %19 = xor i1 %18, true, !dbg !4189
  %20 = zext i1 %18 to i32, !dbg !4189
  %21 = add nsw i32 %8, %20, !dbg !4189
  br label %22, !dbg !4189

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4168
  call void @llvm.dbg.value(metadata i32 %24, metadata !4167, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i8 poison, metadata !4166, metadata !DIExpression()), !dbg !4168
  %25 = icmp eq i8 %6, 37, !dbg !4190
  %26 = xor i1 %25, %23, !dbg !4192
  call void @llvm.dbg.value(metadata i8* %10, metadata !4163, metadata !DIExpression()), !dbg !4168
  call void @llvm.dbg.value(metadata i8* %10, metadata !4163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4168
  %27 = load i8, i8* %10, align 1, !dbg !4169
  call void @llvm.dbg.value(metadata i8 %27, metadata !4165, metadata !DIExpression()), !dbg !4168
  %28 = icmp eq i8 %27, 0, !dbg !4170
  br i1 %28, label %29, label %5, !dbg !4171, !llvm.loop !4193

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4168
  ret i1 %30, !dbg !4195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4196 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4200, metadata !DIExpression()), !dbg !4201
  %2 = add i8 %0, -64, !dbg !4202
  %3 = icmp ult i8 %2, 59, !dbg !4202
  ret i1 %3, !dbg !4203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4204 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4212, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4214, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %3, metadata !4215, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %4, metadata !4216, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i16* %5, metadata !4217, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %6, metadata !4218, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %0, metadata !4219, metadata !DIExpression()), !dbg !4281
  %11 = bitcast i8* %0 to i32*, !dbg !4282
  call void @llvm.dbg.value(metadata i32* %11, metadata !4220, metadata !DIExpression()), !dbg !4281
  %12 = and i32 %4, 8, !dbg !4283
  %13 = icmp eq i32 %12, 0, !dbg !4284
  call void @llvm.dbg.value(metadata i1 %13, metadata !4224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %0, metadata !4227, metadata !DIExpression()), !dbg !4281
  %14 = icmp eq i32 %1, 0, !dbg !4285
  br i1 %14, label %15, label %17, !dbg !4286

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4287
  br label %17, !dbg !4286

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4286
  call void @llvm.dbg.value(metadata i32 %18, metadata !4213, metadata !DIExpression()), !dbg !4281
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4288
  %20 = load i8, i8* %19, align 1, !dbg !4288
  %21 = zext i8 %20 to i32, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %21, metadata !4222, metadata !DIExpression()), !dbg !4281
  %22 = icmp ne i8 %20, 0, !dbg !4290
  %23 = and i32 %4, 1, !dbg !4291
  %24 = icmp ne i32 %23, 0, !dbg !4291
  %25 = and i1 %24, %22, !dbg !4291
  call void @llvm.dbg.value(metadata i1 %25, metadata !4226, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4281
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4292
  %27 = load i8, i8* %26, align 1, !dbg !4292
  %28 = zext i8 %27 to i32, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %28, metadata !4223, metadata !DIExpression()), !dbg !4281
  %29 = icmp ne i8 %27, 0, !dbg !4294
  %30 = and i32 %4, 2, !dbg !4295
  %31 = icmp ne i32 %30, 0, !dbg !4295
  %32 = and i1 %31, %29, !dbg !4295
  call void @llvm.dbg.value(metadata i1 %32, metadata !4225, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4281
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4296
  br i1 %33, label %38, label %34, !dbg !4296

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4298
  br i1 %35, label %267, label %36, !dbg !4301

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4302
  br label %267, !dbg !4304

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4305
  %40 = zext i8 %39 to i32, !dbg !4306
  %41 = shl nuw nsw i32 %40, 2, !dbg !4307
  call void @llvm.dbg.value(metadata i32 %41, metadata !4221, metadata !DIExpression()), !dbg !4281
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4308
  %43 = bitcast i8* %42 to i8**, !dbg !4309
  %44 = load i8*, i8** %43, align 4, !dbg !4309
  call void @llvm.dbg.value(metadata i8* %44, metadata !4230, metadata !DIExpression()), !dbg !4281
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4310
  call void @llvm.dbg.value(metadata i8* %45, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4232, metadata !DIExpression()), !dbg !4281
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4311
  br i1 %46, label %47, label %132, !dbg !4312

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4229, metadata !DIExpression()), !dbg !4281
  br i1 %25, label %48, label %73, !dbg !4313

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %45, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4233, metadata !DIExpression()), !dbg !4314
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4315

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %52, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %53, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %54, metadata !4233, metadata !DIExpression()), !dbg !4314
  %55 = load i8, i8* %52, align 1, !dbg !4316
  %56 = zext i8 %55 to i32, !dbg !4317
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4317
  %58 = bitcast i32* %57 to i8**, !dbg !4318
  %59 = load i8*, i8** %58, align 4, !dbg !4318
  call void @llvm.dbg.value(metadata i8* %59, metadata !4239, metadata !DIExpression()), !dbg !4319
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %60, metadata !4242, metadata !DIExpression()), !dbg !4319
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4321
  br i1 %62, label %63, label %67, !dbg !4321

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4323
  %65 = add nuw i32 %53, 1, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %65, metadata !4232, metadata !DIExpression()), !dbg !4281
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4326
  store i16 %64, i16* %66, align 2, !dbg !4327
  br label %67, !dbg !4328

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4281
  call void @llvm.dbg.value(metadata i32 %68, metadata !4232, metadata !DIExpression()), !dbg !4281
  %69 = add nsw i32 %60, %51, !dbg !4329
  call void @llvm.dbg.value(metadata i32 %69, metadata !4229, metadata !DIExpression()), !dbg !4281
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4330
  call void @llvm.dbg.value(metadata i8* %70, metadata !4231, metadata !DIExpression()), !dbg !4281
  %71 = add nuw nsw i32 %54, 1, !dbg !4331
  call void @llvm.dbg.value(metadata i32 %71, metadata !4233, metadata !DIExpression()), !dbg !4314
  %72 = icmp eq i32 %71, %21, !dbg !4332
  br i1 %72, label %79, label %50, !dbg !4315, !llvm.loop !4333

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4335
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4335
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4335
  br label %79, !dbg !4335

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4338
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4281
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4339
  call void @llvm.dbg.value(metadata i1 undef, metadata !4243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4340
  call void @llvm.dbg.value(metadata i32 0, metadata !4244, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.value(metadata i32 %82, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %81, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %80, metadata !4232, metadata !DIExpression()), !dbg !4281
  %83 = icmp eq i8 %27, 0, !dbg !4342
  br i1 %83, label %267, label %84, !dbg !4343

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4344
  %86 = icmp eq i32 %85, 0, !dbg !4345
  call void @llvm.dbg.value(metadata i1 %86, metadata !4243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4340
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4343

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8* %93, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %94, metadata !4232, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %95, metadata !4244, metadata !DIExpression()), !dbg !4341
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4346
  call void @llvm.dbg.value(metadata i8* %96, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 undef, metadata !4246, metadata !DIExpression()), !dbg !4347
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %97, metadata !4231, metadata !DIExpression()), !dbg !4281
  %98 = load i8, i8* %96, align 1, !dbg !4349
  call void @llvm.dbg.value(metadata i8 %98, metadata !4249, metadata !DIExpression()), !dbg !4347
  %99 = zext i8 %98 to i32, !dbg !4350
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4350
  %101 = bitcast i32* %100 to i8**, !dbg !4351
  %102 = load i8*, i8** %101, align 4, !dbg !4351
  call void @llvm.dbg.value(metadata i8* %102, metadata !4250, metadata !DIExpression()), !dbg !4347
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4352
  call void @llvm.dbg.value(metadata i1 %103, metadata !4251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4347
  br i1 %13, label %110, label %104, !dbg !4353

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4355
  call void @llvm.dbg.value(metadata i8 %105, metadata !4246, metadata !DIExpression()), !dbg !4347
  %106 = zext i8 %105 to i32, !dbg !4356
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4357
  br i1 %107, label %108, label %110, !dbg !4358

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4359
  %109 = add nsw i32 %92, -2, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %109, metadata !4229, metadata !DIExpression()), !dbg !4281
  br label %127, !dbg !4366

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4367

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4368

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %113, metadata !4229, metadata !DIExpression()), !dbg !4281
  br label %127, !dbg !4373

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4374

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4277), !dbg !4375
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %116, metadata !4252, metadata !DIExpression()), !dbg !4347
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4377
  br i1 %118, label %119, label %123, !dbg !4377

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4379
  %121 = add nuw i32 %94, 1, !dbg !4381
  call void @llvm.dbg.value(metadata i32 %121, metadata !4232, metadata !DIExpression()), !dbg !4281
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4382
  store i16 %120, i16* %122, align 2, !dbg !4383
  br label %123, !dbg !4384

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4281
  call void @llvm.dbg.value(metadata i32 %124, metadata !4232, metadata !DIExpression()), !dbg !4281
  %125 = add i32 %92, -1, !dbg !4385
  %126 = add i32 %125, %116, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %126, metadata !4229, metadata !DIExpression()), !dbg !4281
  br label %127, !dbg !4387

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4281
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4347
  call void @llvm.dbg.value(metadata i32 %129, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %128, metadata !4232, metadata !DIExpression()), !dbg !4281
  %130 = add nuw nsw i32 %95, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i8* %97, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %130, metadata !4244, metadata !DIExpression()), !dbg !4341
  %131 = icmp eq i32 %130, %28, !dbg !4342
  br i1 %131, label %267, label %91, !dbg !4343, !llvm.loop !4389

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4254, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4255, metadata !DIExpression()), !dbg !4392
  br i1 %25, label %133, label %135, !dbg !4393

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4256, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 0, metadata !4257, metadata !DIExpression()), !dbg !4281
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4394
  call void @llvm.dbg.value(metadata i8* %134, metadata !4258, metadata !DIExpression()), !dbg !4281
  br label %140, !dbg !4397

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4398
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4398

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4258, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 undef, metadata !4257, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 0, metadata !4256, metadata !DIExpression()), !dbg !4281
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4400
  br label %145, !dbg !4403

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4404
  call void @llvm.dbg.value(metadata i8* %148, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4260, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i8 %146, metadata !4257, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 %147, metadata !4256, metadata !DIExpression()), !dbg !4281
  %149 = icmp eq i8 %27, 0, !dbg !4406
  br i1 %149, label %150, label %152, !dbg !4407

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4408
  br label %157, !dbg !4407

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4407

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4408
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4409
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4410
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4281
  call void @llvm.dbg.value(metadata i8 undef, metadata !4253, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4281
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4411
  %163 = load i8, i8* %162, align 1, !dbg !4411
  %164 = zext i8 %159 to i32, !dbg !4412
  %165 = add i8 %163, %159, !dbg !4413
  call void @llvm.dbg.value(metadata i8 %165, metadata !4253, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4281
  %166 = icmp eq i32 %30, 0, !dbg !4414
  %167 = lshr i8 %160, 1, !dbg !4415
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4415
  call void @llvm.dbg.value(metadata i8 %168, metadata !4253, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4281
  %169 = icmp eq i32 %23, 0, !dbg !4416
  %170 = icmp eq i32 %158, 0, !dbg !4408
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4408
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4408
  call void @llvm.dbg.value(metadata i8 %172, metadata !4253, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4281
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4268, metadata !DIExpression()), !dbg !4417
  %173 = load i32, i32* %11, align 1, !dbg !4418
  store i8 %165, i8* %162, align 1, !dbg !4419
  store i8 %172, i8* %19, align 1, !dbg !4419
  store i8 %168, i8* %26, align 1, !dbg !4419
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %174, metadata !4259, metadata !DIExpression()), !dbg !4281
  %175 = icmp slt i32 %174, 0, !dbg !4421
  br i1 %175, label %267, label %220, !dbg !4423

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %178, metadata !4260, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i8 %179, metadata !4257, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 %180, metadata !4256, metadata !DIExpression()), !dbg !4281
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4424
  call void @llvm.dbg.value(metadata i8* %181, metadata !4231, metadata !DIExpression()), !dbg !4281
  %182 = load i8, i8* %177, align 1, !dbg !4425
  call void @llvm.dbg.value(metadata i8 %182, metadata !4262, metadata !DIExpression()), !dbg !4426
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4427
  call void @llvm.dbg.value(metadata i8* %183, metadata !4231, metadata !DIExpression()), !dbg !4281
  %184 = load i8, i8* %181, align 1, !dbg !4428
  call void @llvm.dbg.value(metadata i8 %184, metadata !4265, metadata !DIExpression()), !dbg !4426
  %185 = zext i8 %184 to i32, !dbg !4429
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4429
  %187 = bitcast i32* %186 to i8**, !dbg !4430
  %188 = load i8*, i8** %187, align 4, !dbg !4430
  call void @llvm.dbg.value(metadata i8* %188, metadata !4266, metadata !DIExpression()), !dbg !4426
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4431
  call void @llvm.dbg.value(metadata i1 %189, metadata !4267, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4426
  br i1 %13, label %193, label %190, !dbg !4432

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4434
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4435
  br i1 %192, label %215, label %193, !dbg !4436

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4437

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4438

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4441
  call void @llvm.dbg.value(metadata i8 %196, metadata !4256, metadata !DIExpression()), !dbg !4281
  br label %208, !dbg !4444

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4445

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4446
  call void @llvm.dbg.value(metadata i8 %199, metadata !4257, metadata !DIExpression()), !dbg !4281
  br label %208, !dbg !4449

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4450

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4452
  call void @llvm.dbg.value(metadata i8 %202, metadata !4256, metadata !DIExpression()), !dbg !4281
  br label %208, !dbg !4455

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4456
  call void @llvm.dbg.value(metadata i8 %204, metadata !4257, metadata !DIExpression()), !dbg !4281
  %205 = zext i8 %179 to i32, !dbg !4458
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4458
  store i8 %182, i8* %206, align 1, !dbg !4459
  %207 = add i8 %179, 2, !dbg !4460
  call void @llvm.dbg.value(metadata i8 %207, metadata !4257, metadata !DIExpression()), !dbg !4281
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4461
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4461
  store i8 %184, i8* %214, align 1, !dbg !4461
  br label %215, !dbg !4462

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4281
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4410
  call void @llvm.dbg.value(metadata i8 %217, metadata !4257, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i8 %216, metadata !4256, metadata !DIExpression()), !dbg !4281
  %218 = add nuw nsw i32 %178, 1, !dbg !4462
  call void @llvm.dbg.value(metadata i8* %183, metadata !4231, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 %218, metadata !4260, metadata !DIExpression()), !dbg !4405
  %219 = icmp eq i32 %218, %28, !dbg !4406
  br i1 %219, label %157, label %176, !dbg !4407, !llvm.loop !4463

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4415
  call void @llvm.dbg.value(metadata i32 %174, metadata !4229, metadata !DIExpression()), !dbg !4281
  store i32 %173, i32* %11, align 1, !dbg !4465
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4466
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %223, metadata !4259, metadata !DIExpression()), !dbg !4281
  %224 = icmp slt i32 %223, 0, !dbg !4468
  br i1 %224, label %267, label %225, !dbg !4470

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4229, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4281
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4471
  %228 = add nuw nsw i32 %41, %21, !dbg !4471
  %229 = sub i32 %227, %228, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %229, metadata !4269, metadata !DIExpression()), !dbg !4281
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4472
  call void @llvm.dbg.value(metadata i32 %230, metadata !4259, metadata !DIExpression()), !dbg !4281
  %231 = icmp slt i32 %230, 0, !dbg !4473
  br i1 %231, label %267, label %232, !dbg !4475

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %233, metadata !4229, metadata !DIExpression()), !dbg !4281
  %234 = add nuw nsw i32 %233, %230, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %234, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.value(metadata i32 0, metadata !4270, metadata !DIExpression()), !dbg !4478
  %235 = icmp eq i8 %159, 0, !dbg !4479
  br i1 %235, label %264, label %236, !dbg !4480

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4480

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4270, metadata !DIExpression()), !dbg !4478
  call void @llvm.dbg.value(metadata i32 %240, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4481
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4482
  %242 = load i8, i8* %241, align 1, !dbg !4482
  call void @llvm.dbg.value(metadata i8 %242, metadata !4272, metadata !DIExpression()), !dbg !4483
  store i8 %242, i8* %10, align 1, !dbg !4484
  %243 = zext i8 %242 to i32, !dbg !4485
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4485
  %245 = bitcast i32* %244 to i8**, !dbg !4486
  %246 = load i8*, i8** %245, align 4, !dbg !4486
  call void @llvm.dbg.value(metadata i8* %246, metadata !4275, metadata !DIExpression()), !dbg !4483
  br i1 %237, label %250, label %247, !dbg !4487

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4488
  %249 = load i16, i16* %248, align 2, !dbg !4488
  br label %250, !dbg !4487

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4487
  call void @llvm.dbg.value(metadata i32 undef, metadata !4276, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %10, metadata !4272, metadata !DIExpression(DW_OP_deref)), !dbg !4483
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %252, metadata !4259, metadata !DIExpression()), !dbg !4281
  %253 = icmp slt i32 %252, 0, !dbg !4490
  br i1 %253, label %257, label %254, !dbg !4492

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4276, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4229, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4281
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4493
  call void @llvm.dbg.value(metadata i32 %255, metadata !4259, metadata !DIExpression()), !dbg !4281
  %256 = icmp slt i32 %255, 0, !dbg !4494
  br i1 %256, label %257, label %259, !dbg !4496

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4497
  call void @llvm.dbg.value(metadata i32 undef, metadata !4229, metadata !DIExpression()), !dbg !4281
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %260, metadata !4229, metadata !DIExpression()), !dbg !4281
  %261 = add nsw i32 %260, %255, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %261, metadata !4229, metadata !DIExpression()), !dbg !4281
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4497
  %262 = add nuw nsw i32 %239, 1, !dbg !4500
  call void @llvm.dbg.value(metadata i32 %262, metadata !4270, metadata !DIExpression()), !dbg !4478
  %263 = icmp eq i32 %262, %164, !dbg !4479
  br i1 %263, label %264, label %238, !dbg !4480, !llvm.loop !4501

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4477
  call void @llvm.dbg.value(metadata i32 %265, metadata !4229, metadata !DIExpression()), !dbg !4281
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4503
  br label %267, !dbg !4504

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4281
  ret i32 %268, !dbg !4505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4506 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4510, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.value(metadata i8* %0, metadata !4511, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.value(metadata i8* %0, metadata !4512, metadata !DIExpression()), !dbg !4518
  %2 = load i8, i8* %0, align 1, !dbg !4519
  %3 = zext i8 %2 to i32, !dbg !4519
  %4 = shl nuw nsw i32 %3, 2, !dbg !4520
  call void @llvm.dbg.value(metadata i32 %4, metadata !4513, metadata !DIExpression()), !dbg !4518
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4521
  %6 = load i8, i8* %5, align 1, !dbg !4521
  %7 = zext i8 %6 to i32, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %7, metadata !4514, metadata !DIExpression()), !dbg !4518
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4522
  %9 = load i8, i8* %8, align 1, !dbg !4522
  %10 = zext i8 %9 to i32, !dbg !4522
  call void @llvm.dbg.value(metadata i32 %10, metadata !4515, metadata !DIExpression()), !dbg !4518
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !4523
  call void @llvm.dbg.value(metadata i8* %11, metadata !4511, metadata !DIExpression()), !dbg !4518
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !4524
  call void @llvm.dbg.value(metadata i8* %12, metadata !4511, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.value(metadata i32 0, metadata !4516, metadata !DIExpression()), !dbg !4525
  %13 = icmp eq i8 %6, 0, !dbg !4526
  br i1 %13, label %14, label %19, !dbg !4528

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !4518
  %16 = ptrtoint i8* %15 to i32, !dbg !4529
  %17 = ptrtoint i8* %0 to i32, !dbg !4529
  %18 = sub i32 %16, %17, !dbg !4529
  ret i32 %18, !dbg !4530

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4516, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.value(metadata i8* %21, metadata !4511, metadata !DIExpression()), !dbg !4518
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4531
  call void @llvm.dbg.value(metadata i8* %22, metadata !4511, metadata !DIExpression()), !dbg !4518
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !4533
  %24 = add i32 %23, 1, !dbg !4534
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !4535
  call void @llvm.dbg.value(metadata i8* %25, metadata !4511, metadata !DIExpression()), !dbg !4518
  %26 = add nuw nsw i32 %20, 1, !dbg !4536
  call void @llvm.dbg.value(metadata i32 %26, metadata !4516, metadata !DIExpression()), !dbg !4525
  %27 = icmp eq i32 %26, %7, !dbg !4526
  br i1 %27, label %14, label %19, !dbg !4528, !llvm.loop !4537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4539 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4543, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i8* %1, metadata !4544, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i8* %2, metadata !4545, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i16 %3, metadata !4546, metadata !DIExpression()), !dbg !4547
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4548
  br i1 %5, label %6, label %9, !dbg !4550

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4551
  %8 = add i32 %7, 1, !dbg !4553
  br label %20, !dbg !4554

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4555
  br i1 %10, label %13, label %11, !dbg !4556

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4556
  br label %16, !dbg !4556

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4557
  %15 = add i32 %14, 1, !dbg !4558
  br label %16, !dbg !4556

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4556
  %18 = and i32 %17, 65535, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %17, metadata !4546, metadata !DIExpression()), !dbg !4547
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4560
  br label %20, !dbg !4561

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4547
  ret i32 %21, !dbg !4562
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4565, metadata !DIExpression()), !dbg !4566
  ret i32 0, !dbg !4567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !4568 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4572, metadata !DIExpression()), !dbg !4573
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4574
  ret void, !dbg !4575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !4576 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4579
  ret i8* %1, !dbg !4580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4581 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4592, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata i8* %0, metadata !4591, metadata !DIExpression()), !dbg !4601
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4602
  ret void, !dbg !4604
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4609, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata i8* %1, metadata !4610, metadata !DIExpression()), !dbg !4611
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4612
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4612
  ret i32 %4, !dbg !4613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4614 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4621, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4618, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %1, metadata !4619, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %2, metadata !4620, metadata !DIExpression()), !dbg !4622
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4623
  ret void, !dbg !4624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4625 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4629, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 %1, metadata !4630, metadata !DIExpression()), !dbg !4632
  call void @llvm.dbg.value(metadata i32 0, metadata !4631, metadata !DIExpression()), !dbg !4632
  %3 = icmp eq i32 %1, 0, !dbg !4633
  br i1 %3, label %13, label %4, !dbg !4636

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4631, metadata !DIExpression()), !dbg !4632
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4637
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4639
  %8 = load i8, i8* %7, align 1, !dbg !4639
  %9 = zext i8 %8 to i32, !dbg !4639
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4637
  %11 = add nuw i32 %5, 1, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %11, metadata !4631, metadata !DIExpression()), !dbg !4632
  %12 = icmp eq i32 %11, %1, !dbg !4633
  br i1 %12, label %13, label %4, !dbg !4636, !llvm.loop !4641

13:                                               ; preds = %4, %2
  ret void, !dbg !4643
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4644 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4648, metadata !DIExpression()), !dbg !4650
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4651
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4651
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4649, metadata !DIExpression()), !dbg !4652
  call void @llvm.va_start(i8* nonnull %3), !dbg !4653
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4654
  %5 = load i32, i32* %4, align 4, !dbg !4654
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4654
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4654
  call void @llvm.va_end(i8* nonnull %3), !dbg !4655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4656
  ret void, !dbg !4656
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4657 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4661, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata i32 %1, metadata !4662, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata i8* %2, metadata !4663, metadata !DIExpression()), !dbg !4666
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4667
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4667
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4664, metadata !DIExpression()), !dbg !4668
  call void @llvm.va_start(i8* nonnull %5), !dbg !4669
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4670
  %7 = load i32, i32* %6, align 4, !dbg !4670
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4670
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4670
  call void @llvm.dbg.value(metadata i32 %9, metadata !4665, metadata !DIExpression()), !dbg !4666
  call void @llvm.va_end(i8* nonnull %5), !dbg !4671
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !4672
  ret i32 %9, !dbg !4673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4674 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4681, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8* %0, metadata !4678, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i32 %1, metadata !4679, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i8* %2, metadata !4680, metadata !DIExpression()), !dbg !4688
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4689
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4689
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4682, metadata !DIExpression()), !dbg !4690
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4691
  store i8* %0, i8** %7, align 4, !dbg !4691
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4691
  store i32 %1, i32* %8, align 4, !dbg !4691
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4691
  store i32 0, i32* %9, align 4, !dbg !4691
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4692
  %10 = load i32, i32* %9, align 4, !dbg !4693
  %11 = load i32, i32* %8, align 4, !dbg !4695
  %12 = icmp slt i32 %10, %11, !dbg !4696
  br i1 %12, label %13, label %15, !dbg !4697

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4698
  store i8 0, i8* %14, align 1, !dbg !4700
  br label %15, !dbg !4701

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !4702
  ret i32 %10, !dbg !4703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4709, metadata !DIExpression()), !dbg !4711
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4710, metadata !DIExpression()), !dbg !4711
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4712
  %4 = load i8*, i8** %3, align 4, !dbg !4712
  %5 = icmp eq i8* %4, null, !dbg !4714
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4715
  br i1 %5, label %12, label %8, !dbg !4716

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4717
  %10 = load i32, i32* %9, align 4, !dbg !4717
  %11 = icmp slt i32 %7, %10, !dbg !4718
  br i1 %11, label %15, label %12, !dbg !4719

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4720
  %14 = add nsw i32 %7, 1, !dbg !4722
  store i32 %14, i32* %13, align 4, !dbg !4722
  br label %25, !dbg !4723

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4724
  %17 = icmp eq i32 %7, %16, !dbg !4726
  br i1 %17, label %18, label %21, !dbg !4727

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4728
  store i32 %19, i32* %6, align 4, !dbg !4728
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4730
  store i8 0, i8* %20, align 1, !dbg !4731
  br label %25, !dbg !4732

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4733
  %23 = add nsw i32 %7, 1, !dbg !4735
  store i32 %23, i32* %6, align 4, !dbg !4735
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4736
  store i8 %22, i8* %24, align 1, !dbg !4737
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4738
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4739 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4744, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %1, metadata !4745, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %2, metadata !4746, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.value(metadata i8* %3, metadata !4747, metadata !DIExpression()), !dbg !4748
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !4749
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !4750
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4751
  unreachable, !dbg !4752
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4753 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !4857
  ret %struct.k_thread* %1, !dbg !4858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4859 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4863, metadata !DIExpression()), !dbg !4864
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4865, !srcloc !4867
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !4868
  ret void, !dbg !4869
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4870 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4871, !srcloc !4873
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !4874
  ret %struct.k_thread* %1, !dbg !4875
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #12 !dbg !4876 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4887, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.value(metadata i8* %1, metadata !4888, metadata !DIExpression()), !dbg !4891
  %3 = icmp eq i8* %1, null, !dbg !4892
  br i1 %3, label %8, label %4, !dbg !4894

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4895
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4895
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4889, metadata !DIExpression()), !dbg !4891
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4896, !range !4897
  call void @llvm.dbg.value(metadata i32 %7, metadata !4890, metadata !DIExpression()), !dbg !4891
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4898
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4899
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !4900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4901 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4905, metadata !DIExpression()), !dbg !4909
  call void @llvm.dbg.value(metadata i8* %1, metadata !4906, metadata !DIExpression()), !dbg !4909
  call void @llvm.dbg.value(metadata i8* %1, metadata !4907, metadata !DIExpression()), !dbg !4909
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4910
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4908, metadata !DIExpression()), !dbg !4909
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4911
  %5 = ptrtoint i8* %4 to i32, !dbg !4912
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4912
  %7 = sub i32 %5, %6, !dbg !4912
  %8 = lshr i32 %7, 3, !dbg !4913
  ret i32 %8, !dbg !4914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4915 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4919, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata i32 %1, metadata !4920, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata i1 %2, metadata !4921, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4924
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4925
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4922, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4923, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4924
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4926
  %6 = bitcast i8* %5 to i16*, !dbg !4926
  %7 = load i16, i16* %6, align 2, !dbg !4926
  %8 = and i16 %7, -2, !dbg !4930
  %9 = zext i1 %2 to i16, !dbg !4930
  %10 = or i16 %8, %9, !dbg !4930
  store i16 %10, i16* %6, align 2, !dbg !4926
  ret void, !dbg !4931
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4932 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4936, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %1, metadata !4937, metadata !DIExpression()), !dbg !4938
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4939
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4941
  br i1 %4, label %7, label %5, !dbg !4942

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4943
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4945
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4946
  br label %7, !dbg !4947

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4948, !range !4950
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4951
  br i1 %9, label %13, label %10, !dbg !4952

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4953
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4955, !range !4950
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4956
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4957
  call void @llvm.dbg.value(metadata i32 %12, metadata !4937, metadata !DIExpression()), !dbg !4938
  br label %13, !dbg !4958

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4937, metadata !DIExpression()), !dbg !4938
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4959
  ret void, !dbg !4960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4961 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4965, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i32 %1, metadata !4966, metadata !DIExpression()), !dbg !4967
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4968
  %4 = add i32 %3, %1, !dbg !4969
  ret i32 %4, !dbg !4970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !4971 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4975, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i32 %1, metadata !4976, metadata !DIExpression()), !dbg !4977
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4978
  %4 = and i32 %3, 1, !dbg !4979
  %5 = icmp ne i32 %4, 0, !dbg !4978
  ret i1 %5, !dbg !4980
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4981 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4983, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %1, metadata !4984, metadata !DIExpression()), !dbg !4988
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4989, !range !4990
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %4, metadata !4985, metadata !DIExpression()), !dbg !4992
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4993
  ret void, !dbg !4994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4995 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4999, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i32 %1, metadata !5000, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i32 %2, metadata !5001, metadata !DIExpression()), !dbg !5004
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5005
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5006
  %6 = add i32 %5, %4, !dbg !5007
  call void @llvm.dbg.value(metadata i32 %6, metadata !5002, metadata !DIExpression()), !dbg !5004
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !5008
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5009
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5010
  ret void, !dbg !5011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !5012 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5014, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata i32 %1, metadata !5015, metadata !DIExpression()), !dbg !5016
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !5017
  %4 = sub i32 %1, %3, !dbg !5018
  ret i32 %4, !dbg !5019
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5020 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5022, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.value(metadata i32 %1, metadata !5023, metadata !DIExpression()), !dbg !5027
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5028, !range !4990
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %4, metadata !5024, metadata !DIExpression()), !dbg !5030
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !5031
  ret void, !dbg !5032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !5033 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5037, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i32 %1, metadata !5038, metadata !DIExpression()), !dbg !5039
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !5040
  %4 = lshr i32 %3, 1, !dbg !5041
  ret i32 %4, !dbg !5042
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5043 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5047, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i32 %1, metadata !5048, metadata !DIExpression()), !dbg !5050
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !5051
  %4 = add i32 %1, 1, !dbg !5052
  %5 = sub i32 %4, %3, !dbg !5053
  call void @llvm.dbg.value(metadata i32 %5, metadata !5049, metadata !DIExpression()), !dbg !5050
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5054, !range !5055
  %7 = sub nsw i32 31, %6, !dbg !5056
  ret i32 %7, !dbg !5057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5058 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5062, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata i32 %1, metadata !5063, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata i32 %2, metadata !5064, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5065, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5071
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5072
  %5 = load i32, i32* %4, align 4, !dbg !5072
  %6 = icmp eq i32 %5, 0, !dbg !5073
  br i1 %6, label %7, label %12, !dbg !5074

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5075
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5077
  %10 = load i32, i32* %9, align 4, !dbg !5078
  %11 = or i32 %10, %8, !dbg !5078
  store i32 %11, i32* %9, align 4, !dbg !5078
  store i32 %1, i32* %4, align 4, !dbg !5079
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5080
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5081
  br label %14, !dbg !5082

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5067, metadata !DIExpression()), !dbg !5083
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !5084, !range !5085
  call void @llvm.dbg.value(metadata i32 %13, metadata !5070, metadata !DIExpression()), !dbg !5083
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !5086
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5087
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !5088
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !5089
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5091 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5093, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 %1, metadata !5094, metadata !DIExpression()), !dbg !5096
  call void @llvm.dbg.value(metadata i32 %2, metadata !5095, metadata !DIExpression()), !dbg !5096
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !5097
  ret void, !dbg !5098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5099 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5101, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i32 %1, metadata !5102, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i32 %2, metadata !5103, metadata !DIExpression()), !dbg !5104
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !5105
  ret void, !dbg !5106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5107 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5109, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.value(metadata i32 %1, metadata !5110, metadata !DIExpression()), !dbg !5111
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !5112
  ret i32 %3, !dbg !5113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !5114 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5118, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 %1, metadata !5119, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata i32 %2, metadata !5120, metadata !DIExpression()), !dbg !5123
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5124
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5121, metadata !DIExpression()), !dbg !5123
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5122, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5123
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5122, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5123
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5125
  call void @llvm.dbg.value(metadata i8* %5, metadata !5122, metadata !DIExpression()), !dbg !5123
  %6 = bitcast i8* %5 to i16*, !dbg !5126
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5129
  %8 = load i16, i16* %7, align 2, !dbg !5129
  %9 = zext i16 %8 to i32, !dbg !5129
  ret i32 %9, !dbg !5130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5131 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5135, metadata !DIExpression()), !dbg !5136
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5137
  ret %struct.chunk_unit_t* %2, !dbg !5138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #8 !dbg !5139 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5143, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i32 %1, metadata !5144, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i32 %2, metadata !5145, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata i32 %3, metadata !5146, metadata !DIExpression()), !dbg !5149
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5150
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5147, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5149
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5151
  call void @llvm.dbg.value(metadata i8* %6, metadata !5148, metadata !DIExpression()), !dbg !5149
  %7 = trunc i32 %3 to i16, !dbg !5152
  %8 = bitcast i8* %6 to i16*, !dbg !5155
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5156
  store i16 %7, i16* %9, align 2, !dbg !5157
  ret void, !dbg !5158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5159 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5163, metadata !DIExpression()), !dbg !5164
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !5165
  ret i32 %2, !dbg !5166
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5167 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5171, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i32 %1, metadata !5172, metadata !DIExpression()), !dbg !5173
  %3 = add i32 %1, 4, !dbg !5174
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !5175
  ret i32 %4, !dbg !5176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5181, metadata !DIExpression()), !dbg !5182
  %2 = add i32 %0, 7, !dbg !5183
  %3 = lshr i32 %2, 3, !dbg !5184
  ret i32 %3, !dbg !5185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5186 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5190, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %1, metadata !5191, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %2, metadata !5192, metadata !DIExpression()), !dbg !5193
  %4 = shl i32 %2, 1, !dbg !5194
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !5195
  ret void, !dbg !5196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5197 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5199, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 %1, metadata !5200, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.value(metadata i32 %2, metadata !5201, metadata !DIExpression()), !dbg !5202
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !5203
  ret void, !dbg !5204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5205 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5207, metadata !DIExpression()), !dbg !5215
  call void @llvm.dbg.value(metadata i32 %1, metadata !5208, metadata !DIExpression()), !dbg !5215
  call void @llvm.dbg.value(metadata i32 %2, metadata !5209, metadata !DIExpression()), !dbg !5215
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5216
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !5210, metadata !DIExpression()), !dbg !5215
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5217
  %6 = icmp eq i32 %5, %1, !dbg !5218
  br i1 %6, label %7, label %14, !dbg !5219

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5220
  %9 = xor i32 %8, -1, !dbg !5222
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5223
  %11 = load i32, i32* %10, align 4, !dbg !5224
  %12 = and i32 %11, %9, !dbg !5224
  store i32 %12, i32* %10, align 4, !dbg !5224
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5225
  store i32 0, i32* %13, align 4, !dbg !5226
  br label %17, !dbg !5227

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5228
  call void @llvm.dbg.value(metadata i32 %15, metadata !5211, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i32 %5, metadata !5214, metadata !DIExpression()), !dbg !5229
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !5230
  store i32 %5, i32* %16, align 4, !dbg !5231
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !5232
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !5233
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5235 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5237, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i32 %1, metadata !5238, metadata !DIExpression()), !dbg !5239
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !5240
  ret i32 %3, !dbg !5241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #4 !dbg !5242 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5246, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.value(metadata i8* %1, metadata !5247, metadata !DIExpression()), !dbg !5253
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5254
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5254
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5248, metadata !DIExpression()), !dbg !5253
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !5255
  call void @llvm.dbg.value(metadata i32 %5, metadata !5249, metadata !DIExpression()), !dbg !5253
  %6 = ptrtoint i8* %1 to i32, !dbg !5256
  call void @llvm.dbg.value(metadata i32 %6, metadata !5250, metadata !DIExpression()), !dbg !5253
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !5257
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5257
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5258
  call void @llvm.dbg.value(metadata i32 %9, metadata !5251, metadata !DIExpression()), !dbg !5253
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !5259
  %11 = shl i32 %10, 3, !dbg !5260
  call void @llvm.dbg.value(metadata i32 %11, metadata !5252, metadata !DIExpression()), !dbg !5253
  %12 = sub i32 %9, %6, !dbg !5261
  %13 = add i32 %12, %11, !dbg !5262
  ret i32 %13, !dbg !5263
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5264 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5268, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i32 %1, metadata !5269, metadata !DIExpression()), !dbg !5274
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5275
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5275
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5270, metadata !DIExpression()), !dbg !5274
  %5 = icmp eq i32 %1, 0, !dbg !5276
  br i1 %5, label %19, label %6, !dbg !5278

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5279
  br i1 %7, label %19, label %8, !dbg !5280

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5281, !range !4897
  call void @llvm.dbg.value(metadata i32 %9, metadata !5272, metadata !DIExpression()), !dbg !5274
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !5282
  call void @llvm.dbg.value(metadata i32 %10, metadata !5273, metadata !DIExpression()), !dbg !5274
  %11 = icmp eq i32 %10, 0, !dbg !5283
  br i1 %11, label %19, label %12, !dbg !5285

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5286
  %14 = icmp ugt i32 %13, %9, !dbg !5288
  br i1 %14, label %15, label %17, !dbg !5289

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5290
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !5292
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !5293
  br label %17, !dbg !5294

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !5295
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5296
  call void @llvm.dbg.value(metadata i8* %18, metadata !5271, metadata !DIExpression()), !dbg !5274
  br label %19, !dbg !5297

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5274
  ret i8* %20, !dbg !5298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #4 !dbg !5299 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5303, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i32 %1, metadata !5304, metadata !DIExpression()), !dbg !5305
  %3 = lshr i32 %1, 3, !dbg !5306
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5307
  %5 = load i32, i32* %4, align 4, !dbg !5307
  %6 = icmp uge i32 %3, %5, !dbg !5308
  ret i1 %6, !dbg !5309
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5310 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5314, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i32 %1, metadata !5315, metadata !DIExpression()), !dbg !5329
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5330
  call void @llvm.dbg.value(metadata i32 %3, metadata !5316, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5317, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5329
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5331
  %5 = load i32, i32* %4, align 4, !dbg !5331
  %6 = icmp eq i32 %5, 0, !dbg !5332
  br i1 %6, label %19, label %7, !dbg !5333

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5334
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5335
  call void @llvm.dbg.value(metadata i32 %9, metadata !5321, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %8, metadata !5322, metadata !DIExpression()), !dbg !5336
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5337
  %11 = icmp ult i32 %10, %1, !dbg !5339
  br i1 %11, label %13, label %12, !dbg !5340

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !5341
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5343
  store i32 %14, i32* %4, align 4, !dbg !5344
  %15 = add nsw i32 %9, -1, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %15, metadata !5321, metadata !DIExpression()), !dbg !5335
  %16 = icmp eq i32 %15, 0, !dbg !5345
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5346
  br i1 %18, label %19, label %7, !dbg !5346, !llvm.loop !5347

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5350
  %21 = load i32, i32* %20, align 4, !dbg !5350
  %22 = add nsw i32 %3, 1, !dbg !5351
  %23 = shl nsw i32 -1, %22, !dbg !5351
  %24 = and i32 %21, %23, !dbg !5352
  call void @llvm.dbg.value(metadata i32 %24, metadata !5324, metadata !DIExpression()), !dbg !5329
  %25 = icmp eq i32 %24, 0, !dbg !5353
  br i1 %25, label %30, label %26, !dbg !5354

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5355, !range !5055
  call void @llvm.dbg.value(metadata i32 %27, metadata !5325, metadata !DIExpression()), !dbg !5356
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5357
  %29 = load i32, i32* %28, align 4, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %29, metadata !5328, metadata !DIExpression()), !dbg !5356
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !5358
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5329
  ret i32 %31, !dbg !5359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5360 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5362, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %1, metadata !5363, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.value(metadata i32 %2, metadata !5364, metadata !DIExpression()), !dbg !5368
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %4, metadata !5365, metadata !DIExpression()), !dbg !5368
  %5 = sub i32 %2, %1, !dbg !5370
  call void @llvm.dbg.value(metadata i32 %5, metadata !5366, metadata !DIExpression()), !dbg !5368
  %6 = sub i32 %4, %5, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %6, metadata !5367, metadata !DIExpression()), !dbg !5368
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5372
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !5373
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !5374
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5375
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5376
  ret void, !dbg !5377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5378 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5382, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 %1, metadata !5383, metadata !DIExpression()), !dbg !5386
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5387
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5384, metadata !DIExpression()), !dbg !5386
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5388
  call void @llvm.dbg.value(metadata i8* %4, metadata !5385, metadata !DIExpression()), !dbg !5386
  ret i8* %4, !dbg !5389
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5390 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5394, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i32 %1, metadata !5395, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i32 %2, metadata !5396, metadata !DIExpression()), !dbg !5406
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5407
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5407
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5397, metadata !DIExpression()), !dbg !5406
  %6 = sub i32 0, %1, !dbg !5408
  %7 = and i32 %6, %1, !dbg !5409
  call void @llvm.dbg.value(metadata i32 %7, metadata !5399, metadata !DIExpression()), !dbg !5406
  %8 = icmp eq i32 %7, %1, !dbg !5410
  br i1 %8, label %13, label %9, !dbg !5412

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %10, metadata !5395, metadata !DIExpression()), !dbg !5406
  %11 = icmp ult i32 %7, 4, !dbg !5415
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5415
  br label %17, !dbg !5415

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5416
  br i1 %14, label %15, label %17, !dbg !5419

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5420
  br label %57, !dbg !5422

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5406
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5423
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5395, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i32 %19, metadata !5398, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i32 %18, metadata !5399, metadata !DIExpression()), !dbg !5406
  %21 = icmp eq i32 %2, 0, !dbg !5424
  br i1 %21, label %57, label %22, !dbg !5426

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5427
  br i1 %23, label %57, label %24, !dbg !5428

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !5429
  %26 = add i32 %25, %20, !dbg !5430
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !5431, !range !4897
  call void @llvm.dbg.value(metadata i32 %27, metadata !5400, metadata !DIExpression()), !dbg !5406
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !5432
  call void @llvm.dbg.value(metadata i32 %28, metadata !5401, metadata !DIExpression()), !dbg !5406
  %29 = icmp eq i32 %28, 0, !dbg !5433
  br i1 %29, label %57, label %30, !dbg !5435

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5436
  call void @llvm.dbg.value(metadata i8* %31, metadata !5402, metadata !DIExpression()), !dbg !5406
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !5437
  %33 = ptrtoint i8* %32 to i32, !dbg !5437
  %34 = add i32 %20, -1, !dbg !5437
  %35 = add i32 %34, %33, !dbg !5437
  %36 = sub i32 0, %20, !dbg !5437
  %37 = and i32 %35, %36, !dbg !5437
  %38 = inttoptr i32 %37 to i8*, !dbg !5438
  %39 = sub i32 0, %18, !dbg !5439
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5439
  call void @llvm.dbg.value(metadata i8* %40, metadata !5402, metadata !DIExpression()), !dbg !5406
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !5440
  %42 = ptrtoint i8* %41 to i32, !dbg !5440
  %43 = add i32 %42, 7, !dbg !5440
  %44 = and i32 %43, -8, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %44, metadata !5403, metadata !DIExpression()), !dbg !5406
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !5441
  call void @llvm.dbg.value(metadata i32 %45, metadata !5404, metadata !DIExpression()), !dbg !5406
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5442
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !5443
  %48 = sub i32 %44, %47, !dbg !5443
  %49 = ashr exact i32 %48, 3, !dbg !5443
  call void @llvm.dbg.value(metadata i32 %49, metadata !5405, metadata !DIExpression()), !dbg !5406
  %50 = icmp ugt i32 %45, %28, !dbg !5444
  br i1 %50, label %51, label %52, !dbg !5446

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !5447
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !5449
  br label %52, !dbg !5450

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !5451
  %54 = icmp ugt i32 %53, %49, !dbg !5453
  br i1 %54, label %55, label %56, !dbg !5454

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !5455
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5457
  br label %56, !dbg !5458

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !5459
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !5406
  ret i8* %58, !dbg !5460
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5461 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5465, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i8* %1, metadata !5466, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i32 %2, metadata !5467, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i32 %3, metadata !5468, metadata !DIExpression()), !dbg !5484
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5485
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5485
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5469, metadata !DIExpression()), !dbg !5484
  %7 = icmp eq i8* %1, null, !dbg !5486
  br i1 %7, label %8, label %10, !dbg !5488

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5489
  br label %59, !dbg !5491

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5492
  br i1 %11, label %12, label %13, !dbg !5494

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5495
  br label %59, !dbg !5497

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5498
  br i1 %14, label %59, label %15, !dbg !5500

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5501, !range !4897
  call void @llvm.dbg.value(metadata i32 %16, metadata !5470, metadata !DIExpression()), !dbg !5484
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5502
  call void @llvm.dbg.value(metadata i32 %17, metadata !5471, metadata !DIExpression()), !dbg !5484
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5503
  %19 = ptrtoint i8* %1 to i32, !dbg !5504
  %20 = ptrtoint i8* %18 to i32, !dbg !5504
  %21 = sub i32 %19, %20, !dbg !5504
  call void @llvm.dbg.value(metadata i32 %21, metadata !5472, metadata !DIExpression()), !dbg !5484
  %22 = add i32 %21, %3, !dbg !5505
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5506
  call void @llvm.dbg.value(metadata i32 %23, metadata !5473, metadata !DIExpression()), !dbg !5484
  %24 = icmp eq i32 %2, 0, !dbg !5507
  br i1 %24, label %29, label %25, !dbg !5508

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !5509
  %27 = and i32 %26, %19, !dbg !5510
  %28 = icmp eq i32 %27, 0, !dbg !5510
  br i1 %28, label %29, label %49, !dbg !5511

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5512
  %31 = icmp eq i32 %23, %30, !dbg !5513
  br i1 %31, label %59, label %32, !dbg !5514

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !5515
  br i1 %33, label %34, label %36, !dbg !5516

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !5517
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !5519
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5520
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !5521
  br label %59, !dbg !5522

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5523
  br i1 %37, label %49, label %38, !dbg !5524

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5525
  %40 = add i32 %39, %30, !dbg !5526
  %41 = icmp ult i32 %40, %23, !dbg !5527
  br i1 %41, label %49, label %42, !dbg !5528

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !5529
  call void @llvm.dbg.value(metadata i32 %43, metadata !5474, metadata !DIExpression()), !dbg !5530
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5531
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !5532
  %45 = icmp ult i32 %43, %44, !dbg !5534
  br i1 %45, label %46, label %48, !dbg !5535

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !5536
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !5538
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !5539
  br label %48, !dbg !5540

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !5541
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !5542
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5543
  call void @llvm.dbg.value(metadata i8* %50, metadata !5480, metadata !DIExpression()), !dbg !5484
  %51 = icmp eq i8* %50, null, !dbg !5544
  br i1 %51, label %59, label %52, !dbg !5545

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !5546, !range !4990
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !5547
  %55 = sub i32 %54, %21, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %55, metadata !5481, metadata !DIExpression()), !dbg !5549
  %56 = icmp ult i32 %55, %3, !dbg !5550
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !5550
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !5551
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5552
  br label %59, !dbg !5553

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !5484
  ret i8* %60, !dbg !5554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5555 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5559, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i32 %1, metadata !5560, metadata !DIExpression()), !dbg !5561
  %3 = shl i32 %1, 3, !dbg !5562
  %4 = add i32 %3, -4, !dbg !5563
  ret i32 %4, !dbg !5564
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5565 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5569, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata i8* %1, metadata !5570, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata i32 %2, metadata !5571, metadata !DIExpression()), !dbg !5580
  %4 = add i32 %2, -4, !dbg !5581
  call void @llvm.dbg.value(metadata i32 %4, metadata !5571, metadata !DIExpression()), !dbg !5580
  %5 = ptrtoint i8* %1 to i32, !dbg !5582
  %6 = add i32 %5, 7, !dbg !5582
  %7 = and i32 %6, -8, !dbg !5582
  call void @llvm.dbg.value(metadata i32 %7, metadata !5572, metadata !DIExpression()), !dbg !5580
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !5583
  %9 = ptrtoint i8* %8 to i32, !dbg !5583
  %10 = and i32 %9, -8, !dbg !5583
  call void @llvm.dbg.value(metadata i32 %10, metadata !5573, metadata !DIExpression()), !dbg !5580
  %11 = sub i32 %10, %7, !dbg !5584
  %12 = lshr exact i32 %11, 3, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %12, metadata !5574, metadata !DIExpression()), !dbg !5580
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !5586
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !5575, metadata !DIExpression()), !dbg !5580
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5587
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !5588
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !5589
  store i32 %12, i32* %15, align 8, !dbg !5590
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !5591
  store i32 0, i32* %16, align 4, !dbg !5592
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %17, metadata !5576, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5580
  %18 = shl i32 %17, 2, !dbg !5594
  %19 = add i32 %18, 20, !dbg !5595
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !5596
  call void @llvm.dbg.value(metadata i32 %20, metadata !5577, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata i32 0, metadata !5578, metadata !DIExpression()), !dbg !5597
  %21 = icmp slt i32 %17, 0, !dbg !5598
  br i1 %21, label %22, label %24, !dbg !5600

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !5601
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !5602
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5603
  %23 = sub i32 %12, %20, !dbg !5604
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !5605
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !5606
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !5607
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !5608
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !5609
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !5610
  ret void, !dbg !5611

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !5578, metadata !DIExpression()), !dbg !5597
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !5612
  store i32 0, i32* %26, align 4, !dbg !5614
  %27 = add nuw i32 %25, 1, !dbg !5615
  call void @llvm.dbg.value(metadata i32 %27, metadata !5578, metadata !DIExpression()), !dbg !5597
  %28 = icmp eq i32 %25, %17, !dbg !5598
  br i1 %28, label %22, label %24, !dbg !5600, !llvm.loop !5616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5618 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5631, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5628, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i8* %1, metadata !5629, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i8* %2, metadata !5630, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %4, metadata !5632, metadata !DIExpression()), !dbg !5757
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5758
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5758
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5633, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 0, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i1 undef, metadata !5639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5757
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5760

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5760

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5761
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5631, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i8* %30, metadata !5630, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %29, metadata !5637, metadata !DIExpression()), !dbg !5757
  %31 = load i8, i8* %30, align 1, !dbg !5762
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5760

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5762
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5763
  call void @llvm.dbg.value(metadata i8* %34, metadata !5630, metadata !DIExpression()), !dbg !5757
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5763
  call void @llvm.dbg.value(metadata i32 %35, metadata !5641, metadata !DIExpression()), !dbg !5764
  %36 = icmp slt i32 %35, 0, !dbg !5765
  %37 = add i32 %29, 1, !dbg !5763
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %36, label %365, label %28, !llvm.loop !5767

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5769
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5646, metadata !DIExpression()), !dbg !5770
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5770
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5689, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5692, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8* %30, metadata !5695, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i32 -1, metadata !5696, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i32 -1, metadata !5697, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8* null, metadata !5698, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8* %14, metadata !5699, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8 0, metadata !5700, metadata !DIExpression()), !dbg !5771
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5772
  call void @llvm.dbg.value(metadata i8* %39, metadata !5630, metadata !DIExpression()), !dbg !5757
  %40 = load i24, i24* %15, align 8, !dbg !5773
  %41 = and i24 %40, 256, !dbg !5773
  %42 = icmp eq i24 %41, 0, !dbg !5773
  br i1 %42, label %51, label %43, !dbg !5775

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5776
  call void @llvm.dbg.value(metadata i8* %44, metadata !5631, metadata !DIExpression()), !dbg !5757
  %45 = bitcast i8* %27 to i32*, !dbg !5776
  %46 = load i32, i32* %45, align 4, !dbg !5776
  call void @llvm.dbg.value(metadata i32 %46, metadata !5696, metadata !DIExpression()), !dbg !5771
  %47 = icmp slt i32 %46, 0, !dbg !5778
  br i1 %47, label %48, label %56, !dbg !5780

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5781
  store i24 %49, i24* %15, align 8, !dbg !5781
  %50 = sub nsw i32 0, %46, !dbg !5783
  call void @llvm.dbg.value(metadata i32 %50, metadata !5696, metadata !DIExpression()), !dbg !5771
  br label %56, !dbg !5784

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5785
  %53 = icmp eq i24 %52, 0, !dbg !5785
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5787
  br label %56, !dbg !5787

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5788
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5771
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5631, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %58, metadata !5696, metadata !DIExpression()), !dbg !5771
  %60 = and i24 %57, 1024, !dbg !5788
  %61 = icmp eq i24 %60, 0, !dbg !5788
  br i1 %61, label %69, label %62, !dbg !5789

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5790
  call void @llvm.dbg.value(metadata i8* %63, metadata !5631, metadata !DIExpression()), !dbg !5757
  %64 = bitcast i8* %59 to i32*, !dbg !5790
  %65 = load i32, i32* %64, align 4, !dbg !5790
  call void @llvm.dbg.value(metadata i32 %65, metadata !5701, metadata !DIExpression()), !dbg !5791
  %66 = icmp slt i32 %65, 0, !dbg !5792
  br i1 %66, label %67, label %74, !dbg !5794

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5795
  store i24 %68, i24* %15, align 8, !dbg !5795
  br label %74, !dbg !5797

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5798
  %71 = icmp eq i24 %70, 0, !dbg !5798
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5800
  br label %74, !dbg !5800

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5801
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5771
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5771
  call void @llvm.dbg.value(metadata i8* %77, metadata !5631, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %76, metadata !5697, metadata !DIExpression()), !dbg !5771
  store i32 0, i32* %16, align 4, !dbg !5802
  store i32 0, i32* %17, align 8, !dbg !5803
  %78 = lshr i24 %75, 16, !dbg !5801
  call void @llvm.dbg.value(metadata i24 %78, metadata !5704, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5771
  %79 = lshr i24 %75, 11, !dbg !5804
  %80 = and i24 %79, 15, !dbg !5804
  %81 = zext i24 %80 to i32, !dbg !5804
  call void @llvm.dbg.value(metadata i32 %81, metadata !5705, metadata !DIExpression()), !dbg !5771
  %82 = trunc i24 %78 to i3, !dbg !5805
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5805

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5806

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5809
  call void @llvm.dbg.value(metadata i8* %85, metadata !5631, metadata !DIExpression()), !dbg !5757
  %86 = bitcast i8* %77 to i32*, !dbg !5809
  %87 = load i32, i32* %86, align 4, !dbg !5809
  %88 = sext i32 %87 to i64, !dbg !5809
  store i64 %88, i64* %20, align 8, !dbg !5811
  br label %115, !dbg !5812

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5813
  call void @llvm.dbg.value(metadata i8* %90, metadata !5631, metadata !DIExpression()), !dbg !5757
  %91 = bitcast i8* %77 to i32*, !dbg !5813
  %92 = load i32, i32* %91, align 4, !dbg !5813
  %93 = sext i32 %92 to i64, !dbg !5813
  store i64 %93, i64* %20, align 8, !dbg !5816
  br label %115, !dbg !5817

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5818
  %96 = add i32 %95, 7, !dbg !5818
  %97 = and i32 %96, -8, !dbg !5818
  %98 = inttoptr i32 %97 to i8*, !dbg !5818
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5818
  call void @llvm.dbg.value(metadata i8* %99, metadata !5631, metadata !DIExpression()), !dbg !5757
  %100 = inttoptr i32 %97 to i64*, !dbg !5818
  %101 = load i64, i64* %100, align 8, !dbg !5818
  store i64 %101, i64* %20, align 8, !dbg !5819
  br label %115, !dbg !5820

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5821
  %104 = add i32 %103, 7, !dbg !5821
  %105 = and i32 %104, -8, !dbg !5821
  %106 = inttoptr i32 %105 to i8*, !dbg !5821
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5821
  call void @llvm.dbg.value(metadata i8* %107, metadata !5631, metadata !DIExpression()), !dbg !5757
  %108 = inttoptr i32 %105 to i64*, !dbg !5821
  %109 = load i64, i64* %108, align 8, !dbg !5821
  store i64 %109, i64* %20, align 8, !dbg !5822
  br label %115, !dbg !5823

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5824
  call void @llvm.dbg.value(metadata i8* %111, metadata !5631, metadata !DIExpression()), !dbg !5757
  %112 = bitcast i8* %77 to i32*, !dbg !5824
  %113 = load i32, i32* %112, align 4, !dbg !5824
  %114 = sext i32 %113 to i64, !dbg !5825
  store i64 %114, i64* %20, align 8, !dbg !5826
  br label %115, !dbg !5827

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5828
  call void @llvm.dbg.value(metadata i8* %117, metadata !5631, metadata !DIExpression()), !dbg !5757
  %118 = trunc i24 %79 to i4, !dbg !5829
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5829

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5830
  %121 = ashr exact i64 %120, 56, !dbg !5830
  store i64 %121, i64* %20, align 8, !dbg !5833
  br label %177, !dbg !5834

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5835
  %124 = ashr exact i64 %123, 48, !dbg !5835
  store i64 %124, i64* %20, align 8, !dbg !5838
  br label %177, !dbg !5839

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5840

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5843
  call void @llvm.dbg.value(metadata i8* %127, metadata !5631, metadata !DIExpression()), !dbg !5757
  %128 = bitcast i8* %77 to i32*, !dbg !5843
  %129 = load i32, i32* %128, align 4, !dbg !5843
  %130 = zext i32 %129 to i64, !dbg !5843
  store i64 %130, i64* %20, align 8, !dbg !5845
  br label %157, !dbg !5846

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5847
  call void @llvm.dbg.value(metadata i8* %132, metadata !5631, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i8* %132, metadata !5631, metadata !DIExpression()), !dbg !5757
  %133 = bitcast i8* %77 to i32*, !dbg !5847
  %134 = load i32, i32* %133, align 4, !dbg !5847
  %135 = zext i32 %134 to i64, !dbg !5847
  store i64 %135, i64* %20, align 8, !dbg !5847
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5849
  %138 = add i32 %137, 7, !dbg !5849
  %139 = and i32 %138, -8, !dbg !5849
  %140 = inttoptr i32 %139 to i8*, !dbg !5849
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5849
  call void @llvm.dbg.value(metadata i8* %141, metadata !5631, metadata !DIExpression()), !dbg !5757
  %142 = inttoptr i32 %139 to i64*, !dbg !5849
  %143 = load i64, i64* %142, align 8, !dbg !5849
  store i64 %143, i64* %20, align 8, !dbg !5850
  br label %157, !dbg !5851

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5852
  %146 = add i32 %145, 7, !dbg !5852
  %147 = and i32 %146, -8, !dbg !5852
  %148 = inttoptr i32 %147 to i8*, !dbg !5852
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5852
  call void @llvm.dbg.value(metadata i8* %149, metadata !5631, metadata !DIExpression()), !dbg !5757
  %150 = inttoptr i32 %147 to i64*, !dbg !5852
  %151 = load i64, i64* %150, align 8, !dbg !5852
  store i64 %151, i64* %20, align 8, !dbg !5853
  br label %157, !dbg !5854

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5855
  call void @llvm.dbg.value(metadata i8* %153, metadata !5631, metadata !DIExpression()), !dbg !5757
  %154 = bitcast i8* %77 to i32*, !dbg !5855
  %155 = load i32, i32* %154, align 4, !dbg !5855
  %156 = zext i32 %155 to i64, !dbg !5856
  store i64 %156, i64* %20, align 8, !dbg !5857
  br label %157, !dbg !5858

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5859
  call void @llvm.dbg.value(metadata i8* %159, metadata !5631, metadata !DIExpression()), !dbg !5757
  %160 = trunc i24 %79 to i4, !dbg !5860
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5860

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5861
  store i64 %162, i64* %20, align 8, !dbg !5864
  br label %177, !dbg !5865

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5866
  store i64 %164, i64* %20, align 8, !dbg !5869
  br label %177, !dbg !5870

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5871
  %167 = add i32 %166, 7, !dbg !5871
  %168 = and i32 %167, -8, !dbg !5871
  %169 = inttoptr i32 %168 to i8*, !dbg !5871
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5871
  call void @llvm.dbg.value(metadata i8* %170, metadata !5631, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i8* %170, metadata !5631, metadata !DIExpression()), !dbg !5757
  %171 = inttoptr i32 %168 to double*, !dbg !5871
  %172 = load double, double* %171, align 8, !dbg !5871
  store double %172, double* %19, align 8, !dbg !5871
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5875
  call void @llvm.dbg.value(metadata i8* %174, metadata !5631, metadata !DIExpression()), !dbg !5757
  %175 = bitcast i8* %77 to i8**, !dbg !5875
  %176 = load i8*, i8** %175, align 4, !dbg !5875
  store i8* %176, i8** %18, align 8, !dbg !5878
  br label %177, !dbg !5879

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5771
  call void @llvm.dbg.value(metadata i8* %178, metadata !5631, metadata !DIExpression()), !dbg !5757
  %179 = and i24 %75, 3, !dbg !5880
  %180 = icmp eq i24 %179, 0, !dbg !5880
  br i1 %180, label %185, label %181, !dbg !5880

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %182, metadata !5706, metadata !DIExpression()), !dbg !5882
  %183 = icmp slt i32 %182, 0, !dbg !5883
  %184 = add i32 %182, %29, !dbg !5881
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5885
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5886

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %188, metadata !5710, metadata !DIExpression()), !dbg !5888
  %189 = icmp slt i32 %188, 0, !dbg !5889
  %190 = add i32 %29, 1, !dbg !5887
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5891
  call void @llvm.dbg.value(metadata i8* %192, metadata !5698, metadata !DIExpression()), !dbg !5771
  %193 = icmp sgt i32 %76, -1, !dbg !5892
  br i1 %193, label %194, label %196, !dbg !5894

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %195, metadata !5713, metadata !DIExpression()), !dbg !5897
  br label %241, !dbg !5898

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5899
  call void @llvm.dbg.value(metadata i32 %197, metadata !5713, metadata !DIExpression()), !dbg !5897
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5698, metadata !DIExpression()), !dbg !5771
  %199 = load i64, i64* %20, align 8, !dbg !5901
  %200 = trunc i64 %199 to i8, !dbg !5902
  store i8 %200, i8* %10, align 1, !dbg !5903
  call void @llvm.dbg.value(metadata i8* %23, metadata !5699, metadata !DIExpression()), !dbg !5771
  br label %245, !dbg !5904

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5905
  %203 = icmp eq i24 %202, 0, !dbg !5905
  %204 = trunc i24 %75 to i8, !dbg !5907
  %205 = shl i8 %204, 1, !dbg !5907
  %206 = and i8 %205, 32, !dbg !5907
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5907
  call void @llvm.dbg.value(metadata i8 %207, metadata !5700, metadata !DIExpression()), !dbg !5771
  %208 = load i64, i64* %20, align 8, !dbg !5908
  call void @llvm.dbg.value(metadata i64 %208, metadata !5638, metadata !DIExpression()), !dbg !5757
  %209 = icmp slt i64 %208, 0, !dbg !5909
  br i1 %209, label %210, label %212, !dbg !5911

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5700, metadata !DIExpression()), !dbg !5771
  %211 = sub nsw i64 0, %208, !dbg !5912
  store i64 %211, i64* %20, align 8, !dbg !5914
  br label %212, !dbg !5915

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5771
  call void @llvm.dbg.value(metadata i8 %213, metadata !5700, metadata !DIExpression()), !dbg !5771
  %214 = load i64, i64* %20, align 8, !dbg !5916
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5917
  call void @llvm.dbg.value(metadata i8* %215, metadata !5698, metadata !DIExpression()), !dbg !5771
  br label %216, !dbg !5918

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5919
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5920
  call void @llvm.dbg.value(metadata i8* %218, metadata !5698, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8 %217, metadata !5700, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.label(metadata !5756), !dbg !5921
  %219 = icmp sgt i32 %76, -1, !dbg !5922
  br i1 %219, label %222, label %220, !dbg !5923

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5924
  br label %245, !dbg !5923

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5926
  %224 = sub i32 %22, %223, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %224, metadata !5715, metadata !DIExpression()), !dbg !5927
  %225 = load i24, i24* %15, align 8, !dbg !5928
  %226 = and i24 %225, -65, !dbg !5928
  store i24 %226, i24* %15, align 8, !dbg !5928
  %227 = icmp ugt i32 %76, %224, !dbg !5929
  br i1 %227, label %228, label %245, !dbg !5931

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5932
  store i32 %229, i32* %16, align 4, !dbg !5934
  br label %245, !dbg !5935

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5936
  %232 = icmp eq i8* %231, null, !dbg !5938
  br i1 %232, label %245, label %233, !dbg !5939

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5940
  %235 = zext i32 %234 to i64, !dbg !5940
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5942
  call void @llvm.dbg.value(metadata i8* %236, metadata !5698, metadata !DIExpression()), !dbg !5771
  %237 = load i24, i24* %15, align 8, !dbg !5943
  %238 = or i24 %237, 1048576, !dbg !5943
  store i24 %238, i24* %15, align 8, !dbg !5943
  store i8 120, i8* %21, align 1, !dbg !5944
  br label %216, !dbg !5945

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5946
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5949
  br label %363, !dbg !5950

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5951
  call void @llvm.dbg.value(metadata i32 %242, metadata !5713, metadata !DIExpression()), !dbg !5897
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5952
  call void @llvm.dbg.value(metadata i32 -1, metadata !5697, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i32 %29, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i8* %192, metadata !5698, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8* %243, metadata !5699, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8 0, metadata !5700, metadata !DIExpression()), !dbg !5771
  %244 = icmp eq i8* %192, null, !dbg !5953
  br i1 %244, label %363, label %245, !dbg !5955, !llvm.loop !5767

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5924
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5771
  call void @llvm.dbg.value(metadata i32 0, metadata !5719, metadata !DIExpression()), !dbg !5771
  %250 = zext i8 %249 to i32, !dbg !5956
  %251 = icmp eq i8 %249, 0, !dbg !5958
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  call void @llvm.dbg.value(metadata i32 undef, metadata !5718, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  call void @llvm.dbg.value(metadata i32 undef, metadata !5718, metadata !DIExpression()), !dbg !5771
  %252 = icmp sgt i32 %58, 0, !dbg !5959
  br i1 %252, label %253, label %302, !dbg !5960

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5924
  %255 = icmp eq i24 %254, 0, !dbg !5924
  %256 = ptrtoint i8* %248 to i32, !dbg !5961
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  %257 = ptrtoint i8* %247 to i32, !dbg !5961
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  %258 = xor i1 %251, true, !dbg !5962
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  %259 = sext i1 %258 to i32, !dbg !5962
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  %260 = lshr i24 %246, 19, !dbg !5963
  %261 = and i24 %260, 1, !dbg !5963
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5963
  %263 = zext i24 %262 to i32, !dbg !5963
  %264 = add i32 %257, %259, !dbg !5963
  %265 = add i32 %256, %263, !dbg !5963
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  %266 = and i24 %246, 4194304, !dbg !5964
  %267 = icmp eq i24 %266, 0, !dbg !5964
  %268 = load i32, i32* %16, align 4, !dbg !5966
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5771
  call void @llvm.dbg.value(metadata i32 undef, metadata !5718, metadata !DIExpression()), !dbg !5771
  %269 = load i32, i32* %17, align 8, !dbg !5967
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5967
  call void @llvm.dbg.value(metadata i32 undef, metadata !5718, metadata !DIExpression()), !dbg !5771
  %271 = add i32 %264, %58, !dbg !5967
  %272 = add i32 %265, %268, !dbg !5967
  %273 = add i32 %272, %270, !dbg !5968
  %274 = sub i32 %271, %273, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %274, metadata !5696, metadata !DIExpression()), !dbg !5771
  %275 = and i24 %246, 4, !dbg !5969
  %276 = icmp eq i24 %275, 0, !dbg !5969
  br i1 %276, label %277, label %302, !dbg !5970

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5720, metadata !DIExpression()), !dbg !5971
  %278 = and i24 %246, 64, !dbg !5972
  %279 = icmp eq i24 %278, 0, !dbg !5972
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5973
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5973
  %282 = select i1 %279, i32 32, i32 48, !dbg !5973
  br i1 %280, label %287, label %283, !dbg !5973

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5974
  call void @llvm.dbg.value(metadata i32 %284, metadata !5725, metadata !DIExpression()), !dbg !5975
  %285 = icmp slt i32 %284, 0, !dbg !5976
  %286 = add i32 %29, 1, !dbg !5974
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5771
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %290, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i8 undef, metadata !5720, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i8 %288, metadata !5700, metadata !DIExpression()), !dbg !5771
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5978
  %292 = add i32 %291, -1, !dbg !5978
  br label %293, !dbg !5978

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5979
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %295, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %294, metadata !5696, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i32 %294, metadata !5696, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5771
  %296 = icmp sgt i32 %294, 0, !dbg !5980
  br i1 %296, label %297, label %302, !dbg !5978

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %298, metadata !5696, metadata !DIExpression()), !dbg !5771
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %299, metadata !5731, metadata !DIExpression()), !dbg !5983
  %300 = icmp slt i32 %299, 0, !dbg !5984
  %301 = add i32 %295, 1, !dbg !5982
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %300, label %361, label %293, !llvm.loop !5986

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5771
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5771
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %305, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %304, metadata !5696, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.value(metadata i8 %303, metadata !5700, metadata !DIExpression()), !dbg !5771
  %306 = icmp eq i8 %303, 0, !dbg !5988
  br i1 %306, label %312, label %307, !dbg !5989

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5990
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %309, metadata !5734, metadata !DIExpression()), !dbg !5992
  %310 = icmp slt i32 %309, 0, !dbg !5993
  %311 = add i32 %305, 1, !dbg !5991
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %313, metadata !5637, metadata !DIExpression()), !dbg !5757
  %314 = lshr i24 %246, 20, !dbg !5995
  %315 = lshr i24 %246, 19, !dbg !5996
  %316 = or i24 %314, %315, !dbg !5997
  %317 = and i24 %316, 1, !dbg !5997
  %318 = icmp eq i24 %317, 0, !dbg !5997
  br i1 %318, label %323, label %319, !dbg !5998

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %320, metadata !5738, metadata !DIExpression()), !dbg !6000
  %321 = icmp slt i32 %320, 0, !dbg !6001
  %322 = add i32 %313, 1, !dbg !5999
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %324, metadata !5637, metadata !DIExpression()), !dbg !5757
  %325 = and i24 %246, 1048576, !dbg !6003
  %326 = icmp eq i24 %325, 0, !dbg !6003
  br i1 %326, label %333, label %327, !dbg !6004

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6005
  %329 = zext i8 %328 to i32, !dbg !6005
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !6005
  call void @llvm.dbg.value(metadata i32 %330, metadata !5744, metadata !DIExpression()), !dbg !6006
  %331 = icmp slt i32 %330, 0, !dbg !6007
  %332 = add i32 %324, 1, !dbg !6005
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %334, metadata !5637, metadata !DIExpression()), !dbg !5757
  %335 = load i32, i32* %16, align 4, !dbg !6009
  call void @llvm.dbg.value(metadata i32 %335, metadata !5719, metadata !DIExpression()), !dbg !5771
  br label %336, !dbg !6010

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6011
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %338, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %337, metadata !5719, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5771
  %339 = icmp sgt i32 %337, 0, !dbg !6012
  br i1 %339, label %340, label %345, !dbg !6010

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6013
  call void @llvm.dbg.value(metadata i32 %341, metadata !5719, metadata !DIExpression()), !dbg !5771
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6014
  call void @llvm.dbg.value(metadata i32 %342, metadata !5748, metadata !DIExpression()), !dbg !6015
  %343 = icmp slt i32 %342, 0, !dbg !6016
  %344 = add i32 %338, 1, !dbg !6014
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %343, label %361, label %336, !llvm.loop !6018

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %346, metadata !5751, metadata !DIExpression()), !dbg !6021
  %347 = icmp slt i32 %346, 0, !dbg !6022
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %349, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %304, metadata !5696, metadata !DIExpression()), !dbg !5771
  %350 = icmp sgt i32 %304, 0, !dbg !6024
  br i1 %350, label %351, label %363, !dbg !6025

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6025
  %353 = add i32 %352, %338, !dbg !6025
  br label %354, !dbg !6025

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %355, metadata !5696, metadata !DIExpression()), !dbg !5771
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !6026
  call void @llvm.dbg.value(metadata i32 %356, metadata !5753, metadata !DIExpression()), !dbg !6027
  %357 = icmp slt i32 %356, 0, !dbg !6028
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6030
  call void @llvm.dbg.value(metadata i32 undef, metadata !5637, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5757
  call void @llvm.dbg.value(metadata i32 %359, metadata !5696, metadata !DIExpression()), !dbg !5771
  %360 = icmp sgt i32 %355, 1, !dbg !6024
  br i1 %360, label %354, label %363, !dbg !6025, !llvm.loop !6031

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5768
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5761
  call void @llvm.dbg.value(metadata i32 %364, metadata !5637, metadata !DIExpression()), !dbg !5757
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5768
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5757
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6033
  ret i32 %366, !dbg !6033
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6034 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6038, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.value(metadata i8* %1, metadata !6039, metadata !DIExpression()), !dbg !6040
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6041
  store i24 0, i24* %3, align 4, !dbg !6041
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6041
  store i8 0, i8* %4, align 1, !dbg !6041
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6041
  store i32 0, i32* %5, align 4, !dbg !6041
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6041
  store i32 0, i32* %6, align 4, !dbg !6041
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %7, metadata !6039, metadata !DIExpression()), !dbg !6040
  %8 = load i8, i8* %7, align 1, !dbg !6043
  %9 = icmp eq i8 %8, 37, !dbg !6045
  br i1 %9, label %10, label %12, !dbg !6046

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6047
  call void @llvm.dbg.value(metadata i8* %11, metadata !6039, metadata !DIExpression()), !dbg !6040
  store i8 37, i8* %4, align 1, !dbg !6049
  br label %18, !dbg !6050

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !6051
  call void @llvm.dbg.value(metadata i8* %13, metadata !6039, metadata !DIExpression()), !dbg !6040
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !6052
  call void @llvm.dbg.value(metadata i8* %14, metadata !6039, metadata !DIExpression()), !dbg !6040
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !6053
  call void @llvm.dbg.value(metadata i8* %15, metadata !6039, metadata !DIExpression()), !dbg !6040
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !6054
  call void @llvm.dbg.value(metadata i8* %16, metadata !6039, metadata !DIExpression()), !dbg !6040
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !6055
  call void @llvm.dbg.value(metadata i8* %17, metadata !6039, metadata !DIExpression()), !dbg !6040
  br label %18, !dbg !6056

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6040
  ret i8* %19, !dbg !6057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6058 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6062, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %1, metadata !6063, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %2, metadata !6064, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %3, metadata !6065, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i32 0, metadata !6066, metadata !DIExpression()), !dbg !6069
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6070

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6071
  call void @llvm.dbg.value(metadata i32 %9, metadata !6066, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i8* %8, metadata !6064, metadata !DIExpression()), !dbg !6069
  %10 = icmp ult i8* %8, %3, !dbg !6072
  br i1 %10, label %11, label %13, !dbg !6073

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6074
  br label %17, !dbg !6073

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6075

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6076
  %16 = icmp eq i8 %15, 0, !dbg !6075
  br i1 %16, label %24, label %17, !dbg !6070

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6074
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6077
  call void @llvm.dbg.value(metadata i8* %19, metadata !6064, metadata !DIExpression()), !dbg !6069
  %20 = zext i8 %18 to i32, !dbg !6078
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6079
  call void @llvm.dbg.value(metadata i32 %21, metadata !6067, metadata !DIExpression()), !dbg !6080
  %22 = icmp slt i32 %21, 0, !dbg !6081
  %23 = add i32 %9, 1, !dbg !6083
  call void @llvm.dbg.value(metadata i32 undef, metadata !6066, metadata !DIExpression()), !dbg !6069
  br i1 %22, label %24, label %7, !llvm.loop !6084

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6069
  ret i32 %25, !dbg !6086
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6087 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6091, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6092, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8* %2, metadata !6093, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8* %3, metadata !6094, metadata !DIExpression()), !dbg !6101
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6102
  %6 = load i8, i8* %5, align 1, !dbg !6102
  %7 = zext i8 %6 to i32, !dbg !6103
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6104
  %9 = icmp eq i32 %8, 0, !dbg !6104
  call void @llvm.dbg.value(metadata i1 %9, metadata !6095, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6101
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6105
  call void @llvm.dbg.value(metadata i32 %10, metadata !6096, metadata !DIExpression()), !dbg !6101
  %11 = ptrtoint i8* %3 to i32, !dbg !6106
  %12 = ptrtoint i8* %2 to i32, !dbg !6106
  %13 = sub i32 %11, %12, !dbg !6106
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6107
  call void @llvm.dbg.value(metadata i8* %14, metadata !6098, metadata !DIExpression()), !dbg !6101
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6108

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6101
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6091, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8* %18, metadata !6098, metadata !DIExpression()), !dbg !6101
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6109
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6110
  call void @llvm.dbg.value(metadata i32 %25, metadata !6099, metadata !DIExpression()), !dbg !6111
  %26 = icmp ult i32 %25, 10, !dbg !6112
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6113
  %28 = add i32 %27, %25, !dbg !6111
  %29 = trunc i32 %28 to i8, !dbg !6113
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6114
  call void @llvm.dbg.value(metadata i8* %30, metadata !6098, metadata !DIExpression()), !dbg !6101
  store i8 %29, i8* %30, align 1, !dbg !6115
  call void @llvm.dbg.value(metadata i64 %22, metadata !6091, metadata !DIExpression()), !dbg !6101
  %31 = icmp uge i64 %19, %15, !dbg !6116
  %32 = icmp ugt i8* %30, %2, !dbg !6117
  %33 = and i1 %31, %32, !dbg !6117
  br i1 %33, label %17, label %34, !dbg !6118, !llvm.loop !6119

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6121
  %36 = load i24, i24* %35, align 4, !dbg !6121
  %37 = and i24 %36, 32, !dbg !6121
  %38 = icmp eq i24 %37, 0, !dbg !6121
  br i1 %38, label %44, label %39, !dbg !6123

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6124

40:                                               ; preds = %39
  br label %41, !dbg !6126

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6130
  store i24 %43, i24* %35, align 4, !dbg !6130
  br label %44, !dbg !6131

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6132 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6138, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i8* %1, metadata !6139, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.value(metadata i32 %2, metadata !6140, metadata !DIExpression()), !dbg !6141
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6142
  %5 = load i24, i24* %4, align 4, !dbg !6142
  %6 = lshr i24 %5, 11, !dbg !6142
  %7 = and i24 %6, 15, !dbg !6142
  %8 = zext i24 %7 to i32, !dbg !6142
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6143

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6144
  store i32 %2, i32* %10, align 4, !dbg !6146
  br label %28, !dbg !6147

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6148
  store i8 %12, i8* %1, align 1, !dbg !6149
  br label %28, !dbg !6150

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6151
  %15 = bitcast i8* %1 to i16*, !dbg !6152
  store i16 %14, i16* %15, align 2, !dbg !6153
  br label %28, !dbg !6154

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6155
  store i32 %2, i32* %17, align 4, !dbg !6156
  br label %28, !dbg !6157

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6158
  %20 = bitcast i8* %1 to i64*, !dbg !6159
  store i64 %19, i64* %20, align 8, !dbg !6160
  br label %28, !dbg !6161

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6162
  %23 = bitcast i8* %1 to i64*, !dbg !6163
  store i64 %22, i64* %23, align 8, !dbg !6164
  br label %28, !dbg !6165

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6166
  store i32 %2, i32* %25, align 4, !dbg !6167
  br label %28, !dbg !6168

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6169
  store i32 %2, i32* %27, align 4, !dbg !6170
  br label %28, !dbg !6171

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6172
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6176, metadata !DIExpression()), !dbg !6177
  %2 = add i32 %0, -65, !dbg !6178
  %3 = icmp ult i32 %2, 26, !dbg !6179
  %4 = zext i1 %3 to i32, !dbg !6179
  ret i32 %4, !dbg !6180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6181 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6185, metadata !DIExpression()), !dbg !6186
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6187

2:                                                ; preds = %1
  br label %4, !dbg !6188

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6190

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6191
  ret i32 %5, !dbg !6192
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6193 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6195, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i8* %1, metadata !6196, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i8 1, metadata !6197, metadata !DIExpression()), !dbg !6198
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6199

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6197, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i8* %5, metadata !6196, metadata !DIExpression()), !dbg !6198
  %6 = load i8, i8* %5, align 1, !dbg !6200
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6202

7:                                                ; preds = %4
  br label %11, !dbg !6203

8:                                                ; preds = %4
  br label %11, !dbg !6205

9:                                                ; preds = %4
  br label %11, !dbg !6206

10:                                               ; preds = %4
  br label %11, !dbg !6207

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6208
  %14 = or i24 %13, %12, !dbg !6208
  store i24 %14, i24* %3, align 4, !dbg !6208
  call void @llvm.dbg.value(metadata i8 poison, metadata !6197, metadata !DIExpression()), !dbg !6198
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6196, metadata !DIExpression()), !dbg !6198
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6197, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i8* %15, metadata !6196, metadata !DIExpression()), !dbg !6198
  %17 = load i24, i24* %3, align 4, !dbg !6209
  %18 = and i24 %17, 68, !dbg !6211
  %19 = icmp eq i24 %18, 68, !dbg !6211
  br i1 %19, label %20, label %22, !dbg !6211

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6212
  store i24 %21, i24* %3, align 4, !dbg !6212
  br label %22, !dbg !6214

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6215
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6216 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6218, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %1, metadata !6219, metadata !DIExpression()), !dbg !6222
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6223
  %5 = load i24, i24* %4, align 4, !dbg !6224
  %6 = or i24 %5, 128, !dbg !6224
  store i24 %6, i24* %4, align 4, !dbg !6224
  call void @llvm.dbg.value(metadata i8* %1, metadata !6219, metadata !DIExpression()), !dbg !6222
  %7 = load i8, i8* %1, align 1, !dbg !6225
  %8 = icmp eq i8 %7, 42, !dbg !6227
  br i1 %8, label %9, label %12, !dbg !6228

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6229
  store i24 %10, i24* %4, align 4, !dbg !6229
  call void @llvm.dbg.value(metadata i8* %1, metadata !6219, metadata !DIExpression()), !dbg !6222
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6231
  call void @llvm.dbg.value(metadata i8* %11, metadata !6219, metadata !DIExpression()), !dbg !6222
  store i8* %11, i8** %3, align 4, !dbg !6231
  br label %29, !dbg !6232

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6220, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8** %3, metadata !6219, metadata !DIExpression(DW_OP_deref)), !dbg !6222
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6233
  call void @llvm.dbg.value(metadata i32 %13, metadata !6221, metadata !DIExpression()), !dbg !6222
  %14 = load i8*, i8** %3, align 4, !dbg !6234
  call void @llvm.dbg.value(metadata i8* %14, metadata !6219, metadata !DIExpression()), !dbg !6222
  %15 = icmp eq i8* %14, %1, !dbg !6236
  br i1 %15, label %29, label %16, !dbg !6237

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6238
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6240
  store i32 %13, i32* %18, align 4, !dbg !6241
  %19 = lshr i32 %13, 31, !dbg !6242
  %20 = lshr i24 %17, 1, !dbg !6243
  %21 = and i24 %20, 1, !dbg !6243
  %22 = zext i24 %21 to i32, !dbg !6243
  %23 = or i32 %19, %22, !dbg !6243
  %24 = trunc i32 %23 to i24, !dbg !6243
  %25 = shl nuw nsw i24 %24, 1, !dbg !6243
  %26 = and i24 %17, -131, !dbg !6243
  %27 = or i24 %26, 128, !dbg !6243
  %28 = or i24 %25, %27, !dbg !6243
  store i24 %28, i24* %4, align 4, !dbg !6243
  br label %29, !dbg !6244

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6222
  ret i8* %30, !dbg !6245
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6246 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6248, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i8* %1, metadata !6249, metadata !DIExpression()), !dbg !6251
  %4 = load i8, i8* %1, align 1, !dbg !6252
  %5 = icmp eq i8 %4, 46, !dbg !6253
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6254
  %7 = load i24, i24* %6, align 4, !dbg !6255
  %8 = select i1 %5, i24 512, i24 0, !dbg !6255
  %9 = and i24 %7, -513, !dbg !6255
  %10 = or i24 %9, %8, !dbg !6255
  store i24 %10, i24* %6, align 4, !dbg !6255
  br i1 %5, label %11, label %32, !dbg !6256

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6249, metadata !DIExpression()), !dbg !6251
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6257
  call void @llvm.dbg.value(metadata i8* %12, metadata !6249, metadata !DIExpression()), !dbg !6251
  store i8* %12, i8** %3, align 4, !dbg !6257
  %13 = load i8, i8* %12, align 1, !dbg !6258
  %14 = icmp eq i8 %13, 42, !dbg !6260
  br i1 %14, label %15, label %18, !dbg !6261

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6262
  store i24 %16, i24* %6, align 4, !dbg !6262
  call void @llvm.dbg.value(metadata i8* %12, metadata !6249, metadata !DIExpression()), !dbg !6251
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6264
  call void @llvm.dbg.value(metadata i8* %17, metadata !6249, metadata !DIExpression()), !dbg !6251
  store i8* %17, i8** %3, align 4, !dbg !6264
  br label %32, !dbg !6265

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6249, metadata !DIExpression(DW_OP_deref)), !dbg !6251
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6266
  call void @llvm.dbg.value(metadata i32 %19, metadata !6250, metadata !DIExpression()), !dbg !6251
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6267
  store i32 %19, i32* %20, align 4, !dbg !6268
  %21 = lshr i32 %19, 31, !dbg !6269
  %22 = load i24, i24* %6, align 4, !dbg !6270
  %23 = lshr i24 %22, 1, !dbg !6270
  %24 = and i24 %23, 1, !dbg !6270
  %25 = zext i24 %24 to i32, !dbg !6270
  %26 = or i32 %21, %25, !dbg !6270
  %27 = trunc i32 %26 to i24, !dbg !6270
  %28 = shl nuw nsw i24 %27, 1, !dbg !6270
  %29 = and i24 %22, -3, !dbg !6270
  %30 = or i24 %28, %29, !dbg !6270
  store i24 %30, i24* %6, align 4, !dbg !6270
  %31 = load i8*, i8** %3, align 4, !dbg !6271
  call void @llvm.dbg.value(metadata i8* %31, metadata !6249, metadata !DIExpression()), !dbg !6251
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6251
  ret i8* %33, !dbg !6272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6273 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6275, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i8* %1, metadata !6276, metadata !DIExpression()), !dbg !6277
  %3 = load i8, i8* %1, align 1, !dbg !6278
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6279

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6280
  call void @llvm.dbg.value(metadata i8* %5, metadata !6276, metadata !DIExpression()), !dbg !6277
  %6 = load i8, i8* %5, align 1, !dbg !6283
  %7 = icmp eq i8 %6, 104, !dbg !6284
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6285
  %9 = load i24, i24* %8, align 4, !dbg !6285
  %10 = and i24 %9, -30721, !dbg !6285
  br i1 %7, label %11, label %14, !dbg !6286

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6287
  store i24 %12, i24* %8, align 4, !dbg !6287
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6289
  call void @llvm.dbg.value(metadata i8* %13, metadata !6276, metadata !DIExpression()), !dbg !6277
  br label %56, !dbg !6290

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6291
  store i24 %15, i24* %8, align 4, !dbg !6291
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6293
  call void @llvm.dbg.value(metadata i8* %17, metadata !6276, metadata !DIExpression()), !dbg !6277
  %18 = load i8, i8* %17, align 1, !dbg !6295
  %19 = icmp eq i8 %18, 108, !dbg !6296
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6297
  %21 = load i24, i24* %20, align 4, !dbg !6297
  %22 = and i24 %21, -30721, !dbg !6297
  br i1 %19, label %23, label %26, !dbg !6298

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6299
  store i24 %24, i24* %20, align 4, !dbg !6299
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6301
  call void @llvm.dbg.value(metadata i8* %25, metadata !6276, metadata !DIExpression()), !dbg !6277
  br label %56, !dbg !6302

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6303
  store i24 %27, i24* %20, align 4, !dbg !6303
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6305
  %30 = load i24, i24* %29, align 4, !dbg !6306
  %31 = and i24 %30, -30721, !dbg !6306
  %32 = or i24 %31, 10240, !dbg !6306
  store i24 %32, i24* %29, align 4, !dbg !6306
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6307
  call void @llvm.dbg.value(metadata i8* %33, metadata !6276, metadata !DIExpression()), !dbg !6277
  br label %56, !dbg !6308

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6309
  %36 = load i24, i24* %35, align 4, !dbg !6310
  %37 = and i24 %36, -30721, !dbg !6310
  %38 = or i24 %37, 12288, !dbg !6310
  store i24 %38, i24* %35, align 4, !dbg !6310
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6311
  call void @llvm.dbg.value(metadata i8* %39, metadata !6276, metadata !DIExpression()), !dbg !6277
  br label %56, !dbg !6312

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6313
  %42 = load i24, i24* %41, align 4, !dbg !6314
  %43 = and i24 %42, -30721, !dbg !6314
  %44 = or i24 %43, 14336, !dbg !6314
  store i24 %44, i24* %41, align 4, !dbg !6314
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6315
  call void @llvm.dbg.value(metadata i8* %45, metadata !6276, metadata !DIExpression()), !dbg !6277
  br label %56, !dbg !6316

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6317
  %48 = load i24, i24* %47, align 4, !dbg !6318
  %49 = and i24 %48, -30723, !dbg !6318
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6319
  call void @llvm.dbg.value(metadata i8* %50, metadata !6276, metadata !DIExpression()), !dbg !6277
  %51 = or i24 %49, 16386, !dbg !6320
  store i24 %51, i24* %47, align 4, !dbg !6320
  br label %56, !dbg !6321

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6322
  %54 = load i24, i24* %53, align 4, !dbg !6323
  %55 = and i24 %54, -30721, !dbg !6323
  store i24 %55, i24* %53, align 4, !dbg !6323
  br label %56, !dbg !6324

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6276, metadata !DIExpression()), !dbg !6277
  ret i8* %57, !dbg !6325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6326 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6328, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata i8* %1, metadata !6329, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata i8 0, metadata !6330, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata i8* %1, metadata !6329, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6333
  %3 = load i8, i8* %1, align 1, !dbg !6334
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6335
  store i8 %3, i8* %4, align 1, !dbg !6336
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6337

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6338

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6339
  %9 = load i24, i24* %8, align 4, !dbg !6339
  %10 = and i24 %9, -458753, !dbg !6339
  %11 = or i24 %10, %7, !dbg !6339
  call void @llvm.dbg.label(metadata !6331), !dbg !6340
  %12 = and i24 %9, 30720, !dbg !6341
  %13 = icmp eq i24 %12, 16384, !dbg !6341
  %14 = zext i1 %13 to i24, !dbg !6343
  %15 = or i24 %11, %14, !dbg !6343
  %16 = icmp eq i8 %3, 99, !dbg !6344
  br i1 %16, label %17, label %43, !dbg !6346

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6347
  %19 = icmp ne i24 %18, 0, !dbg !6347
  call void @llvm.dbg.value(metadata i1 %19, metadata !6330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6333
  br label %43, !dbg !6349

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6350
  %22 = load i24, i24* %21, align 4, !dbg !6351
  %23 = and i24 %22, -458753, !dbg !6351
  %24 = or i24 %23, 262144, !dbg !6351
  call void @llvm.dbg.value(metadata i8 1, metadata !6330, metadata !DIExpression()), !dbg !6333
  br label %43, !dbg !6352

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6355
  %27 = load i24, i24* %26, align 4, !dbg !6356
  %28 = and i24 %27, -458753, !dbg !6356
  %29 = or i24 %28, 196608, !dbg !6356
  %30 = and i24 %27, 30720, !dbg !6357
  %31 = icmp eq i24 %30, 16384, !dbg !6357
  br label %43, !dbg !6359

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6360
  %34 = load i24, i24* %33, align 4, !dbg !6361
  %35 = and i24 %34, -458753, !dbg !6361
  %36 = or i24 %35, 196608, !dbg !6361
  %37 = and i24 %34, 30720, !dbg !6362
  %38 = icmp ne i24 %37, 0, !dbg !6362
  br label %43, !dbg !6364

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6365
  %41 = load i24, i24* %40, align 4, !dbg !6366
  %42 = or i24 %41, 1, !dbg !6366
  br label %43, !dbg !6367

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6368
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6369
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6370
  call void @llvm.dbg.value(metadata i8* %48, metadata !6329, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.value(metadata i8 poison, metadata !6330, metadata !DIExpression()), !dbg !6333
  %49 = lshr i24 %44, 1, !dbg !6368
  %50 = and i24 %49, 1, !dbg !6368
  %51 = zext i24 %50 to i32, !dbg !6368
  %52 = or i32 %51, %47, !dbg !6368
  %53 = trunc i32 %52 to i24, !dbg !6368
  %54 = shl nuw nsw i24 %53, 1, !dbg !6368
  %55 = and i24 %44, -3, !dbg !6368
  %56 = or i24 %54, %55, !dbg !6368
  store i24 %56, i24* %46, align 4, !dbg !6368
  ret i8* %48, !dbg !6371
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6372 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6376, metadata !DIExpression()), !dbg !6379
  %2 = load i8*, i8** %0, align 4, !dbg !6380
  call void @llvm.dbg.value(metadata i8* %2, metadata !6377, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i32 0, metadata !6378, metadata !DIExpression()), !dbg !6379
  %3 = load i8, i8* %2, align 1, !dbg !6381
  %4 = zext i8 %3 to i32, !dbg !6382
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6383
  %6 = icmp eq i32 %5, 0, !dbg !6384
  br i1 %6, label %19, label %7, !dbg !6384

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6378, metadata !DIExpression()), !dbg !6379
  call void @llvm.dbg.value(metadata i8* %10, metadata !6377, metadata !DIExpression()), !dbg !6379
  %11 = mul i32 %9, 10, !dbg !6385
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6387
  call void @llvm.dbg.value(metadata i8* %12, metadata !6377, metadata !DIExpression()), !dbg !6379
  %13 = add i32 %11, -48, !dbg !6388
  %14 = add i32 %13, %8, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %14, metadata !6378, metadata !DIExpression()), !dbg !6379
  %15 = load i8, i8* %12, align 1, !dbg !6381
  %16 = zext i8 %15 to i32, !dbg !6382
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6383
  %18 = icmp eq i32 %17, 0, !dbg !6384
  br i1 %18, label %19, label %7, !dbg !6384, !llvm.loop !6390

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6379
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6379
  store i8* %20, i8** %0, align 4, !dbg !6392
  ret i32 %21, !dbg !6393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6396, metadata !DIExpression()), !dbg !6397
  %2 = add i32 %0, -48, !dbg !6398
  %3 = icmp ult i32 %2, 10, !dbg !6399
  %4 = zext i1 %3 to i32, !dbg !6399
  ret i32 %4, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6401 {
  tail call void asm sideeffect ".globl\09CONFIG_BM_MESSAGE_SIZE\0A\09.equ\09CONFIG_BM_MESSAGE_SIZE,256\0A\09.type\09CONFIG_BM_MESSAGE_SIZE,%object", ""() #25, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_BM_ONE_TO\0A\09.equ\09CONFIG_BM_ONE_TO,8\0A\09.type\09CONFIG_BM_ONE_TO,%object", ""() #25, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #25, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #25, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #25, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6739, !srcloc !6740
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6741, !srcloc !6742
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6743, !srcloc !6744
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6745, !srcloc !6746
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6747, !srcloc !6748
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6749, !srcloc !6750
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6751, !srcloc !6752
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6753, !srcloc !6754
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6755, !srcloc !6756
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6757, !srcloc !6758
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6759, !srcloc !6760
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6761, !srcloc !6762
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6763, !srcloc !6764
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6765, !srcloc !6766
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6767, !srcloc !6768
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6769, !srcloc !6770
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6771, !srcloc !6772
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6773, !srcloc !6774
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6775, !srcloc !6776
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6777, !srcloc !6778
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6779, !srcloc !6780
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6781, !srcloc !6782
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6783, !srcloc !6784
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6785, !srcloc !6786
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !7047, !srcloc !7048
  ret void, !dbg !7049
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7052, metadata !DIExpression()), !dbg !7054
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !7055
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !7056
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !7057, !srcloc !7066
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7057
  call void @llvm.dbg.value(metadata i32 %3, metadata !7063, metadata !DIExpression()) #25, !dbg !7067
  call void @llvm.dbg.value(metadata i32 undef, metadata !7064, metadata !DIExpression()) #25, !dbg !7067
  call void @llvm.dbg.value(metadata i32 %3, metadata !7053, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %3, metadata !7068, metadata !DIExpression()) #25, !dbg !7073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7075, !srcloc !7076
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7077
  ret i32 0, !dbg !7078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !7079 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7081
  %2 = or i32 %1, 512, !dbg !7081
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7081
  ret void, !dbg !7082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !7083 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7084
  %2 = or i32 %1, 1024, !dbg !7084
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7084
  ret void, !dbg !7085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7088, metadata !DIExpression()), !dbg !7089
  ret i32 0, !dbg !7090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7091 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7094, metadata !DIExpression()), !dbg !7102
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7103
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7095, metadata !DIExpression()), !dbg !7104
  call void @llvm.va_start(i8* nonnull %3), !dbg !7105
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7106
  %5 = load i32, i32* %4, align 4, !dbg !7106
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7106
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7106
  call void @llvm.va_end(i8* nonnull %3), !dbg !7107
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7108
  ret void, !dbg !7108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7109 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7114, metadata !DIExpression()), !dbg !7115
  call void @llvm.dbg.value(metadata i8* %0, metadata !7113, metadata !DIExpression()), !dbg !7115
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7116
  ret void, !dbg !7117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7122, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i8* %1, metadata !7123, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i32 %2, metadata !7124, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i8* %1, metadata !7125, metadata !DIExpression()), !dbg !7126
  %4 = icmp eq i32 %2, 0, !dbg !7127
  br i1 %4, label %14, label %5, !dbg !7128

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) #26, !dbg !7126
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7128

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7125, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i32 %10, metadata !7124, metadata !DIExpression()), !dbg !7126
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #27, !dbg !7129
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7131
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7132
  call void @llvm.dbg.value(metadata i32 %11, metadata !7124, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i8* %12, metadata !7125, metadata !DIExpression()), !dbg !7126
  br i1 %13, label %14, label %8, !dbg !7132, !llvm.loop !7133

14:                                               ; preds = %8, %3
  ret void, !dbg !7135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.20(i32 noundef %0) unnamed_addr #5 !dbg !7136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7138, metadata !DIExpression()), !dbg !7139
  %2 = add i32 %0, -1, !dbg !7140
  %3 = icmp ult i32 %2, 4, !dbg !7140
  %4 = shl i32 %2, 3, !dbg !7140
  %5 = lshr i32 1145657157, %4, !dbg !7140
  %6 = trunc i32 %5 to i8, !dbg !7140
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7140
  ret i8 %7, !dbg !7141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7146, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 %1, metadata !7147, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.value(metadata i32 0, metadata !7148, metadata !DIExpression()), !dbg !7158
  br label %4, !dbg !7159

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #27, !dbg !7160
  call void @llvm.dbg.value(metadata i32 0, metadata !7150, metadata !DIExpression()), !dbg !7161
  br label %16, !dbg !7162

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7148, metadata !DIExpression()), !dbg !7158
  %6 = icmp ult i32 %5, %1, !dbg !7163
  br i1 %6, label %7, label %11, !dbg !7167

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7168
  %9 = load i8, i8* %8, align 1, !dbg !7168
  %10 = zext i8 %9 to i32, !dbg !7170
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #27, !dbg !7171
  br label %12, !dbg !7172

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #27, !dbg !7173
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7175
  call void @llvm.dbg.value(metadata i32 %13, metadata !7148, metadata !DIExpression()), !dbg !7158
  %14 = icmp eq i32 %13, 8, !dbg !7176
  br i1 %14, label %3, label %4, !dbg !7159, !llvm.loop !7177

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #27, !dbg !7179
  ret void, !dbg !7180

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7150, metadata !DIExpression()), !dbg !7161
  %18 = icmp ult i32 %17, %1, !dbg !7181
  br i1 %18, label %19, label %26, !dbg !7182

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7183
  %21 = load i8, i8* %20, align 1, !dbg !7183
  call void @llvm.dbg.value(metadata i8 %21, metadata !7152, metadata !DIExpression()), !dbg !7184
  %22 = zext i8 %21 to i32, !dbg !7185
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7186
  %24 = icmp eq i32 %23, 0, !dbg !7187
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7186
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #27, !dbg !7188
  br label %27, !dbg !7189

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #27, !dbg !7190
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7192
  call void @llvm.dbg.value(metadata i32 %28, metadata !7150, metadata !DIExpression()), !dbg !7161
  %29 = icmp eq i32 %28, 8, !dbg !7193
  br i1 %29, label %15, label %16, !dbg !7162, !llvm.loop !7194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7198, metadata !DIExpression()), !dbg !7199
  %2 = add i32 %0, -32, !dbg !7200
  %3 = icmp ult i32 %2, 95, !dbg !7200
  %4 = zext i1 %3 to i32, !dbg !7200
  ret i32 %4, !dbg !7201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7251, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7252, metadata !DIExpression()), !dbg !7253
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7254
  br i1 %3, label %5, label %4, !dbg !7256

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7257
  br label %5, !dbg !7259

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7260
  ret void, !dbg !7261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7262 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7266, metadata !DIExpression()), !dbg !7267
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7268
  %3 = load i32, i32* %2, align 4, !dbg !7268
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7268
  %5 = load i32, i32* %4, align 4, !dbg !7268
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7268
  %7 = load i32, i32* %6, align 4, !dbg !7268
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7268
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7273
  %9 = load i32, i32* %8, align 4, !dbg !7273
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7273
  %11 = load i32, i32* %10, align 4, !dbg !7273
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7273
  %13 = load i32, i32* %12, align 4, !dbg !7273
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7273
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7278
  %15 = load i32, i32* %14, align 4, !dbg !7278
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7278
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7283
  %17 = load i32, i32* %16, align 4, !dbg !7283
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7283
  ret void, !dbg !7288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7289 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7306, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7307, metadata !DIExpression()), !dbg !7309
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7310
  %4 = load i32, i32* %3, align 4, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %4, metadata !7308, metadata !DIExpression()), !dbg !7309
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7311
  ret void, !dbg !7312
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7313 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8* %0, metadata !7318, metadata !DIExpression()), !dbg !7320
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7321
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7321
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7319, metadata !DIExpression()), !dbg !7322
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7322
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7323
  %5 = bitcast i8* %4 to i32*, !dbg !7323
  %6 = load i32, i32* %5, align 4, !dbg !7323
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7324
  store i32 %6, i32* %7, align 4, !dbg !7325
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7326
  unreachable, !dbg !7327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7331, metadata !DIExpression()), !dbg !7332
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7333
  ret void, !dbg !7334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7339, metadata !DIExpression()), !dbg !7340
  %2 = icmp sgt i32 %0, -1, !dbg !7341
  br i1 %2, label %3, label %8, !dbg !7343

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7344, !srcloc !7346
  %4 = and i32 %0, 31, !dbg !7347
  %5 = shl nuw i32 1, %4, !dbg !7348
  %6 = lshr i32 %0, 5, !dbg !7349
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7350
  store volatile i32 %5, i32* %7, align 4, !dbg !7351
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7352, !srcloc !7353
  br label %8, !dbg !7354

8:                                                ; preds = %3, %1
  ret void, !dbg !7355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7358, metadata !DIExpression()), !dbg !7359
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7360
  ret void, !dbg !7361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7364, metadata !DIExpression()), !dbg !7365
  %2 = icmp sgt i32 %0, -1, !dbg !7366
  br i1 %2, label %3, label %8, !dbg !7368

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7369
  %5 = shl nuw i32 1, %4, !dbg !7371
  %6 = lshr i32 %0, 5, !dbg !7372
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7373
  store volatile i32 %5, i32* %7, align 4, !dbg !7374
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7375, !srcloc !7379
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7380, !srcloc !7383
  br label %8, !dbg !7384

8:                                                ; preds = %3, %1
  ret void, !dbg !7385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7390, metadata !DIExpression()), !dbg !7391
  %2 = lshr i32 %0, 5, !dbg !7392
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7393
  %4 = load volatile i32, i32* %3, align 4, !dbg !7393
  %5 = and i32 %0, 31, !dbg !7394
  %6 = shl nuw i32 1, %5, !dbg !7394
  %7 = and i32 %4, %6, !dbg !7395
  ret i32 %7, !dbg !7396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %1, metadata !7402, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %2, metadata !7403, metadata !DIExpression()), !dbg !7404
  %4 = add i32 %1, 1, !dbg !7405
  call void @llvm.dbg.value(metadata i32 %4, metadata !7402, metadata !DIExpression()), !dbg !7404
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7408
  ret void, !dbg !7409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7414, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i32 %1, metadata !7415, metadata !DIExpression()), !dbg !7416
  %3 = trunc i32 %1 to i8, !dbg !7417
  %4 = shl i8 %3, 4, !dbg !7417
  %5 = and i32 %0, 15, !dbg !7419
  %6 = add nsw i32 %5, -4, !dbg !7419
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7419
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7419
  %9 = icmp slt i32 %0, 0, !dbg !7419
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7419
  store volatile i8 %4, i8* %10, align 1, !dbg !7417
  ret void, !dbg !7420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7421 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7423, metadata !DIExpression()), !dbg !7424
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7425
  ret void, !dbg !7426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7427 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7429
  tail call void @z_arm_int_exit() #27, !dbg !7430
  ret void, !dbg !7431
}

; Function Attrs: optsize
declare !dbg !7432 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7433 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7435 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7437
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !7438
  tail call void @z_bss_zero() #27, !dbg !7439
  tail call void @z_data_copy() #27, !dbg !7440
  tail call void @z_arm_interrupt_init() #27, !dbg !7441
  tail call void @z_cstart() #29, !dbg !7442
  unreachable, !dbg !7442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7443 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7444
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7445, !srcloc !7448
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7449, !srcloc !7452
  ret void, !dbg !7453
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7454 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7455
  %2 = and i32 %1, -15728641, !dbg !7455
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7455
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !7456, !srcloc !7461
  call void @llvm.dbg.value(metadata i32 %3, metadata !7459, metadata !DIExpression()) #25, !dbg !7462
  %4 = and i32 %3, -5, !dbg !7463
  call void @llvm.dbg.value(metadata i32 %4, metadata !7464, metadata !DIExpression()) #25, !dbg !7469
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !7471, !srcloc !7472
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7473, !srcloc !7452
  ret void, !dbg !7475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7479, metadata !DIExpression()), !dbg !7480
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7481
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7482
  store i32 %0, i32* %3, align 4, !dbg !7483
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7484
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7485
  store i32 %4, i32* %5, align 4, !dbg !7486
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7487
  %7 = or i32 %6, 268435456, !dbg !7487
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7487
  call void @llvm.dbg.value(metadata i32 0, metadata !7488, metadata !DIExpression()) #25, !dbg !7491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7493, !srcloc !7494
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7495
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7496
  %10 = load i32, i32* %9, align 4, !dbg !7496
  ret i32 %10, !dbg !7497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #8 !dbg !7498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7608, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7609, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %2, metadata !7610, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7611, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %4, metadata !7612, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %5, metadata !7613, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %6, metadata !7614, metadata !DIExpression()), !dbg !7616
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7617
  call void @llvm.dbg.value(metadata i8* %8, metadata !7615, metadata !DIExpression()), !dbg !7616
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7618
  %10 = bitcast i8* %9 to i32*, !dbg !7618
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7619
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7620
  %12 = bitcast i8* %8 to i32*, !dbg !7621
  store i32 %11, i32* %12, align 4, !dbg !7622
  %13 = ptrtoint i8* %4 to i32, !dbg !7623
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7624
  %15 = bitcast i8* %14 to i32*, !dbg !7624
  store i32 %13, i32* %15, align 4, !dbg !7625
  %16 = ptrtoint i8* %5 to i32, !dbg !7626
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7627
  %18 = bitcast i8* %17 to i32*, !dbg !7627
  store i32 %16, i32* %18, align 4, !dbg !7628
  %19 = ptrtoint i8* %6 to i32, !dbg !7629
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7630
  %21 = bitcast i8* %20 to i32*, !dbg !7630
  store i32 %19, i32* %21, align 4, !dbg !7631
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7632
  %23 = bitcast i8* %22 to i32*, !dbg !7632
  store i32 16777216, i32* %23, align 4, !dbg !7633
  %24 = ptrtoint i8* %8 to i32, !dbg !7634
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7635
  store i32 %24, i32* %25, align 8, !dbg !7636
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7637
  store i32 0, i32* %26, align 4, !dbg !7638
  ret void, !dbg !7639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !7640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7645, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %1, metadata !7646, metadata !DIExpression()), !dbg !7651
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7652
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7647, metadata !DIExpression()), !dbg !7651
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7653
  br i1 %4, label %19, label %5, !dbg !7655

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7650, metadata !DIExpression()), !dbg !7651
  %6 = icmp eq i32 %0, -22, !dbg !7656
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7656
  %8 = load i32, i32* %7, align 4, !dbg !7656
  br i1 %6, label %16, label %9, !dbg !7658

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7656
  %11 = icmp ule i32 %10, %0, !dbg !7656
  %12 = icmp ugt i32 %8, %0, !dbg !7656
  %13 = and i1 %12, %11, !dbg !7656
  %14 = icmp ugt i32 %8, %1, !dbg !7656
  %15 = and i1 %14, %13, !dbg !7656
  br i1 %15, label %18, label %19, !dbg !7656

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7656
  br i1 %17, label %18, label %19, !dbg !7658

18:                                               ; preds = %9, %16
  br label %19, !dbg !7659

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7651
  ret i32 %20, !dbg !7661
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !7662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7666, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i8* %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7668, metadata !DIExpression()), !dbg !7669
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7670
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !7671
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !7672, !srcloc !7673
  unreachable, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7675 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7693, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %1, metadata !7694, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 %2, metadata !7695, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7696, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 0, metadata !7697, metadata !DIExpression()), !dbg !7703
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7704
  %9 = and i32 %8, 511, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %9, metadata !7698, metadata !DIExpression()), !dbg !7703
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7706
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7706
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7707
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7707
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7702, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 0, metadata !7709, metadata !DIExpression()) #25, !dbg !7712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7714, !srcloc !7715
  call void @llvm.dbg.value(metadata i8* %6, metadata !7700, metadata !DIExpression(DW_OP_deref)), !dbg !7703
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7716
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i8* %5, metadata !7699, metadata !DIExpression(DW_OP_deref)), !dbg !7703
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %12, metadata !7697, metadata !DIExpression()), !dbg !7703
  %13 = load i8, i8* %5, align 1, !dbg !7718, !range !7720
  call void @llvm.dbg.value(metadata i8 %13, metadata !7699, metadata !DIExpression()), !dbg !7703
  %14 = icmp eq i8 %13, 0, !dbg !7718
  br i1 %14, label %15, label %32, !dbg !7721

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7722
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !7723
  %18 = load i8, i8* %6, align 1, !dbg !7724, !range !7720
  call void @llvm.dbg.value(metadata i8 %18, metadata !7700, metadata !DIExpression()), !dbg !7703
  %19 = icmp eq i8 %18, 0, !dbg !7724
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7726
  %21 = load i32, i32* %20, align 4, !dbg !7726
  br i1 %19, label %27, label %22, !dbg !7727

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7728
  %24 = icmp eq i32 %23, 0, !dbg !7731
  br i1 %24, label %25, label %31, !dbg !7732

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7733
  br label %29, !dbg !7735

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7736
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7726
  br label %31, !dbg !7738

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !7738
  br label %32, !dbg !7739

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !7739
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !7739
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !7739
  ret void, !dbg !7739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7745, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %1, metadata !7746, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %2, metadata !7747, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8* %3, metadata !7748, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i8 0, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i8 0, i8* %3, align 1, !dbg !7752
  %5 = icmp ugt i32 %2, -16777217, !dbg !7753
  br i1 %5, label %6, label %17, !dbg !7755

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7756
  %8 = icmp eq i32 %7, 8, !dbg !7756
  br i1 %8, label %9, label %10, !dbg !7756

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45, i32 0, i32 0), i32 noundef 69) #27, !dbg !7758
  br label %17, !dbg !7764

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7765
  %12 = icmp eq i32 %11, 0, !dbg !7765
  br i1 %12, label %13, label %14, !dbg !7766

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7750, metadata !DIExpression()), !dbg !7751
  store i8 1, i8* %3, align 1, !dbg !7769
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7751
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7750, metadata !DIExpression()), !dbg !7751
  br label %17, !dbg !7772

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7751
  ret %struct.__esf* %18, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7778, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 %1, metadata !7779, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i8* %2, metadata !7780, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  store i8 0, i8* %2, align 1, !dbg !7783
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7784

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7785
  call void @llvm.dbg.value(metadata i32 %5, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7787

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7788
  call void @llvm.dbg.value(metadata i32 %7, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7789

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7790
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7791

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7792
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7782
  br label %12, !dbg !7793

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7794
  br label %12, !dbg !7795

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7796
  br label %12, !dbg !7797

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7782
  call void @llvm.dbg.value(metadata i32 %13, metadata !7781, metadata !DIExpression()), !dbg !7782
  ret i32 %13, !dbg !7798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7799 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7803, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i8* %1, metadata !7804, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i32 0, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef 69) #27, !dbg !7807
  store i8 0, i8* %1, align 1, !dbg !7812
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7813
  %4 = and i32 %3, 2, !dbg !7815
  %5 = icmp eq i32 %4, 0, !dbg !7816
  br i1 %5, label %7, label %6, !dbg !7817

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 69) #27, !dbg !7818
  br label %36, !dbg !7824

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7825
  %9 = icmp sgt i32 %8, -1, !dbg !7827
  br i1 %9, label %11, label %10, !dbg !7828

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.42, i32 0, i32 0), i32 noundef 69) #27, !dbg !7829
  br label %36, !dbg !7835

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7836
  %13 = and i32 %12, 1073741824, !dbg !7838
  %14 = icmp eq i32 %13, 0, !dbg !7839
  br i1 %14, label %36, label %15, !dbg !7840

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.43, i32 0, i32 0), i32 noundef 69) #27, !dbg !7841
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7847
  br i1 %16, label %17, label %21, !dbg !7849

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7850
  %19 = load i32, i32* %18, align 4, !dbg !7850
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.44, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !7850
  %20 = load i32, i32* %18, align 4, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %20, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7857

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7858
  %23 = and i32 %22, 255, !dbg !7860
  %24 = icmp eq i32 %23, 0, !dbg !7861
  br i1 %24, label %27, label %25, !dbg !7862

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %26, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7865

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7866
  %29 = and i32 %28, 65280, !dbg !7868
  %30 = icmp eq i32 %29, 0, !dbg !7869
  br i1 %30, label %32, label %31, !dbg !7870

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7871
  call void @llvm.dbg.value(metadata i32 0, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7873

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7874
  %34 = icmp ult i32 %33, 65536, !dbg !7876
  br i1 %34, label %36, label %35, !dbg !7877

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !7878
  call void @llvm.dbg.value(metadata i32 0, metadata !7805, metadata !DIExpression()), !dbg !7806
  br label %36, !dbg !7880

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !7806
  call void @llvm.dbg.value(metadata i32 %37, metadata !7805, metadata !DIExpression()), !dbg !7806
  ret i32 %37, !dbg !7881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7882 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7884, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 %1, metadata !7885, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i8* %2, metadata !7886, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 0, metadata !7887, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.value(metadata i32 -22, metadata !7888, metadata !DIExpression()), !dbg !7897
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.38, i32 0, i32 0), i32 noundef 69) #27, !dbg !7898
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7903
  %5 = and i32 %4, 16, !dbg !7905
  %6 = icmp eq i32 %5, 0, !dbg !7906
  br i1 %6, label %8, label %7, !dbg !7907

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.39, i32 0, i32 0), i32 noundef 69) #27, !dbg !7908
  br label %8, !dbg !7914

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7915
  %10 = and i32 %9, 8, !dbg !7917
  %11 = icmp eq i32 %10, 0, !dbg !7918
  br i1 %11, label %13, label %12, !dbg !7919

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !7920
  br label %13, !dbg !7926

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7927
  %15 = and i32 %14, 2, !dbg !7928
  %16 = icmp eq i32 %15, 0, !dbg !7929
  br i1 %16, label %27, label %17, !dbg !7930

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i32 noundef 69) #27, !dbg !7931
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %18, metadata !7889, metadata !DIExpression()), !dbg !7937
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7938
  %20 = and i32 %19, 128, !dbg !7940
  %21 = icmp eq i32 %20, 0, !dbg !7941
  br i1 %21, label %27, label %22, !dbg !7942

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7888, metadata !DIExpression()), !dbg !7897
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !7943
  %23 = icmp eq i32 %1, 0, !dbg !7949
  br i1 %23, label %27, label %24, !dbg !7951

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7952
  %26 = and i32 %25, -129, !dbg !7952
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7952
  br label %27, !dbg !7954

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7897
  call void @llvm.dbg.value(metadata i32 %28, metadata !7888, metadata !DIExpression()), !dbg !7897
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7955
  %30 = and i32 %29, 1, !dbg !7957
  %31 = icmp eq i32 %30, 0, !dbg !7958
  br i1 %31, label %33, label %32, !dbg !7959

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0), i32 noundef 69) #27, !dbg !7960
  br label %33, !dbg !7966

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7967
  %35 = and i32 %34, 32, !dbg !7969
  %36 = icmp eq i32 %35, 0, !dbg !7970
  br i1 %36, label %38, label %37, !dbg !7971

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef 69) #27, !dbg !7972
  br label %38, !dbg !7978

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7979
  %40 = and i32 %39, 16, !dbg !7980
  %41 = icmp eq i32 %40, 0, !dbg !7980
  br i1 %41, label %42, label %46, !dbg !7981

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7982
  %44 = and i32 %43, 2, !dbg !7983
  %45 = icmp eq i32 %44, 0, !dbg !7983
  br i1 %45, label %55, label %46, !dbg !7984

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7985
  %48 = and i32 %47, 2048, !dbg !7986
  %49 = icmp eq i32 %48, 0, !dbg !7986
  br i1 %49, label %55, label %50, !dbg !7987

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7988
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !7989
  call void @llvm.dbg.value(metadata i32 %52, metadata !7892, metadata !DIExpression()), !dbg !7990
  %53 = icmp eq i32 %52, 0, !dbg !7991
  br i1 %53, label %55, label %54, !dbg !7993

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7994, metadata !DIExpression()) #25, !dbg !7997
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8000, !srcloc !8001
  call void @llvm.dbg.value(metadata i32 2, metadata !7887, metadata !DIExpression()), !dbg !7897
  br label %55, !dbg !8002

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !7897
  call void @llvm.dbg.value(metadata i32 %56, metadata !7887, metadata !DIExpression()), !dbg !7897
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8003
  %58 = and i32 %57, 32, !dbg !8005
  %59 = icmp eq i32 %58, 0, !dbg !8006
  br i1 %59, label %63, label %60, !dbg !8007

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8008
  %62 = and i32 %61, -8193, !dbg !8008
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8008
  br label %63, !dbg !8010

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8011
  %65 = or i32 %64, 255, !dbg !8011
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8011
  store i8 0, i8* %2, align 1, !dbg !8012
  ret i32 %56, !dbg !8013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8014 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8018, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i32 %0, metadata !8019, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i8* %1, metadata !8020, metadata !DIExpression()), !dbg !8025
  call void @llvm.dbg.value(metadata i32 0, metadata !8021, metadata !DIExpression()), !dbg !8025
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #27, !dbg !8026
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8031
  %4 = and i32 %3, 4096, !dbg !8033
  %5 = icmp eq i32 %4, 0, !dbg !8033
  br i1 %5, label %7, label %6, !dbg !8034

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #27, !dbg !8035
  br label %7, !dbg !8041

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8042
  %9 = and i32 %8, 2048, !dbg !8044
  %10 = icmp eq i32 %9, 0, !dbg !8044
  br i1 %10, label %12, label %11, !dbg !8045

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.36, i32 0, i32 0), i32 noundef 69) #27, !dbg !8046
  br label %12, !dbg !8052

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8053
  %14 = and i32 %13, 512, !dbg !8054
  %15 = icmp eq i32 %14, 0, !dbg !8054
  br i1 %15, label %26, label %16, !dbg !8055

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.37, i32 0, i32 0), i32 noundef 69) #27, !dbg !8056
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %17, metadata !8022, metadata !DIExpression()), !dbg !8062
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8063
  %19 = and i32 %18, 32768, !dbg !8065
  %20 = icmp eq i32 %19, 0, !dbg !8066
  br i1 %20, label %26, label %21, !dbg !8067

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8068
  %22 = icmp eq i32 %0, 0, !dbg !8074
  br i1 %22, label %26, label %23, !dbg !8076

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8077
  %25 = and i32 %24, -32769, !dbg !8077
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8077
  br label %26, !dbg !8079

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8080
  %28 = and i32 %27, 1024, !dbg !8082
  %29 = icmp eq i32 %28, 0, !dbg !8082
  br i1 %29, label %31, label %30, !dbg !8083

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69) #27, !dbg !8084
  br label %31, !dbg !8090

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8091
  %33 = and i32 %32, 256, !dbg !8093
  %34 = icmp eq i32 %33, 0, !dbg !8094
  br i1 %34, label %35, label %39, !dbg !8095

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8096
  %37 = and i32 %36, 8192, !dbg !8098
  %38 = icmp eq i32 %37, 0, !dbg !8098
  br i1 %38, label %41, label %39, !dbg !8099

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8100
  br label %41, !dbg !8101

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8101
  %43 = or i32 %42, 65280, !dbg !8101
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8101
  store i8 0, i8* %1, align 1, !dbg !8102
  ret void, !dbg !8103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8104 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8110, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32 0, metadata !8111, metadata !DIExpression()), !dbg !8112
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8113
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8118
  %2 = and i32 %1, 33554432, !dbg !8120
  %3 = icmp eq i32 %2, 0, !dbg !8121
  br i1 %3, label %5, label %4, !dbg !8122

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i32 noundef 69) #27, !dbg !8123
  br label %5, !dbg !8129

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8130
  %7 = and i32 %6, 16777216, !dbg !8132
  %8 = icmp eq i32 %7, 0, !dbg !8133
  br i1 %8, label %10, label %9, !dbg !8134

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8135
  br label %10, !dbg !8141

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8142
  %12 = and i32 %11, 524288, !dbg !8144
  %13 = icmp eq i32 %12, 0, !dbg !8145
  br i1 %13, label %15, label %14, !dbg !8146

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8147
  br label %15, !dbg !8153

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8154
  %17 = and i32 %16, 262144, !dbg !8156
  %18 = icmp eq i32 %17, 0, !dbg !8157
  br i1 %18, label %20, label %19, !dbg !8158

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8159
  br label %20, !dbg !8165

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8166
  %22 = and i32 %21, 131072, !dbg !8168
  %23 = icmp eq i32 %22, 0, !dbg !8169
  br i1 %23, label %25, label %24, !dbg !8170

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8171
  br label %25, !dbg !8177

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8178
  %27 = and i32 %26, 65536, !dbg !8180
  %28 = icmp eq i32 %27, 0, !dbg !8181
  br i1 %28, label %30, label %29, !dbg !8182

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #27, !dbg !8183
  br label %30, !dbg !8189

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8190
  %32 = or i32 %31, -65536, !dbg !8190
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8190
  ret void, !dbg !8191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8192 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i8* %0, metadata !8197, metadata !DIExpression()), !dbg !8198
  store i8 0, i8* %0, align 1, !dbg !8199
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8200
  ret void, !dbg !8205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8206 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8210, metadata !DIExpression()), !dbg !8212
  call void @llvm.dbg.value(metadata i32 %0, metadata !8211, metadata !DIExpression()), !dbg !8212
  %2 = icmp slt i32 %0, 16, !dbg !8213
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.34, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i32 0, i32 0), !dbg !8213
  %4 = add nsw i32 %0, -16, !dbg !8213
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8213
  ret void, !dbg !8218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8219 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8223, metadata !DIExpression()), !dbg !8226
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8227
  %3 = load i32, i32* %2, align 4, !dbg !8227
  %4 = inttoptr i32 %3 to i16*, !dbg !8228
  call void @llvm.dbg.value(metadata i16* %4, metadata !8224, metadata !DIExpression()), !dbg !8226
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8229
  %6 = or i32 %5, 256, !dbg !8229
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8229
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8230, !srcloc !8233
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8234, !srcloc !8237
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8238
  %8 = load i16, i16* %7, align 2, !dbg !8239
  call void @llvm.dbg.value(metadata i16 %8, metadata !8225, metadata !DIExpression()), !dbg !8226
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8240
  %10 = and i32 %9, -257, !dbg !8240
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8240
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8241, !srcloc !8233
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8243, !srcloc !8237
  %11 = icmp eq i16 %8, -8446, !dbg !8245
  ret i1 %11, !dbg !8247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8248 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8249
  %2 = or i32 %1, 16, !dbg !8249
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8249
  ret void, !dbg !8250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8254, metadata !DIExpression()), !dbg !8255
  br label %1, !dbg !8256

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8254, metadata !DIExpression()), !dbg !8255
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #26, !dbg !8258
  %3 = add nuw nsw i32 %2, 1, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %3, metadata !8254, metadata !DIExpression()), !dbg !8255
  %4 = icmp eq i32 %3, 97, !dbg !8262
  br i1 %4, label %5, label %1, !dbg !8256, !llvm.loop !8263

5:                                                ; preds = %1
  ret void, !dbg !8265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #16 !dbg !8266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8268, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32 1, metadata !8269, metadata !DIExpression()), !dbg !8270
  %2 = and i32 %0, 15, !dbg !8271
  %3 = add nsw i32 %2, -4, !dbg !8271
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8271
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8271
  %6 = icmp slt i32 %0, 0, !dbg !8271
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8271
  store volatile i8 16, i8* %7, align 1, !dbg !8272
  ret void, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8381, metadata !DIExpression()), !dbg !8382
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8383
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8385
  br i1 %3, label %4, label %12, !dbg !8386

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8387, !srcloc !8399
  call void @llvm.dbg.value(metadata i32 %5, metadata !8390, metadata !DIExpression()) #25, !dbg !8400
  %6 = icmp eq i32 %5, 0, !dbg !8401
  br i1 %6, label %12, label %7, !dbg !8402

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8403
  %9 = or i32 %8, 268435456, !dbg !8403
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8403
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8405
  %11 = and i32 %10, -32769, !dbg !8405
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8405
  br label %12, !dbg !8406

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8407
  ret void, !dbg !8408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8409 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !590, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i8 0, metadata !591, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i32 64, metadata !593, metadata !DIExpression()), !dbg !8412
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8413
  %3 = load i32, i32* %2, align 4, !dbg !8413
  %4 = add i32 %3, -64, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %4, metadata !592, metadata !DIExpression()), !dbg !8412
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8416
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8417
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8418
  call void @llvm.dbg.value(metadata i8 1, metadata !591, metadata !DIExpression()), !dbg !8412
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8419
  ret void, !dbg !8420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8421 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8422
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8423, !srcloc !8426
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8427, !srcloc !8430
  ret void, !dbg !8431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8432 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8433, !srcloc !8436
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8437
  ret void, !dbg !8438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8439 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8454, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i8 %1, metadata !8455, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i32 %2, metadata !8456, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.value(metadata i32 %3, metadata !8457, metadata !DIExpression()), !dbg !8458
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8459
  ret void, !dbg !8461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8462 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8467, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i8 %1, metadata !8468, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 undef, metadata !8469, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.value(metadata i32 undef, metadata !8470, metadata !DIExpression()), !dbg !8472
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8473
  call void @llvm.dbg.value(metadata i8 %3, metadata !8471, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8472
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !8474
  call void @llvm.dbg.value(metadata i32 %4, metadata !8471, metadata !DIExpression()), !dbg !8472
  %5 = trunc i32 %4 to i8, !dbg !8475
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8478 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8482, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i8 %1, metadata !8483, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i8 %2, metadata !8484, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i1 %3, metadata !8485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8488
  %5 = zext i8 %2 to i32, !dbg !8489
  call void @llvm.dbg.value(metadata i32 %5, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 0, metadata !8486, metadata !DIExpression()), !dbg !8488
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 0, metadata !8486, metadata !DIExpression()), !dbg !8488
  %7 = icmp eq i8 %1, 0, !dbg !8490
  br i1 %7, label %30, label %8, !dbg !8493

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 %10, metadata !8486, metadata !DIExpression()), !dbg !8488
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8494
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8497
  %13 = load i32, i32* %12, align 4, !dbg !8497
  %14 = icmp eq i32 %13, 0, !dbg !8498
  br i1 %14, label %26, label %15, !dbg !8499

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8500

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8502
  %18 = icmp eq i32 %17, 0, !dbg !8502
  br i1 %18, label %19, label %20, !dbg !8503

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8504
  br label %30, !dbg !8510

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8511
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8512
  call void @llvm.dbg.value(metadata i32 %22, metadata !8487, metadata !DIExpression()), !dbg !8488
  %23 = icmp eq i32 %22, -22, !dbg !8513
  br i1 %23, label %30, label %24, !dbg !8515

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8516
  call void @llvm.dbg.value(metadata i32 %25, metadata !8487, metadata !DIExpression()), !dbg !8488
  br label %26, !dbg !8517

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8488
  call void @llvm.dbg.value(metadata i32 %27, metadata !8487, metadata !DIExpression()), !dbg !8488
  %28 = add nuw nsw i32 %10, 1, !dbg !8518
  call void @llvm.dbg.value(metadata i32 %28, metadata !8486, metadata !DIExpression()), !dbg !8488
  %29 = icmp eq i32 %28, %6, !dbg !8490
  br i1 %29, label %30, label %8, !dbg !8493, !llvm.loop !8519

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8488
  ret i32 %31, !dbg !8521
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !8522 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8526, metadata !DIExpression()), !dbg !8528
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8529
  %3 = load i32, i32* %2, align 4, !dbg !8529
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8530, !range !5055
  %5 = icmp ult i32 %4, 2, !dbg !8530
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8531
  br i1 %7, label %8, label %15, !dbg !8531

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8532
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8533
  %11 = load i32, i32* %10, align 4, !dbg !8533
  %12 = and i32 %11, %9, !dbg !8534
  %13 = icmp eq i32 %12, 0, !dbg !8535
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8527, metadata !DIExpression()), !dbg !8528
  ret i32 %16, !dbg !8536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8537 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8541, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8542, metadata !DIExpression()), !dbg !8544
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8545
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8545
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8543, metadata !DIExpression()), !dbg !8546
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8547
  %6 = load i32, i32* %5, align 4, !dbg !8547
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8548
  store i32 %6, i32* %7, align 4, !dbg !8549
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8550
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8551
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8552
  %11 = load i32, i32* %10, align 4, !dbg !8552
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !8553
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !8554
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !8555
  ret i32 %12, !dbg !8556
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !8564, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !8565, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 undef, metadata !8566, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %2, metadata !8567, metadata !DIExpression()), !dbg !8568
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !8569
  %5 = load i32, i32* %4, align 4, !dbg !8569
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !8570
  %7 = or i32 %6, %5, !dbg !8571
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !8572
  store i32 %7, i32* %8, align 4, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8575 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8579, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8580, metadata !DIExpression()), !dbg !8581
  %3 = zext i8 %0 to i32, !dbg !8582
  %4 = icmp ugt i8 %0, 7, !dbg !8584
  br i1 %4, label %5, label %6, !dbg !8585

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8586
  br label %7, !dbg !8592

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !8593
  br label %7, !dbg !8594

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8581
  ret i32 %8, !dbg !8595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !8596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8600, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8601, metadata !DIExpression()), !dbg !8602
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !8603
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8604
  %4 = load i32, i32* %3, align 4, !dbg !8604
  %5 = and i32 %4, -32, !dbg !8605
  %6 = or i32 %5, %0, !dbg !8606
  %7 = or i32 %6, 16, !dbg !8606
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8607
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8608
  %9 = load i32, i32* %8, align 4, !dbg !8608
  %10 = or i32 %9, 1, !dbg !8609
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8610
  ret void, !dbg !8611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !8612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8615, metadata !DIExpression()), !dbg !8616
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8617
  ret void, !dbg !8618
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !8619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8623, metadata !DIExpression()), !dbg !8624
  %2 = icmp ult i32 %0, 33, !dbg !8625
  br i1 %2, label %11, label %3, !dbg !8627

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8628
  br i1 %4, label %11, label %5, !dbg !8630

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8631
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8632, !range !5055
  %8 = mul nsw i32 %7, -2, !dbg !8633
  %9 = add nsw i32 %8, 62, !dbg !8633
  %10 = and i32 %9, 62, !dbg !8634
  br label %11, !dbg !8635

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8624
  ret i32 %12, !dbg !8636
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8637 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8641, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8 %1, metadata !8642, metadata !DIExpression()), !dbg !8643
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8644
  ret void, !dbg !8646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8647 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8651, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i8 %1, metadata !8652, metadata !DIExpression()), !dbg !8658
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8659
  call void @llvm.dbg.value(metadata i8 %3, metadata !8653, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8658
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !8660
  call void @llvm.dbg.value(metadata i32 %4, metadata !8653, metadata !DIExpression()), !dbg !8658
  %5 = icmp ne i32 %4, -22, !dbg !8661
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %4, metadata !8654, metadata !DIExpression()), !dbg !8663
  br i1 %7, label %8, label %12, !dbg !8662

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8654, metadata !DIExpression()), !dbg !8663
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !8664
  %10 = add i32 %9, 1, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %10, metadata !8654, metadata !DIExpression()), !dbg !8663
  %11 = icmp eq i32 %10, 8, !dbg !8668
  br i1 %11, label %12, label %8, !dbg !8669, !llvm.loop !8670

12:                                               ; preds = %8, %2
  ret void, !dbg !8672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !8673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8676, metadata !DIExpression()), !dbg !8677
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8678
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8679
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8681 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8686
  %2 = icmp ugt i32 %1, 8, !dbg !8688
  br i1 %2, label %14, label %3, !dbg !8689

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !8690
  call void @llvm.dbg.value(metadata i32 0, metadata !8685, metadata !DIExpression()), !dbg !8691
  %4 = icmp eq i32 %1, 0, !dbg !8692
  br i1 %4, label %12, label %5, !dbg !8695

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !8695

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8685, metadata !DIExpression()), !dbg !8691
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !8696
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !8698
  %10 = add nuw i32 %8, 1, !dbg !8699
  call void @llvm.dbg.value(metadata i32 %10, metadata !8685, metadata !DIExpression()), !dbg !8691
  %11 = icmp eq i32 %10, %1, !dbg !8692
  br i1 %11, label %12, label %7, !dbg !8695, !llvm.loop !8700

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !8702
  store i8 %13, i8* @static_regions_num, align 1, !dbg !8703
  tail call void @arm_core_mpu_enable() #26, !dbg !8704
  br label %14, !dbg !8705

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !8691
  ret i32 %15, !dbg !8706
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8707 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8714, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i8* %1, metadata !8715, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i8* %0, metadata !8716, metadata !DIExpression()), !dbg !8717
  %3 = load i8, i8* %1, align 1, !dbg !8718
  %4 = icmp eq i8 %3, 0, !dbg !8719
  br i1 %4, label %13, label %5, !dbg !8720

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8714, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i8* %8, metadata !8715, metadata !DIExpression()), !dbg !8717
  store i8 %6, i8* %7, align 1, !dbg !8721
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8723
  call void @llvm.dbg.value(metadata i8* %9, metadata !8714, metadata !DIExpression()), !dbg !8717
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8724
  call void @llvm.dbg.value(metadata i8* %10, metadata !8715, metadata !DIExpression()), !dbg !8717
  %11 = load i8, i8* %10, align 1, !dbg !8718
  %12 = icmp eq i8 %11, 0, !dbg !8719
  br i1 %12, label %13, label %5, !dbg !8720, !llvm.loop !8725

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8727
  ret i8* %0, !dbg !8728
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8729 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %1, metadata !8734, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %2, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %0, metadata !8736, metadata !DIExpression()), !dbg !8737
  %4 = icmp eq i32 %2, 0, !dbg !8738
  br i1 %4, label %22, label %5, !dbg !8739

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %7, metadata !8735, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8* %8, metadata !8734, metadata !DIExpression()), !dbg !8737
  %9 = load i8, i8* %8, align 1, !dbg !8740
  %10 = icmp eq i8 %9, 0, !dbg !8741
  br i1 %10, label %16, label %11, !dbg !8742

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8743
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8745
  call void @llvm.dbg.value(metadata i8* %12, metadata !8734, metadata !DIExpression()), !dbg !8737
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8746
  call void @llvm.dbg.value(metadata i8* %13, metadata !8733, metadata !DIExpression()), !dbg !8737
  %14 = add i32 %7, -1, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %14, metadata !8735, metadata !DIExpression()), !dbg !8737
  %15 = icmp eq i32 %14, 0, !dbg !8738
  br i1 %15, label %22, label %5, !dbg !8739, !llvm.loop !8748

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %18, metadata !8735, metadata !DIExpression()), !dbg !8737
  store i8 0, i8* %17, align 1, !dbg !8750
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8752
  call void @llvm.dbg.value(metadata i8* %19, metadata !8733, metadata !DIExpression()), !dbg !8737
  %20 = add i32 %18, -1, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %20, metadata !8735, metadata !DIExpression()), !dbg !8737
  %21 = icmp eq i32 %20, 0, !dbg !8754
  br i1 %21, label %22, label %16, !dbg !8755, !llvm.loop !8756

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8758
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8759 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8763, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 %1, metadata !8764, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata i32 %1, metadata !8765, metadata !DIExpression()), !dbg !8766
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8767

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8763, metadata !DIExpression()), !dbg !8766
  %6 = load i8, i8* %5, align 1, !dbg !8768
  %7 = icmp eq i8 %6, %3, !dbg !8769
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8770
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8771
  call void @llvm.dbg.value(metadata i8* %10, metadata !8763, metadata !DIExpression()), !dbg !8766
  br i1 %9, label %11, label %4, !dbg !8770, !llvm.loop !8773

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8775
  ret i8* %12, !dbg !8776
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8777 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8779, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i32 %1, metadata !8780, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* null, metadata !8781, metadata !DIExpression()), !dbg !8782
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8783

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8782
  call void @llvm.dbg.value(metadata i8* %6, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* %5, metadata !8779, metadata !DIExpression()), !dbg !8782
  %7 = load i8, i8* %5, align 1, !dbg !8784
  %8 = icmp eq i8 %7, %3, !dbg !8787
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8788
  call void @llvm.dbg.value(metadata i8* %9, metadata !8781, metadata !DIExpression()), !dbg !8782
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8789
  call void @llvm.dbg.value(metadata i8* %10, metadata !8779, metadata !DIExpression()), !dbg !8782
  %11 = icmp eq i8 %7, 0, !dbg !8790
  br i1 %11, label %12, label %4, !dbg !8790, !llvm.loop !8791

12:                                               ; preds = %4
  ret i8* %9, !dbg !8793
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !8794 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8798, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 0, metadata !8799, metadata !DIExpression()), !dbg !8800
  %2 = load i8, i8* %0, align 1, !dbg !8801
  %3 = icmp eq i8 %2, 0, !dbg !8802
  br i1 %3, label %11, label %4, !dbg !8803

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8799, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i8* %6, metadata !8798, metadata !DIExpression()), !dbg !8800
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8804
  call void @llvm.dbg.value(metadata i8* %7, metadata !8798, metadata !DIExpression()), !dbg !8800
  %8 = add i32 %5, 1, !dbg !8806
  call void @llvm.dbg.value(metadata i32 %8, metadata !8799, metadata !DIExpression()), !dbg !8800
  %9 = load i8, i8* %7, align 1, !dbg !8801
  %10 = icmp eq i8 %9, 0, !dbg !8802
  br i1 %10, label %11, label %4, !dbg !8803, !llvm.loop !8807

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8800
  ret i32 %12, !dbg !8809
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8814, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %1, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 0, metadata !8816, metadata !DIExpression()), !dbg !8817
  %3 = load i8, i8* %0, align 1, !dbg !8818
  %4 = icmp ne i8 %3, 0, !dbg !8819
  %5 = icmp ne i32 %1, 0, !dbg !8820
  %6 = and i1 %4, %5, !dbg !8820
  br i1 %6, label %7, label %16, !dbg !8821

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8816, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8* %9, metadata !8814, metadata !DIExpression()), !dbg !8817
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8822
  call void @llvm.dbg.value(metadata i8* %10, metadata !8814, metadata !DIExpression()), !dbg !8817
  %11 = add nuw i32 %8, 1, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %11, metadata !8816, metadata !DIExpression()), !dbg !8817
  %12 = load i8, i8* %10, align 1, !dbg !8818
  %13 = icmp ne i8 %12, 0, !dbg !8819
  %14 = icmp ult i32 %11, %1, !dbg !8820
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8820
  br i1 %15, label %7, label %16, !dbg !8821, !llvm.loop !8825

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8817
  ret i32 %17, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !8828 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8832, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i8* %1, metadata !8833, metadata !DIExpression()), !dbg !8834
  %3 = load i8, i8* %0, align 1, !dbg !8835
  %4 = load i8, i8* %1, align 1, !dbg !8836
  %5 = icmp ne i8 %3, %4, !dbg !8837
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8838
  br i1 %7, label %18, label %8, !dbg !8838

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8833, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.value(metadata i8* %10, metadata !8832, metadata !DIExpression()), !dbg !8834
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8839
  call void @llvm.dbg.value(metadata i8* %11, metadata !8832, metadata !DIExpression()), !dbg !8834
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8841
  call void @llvm.dbg.value(metadata i8* %12, metadata !8833, metadata !DIExpression()), !dbg !8834
  %13 = load i8, i8* %11, align 1, !dbg !8835
  %14 = load i8, i8* %12, align 1, !dbg !8836
  %15 = icmp ne i8 %13, %14, !dbg !8837
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8838
  br i1 %17, label %18, label %8, !dbg !8838, !llvm.loop !8842

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8835
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8836
  %21 = zext i8 %19 to i32, !dbg !8845
  %22 = zext i8 %20 to i32, !dbg !8846
  %23 = sub nsw i32 %21, %22, !dbg !8847
  ret i32 %23, !dbg !8848
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8853, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i8* %1, metadata !8854, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i32 %2, metadata !8855, metadata !DIExpression()), !dbg !8856
  %4 = icmp eq i32 %2, 0, !dbg !8857
  br i1 %4, label %23, label %5, !dbg !8857

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i8* %7, metadata !8854, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.value(metadata i8* %8, metadata !8853, metadata !DIExpression()), !dbg !8856
  %9 = load i8, i8* %8, align 1, !dbg !8858
  %10 = load i8, i8* %7, align 1, !dbg !8859
  %11 = icmp ne i8 %9, %10, !dbg !8860
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8861
  br i1 %13, label %19, label %14, !dbg !8861

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8862
  call void @llvm.dbg.value(metadata i8* %15, metadata !8853, metadata !DIExpression()), !dbg !8856
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8864
  call void @llvm.dbg.value(metadata i8* %16, metadata !8854, metadata !DIExpression()), !dbg !8856
  %17 = add i32 %6, -1, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %17, metadata !8855, metadata !DIExpression()), !dbg !8856
  %18 = icmp eq i32 %17, 0, !dbg !8857
  br i1 %18, label %23, label %5, !dbg !8857, !llvm.loop !8866

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8869
  %21 = zext i8 %10 to i32, !dbg !8870
  %22 = sub nsw i32 %20, %21, !dbg !8871
  br label %23, !dbg !8872

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8872
  ret i32 %24, !dbg !8873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !8874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8878, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.value(metadata i8* %1, metadata !8879, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.value(metadata i8** %2, metadata !8880, metadata !DIExpression()), !dbg !8883
  %4 = icmp eq i8* %0, null, !dbg !8884
  br i1 %4, label %5, label %7, !dbg !8884

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8885
  br label %7, !dbg !8884

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8884
  call void @llvm.dbg.value(metadata i8* %8, metadata !8881, metadata !DIExpression()), !dbg !8883
  %9 = load i8, i8* %8, align 1, !dbg !8886
  %10 = icmp eq i8 %9, 0, !dbg !8886
  br i1 %10, label %33, label %11, !dbg !8887

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8881, metadata !DIExpression()), !dbg !8883
  %14 = zext i8 %12 to i32, !dbg !8886
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8888
  %16 = icmp eq i8* %15, null, !dbg !8887
  br i1 %16, label %21, label %17, !dbg !8889

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8890
  call void @llvm.dbg.value(metadata i8* %18, metadata !8881, metadata !DIExpression()), !dbg !8883
  %19 = load i8, i8* %18, align 1, !dbg !8886
  %20 = icmp eq i8 %19, 0, !dbg !8886
  br i1 %20, label %33, label %11, !dbg !8887, !llvm.loop !8892

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8882, metadata !DIExpression()), !dbg !8883
  %24 = zext i8 %22 to i32, !dbg !8894
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8895
  %26 = icmp eq i8* %25, null, !dbg !8896
  br i1 %26, label %27, label %31, !dbg !8897

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8898
  call void @llvm.dbg.value(metadata i8* %28, metadata !8882, metadata !DIExpression()), !dbg !8883
  %29 = load i8, i8* %28, align 1, !dbg !8894
  %30 = icmp eq i8 %29, 0, !dbg !8894
  br i1 %30, label %33, label %21, !dbg !8900, !llvm.loop !8901

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8903
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8906
  br label %33, !dbg !8907

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8883
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8883
  store i8* %34, i8** %2, align 4, !dbg !8883
  ret i8* %35, !dbg !8908
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8909 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8911, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i8* %1, metadata !8912, metadata !DIExpression()), !dbg !8913
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8914
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8915
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8916
  ret i8* %0, !dbg !8917
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8918 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8920, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %1, metadata !8921, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %0, metadata !8923, metadata !DIExpression()), !dbg !8925
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %4, metadata !8924, metadata !DIExpression()), !dbg !8925
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8927
  call void @llvm.dbg.value(metadata i8* %5, metadata !8920, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %1, metadata !8921, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %2, metadata !8922, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8925
  %6 = icmp eq i32 %2, 0, !dbg !8928
  br i1 %6, label %18, label %7, !dbg !8929

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8930
  call void @llvm.dbg.value(metadata i8* %9, metadata !8920, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %10, metadata !8921, metadata !DIExpression()), !dbg !8925
  %12 = load i8, i8* %10, align 1, !dbg !8931
  %13 = icmp eq i8 %12, 0, !dbg !8932
  br i1 %13, label %18, label %14, !dbg !8933

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8934
  call void @llvm.dbg.value(metadata i8* %15, metadata !8921, metadata !DIExpression()), !dbg !8925
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8936
  call void @llvm.dbg.value(metadata i8* %16, metadata !8920, metadata !DIExpression()), !dbg !8925
  store i8 %12, i8* %9, align 1, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %11, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i32 %11, metadata !8922, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8925
  %17 = icmp eq i32 %11, 0, !dbg !8928
  br i1 %17, label %18, label %7, !dbg !8929, !llvm.loop !8938

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8925
  store i8 0, i8* %19, align 1, !dbg !8940
  ret i8* %0, !dbg !8941
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8942 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8946, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %1, metadata !8947, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %2, metadata !8948, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %0, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %1, metadata !8950, metadata !DIExpression()), !dbg !8951
  %4 = icmp eq i32 %2, 0, !dbg !8952
  br i1 %4, label %31, label %5, !dbg !8954

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %0, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %2, metadata !8948, metadata !DIExpression()), !dbg !8951
  %6 = add i32 %2, -1, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %6, metadata !8948, metadata !DIExpression()), !dbg !8951
  %7 = icmp eq i32 %6, 0, !dbg !8956
  br i1 %7, label %23, label %8, !dbg !8957

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8958
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8958
  br label %11, !dbg !8958

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i8* %14, metadata !8949, metadata !DIExpression()), !dbg !8951
  %15 = load i8, i8* %14, align 1, !dbg !8959
  %16 = load i8, i8* %13, align 1, !dbg !8960
  %17 = icmp eq i8 %15, %16, !dbg !8961
  br i1 %17, label %18, label %23, !dbg !8958

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8962
  call void @llvm.dbg.value(metadata i8* %19, metadata !8949, metadata !DIExpression()), !dbg !8951
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8964
  call void @llvm.dbg.value(metadata i8* %20, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata i32 %12, metadata !8948, metadata !DIExpression()), !dbg !8951
  %21 = add i32 %12, -1, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %21, metadata !8948, metadata !DIExpression()), !dbg !8951
  %22 = icmp eq i32 %21, 0, !dbg !8956
  br i1 %22, label %23, label %11, !dbg !8957, !llvm.loop !8965

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8951
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8951
  %26 = load i8, i8* %24, align 1, !dbg !8967
  %27 = zext i8 %26 to i32, !dbg !8967
  %28 = load i8, i8* %25, align 1, !dbg !8968
  %29 = zext i8 %28 to i32, !dbg !8968
  %30 = sub nsw i32 %27, %29, !dbg !8969
  br label %31, !dbg !8970

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8951
  ret i32 %32, !dbg !8971
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8972 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8976, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %1, metadata !8977, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %0, metadata !8979, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %1, metadata !8980, metadata !DIExpression()), !dbg !8981
  %4 = ptrtoint i8* %0 to i32, !dbg !8982
  %5 = ptrtoint i8* %1 to i32, !dbg !8982
  %6 = sub i32 %4, %5, !dbg !8982
  %7 = icmp ult i32 %6, %2, !dbg !8984
  br i1 %7, label %10, label %8, !dbg !8985

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8980, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %0, metadata !8979, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8981
  %9 = icmp eq i32 %2, 0, !dbg !8986
  br i1 %9, label %26, label %17, !dbg !8988

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8978, metadata !DIExpression()), !dbg !8981
  %12 = add i32 %11, -1, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %12, metadata !8978, metadata !DIExpression()), !dbg !8981
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8992
  %14 = load i8, i8* %13, align 1, !dbg !8992
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8993
  store i8 %14, i8* %15, align 1, !dbg !8994
  %16 = icmp eq i32 %12, 0, !dbg !8995
  br i1 %16, label %26, label %10, !dbg !8996, !llvm.loop !8997

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8980, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i8* %19, metadata !8979, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %20, metadata !8978, metadata !DIExpression()), !dbg !8981
  %21 = load i8, i8* %18, align 1, !dbg !8999
  store i8 %21, i8* %19, align 1, !dbg !9001
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9002
  call void @llvm.dbg.value(metadata i8* %22, metadata !8979, metadata !DIExpression()), !dbg !8981
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9003
  call void @llvm.dbg.value(metadata i8* %23, metadata !8980, metadata !DIExpression()), !dbg !8981
  %24 = add i32 %20, -1, !dbg !9004
  call void @llvm.dbg.value(metadata i32 %24, metadata !8978, metadata !DIExpression()), !dbg !8981
  %25 = icmp eq i32 %24, 0, !dbg !8986
  br i1 %25, label %26, label %17, !dbg !8988, !llvm.loop !9005

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9008 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9014, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %1, metadata !9015, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i32 %2, metadata !9016, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %0, metadata !9017, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %1, metadata !9018, metadata !DIExpression()), !dbg !9019
  %4 = icmp eq i32 %2, 0, !dbg !9020
  br i1 %4, label %14, label %5, !dbg !9021

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9018, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i8* %7, metadata !9017, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.value(metadata i32 %8, metadata !9016, metadata !DIExpression()), !dbg !9019
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9022
  call void @llvm.dbg.value(metadata i8* %9, metadata !9018, metadata !DIExpression()), !dbg !9019
  %10 = load i8, i8* %6, align 1, !dbg !9024
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9025
  call void @llvm.dbg.value(metadata i8* %11, metadata !9017, metadata !DIExpression()), !dbg !9019
  store i8 %10, i8* %7, align 1, !dbg !9026
  %12 = add i32 %8, -1, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %12, metadata !9016, metadata !DIExpression()), !dbg !9019
  %13 = icmp eq i32 %12, 0, !dbg !9020
  br i1 %13, label %14, label %5, !dbg !9021, !llvm.loop !9028

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9030
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !9031 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9035, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 %1, metadata !9036, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 %2, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8* %0, metadata !9038, metadata !DIExpression()), !dbg !9040
  %4 = trunc i32 %1 to i8, !dbg !9041
  call void @llvm.dbg.value(metadata i8 %4, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i32 %2, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8* %0, metadata !9038, metadata !DIExpression()), !dbg !9040
  %5 = icmp eq i32 %2, 0, !dbg !9042
  br i1 %5, label %12, label %6, !dbg !9043

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8* %8, metadata !9038, metadata !DIExpression()), !dbg !9040
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9044
  call void @llvm.dbg.value(metadata i8* %9, metadata !9038, metadata !DIExpression()), !dbg !9040
  store i8 %4, i8* %8, align 1, !dbg !9046
  %10 = add i32 %7, -1, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %10, metadata !9037, metadata !DIExpression()), !dbg !9040
  %11 = icmp eq i32 %10, 0, !dbg !9042
  br i1 %11, label %12, label %6, !dbg !9043, !llvm.loop !9048

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9050
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9051 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9055, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i32 %1, metadata !9056, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i32 %2, metadata !9057, metadata !DIExpression()), !dbg !9061
  %4 = icmp eq i32 %2, 0, !dbg !9062
  br i1 %4, label %17, label %5, !dbg !9063

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9064

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9065
  call void @llvm.dbg.value(metadata i8* %9, metadata !9058, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %8, metadata !9057, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.value(metadata i8* %9, metadata !9058, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9065
  %10 = load i8, i8* %9, align 1, !dbg !9066
  %11 = icmp eq i8 %10, %6, !dbg !9069
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9070
  call void @llvm.dbg.value(metadata i8* %12, metadata !9058, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %13, metadata !9057, metadata !DIExpression()), !dbg !9061
  br i1 %15, label %16, label %7, !dbg !9070, !llvm.loop !9071

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9073

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9061
  ret i8* %19, !dbg !9074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #8 !dbg !9075 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9077, metadata !DIExpression()), !dbg !9078
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9079
  ret void, !dbg !9080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9083, metadata !DIExpression()), !dbg !9084
  ret i32 -1, !dbg !9085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9090, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.value(metadata i32* %1, metadata !9091, metadata !DIExpression()), !dbg !9092
  %3 = ptrtoint i32* %1 to i32, !dbg !9093
  %4 = and i32 %3, -2, !dbg !9093
  %5 = icmp eq i32 %4, 2, !dbg !9093
  br i1 %5, label %6, label %9, !dbg !9093

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9094
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9094
  br label %9, !dbg !9095

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9095
  ret i32 %10, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32* %1, metadata !9100, metadata !DIExpression()), !dbg !9101
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9102
  ret i32 %3, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9107, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i32* %1, metadata !9108, metadata !DIExpression()), !dbg !9109
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9110, !srcloc !9112
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9113
  ret i32 %3, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9120, metadata !DIExpression()), !dbg !9124
  call void @llvm.dbg.value(metadata i32* %1, metadata !9121, metadata !DIExpression()), !dbg !9124
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9125
  call void @llvm.dbg.value(metadata i32 %3, metadata !9122, metadata !DIExpression()), !dbg !9124
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %4, metadata !9123, metadata !DIExpression()), !dbg !9124
  %5 = icmp ne i32 %3, %4, !dbg !9127
  %6 = sext i1 %5 to i32, !dbg !9128
  ret i32 %6, !dbg !9129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9130 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9134, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %2, metadata !9136, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32* %3, metadata !9137, metadata !DIExpression()), !dbg !9138
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9139
  ret i32 %5, !dbg !9140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9141 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9143, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %1, metadata !9144, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %2, metadata !9145, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32* %3, metadata !9146, metadata !DIExpression()), !dbg !9147
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9148, !srcloc !9150
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9151
  ret i32 %5, !dbg !9152
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9155, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %1, metadata !9156, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %2, metadata !9157, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32* %3, metadata !9158, metadata !DIExpression()), !dbg !9163
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9164
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9166
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9166
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9166
  br i1 %11, label %33, label %12, !dbg !9166

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9163
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9163
  call void @llvm.dbg.value(metadata i8* %14, metadata !9161, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %13, metadata !9159, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %1, metadata !9160, metadata !DIExpression()), !dbg !9163
  br label %15, !dbg !9167

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9169
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9163
  call void @llvm.dbg.value(metadata i8* %17, metadata !9161, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %16, metadata !9160, metadata !DIExpression()), !dbg !9163
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9170
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9173
  call void @llvm.dbg.value(metadata i8* %19, metadata !9161, metadata !DIExpression()), !dbg !9163
  %20 = load i8, i8* %17, align 1, !dbg !9174
  %21 = zext i8 %20 to i32, !dbg !9175
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9170
  %23 = icmp eq i32 %22, -1, !dbg !9176
  br i1 %23, label %30, label %24, !dbg !9177

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %25, metadata !9160, metadata !DIExpression()), !dbg !9163
  %26 = icmp eq i32 %25, 0, !dbg !9179
  br i1 %26, label %27, label %15, !dbg !9180, !llvm.loop !9181

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9183
  call void @llvm.dbg.value(metadata i32 %28, metadata !9159, metadata !DIExpression()), !dbg !9163
  %29 = icmp eq i32 %28, 0, !dbg !9184
  br i1 %29, label %30, label %12, !dbg !9185, !llvm.loop !9186

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9163
  call void @llvm.dbg.value(metadata i32 %31, metadata !9159, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.label(metadata !9162), !dbg !9189
  %32 = sub i32 %2, %31, !dbg !9190
  br label %33, !dbg !9191

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9163
  ret i32 %34, !dbg !9192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9197, metadata !DIExpression()), !dbg !9198
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9199
  %3 = icmp eq i32 %2, -1, !dbg !9201
  br i1 %3, label %8, label %4, !dbg !9202

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9203
  %6 = icmp eq i32 %5, -1, !dbg !9204
  %7 = sext i1 %6 to i32, !dbg !9203
  br label %8, !dbg !9205

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9198
  ret i32 %9, !dbg !9206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9207 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9215, metadata !DIExpression()), !dbg !9217
  %3 = tail call i64 @sys_clock_tick_get() #27, !dbg !9218
  call void @llvm.dbg.value(metadata i64 %3, metadata !9216, metadata !DIExpression()), !dbg !9217
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9219
  %5 = sub i64 %1, %3, !dbg !9219
  store i64 %5, i64* %4, align 8, !dbg !9219
  ret void, !dbg !9220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9221 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9371, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9369, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.value(metadata i8* %1, metadata !9370, metadata !DIExpression()), !dbg !9374
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #27, !dbg !9375
  call void @llvm.dbg.value(metadata i64 %4, metadata !9373, metadata !DIExpression()), !dbg !9374
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 3, !dbg !9376
  %6 = load i1 (i8*, i32)*, i1 (i8*, i32)** %5, align 4, !dbg !9376
  %7 = icmp eq i1 (i8*, i32)* %6, null, !dbg !9378
  br i1 %7, label %13, label %8, !dbg !9379

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9380
  %10 = load i16, i16* %9, align 4, !dbg !9380
  %11 = zext i16 %10 to i32, !dbg !9381
  %12 = tail call zeroext i1 %6(i8* noundef %1, i32 noundef %11) #27, !dbg !9382
  br i1 %12, label %13, label %28, !dbg !9383

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9384
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9384
  %16 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %15, [1 x i64] %2) #26, !dbg !9385
  call void @llvm.dbg.value(metadata i32 %16, metadata !9372, metadata !DIExpression()), !dbg !9374
  %17 = icmp eq i32 %16, 0, !dbg !9386
  br i1 %17, label %18, label %28, !dbg !9388

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9389
  %20 = load i8*, i8** %19, align 4, !dbg !9389
  %21 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9390
  %22 = load i16, i16* %21, align 4, !dbg !9390
  %23 = zext i16 %22 to i32, !dbg !9391
  %24 = tail call i8* @memcpy(i8* noundef %20, i8* noundef %1, i32 noundef %23) #27, !dbg !9392
  %25 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %4) #26, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %25, metadata !9372, metadata !DIExpression()), !dbg !9374
  %26 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !9394
  %27 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %26) #26, !dbg !9395
  br label %28, !dbg !9396

28:                                               ; preds = %13, %8, %18
  %29 = phi i32 [ %25, %18 ], [ -35, %8 ], [ %16, %13 ], !dbg !9374
  ret i32 %29, !dbg !9397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9398 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9403, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9402, metadata !DIExpression()), !dbg !9404
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9405, !srcloc !9407
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #27, !dbg !9408
  ret i32 %3, !dbg !9409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9410 {
  %3 = alloca %struct.zbus_channel*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9414, metadata !DIExpression()), !dbg !9422
  store %struct.zbus_channel* %0, %struct.zbus_channel** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9415, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata i32 0, metadata !9416, metadata !DIExpression()), !dbg !9422
  %5 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 5, !dbg !9423
  %6 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9423
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %6, metadata !9418, metadata !DIExpression()), !dbg !9424
  %7 = load %struct.zbus_observer*, %struct.zbus_observer** %6, align 4, !dbg !9425
  %8 = icmp eq %struct.zbus_observer* %7, null, !dbg !9427
  br i1 %8, label %31, label %16, !dbg !9428

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer**, %struct.zbus_observer*** %5, align 4, !dbg !9429
  %11 = load %struct.zbus_observer*, %struct.zbus_observer** %10, align 4, !dbg !9430
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9414, metadata !DIExpression()), !dbg !9422
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %10, metadata !9420, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 0, metadata !9416, metadata !DIExpression()), !dbg !9422
  %12 = icmp eq %struct.zbus_observer* %11, null, !dbg !9433
  br i1 %12, label %31, label %13, !dbg !9434

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %33, !dbg !9434

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %18, metadata !9418, metadata !DIExpression()), !dbg !9424
  %19 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 0, !dbg !9435
  %20 = load i8, i8* %19, align 4, !dbg !9435, !range !7720
  %21 = icmp eq i8 %20, 0, !dbg !9435
  br i1 %21, label %27, label %22, !dbg !9438

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %17, i32 0, i32 2, !dbg !9439
  %24 = load void (%struct.zbus_channel*)*, void (%struct.zbus_channel*)** %23, align 4, !dbg !9439
  %25 = icmp eq void (%struct.zbus_channel*)* %24, null, !dbg !9440
  br i1 %25, label %27, label %26, !dbg !9441

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9414, metadata !DIExpression()), !dbg !9422
  tail call void %24(%struct.zbus_channel* noundef %0) #27, !dbg !9442
  br label %27, !dbg !9444

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %18, i32 1, !dbg !9445
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %28, metadata !9418, metadata !DIExpression()), !dbg !9424
  %29 = load %struct.zbus_observer*, %struct.zbus_observer** %28, align 4, !dbg !9425
  %30 = icmp eq %struct.zbus_observer* %29, null, !dbg !9427
  br i1 %30, label %9, label %16, !dbg !9428, !llvm.loop !9446

31:                                               ; preds = %51, %2, %9
  %32 = phi i32 [ 0, %9 ], [ 0, %2 ], [ %52, %51 ], !dbg !9422
  ret i32 %32, !dbg !9448

33:                                               ; preds = %13, %51
  %34 = phi %struct.zbus_observer* [ %11, %13 ], [ %54, %51 ]
  %35 = phi %struct.zbus_observer** [ %10, %13 ], [ %53, %51 ]
  %36 = phi i32 [ 0, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %35, metadata !9420, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %36, metadata !9416, metadata !DIExpression()), !dbg !9422
  %37 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 0, !dbg !9449
  %38 = load i8, i8* %37, align 4, !dbg !9449, !range !7720
  %39 = icmp eq i8 %38, 0, !dbg !9449
  br i1 %39, label %51, label %40, !dbg !9452

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %34, i32 0, i32 1, !dbg !9453
  %42 = load %struct.k_msgq*, %struct.k_msgq** %41, align 4, !dbg !9453
  %43 = icmp eq %struct.k_msgq* %42, null, !dbg !9454
  br i1 %43, label %51, label %44, !dbg !9455

44:                                               ; preds = %40
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #26, !dbg !9456
  %45 = load i64, i64* %15, align 8, !dbg !9458
  %46 = insertvalue [1 x i64] poison, i64 %45, 0, !dbg !9458
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %3, metadata !9414, metadata !DIExpression(DW_OP_deref)), !dbg !9422
  %47 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %42, i8* noundef nonnull %14, [1 x i64] %46) #26, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %47, metadata !9417, metadata !DIExpression()), !dbg !9422
  %48 = icmp eq i32 %47, 0, !dbg !9459
  br i1 %48, label %51, label %49, !dbg !9461

49:                                               ; preds = %44
  %50 = load %struct.zbus_observer*, %struct.zbus_observer** %35, align 4, !dbg !9462
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.74, i32 0, i32 0), %struct.zbus_observer* noundef %50, i32 noundef %47) #27, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %47, metadata !9416, metadata !DIExpression()), !dbg !9422
  br label %51, !dbg !9468

51:                                               ; preds = %33, %40, %49, %44
  %52 = phi i32 [ %47, %49 ], [ %36, %44 ], [ %36, %40 ], [ %36, %33 ], !dbg !9422
  call void @llvm.dbg.value(metadata i32 %52, metadata !9416, metadata !DIExpression()), !dbg !9422
  %53 = getelementptr inbounds %struct.zbus_observer*, %struct.zbus_observer** %35, i32 1, !dbg !9469
  call void @llvm.dbg.value(metadata %struct.zbus_observer** %53, metadata !9420, metadata !DIExpression()), !dbg !9432
  %54 = load %struct.zbus_observer*, %struct.zbus_observer** %53, align 4, !dbg !9430
  %55 = icmp eq %struct.zbus_observer* %54, null, !dbg !9433
  br i1 %55, label %31, label %33, !dbg !9434, !llvm.loop !9470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9476, metadata !DIExpression()), !dbg !9477
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9478, !srcloc !9480
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #27, !dbg !9481
  ret i32 %2, !dbg !9482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9483 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9489, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9487, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata i8* %1, metadata !9488, metadata !DIExpression()), !dbg !9490
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9491, !srcloc !9493
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9494
  ret i32 %4, !dbg !9495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel* nocapture noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9496 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9502, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9500, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i8* %1, metadata !9501, metadata !DIExpression()), !dbg !9504
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9505
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9505
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %2) #26, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %6, metadata !9503, metadata !DIExpression()), !dbg !9504
  %7 = icmp eq i32 %6, 0, !dbg !9507
  br i1 %7, label %8, label %17, !dbg !9509

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 2, !dbg !9510
  %10 = load i8*, i8** %9, align 4, !dbg !9510
  %11 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 0, !dbg !9511
  %12 = load i16, i16* %11, align 4, !dbg !9511
  %13 = zext i16 %12 to i32, !dbg !9512
  %14 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %10, i32 noundef %13) #27, !dbg !9513
  %15 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9514
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #26, !dbg !9515
  br label %17, !dbg !9516

17:                                               ; preds = %3, %8
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ], !dbg !9504
  ret i32 %18, !dbg !9517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9518 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9523, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9522, metadata !DIExpression()), !dbg !9526
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #27, !dbg !9527
  call void @llvm.dbg.value(metadata i64 %3, metadata !9525, metadata !DIExpression()), !dbg !9526
  %4 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9528
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9528
  %6 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %5, [1 x i64] %1) #26, !dbg !9529
  call void @llvm.dbg.value(metadata i32 %6, metadata !9524, metadata !DIExpression()), !dbg !9526
  %7 = icmp eq i32 %6, 0, !dbg !9530
  br i1 %7, label %8, label %12, !dbg !9532

8:                                                ; preds = %2
  %9 = tail call fastcc i32 @_zbus_notify_observers(%struct.zbus_channel* noundef nonnull %0, i64 noundef %3) #26, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %9, metadata !9524, metadata !DIExpression()), !dbg !9526
  %10 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !9534
  %11 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %10) #26, !dbg !9535
  br label %12, !dbg !9536

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %9, %8 ], [ %6, %2 ], !dbg !9526
  ret i32 %13, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel* nocapture noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9538 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9540, metadata !DIExpression()), !dbg !9543
  %3 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9544
  %4 = load %struct.k_mutex*, %struct.k_mutex** %3, align 4, !dbg !9544
  %5 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %4, [1 x i64] %1) #26, !dbg !9545
  call void @llvm.dbg.value(metadata i32 %5, metadata !9542, metadata !DIExpression()), !dbg !9543
  ret i32 %5, !dbg !9546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9547 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %0, metadata !9551, metadata !DIExpression()), !dbg !9553
  %2 = getelementptr inbounds %struct.zbus_channel, %struct.zbus_channel* %0, i32 0, i32 4, !dbg !9554
  %3 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !9554
  %4 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %3) #26, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %4, metadata !9552, metadata !DIExpression()), !dbg !9553
  ret i32 %4, !dbg !9556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer* nocapture noundef readonly %0, %struct.zbus_channel** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9557 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9564, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata %struct.zbus_observer* %0, metadata !9562, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !9563, metadata !DIExpression()), !dbg !9565
  %4 = getelementptr inbounds %struct.zbus_observer, %struct.zbus_observer* %0, i32 0, i32 1, !dbg !9566
  %5 = load %struct.k_msgq*, %struct.k_msgq** %4, align 4, !dbg !9566
  %6 = icmp eq %struct.k_msgq* %5, null, !dbg !9568
  br i1 %6, label %10, label %7, !dbg !9569

7:                                                ; preds = %3
  %8 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !9570
  %9 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %5, i8* noundef %8, [1 x i64] %2) #26, !dbg !9571
  br label %10, !dbg !9572

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ -22, %3 ], !dbg !9565
  ret i32 %11, !dbg !9573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9574 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9580, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9578, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.value(metadata i8* %1, metadata !9579, metadata !DIExpression()), !dbg !9581
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9582, !srcloc !9584
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #27, !dbg !9585
  ret i32 %4, !dbg !9586
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9587 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9589, metadata !DIExpression()), !dbg !9590
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !9591
  ret void, !dbg !9592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9597, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.value(metadata i32 %1, metadata !9598, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9599, metadata !DIExpression()), !dbg !9603
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9604
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9604
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9604
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9600, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.value(metadata i32 %0, metadata !9602, metadata !DIExpression()), !dbg !9603
  %7 = icmp slt i32 %0, %1, !dbg !9605
  br i1 %7, label %8, label %22, !dbg !9608

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9602, metadata !DIExpression()), !dbg !9603
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !9609
  %11 = icmp eq i32 %10, 0, !dbg !9609
  br i1 %11, label %19, label %12, !dbg !9612

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !9613
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9615
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9615
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9617
  br i1 %15, label %19, label %16, !dbg !9618

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9619
  %18 = load i8*, i8** %17, align 4, !dbg !9619
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9620
  br label %19, !dbg !9621

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9622
  call void @llvm.dbg.value(metadata i32 %20, metadata !9602, metadata !DIExpression()), !dbg !9603
  %21 = icmp eq i32 %20, %1, !dbg !9605
  br i1 %21, label %22, label %8, !dbg !9608, !llvm.loop !9623

22:                                               ; preds = %19, %3
  ret void, !dbg !9625
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !9626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9628, metadata !DIExpression()), !dbg !9629
  %2 = shl nuw i32 1, %0, !dbg !9630
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !9633
  ret i32 %3, !dbg !9634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !9635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %2 = shl nuw i32 1, %0, !dbg !9641
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !9644
  ret void, !dbg !9645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9649, metadata !DIExpression()), !dbg !9650
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9651
  ret void, !dbg !9652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !9653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9655, metadata !DIExpression()), !dbg !9656
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9657
  %3 = and i32 %2, %0, !dbg !9657
  %4 = icmp eq i32 %3, %0, !dbg !9658
  %5 = zext i1 %4 to i32, !dbg !9658
  ret i32 %5, !dbg !9659
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9660 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9662, metadata !DIExpression()), !dbg !9663
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !9664
  ret void, !dbg !9665
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9668, metadata !DIExpression()), !dbg !9669
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !9670
  ret void, !dbg !9671
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9674, metadata !DIExpression()), !dbg !9675
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !9676
  ret void, !dbg !9677
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9678 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9680, metadata !DIExpression()), !dbg !9681
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !9682
  ret void, !dbg !9683
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9684 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9686, metadata !DIExpression()), !dbg !9687
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !9688
  ret void, !dbg !9689
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9692, metadata !DIExpression()), !dbg !9693
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !9694
  ret void, !dbg !9695
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9698, metadata !DIExpression()), !dbg !9699
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !9700
  ret void, !dbg !9701
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9704, metadata !DIExpression()), !dbg !9705
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !9706
  ret void, !dbg !9707
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9708 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9710, metadata !DIExpression()), !dbg !9711
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !9712
  ret void, !dbg !9713
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9716, metadata !DIExpression()), !dbg !9717
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !9718
  ret void, !dbg !9719
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9722, metadata !DIExpression()), !dbg !9723
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !9724
  ret i32 0, !dbg !9725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !867 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !871, metadata !DIExpression()), !dbg !9726
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9727
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9729
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9731
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9733
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9735
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9737
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9739
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9741
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9743
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9745
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9747
  ret void, !dbg !9749
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9752, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.value(metadata i32 0, metadata !9753, metadata !DIExpression()), !dbg !9754
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9755
  %3 = load i32, i32* %2, align 4, !dbg !9755
  call void @llvm.dbg.value(metadata i32 %3, metadata !9753, metadata !DIExpression()), !dbg !9754
  %4 = shl nuw i32 1, %0, !dbg !9756
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !9757
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !9758
  ret void, !dbg !9759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9762, metadata !DIExpression()), !dbg !9763
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9764
  %3 = or i32 %2, %0, !dbg !9764
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9764
  ret void, !dbg !9765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !9766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9768, metadata !DIExpression()), !dbg !9769
  %2 = icmp slt i32 %0, 32, !dbg !9770
  br i1 %2, label %3, label %5, !dbg !9772

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9773
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !9775
  br label %5, !dbg !9776

5:                                                ; preds = %1, %3
  ret void, !dbg !9777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9780, metadata !DIExpression()), !dbg !9781
  %2 = xor i32 %0, -1, !dbg !9782
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9782
  %4 = and i32 %3, %2, !dbg !9782
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9782
  ret void, !dbg !9783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !9784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9788, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.value(metadata i32 %1, metadata !9789, metadata !DIExpression()), !dbg !9790
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9791

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9792
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !9794
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !9795
  br label %11, !dbg !9796

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9797
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !9798
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !9799
  br label %11, !dbg !9800

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9801
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !9802
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !9803
  br label %11, !dbg !9804

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9805
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !9806
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !9807
  br label %11, !dbg !9808

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9812, metadata !DIExpression()), !dbg !9813
  %2 = xor i32 %0, -1, !dbg !9814
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9814
  %4 = and i32 %3, %2, !dbg !9814
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9814
  ret void, !dbg !9815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9818, metadata !DIExpression()), !dbg !9819
  %2 = xor i32 %0, -1, !dbg !9820
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9820
  %4 = and i32 %3, %2, !dbg !9820
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9820
  ret void, !dbg !9821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9824, metadata !DIExpression()), !dbg !9825
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9826
  %3 = or i32 %2, %0, !dbg !9826
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9826
  ret void, !dbg !9827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9830, metadata !DIExpression()), !dbg !9831
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9832
  %3 = or i32 %2, %0, !dbg !9832
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9832
  ret void, !dbg !9833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9838, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9839, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata i8* %2, metadata !9840, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9841, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9843, metadata !DIExpression()), !dbg !9844
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9845
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9845
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9847
  br i1 %6, label %7, label %9, !dbg !9848

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9849
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9850
  store i8* %2, i8** %8, align 4, !dbg !9851
  br label %9, !dbg !9852

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9844
  ret i32 %10, !dbg !9853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #8 !dbg !9854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9856, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !9857, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9858, metadata !DIExpression()), !dbg !9859
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9860
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9861
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9862
  store i8* null, i8** %3, align 4, !dbg !9863
  ret void, !dbg !9864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9867, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i8* %1, metadata !9868, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i8* %1, metadata !9869, metadata !DIExpression()), !dbg !9872
  %3 = bitcast i8* %1 to i32*, !dbg !9873
  %4 = load i32, i32* %3, align 4, !dbg !9873
  %5 = add i32 %4, -169, !dbg !9873
  %6 = icmp ult i32 %5, -121, !dbg !9873
  br i1 %6, label %15, label %7, !dbg !9875

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9876
  %9 = inttoptr i32 %8 to i32*, !dbg !9877
  call void @llvm.dbg.value(metadata i32* %9, metadata !9870, metadata !DIExpression()), !dbg !9872
  %10 = load volatile i32, i32* %9, align 4, !dbg !9878
  call void @llvm.dbg.value(metadata i32 %10, metadata !9871, metadata !DIExpression()), !dbg !9872
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9879
  %12 = bitcast i8* %11 to i32*, !dbg !9879
  %13 = load i32, i32* %12, align 4, !dbg !9879
  %14 = or i32 %13, %10, !dbg !9880
  call void @llvm.dbg.value(metadata i32 %14, metadata !9871, metadata !DIExpression()), !dbg !9872
  store volatile i32 %14, i32* %9, align 4, !dbg !9881
  br label %15, !dbg !9882

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9872
  ret i32 %16, !dbg !9883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !9884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9886, metadata !DIExpression()), !dbg !9891
  call void @llvm.dbg.value(metadata i8* %1, metadata !9887, metadata !DIExpression()), !dbg !9891
  call void @llvm.dbg.value(metadata i8* %1, metadata !9888, metadata !DIExpression()), !dbg !9891
  %3 = bitcast i8* %1 to i32*, !dbg !9892
  %4 = load i32, i32* %3, align 4, !dbg !9892
  %5 = add i32 %4, -169, !dbg !9892
  %6 = icmp ult i32 %5, -121, !dbg !9892
  br i1 %6, label %16, label %7, !dbg !9894

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9895
  %9 = inttoptr i32 %8 to i32*, !dbg !9896
  call void @llvm.dbg.value(metadata i32* %9, metadata !9889, metadata !DIExpression()), !dbg !9891
  %10 = load volatile i32, i32* %9, align 4, !dbg !9897
  call void @llvm.dbg.value(metadata i32 %10, metadata !9890, metadata !DIExpression()), !dbg !9891
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9898
  %12 = bitcast i8* %11 to i32*, !dbg !9898
  %13 = load i32, i32* %12, align 4, !dbg !9898
  %14 = xor i32 %13, -1, !dbg !9899
  %15 = and i32 %10, %14, !dbg !9900
  call void @llvm.dbg.value(metadata i32 %15, metadata !9890, metadata !DIExpression()), !dbg !9891
  store volatile i32 %15, i32* %9, align 4, !dbg !9901
  br label %16, !dbg !9902

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9891
  ret i32 %17, !dbg !9903
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9906, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i8* %1, metadata !9907, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32* %2, metadata !9908, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i8* %1, metadata !9909, metadata !DIExpression()), !dbg !9914
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata i32 %4, metadata !9910, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32 undef, metadata !9911, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32 undef, metadata !9912, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.value(metadata i32 %4, metadata !9913, metadata !DIExpression()), !dbg !9914
  %5 = bitcast i8* %1 to i32*, !dbg !9916
  %6 = load i32, i32* %5, align 4, !dbg !9916
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9917

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !9918
  call void @llvm.dbg.value(metadata i32 %8, metadata !9911, metadata !DIExpression()), !dbg !9914
  br label %19, !dbg !9919

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !9921
  call void @llvm.dbg.value(metadata i32 %10, metadata !9912, metadata !DIExpression()), !dbg !9914
  br label %19, !dbg !9922

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9923
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !9924
  br label %19, !dbg !9925

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9926
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #26, !dbg !9927
  br label %19, !dbg !9928

17:                                               ; preds = %3
  br label %19, !dbg !9929

18:                                               ; preds = %3
  br label %19, !dbg !9930

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9931
  br label %21, !dbg !9932

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9914
  ret i32 %22, !dbg !9932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !9933 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9935, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i8* %1, metadata !9936, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i8* %2, metadata !9937, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i8* %1, metadata !9938, metadata !DIExpression()), !dbg !9943
  %4 = bitcast i8* %1 to i32*, !dbg !9944
  %5 = load i32, i32* %4, align 4, !dbg !9944
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !9945
  call void @llvm.dbg.value(metadata i32 %6, metadata !9942, metadata !DIExpression()), !dbg !9943
  %7 = icmp slt i32 %6, 0, !dbg !9946
  br i1 %7, label %22, label %8, !dbg !9948

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9938, metadata !DIExpression()), !dbg !9943
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9949
  %10 = bitcast i8* %9 to i32*, !dbg !9949
  %11 = load i32, i32* %10, align 4, !dbg !9949
  %12 = lshr i32 %11, 16, !dbg !9949
  %13 = and i32 %12, 7, !dbg !9949
  %14 = lshr i32 %11, 8, !dbg !9950
  %15 = and i32 %14, 31, !dbg !9950
  %16 = shl i32 %13, %15, !dbg !9951
  call void @llvm.dbg.value(metadata i32 %16, metadata !9941, metadata !DIExpression()), !dbg !9943
  %17 = and i32 %11, 255, !dbg !9952
  %18 = or i32 %17, 1073887232, !dbg !9953
  %19 = inttoptr i32 %18 to i32*, !dbg !9954
  call void @llvm.dbg.value(metadata i32* %19, metadata !9939, metadata !DIExpression()), !dbg !9943
  %20 = load volatile i32, i32* %19, align 4, !dbg !9955
  call void @llvm.dbg.value(metadata i32 %20, metadata !9940, metadata !DIExpression()), !dbg !9943
  %21 = or i32 %16, %20, !dbg !9956
  call void @llvm.dbg.value(metadata i32 %21, metadata !9940, metadata !DIExpression()), !dbg !9943
  store volatile i32 %21, i32* %19, align 4, !dbg !9957
  br label %22, !dbg !9958

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9943
  ret i32 %23, !dbg !9959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !9960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32 0, metadata !9965, metadata !DIExpression()), !dbg !9966
  %2 = add i32 %0, -1, !dbg !9967
  %3 = icmp ult i32 %2, 6, !dbg !9967
  br i1 %3, label %4, label %7, !dbg !9967

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9967
  %6 = load i32, i32* %5, align 4, !dbg !9967
  call void @llvm.dbg.value(metadata i32 %6, metadata !9965, metadata !DIExpression()), !dbg !9966
  br label %7, !dbg !9968

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9966
  ret i32 %8, !dbg !9969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9974, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %1, metadata !9975, metadata !DIExpression()), !dbg !9976
  %3 = udiv i32 %0, %1, !dbg !9977
  ret i32 %3, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !9979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9983, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.value(metadata i32 8, metadata !9984, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.value(metadata i32 84, metadata !9985, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.value(metadata i32 %1, metadata !9986, metadata !DIExpression()), !dbg !9987
  %3 = mul i32 %0, 84, !dbg !9988
  %4 = shl nsw i32 %1, 3, !dbg !9989
  %5 = udiv i32 %3, %4, !dbg !9990
  ret i32 %5, !dbg !9991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9992 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9994, metadata !DIExpression()), !dbg !9997
  tail call void @config_enable_default_clocks() #27, !dbg !9998
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !9999
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !9999
  %4 = lshr i32 %3, 4, !dbg !9999
  %5 = and i32 %4, 15, !dbg !9999
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9999
  %7 = load i8, i8* %6, align 1, !dbg !9999
  %8 = zext i8 %7 to i32, !dbg !9999
  %9 = lshr i32 %2, %8, !dbg !9999
  call void @llvm.dbg.value(metadata i32 %9, metadata !9995, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !9996, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9997
  %10 = icmp ult i32 %9, 84000000, !dbg !10000
  br i1 %10, label %11, label %13, !dbg !10002

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10003
  br label %13, !dbg !10005

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10006
  tail call fastcc void @set_up_plls() #26, !dbg !10007
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10008
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !10011
  br label %14, !dbg !10012

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10013
  %16 = icmp eq i32 %15, 8, !dbg !10014
  br i1 %16, label %17, label %14, !dbg !10012, !llvm.loop !10015

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10017
  br i1 %18, label %19, label %21, !dbg !10019

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10020
  br label %21, !dbg !10022

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10023
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10024
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10025
  ret i32 0, !dbg !10026
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10027 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10029
  %2 = and i32 %1, 240, !dbg !10029
  ret i32 %2, !dbg !10030
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !10031 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !10032
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !10037
  br label %1, !dbg !10038

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !10039
  %3 = icmp eq i32 %2, 1, !dbg !10040
  br i1 %3, label %4, label %1, !dbg !10038, !llvm.loop !10041

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10043
  br label %5, !dbg !10046

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10047
  %7 = icmp eq i32 %6, 1, !dbg !10048
  br i1 %7, label %8, label %5, !dbg !10046, !llvm.loop !10049

8:                                                ; preds = %5
  ret void, !dbg !10051
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10052 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10053
  %2 = icmp eq i32 %1, 8, !dbg !10055
  br i1 %2, label %3, label %4, !dbg !10056

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10057
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10059
  br label %4, !dbg !10060

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10061
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10062
  %6 = and i32 %5, -196609, !dbg !10062
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10062
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10063
  %8 = and i32 %7, -251658241, !dbg !10063
  %9 = or i32 %8, 134217728, !dbg !10063
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10063
  tail call void @config_pll_sysclock() #27, !dbg !10064
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10065
  br label %10, !dbg !10066

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10067
  %12 = icmp eq i32 %11, 1, !dbg !10068
  br i1 %12, label %13, label %10, !dbg !10066, !llvm.loop !10069

13:                                               ; preds = %10
  ret void, !dbg !10071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !10072 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10074, metadata !DIExpression()), !dbg !10075
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10076
  %2 = and i32 %1, -241, !dbg !10076
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10076
  ret void, !dbg !10077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !10078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10080, metadata !DIExpression()), !dbg !10081
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10082
  %3 = and i32 %2, -4, !dbg !10082
  %4 = or i32 %3, %0, !dbg !10082
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10082
  ret void, !dbg !10083
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10084 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10085
  %2 = and i32 %1, 12, !dbg !10085
  ret i32 %2, !dbg !10086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !10087 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10089, metadata !DIExpression()), !dbg !10090
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10091
  %2 = and i32 %1, -7169, !dbg !10091
  %3 = or i32 %2, 4096, !dbg !10091
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10091
  ret void, !dbg !10092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !10093 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10095, metadata !DIExpression()), !dbg !10096
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10097
  %2 = and i32 %1, -57345, !dbg !10097
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10097
  ret void, !dbg !10098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !10099 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10100
  %2 = icmp eq i32 %1, 1, !dbg !10102
  br i1 %2, label %7, label %3, !dbg !10103

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10104
  br label %4, !dbg !10106

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10107
  %6 = icmp eq i32 %5, 1, !dbg !10108
  br i1 %6, label %7, label %4, !dbg !10106, !llvm.loop !10109

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10111
  br label %8, !dbg !10112

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10113
  %10 = icmp eq i32 %9, 0, !dbg !10114
  br i1 %10, label %11, label %8, !dbg !10112, !llvm.loop !10115

11:                                               ; preds = %8
  ret void, !dbg !10117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !10118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10119
  %2 = and i32 %1, -16777217, !dbg !10119
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10119
  ret void, !dbg !10120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !10121 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10122
  %2 = or i32 %1, 16777216, !dbg !10122
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10122
  ret void, !dbg !10123
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10124 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10125
  %2 = lshr i32 %1, 25, !dbg !10126
  %3 = and i32 %2, 1, !dbg !10126
  ret i32 %3, !dbg !10127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10128 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10129
  %2 = lshr i32 %1, 1, !dbg !10130
  %3 = and i32 %2, 1, !dbg !10130
  ret i32 %3, !dbg !10131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !10132 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10133
  %2 = or i32 %1, 1, !dbg !10133
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10133
  ret void, !dbg !10134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !10135 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10136
  %2 = and i32 %1, -262145, !dbg !10136
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10136
  ret void, !dbg !10137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !10138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10139
  %2 = or i32 %1, 65536, !dbg !10139
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10139
  ret void, !dbg !10140
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10141 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10142
  %2 = lshr i32 %1, 17, !dbg !10143
  %3 = and i32 %2, 1, !dbg !10143
  ret i32 %3, !dbg !10144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !10145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10146
  %2 = or i32 %1, 1, !dbg !10146
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10146
  ret void, !dbg !10147
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10149
  %2 = lshr i32 %1, 1, !dbg !10150
  %3 = and i32 %2, 1, !dbg !10150
  ret i32 %3, !dbg !10151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10152 {
  ret i32 16000000, !dbg !10154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !10158 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10159
  ret void, !dbg !10160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !10161 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10165, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 8, metadata !10166, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 84, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 0, metadata !10168, metadata !DIExpression()), !dbg !10169
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10170
  %2 = and i32 %1, -4227072, !dbg !10170
  %3 = or i32 %2, 4199688, !dbg !10170
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10170
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10171
  %5 = and i32 %4, -196609, !dbg !10171
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10171
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10172
  %7 = and i32 %6, -1879048193, !dbg !10172
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10172
  ret void, !dbg !10173
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !10174 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10175
  ret void, !dbg !10176
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !10177 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10180, metadata !DIExpression()), !dbg !10182
  %2 = bitcast i32* %1 to i8*, !dbg !10183
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10183
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10181, metadata !DIExpression()), !dbg !10184
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10185
  %4 = or i32 %3, 268435456, !dbg !10185
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10185
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10186
  %6 = and i32 %5, 268435456, !dbg !10186
  store volatile i32 %6, i32* %1, align 4, !dbg !10187
  %7 = load volatile i32, i32* %1, align 4, !dbg !10188
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10189
  ret void, !dbg !10189
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10192, metadata !DIExpression()), !dbg !10193
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10194
  br i1 %2, label %3, label %4, !dbg !10196

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10197
  br label %4, !dbg !10198

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10193
  ret i32 %5, !dbg !10199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10200 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10205, metadata !DIExpression()), !dbg !10206
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10207, !srcloc !10209
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10210
  ret i1 %1, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10212 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10213
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10214
  ret void, !dbg !10215
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10218, metadata !DIExpression()), !dbg !10219
  %2 = icmp eq i32 %0, 10, !dbg !10220
  br i1 %2, label %3, label %4, !dbg !10222

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10223
  br label %4, !dbg !10225

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10226
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10227
  ret i32 %0, !dbg !10228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10229 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10232, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata i8 %0, metadata !10233, metadata !DIExpression()), !dbg !10234
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10235, !srcloc !10237
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10240 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10242, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i8 %0, metadata !10243, metadata !DIExpression()), !dbg !10245
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10246
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10244, metadata !DIExpression()), !dbg !10245
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10247
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10247
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #27, !dbg !10248
  ret void, !dbg !10249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10250 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !10252, metadata !DIExpression()), !dbg !10253
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !10254
  ret i1 %1, !dbg !10255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10256 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10303, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10305, metadata !DIExpression()), !dbg !10306
  ret void, !dbg !10307
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10308 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10310, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i8 %1, metadata !10311, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.value(metadata i32 %2, metadata !10312, metadata !DIExpression()), !dbg !10315
  %5 = bitcast i32* %4 to i8*, !dbg !10316
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10316
  call void @llvm.dbg.value(metadata i32* %4, metadata !10314, metadata !DIExpression(DW_OP_deref)), !dbg !10315
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %6, metadata !10313, metadata !DIExpression()), !dbg !10315
  %7 = icmp eq i32 %6, 0, !dbg !10318
  br i1 %7, label %8, label %31, !dbg !10320

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10313, metadata !DIExpression()), !dbg !10315
  %9 = and i32 %2, 131072, !dbg !10321
  %10 = icmp eq i32 %9, 0, !dbg !10323
  br i1 %10, label %28, label %11, !dbg !10324

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10325
  %13 = icmp eq i32 %12, 0, !dbg !10328
  br i1 %13, label %18, label %14, !dbg !10329

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10330
  %16 = shl nuw i32 1, %15, !dbg !10330
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !10332
  br label %25, !dbg !10333

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10334
  %20 = icmp eq i32 %19, 0, !dbg !10336
  %21 = zext i8 %1 to i32, !dbg !10315
  br i1 %20, label %25, label %22, !dbg !10337

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10338
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !10340
  br label %25, !dbg !10341

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10342
  %27 = load i32, i32* %4, align 4, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %30, metadata !10314, metadata !DIExpression()), !dbg !10315
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !10344
  br label %31, !dbg !10345

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10342
  %30 = load i32, i32* %4, align 4, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %30, metadata !10314, metadata !DIExpression()), !dbg !10315
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !10344
  call void @llvm.dbg.value(metadata i32 0, metadata !10313, metadata !DIExpression()), !dbg !10315
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10346
  ret i32 %6, !dbg !10346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32* %1, metadata !10352, metadata !DIExpression()), !dbg !10356
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10357
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10357
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10357
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10353, metadata !DIExpression()), !dbg !10356
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10358
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10358
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10358
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10355, metadata !DIExpression()), !dbg !10356
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !10359
  store i32 %9, i32* %1, align 4, !dbg !10360
  ret i32 0, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10364, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i32 %1, metadata !10365, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i32 %2, metadata !10366, metadata !DIExpression()), !dbg !10370
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10371
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10371
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10371
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10367, metadata !DIExpression()), !dbg !10370
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10372
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10372
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10372
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10368, metadata !DIExpression()), !dbg !10370
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %10, metadata !10369, metadata !DIExpression()), !dbg !10370
  %11 = xor i32 %1, -1, !dbg !10374
  %12 = and i32 %10, %11, !dbg !10375
  %13 = and i32 %2, %1, !dbg !10376
  %14 = or i32 %12, %13, !dbg !10377
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !10378
  ret i32 0, !dbg !10379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10382, metadata !DIExpression()), !dbg !10386
  call void @llvm.dbg.value(metadata i32 %1, metadata !10383, metadata !DIExpression()), !dbg !10386
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10387
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10387
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10387
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10384, metadata !DIExpression()), !dbg !10386
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10388
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10388
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10388
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10385, metadata !DIExpression()), !dbg !10386
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10389
  store volatile i32 %1, i32* %9, align 4, !dbg !10389
  ret i32 0, !dbg !10390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10393, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata i32 %1, metadata !10394, metadata !DIExpression()), !dbg !10397
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10398
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10398
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10398
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10395, metadata !DIExpression()), !dbg !10397
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10399
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10399
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10399
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10396, metadata !DIExpression()), !dbg !10397
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !10400
  ret i32 0, !dbg !10401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10402 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10404, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32 %1, metadata !10405, metadata !DIExpression()), !dbg !10408
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10409
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10409
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10409
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10406, metadata !DIExpression()), !dbg !10408
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10410
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10410
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10410
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10407, metadata !DIExpression()), !dbg !10408
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10411
  %10 = load volatile i32, i32* %9, align 4, !dbg !10411
  %11 = xor i32 %10, %1, !dbg !10411
  store volatile i32 %11, i32* %9, align 4, !dbg !10411
  ret i32 0, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10413 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10415, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i8 %1, metadata !10416, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 %2, metadata !10417, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 %3, metadata !10418, metadata !DIExpression()), !dbg !10425
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10426
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10426
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10426
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10419, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i8* undef, metadata !10420, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 0, metadata !10422, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.value(metadata i32 0, metadata !10423, metadata !DIExpression()), !dbg !10425
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10427

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10428
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !10432
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10433
  %12 = load i32, i32* %11, align 4, !dbg !10433
  %13 = icmp eq i32 %10, %12, !dbg !10434
  br i1 %13, label %14, label %29, !dbg !10435

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10436
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10438
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10439
  br label %29, !dbg !10440

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10441
  %17 = load i8*, i8** %16, align 4, !dbg !10441
  call void @llvm.dbg.value(metadata i8* %17, metadata !10420, metadata !DIExpression()), !dbg !10425
  %18 = zext i8 %1 to i32, !dbg !10442
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10444
  %20 = icmp eq i32 %19, 0, !dbg !10445
  br i1 %20, label %21, label %29, !dbg !10446

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10447
  %23 = load i32, i32* %22, align 4, !dbg !10447
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !10448
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10449

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10422, metadata !DIExpression()), !dbg !10425
  br label %27, !dbg !10450

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10422, metadata !DIExpression()), !dbg !10425
  br label %27, !dbg !10452

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10422, metadata !DIExpression()), !dbg !10425
  br label %27, !dbg !10453

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10425
  call void @llvm.dbg.value(metadata i32 %28, metadata !10422, metadata !DIExpression()), !dbg !10425
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10454
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10455
  br label %29, !dbg !10455

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10425
  call void @llvm.dbg.value(metadata i32 %30, metadata !10423, metadata !DIExpression()), !dbg !10425
  call void @llvm.dbg.label(metadata !10424), !dbg !10456
  ret i32 %30, !dbg !10457
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #15 !dbg !10458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10460, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10461, metadata !DIExpression()), !dbg !10464
  call void @llvm.dbg.value(metadata i1 %2, metadata !10462, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10464
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10465
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10465
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10465
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10463, metadata !DIExpression()), !dbg !10464
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10466
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !10467
  ret i32 %8, !dbg !10468
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #15 !dbg !10469 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10475, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10476, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i1 %2, metadata !10477, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10478
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !10479
  br i1 %4, label %10, label %5, !dbg !10481

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10482
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !10485
  %8 = or i1 %7, %2, !dbg !10486
  %9 = select i1 %8, i32 0, i32 -22, !dbg !10486
  br i1 %2, label %11, label %13, !dbg !10486

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !10487

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10488
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !10491
  br label %13, !dbg !10492

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !10478
  ret i32 %14, !dbg !10493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10494 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10498, metadata !DIExpression()), !dbg !10499
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10500
  %3 = icmp eq %struct._snode* %2, null, !dbg !10500
  ret i1 %3, !dbg !10500
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10505, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10506, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10507, metadata !DIExpression()), !dbg !10509
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10510
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10507, metadata !DIExpression()), !dbg !10509
  %4 = icmp eq %struct._snode* %3, null, !dbg !10512
  br i1 %4, label %15, label %5, !dbg !10510

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10507, metadata !DIExpression()), !dbg !10509
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10514
  br i1 %6, label %9, label %11, !dbg !10517

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10507, metadata !DIExpression()), !dbg !10509
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10514
  br i1 %8, label %9, label %11, !dbg !10517, !llvm.loop !10518

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !10519
  br label %15, !dbg !10519

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10507, metadata !DIExpression()), !dbg !10509
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !10512
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10508, metadata !DIExpression()), !dbg !10509
  %14 = icmp eq %struct._snode* %13, null, !dbg !10512
  br i1 %14, label %15, label %7, !dbg !10510, !llvm.loop !10518

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10522 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10526, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10527, metadata !DIExpression()), !dbg !10528
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10529
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !10529
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !10529
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10530
  %5 = icmp eq %struct._snode* %4, null, !dbg !10530
  br i1 %5, label %6, label %8, !dbg !10529

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10532
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !10532
  br label %8, !dbg !10532

8:                                                ; preds = %6, %2
  ret void, !dbg !10529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10538, metadata !DIExpression()), !dbg !10539
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10540
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10540
  ret %struct._snode* %3, !dbg !10541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10542 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10546, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10547, metadata !DIExpression()), !dbg !10548
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10549
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10550
  ret void, !dbg !10551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10552 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10554, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10555, metadata !DIExpression()), !dbg !10556
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10557
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10558
  ret void, !dbg !10559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10562, metadata !DIExpression()), !dbg !10563
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10564
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10564
  ret %struct._snode* %3, !dbg !10565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10568, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10569, metadata !DIExpression()), !dbg !10570
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10571
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10572
  ret void, !dbg !10573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10574 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10578, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10579, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10580, metadata !DIExpression()), !dbg !10581
  %4 = icmp eq %struct._snode* %1, null, !dbg !10582
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !10584
  br i1 %4, label %6, label %11, !dbg !10585

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !10586
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10588
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10588
  br i1 %8, label %9, label %15, !dbg !10586

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10590
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !10590
  br label %15, !dbg !10590

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !10592
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !10594
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10594
  br i1 %13, label %14, label %15, !dbg !10592

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !10596
  br label %15, !dbg !10596

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !10585
  ret void, !dbg !10585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !10598 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10602, metadata !DIExpression()), !dbg !10603
  %2 = icmp eq %struct._snode* %0, null, !dbg !10604
  br i1 %2, label %5, label %3, !dbg !10604

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !10604
  br label %5, !dbg !10604

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10604
  ret %struct._snode* %6, !dbg !10604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10607, metadata !DIExpression()), !dbg !10608
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !10609
  ret %struct._snode* %2, !dbg !10609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !10610 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10612, metadata !DIExpression()), !dbg !10613
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10614
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10614
  ret %struct._snode* %3, !dbg !10615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10618, metadata !DIExpression()), !dbg !10621
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10622, !range !10623
  call void @llvm.dbg.value(metadata i32 %2, metadata !10619, metadata !DIExpression()), !dbg !10621
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %3, metadata !10620, metadata !DIExpression()), !dbg !10621
  ret i32 %3, !dbg !10625
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10628, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata i8* %1, metadata !10629, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.value(metadata i8* %1, metadata !10630, metadata !DIExpression()), !dbg !10631
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10632
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10632
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10633
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10633
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10633
  %8 = shl nuw i32 1, %0, !dbg !10634
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10635
  ret void, !dbg !10636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10637 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10641, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %1, metadata !10642, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10643, metadata !DIExpression()), !dbg !10647
  %4 = bitcast i64* %3 to i8*, !dbg !10648
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10648
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10645, metadata !DIExpression()), !dbg !10647
  store i64 70368744177732, i64* %3, align 8, !dbg !10649
  call void @llvm.dbg.value(metadata i64* %3, metadata !10645, metadata !DIExpression(DW_OP_deref)), !dbg !10647
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %5, metadata !10646, metadata !DIExpression()), !dbg !10647
  %6 = icmp eq i32 %5, 0, !dbg !10651
  br i1 %6, label %7, label %8, !dbg !10653

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10654
  br label %8, !dbg !10655

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !10656
  ret void, !dbg !10656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10659, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.value(metadata i8* %0, metadata !10660, metadata !DIExpression()), !dbg !10662
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10663
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10661, metadata !DIExpression()), !dbg !10662
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10664
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10664
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !10665
  ret i32 %5, !dbg !10666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10669, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.value(metadata i32 %1, metadata !10670, metadata !DIExpression()), !dbg !10672
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10673
  call void @llvm.dbg.value(metadata i32 %3, metadata !10671, metadata !DIExpression()), !dbg !10672
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10674
  ret void, !dbg !10675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10680, metadata !DIExpression()), !dbg !10681
  %2 = sdiv i32 %0, 4, !dbg !10682
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10683
  %6 = add nsw i32 %5, 16, !dbg !10684
  %7 = shl i32 15, %6, !dbg !10685
  %8 = or i32 %7, %2, !dbg !10686
  ret i32 %8, !dbg !10687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10692, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i32 %1, metadata !10693, metadata !DIExpression()), !dbg !10694
  %3 = and i32 %1, 255, !dbg !10695
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10695
  %5 = load volatile i32, i32* %4, align 4, !dbg !10695
  %6 = lshr i32 %1, 16, !dbg !10695
  %7 = xor i32 %6, -1, !dbg !10695
  %8 = and i32 %5, %7, !dbg !10695
  call void @llvm.dbg.value(metadata i32 %6, metadata !10696, metadata !DIExpression()) #25, !dbg !10700
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10702, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 %9, metadata !10699, metadata !DIExpression()) #25, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %9, metadata !10704, metadata !DIExpression()) #25, !dbg !10709
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !10711, !range !5055
  %11 = shl i32 %0, %10, !dbg !10695
  %12 = or i32 %11, %8, !dbg !10695
  store volatile i32 %12, i32* %4, align 4, !dbg !10695
  ret void, !dbg !10712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10713 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10717, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10718, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata i32 %2, metadata !10719, metadata !DIExpression()), !dbg !10722
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10723
  %5 = icmp eq %struct._snode* %4, null, !dbg !10723
  br i1 %5, label %21, label %6, !dbg !10723

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10725
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10721, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10720, metadata !DIExpression()), !dbg !10722
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10726
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10726
  %11 = load i32, i32* %10, align 4, !dbg !10726
  %12 = and i32 %11, %2, !dbg !10730
  %13 = icmp eq i32 %12, 0, !dbg !10730
  br i1 %13, label %19, label %14, !dbg !10731

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10720, metadata !DIExpression()), !dbg !10722
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10732
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10732
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10732
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !10734
  br label %19, !dbg !10735

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10720, metadata !DIExpression()), !dbg !10722
  %20 = icmp eq %struct._snode* %8, null, !dbg !10736
  br i1 %20, label %21, label %6, !dbg !10736

21:                                               ; preds = %19, %3
  ret void, !dbg !10737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10740, metadata !DIExpression()), !dbg !10741
  %2 = and i32 %0, 255, !dbg !10742
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10742
  %4 = load volatile i32, i32* %3, align 4, !dbg !10742
  %5 = lshr i32 %0, 16, !dbg !10742
  %6 = and i32 %4, %5, !dbg !10742
  call void @llvm.dbg.value(metadata i32 %5, metadata !10696, metadata !DIExpression()) #25, !dbg !10743
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !10745, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 %7, metadata !10699, metadata !DIExpression()) #25, !dbg !10743
  call void @llvm.dbg.value(metadata i32 %7, metadata !10704, metadata !DIExpression()) #25, !dbg !10746
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10748, !range !5055
  %9 = lshr i32 %6, %8, !dbg !10749
  ret i32 %9, !dbg !10750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10751 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10756, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 %1, metadata !10757, metadata !DIExpression()), !dbg !10758
  %3 = shl i32 %1, 16, !dbg !10759
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10759
  store volatile i32 %3, i32* %4, align 4, !dbg !10759
  ret void, !dbg !10760
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10761 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10765, metadata !DIExpression()), !dbg !10766
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10767
  %3 = load volatile i32, i32* %2, align 4, !dbg !10767
  ret i32 %3, !dbg !10768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10769 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10771, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.value(metadata i32 %1, metadata !10772, metadata !DIExpression()), !dbg !10773
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10774
  store volatile i32 %1, i32* %3, align 4, !dbg !10774
  ret void, !dbg !10775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10776 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10778, metadata !DIExpression()), !dbg !10779
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10780
  %3 = load volatile i32, i32* %2, align 4, !dbg !10780
  ret i32 %3, !dbg !10781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10786, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata i32* %1, metadata !10787, metadata !DIExpression()), !dbg !10788
  %3 = and i32 %0, 131072, !dbg !10789
  %4 = icmp eq i32 %3, 0, !dbg !10791
  br i1 %4, label %22, label %5, !dbg !10792

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10793
  %6 = and i32 %0, 2, !dbg !10795
  %7 = icmp eq i32 %6, 0, !dbg !10797
  br i1 %7, label %11, label %8, !dbg !10798

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10799
  %10 = icmp eq i32 %9, 0, !dbg !10799
  br i1 %10, label %33, label %11, !dbg !10802

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10803
  store i32 %12, i32* %1, align 4, !dbg !10803
  %13 = and i32 %0, 16, !dbg !10804
  %14 = icmp eq i32 %13, 0, !dbg !10806
  br i1 %14, label %17, label %15, !dbg !10807

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10808
  br label %31, !dbg !10810

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10811
  %19 = icmp eq i32 %18, 0, !dbg !10813
  br i1 %19, label %33, label %20, !dbg !10814

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10815
  br label %31, !dbg !10817

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10818
  %24 = icmp eq i32 %23, 0, !dbg !10820
  br i1 %24, label %31, label %25, !dbg !10821

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10822
  %27 = icmp eq i32 %26, 0, !dbg !10825
  br i1 %27, label %28, label %31, !dbg !10826

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10827
  br label %33, !dbg !10828

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10788
  ret i32 %34, !dbg !10828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10833, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %1, metadata !10834, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %2, metadata !10835, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %3, metadata !10836, metadata !DIExpression()), !dbg !10844
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10845
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10845
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10845
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10837, metadata !DIExpression()), !dbg !10844
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10846
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10846
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10846
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10838, metadata !DIExpression()), !dbg !10844
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %11, metadata !10839, metadata !DIExpression()), !dbg !10844
  %12 = and i32 %2, 48, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %12, metadata !10840, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %2, metadata !10841, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %2, metadata !10842, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10844
  call void @llvm.dbg.value(metadata i32 %2, metadata !10843, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10844
  %13 = lshr i32 %2, 6, !dbg !10849
  %14 = and i32 %13, 1, !dbg !10849
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10850
  %15 = lshr i32 %2, 7, !dbg !10851
  %16 = and i32 %15, 3, !dbg !10851
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10852
  %17 = lshr i32 %2, 9, !dbg !10853
  %18 = and i32 %17, 3, !dbg !10853
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10854
  %19 = icmp eq i32 %12, 32, !dbg !10855
  br i1 %19, label %20, label %24, !dbg !10857

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10858
  br i1 %21, label %22, label %23, !dbg !10861

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10862
  br label %24, !dbg !10864

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10865
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10867
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10868
  ret void, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10872, metadata !DIExpression()), !dbg !10874
  %2 = shl nuw i32 1, %0, !dbg !10875
  call void @llvm.dbg.value(metadata i32 %2, metadata !10873, metadata !DIExpression()), !dbg !10874
  ret i32 %2, !dbg !10876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10877 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10881, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i32 %1, metadata !10882, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i32 %2, metadata !10883, metadata !DIExpression()), !dbg !10884
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10885
  %5 = load volatile i32, i32* %4, align 4, !dbg !10885
  %6 = xor i32 %1, -1, !dbg !10885
  %7 = and i32 %5, %6, !dbg !10885
  %8 = mul i32 %2, %1, !dbg !10885
  %9 = or i32 %7, %8, !dbg !10885
  store volatile i32 %9, i32* %4, align 4, !dbg !10885
  ret void, !dbg !10886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10887 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10889, metadata !DIExpression()), !dbg !10892
  call void @llvm.dbg.value(metadata i32 %1, metadata !10890, metadata !DIExpression()), !dbg !10892
  call void @llvm.dbg.value(metadata i32 %2, metadata !10891, metadata !DIExpression()), !dbg !10892
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10893
  %5 = load volatile i32, i32* %4, align 4, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10894
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10896, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10897
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10899, !range !5055
  %8 = shl nuw nsw i32 %7, 1, !dbg !10893
  %9 = shl i32 3, %8, !dbg !10893
  %10 = xor i32 %9, -1, !dbg !10893
  %11 = and i32 %5, %10, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10902
  %12 = shl i32 %2, %8, !dbg !10893
  %13 = or i32 %11, %12, !dbg !10893
  store volatile i32 %13, i32* %4, align 4, !dbg !10893
  ret void, !dbg !10904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10905 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10907, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %1, metadata !10908, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.value(metadata i32 %2, metadata !10909, metadata !DIExpression()), !dbg !10910
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10911
  %5 = load volatile i32, i32* %4, align 4, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10912
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10914, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10912
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10915
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10917, !range !5055
  %8 = shl nuw nsw i32 %7, 1, !dbg !10911
  %9 = shl i32 3, %8, !dbg !10911
  %10 = xor i32 %9, -1, !dbg !10911
  %11 = and i32 %5, %10, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10920
  %12 = shl i32 %2, %8, !dbg !10911
  %13 = or i32 %11, %12, !dbg !10911
  store volatile i32 %13, i32* %4, align 4, !dbg !10911
  ret void, !dbg !10922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10923 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10925, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %1, metadata !10926, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i32 %2, metadata !10927, metadata !DIExpression()), !dbg !10928
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10929
  %5 = load volatile i32, i32* %4, align 4, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10930
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10932, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10933
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10935, !range !5055
  %8 = shl nuw nsw i32 %7, 2, !dbg !10929
  %9 = shl i32 15, %8, !dbg !10929
  %10 = xor i32 %9, -1, !dbg !10929
  %11 = and i32 %5, %10, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10938
  %12 = shl i32 %2, %8, !dbg !10929
  %13 = or i32 %11, %12, !dbg !10929
  store volatile i32 %13, i32* %4, align 4, !dbg !10929
  ret void, !dbg !10940
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10941 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10943, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %1, metadata !10944, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.value(metadata i32 %2, metadata !10945, metadata !DIExpression()), !dbg !10946
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10947
  %5 = load volatile i32, i32* %4, align 4, !dbg !10947
  %6 = lshr i32 %1, 8, !dbg !10947
  call void @llvm.dbg.value(metadata i32 %6, metadata !10696, metadata !DIExpression()) #25, !dbg !10948
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !10950, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 %7, metadata !10699, metadata !DIExpression()) #25, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %7, metadata !10704, metadata !DIExpression()) #25, !dbg !10951
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !10953, !range !5055
  %9 = shl nuw nsw i32 %8, 2, !dbg !10947
  %10 = shl i32 15, %9, !dbg !10947
  %11 = xor i32 %10, -1, !dbg !10947
  %12 = and i32 %5, %11, !dbg !10947
  call void @llvm.dbg.value(metadata i32 %6, metadata !10696, metadata !DIExpression()) #25, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %7, metadata !10699, metadata !DIExpression()) #25, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %7, metadata !10704, metadata !DIExpression()) #25, !dbg !10956
  %13 = shl i32 %2, %9, !dbg !10947
  %14 = or i32 %12, %13, !dbg !10947
  store volatile i32 %14, i32* %4, align 4, !dbg !10947
  ret void, !dbg !10958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10959 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10961, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.value(metadata i32 %1, metadata !10962, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.value(metadata i32 %2, metadata !10963, metadata !DIExpression()), !dbg !10964
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10965
  %5 = load volatile i32, i32* %4, align 4, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10966
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !10968, !srcloc !10703
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10969
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !10971, !range !5055
  %8 = shl nuw nsw i32 %7, 1, !dbg !10965
  %9 = shl i32 3, %8, !dbg !10965
  %10 = xor i32 %9, -1, !dbg !10965
  %11 = and i32 %5, %10, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %1, metadata !10696, metadata !DIExpression()) #25, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %6, metadata !10699, metadata !DIExpression()) #25, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %6, metadata !10704, metadata !DIExpression()) #25, !dbg !10974
  %12 = shl i32 %2, %8, !dbg !10965
  %13 = or i32 %11, %12, !dbg !10965
  store volatile i32 %13, i32* %4, align 4, !dbg !10965
  ret void, !dbg !10976
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10977 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10979, metadata !DIExpression()), !dbg !10982
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10983
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10983
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10983
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10980, metadata !DIExpression()), !dbg !10982
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10984
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10985
  %6 = tail call fastcc zeroext i1 @device_is_ready.101() #26, !dbg !10986
  br i1 %6, label %7, label %11, !dbg !10988

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10989
  call void @llvm.dbg.value(metadata i32 %8, metadata !10981, metadata !DIExpression()), !dbg !10982
  %9 = icmp slt i32 %8, 0, !dbg !10990
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10992
  br label %11, !dbg !10992

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10982
  ret i32 %12, !dbg !10993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.101() unnamed_addr #1 !dbg !10994 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10998, metadata !DIExpression()), !dbg !10999
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11000, !srcloc !11002
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.102() #26, !dbg !11003
  ret i1 %1, !dbg !11004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11009, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i8 1, metadata !11010, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !11011, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 0, metadata !11012, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11013, metadata !DIExpression()), !dbg !11014
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11015
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11015
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11015
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11011, metadata !DIExpression()), !dbg !11014
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11016
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11019
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %7, metadata !11012, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %7, metadata !11012, metadata !DIExpression()), !dbg !11014
  ret i32 %7, !dbg !11021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.102() unnamed_addr #1 !dbg !11022 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11024, metadata !DIExpression()), !dbg !11025
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !11026
  ret i1 %1, !dbg !11027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11032, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 %1, metadata !11033, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 %2, metadata !11034, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 %3, metadata !11035, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i32 0, metadata !11036, metadata !DIExpression()), !dbg !11040
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !11041
  %5 = icmp eq i32 %3, 17, !dbg !11042
  br i1 %5, label %6, label %14, !dbg !11043

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %7, metadata !11037, metadata !DIExpression()), !dbg !11045
  %8 = icmp eq i32 %7, 0, !dbg !11046
  %9 = shl nuw i32 1, %1, !dbg !11048
  br i1 %8, label %12, label %10, !dbg !11049

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !11050
  br label %14, !dbg !11052

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !11053
  br label %14, !dbg !11056

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11057
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !11058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11060, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.value(metadata i8* %1, metadata !11061, metadata !DIExpression()), !dbg !11064
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11065
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11065
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11065
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11062, metadata !DIExpression()), !dbg !11064
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11066
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11066
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !11068
  %9 = icmp eq i32 %8, 0, !dbg !11068
  br i1 %9, label %12, label %10, !dbg !11069

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11070
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !11072
  br label %12, !dbg !11073

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11074
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11076
  %15 = icmp eq i32 %14, 0, !dbg !11076
  br i1 %15, label %19, label %16, !dbg !11077

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11078
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !11079
  store i8 %18, i8* %1, align 1, !dbg !11080
  br label %19, !dbg !11081

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11064
  ret i32 %20, !dbg !11082
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11083 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11085, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i8 %1, metadata !11086, metadata !DIExpression()), !dbg !11089
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11090
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11090
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11090
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11087, metadata !DIExpression()), !dbg !11089
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11091

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11092
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !11095
  %10 = icmp eq i32 %9, 0, !dbg !11095
  br i1 %10, label %18, label %11, !dbg !11096

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11097, !srcloc !11104
  call void @llvm.dbg.value(metadata i32 undef, metadata !11100, metadata !DIExpression()) #25, !dbg !11105
  call void @llvm.dbg.value(metadata i32 undef, metadata !11101, metadata !DIExpression()) #25, !dbg !11105
  call void @llvm.dbg.value(metadata i32 undef, metadata !11088, metadata !DIExpression()), !dbg !11089
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11106
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !11108
  %15 = icmp eq i32 %14, 0, !dbg !11108
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11097
  br i1 %15, label %17, label %19, !dbg !11109

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11100, metadata !DIExpression()) #25, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %16, metadata !11088, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 undef, metadata !11110, metadata !DIExpression()) #25, !dbg !11113
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11115, !srcloc !11116
  br label %18, !dbg !11117

18:                                               ; preds = %17, %7
  br label %7, !dbg !11092, !llvm.loop !11118

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11097
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11120
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !11121
  call void @llvm.dbg.value(metadata i32 %20, metadata !11110, metadata !DIExpression()) #25, !dbg !11122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11124, !srcloc !11116
  ret void, !dbg !11125
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !11126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11128, metadata !DIExpression()), !dbg !11131
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11132
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11132
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11132
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11129, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.value(metadata i32 0, metadata !11130, metadata !DIExpression()), !dbg !11131
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11133
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11133
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !11135
  %8 = icmp ne i32 %7, 0, !dbg !11135
  %9 = zext i1 %8 to i32, !dbg !11136
  call void @llvm.dbg.value(metadata i32 %9, metadata !11130, metadata !DIExpression()), !dbg !11131
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11137
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !11139
  %12 = icmp eq i32 %11, 0, !dbg !11139
  %13 = or i32 %9, 2, !dbg !11140
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %14, metadata !11130, metadata !DIExpression()), !dbg !11131
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11141
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !11143
  %17 = icmp eq i32 %16, 0, !dbg !11143
  %18 = or i32 %14, 4, !dbg !11144
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %19, metadata !11130, metadata !DIExpression()), !dbg !11131
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11145
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !11147
  %22 = icmp eq i32 %21, 0, !dbg !11147
  %23 = or i32 %19, 8, !dbg !11148
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11148
  call void @llvm.dbg.value(metadata i32 %24, metadata !11130, metadata !DIExpression()), !dbg !11131
  %25 = and i32 %24, 8, !dbg !11149
  %26 = icmp eq i32 %25, 0, !dbg !11149
  br i1 %26, label %29, label %27, !dbg !11151

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11152
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !11154
  br label %29, !dbg !11155

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11156
  %31 = icmp eq i32 %30, 0, !dbg !11156
  br i1 %31, label %34, label %32, !dbg !11158

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11159
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !11161
  br label %34, !dbg !11162

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11163
  %36 = icmp eq i32 %35, 0, !dbg !11163
  br i1 %36, label %39, label %37, !dbg !11165

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11166
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !11168
  br label %39, !dbg !11169

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11170
  %41 = icmp eq i32 %40, 0, !dbg !11170
  br i1 %41, label %44, label %42, !dbg !11172

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11173
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !11175
  br label %44, !dbg !11176

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11177
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !11178
  ret i32 %24, !dbg !11179
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11182, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11183, metadata !DIExpression()), !dbg !11191
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11192
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11192
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11192
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11184, metadata !DIExpression()), !dbg !11191
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11193
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11193
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11193
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11185, metadata !DIExpression()), !dbg !11191
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11194
  %10 = load i8, i8* %9, align 4, !dbg !11194
  %11 = zext i8 %10 to i32, !dbg !11195
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !11196
  call void @llvm.dbg.value(metadata i32 %12, metadata !11187, metadata !DIExpression()), !dbg !11191
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11197
  %14 = load i8, i8* %13, align 1, !dbg !11197
  %15 = zext i8 %14 to i32, !dbg !11198
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !11199
  call void @llvm.dbg.value(metadata i32 %16, metadata !11188, metadata !DIExpression()), !dbg !11191
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11200
  %18 = load i8, i8* %17, align 2, !dbg !11200
  %19 = zext i8 %18 to i32, !dbg !11201
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %20, metadata !11189, metadata !DIExpression()), !dbg !11191
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11203
  %22 = load i8, i8* %21, align 1, !dbg !11203
  %23 = zext i8 %22 to i32, !dbg !11204
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %24, metadata !11190, metadata !DIExpression()), !dbg !11191
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11206

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11208
  br i1 %26, label %69, label %27, !dbg !11210

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11211

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11212
  br i1 %29, label %65, label %30, !dbg !11212

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11214
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11191
  br i1 %31, label %38, label %34, !dbg !11216

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11217
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !11217

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11220
  br i1 %37, label %38, label %69, !dbg !11221

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11222
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !11223
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !11224
  %41 = icmp eq i32 %12, %40, !dbg !11226
  br i1 %41, label %43, label %42, !dbg !11227

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !11228
  br label %43, !dbg !11230

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !11231
  %45 = icmp eq i32 %16, %44, !dbg !11233
  br i1 %45, label %47, label %46, !dbg !11234

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !11235
  br label %47, !dbg !11237

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !11238
  %49 = icmp eq i32 %20, %48, !dbg !11240
  br i1 %49, label %51, label %50, !dbg !11241

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !11242
  br label %51, !dbg !11244

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !11245
  %53 = icmp eq i32 %24, %52, !dbg !11247
  br i1 %53, label %55, label %54, !dbg !11248

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !11249
  br label %55, !dbg !11251

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11252
  %57 = load i32, i32* %56, align 4, !dbg !11252
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11254
  %59 = load i32, i32* %58, align 4, !dbg !11254
  %60 = icmp eq i32 %57, %59, !dbg !11255
  br i1 %60, label %63, label %61, !dbg !11256

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !11257
  %62 = load i32, i32* %56, align 4, !dbg !11259
  store i32 %62, i32* %58, align 4, !dbg !11260
  br label %63, !dbg !11261

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11262
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !11263
  br label %69, !dbg !11264

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11212
  %67 = and i8 %66, 1, !dbg !11212
  %68 = icmp eq i8 %67, 0, !dbg !11212
  br i1 %68, label %30, label %69, !dbg !11212

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11191
  ret i32 %70, !dbg !11265
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11266 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11268, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11269, metadata !DIExpression()), !dbg !11271
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11272
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11272
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11272
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11270, metadata !DIExpression()), !dbg !11271
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11273
  %7 = load i32, i32* %6, align 4, !dbg !11273
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11274
  store i32 %7, i32* %8, align 4, !dbg !11275
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11276, !range !11277
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !11278
  %11 = trunc i32 %10 to i8, !dbg !11278
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11279
  store i8 %11, i8* %12, align 4, !dbg !11280
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !11281, !range !11282
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !11283
  %15 = trunc i32 %14 to i8, !dbg !11283
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11284
  store i8 %15, i8* %16, align 1, !dbg !11285
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !11286
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !11287, !range !11277
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !11288
  %20 = trunc i32 %19 to i8, !dbg !11288
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11289
  store i8 %20, i8* %21, align 2, !dbg !11290
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !11291, !range !11292
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !11293
  %24 = trunc i32 %23 to i8, !dbg !11293
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11294
  store i8 %24, i8* %25, align 1, !dbg !11295
  ret i32 0, !dbg !11296
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11297 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11301, metadata !DIExpression()), !dbg !11303
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11304
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11304
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11304
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11302, metadata !DIExpression()), !dbg !11303
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11305
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11305
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11306
  ret i32 %7, !dbg !11307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11312, metadata !DIExpression()), !dbg !11313
  %2 = icmp eq i32 %0, 1024, !dbg !11314
  %3 = select i1 %2, i32 2, i32 0, !dbg !11314
  %4 = icmp eq i32 %0, 1536, !dbg !11314
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11314
  ret i32 %5, !dbg !11315
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11318, metadata !DIExpression()), !dbg !11320
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11321
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11321
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11321
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11319, metadata !DIExpression()), !dbg !11320
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11322
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11322
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11323
  ret i32 %7, !dbg !11324
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11329, metadata !DIExpression()), !dbg !11330
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11331
  %3 = icmp ult i32 %2, 4, !dbg !11331
  br i1 %3, label %4, label %7, !dbg !11331

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11331
  %6 = load i32, i32* %5, align 4, !dbg !11331
  br label %7, !dbg !11331

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11332
  ret i32 %8, !dbg !11334
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11335 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11337, metadata !DIExpression()), !dbg !11339
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11340
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11340
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11340
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11338, metadata !DIExpression()), !dbg !11339
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11341
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11341
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11342
  ret i32 %7, !dbg !11343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11348, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.value(metadata i32 %1, metadata !11349, metadata !DIExpression()), !dbg !11350
  %3 = icmp eq i32 %0, 4096, !dbg !11351
  %4 = icmp eq i32 %1, 0, !dbg !11351
  %5 = select i1 %4, i32 4, i32 3, !dbg !11351
  %6 = select i1 %4, i32 3, i32 2, !dbg !11351
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11351
  ret i32 %7, !dbg !11352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11355, metadata !DIExpression()), !dbg !11357
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11358
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11358
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11358
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11356, metadata !DIExpression()), !dbg !11357
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11359
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11359
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11360
  ret i32 %7, !dbg !11361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11366, metadata !DIExpression()), !dbg !11367
  %2 = icmp eq i32 %0, 768, !dbg !11368
  %3 = zext i1 %2 to i32, !dbg !11367
  ret i32 %3, !dbg !11370
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11371 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11376, metadata !DIExpression()), !dbg !11377
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11378
  %3 = load volatile i32, i32* %2, align 4, !dbg !11378
  %4 = and i32 %3, 768, !dbg !11378
  ret i32 %4, !dbg !11379
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11380 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11382, metadata !DIExpression()), !dbg !11383
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11384
  %3 = load volatile i32, i32* %2, align 4, !dbg !11384
  %4 = and i32 %3, 4096, !dbg !11384
  ret i32 %4, !dbg !11385
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11386 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11388, metadata !DIExpression()), !dbg !11389
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11390
  %3 = load volatile i32, i32* %2, align 4, !dbg !11390
  %4 = and i32 %3, 12288, !dbg !11390
  ret i32 %4, !dbg !11391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11392 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11394, metadata !DIExpression()), !dbg !11395
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11396
  %3 = load volatile i32, i32* %2, align 4, !dbg !11396
  %4 = and i32 %3, 1536, !dbg !11396
  ret i32 %4, !dbg !11397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11402, metadata !DIExpression()), !dbg !11403
  %2 = icmp eq i32 %0, 2, !dbg !11404
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11404
  %4 = icmp eq i32 %0, 1, !dbg !11404
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11404
  ret i32 %5, !dbg !11405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11410, metadata !DIExpression()), !dbg !11411
  %2 = icmp ult i32 %0, 3, !dbg !11412
  br i1 %2, label %3, label %6, !dbg !11412

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11412
  %5 = load i32, i32* %4, align 4, !dbg !11412
  br label %6, !dbg !11412

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11413
  ret i32 %7, !dbg !11415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11420, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.value(metadata i32 %1, metadata !11421, metadata !DIExpression()), !dbg !11422
  %3 = icmp eq i32 %0, 4, !dbg !11423
  %4 = icmp eq i32 %1, 0, !dbg !11423
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11423
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11423
  ret i32 %6, !dbg !11424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11429, metadata !DIExpression()), !dbg !11430
  %2 = icmp eq i32 %0, 1, !dbg !11431
  %3 = select i1 %2, i32 768, i32 0, !dbg !11430
  ret i32 %3, !dbg !11433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11434 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11440
  %3 = load volatile i32, i32* %2, align 4, !dbg !11440
  %4 = and i32 %3, -8193, !dbg !11440
  store volatile i32 %4, i32* %2, align 4, !dbg !11440
  ret void, !dbg !11441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11446, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32 %1, metadata !11447, metadata !DIExpression()), !dbg !11449
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11450
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11450
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11450
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11448, metadata !DIExpression()), !dbg !11449
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11451
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11451
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11452
  ret void, !dbg !11453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11456, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i32 %1, metadata !11457, metadata !DIExpression()), !dbg !11459
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11460
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11460
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11460
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11458, metadata !DIExpression()), !dbg !11459
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11461
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11461
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11462
  ret void, !dbg !11463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11466, metadata !DIExpression()), !dbg !11469
  call void @llvm.dbg.value(metadata i32 %1, metadata !11467, metadata !DIExpression()), !dbg !11469
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11470
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11470
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11468, metadata !DIExpression()), !dbg !11469
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11471
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11471
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11472
  ret void, !dbg !11473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11476, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 %1, metadata !11477, metadata !DIExpression()), !dbg !11479
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11480
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11480
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11480
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11478, metadata !DIExpression()), !dbg !11479
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11481
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11481
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11482
  ret void, !dbg !11483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11484 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11486, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.value(metadata i32 %1, metadata !11487, metadata !DIExpression()), !dbg !11491
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11492
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11492
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11492
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11488, metadata !DIExpression()), !dbg !11491
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11493
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11493
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11493
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11489, metadata !DIExpression()), !dbg !11491
  %10 = bitcast i32* %3 to i8*, !dbg !11494
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11494
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11495
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11495
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11499
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11499
  %15 = load i8*, i8** %14, align 4, !dbg !11499
  call void @llvm.dbg.value(metadata i32* %3, metadata !11490, metadata !DIExpression(DW_OP_deref)), !dbg !11491
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11500
  %17 = icmp slt i32 %16, 0, !dbg !11501
  br i1 %17, label %18, label %21, !dbg !11502

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.105(i32 noundef 1) #26, !dbg !11503
  %20 = zext i8 %19 to i32, !dbg !11503
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.106, i32 0, i32 0), i32 noundef %20) #27, !dbg !11503
  br label %26, !dbg !11509

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11510
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11510
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !11511
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11512
  %25 = load i32, i32* %3, align 4, !dbg !11513
  call void @llvm.dbg.value(metadata i32 %25, metadata !11490, metadata !DIExpression()), !dbg !11491
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !11514
  br label %26, !dbg !11515

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !11515
  ret void, !dbg !11515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11516 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11518, metadata !DIExpression()), !dbg !11519
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11520
  %3 = load volatile i32, i32* %2, align 4, !dbg !11520
  %4 = or i32 %3, 8192, !dbg !11520
  store volatile i32 %4, i32* %2, align 4, !dbg !11520
  ret void, !dbg !11521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11524, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i8* %1, metadata !11525, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i32* %2, metadata !11526, metadata !DIExpression()), !dbg !11528
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11529
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11529
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11529
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11527, metadata !DIExpression()), !dbg !11528
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11530
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11530
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11532
  br i1 %9, label %12, label %10, !dbg !11533

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11534
  br label %12, !dbg !11535

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11528
  ret i32 %13, !dbg !11536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.105(i32 noundef %0) unnamed_addr #5 !dbg !11537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11539, metadata !DIExpression()), !dbg !11540
  %2 = icmp eq i32 %0, 2, !dbg !11541
  %3 = select i1 %2, i8 87, i8 63, !dbg !11541
  %4 = icmp eq i32 %0, 1, !dbg !11541
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11541
  ret i8 %5, !dbg !11542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11543 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.value(metadata i32 0, metadata !11548, metadata !DIExpression()), !dbg !11549
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11550
  %3 = load volatile i32, i32* %2, align 4, !dbg !11550
  %4 = and i32 %3, -32769, !dbg !11550
  store volatile i32 %4, i32* %2, align 4, !dbg !11550
  ret void, !dbg !11551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11556, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 %1, metadata !11557, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 0, metadata !11558, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 %2, metadata !11559, metadata !DIExpression()), !dbg !11560
  %4 = zext i32 %1 to i64, !dbg !11561
  %5 = mul nuw nsw i64 %4, 25, !dbg !11561
  %6 = zext i32 %2 to i64, !dbg !11561
  %7 = shl nuw nsw i64 %6, 2, !dbg !11561
  %8 = udiv i64 %5, %7, !dbg !11561
  %9 = trunc i64 %8 to i32, !dbg !11561
  %10 = udiv i32 %9, 100, !dbg !11561
  %11 = shl nuw nsw i32 %10, 4, !dbg !11561
  %12 = mul i32 %10, -100, !dbg !11561
  %13 = add i32 %12, %9, !dbg !11561
  %14 = shl i32 %13, 4, !dbg !11561
  %15 = add i32 %14, 50, !dbg !11561
  %16 = udiv i32 %15, 100, !dbg !11561
  %17 = and i32 %16, 240, !dbg !11561
  %18 = add nuw nsw i32 %17, %11, !dbg !11561
  %19 = and i32 %16, 15, !dbg !11561
  %20 = and i32 %18, 65520, !dbg !11564
  %21 = or i32 %20, %19, !dbg !11564
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11565
  store volatile i32 %21, i32* %22, align 4, !dbg !11566
  ret void, !dbg !11567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11568 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11570, metadata !DIExpression()), !dbg !11572
  call void @llvm.dbg.value(metadata i32 %1, metadata !11571, metadata !DIExpression()), !dbg !11572
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11573
  %4 = load volatile i32, i32* %3, align 4, !dbg !11573
  %5 = and i32 %4, -769, !dbg !11573
  %6 = or i32 %5, %1, !dbg !11573
  store volatile i32 %6, i32* %3, align 4, !dbg !11573
  ret void, !dbg !11574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11575 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11577, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata i32 %1, metadata !11578, metadata !DIExpression()), !dbg !11579
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11580
  %4 = load volatile i32, i32* %3, align 4, !dbg !11580
  %5 = and i32 %4, -4097, !dbg !11580
  %6 = or i32 %5, %1, !dbg !11580
  store volatile i32 %6, i32* %3, align 4, !dbg !11580
  ret void, !dbg !11581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11582 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11584, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.value(metadata i32 %1, metadata !11585, metadata !DIExpression()), !dbg !11586
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11587
  %4 = load volatile i32, i32* %3, align 4, !dbg !11587
  %5 = and i32 %4, -12289, !dbg !11587
  %6 = or i32 %5, %1, !dbg !11587
  store volatile i32 %6, i32* %3, align 4, !dbg !11587
  ret void, !dbg !11588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11589 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11591, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 %1, metadata !11592, metadata !DIExpression()), !dbg !11593
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11594
  %4 = load volatile i32, i32* %3, align 4, !dbg !11594
  %5 = and i32 %4, -1537, !dbg !11594
  %6 = or i32 %5, %1, !dbg !11594
  store volatile i32 %6, i32* %3, align 4, !dbg !11594
  ret void, !dbg !11595
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11596 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11598, metadata !DIExpression()), !dbg !11599
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11600
  %3 = load volatile i32, i32* %2, align 4, !dbg !11600
  %4 = lshr i32 %3, 3, !dbg !11601
  %5 = and i32 %4, 1, !dbg !11601
  ret i32 %5, !dbg !11602
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11603 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11605, metadata !DIExpression()), !dbg !11606
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11607
  %3 = load volatile i32, i32* %2, align 4, !dbg !11607
  %4 = and i32 %3, 1, !dbg !11607
  ret i32 %4, !dbg !11608
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11609 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11611, metadata !DIExpression()), !dbg !11612
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11613
  %3 = load volatile i32, i32* %2, align 4, !dbg !11613
  %4 = lshr i32 %3, 1, !dbg !11614
  %5 = and i32 %4, 1, !dbg !11614
  ret i32 %5, !dbg !11615
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11616 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11618, metadata !DIExpression()), !dbg !11619
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11620
  %3 = load volatile i32, i32* %2, align 4, !dbg !11620
  %4 = lshr i32 %3, 8, !dbg !11621
  %5 = and i32 %4, 1, !dbg !11621
  ret i32 %5, !dbg !11622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11623 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11625, metadata !DIExpression()), !dbg !11626
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11627
  store volatile i32 -257, i32* %2, align 4, !dbg !11627
  ret void, !dbg !11628
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11629 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11631, metadata !DIExpression()), !dbg !11633
  %3 = bitcast i32* %2 to i8*, !dbg !11634
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11634
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11632, metadata !DIExpression()), !dbg !11635
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11636
  %5 = load volatile i32, i32* %4, align 4, !dbg !11636
  store volatile i32 %5, i32* %2, align 4, !dbg !11637
  %6 = load volatile i32, i32* %2, align 4, !dbg !11638
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11639
  %8 = load volatile i32, i32* %7, align 4, !dbg !11639
  store volatile i32 %8, i32* %2, align 4, !dbg !11640
  %9 = load volatile i32, i32* %2, align 4, !dbg !11641
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11642
  ret void, !dbg !11642
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11643 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11645, metadata !DIExpression()), !dbg !11647
  %3 = bitcast i32* %2 to i8*, !dbg !11648
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11648
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11646, metadata !DIExpression()), !dbg !11649
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11650
  %5 = load volatile i32, i32* %4, align 4, !dbg !11650
  store volatile i32 %5, i32* %2, align 4, !dbg !11651
  %6 = load volatile i32, i32* %2, align 4, !dbg !11652
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11653
  %8 = load volatile i32, i32* %7, align 4, !dbg !11653
  store volatile i32 %8, i32* %2, align 4, !dbg !11654
  %9 = load volatile i32, i32* %2, align 4, !dbg !11655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11656
  ret void, !dbg !11656
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11657 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11659, metadata !DIExpression()), !dbg !11661
  %3 = bitcast i32* %2 to i8*, !dbg !11662
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11662
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11660, metadata !DIExpression()), !dbg !11663
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11664
  %5 = load volatile i32, i32* %4, align 4, !dbg !11664
  store volatile i32 %5, i32* %2, align 4, !dbg !11665
  %6 = load volatile i32, i32* %2, align 4, !dbg !11666
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11667
  %8 = load volatile i32, i32* %7, align 4, !dbg !11667
  store volatile i32 %8, i32* %2, align 4, !dbg !11668
  %9 = load volatile i32, i32* %2, align 4, !dbg !11669
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11670
  ret void, !dbg !11670
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !11671 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11673, metadata !DIExpression()), !dbg !11675
  %3 = bitcast i32* %2 to i8*, !dbg !11676
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11676
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11674, metadata !DIExpression()), !dbg !11677
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11678
  %5 = load volatile i32, i32* %4, align 4, !dbg !11678
  store volatile i32 %5, i32* %2, align 4, !dbg !11679
  %6 = load volatile i32, i32* %2, align 4, !dbg !11680
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11681
  %8 = load volatile i32, i32* %7, align 4, !dbg !11681
  store volatile i32 %8, i32* %2, align 4, !dbg !11682
  %9 = load volatile i32, i32* %2, align 4, !dbg !11683
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11684
  ret void, !dbg !11684
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11685 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11687, metadata !DIExpression()), !dbg !11688
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11689
  %3 = load volatile i32, i32* %2, align 4, !dbg !11689
  %4 = lshr i32 %3, 7, !dbg !11690
  %5 = and i32 %4, 1, !dbg !11690
  ret i32 %5, !dbg !11691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11692 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11696, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i8 %1, metadata !11697, metadata !DIExpression()), !dbg !11698
  %3 = zext i8 %1 to i32, !dbg !11699
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11700
  store volatile i32 %3, i32* %4, align 4, !dbg !11701
  ret void, !dbg !11702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11703 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11705, metadata !DIExpression()), !dbg !11706
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11707
  %3 = load volatile i32, i32* %2, align 4, !dbg !11707
  %4 = lshr i32 %3, 5, !dbg !11708
  %5 = and i32 %4, 1, !dbg !11708
  ret i32 %5, !dbg !11709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11714, metadata !DIExpression()), !dbg !11715
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11716
  %3 = load volatile i32, i32* %2, align 4, !dbg !11716
  %4 = trunc i32 %3 to i8, !dbg !11717
  ret i8 %4, !dbg !11718
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11721, metadata !DIExpression()), !dbg !11727
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11728
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11728
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11728
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11722, metadata !DIExpression()), !dbg !11727
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11729
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11729
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11729
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11723, metadata !DIExpression()), !dbg !11727
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11730
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11731
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11731
  %10 = tail call fastcc zeroext i1 @device_is_ready.113(%struct.device* noundef %9) #26, !dbg !11733
  br i1 %10, label %14, label %11, !dbg !11734

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.105(i32 noundef 1) #26, !dbg !11735
  %13 = zext i8 %12 to i32, !dbg !11735
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6.114, i32 0, i32 0), i32 noundef %13) #27, !dbg !11735
  br label %62, !dbg !11741

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11742
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11743
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11743
  %18 = load i8*, i8** %17, align 4, !dbg !11743
  %19 = tail call fastcc i32 @clock_control_on.115(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !11744
  call void @llvm.dbg.value(metadata i32 %19, metadata !11726, metadata !DIExpression()), !dbg !11727
  %20 = icmp eq i32 %19, 0, !dbg !11745
  br i1 %20, label %24, label %21, !dbg !11747

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.105(i32 noundef 1) #26, !dbg !11748
  %23 = zext i8 %22 to i32, !dbg !11748
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.116, i32 0, i32 0), i32 noundef %23) #27, !dbg !11748
  br label %62, !dbg !11754

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11755
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11755
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !11756
  call void @llvm.dbg.value(metadata i32 %27, metadata !11726, metadata !DIExpression()), !dbg !11727
  %28 = icmp slt i32 %27, 0, !dbg !11757
  br i1 %28, label %62, label %29, !dbg !11759

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11760
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11760
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !11761
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11762
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !11763
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11764
  %34 = load i32, i32* %33, align 4, !dbg !11764
  %35 = icmp ult i32 %34, 3, !dbg !11766
  br i1 %35, label %39, label %36, !dbg !11766

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.105(i32 noundef 2) #26, !dbg !11767
  %38 = zext i8 %37 to i32, !dbg !11767
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8.117, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11767
  call void @llvm.dbg.value(metadata i32 0, metadata !11724, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.value(metadata i32 0, metadata !11725, metadata !DIExpression()), !dbg !11727
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11766
  %41 = load i32, i32* %40, align 4, !dbg !11766
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.9, i32 0, i32 %34, !dbg !11766
  %43 = load i32, i32* %42, align 4, !dbg !11766
  br label %44, !dbg !11766

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11776
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11776
  call void @llvm.dbg.value(metadata i32 %46, metadata !11725, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.value(metadata i32 %45, metadata !11724, metadata !DIExpression()), !dbg !11727
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11777
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !11778
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11779
  %49 = load i8, i8* %48, align 4, !dbg !11779, !range !7720
  %50 = icmp eq i8 %49, 0, !dbg !11779
  br i1 %50, label %52, label %51, !dbg !11781

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11782
  br label %52, !dbg !11784

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11785
  %54 = load i32, i32* %53, align 4, !dbg !11785
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !11786
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11787
  %56 = load i8, i8* %55, align 4, !dbg !11787, !range !7720
  %57 = icmp eq i8 %56, 0, !dbg !11787
  br i1 %57, label %60, label %58, !dbg !11789

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11790
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !11792
  br label %60, !dbg !11793

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11794
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !11795
  br label %62, !dbg !11796

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11727
  ret i32 %63, !dbg !11797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11802, metadata !DIExpression()), !dbg !11806
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11807
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11807
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11807
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11803, metadata !DIExpression()), !dbg !11806
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11804, metadata !DIExpression()), !dbg !11806
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11808
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11809
  ret void, !dbg !11810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.113(%struct.device* noundef %0) unnamed_addr #1 !dbg !11811 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11815, metadata !DIExpression()), !dbg !11816
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11817, !srcloc !11819
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.118(%struct.device* noundef %0) #26, !dbg !11820
  ret i1 %2, !dbg !11821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.115(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11824, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i8* %1, metadata !11825, metadata !DIExpression()), !dbg !11827
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11828
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11828
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11828
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11826, metadata !DIExpression()), !dbg !11827
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11829
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11829
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11830
  ret i32 %8, !dbg !11831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11832 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11836, metadata !DIExpression()), !dbg !11840
  call void @llvm.dbg.value(metadata i8 0, metadata !11837, metadata !DIExpression()), !dbg !11840
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11841
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11841
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11839, metadata !DIExpression(DW_OP_deref)), !dbg !11840
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11842
  call void @llvm.dbg.value(metadata i32 %4, metadata !11838, metadata !DIExpression()), !dbg !11840
  %5 = icmp slt i32 %4, 0, !dbg !11843
  br i1 %5, label %9, label %6, !dbg !11845

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11846
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11839, metadata !DIExpression()), !dbg !11840
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11847
  br label %9, !dbg !11848

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11840
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !11849
  ret i32 %10, !dbg !11849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11850 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11852, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i32 12, metadata !11853, metadata !DIExpression()), !dbg !11856
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11857

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11858, metadata !DIExpression()) #25, !dbg !11864
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !11867, !srcloc !11868
  call void @llvm.dbg.value(metadata i32 %4, metadata !11863, metadata !DIExpression()) #25, !dbg !11864
  %5 = or i32 %4, 12, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %5, metadata !11854, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.value(metadata i32 %5, metadata !11871, metadata !DIExpression()) #25, !dbg !11878
  call void @llvm.dbg.value(metadata i32* %2, metadata !11876, metadata !DIExpression()) #25, !dbg !11878
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !11880, !srcloc !11881
  call void @llvm.dbg.value(metadata i32 %6, metadata !11877, metadata !DIExpression()) #25, !dbg !11878
  %7 = icmp eq i32 %6, 0, !dbg !11857
  br i1 %7, label %8, label %3, !dbg !11869, !llvm.loop !11882

8:                                                ; preds = %3
  ret void, !dbg !11883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11884 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11886, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.value(metadata i32 %1, metadata !11887, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.value(metadata i32 %2, metadata !11888, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.value(metadata i32 0, metadata !11889, metadata !DIExpression()), !dbg !11890
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11891
  %5 = load volatile i32, i32* %4, align 4, !dbg !11891
  %6 = and i32 %5, -5633, !dbg !11891
  %7 = or i32 %2, %1, !dbg !11891
  %8 = or i32 %7, %6, !dbg !11891
  store volatile i32 %8, i32* %4, align 4, !dbg !11891
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11892
  %10 = load volatile i32, i32* %9, align 4, !dbg !11892
  %11 = and i32 %10, -12289, !dbg !11892
  store volatile i32 %11, i32* %9, align 4, !dbg !11892
  ret void, !dbg !11893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11894 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11896, metadata !DIExpression()), !dbg !11897
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11898
  %3 = load volatile i32, i32* %2, align 4, !dbg !11898
  %4 = or i32 %3, 8, !dbg !11898
  store volatile i32 %4, i32* %2, align 4, !dbg !11898
  ret void, !dbg !11899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11900 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11904, metadata !DIExpression()), !dbg !11907
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11905, metadata !DIExpression()), !dbg !11907
  call void @llvm.dbg.value(metadata i32 0, metadata !11906, metadata !DIExpression()), !dbg !11907
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11908
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11908
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11909
  %5 = load i8, i8* %4, align 4, !dbg !11909
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11910
  ret i32 %6, !dbg !11911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.118(%struct.device* noundef %0) unnamed_addr #1 !dbg !11912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11914, metadata !DIExpression()), !dbg !11915
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11916
  ret i1 %2, !dbg !11917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11920, metadata !DIExpression()), !dbg !11921
  tail call fastcc void @__NVIC_SetPriority.120() #26, !dbg !11922
  store i32 8399, i32* @last_load, align 4, !dbg !11923
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11924
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11925
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11926
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11927
  %3 = or i32 %2, 7, !dbg !11927
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11927
  ret i32 0, !dbg !11928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.120() unnamed_addr #16 !dbg !11929 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11931, metadata !DIExpression()), !dbg !11933
  call void @llvm.dbg.value(metadata i32 1, metadata !11932, metadata !DIExpression()), !dbg !11933
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11934
  ret void, !dbg !11937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11938 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11940, metadata !DIExpression()), !dbg !11942
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11943
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11944
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11945
  %5 = add i32 %4, %3, !dbg !11945
  store i32 %5, i32* @cycle_count, align 4, !dbg !11945
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11946
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11947
  %7 = sub i32 %5, %6, !dbg !11950
  %8 = udiv i32 %7, 8400, !dbg !11951
  call void @llvm.dbg.value(metadata i32 %8, metadata !11941, metadata !DIExpression()), !dbg !11942
  %9 = mul nuw i32 %8, 8400, !dbg !11952
  %10 = add i32 %9, %6, !dbg !11953
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11953
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !11954
  tail call void @z_arm_int_exit() #27, !dbg !11955
  ret void, !dbg !11956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11957 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %1, metadata !11959, metadata !DIExpression()), !dbg !11963
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11964
  call void @llvm.dbg.value(metadata i32 %2, metadata !11960, metadata !DIExpression()), !dbg !11963
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11965
  call void @llvm.dbg.value(metadata i32 %3, metadata !11961, metadata !DIExpression()), !dbg !11963
  %4 = and i32 %2, 65536, !dbg !11966
  %5 = icmp ne i32 %4, 0, !dbg !11966
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11968
  %8 = load i32, i32* @last_load, align 4, !dbg !11963
  br i1 %7, label %9, label %13, !dbg !11968

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11969
  %11 = add i32 %10, %8, !dbg !11969
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11969
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11971
  br label %13, !dbg !11972

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11973
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11974
  %16 = add i32 %14, %15, !dbg !11975
  ret i32 %16, !dbg !11976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11981, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i1 %1, metadata !11982, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11994
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11995
  br i1 %4, label %5, label %8, !dbg !11995

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11997
  %7 = and i32 %6, -2, !dbg !11997
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11997
  store i32 -16777216, i32* @last_load, align 4, !dbg !11999
  br label %54, !dbg !12000

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12001
  call void @llvm.dbg.value(metadata i32 %9, metadata !11986, metadata !DIExpression()), !dbg !11994
  br i1 %3, label %18, label %10, !dbg !12002

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12002
  call void @llvm.dbg.value(metadata i32 undef, metadata !11981, metadata !DIExpression()), !dbg !11994
  %12 = icmp slt i32 %11, 1, !dbg !12003
  br i1 %12, label %18, label %13, !dbg !12003

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12003
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12003
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12003
  %17 = add nuw nsw i32 %16, 8399, !dbg !12003
  br label %18, !dbg !12003

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11981, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12004, metadata !DIExpression()) #25, !dbg !12011
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12013, !srcloc !12019
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !12013
  call void @llvm.dbg.value(metadata i32 %21, metadata !12016, metadata !DIExpression()) #25, !dbg !12020
  call void @llvm.dbg.value(metadata i32 undef, metadata !12017, metadata !DIExpression()) #25, !dbg !12020
  call void @llvm.dbg.value(metadata i32 %21, metadata !12010, metadata !DIExpression()) #25, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %21, metadata !11987, metadata !DIExpression()), !dbg !11994
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %22, metadata !11992, metadata !DIExpression()), !dbg !11994
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %23, metadata !11984, metadata !DIExpression()), !dbg !11994
  %24 = load i32, i32* @cycle_count, align 4, !dbg !12023
  %25 = add i32 %24, %22, !dbg !12023
  store i32 %25, i32* @cycle_count, align 4, !dbg !12023
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12024
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !12025
  %27 = sub i32 %25, %26, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %27, metadata !11993, metadata !DIExpression()), !dbg !11994
  %28 = icmp slt i32 %27, 0, !dbg !12027
  br i1 %28, label %38, label %29, !dbg !12029

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11983, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.value(metadata i32 undef, metadata !11983, metadata !DIExpression()), !dbg !11994
  %30 = add nuw i32 %19, %27, !dbg !12030
  %31 = urem i32 %30, 8400, !dbg !12032
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11983, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11994
  %32 = sub nuw nsw i32 %19, %31, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %32, metadata !11983, metadata !DIExpression()), !dbg !11994
  %33 = icmp ugt i32 %32, 1024, !dbg !12034
  br i1 %33, label %34, label %36, !dbg !12034

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11983, metadata !DIExpression()), !dbg !11994
  %35 = icmp ugt i32 %32, 16766400, !dbg !12035
  br i1 %35, label %38, label %36, !dbg !12037

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !12038
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %40, metadata !11985, metadata !DIExpression()), !dbg !11994
  %41 = add nsw i32 %39, -1, !dbg !12040
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12041
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12042
  %42 = icmp ult i32 %23, %40, !dbg !12043
  br i1 %42, label %43, label %48, !dbg !12045

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !12046
  %45 = add i32 %23, %9, !dbg !12048
  %46 = sub i32 %45, %40, !dbg !12049
  %47 = add i32 %46, %44, !dbg !12046
  br label %52, !dbg !12050

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !12051
  %50 = load i32, i32* @cycle_count, align 4, !dbg !12053
  %51 = add i32 %49, %50, !dbg !12053
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !12054
  store i32 %53, i32* @cycle_count, align 4, !dbg !12054
  call void @llvm.dbg.value(metadata i32 %21, metadata !12055, metadata !DIExpression()) #25, !dbg !12061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12060, metadata !DIExpression()) #25, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %21, metadata !12063, metadata !DIExpression()) #25, !dbg !12066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !12068, !srcloc !12069
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !12070
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12071 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12004, metadata !DIExpression()) #25, !dbg !12075
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12077, !srcloc !12019
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %2, metadata !12016, metadata !DIExpression()) #25, !dbg !12079
  call void @llvm.dbg.value(metadata i32 undef, metadata !12017, metadata !DIExpression()) #25, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %2, metadata !12010, metadata !DIExpression()) #25, !dbg !12075
  call void @llvm.dbg.value(metadata i32 %2, metadata !12073, metadata !DIExpression()), !dbg !12080
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12081
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12082
  %5 = add i32 %4, %3, !dbg !12083
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12084
  %7 = sub i32 %5, %6, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %7, metadata !12074, metadata !DIExpression()), !dbg !12080
  call void @llvm.dbg.value(metadata i32 %2, metadata !12055, metadata !DIExpression()) #25, !dbg !12086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12060, metadata !DIExpression()) #25, !dbg !12086
  call void @llvm.dbg.value(metadata i32 %2, metadata !12063, metadata !DIExpression()) #25, !dbg !12088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12090, !srcloc !12069
  %8 = udiv i32 %7, 8400, !dbg !12091
  ret i32 %8, !dbg !12092
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12093 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12004, metadata !DIExpression()) #25, !dbg !12097
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12099, !srcloc !12019
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12099
  call void @llvm.dbg.value(metadata i32 %2, metadata !12016, metadata !DIExpression()) #25, !dbg !12101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12017, metadata !DIExpression()) #25, !dbg !12101
  call void @llvm.dbg.value(metadata i32 %2, metadata !12010, metadata !DIExpression()) #25, !dbg !12097
  call void @llvm.dbg.value(metadata i32 %2, metadata !12095, metadata !DIExpression()), !dbg !12102
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !12103
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12104
  %5 = add i32 %4, %3, !dbg !12105
  call void @llvm.dbg.value(metadata i32 %5, metadata !12096, metadata !DIExpression()), !dbg !12102
  call void @llvm.dbg.value(metadata i32 %2, metadata !12055, metadata !DIExpression()) #25, !dbg !12106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12060, metadata !DIExpression()) #25, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %2, metadata !12063, metadata !DIExpression()) #25, !dbg !12108
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !12110, !srcloc !12069
  ret i32 %5, !dbg !12111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !12112 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12113
  %2 = icmp eq i32 %1, -16777216, !dbg !12115
  br i1 %2, label %3, label %6, !dbg !12116

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12117
  %5 = or i32 %4, 1, !dbg !12117
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12117
  br label %6, !dbg !12119

6:                                                ; preds = %3, %0
  ret void, !dbg !12120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !12121 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12122
  %2 = and i32 %1, -2, !dbg !12122
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12122
  ret void, !dbg !12123
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12124 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12150, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i8 %1, metadata !12151, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12152, metadata !DIExpression()), !dbg !12153
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12154
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12154
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12153
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12155
  %8 = load i8, i8* %6, align 4, !dbg !12156
  %9 = zext i8 %8 to i32, !dbg !12157
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12157
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12158
  br i1 %11, label %18, label %24, !dbg !12159

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12153
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12155
  %14 = load i8, i8* %6, align 4, !dbg !12156
  %15 = zext i8 %14 to i32, !dbg !12157
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12157
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12158
  br i1 %17, label %18, label %24, !dbg !12159, !llvm.loop !12160

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12162
  %21 = load i8, i8* %20, align 1, !dbg !12162
  %22 = icmp eq i8 %21, %1, !dbg !12165
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12166
  br i1 %22, label %24, label %12, !dbg !12167

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12153
  ret i32 %25, !dbg !12168
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12169 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12180, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i8 %1, metadata !12181, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 %2, metadata !12182, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 0, metadata !12185, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i32 0, metadata !12186, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.value(metadata i8 0, metadata !12187, metadata !DIExpression()), !dbg !12197
  %4 = icmp eq i8 %1, 0, !dbg !12198
  br i1 %4, label %35, label %5, !dbg !12199

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12198
  br label %9, !dbg !12199

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12187, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata i32 %29, metadata !12185, metadata !DIExpression()), !dbg !12196
  %8 = icmp eq i32 %34, %6, !dbg !12198
  br i1 %8, label %35, label %9, !dbg !12199, !llvm.loop !12200

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12187, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata i32 %11, metadata !12185, metadata !DIExpression()), !dbg !12196
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12202
  %13 = load i32, i32* %12, align 4, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %13, metadata !12184, metadata !DIExpression()), !dbg !12196
  %14 = and i32 %13, 31, !dbg !12203
  %15 = icmp ult i32 %14, 16, !dbg !12204
  br i1 %15, label %16, label %20, !dbg !12205

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12206
  %18 = load i32, i32* %17, align 4, !dbg !12206
  %19 = or i32 %18, 32, !dbg !12208
  call void @llvm.dbg.value(metadata i32 %19, metadata !12185, metadata !DIExpression()), !dbg !12196
  br label %28, !dbg !12209

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12210

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12211
  %23 = load i32, i32* %22, align 4, !dbg !12211
  call void @llvm.dbg.value(metadata i32 %23, metadata !12189, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12212
  %24 = lshr i32 %23, 7, !dbg !12213
  %25 = and i32 %24, 16, !dbg !12213
  %26 = or i32 %25, %23, !dbg !12213
  call void @llvm.dbg.value(metadata i32 %26, metadata !12185, metadata !DIExpression()), !dbg !12196
  br label %28, !dbg !12214

27:                                               ; preds = %20
  br label %28, !dbg !12215

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !12196
  call void @llvm.dbg.value(metadata i32 %29, metadata !12185, metadata !DIExpression()), !dbg !12196
  %30 = lshr i32 %13, 5, !dbg !12215
  %31 = and i32 %30, 255, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %31, metadata !12183, metadata !DIExpression()), !dbg !12196
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !12216
  call void @llvm.dbg.value(metadata i32 %32, metadata !12186, metadata !DIExpression()), !dbg !12196
  %33 = icmp slt i32 %32, 0, !dbg !12217
  %34 = add nuw nsw i32 %10, 1, !dbg !12219
  call void @llvm.dbg.value(metadata i32 %34, metadata !12187, metadata !DIExpression()), !dbg !12197
  br i1 %33, label %35, label %7, !dbg !12220

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12226, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata i32 %1, metadata !12227, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata i32 %2, metadata !12228, metadata !DIExpression()), !dbg !12230
  %4 = icmp ugt i32 %0, 175, !dbg !12231
  br i1 %4, label %16, label %5, !dbg !12233

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12234
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12235
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12235
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12229, metadata !DIExpression()), !dbg !12230
  %9 = add nsw i32 %6, -8, !dbg !12236
  %10 = icmp ult i32 %9, 3, !dbg !12236
  br i1 %10, label %16, label %11, !dbg !12238

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %8) #26, !dbg !12239
  br i1 %12, label %13, label %16, !dbg !12240

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12241
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12242
  br label %16, !dbg !12243

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12230
  ret i32 %17, !dbg !12244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.125(%struct.device* noundef %0) unnamed_addr #1 !dbg !12245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12249, metadata !DIExpression()), !dbg !12250
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12251, !srcloc !12253
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) #26, !dbg !12254
  ret i1 %2, !dbg !12255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.126(%struct.device* noundef %0) unnamed_addr #1 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12258, metadata !DIExpression()), !dbg !12259
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12260
  ret i1 %2, !dbg !12261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12262 {
  ret void, !dbg !12263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !12264 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12266, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 0, metadata !12267, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 2, metadata !12268, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 0, metadata !12269, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 2, metadata !12270, metadata !DIExpression()), !dbg !12271
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12272
  %2 = and i32 %1, 12, !dbg !12273
  call void @llvm.dbg.value(metadata i32 %2, metadata !12266, metadata !DIExpression()), !dbg !12271
  %3 = icmp eq i32 %2, 8, !dbg !12274
  br i1 %3, label %4, label %18, !dbg !12274

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %5, metadata !12269, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12271
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12277
  %7 = and i32 %6, 63, !dbg !12278
  call void @llvm.dbg.value(metadata i32 %7, metadata !12270, metadata !DIExpression()), !dbg !12271
  %8 = udiv i32 16000000, %7, !dbg !12279
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12279
  %10 = lshr i32 %9, 6, !dbg !12279
  %11 = and i32 %10, 511, !dbg !12279
  %12 = mul i32 %11, %8, !dbg !12279
  call void @llvm.dbg.value(metadata i32 %12, metadata !12267, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %12, metadata !12267, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.value(metadata i32 %12, metadata !12267, metadata !DIExpression()), !dbg !12271
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12281
  %14 = lshr i32 %13, 15, !dbg !12282
  %15 = and i32 %14, 6, !dbg !12282
  %16 = add nuw nsw i32 %15, 2, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %16, metadata !12268, metadata !DIExpression()), !dbg !12271
  %17 = udiv i32 %12, %16, !dbg !12283
  br label %18, !dbg !12284

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12285
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12286
  %21 = lshr i32 %20, 4, !dbg !12287
  %22 = and i32 %21, 15, !dbg !12287
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12288
  %24 = load i8, i8* %23, align 1, !dbg !12288
  %25 = zext i8 %24 to i32, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %25, metadata !12266, metadata !DIExpression()), !dbg !12271
  %26 = lshr i32 %19, %25, !dbg !12289
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12289
  ret void, !dbg !12290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12291 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12333, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12334, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12335, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12336, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12337, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12338, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12339, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12340, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12341, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 0, metadata !12342, metadata !DIExpression()), !dbg !12347
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12348
  %4 = load i32, i32* %3, align 4, !dbg !12348
  %5 = and i32 %4, 1, !dbg !12350
  %6 = icmp eq i32 %5, 0, !dbg !12351
  br i1 %6, label %17, label %7, !dbg !12352

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12353
  %9 = and i32 %8, -100663297, !dbg !12353
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12353
  %11 = load i32, i32* %10, align 4, !dbg !12353
  %12 = or i32 %9, %11, !dbg !12353
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12353
  %13 = load i32, i32* %10, align 4, !dbg !12355
  %14 = icmp eq i32 %13, 0, !dbg !12357
  %15 = zext i1 %14 to i32, !dbg !12358
  %16 = load i32, i32* %3, align 4, !dbg !12359
  br label %17, !dbg !12358

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !12359
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !12347
  call void @llvm.dbg.value(metadata i32 %19, metadata !12341, metadata !DIExpression()), !dbg !12347
  %20 = and i32 %18, 2, !dbg !12361
  %21 = icmp eq i32 %20, 0, !dbg !12362
  br i1 %21, label %32, label %22, !dbg !12363

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12364
  %24 = and i32 %23, -402653185, !dbg !12364
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12364
  %26 = load i32, i32* %25, align 4, !dbg !12364
  %27 = or i32 %24, %26, !dbg !12364
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12364
  %28 = load i32, i32* %25, align 4, !dbg !12366
  %29 = icmp eq i32 %28, 0, !dbg !12368
  %30 = select i1 %29, i32 1, i32 %19, !dbg !12369
  %31 = load i32, i32* %3, align 4, !dbg !12370
  br label %32, !dbg !12369

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !12370
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !12347
  call void @llvm.dbg.value(metadata i32 %34, metadata !12341, metadata !DIExpression()), !dbg !12347
  %35 = and i32 %33, 4, !dbg !12372
  %36 = icmp eq i32 %35, 0, !dbg !12373
  br i1 %36, label %49, label %37, !dbg !12374

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12375
  %39 = and i32 %38, -3145729, !dbg !12375
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12375
  %41 = load i32, i32* %40, align 4, !dbg !12375
  %42 = or i32 %39, %41, !dbg !12375
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12375
  %43 = load i32, i32* %40, align 4, !dbg !12377
  %44 = icmp eq i32 %43, 1048576, !dbg !12379
  %45 = select i1 %44, i32 1, i32 %34, !dbg !12380
  call void @llvm.dbg.value(metadata i32 %45, metadata !12341, metadata !DIExpression()), !dbg !12347
  %46 = icmp eq i32 %43, 0, !dbg !12381
  %47 = zext i1 %46 to i32, !dbg !12383
  %48 = load i32, i32* %3, align 4, !dbg !12384
  br label %49, !dbg !12383

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !12384
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !12347
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !12347
  call void @llvm.dbg.value(metadata i32 %52, metadata !12342, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 %51, metadata !12341, metadata !DIExpression()), !dbg !12347
  %53 = and i32 %50, 8, !dbg !12386
  %54 = icmp eq i32 %53, 0, !dbg !12387
  br i1 %54, label %67, label %55, !dbg !12388

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12389
  %57 = and i32 %56, -12582913, !dbg !12389
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12389
  %59 = load i32, i32* %58, align 4, !dbg !12389
  %60 = or i32 %57, %59, !dbg !12389
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12389
  %61 = load i32, i32* %58, align 4, !dbg !12391
  %62 = icmp eq i32 %61, 4194304, !dbg !12393
  %63 = select i1 %62, i32 1, i32 %51, !dbg !12394
  call void @llvm.dbg.value(metadata i32 %63, metadata !12341, metadata !DIExpression()), !dbg !12347
  %64 = icmp eq i32 %61, 0, !dbg !12395
  %65 = select i1 %64, i32 1, i32 %52, !dbg !12397
  %66 = load i32, i32* %3, align 4, !dbg !12398
  br label %67, !dbg !12397

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !12398
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !12347
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !12347
  call void @llvm.dbg.value(metadata i32 %70, metadata !12342, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 %69, metadata !12341, metadata !DIExpression()), !dbg !12347
  %71 = and i32 %68, 32, !dbg !12399
  %72 = icmp eq i32 %71, 0, !dbg !12400
  br i1 %72, label %131, label %73, !dbg !12401

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !12402
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !12402
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12343, metadata !DIExpression()), !dbg !12402
  store volatile i32 0, i32* %2, align 4, !dbg !12402
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12402
  %76 = or i32 %75, 268435456, !dbg !12402
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12402
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12402
  %78 = and i32 %77, 268435456, !dbg !12402
  store volatile i32 %78, i32* %2, align 4, !dbg !12402
  %79 = load volatile i32, i32* %2, align 4, !dbg !12402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !12403
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12404
  %81 = or i32 %80, 256, !dbg !12404
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12404
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !12405
  call void @llvm.dbg.value(metadata i32 %82, metadata !12334, metadata !DIExpression()), !dbg !12347
  br label %83, !dbg !12406

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12407
  %85 = and i32 %84, 256, !dbg !12408
  %86 = icmp eq i32 %85, 0, !dbg !12409
  br i1 %86, label %87, label %91, !dbg !12406

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #27, !dbg !12410
  %89 = sub i32 %88, %82, !dbg !12413
  %90 = icmp ugt i32 %89, 2, !dbg !12414
  br i1 %90, label %439, label %83, !dbg !12415, !llvm.loop !12416

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12418
  %93 = and i32 %92, 768, !dbg !12419
  call void @llvm.dbg.value(metadata i32 %93, metadata !12335, metadata !DIExpression()), !dbg !12347
  %94 = icmp eq i32 %93, 0, !dbg !12420
  br i1 %94, label %116, label %95, !dbg !12422

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12423
  %97 = load i32, i32* %96, align 4, !dbg !12423
  %98 = and i32 %97, 768, !dbg !12424
  %99 = icmp eq i32 %93, %98, !dbg !12425
  br i1 %99, label %116, label %100, !dbg !12426

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12427
  %102 = and i32 %101, -769, !dbg !12429
  call void @llvm.dbg.value(metadata i32 %102, metadata !12335, metadata !DIExpression()), !dbg !12347
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12430
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !12431
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12432
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12433
  %104 = and i32 %103, 1, !dbg !12433
  %105 = icmp eq i32 %104, 0, !dbg !12433
  br i1 %105, label %116, label %106, !dbg !12435

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #27, !dbg !12436
  call void @llvm.dbg.value(metadata i32 %107, metadata !12334, metadata !DIExpression()), !dbg !12347
  br label %108, !dbg !12438

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12439
  %110 = and i32 %109, 2, !dbg !12440
  %111 = icmp eq i32 %110, 0, !dbg !12440
  br i1 %111, label %112, label %116, !dbg !12438

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #27, !dbg !12441
  %114 = sub i32 %113, %107, !dbg !12444
  %115 = icmp ugt i32 %114, 5000, !dbg !12445
  br i1 %115, label %439, label %108, !dbg !12446, !llvm.loop !12447

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12449
  %118 = load i32, i32* %117, align 4, !dbg !12449
  %119 = and i32 %118, 768, !dbg !12449
  %120 = icmp eq i32 %119, 768, !dbg !12449
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12449
  %122 = and i32 %121, -2031617, !dbg !12449
  %123 = and i32 %118, 268434687, !dbg !12449
  %124 = select i1 %120, i32 %123, i32 0, !dbg !12449
  %125 = or i32 %122, %124, !dbg !12449
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12449
  %126 = load i32, i32* %117, align 4, !dbg !12449
  %127 = and i32 %126, 4095, !dbg !12449
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12449
  %129 = or i32 %128, %127, !dbg !12449
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12449
  %130 = load i32, i32* %3, align 4, !dbg !12451
  br label %131, !dbg !12453

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !12451
  %133 = and i32 %132, 16, !dbg !12454
  %134 = icmp eq i32 %133, 0, !dbg !12455
  br i1 %134, label %140, label %135, !dbg !12456

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12457
  %137 = load i8, i8* %136, align 4, !dbg !12457
  %138 = zext i8 %137 to i32, !dbg !12457
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !12457
  %139 = load i32, i32* %3, align 4, !dbg !12459
  br label %140, !dbg !12461

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !12459
  %142 = and i32 %141, 128, !dbg !12462
  %143 = icmp eq i32 %142, 0, !dbg !12463
  br i1 %143, label %151, label %144, !dbg !12464

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12465
  %146 = and i32 %145, -12582913, !dbg !12465
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12465
  %148 = load i32, i32* %147, align 4, !dbg !12465
  %149 = or i32 %146, %148, !dbg !12465
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12465
  %150 = load i32, i32* %3, align 4, !dbg !12467
  br label %151, !dbg !12469

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !12467
  %153 = and i32 %152, 64, !dbg !12470
  %154 = icmp eq i32 %153, 0, !dbg !12471
  br i1 %154, label %162, label %155, !dbg !12472

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12473
  %157 = and i32 %156, -67108865, !dbg !12473
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12473
  %159 = load i32, i32* %158, align 4, !dbg !12473
  %160 = or i32 %157, %159, !dbg !12473
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12473
  %161 = load i32, i32* %3, align 4, !dbg !12475
  br label %162, !dbg !12477

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !12475
  %164 = and i32 %163, 256, !dbg !12478
  %165 = icmp eq i32 %164, 0, !dbg !12479
  br i1 %165, label %176, label %166, !dbg !12480

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12481
  %168 = and i32 %167, -134217729, !dbg !12481
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12481
  %170 = load i32, i32* %169, align 4, !dbg !12481
  %171 = or i32 %168, %170, !dbg !12481
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12481
  %172 = load i32, i32* %169, align 4, !dbg !12483
  %173 = icmp eq i32 %172, 134217728, !dbg !12485
  %174 = select i1 %173, i32 1, i32 %70, !dbg !12486
  %175 = load i32, i32* %3, align 4, !dbg !12487
  br label %176, !dbg !12486

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !12487
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !12347
  call void @llvm.dbg.value(metadata i32 %178, metadata !12342, metadata !DIExpression()), !dbg !12347
  %179 = and i32 %177, 512, !dbg !12489
  %180 = icmp eq i32 %179, 0, !dbg !12490
  br i1 %180, label %188, label %181, !dbg !12491

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12492
  %183 = and i32 %182, -268435457, !dbg !12492
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12492
  %185 = load i32, i32* %184, align 4, !dbg !12492
  %186 = or i32 %183, %185, !dbg !12492
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12492
  %187 = load i32, i32* %3, align 4, !dbg !12494
  br label %188, !dbg !12496

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !12494
  %190 = and i32 %189, 1024, !dbg !12497
  %191 = icmp eq i32 %190, 0, !dbg !12498
  br i1 %191, label %204, label %192, !dbg !12499

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12500
  %194 = and i32 %193, -536870913, !dbg !12500
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12500
  %196 = load i32, i32* %195, align 4, !dbg !12500
  %197 = or i32 %194, %196, !dbg !12500
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12500
  %198 = load i32, i32* %195, align 4, !dbg !12502
  %199 = icmp eq i32 %198, 536870912, !dbg !12504
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !12505
  call void @llvm.dbg.value(metadata i32 %69, metadata !12341, metadata !DIExpression()), !dbg !12347
  br i1 %201, label %209, label %202, !dbg !12505

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !12506
  br label %206, !dbg !12505

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !12341, metadata !DIExpression()), !dbg !12347
  %205 = icmp eq i32 %69, 1, !dbg !12508
  br i1 %205, label %209, label %206, !dbg !12509

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !12506
  %208 = icmp eq i32 %207, 2048, !dbg !12510
  br i1 %208, label %209, label %356, !dbg !12511

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12512
  %210 = tail call i32 @HAL_GetTick() #27, !dbg !12514
  call void @llvm.dbg.value(metadata i32 %210, metadata !12334, metadata !DIExpression()), !dbg !12347
  br label %211, !dbg !12515

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12516
  %213 = and i32 %212, 134217728, !dbg !12516
  %214 = icmp eq i32 %213, 0, !dbg !12516
  br i1 %214, label %219, label %215, !dbg !12515

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !12517
  %217 = sub i32 %216, %210, !dbg !12520
  %218 = icmp ugt i32 %217, 2, !dbg !12521
  br i1 %218, label %439, label %211, !dbg !12522, !llvm.loop !12523

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !12525
  %221 = and i32 %220, 1, !dbg !12527
  %222 = icmp eq i32 %221, 0, !dbg !12528
  br i1 %222, label %227, label %223, !dbg !12529

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12530
  %225 = load i32, i32* %224, align 4, !dbg !12530
  %226 = icmp eq i32 %225, 0, !dbg !12531
  br i1 %226, label %234, label %227, !dbg !12532

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !12533
  %229 = icmp eq i32 %228, 0, !dbg !12534
  br i1 %229, label %252, label %230, !dbg !12535

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12536
  %232 = load i32, i32* %231, align 4, !dbg !12536
  %233 = icmp eq i32 %232, 0, !dbg !12537
  br i1 %233, label %234, label %252, !dbg !12538

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12539
  %236 = and i32 %235, 196608, !dbg !12541
  call void @llvm.dbg.value(metadata i32 %236, metadata !12336, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12347
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12542
  %238 = and i32 %237, 251658240, !dbg !12543
  call void @llvm.dbg.value(metadata i32 %238, metadata !12337, metadata !DIExpression()), !dbg !12347
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12544
  %240 = load i32, i32* %239, align 4, !dbg !12544
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12544
  %242 = load i32, i32* %241, align 4, !dbg !12544
  %243 = shl i32 %242, 6, !dbg !12544
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12544
  %245 = load i32, i32* %244, align 4, !dbg !12544
  %246 = shl i32 %245, 28, !dbg !12544
  %247 = or i32 %240, %236, !dbg !12544
  %248 = or i32 %247, %238, !dbg !12544
  %249 = or i32 %248, %243, !dbg !12544
  %250 = or i32 %249, %246, !dbg !12544
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12544
  %251 = load i32, i32* %3, align 4, !dbg !12545
  br label %252, !dbg !12547

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !12545
  %254 = and i32 %253, 4, !dbg !12548
  %255 = icmp eq i32 %254, 0, !dbg !12549
  br i1 %255, label %260, label %256, !dbg !12550

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12551
  %258 = load i32, i32* %257, align 4, !dbg !12551
  %259 = icmp eq i32 %258, 1048576, !dbg !12552
  br i1 %259, label %267, label %260, !dbg !12553

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !12554
  %262 = icmp eq i32 %261, 0, !dbg !12555
  br i1 %262, label %291, label %263, !dbg !12556

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12557
  %265 = load i32, i32* %264, align 4, !dbg !12557
  %266 = icmp eq i32 %265, 4194304, !dbg !12558
  br i1 %266, label %267, label %291, !dbg !12559

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12560
  %269 = and i32 %268, 196608, !dbg !12562
  call void @llvm.dbg.value(metadata i32 %269, metadata !12336, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12347
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12563
  %271 = and i32 %270, 1879048192, !dbg !12564
  call void @llvm.dbg.value(metadata i32 %271, metadata !12338, metadata !DIExpression()), !dbg !12347
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12565
  %273 = load i32, i32* %272, align 4, !dbg !12565
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12565
  %275 = load i32, i32* %274, align 4, !dbg !12565
  %276 = shl i32 %275, 6, !dbg !12565
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12565
  %278 = load i32, i32* %277, align 4, !dbg !12565
  %279 = shl i32 %278, 24, !dbg !12565
  %280 = or i32 %273, %269, !dbg !12565
  %281 = or i32 %280, %271, !dbg !12565
  %282 = or i32 %281, %276, !dbg !12565
  %283 = or i32 %282, %279, !dbg !12565
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12565
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12566
  %285 = and i32 %284, -32, !dbg !12566
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12566
  %287 = load i32, i32* %286, align 4, !dbg !12566
  %288 = add i32 %287, -1, !dbg !12566
  %289 = or i32 %288, %285, !dbg !12566
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12566
  %290 = load i32, i32* %3, align 4, !dbg !12567
  br label %291, !dbg !12569

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !12567
  %293 = and i32 %292, 1024, !dbg !12570
  %294 = icmp eq i32 %293, 0, !dbg !12571
  br i1 %294, label %321, label %295, !dbg !12572

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12573
  %297 = load i32, i32* %296, align 4, !dbg !12573
  %298 = icmp eq i32 %297, 536870912, !dbg !12574
  br i1 %298, label %299, label %321, !dbg !12575

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12576
  call void @llvm.dbg.value(metadata i32 %300, metadata !12337, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12347
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12578
  %302 = and i32 %301, 1879048192, !dbg !12579
  call void @llvm.dbg.value(metadata i32 %302, metadata !12338, metadata !DIExpression()), !dbg !12347
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12580
  %304 = load i32, i32* %303, align 4, !dbg !12580
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12580
  %306 = load i32, i32* %305, align 4, !dbg !12580
  %307 = shl i32 %306, 6, !dbg !12580
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12580
  %309 = load i32, i32* %308, align 4, !dbg !12580
  %310 = shl i32 %309, 15, !dbg !12580
  %311 = add i32 %310, -65536, !dbg !12580
  %312 = and i32 %311, -65536, !dbg !12580
  %313 = shl i32 %300, 9, !dbg !12580
  %314 = and i32 %313, 100663296, !dbg !12580
  %315 = add nuw nsw i32 %314, 33554432, !dbg !12580
  %316 = or i32 %302, %304, !dbg !12580
  %317 = or i32 %316, %315, !dbg !12580
  %318 = or i32 %317, %307, !dbg !12580
  %319 = or i32 %318, %312, !dbg !12580
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12580
  %320 = load i32, i32* %3, align 4, !dbg !12581
  br label %321, !dbg !12583

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !12581
  %323 = and i32 %322, 2048, !dbg !12584
  %324 = icmp eq i32 %323, 0, !dbg !12585
  br i1 %324, label %346, label %325, !dbg !12586

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12587
  %327 = load i32, i32* %326, align 4, !dbg !12587
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12587
  %329 = load i32, i32* %328, align 4, !dbg !12587
  %330 = shl i32 %329, 6, !dbg !12587
  %331 = or i32 %330, %327, !dbg !12587
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12587
  %333 = load i32, i32* %332, align 4, !dbg !12587
  %334 = shl i32 %333, 15, !dbg !12587
  %335 = add i32 %334, -65536, !dbg !12587
  %336 = and i32 %335, -65536, !dbg !12587
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12587
  %338 = load i32, i32* %337, align 4, !dbg !12587
  %339 = shl i32 %338, 24, !dbg !12587
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12587
  %341 = load i32, i32* %340, align 4, !dbg !12587
  %342 = shl i32 %341, 28, !dbg !12587
  %343 = or i32 %331, %339, !dbg !12587
  %344 = or i32 %343, %336, !dbg !12587
  %345 = or i32 %344, %342, !dbg !12587
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12587
  br label %346, !dbg !12589

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12590
  %347 = tail call i32 @HAL_GetTick() #27, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %347, metadata !12334, metadata !DIExpression()), !dbg !12347
  br label %348, !dbg !12592

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12593
  %350 = and i32 %349, 134217728, !dbg !12594
  %351 = icmp eq i32 %350, 0, !dbg !12594
  br i1 %351, label %352, label %356, !dbg !12592

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #27, !dbg !12595
  %354 = sub i32 %353, %347, !dbg !12598
  %355 = icmp ugt i32 %354, 2, !dbg !12599
  br i1 %355, label %439, label %348, !dbg !12600, !llvm.loop !12601

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !12603
  br i1 %357, label %358, label %439, !dbg !12605

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12606
  %359 = tail call i32 @HAL_GetTick() #27, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %359, metadata !12334, metadata !DIExpression()), !dbg !12347
  br label %360, !dbg !12609

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12610
  %362 = and i32 %361, 536870912, !dbg !12610
  %363 = icmp eq i32 %362, 0, !dbg !12610
  br i1 %363, label %368, label %364, !dbg !12609

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #27, !dbg !12611
  %366 = sub i32 %365, %359, !dbg !12614
  %367 = icmp ugt i32 %366, 2, !dbg !12615
  br i1 %367, label %439, label %360, !dbg !12616, !llvm.loop !12617

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !12619
  %370 = and i32 %369, 4, !dbg !12621
  %371 = icmp eq i32 %370, 0, !dbg !12622
  br i1 %371, label %376, label %372, !dbg !12623

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12624
  %374 = load i32, i32* %373, align 4, !dbg !12624
  %375 = icmp eq i32 %374, 0, !dbg !12625
  br i1 %375, label %383, label %376, !dbg !12626

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !12627
  %378 = icmp eq i32 %377, 0, !dbg !12628
  br i1 %378, label %405, label %379, !dbg !12629

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12630
  %381 = load i32, i32* %380, align 4, !dbg !12630
  %382 = icmp eq i32 %381, 0, !dbg !12631
  br i1 %382, label %383, label %405, !dbg !12632

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12633
  %385 = and i32 %384, 196608, !dbg !12635
  call void @llvm.dbg.value(metadata i32 %385, metadata !12339, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !12347
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12636
  %387 = load i32, i32* %386, align 4, !dbg !12636
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12636
  %389 = load i32, i32* %388, align 4, !dbg !12636
  %390 = shl i32 %389, 6, !dbg !12636
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12636
  %392 = load i32, i32* %391, align 4, !dbg !12636
  %393 = shl i32 %392, 24, !dbg !12636
  %394 = or i32 %385, %387, !dbg !12636
  %395 = or i32 %394, %390, !dbg !12636
  %396 = or i32 %395, %393, !dbg !12636
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12636
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12637
  %398 = and i32 %397, -7937, !dbg !12637
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12637
  %400 = load i32, i32* %399, align 4, !dbg !12637
  %401 = shl i32 %400, 8, !dbg !12637
  %402 = add i32 %401, -256, !dbg !12637
  %403 = or i32 %402, %398, !dbg !12637
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12637
  %404 = load i32, i32* %3, align 4, !dbg !12638
  br label %405, !dbg !12640

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !12638
  %407 = and i32 %406, 256, !dbg !12641
  %408 = icmp eq i32 %407, 0, !dbg !12642
  br i1 %408, label %429, label %409, !dbg !12643

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12644
  %411 = load i32, i32* %410, align 4, !dbg !12644
  %412 = icmp eq i32 %411, 134217728, !dbg !12645
  br i1 %412, label %413, label %429, !dbg !12646

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12647
  %415 = and i32 %414, 251658240, !dbg !12649
  call void @llvm.dbg.value(metadata i32 %415, metadata !12340, metadata !DIExpression()), !dbg !12347
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12650
  %417 = load i32, i32* %416, align 4, !dbg !12650
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12650
  %419 = load i32, i32* %418, align 4, !dbg !12650
  %420 = shl i32 %419, 6, !dbg !12650
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12650
  %422 = load i32, i32* %421, align 4, !dbg !12650
  %423 = shl i32 %422, 15, !dbg !12650
  %424 = add i32 %423, -65536, !dbg !12650
  %425 = and i32 %424, -65536, !dbg !12650
  %426 = or i32 %415, %417, !dbg !12650
  %427 = or i32 %426, %420, !dbg !12650
  %428 = or i32 %427, %425, !dbg !12650
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12650
  br label %429, !dbg !12651

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12652
  %430 = tail call i32 @HAL_GetTick() #27, !dbg !12653
  call void @llvm.dbg.value(metadata i32 %430, metadata !12334, metadata !DIExpression()), !dbg !12347
  br label %431, !dbg !12654

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12655
  %433 = and i32 %432, 536870912, !dbg !12656
  %434 = icmp eq i32 %433, 0, !dbg !12656
  br i1 %434, label %435, label %439, !dbg !12654

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #27, !dbg !12657
  %437 = sub i32 %436, %430, !dbg !12660
  %438 = icmp ugt i32 %437, 2, !dbg !12661
  br i1 %438, label %439, label %431, !dbg !12662, !llvm.loop !12663

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !12347
  ret i32 %440, !dbg !12665
}

; Function Attrs: optsize
declare !dbg !12666 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !12668 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !12672, metadata !DIExpression()), !dbg !12674
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !12675
  store i32 2047, i32* %2, align 4, !dbg !12676
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12677
  %4 = and i32 %3, 63, !dbg !12678
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !12679
  store i32 %4, i32* %5, align 4, !dbg !12680
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12681
  %7 = lshr i32 %6, 6, !dbg !12682
  %8 = and i32 %7, 511, !dbg !12682
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !12683
  store i32 %8, i32* %9, align 4, !dbg !12684
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12685
  %11 = lshr i32 %10, 15, !dbg !12686
  %12 = and i32 %11, 6, !dbg !12686
  %13 = add nuw nsw i32 %12, 2, !dbg !12686
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !12687
  store i32 %13, i32* %14, align 4, !dbg !12688
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12689
  %16 = lshr i32 %15, 24, !dbg !12690
  %17 = and i32 %16, 15, !dbg !12690
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !12691
  store i32 %17, i32* %18, align 4, !dbg !12692
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12693
  %20 = lshr i32 %19, 28, !dbg !12694
  %21 = and i32 %20, 7, !dbg !12694
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !12695
  store i32 %21, i32* %22, align 4, !dbg !12696
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12697
  %24 = and i32 %23, 63, !dbg !12698
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !12699
  store i32 %24, i32* %25, align 4, !dbg !12700
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12701
  %27 = lshr i32 %26, 6, !dbg !12702
  %28 = and i32 %27, 511, !dbg !12702
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !12703
  store i32 %28, i32* %29, align 4, !dbg !12704
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12705
  %31 = lshr i32 %30, 15, !dbg !12706
  %32 = and i32 %31, 6, !dbg !12706
  %33 = add nuw nsw i32 %32, 2, !dbg !12706
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !12707
  store i32 %33, i32* %34, align 4, !dbg !12708
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12709
  %36 = lshr i32 %35, 24, !dbg !12710
  %37 = and i32 %36, 15, !dbg !12710
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !12711
  store i32 %37, i32* %38, align 4, !dbg !12712
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12713
  %40 = and i32 %39, 31, !dbg !12714
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !12715
  store i32 %40, i32* %41, align 4, !dbg !12716
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12717
  %43 = lshr i32 %42, 8, !dbg !12718
  %44 = and i32 %43, 31, !dbg !12718
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !12719
  store i32 %44, i32* %45, align 4, !dbg !12720
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12721
  %47 = and i32 %46, 3145728, !dbg !12721
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !12722
  store i32 %47, i32* %48, align 4, !dbg !12723
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12724
  %50 = and i32 %49, 12582912, !dbg !12724
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !12725
  store i32 %50, i32* %51, align 4, !dbg !12726
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12727
  %53 = and i32 %52, 100663296, !dbg !12727
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !12728
  store i32 %53, i32* %54, align 4, !dbg !12729
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12730
  %56 = and i32 %55, 402653184, !dbg !12730
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !12731
  store i32 %56, i32* %57, align 4, !dbg !12732
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12733
  %59 = and i32 %58, 2031616, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %59, metadata !12673, metadata !DIExpression()), !dbg !12674
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12735
  %61 = and i32 %60, 768, !dbg !12736
  %62 = or i32 %61, %59, !dbg !12737
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !12738
  store i32 %62, i32* %63, align 4, !dbg !12739
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12740
  %65 = and i32 %64, 67108864, !dbg !12740
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !12741
  store i32 %65, i32* %66, align 4, !dbg !12742
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12743
  %68 = and i32 %67, 12582912, !dbg !12743
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !12744
  store i32 %68, i32* %69, align 4, !dbg !12745
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12746
  %71 = and i32 %70, 134217728, !dbg !12746
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !12747
  store i32 %71, i32* %72, align 4, !dbg !12748
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12749
  %74 = and i32 %73, 268435456, !dbg !12749
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !12750
  store i32 %74, i32* %75, align 4, !dbg !12751
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !12752
  %77 = and i32 %76, 536870912, !dbg !12752
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !12753
  store i32 %77, i32* %78, align 4, !dbg !12754
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12755
  %80 = lshr i32 %79, 24, !dbg !12757
  %81 = trunc i32 %80 to i8, !dbg !12757
  %82 = and i8 %81, 1, !dbg !12757
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !12758
  store i8 %82, i8* %83, align 4, !dbg !12760
  ret void, !dbg !12761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #17 !dbg !12762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12764, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12765, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12766, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12768, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12769, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 0, metadata !12770, metadata !DIExpression()), !dbg !12771
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !12772

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12773
  call void @llvm.dbg.value(metadata i32 %3, metadata !12768, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 %3, metadata !12768, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !12771
  %4 = lshr i32 %3, 20, !dbg !12776
  %5 = and i32 %4, 15, !dbg !12776
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !12776

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12777
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12781
  %9 = and i32 %8, 63, !dbg !12781
  %10 = udiv i32 16000000, %9, !dbg !12781
  call void @llvm.dbg.value(metadata i32 %10, metadata !12767, metadata !DIExpression()), !dbg !12771
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12782
  %12 = lshr i32 %11, 24, !dbg !12783
  %13 = and i32 %12, 15, !dbg !12783
  call void @llvm.dbg.value(metadata i32 %13, metadata !12765, metadata !DIExpression()), !dbg !12771
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12784
  %15 = lshr i32 %14, 6, !dbg !12785
  %16 = and i32 %15, 511, !dbg !12785
  %17 = mul i32 %16, %10, !dbg !12786
  %18 = udiv i32 %17, %13, !dbg !12787
  call void @llvm.dbg.value(metadata i32 %18, metadata !12766, metadata !DIExpression()), !dbg !12771
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12788
  %20 = lshr i32 %19, 8, !dbg !12789
  %21 = and i32 %20, 31, !dbg !12789
  %22 = add nuw nsw i32 %21, 1, !dbg !12790
  call void @llvm.dbg.value(metadata i32 %22, metadata !12765, metadata !DIExpression()), !dbg !12771
  %23 = udiv i32 %18, %22, !dbg !12791
  call void @llvm.dbg.value(metadata i32 %23, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12792

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12796
  %27 = and i32 %26, 63, !dbg !12796
  %28 = udiv i32 16000000, %27, !dbg !12796
  call void @llvm.dbg.value(metadata i32 %28, metadata !12767, metadata !DIExpression()), !dbg !12771
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12797
  %30 = lshr i32 %29, 24, !dbg !12798
  %31 = and i32 %30, 15, !dbg !12798
  call void @llvm.dbg.value(metadata i32 %31, metadata !12765, metadata !DIExpression()), !dbg !12771
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12799
  %33 = lshr i32 %32, 6, !dbg !12800
  %34 = and i32 %33, 511, !dbg !12800
  %35 = mul i32 %34, %28, !dbg !12801
  %36 = udiv i32 %35, %31, !dbg !12802
  call void @llvm.dbg.value(metadata i32 %36, metadata !12766, metadata !DIExpression()), !dbg !12771
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12803
  %38 = and i32 %37, 31, !dbg !12804
  %39 = add nuw nsw i32 %38, 1, !dbg !12805
  call void @llvm.dbg.value(metadata i32 %39, metadata !12765, metadata !DIExpression()), !dbg !12771
  %40 = udiv i32 %36, %39, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %40, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12807

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12808
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12811
  %44 = and i32 %43, 63, !dbg !12811
  %45 = udiv i32 16000000, %44, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %45, metadata !12767, metadata !DIExpression()), !dbg !12771
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12812
  %47 = lshr i32 %46, 28, !dbg !12813
  %48 = and i32 %47, 7, !dbg !12813
  call void @llvm.dbg.value(metadata i32 %48, metadata !12765, metadata !DIExpression()), !dbg !12771
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12814
  %50 = lshr i32 %49, 6, !dbg !12815
  %51 = and i32 %50, 511, !dbg !12815
  %52 = mul i32 %51, %45, !dbg !12816
  %53 = udiv i32 %52, %48, !dbg !12817
  call void @llvm.dbg.value(metadata i32 %53, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12818

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12819

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12821
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12766, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12824
  call void @llvm.dbg.value(metadata i32 %58, metadata !12769, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !12771
  %59 = lshr i32 %58, 25, !dbg !12826
  %60 = and i32 %59, 3, !dbg !12826
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !12826

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12827
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12831
  %64 = and i32 %63, 63, !dbg !12831
  %65 = udiv i32 16000000, %64, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %65, metadata !12767, metadata !DIExpression()), !dbg !12771
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12832
  %67 = lshr i32 %66, 6, !dbg !12833
  %68 = and i32 %67, 511, !dbg !12833
  %69 = mul i32 %68, %65, !dbg !12834
  call void @llvm.dbg.value(metadata i32 %69, metadata !12770, metadata !DIExpression()), !dbg !12771
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12835
  %71 = lshr i32 %70, 28, !dbg !12836
  %72 = and i32 %71, 7, !dbg !12836
  %73 = udiv i32 %69, %72, !dbg !12837
  call void @llvm.dbg.value(metadata i32 %73, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12838

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12839
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12842
  %77 = and i32 %76, 63, !dbg !12842
  %78 = udiv i32 16000000, %77, !dbg !12842
  call void @llvm.dbg.value(metadata i32 %78, metadata !12767, metadata !DIExpression()), !dbg !12771
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12843
  %80 = lshr i32 %79, 6, !dbg !12844
  %81 = and i32 %80, 511, !dbg !12844
  %82 = mul i32 %81, %78, !dbg !12845
  call void @llvm.dbg.value(metadata i32 %82, metadata !12770, metadata !DIExpression()), !dbg !12771
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12846
  %84 = lshr i32 %83, 28, !dbg !12847
  %85 = and i32 %84, 7, !dbg !12847
  %86 = udiv i32 %82, %85, !dbg !12848
  call void @llvm.dbg.value(metadata i32 %86, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12849

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12850
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12766, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %91, metadata !12769, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !12771
  %92 = lshr i32 %91, 27, !dbg !12855
  %93 = and i32 %92, 3, !dbg !12855
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !12855

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12856
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12860
  %97 = and i32 %96, 63, !dbg !12860
  %98 = udiv i32 16000000, %97, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %98, metadata !12767, metadata !DIExpression()), !dbg !12771
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12861
  %100 = lshr i32 %99, 6, !dbg !12862
  %101 = and i32 %100, 511, !dbg !12862
  %102 = mul i32 %101, %98, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %102, metadata !12770, metadata !DIExpression()), !dbg !12771
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12864
  %104 = lshr i32 %103, 28, !dbg !12865
  %105 = and i32 %104, 7, !dbg !12865
  %106 = udiv i32 %102, %105, !dbg !12866
  call void @llvm.dbg.value(metadata i32 %106, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12867

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12868
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12767, metadata !DIExpression()), !dbg !12771
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12871
  %110 = and i32 %109, 63, !dbg !12871
  %111 = udiv i32 16000000, %110, !dbg !12871
  call void @llvm.dbg.value(metadata i32 %111, metadata !12767, metadata !DIExpression()), !dbg !12771
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12872
  %113 = lshr i32 %112, 6, !dbg !12873
  %114 = and i32 %113, 511, !dbg !12873
  %115 = mul i32 %114, %111, !dbg !12874
  call void @llvm.dbg.value(metadata i32 %115, metadata !12770, metadata !DIExpression()), !dbg !12771
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12875
  %117 = lshr i32 %116, 28, !dbg !12876
  %118 = and i32 %117, 7, !dbg !12876
  %119 = udiv i32 %115, %118, !dbg !12877
  call void @llvm.dbg.value(metadata i32 %119, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123, !dbg !12878

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12879
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12766, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i32 16000000, metadata !12766, metadata !DIExpression()), !dbg !12771
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !12771
  call void @llvm.dbg.value(metadata i32 %124, metadata !12766, metadata !DIExpression()), !dbg !12771
  ret i32 %124, !dbg !12882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #16 !dbg !12883 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12887, metadata !DIExpression()), !dbg !12888
  %2 = icmp eq i8 %0, 1, !dbg !12889
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12891
  %4 = and i32 %3, -9, !dbg !12892
  %5 = select i1 %2, i32 8, i32 0, !dbg !12892
  %6 = or i32 %4, %5, !dbg !12892
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12891
  ret void, !dbg !12893
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12894 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !12899, metadata !DIExpression()), !dbg !12901
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12902
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !12903
  call void @llvm.dbg.value(metadata i32 %2, metadata !12900, metadata !DIExpression()), !dbg !12901
  br label %3, !dbg !12904

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12905
  %5 = and i32 %4, 134217728, !dbg !12905
  %6 = icmp eq i32 %5, 0, !dbg !12905
  br i1 %6, label %11, label %7, !dbg !12904

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !12906
  %9 = sub i32 %8, %2, !dbg !12909
  %10 = icmp ugt i32 %9, 2, !dbg !12910
  br i1 %10, label %41, label %3, !dbg !12911, !llvm.loop !12912

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !12914
  %13 = load i32, i32* %12, align 4, !dbg !12914
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !12914
  %15 = load i32, i32* %14, align 4, !dbg !12914
  %16 = shl i32 %15, 6, !dbg !12914
  %17 = or i32 %16, %13, !dbg !12914
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !12914
  %19 = load i32, i32* %18, align 4, !dbg !12914
  %20 = shl i32 %19, 15, !dbg !12914
  %21 = add i32 %20, -65536, !dbg !12914
  %22 = and i32 %21, -65536, !dbg !12914
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !12914
  %24 = load i32, i32* %23, align 4, !dbg !12914
  %25 = shl i32 %24, 24, !dbg !12914
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !12914
  %27 = load i32, i32* %26, align 4, !dbg !12914
  %28 = shl i32 %27, 28, !dbg !12914
  %29 = or i32 %17, %25, !dbg !12914
  %30 = or i32 %29, %22, !dbg !12914
  %31 = or i32 %30, %28, !dbg !12914
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !12914
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12915
  %32 = tail call i32 @HAL_GetTick() #27, !dbg !12916
  call void @llvm.dbg.value(metadata i32 %32, metadata !12900, metadata !DIExpression()), !dbg !12901
  br label %33, !dbg !12917

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12918
  %35 = and i32 %34, 134217728, !dbg !12919
  %36 = icmp eq i32 %35, 0, !dbg !12919
  br i1 %36, label %37, label %41, !dbg !12917

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #27, !dbg !12920
  %39 = sub i32 %38, %32, !dbg !12923
  %40 = icmp ugt i32 %39, 2, !dbg !12924
  br i1 %40, label %41, label %33, !dbg !12925, !llvm.loop !12926

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !12901
  ret i32 %42, !dbg !12928
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !12929 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !12934
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !12935
  call void @llvm.dbg.value(metadata i32 %1, metadata !12933, metadata !DIExpression()), !dbg !12936
  br label %2, !dbg !12937

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12938
  %4 = and i32 %3, 134217728, !dbg !12938
  %5 = icmp eq i32 %4, 0, !dbg !12939
  br i1 %5, label %10, label %6, !dbg !12937

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !12940
  %8 = sub i32 %7, %1, !dbg !12943
  %9 = icmp ugt i32 %8, 2, !dbg !12944
  br i1 %9, label %10, label %2, !dbg !12945, !llvm.loop !12946

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12936
  ret i32 %11, !dbg !12948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !12954, metadata !DIExpression()), !dbg !12956
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12957
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !12958
  call void @llvm.dbg.value(metadata i32 %2, metadata !12955, metadata !DIExpression()), !dbg !12956
  br label %3, !dbg !12959

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12960
  %5 = and i32 %4, 536870912, !dbg !12960
  %6 = icmp eq i32 %5, 0, !dbg !12960
  br i1 %6, label %11, label %7, !dbg !12959

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !12961
  %9 = sub i32 %8, %2, !dbg !12964
  %10 = icmp ugt i32 %9, 2, !dbg !12965
  br i1 %10, label %37, label %3, !dbg !12966, !llvm.loop !12967

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !12969
  %13 = load i32, i32* %12, align 4, !dbg !12969
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !12969
  %15 = load i32, i32* %14, align 4, !dbg !12969
  %16 = shl i32 %15, 6, !dbg !12969
  %17 = or i32 %16, %13, !dbg !12969
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !12969
  %19 = load i32, i32* %18, align 4, !dbg !12969
  %20 = shl i32 %19, 15, !dbg !12969
  %21 = add i32 %20, -65536, !dbg !12969
  %22 = and i32 %21, -65536, !dbg !12969
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !12969
  %24 = load i32, i32* %23, align 4, !dbg !12969
  %25 = shl i32 %24, 24, !dbg !12969
  %26 = or i32 %17, %25, !dbg !12969
  %27 = or i32 %26, %22, !dbg !12969
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !12969
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12970
  %28 = tail call i32 @HAL_GetTick() #27, !dbg !12971
  call void @llvm.dbg.value(metadata i32 %28, metadata !12955, metadata !DIExpression()), !dbg !12956
  br label %29, !dbg !12972

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12973
  %31 = and i32 %30, 536870912, !dbg !12974
  %32 = icmp eq i32 %31, 0, !dbg !12974
  br i1 %32, label %33, label %37, !dbg !12972

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #27, !dbg !12975
  %35 = sub i32 %34, %28, !dbg !12978
  %36 = icmp ugt i32 %35, 2, !dbg !12979
  br i1 %36, label %37, label %29, !dbg !12980, !llvm.loop !12981

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !12956
  ret i32 %38, !dbg !12983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !12984 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12987
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !12988
  call void @llvm.dbg.value(metadata i32 %1, metadata !12986, metadata !DIExpression()), !dbg !12989
  br label %2, !dbg !12990

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12991
  %4 = and i32 %3, 536870912, !dbg !12991
  %5 = icmp eq i32 %4, 0, !dbg !12991
  br i1 %5, label %10, label %6, !dbg !12990

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !12992
  %8 = sub i32 %7, %1, !dbg !12995
  %9 = icmp ugt i32 %8, 2, !dbg !12996
  br i1 %9, label %10, label %2, !dbg !12997, !llvm.loop !12998

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !12989
  ret i32 %11, !dbg !13000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !13001 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13003, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 0, metadata !13004, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 0, metadata !13005, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 0, metadata !13006, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 0, metadata !13007, metadata !DIExpression()), !dbg !13008
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13009
  %2 = lshr i32 %1, 2, !dbg !13010
  %3 = and i32 %2, 3, !dbg !13010
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !13010

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13011
  %6 = and i32 %5, 63, !dbg !13014
  call void @llvm.dbg.value(metadata i32 %6, metadata !13003, metadata !DIExpression()), !dbg !13008
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13015
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13017
  %9 = lshr i32 %8, 6, !dbg !13017
  %10 = and i32 %9, 511, !dbg !13017
  %11 = zext i32 %10 to i64, !dbg !13017
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13017
  %13 = zext i32 %6 to i64, !dbg !13017
  %14 = udiv i64 %12, %13, !dbg !13017
  %15 = trunc i64 %14 to i32, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %15, metadata !13004, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 %15, metadata !13004, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 %15, metadata !13004, metadata !DIExpression()), !dbg !13008
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13018
  %17 = lshr i32 %16, 15, !dbg !13019
  %18 = and i32 %17, 6, !dbg !13019
  %19 = add nuw nsw i32 %18, 2, !dbg !13019
  call void @llvm.dbg.value(metadata i32 %19, metadata !13005, metadata !DIExpression()), !dbg !13008
  %20 = udiv i32 %15, %19, !dbg !13020
  call void @llvm.dbg.value(metadata i32 %20, metadata !13007, metadata !DIExpression()), !dbg !13008
  br label %38, !dbg !13021

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13022
  %23 = and i32 %22, 63, !dbg !13024
  call void @llvm.dbg.value(metadata i32 %23, metadata !13003, metadata !DIExpression()), !dbg !13008
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13025
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13027
  %26 = lshr i32 %25, 6, !dbg !13027
  %27 = and i32 %26, 511, !dbg !13027
  %28 = zext i32 %27 to i64, !dbg !13027
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !13027
  %30 = zext i32 %23 to i64, !dbg !13027
  %31 = udiv i64 %29, %30, !dbg !13027
  %32 = trunc i64 %31 to i32, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %32, metadata !13004, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 %32, metadata !13004, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.value(metadata i32 %32, metadata !13004, metadata !DIExpression()), !dbg !13008
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13028
  %34 = lshr i32 %33, 28, !dbg !13029
  %35 = and i32 %34, 7, !dbg !13029
  call void @llvm.dbg.value(metadata i32 %35, metadata !13006, metadata !DIExpression()), !dbg !13008
  %36 = udiv i32 %32, %35, !dbg !13030
  call void @llvm.dbg.value(metadata i32 %36, metadata !13007, metadata !DIExpression()), !dbg !13008
  br label %38, !dbg !13031

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !13032
  call void @llvm.dbg.value(metadata i32 %39, metadata !13007, metadata !DIExpression()), !dbg !13008
  ret i32 %39, !dbg !13033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13034 {
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !13037
  call void @llvm.dbg.value(metadata i32 %1, metadata !13036, metadata !DIExpression()), !dbg !13038
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13039
  %3 = or i32 %2, 1, !dbg !13039
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13039
  br label %4, !dbg !13040

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13041
  %6 = and i32 %5, 2, !dbg !13041
  %7 = icmp eq i32 %6, 0, !dbg !13042
  br i1 %7, label %8, label %12, !dbg !13040

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #27, !dbg !13043
  %10 = sub i32 %9, %1, !dbg !13046
  %11 = icmp ugt i32 %10, 2, !dbg !13047
  br i1 %11, label %89, label %4, !dbg !13048, !llvm.loop !13049

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13051
  %14 = or i32 %13, 128, !dbg !13051
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13051
  %15 = tail call i32 @HAL_GetTick() #27, !dbg !13052
  call void @llvm.dbg.value(metadata i32 %15, metadata !13036, metadata !DIExpression()), !dbg !13038
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13053
  br label %16, !dbg !13054

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13055
  %18 = and i32 %17, 12, !dbg !13055
  %19 = icmp eq i32 %18, 0, !dbg !13056
  %20 = tail call i32 @HAL_GetTick() #27, !dbg !13038
  br i1 %19, label %24, label %21, !dbg !13054

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !13057
  %23 = icmp ugt i32 %22, 5000, !dbg !13060
  br i1 %23, label %89, label %16, !dbg !13061, !llvm.loop !13062

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !13036, metadata !DIExpression()), !dbg !13038
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13064
  %26 = and i32 %25, -851969, !dbg !13064
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13064
  br label %27, !dbg !13065

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13066
  %29 = and i32 %28, 131072, !dbg !13066
  %30 = icmp eq i32 %29, 0, !dbg !13067
  %31 = tail call i32 @HAL_GetTick() #27, !dbg !13038
  br i1 %30, label %35, label %32, !dbg !13065

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !13068
  %34 = icmp ugt i32 %33, 100, !dbg !13071
  br i1 %34, label %89, label %27, !dbg !13072, !llvm.loop !13073

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !13036, metadata !DIExpression()), !dbg !13038
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13075
  %37 = and i32 %36, -16777217, !dbg !13075
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13075
  br label %38, !dbg !13076

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13077
  %40 = and i32 %39, 33554432, !dbg !13077
  %41 = icmp eq i32 %40, 0, !dbg !13078
  %42 = tail call i32 @HAL_GetTick() #27, !dbg !13038
  br i1 %41, label %46, label %43, !dbg !13076

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !13079
  %45 = icmp ugt i32 %44, 2, !dbg !13082
  br i1 %45, label %89, label %38, !dbg !13083, !llvm.loop !13084

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !13036, metadata !DIExpression()), !dbg !13038
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13086
  %48 = and i32 %47, -67108865, !dbg !13086
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13086
  br label %49, !dbg !13087

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %51 = and i32 %50, 134217728, !dbg !13088
  %52 = icmp eq i32 %51, 0, !dbg !13089
  %53 = tail call i32 @HAL_GetTick() #27, !dbg !13038
  br i1 %52, label %57, label %54, !dbg !13087

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !13090
  %56 = icmp ugt i32 %55, 2, !dbg !13093
  br i1 %56, label %89, label %49, !dbg !13094, !llvm.loop !13095

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !13036, metadata !DIExpression()), !dbg !13038
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13097
  %59 = and i32 %58, -268435457, !dbg !13097
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13097
  br label %60, !dbg !13098

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13099
  %62 = and i32 %61, 536870912, !dbg !13099
  %63 = icmp eq i32 %62, 0, !dbg !13100
  br i1 %63, label %68, label %64, !dbg !13098

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #27, !dbg !13101
  %66 = sub i32 %65, %53, !dbg !13104
  %67 = icmp ugt i32 %66, 2, !dbg !13105
  br i1 %67, label %89, label %60, !dbg !13106, !llvm.loop !13107

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13109
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13110
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13111
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13112
  %70 = and i32 %69, -7937, !dbg !13112
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13112
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13113
  %72 = and i32 %71, -8193, !dbg !13113
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13113
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13114
  %74 = and i32 %73, -16385, !dbg !13114
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13114
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13115
  %76 = or i32 %75, 10420224, !dbg !13115
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13115
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13116
  %78 = or i32 %77, 2097152, !dbg !13116
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13116
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13117
  %80 = or i32 %79, 4194304, !dbg !13117
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13117
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13118
  %82 = and i32 %81, -2, !dbg !13118
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13118
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13119
  %84 = or i32 %83, 16777216, !dbg !13119
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13119
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !13120
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !13121
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #27, !dbg !13123
  %87 = icmp ne i32 %86, 0, !dbg !13124
  %88 = zext i1 %87 to i32, !dbg !13125
  br label %89, !dbg !13125

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !13038
  ret i32 %90, !dbg !13126
}

; Function Attrs: optsize
declare !dbg !13127 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13130 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13156, metadata !DIExpression()), !dbg !13167
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13168
  br i1 %3, label %337, label %4, !dbg !13170

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13171
  %6 = load i32, i32* %5, align 4, !dbg !13171
  %7 = and i32 %6, 1, !dbg !13173
  %8 = icmp eq i32 %7, 0, !dbg !13174
  br i1 %8, label %74, label %9, !dbg !13175

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13176
  %11 = and i32 %10, 12, !dbg !13176
  %12 = icmp eq i32 %11, 4, !dbg !13179
  br i1 %12, label %29, label %13, !dbg !13180

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13181
  %15 = and i32 %14, 12, !dbg !13181
  %16 = icmp eq i32 %15, 8, !dbg !13182
  br i1 %16, label %17, label %21, !dbg !13183

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13184
  %19 = and i32 %18, 4194304, !dbg !13185
  %20 = icmp eq i32 %19, 0, !dbg !13186
  br i1 %20, label %21, label %29, !dbg !13187

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13188
  %23 = and i32 %22, 12, !dbg !13188
  %24 = icmp eq i32 %23, 12, !dbg !13189
  br i1 %24, label %25, label %37, !dbg !13190

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13191
  %27 = and i32 %26, 4194304, !dbg !13192
  %28 = icmp eq i32 %27, 0, !dbg !13193
  br i1 %28, label %37, label %29, !dbg !13194

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13195
  %31 = and i32 %30, 131072, !dbg !13195
  %32 = icmp eq i32 %31, 0, !dbg !13195
  br i1 %32, label %74, label %33, !dbg !13198

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13199
  %35 = load i32, i32* %34, align 4, !dbg !13199
  %36 = icmp eq i32 %35, 0, !dbg !13200
  br i1 %36, label %337, label %74, !dbg !13201

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13202
  %39 = load i32, i32* %38, align 4, !dbg !13202
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !13206

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13207
  %42 = or i32 %41, 65536, !dbg !13207
  br label %53, !dbg !13207

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13209
  %45 = or i32 %44, 262144, !dbg !13209
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13209
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13209
  %47 = or i32 %46, 65536, !dbg !13209
  br label %53, !dbg !13209

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13212
  %50 = and i32 %49, -65537, !dbg !13212
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13212
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13212
  %52 = and i32 %51, -262145, !dbg !13212
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13214
  %55 = load i32, i32* %38, align 4, !dbg !13215
  %56 = icmp eq i32 %55, 0, !dbg !13217
  %57 = tail call i32 @HAL_GetTick() #27, !dbg !13218
  call void @llvm.dbg.value(metadata i32 %57, metadata !13157, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i32 %57, metadata !13157, metadata !DIExpression()), !dbg !13167
  br i1 %56, label %66, label %58, !dbg !13219

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13220
  %60 = and i32 %59, 131072, !dbg !13222
  %61 = icmp eq i32 %60, 0, !dbg !13222
  br i1 %61, label %62, label %74, !dbg !13223

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !13224
  %64 = sub i32 %63, %57, !dbg !13227
  %65 = icmp ugt i32 %64, 100, !dbg !13228
  br i1 %65, label %337, label %58, !dbg !13229, !llvm.loop !13230

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13232
  %68 = and i32 %67, 131072, !dbg !13232
  %69 = icmp eq i32 %68, 0, !dbg !13232
  br i1 %69, label %74, label %70, !dbg !13234

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #27, !dbg !13235
  %72 = sub i32 %71, %57, !dbg !13238
  %73 = icmp ugt i32 %72, 100, !dbg !13239
  br i1 %73, label %337, label %66, !dbg !13240, !llvm.loop !13241

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !13243
  %76 = and i32 %75, 2, !dbg !13245
  %77 = icmp eq i32 %76, 0, !dbg !13246
  br i1 %77, label %137, label %78, !dbg !13247

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13248
  %80 = and i32 %79, 12, !dbg !13248
  %81 = icmp eq i32 %80, 0, !dbg !13251
  br i1 %81, label %98, label %82, !dbg !13252

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13253
  %84 = and i32 %83, 12, !dbg !13253
  %85 = icmp eq i32 %84, 8, !dbg !13254
  br i1 %85, label %86, label %90, !dbg !13255

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13256
  %88 = and i32 %87, 4194304, !dbg !13257
  %89 = icmp eq i32 %88, 0, !dbg !13258
  br i1 %89, label %98, label %90, !dbg !13259

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13260
  %92 = and i32 %91, 12, !dbg !13260
  %93 = icmp eq i32 %92, 12, !dbg !13261
  br i1 %93, label %94, label %106, !dbg !13262

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13263
  %96 = and i32 %95, 4194304, !dbg !13264
  %97 = icmp eq i32 %96, 0, !dbg !13265
  br i1 %97, label %98, label %106, !dbg !13266

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13267
  %100 = and i32 %99, 2, !dbg !13267
  %101 = icmp eq i32 %100, 0, !dbg !13267
  br i1 %101, label %130, label %102, !dbg !13270

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13271
  %104 = load i32, i32* %103, align 4, !dbg !13271
  %105 = icmp eq i32 %104, 1, !dbg !13272
  br i1 %105, label %130, label %337, !dbg !13273

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13274
  %108 = load i32, i32* %107, align 4, !dbg !13274
  %109 = icmp eq i32 %108, 0, !dbg !13277
  br i1 %109, label %120, label %110, !dbg !13278

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13279
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !13281
  call void @llvm.dbg.value(metadata i32 %111, metadata !13157, metadata !DIExpression()), !dbg !13167
  br label %112, !dbg !13282

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13283
  %114 = and i32 %113, 2, !dbg !13284
  %115 = icmp eq i32 %114, 0, !dbg !13284
  br i1 %115, label %116, label %130, !dbg !13282

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #27, !dbg !13285
  %118 = sub i32 %117, %111, !dbg !13288
  %119 = icmp ugt i32 %118, 2, !dbg !13289
  br i1 %119, label %337, label %112, !dbg !13290, !llvm.loop !13291

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13293
  %121 = tail call i32 @HAL_GetTick() #27, !dbg !13295
  call void @llvm.dbg.value(metadata i32 %121, metadata !13157, metadata !DIExpression()), !dbg !13167
  br label %122, !dbg !13296

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13297
  %124 = and i32 %123, 2, !dbg !13297
  %125 = icmp eq i32 %124, 0, !dbg !13297
  br i1 %125, label %137, label %126, !dbg !13296

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #27, !dbg !13298
  %128 = sub i32 %127, %121, !dbg !13301
  %129 = icmp ugt i32 %128, 2, !dbg !13302
  br i1 %129, label %337, label %122, !dbg !13303, !llvm.loop !13304

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13306
  %132 = and i32 %131, -249, !dbg !13306
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13306
  %134 = load i32, i32* %133, align 4, !dbg !13306
  %135 = shl i32 %134, 3, !dbg !13306
  %136 = or i32 %135, %132, !dbg !13306
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13306
  br label %137, !dbg !13307

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !13307
  %139 = and i32 %138, 8, !dbg !13309
  %140 = icmp eq i32 %139, 0, !dbg !13310
  br i1 %140, label %165, label %141, !dbg !13311

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13312
  %143 = load i32, i32* %142, align 4, !dbg !13312
  %144 = icmp eq i32 %143, 0, !dbg !13315
  br i1 %144, label %155, label %145, !dbg !13316

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13317
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !13319
  call void @llvm.dbg.value(metadata i32 %146, metadata !13157, metadata !DIExpression()), !dbg !13167
  br label %147, !dbg !13320

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13321
  %149 = and i32 %148, 2, !dbg !13322
  %150 = icmp eq i32 %149, 0, !dbg !13322
  br i1 %150, label %151, label %165, !dbg !13320

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #27, !dbg !13323
  %153 = sub i32 %152, %146, !dbg !13326
  %154 = icmp ugt i32 %153, 2, !dbg !13327
  br i1 %154, label %337, label %147, !dbg !13328, !llvm.loop !13329

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13331
  %156 = tail call i32 @HAL_GetTick() #27, !dbg !13333
  call void @llvm.dbg.value(metadata i32 %156, metadata !13157, metadata !DIExpression()), !dbg !13167
  br label %157, !dbg !13334

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13335
  %159 = and i32 %158, 2, !dbg !13335
  %160 = icmp eq i32 %159, 0, !dbg !13335
  br i1 %160, label %165, label %161, !dbg !13334

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #27, !dbg !13336
  %163 = sub i32 %162, %156, !dbg !13339
  %164 = icmp ugt i32 %163, 2, !dbg !13340
  br i1 %164, label %337, label %157, !dbg !13341, !llvm.loop !13342

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !13344
  %167 = and i32 %166, 4, !dbg !13345
  %168 = icmp eq i32 %167, 0, !dbg !13346
  br i1 %168, label %237, label %169, !dbg !13347

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !13159, metadata !DIExpression()), !dbg !13348
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13349
  %171 = and i32 %170, 268435456, !dbg !13349
  %172 = icmp eq i32 %171, 0, !dbg !13349
  br i1 %172, label %173, label %180, !dbg !13350

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !13351
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !13351
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13163, metadata !DIExpression()), !dbg !13351
  store volatile i32 0, i32* %2, align 4, !dbg !13351
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13351
  %176 = or i32 %175, 268435456, !dbg !13351
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13351
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13351
  %178 = and i32 %177, 268435456, !dbg !13351
  store volatile i32 %178, i32* %2, align 4, !dbg !13351
  %179 = load volatile i32, i32* %2, align 4, !dbg !13351
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !13352
  call void @llvm.dbg.value(metadata i32 1, metadata !13159, metadata !DIExpression()), !dbg !13348
  br label %180, !dbg !13353

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()), !dbg !13348
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13354
  %182 = and i32 %181, 256, !dbg !13354
  %183 = icmp eq i32 %182, 0, !dbg !13354
  br i1 %183, label %184, label %196, !dbg !13356

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13357
  %186 = or i32 %185, 256, !dbg !13357
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13357
  %187 = tail call i32 @HAL_GetTick() #27, !dbg !13359
  call void @llvm.dbg.value(metadata i32 %187, metadata !13157, metadata !DIExpression()), !dbg !13167
  br label %188, !dbg !13360

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13361
  %190 = and i32 %189, 256, !dbg !13361
  %191 = icmp eq i32 %190, 0, !dbg !13361
  br i1 %191, label %192, label %196, !dbg !13360

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #27, !dbg !13362
  %194 = sub i32 %193, %187, !dbg !13365
  %195 = icmp ugt i32 %194, 2, !dbg !13366
  br i1 %195, label %337, label %188, !dbg !13367, !llvm.loop !13368

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13370
  %198 = load i32, i32* %197, align 4, !dbg !13370
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !13373

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13374
  %201 = or i32 %200, 1, !dbg !13374
  br label %212, !dbg !13374

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13376
  %204 = or i32 %203, 4, !dbg !13376
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13376
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13376
  %206 = or i32 %205, 1, !dbg !13376
  br label %212, !dbg !13376

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13379
  %209 = and i32 %208, -2, !dbg !13379
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13379
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13379
  %211 = and i32 %210, -5, !dbg !13379
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13381
  %214 = load i32, i32* %197, align 4, !dbg !13382
  %215 = icmp eq i32 %214, 0, !dbg !13384
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %216, metadata !13157, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i32 %216, metadata !13157, metadata !DIExpression()), !dbg !13167
  br i1 %215, label %225, label %217, !dbg !13386

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13387
  %219 = and i32 %218, 2, !dbg !13389
  %220 = icmp eq i32 %219, 0, !dbg !13389
  br i1 %220, label %221, label %233, !dbg !13390

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #27, !dbg !13391
  %223 = sub i32 %222, %216, !dbg !13394
  %224 = icmp ugt i32 %223, 5000, !dbg !13395
  br i1 %224, label %337, label %217, !dbg !13396, !llvm.loop !13397

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13399
  %227 = and i32 %226, 2, !dbg !13399
  %228 = icmp eq i32 %227, 0, !dbg !13399
  br i1 %228, label %233, label %229, !dbg !13401

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !13402
  %231 = sub i32 %230, %216, !dbg !13405
  %232 = icmp ugt i32 %231, 5000, !dbg !13406
  br i1 %232, label %337, label %225, !dbg !13407, !llvm.loop !13408

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !13410

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13411
  %236 = and i32 %235, -268435457, !dbg !13411
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13411
  br label %237, !dbg !13414

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13415
  %239 = load i32, i32* %238, align 4, !dbg !13415
  %240 = icmp eq i32 %239, 0, !dbg !13417
  br i1 %240, label %336, label %241, !dbg !13418

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13419
  %243 = and i32 %242, 12, !dbg !13419
  %244 = icmp eq i32 %243, 8, !dbg !13422
  br i1 %244, label %297, label %245, !dbg !13423

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !13424
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13427
  %247 = tail call i32 @HAL_GetTick() #27, !dbg !13427
  call void @llvm.dbg.value(metadata i32 %247, metadata !13157, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i32 %247, metadata !13157, metadata !DIExpression()), !dbg !13167
  br i1 %246, label %248, label %289, !dbg !13428

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13429
  %250 = and i32 %249, 33554432, !dbg !13429
  %251 = icmp eq i32 %250, 0, !dbg !13429
  br i1 %251, label %256, label %252, !dbg !13431

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #27, !dbg !13432
  %254 = sub i32 %253, %247, !dbg !13435
  %255 = icmp ugt i32 %254, 2, !dbg !13436
  br i1 %255, label %337, label %248, !dbg !13437, !llvm.loop !13438

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13440
  %258 = load i32, i32* %257, align 4, !dbg !13440
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13440
  %260 = load i32, i32* %259, align 4, !dbg !13440
  %261 = or i32 %260, %258, !dbg !13440
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13440
  %263 = load i32, i32* %262, align 4, !dbg !13440
  %264 = shl i32 %263, 6, !dbg !13440
  %265 = or i32 %261, %264, !dbg !13440
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13440
  %267 = load i32, i32* %266, align 4, !dbg !13440
  %268 = shl i32 %267, 15, !dbg !13440
  %269 = add i32 %268, -65536, !dbg !13440
  %270 = and i32 %269, -65536, !dbg !13440
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13440
  %272 = load i32, i32* %271, align 4, !dbg !13440
  %273 = shl i32 %272, 24, !dbg !13440
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13440
  %275 = load i32, i32* %274, align 4, !dbg !13440
  %276 = shl i32 %275, 28, !dbg !13440
  %277 = or i32 %265, %273, !dbg !13440
  %278 = or i32 %277, %270, !dbg !13440
  %279 = or i32 %278, %276, !dbg !13440
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13440
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13441
  %280 = tail call i32 @HAL_GetTick() #27, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %280, metadata !13157, metadata !DIExpression()), !dbg !13167
  br label %281, !dbg !13443

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13444
  %283 = and i32 %282, 33554432, !dbg !13445
  %284 = icmp eq i32 %283, 0, !dbg !13445
  br i1 %284, label %285, label %336, !dbg !13443

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #27, !dbg !13446
  %287 = sub i32 %286, %280, !dbg !13449
  %288 = icmp ugt i32 %287, 2, !dbg !13450
  br i1 %288, label %337, label %281, !dbg !13451, !llvm.loop !13452

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13454
  %291 = and i32 %290, 33554432, !dbg !13454
  %292 = icmp eq i32 %291, 0, !dbg !13454
  br i1 %292, label %336, label %293, !dbg !13456

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #27, !dbg !13457
  %295 = sub i32 %294, %247, !dbg !13460
  %296 = icmp ugt i32 %295, 2, !dbg !13461
  br i1 %296, label %337, label %289, !dbg !13462, !llvm.loop !13463

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !13465
  br i1 %298, label %337, label %299, !dbg !13468

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13469
  call void @llvm.dbg.value(metadata i32 %300, metadata !13158, metadata !DIExpression()), !dbg !13167
  %301 = and i32 %300, 4194304, !dbg !13471
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13473
  %303 = load i32, i32* %302, align 4, !dbg !13473
  %304 = icmp eq i32 %301, %303, !dbg !13474
  br i1 %304, label %305, label %337, !dbg !13475

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !13476
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13477
  %308 = load i32, i32* %307, align 4, !dbg !13477
  %309 = icmp eq i32 %306, %308, !dbg !13478
  br i1 %309, label %310, label %337, !dbg !13479

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !13480
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13481
  %313 = load i32, i32* %312, align 4, !dbg !13481
  %314 = shl i32 %313, 6, !dbg !13482
  %315 = icmp eq i32 %311, %314, !dbg !13483
  br i1 %315, label %316, label %337, !dbg !13484

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !13485
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13486
  %319 = load i32, i32* %318, align 4, !dbg !13486
  %320 = shl i32 %319, 15, !dbg !13487
  %321 = add i32 %320, -65536, !dbg !13487
  %322 = and i32 %321, -65536, !dbg !13487
  %323 = icmp eq i32 %317, %322, !dbg !13488
  br i1 %323, label %324, label %337, !dbg !13489

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !13490
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13491
  %327 = load i32, i32* %326, align 4, !dbg !13491
  %328 = shl i32 %327, 24, !dbg !13492
  %329 = icmp eq i32 %325, %328, !dbg !13493
  br i1 %329, label %330, label %337, !dbg !13494

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !13495
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13496
  %333 = load i32, i32* %332, align 4, !dbg !13496
  %334 = shl i32 %333, 28, !dbg !13497
  %335 = icmp eq i32 %331, %334, !dbg !13498
  br i1 %335, label %336, label %337, !dbg !13499

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !13500

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !13167
  ret i32 %338, !dbg !13501
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #17 !dbg !13502 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13506, metadata !DIExpression()), !dbg !13507
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13508
  store i32 15, i32* %2, align 4, !dbg !13509
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13510
  %4 = and i32 %3, 262144, !dbg !13512
  %5 = icmp eq i32 %4, 0, !dbg !13513
  br i1 %5, label %8, label %6, !dbg !13514

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13515
  store i32 327680, i32* %7, align 4, !dbg !13517
  br label %15, !dbg !13518

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13519
  %10 = and i32 %9, 65536, !dbg !13521
  %11 = icmp eq i32 %10, 0, !dbg !13522
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13523
  br i1 %11, label %14, label %13, !dbg !13524

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13525
  br label %15, !dbg !13527

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13528
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13530
  %17 = and i32 %16, 1, !dbg !13532
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13533
  store i32 %17, i32* %18, align 4, !dbg !13535
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13536
  %20 = lshr i32 %19, 3, !dbg !13537
  %21 = and i32 %20, 31, !dbg !13537
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13538
  store i32 %21, i32* %22, align 4, !dbg !13539
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13540
  %24 = and i32 %23, 4, !dbg !13542
  %25 = icmp eq i32 %24, 0, !dbg !13543
  br i1 %25, label %28, label %26, !dbg !13544

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13545
  store i32 5, i32* %27, align 4, !dbg !13547
  br label %35, !dbg !13548

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13549
  %30 = and i32 %29, 1, !dbg !13551
  %31 = icmp eq i32 %30, 0, !dbg !13552
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13553
  br i1 %31, label %34, label %33, !dbg !13554

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13555
  br label %35, !dbg !13557

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13558
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13560
  %37 = and i32 %36, 1, !dbg !13562
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13563
  store i32 %37, i32* %38, align 4, !dbg !13565
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13566
  %40 = and i32 %39, 16777216, !dbg !13568
  %41 = icmp eq i32 %40, 0, !dbg !13569
  %42 = select i1 %41, i32 1, i32 2, !dbg !13570
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13571
  store i32 %42, i32* %43, align 4, !dbg !13573
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13574
  %45 = and i32 %44, 4194304, !dbg !13575
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13576
  store i32 %45, i32* %46, align 4, !dbg !13577
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13578
  %48 = and i32 %47, 63, !dbg !13579
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13580
  store i32 %48, i32* %49, align 4, !dbg !13581
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13582
  %51 = lshr i32 %50, 6, !dbg !13583
  %52 = and i32 %51, 511, !dbg !13583
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13584
  store i32 %52, i32* %53, align 4, !dbg !13585
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13586
  %55 = shl i32 %54, 1, !dbg !13587
  %56 = and i32 %55, 393216, !dbg !13587
  %57 = add nuw nsw i32 %56, 131072, !dbg !13587
  %58 = lshr exact i32 %57, 16, !dbg !13588
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13589
  store i32 %58, i32* %59, align 4, !dbg !13590
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13591
  %61 = lshr i32 %60, 24, !dbg !13592
  %62 = and i32 %61, 15, !dbg !13592
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13593
  store i32 %62, i32* %63, align 4, !dbg !13594
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13595
  %65 = lshr i32 %64, 28, !dbg !13596
  %66 = and i32 %65, 7, !dbg !13596
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13597
  store i32 %66, i32* %67, align 4, !dbg !13598
  ret void, !dbg !13599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !13600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13603, metadata !DIExpression()), !dbg !13604
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !13605
  ret void, !dbg !13606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !13607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13610, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata i32 1000, metadata !13611, metadata !DIExpression()), !dbg !13612
  %2 = udiv i32 %0, 1000, !dbg !13613
  %3 = add nsw i32 %2, -1, !dbg !13614
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13615
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13616
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13617
  ret void, !dbg !13618
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !13619 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13621, metadata !DIExpression()), !dbg !13623
  %3 = bitcast i32* %2 to i8*, !dbg !13624
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13624
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13622, metadata !DIExpression()), !dbg !13625
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13626
  store volatile i32 %4, i32* %2, align 4, !dbg !13625
  %5 = load volatile i32, i32* %2, align 4, !dbg !13627
  %6 = icmp eq i32 %0, -1, !dbg !13628
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()), !dbg !13623
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %8, metadata !13621, metadata !DIExpression()), !dbg !13623
  br label %9, !dbg !13630

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13621, metadata !DIExpression()), !dbg !13623
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13631
  call void @llvm.dbg.value(metadata i32 undef, metadata !13621, metadata !DIExpression()), !dbg !13623
  %12 = shl i32 %11, 15, !dbg !13623
  %13 = ashr i32 %12, 31, !dbg !13623
  %14 = add i32 %13, %10, !dbg !13623
  call void @llvm.dbg.value(metadata i32 %14, metadata !13621, metadata !DIExpression()), !dbg !13623
  %15 = icmp eq i32 %14, 0, !dbg !13630
  br i1 %15, label %16, label %9, !dbg !13630

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13634
  ret void, !dbg !13634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #8 !dbg !13635 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13637, metadata !DIExpression()), !dbg !13638
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13639
  ret void, !dbg !13640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !13641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13646, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.value(metadata i32 0, metadata !13649, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.value(metadata i32 0, metadata !13650, metadata !DIExpression()), !dbg !13651
  %2 = icmp eq i32 %0, 0, !dbg !13652
  br i1 %2, label %72, label %3, !dbg !13654

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13655
  %5 = icmp eq i32 %4, 49152, !dbg !13658
  br i1 %5, label %6, label %21, !dbg !13659

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !13660
  %8 = select i1 %7, i32 0, i32 5, !dbg !13663
  call void @llvm.dbg.value(metadata i32 %8, metadata !13649, metadata !DIExpression()), !dbg !13651
  %9 = add i32 %0, -120000001, !dbg !13664
  %10 = icmp ult i32 %9, 30000000, !dbg !13664
  %11 = select i1 %10, i32 4, i32 %8, !dbg !13664
  call void @llvm.dbg.value(metadata i32 %11, metadata !13649, metadata !DIExpression()), !dbg !13651
  %12 = icmp ult i32 %9, -30000000, !dbg !13666
  %13 = select i1 %12, i32 %11, i32 3, !dbg !13666
  call void @llvm.dbg.value(metadata i32 %13, metadata !13649, metadata !DIExpression()), !dbg !13651
  %14 = icmp ugt i32 %0, 60000000, !dbg !13668
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !13670
  br i1 %16, label %21, label %17, !dbg !13670

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !13671
  %19 = and i1 %18, %15, !dbg !13674
  %20 = select i1 %19, i32 1, i32 %13, !dbg !13674
  br label %21, !dbg !13674

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !13651
  call void @llvm.dbg.value(metadata i32 %22, metadata !13649, metadata !DIExpression()), !dbg !13651
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13675
  %24 = icmp eq i32 %23, 32768, !dbg !13677
  br i1 %24, label %25, label %45, !dbg !13678

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !13679
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !13682
  %29 = select i1 %28, i32 5, i32 %22, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %29, metadata !13649, metadata !DIExpression()), !dbg !13651
  %30 = icmp ugt i32 %0, 12000000, !dbg !13683
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !13685
  %33 = select i1 %32, i32 4, i32 %29, !dbg !13685
  call void @llvm.dbg.value(metadata i32 %33, metadata !13649, metadata !DIExpression()), !dbg !13651
  %34 = icmp ugt i32 %0, 90000000, !dbg !13686
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !13688
  %37 = select i1 %36, i32 3, i32 %33, !dbg !13688
  call void @llvm.dbg.value(metadata i32 %37, metadata !13649, metadata !DIExpression()), !dbg !13651
  %38 = icmp ugt i32 %0, 60000000, !dbg !13689
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !13691
  br i1 %40, label %45, label %41, !dbg !13691

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !13692
  %43 = select i1 %42, i1 %39, i1 false, !dbg !13695
  %44 = select i1 %43, i32 1, i32 %37, !dbg !13695
  br label %45, !dbg !13695

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !13696
  call void @llvm.dbg.value(metadata i32 %46, metadata !13649, metadata !DIExpression()), !dbg !13651
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !13697
  %48 = icmp eq i32 %47, 16384, !dbg !13699
  br i1 %48, label %49, label %61, !dbg !13700

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !13701
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !13704
  %53 = select i1 %52, i32 3, i32 %46, !dbg !13704
  call void @llvm.dbg.value(metadata i32 %53, metadata !13649, metadata !DIExpression()), !dbg !13651
  %54 = icmp ugt i32 %0, 60000000, !dbg !13705
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !13707
  br i1 %56, label %61, label %57, !dbg !13707

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !13708
  %59 = select i1 %58, i1 %55, i1 false, !dbg !13711
  %60 = select i1 %59, i32 1, i32 %53, !dbg !13711
  br label %61, !dbg !13711

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !13696
  call void @llvm.dbg.value(metadata i32 %62, metadata !13649, metadata !DIExpression()), !dbg !13651
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !13712
  call void @llvm.dbg.value(metadata i32 2, metadata !13647, metadata !DIExpression()), !dbg !13651
  br label %63, !dbg !13713

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !13696
  call void @llvm.dbg.value(metadata i32 %64, metadata !13647, metadata !DIExpression()), !dbg !13651
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !13714
  call void @llvm.dbg.value(metadata i32 %65, metadata !13648, metadata !DIExpression()), !dbg !13651
  %66 = add nsw i32 %64, -1, !dbg !13716
  call void @llvm.dbg.value(metadata i32 %66, metadata !13647, metadata !DIExpression()), !dbg !13651
  %67 = icmp ne i32 %65, %62, !dbg !13717
  %68 = icmp ne i32 %66, 0, !dbg !13718
  %69 = select i1 %67, i1 %68, i1 false, !dbg !13718
  br i1 %69, label %63, label %70, !dbg !13719, !llvm.loop !13720

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !13722
  call void @llvm.dbg.value(metadata i32 %73, metadata !13650, metadata !DIExpression()), !dbg !13651
  ret i32 %73, !dbg !13723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !13724 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13726
  %2 = and i32 %1, 49152, !dbg !13726
  ret i32 %2, !dbg !13727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !13728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13730, metadata !DIExpression()), !dbg !13731
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13732
  %3 = and i32 %2, -16, !dbg !13732
  %4 = or i32 %3, %0, !dbg !13732
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13732
  ret void, !dbg !13733
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !13734 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13735
  %2 = and i32 %1, 15, !dbg !13735
  ret i32 %2, !dbg !13736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !13737 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13755, metadata !DIExpression()), !dbg !13759
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13756, metadata !DIExpression()), !dbg !13759
  call void @llvm.dbg.value(metadata i32 0, metadata !13757, metadata !DIExpression()), !dbg !13759
  call void @llvm.dbg.value(metadata i32 0, metadata !13758, metadata !DIExpression()), !dbg !13759
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13760
  %4 = icmp eq i32 %3, 0, !dbg !13762
  br i1 %4, label %5, label %21, !dbg !13763

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %6, metadata !13758, metadata !DIExpression()), !dbg !13759
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.135() #26, !dbg !13766
  %8 = icmp eq i32 %7, 1, !dbg !13768
  br i1 %8, label %13, label %9, !dbg !13769

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.136() #26, !dbg !13770
  br label %10, !dbg !13772

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.135() #26, !dbg !13773
  %12 = icmp eq i32 %11, 1, !dbg !13774
  br i1 %12, label %13, label %10, !dbg !13772, !llvm.loop !13775

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13777
  %15 = load i32, i32* %14, align 4, !dbg !13777
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13778
  %17 = load i32, i32* %16, align 4, !dbg !13778
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13779
  %19 = load i32, i32* %18, align 4, !dbg !13779
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !13780
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %20, metadata !13757, metadata !DIExpression()), !dbg !13759
  br label %21, !dbg !13782

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13783
  call void @llvm.dbg.value(metadata i32 %22, metadata !13757, metadata !DIExpression()), !dbg !13759
  ret i32 %22, !dbg !13784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13785 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13789, metadata !DIExpression()), !dbg !13790
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.139() #26, !dbg !13791
  %2 = icmp ne i32 %1, 0, !dbg !13793
  call void @llvm.dbg.value(metadata i1 %2, metadata !13789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13790
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !13794
  %4 = icmp ne i32 %3, 0, !dbg !13796
  call void @llvm.dbg.value(metadata i1 undef, metadata !13789, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13790
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !13797
  %6 = icmp ne i32 %5, 0, !dbg !13799
  %7 = select i1 %6, i1 true, i1 %4, !dbg !13800
  %8 = select i1 %7, i1 true, i1 %2, !dbg !13800
  %9 = zext i1 %8 to i32, !dbg !13800
  call void @llvm.dbg.value(metadata i32 %9, metadata !13789, metadata !DIExpression()), !dbg !13790
  ret i32 %9, !dbg !13801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !13802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13806, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13807, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata i32 0, metadata !13808, metadata !DIExpression()), !dbg !13809
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13810
  %4 = load i32, i32* %3, align 4, !dbg !13810
  %5 = and i32 %4, 63, !dbg !13811
  %6 = udiv i32 %0, %5, !dbg !13812
  call void @llvm.dbg.value(metadata i32 %6, metadata !13808, metadata !DIExpression()), !dbg !13809
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13813
  %8 = load i32, i32* %7, align 4, !dbg !13813
  %9 = and i32 %8, 511, !dbg !13814
  %10 = mul i32 %9, %6, !dbg !13815
  call void @llvm.dbg.value(metadata i32 %10, metadata !13808, metadata !DIExpression()), !dbg !13809
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13816
  %12 = load i32, i32* %11, align 4, !dbg !13816
  %13 = lshr i32 %12, 15, !dbg !13817
  %14 = and i32 %13, 131070, !dbg !13817
  %15 = add nuw nsw i32 %14, 2, !dbg !13817
  %16 = udiv i32 %10, %15, !dbg !13818
  call void @llvm.dbg.value(metadata i32 %16, metadata !13808, metadata !DIExpression()), !dbg !13809
  ret i32 %16, !dbg !13819
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.135() unnamed_addr #17 !dbg !13820 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13821
  %2 = lshr i32 %1, 1, !dbg !13822
  %3 = and i32 %2, 1, !dbg !13822
  ret i32 %3, !dbg !13823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.136() unnamed_addr #16 !dbg !13824 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13825
  %2 = or i32 %1, 1, !dbg !13825
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13825
  ret void, !dbg !13826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !13827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13829, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i32 %1, metadata !13830, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i32 %2, metadata !13831, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i32 %3, metadata !13832, metadata !DIExpression()), !dbg !13833
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13834
  %6 = and i32 %5, -4227072, !dbg !13834
  %7 = or i32 %1, %0, !dbg !13834
  %8 = shl i32 %2, 6, !dbg !13834
  %9 = or i32 %7, %8, !dbg !13834
  %10 = or i32 %9, %6, !dbg !13834
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13834
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13835
  %12 = and i32 %11, -196609, !dbg !13835
  %13 = or i32 %12, %3, !dbg !13835
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13835
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13836
  %15 = and i32 %14, -1879048193, !dbg !13836
  %16 = or i32 %15, %3, !dbg !13836
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13836
  ret void, !dbg !13837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13842, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13843, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 0, metadata !13844, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.value(metadata i32 0, metadata !13845, metadata !DIExpression()), !dbg !13846
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13847
  %4 = load i32, i32* %3, align 4, !dbg !13847
  %5 = lshr i32 %4, 4, !dbg !13847
  %6 = and i32 %5, 15, !dbg !13847
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13847
  %8 = load i8, i8* %7, align 1, !dbg !13847
  %9 = zext i8 %8 to i32, !dbg !13847
  %10 = lshr i32 %0, %9, !dbg !13847
  call void @llvm.dbg.value(metadata i32 %10, metadata !13845, metadata !DIExpression()), !dbg !13846
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13848
  %12 = icmp ult i32 %11, %10, !dbg !13850
  br i1 %12, label %13, label %16, !dbg !13851

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13852
  call void @llvm.dbg.value(metadata i32 %14, metadata !13844, metadata !DIExpression()), !dbg !13846
  %15 = icmp eq i32 %14, 0, !dbg !13854
  br i1 %15, label %16, label %30, !dbg !13856

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.138() #26, !dbg !13857
  br label %17, !dbg !13859

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.139() #26, !dbg !13860
  %19 = icmp eq i32 %18, 1, !dbg !13861
  br i1 %19, label %20, label %17, !dbg !13859, !llvm.loop !13862

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13864
  tail call fastcc void @LL_RCC_SetAHBPrescaler.140(i32 noundef %21) #26, !dbg !13865
  tail call fastcc void @LL_RCC_SetSysClkSource.141() #26, !dbg !13866
  br label %22, !dbg !13867

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.142() #26, !dbg !13868
  %24 = icmp eq i32 %23, 8, !dbg !13869
  br i1 %24, label %25, label %22, !dbg !13867, !llvm.loop !13870

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13872
  %27 = load i32, i32* %26, align 4, !dbg !13872
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.143(i32 noundef %27) #26, !dbg !13873
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13874
  %29 = load i32, i32* %28, align 4, !dbg !13874
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.144(i32 noundef %29) #26, !dbg !13875
  br label %30, !dbg !13876

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13877
  %33 = icmp ugt i32 %32, %10, !dbg !13879
  br i1 %33, label %34, label %36, !dbg !13880

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13881
  call void @llvm.dbg.value(metadata i32 %35, metadata !13844, metadata !DIExpression()), !dbg !13846
  br label %36, !dbg !13883

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13846
  call void @llvm.dbg.value(metadata i32 %37, metadata !13844, metadata !DIExpression()), !dbg !13846
  %38 = icmp eq i32 %37, 0, !dbg !13884
  br i1 %38, label %39, label %40, !dbg !13886

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13887
  br label %40, !dbg !13889

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.138() unnamed_addr #16 !dbg !13891 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13892
  %2 = or i32 %1, 16777216, !dbg !13892
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13892
  ret void, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.139() unnamed_addr #17 !dbg !13894 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13895
  %2 = lshr i32 %1, 25, !dbg !13896
  %3 = and i32 %2, 1, !dbg !13896
  ret i32 %3, !dbg !13897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.140(i32 noundef %0) unnamed_addr #16 !dbg !13898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13900, metadata !DIExpression()), !dbg !13901
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13902
  %3 = and i32 %2, -241, !dbg !13902
  %4 = or i32 %3, %0, !dbg !13902
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.141() unnamed_addr #16 !dbg !13904 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13906, metadata !DIExpression()), !dbg !13907
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13908
  %2 = and i32 %1, -4, !dbg !13908
  %3 = or i32 %2, 2, !dbg !13908
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13908
  ret void, !dbg !13909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.142() unnamed_addr #17 !dbg !13910 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13911
  %2 = and i32 %1, 12, !dbg !13911
  ret i32 %2, !dbg !13912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.143(i32 noundef %0) unnamed_addr #16 !dbg !13913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13915, metadata !DIExpression()), !dbg !13916
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13917
  %3 = and i32 %2, -7169, !dbg !13917
  %4 = or i32 %3, %0, !dbg !13917
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13917
  ret void, !dbg !13918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.144(i32 noundef %0) unnamed_addr #16 !dbg !13919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13921, metadata !DIExpression()), !dbg !13922
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13923
  %3 = and i32 %2, -57345, !dbg !13923
  %4 = or i32 %3, %0, !dbg !13923
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13923
  ret void, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #17 !dbg !13925 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13926
  %2 = lshr i32 %1, 29, !dbg !13927
  %3 = and i32 %2, 1, !dbg !13927
  ret i32 %3, !dbg !13928
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !13929 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13930
  %2 = lshr i32 %1, 27, !dbg !13931
  %3 = and i32 %2, 1, !dbg !13931
  ret i32 %3, !dbg !13932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13937, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i32 %1, metadata !13938, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13939, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13940, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i32 0, metadata !13941, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i32 0, metadata !13942, metadata !DIExpression()), !dbg !13943
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13944
  %6 = icmp eq i32 %5, 0, !dbg !13946
  br i1 %6, label %7, label %27, !dbg !13947

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !13948
  call void @llvm.dbg.value(metadata i32 %8, metadata !13942, metadata !DIExpression()), !dbg !13943
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.145() #26, !dbg !13950
  %10 = icmp eq i32 %9, 1, !dbg !13952
  br i1 %10, label %19, label %11, !dbg !13953

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13954
  br i1 %12, label %13, label %14, !dbg !13957

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13958
  br label %15, !dbg !13960

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.146() #26, !dbg !13961
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.147() #26, !dbg !13963
  br label %16, !dbg !13964

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.145() #26, !dbg !13965
  %18 = icmp eq i32 %17, 1, !dbg !13966
  br i1 %18, label %19, label %16, !dbg !13964, !llvm.loop !13967

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13969
  %21 = load i32, i32* %20, align 4, !dbg !13969
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13970
  %23 = load i32, i32* %22, align 4, !dbg !13970
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13971
  %25 = load i32, i32* %24, align 4, !dbg !13971
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.137(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !13972
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13973
  call void @llvm.dbg.value(metadata i32 %26, metadata !13941, metadata !DIExpression()), !dbg !13943
  br label %27, !dbg !13974

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13975
  call void @llvm.dbg.value(metadata i32 %28, metadata !13941, metadata !DIExpression()), !dbg !13943
  ret i32 %28, !dbg !13976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.145() unnamed_addr #17 !dbg !13977 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13978
  %2 = lshr i32 %1, 17, !dbg !13979
  %3 = and i32 %2, 1, !dbg !13979
  ret i32 %3, !dbg !13980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13981 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13982
  %2 = or i32 %1, 262144, !dbg !13982
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13982
  ret void, !dbg !13983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.146() unnamed_addr #16 !dbg !13984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13985
  %2 = and i32 %1, -262145, !dbg !13985
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13985
  ret void, !dbg !13986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.147() unnamed_addr #16 !dbg !13987 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13988
  %2 = or i32 %1, 65536, !dbg !13988
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13988
  ret void, !dbg !13989
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13993, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14009
  ret void, !dbg !14010
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14011 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14015, metadata !DIExpression()), !dbg !14017
  %2 = icmp eq i8* %0, null, !dbg !14018
  br i1 %2, label %29, label %3, !dbg !14020

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14021
  %5 = icmp eq i8 %4, 0, !dbg !14022
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14023
  br i1 %6, label %29, label %8, !dbg !14023

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14016, metadata !DIExpression()), !dbg !14017
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14024

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14016, metadata !DIExpression()), !dbg !14017
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !14026
  br i1 %10, label %11, label %15, !dbg !14031

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14032
  %13 = load i8*, i8** %12, align 4, !dbg !14032
  %14 = icmp eq i8* %13, %0, !dbg !14033
  br i1 %14, label %29, label %15, !dbg !14034

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14035
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14016, metadata !DIExpression()), !dbg !14017
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14036
  br i1 %17, label %7, label %8, !dbg !14037, !llvm.loop !14038

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14016, metadata !DIExpression()), !dbg !14017
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !14040
  br i1 %20, label %21, label %26, !dbg !14044

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14045
  %23 = load i8*, i8** %22, align 4, !dbg !14045
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14046
  %25 = icmp eq i32 %24, 0, !dbg !14047
  br i1 %25, label %29, label %26, !dbg !14048

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14049
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14016, metadata !DIExpression()), !dbg !14017
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14050
  br i1 %28, label %29, label %18, !dbg !14024, !llvm.loop !14051

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14017
  ret %struct.device* %30, !dbg !14053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !14054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14058, metadata !DIExpression()), !dbg !14059
  %2 = icmp eq %struct.device* %0, null, !dbg !14060
  br i1 %2, label %14, label %3, !dbg !14062

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14063
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14063
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14064
  %7 = load i8, i8* %6, align 1, !dbg !14064
  %8 = and i8 %7, 1, !dbg !14064
  %9 = icmp eq i8 %8, 0, !dbg !14064
  br i1 %9, label %14, label %10, !dbg !14065

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14066
  %12 = load i8, i8* %11, align 1, !dbg !14066
  %13 = icmp eq i8 %12, 0, !dbg !14067
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14059
  ret i1 %15, !dbg !14068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !14069 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14074, metadata !DIExpression()), !dbg !14075
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14076
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14078 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14086, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14087, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.value(metadata i8* %2, metadata !14088, metadata !DIExpression()), !dbg !14091
  %5 = bitcast i32* %4 to i8*, !dbg !14092
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14092
  call void @llvm.dbg.value(metadata i32 0, metadata !14089, metadata !DIExpression()), !dbg !14091
  store i32 0, i32* %4, align 4, !dbg !14093
  call void @llvm.dbg.value(metadata i32* %4, metadata !14089, metadata !DIExpression(DW_OP_deref)), !dbg !14091
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14094
  call void @llvm.dbg.value(metadata i16* %6, metadata !14090, metadata !DIExpression()), !dbg !14091
  %7 = load i32, i32* %4, align 4, !dbg !14095
  call void @llvm.dbg.value(metadata i32 %7, metadata !14089, metadata !DIExpression()), !dbg !14091
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14096
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14097
  ret i32 %8, !dbg !14098
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14099 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14103, metadata !DIExpression()), !dbg !14109
  call void @llvm.dbg.value(metadata i32* %1, metadata !14104, metadata !DIExpression()), !dbg !14109
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14110
  %4 = load i16*, i16** %3, align 4, !dbg !14110
  call void @llvm.dbg.value(metadata i16* %4, metadata !14105, metadata !DIExpression()), !dbg !14109
  %5 = icmp eq i16* %4, null, !dbg !14111
  br i1 %5, label %14, label %6, !dbg !14112

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14113
  call void @llvm.dbg.value(metadata i32 %7, metadata !14106, metadata !DIExpression()), !dbg !14113
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14114
  %9 = load i16, i16* %8, align 2, !dbg !14114
  %10 = add i16 %9, -32767, !dbg !14115
  %11 = icmp ult i16 %10, 2, !dbg !14115
  %12 = add i32 %7, 1, !dbg !14116
  call void @llvm.dbg.value(metadata i32 %12, metadata !14106, metadata !DIExpression()), !dbg !14113
  br i1 %11, label %13, label %6, !dbg !14115, !llvm.loop !14118

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14121
  br label %14, !dbg !14122

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14124 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14128, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i32 %1, metadata !14129, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14130, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i8* %3, metadata !14131, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i32 0, metadata !14132, metadata !DIExpression()), !dbg !14140
  %5 = icmp eq i32 %1, 0, !dbg !14141
  br i1 %5, label %16, label %8, !dbg !14142

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14132, metadata !DIExpression()), !dbg !14140
  %7 = icmp eq i32 %15, %1, !dbg !14141
  br i1 %7, label %16, label %8, !dbg !14142, !llvm.loop !14143

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14132, metadata !DIExpression()), !dbg !14140
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14145
  %11 = load i16, i16* %10, align 2, !dbg !14145
  call void @llvm.dbg.value(metadata i16 %11, metadata !14134, metadata !DIExpression()), !dbg !14146
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14147
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14137, metadata !DIExpression()), !dbg !14146
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14148
  call void @llvm.dbg.value(metadata i32 %13, metadata !14138, metadata !DIExpression()), !dbg !14146
  %14 = icmp slt i32 %13, 0, !dbg !14149
  %15 = add nuw i32 %9, 1, !dbg !14151
  call void @llvm.dbg.value(metadata i32 %15, metadata !14132, metadata !DIExpression()), !dbg !14140
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !14153 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14157, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14158, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14159, metadata !DIExpression()), !dbg !14160
  %2 = sext i16 %0 to i32, !dbg !14161
  %3 = icmp slt i16 %0, 1, !dbg !14163
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14164
  %6 = add nsw i32 %2, -1, !dbg !14164
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14164
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14164
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14158, metadata !DIExpression()), !dbg !14160
  ret %struct.device* %8, !dbg !14165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14166 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14168, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14169, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata i8* %2, metadata !14170, metadata !DIExpression()), !dbg !14173
  %5 = bitcast i32* %4 to i8*, !dbg !14174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14174
  call void @llvm.dbg.value(metadata i32 0, metadata !14171, metadata !DIExpression()), !dbg !14173
  store i32 0, i32* %4, align 4, !dbg !14175
  call void @llvm.dbg.value(metadata i32* %4, metadata !14171, metadata !DIExpression(DW_OP_deref)), !dbg !14173
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14176
  call void @llvm.dbg.value(metadata i16* %6, metadata !14172, metadata !DIExpression()), !dbg !14173
  %7 = load i32, i32* %4, align 4, !dbg !14177
  call void @llvm.dbg.value(metadata i32 %7, metadata !14171, metadata !DIExpression()), !dbg !14173
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14179
  ret i32 %8, !dbg !14180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14181 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14183, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32* %1, metadata !14184, metadata !DIExpression()), !dbg !14188
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14189
  %4 = load i16*, i16** %3, align 4, !dbg !14189
  call void @llvm.dbg.value(metadata i16* %4, metadata !14185, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 0, metadata !14186, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 0, metadata !14187, metadata !DIExpression()), !dbg !14188
  %5 = icmp eq i16* %4, null, !dbg !14190
  br i1 %5, label %22, label %6, !dbg !14192

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14186, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i16* %8, metadata !14185, metadata !DIExpression()), !dbg !14188
  %9 = load i16, i16* %8, align 2, !dbg !14193
  %10 = icmp eq i16 %9, -32768, !dbg !14197
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()), !dbg !14188
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14198
  call void @llvm.dbg.value(metadata i16* %11, metadata !14185, metadata !DIExpression()), !dbg !14188
  %12 = zext i1 %10 to i32, !dbg !14199
  %13 = add i32 %7, %12, !dbg !14199
  call void @llvm.dbg.value(metadata i32 %13, metadata !14186, metadata !DIExpression()), !dbg !14188
  %14 = icmp eq i32 %13, 2, !dbg !14200
  br i1 %14, label %15, label %6, !dbg !14201

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14188
  call void @llvm.dbg.value(metadata i32 %16, metadata !14187, metadata !DIExpression()), !dbg !14188
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14202
  %18 = load i16, i16* %17, align 2, !dbg !14202
  %19 = icmp eq i16 %18, 32767, !dbg !14203
  %20 = add i32 %16, 1, !dbg !14204
  call void @llvm.dbg.value(metadata i32 %20, metadata !14187, metadata !DIExpression()), !dbg !14188
  br i1 %19, label %21, label %15, !dbg !14206, !llvm.loop !14207

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14209
  br label %22, !dbg !14210

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14211
  call void @llvm.dbg.value(metadata i16* %23, metadata !14185, metadata !DIExpression()), !dbg !14188
  ret i16* %23, !dbg !14212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !14213 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14216
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14217
  ret i32* %2, !dbg !14218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !14219 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14368, metadata !DIExpression()), !dbg !14370
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14369, metadata !DIExpression()), !dbg !14370
  ret void, !dbg !14371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14376, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.value(metadata i32 %1, metadata !14377, metadata !DIExpression()), !dbg !14378
  ret void, !dbg !14379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14380 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14384, metadata !DIExpression()), !dbg !14386
  call void @llvm.dbg.value(metadata i32 %1, metadata !14385, metadata !DIExpression()), !dbg !14386
  ret void, !dbg !14387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14392, metadata !DIExpression()), !dbg !14394
  call void @llvm.dbg.value(metadata i8* %1, metadata !14393, metadata !DIExpression()), !dbg !14394
  ret i32 -134, !dbg !14395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14400, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata i8* %1, metadata !14401, metadata !DIExpression()), !dbg !14402
  ret i32 -134, !dbg !14403
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14407, metadata !DIExpression()), !dbg !14408
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14409, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 undef, metadata !14412, metadata !DIExpression()) #25, !dbg !14416
  call void @llvm.dbg.value(metadata i32 undef, metadata !14413, metadata !DIExpression()) #25, !dbg !14416
  br label %3, !dbg !14417

3:                                                ; preds = %3, %1
  br label %3, !dbg !14418, !llvm.loop !14421
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14428, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14429, metadata !DIExpression()), !dbg !14430
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i32 0, i32 0), i32 noundef 69) #27, !dbg !14431
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14436
  unreachable, !dbg !14436
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14439, metadata !DIExpression()), !dbg !14440
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14441
  unreachable, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14444, metadata !DIExpression()), !dbg !14448
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14445, metadata !DIExpression()), !dbg !14448
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14449, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 undef, metadata !14412, metadata !DIExpression()) #25, !dbg !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14413, metadata !DIExpression()) #25, !dbg !14451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14446, metadata !DIExpression()), !dbg !14448
  %4 = tail call fastcc %struct.k_thread* @k_current_get.155() #28, !dbg !14452
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14447, metadata !DIExpression()), !dbg !14448
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !14453
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.156, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14453
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14458
  br i1 %6, label %15, label %7, !dbg !14460

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14461, metadata !DIExpression()), !dbg !14466
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14468
  %9 = load i32, i32* %8, align 4, !dbg !14468
  %10 = and i32 %9, 511, !dbg !14469
  %11 = icmp eq i32 %10, 0, !dbg !14470
  br i1 %11, label %13, label %12, !dbg !14471

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !14472
  br label %13, !dbg !14478

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14479
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.158, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14479
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14484
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14461, metadata !DIExpression()), !dbg !14485
  br label %17, !dbg !14490

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14479
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.158, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !14479
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14484
  br label %17, !dbg !14491

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14449
  call void @llvm.dbg.value(metadata i32 %18, metadata !14412, metadata !DIExpression()) #25, !dbg !14451
  call void @llvm.dbg.value(metadata i32 %18, metadata !14446, metadata !DIExpression()), !dbg !14448
  call void @llvm.dbg.value(metadata i32 undef, metadata !14492, metadata !DIExpression()) #25, !dbg !14495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14497, !srcloc !14498
  tail call fastcc void @k_thread_abort.159(%struct.k_thread* noundef %4) #26, !dbg !14499
  ret void, !dbg !14502
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.155() unnamed_addr #11 !dbg !14503 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.167() #28, !dbg !14507
  ret %struct.k_thread* %1, !dbg !14508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14513, metadata !DIExpression()), !dbg !14514
  %2 = icmp ult i32 %0, 5, !dbg !14515
  br i1 %2, label %3, label %6, !dbg !14515

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14515
  %5 = load i8*, i8** %4, align 4, !dbg !14515
  br label %6, !dbg !14515

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.161, i32 0, i32 0), %1 ], !dbg !14516
  ret i8* %7, !dbg !14518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14519 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14523, metadata !DIExpression()), !dbg !14525
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14526
  br i1 %2, label %9, label %3, !dbg !14527

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14528
  call void @llvm.dbg.value(metadata i8* %4, metadata !14524, metadata !DIExpression()), !dbg !14525
  %5 = icmp eq i8* %4, null, !dbg !14529
  br i1 %5, label %9, label %6, !dbg !14531

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14532
  %8 = icmp eq i8 %7, 0, !dbg !14533
  br i1 %8, label %9, label %10, !dbg !14534

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.160, i32 0, i32 0), metadata !14524, metadata !DIExpression()), !dbg !14525
  br label %10, !dbg !14535

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.160, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14525
  call void @llvm.dbg.value(metadata i8* %11, metadata !14524, metadata !DIExpression()), !dbg !14525
  ret i8* %11, !dbg !14537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.159(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14542, metadata !DIExpression()), !dbg !14543
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14544, !srcloc !14546
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14547
  ret void, !dbg !14548
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.167() unnamed_addr #11 !dbg !14549 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14550, !srcloc !14552
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14553
  ret %struct.k_thread* %1, !dbg !14554
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14555 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14559, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 %1, metadata !14560, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 %2, metadata !14561, metadata !DIExpression()), !dbg !14562
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14563
  ret void, !dbg !14564
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14565 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14569, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata i8* %1, metadata !14570, metadata !DIExpression()), !dbg !14572
  call void @llvm.dbg.value(metadata i32 %2, metadata !14571, metadata !DIExpression()), !dbg !14572
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14573
  ret void, !dbg !14574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14575 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14576
  ret void, !dbg !14577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14580, metadata !DIExpression()), !dbg !14581
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14582
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14583
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14584
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14585
  %4 = trunc i32 %0 to i8, !dbg !14586
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14587
  store i8 %4, i8* %5, align 4, !dbg !14588
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14589
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14590
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14591
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14592
  store i8* %8, i8** %9, align 4, !dbg !14593
  ret void, !dbg !14594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14597, metadata !DIExpression()), !dbg !14603
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14604
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14598, metadata !DIExpression()), !dbg !14603
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14605
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14599, metadata !DIExpression()), !dbg !14603
  call void @llvm.dbg.value(metadata i8* null, metadata !14602, metadata !DIExpression()), !dbg !14603
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14606
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14607
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14608
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !14609
  ret void, !dbg !14610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14615, metadata !DIExpression()), !dbg !14616
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14617
  ret i8* %2, !dbg !14618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14624, metadata !DIExpression()), !dbg !14625
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14626
  %3 = load i8, i8* %2, align 1, !dbg !14627
  %4 = and i8 %3, -5, !dbg !14627
  store i8 %4, i8* %2, align 1, !dbg !14627
  ret void, !dbg !14628
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !14629 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !14632
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14633
  %3 = ptrtoint i8* %2 to i32, !dbg !14642
  %4 = add i32 %3, 2048, !dbg !14643
  call void @llvm.dbg.value(metadata i32 %4, metadata !14637, metadata !DIExpression()) #25, !dbg !14644
  call void @llvm.dbg.value(metadata i32 %4, metadata !14645, metadata !DIExpression()) #25, !dbg !14648
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !14650, !srcloc !14651
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14652
  %6 = or i32 %5, 512, !dbg !14652
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14652
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -2, i32 noundef 255) #27, !dbg !14653
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -5, i32 noundef 0) #27, !dbg !14656
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -12, i32 noundef 0) #27, !dbg !14657
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -11, i32 noundef 0) #27, !dbg !14658
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -10, i32 noundef 0) #27, !dbg !14659
  tail call fastcc void @__NVIC_SetPriority.176(i32 noundef -4, i32 noundef 0) #27, !dbg !14660
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14661
  %8 = or i32 %7, 458752, !dbg !14661
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14661
  tail call void @z_arm_fault_init() #27, !dbg !14662
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14663
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14664
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14667
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14668
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14669
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14670
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !14670
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14631, metadata !DIExpression()), !dbg !14671
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !14672
  call void @z_device_state_init() #27, !dbg !14673
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !14674
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !14675
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !14676
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !14677
  unreachable, !dbg !14677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2233, metadata !DIExpression()), !dbg !14678
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14679
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14679
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2234, metadata !DIExpression()), !dbg !14678
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2234, metadata !DIExpression()), !dbg !14678
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14680
  br i1 %7, label %8, label %35, !dbg !14681

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2234, metadata !DIExpression()), !dbg !14678
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14682
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14682
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2244, metadata !DIExpression()), !dbg !14683
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14684
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14684
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14685
  call void @llvm.dbg.value(metadata i32 %14, metadata !2248, metadata !DIExpression()), !dbg !14683
  %15 = icmp eq %struct.device* %11, null, !dbg !14686
  br i1 %15, label %32, label %16, !dbg !14688

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14689
  br i1 %17, label %26, label %18, !dbg !14692

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14693
  call void @llvm.dbg.value(metadata i32 %19, metadata !2248, metadata !DIExpression()), !dbg !14683
  %20 = icmp ult i32 %19, 255, !dbg !14695
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14695
  call void @llvm.dbg.value(metadata i32 %21, metadata !2248, metadata !DIExpression()), !dbg !14683
  %22 = trunc i32 %21 to i8, !dbg !14696
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14697
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14697
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14698
  store i8 %22, i8* %25, align 1, !dbg !14699
  br label %26, !dbg !14700

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14701
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14701
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14702
  %30 = load i8, i8* %29, align 1, !dbg !14703
  %31 = or i8 %30, 1, !dbg !14703
  store i8 %31, i8* %29, align 1, !dbg !14703
  br label %32, !dbg !14704

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14705
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2234, metadata !DIExpression()), !dbg !14678
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14680
  br i1 %34, label %8, label %35, !dbg !14681, !llvm.loop !14706

35:                                               ; preds = %32, %1
  ret void, !dbg !14708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.176(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !14709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14711, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata i32 %1, metadata !14712, metadata !DIExpression()), !dbg !14713
  %3 = trunc i32 %1 to i8, !dbg !14714
  %4 = shl i8 %3, 4, !dbg !14714
  %5 = and i32 %0, 15, !dbg !14717
  %6 = add nsw i32 %5, -4, !dbg !14718
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14719
  store volatile i8 %4, i8* %7, align 1, !dbg !14720
  ret void, !dbg !14721
}

; Function Attrs: optsize
declare !dbg !14722 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14723 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()), !dbg !14727
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14728
  store i8 1, i8* %2, align 1, !dbg !14729
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14730
  store i8 1, i8* %3, align 4, !dbg !14731
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14732
  store i32 0, i32* %4, align 4, !dbg !14733
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14734
  store i32 0, i32* %5, align 4, !dbg !14735
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !14736
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14737
  ret void, !dbg !14738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14739 {
  tail call void @z_sched_init() #27, !dbg !14744
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14745
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.177, i32 0, i32 0)) #27, !dbg !14746
  call void @llvm.dbg.value(metadata i8* %1, metadata !14743, metadata !DIExpression()), !dbg !14747
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14748
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14749
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !14750
  ret i8* %1, !dbg !14751
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14756, metadata !DIExpression()), !dbg !14757
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14758
  unreachable, !dbg !14759
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14760 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14762, metadata !DIExpression()), !dbg !14765
  call void @llvm.dbg.value(metadata i8* %1, metadata !14763, metadata !DIExpression()), !dbg !14765
  call void @llvm.dbg.value(metadata i8* %2, metadata !14764, metadata !DIExpression()), !dbg !14765
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14766
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !14767
  tail call void @boot_banner() #27, !dbg !14768
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !14769
  tail call void @z_init_static_threads() #27, !dbg !14770
  tail call void @main() #27, !dbg !14771
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14772
  %5 = and i8 %4, -2, !dbg !14772
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14772
  ret void, !dbg !14773
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14774 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14784, metadata !DIExpression()), !dbg !14786
  call void @llvm.dbg.value(metadata i8* %1, metadata !14785, metadata !DIExpression()), !dbg !14786
  ret void, !dbg !14787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14788 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14790, metadata !DIExpression()), !dbg !14792
  call void @llvm.dbg.value(metadata i8* %1, metadata !14791, metadata !DIExpression()), !dbg !14792
  ret void, !dbg !14793
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14794 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14795, !srcloc !14802
  call void @llvm.dbg.value(metadata i32 %1, metadata !14798, metadata !DIExpression()) #25, !dbg !14803
  %2 = icmp ne i32 %1, 0, !dbg !14804
  ret i1 %2, !dbg !14805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !14806 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14807
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14808
  %3 = load i8, i8* %2, align 4, !dbg !14809
  %4 = or i8 %3, 1, !dbg !14809
  store i8 %4, i8* %2, align 4, !dbg !14809
  ret void, !dbg !14810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !14811 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14812
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14813
  %3 = load i8, i8* %2, align 4, !dbg !14814
  %4 = and i8 %3, -2, !dbg !14814
  store i8 %4, i8* %2, align 4, !dbg !14814
  ret void, !dbg !14815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !14816 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14817
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14818
  %3 = load i8, i8* %2, align 4, !dbg !14818
  %4 = and i8 %3, 1, !dbg !14819
  %5 = icmp ne i8 %4, 0, !dbg !14820
  ret i1 %5, !dbg !14821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14826, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i8* %1, metadata !14827, metadata !DIExpression()), !dbg !14828
  ret i32 -88, !dbg !14829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14830 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14834, metadata !DIExpression()), !dbg !14835
  ret i8* null, !dbg !14836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14841, metadata !DIExpression()), !dbg !14844
  call void @llvm.dbg.value(metadata i8* %1, metadata !14842, metadata !DIExpression()), !dbg !14844
  call void @llvm.dbg.value(metadata i32 %2, metadata !14843, metadata !DIExpression()), !dbg !14844
  ret i32 -88, !dbg !14845
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2373, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i8* %1, metadata !2374, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 %2, metadata !2375, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 0, metadata !2376, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i8 undef, metadata !2378, metadata !DIExpression()), !dbg !14846
  %4 = icmp eq i8* %1, null, !dbg !14847
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14849
  br i1 %6, label %46, label %7, !dbg !14849

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14850
  %9 = load i8, i8* %8, align 1, !dbg !14850
  call void @llvm.dbg.value(metadata i8 %9, metadata !2378, metadata !DIExpression()), !dbg !14846
  %10 = add i32 %2, -1, !dbg !14851
  call void @llvm.dbg.value(metadata i32 %10, metadata !2375, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i8 0, metadata !2379, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.value(metadata i8 %9, metadata !2378, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 0, metadata !2376, metadata !DIExpression()), !dbg !14846
  %11 = icmp eq i8 %9, 0, !dbg !14853
  br i1 %11, label %12, label %15, !dbg !14855

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14856
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14857
  store i8 0, i8* %14, align 1, !dbg !14858
  br label %46, !dbg !14859

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2379, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.value(metadata i8 %17, metadata !2378, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 %18, metadata !2376, metadata !DIExpression()), !dbg !14846
  %19 = zext i8 %17 to i32, !dbg !14860
  %20 = zext i8 %16 to i32, !dbg !14861
  %21 = shl nuw i32 1, %20, !dbg !14861
  call void @llvm.dbg.value(metadata i32 %21, metadata !2377, metadata !DIExpression()), !dbg !14846
  %22 = and i32 %21, %19, !dbg !14863
  %23 = icmp eq i32 %22, 0, !dbg !14865
  br i1 %23, label %42, label %24, !dbg !14866

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14867
  %26 = sub i32 %10, %18, !dbg !14868
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14869
  %28 = load i8*, i8** %27, align 4, !dbg !14869
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14870
  %30 = load i32, i32* %29, align 4, !dbg !14870
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14871
  %32 = add i32 %31, %18, !dbg !14872
  call void @llvm.dbg.value(metadata i32 %32, metadata !2376, metadata !DIExpression()), !dbg !14846
  %33 = trunc i32 %21 to i8, !dbg !14873
  %34 = xor i8 %33, -1, !dbg !14873
  %35 = and i8 %17, %34, !dbg !14873
  call void @llvm.dbg.value(metadata i8 %35, metadata !2378, metadata !DIExpression()), !dbg !14846
  %36 = icmp eq i8 %35, 0, !dbg !14874
  br i1 %36, label %12, label %37, !dbg !14876

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14877
  %39 = sub i32 %10, %32, !dbg !14879
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.180, i32 0, i32 0), i32 noundef 1) #26, !dbg !14880
  %41 = add i32 %40, %32, !dbg !14881
  call void @llvm.dbg.value(metadata i32 %41, metadata !2376, metadata !DIExpression()), !dbg !14846
  br label %42, !dbg !14882

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14846
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14846
  call void @llvm.dbg.value(metadata i8 %44, metadata !2378, metadata !DIExpression()), !dbg !14846
  call void @llvm.dbg.value(metadata i32 %43, metadata !2376, metadata !DIExpression()), !dbg !14846
  %45 = add i8 %16, 1, !dbg !14883
  call void @llvm.dbg.value(metadata i8 %45, metadata !2379, metadata !DIExpression()), !dbg !14852
  br label %15, !dbg !14855

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.181, i32 0, i32 0), %3 ], !dbg !14846
  ret i8* %47, !dbg !14884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14885 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14889, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i32 %1, metadata !14890, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i8* %2, metadata !14891, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i32 %3, metadata !14892, metadata !DIExpression()), !dbg !14894
  %5 = icmp ult i32 %1, %3, !dbg !14895
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14895
  call void @llvm.dbg.value(metadata i32 %6, metadata !14893, metadata !DIExpression()), !dbg !14894
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14896
  ret i32 %6, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14902, metadata !DIExpression()), !dbg !14903
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14904
  ret void, !dbg !14905
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14916, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i32 %2, metadata !14917, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14918, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i8* %4, metadata !14919, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i8* %5, metadata !14920, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i8* %6, metadata !14921, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i32 %7, metadata !14922, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i32 %8, metadata !14923, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata i8* undef, metadata !14924, metadata !DIExpression()), !dbg !14926
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14927
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !14928
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14929
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14930
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14931
  call void @llvm.dbg.value(metadata i8* %13, metadata !14925, metadata !DIExpression()), !dbg !14926
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14932
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14933
  store i8* null, i8** %14, align 4, !dbg !14934
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14935
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14935
  br i1 %16, label %20, label %17, !dbg !14937

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14938
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14938
  br label %20, !dbg !14939

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14926
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14940
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14942
  ret i8* %13, !dbg !14943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !14944 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14949, metadata !DIExpression()), !dbg !14950
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14951
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14952
  ret void, !dbg !14953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !14954 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14959, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 %1, metadata !14960, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 %2, metadata !14961, metadata !DIExpression()), !dbg !14963
  call void @llvm.dbg.value(metadata i32 %3, metadata !14962, metadata !DIExpression()), !dbg !14963
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14964
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14965
  %6 = trunc i32 %3 to i8, !dbg !14966
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14967
  store i8 %6, i8* %7, align 4, !dbg !14968
  %8 = trunc i32 %2 to i8, !dbg !14969
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14970
  store i8 %8, i8* %9, align 1, !dbg !14971
  %10 = trunc i32 %1 to i8, !dbg !14972
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14973
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14973
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14973
  store i8 %10, i8* %13, align 2, !dbg !14974
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14975
  store i8 0, i8* %14, align 1, !dbg !14976
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14977
  ret void, !dbg !14978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !14979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14983, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14984, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 %2, metadata !14985, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 0, metadata !14990, metadata !DIExpression()), !dbg !14991
  %4 = add i32 %2, 7, !dbg !14992
  %5 = and i32 %4, -8, !dbg !14992
  %6 = add i32 %5, 64, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %6, metadata !14986, metadata !DIExpression()), !dbg !14991
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.191(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14994
  call void @llvm.dbg.value(metadata i8* %7, metadata !14989, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 %5, metadata !14987, metadata !DIExpression()), !dbg !14991
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14995
  call void @llvm.dbg.value(metadata i8* %8, metadata !14988, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.value(metadata i32 0, metadata !14990, metadata !DIExpression()), !dbg !14991
  %9 = ptrtoint i8* %7 to i32, !dbg !14996
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14997
  store i32 %9, i32* %10, align 4, !dbg !14998
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14999
  store i32 %5, i32* %11, align 4, !dbg !15000
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15001
  store i32 0, i32* %12, align 4, !dbg !15002
  call void @llvm.dbg.value(metadata i8* %8, metadata !14988, metadata !DIExpression()), !dbg !14991
  ret i8* %8, !dbg !15003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.191(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !15004 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15008, metadata !DIExpression()), !dbg !15009
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15010
  ret i8* %2, !dbg !15011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15012 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15017, metadata !DIExpression()), !dbg !15018
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15019
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15020
  ret void, !dbg !15021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15022 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15024, metadata !DIExpression()), !dbg !15025
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15026
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !15027
  ret void, !dbg !15028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !15029 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15033, metadata !DIExpression()), !dbg !15034
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15035
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15036
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15037
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15038
  ret void, !dbg !15039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15040 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15045, metadata !DIExpression()), !dbg !15046
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15047
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15048
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15049
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15050
  ret void, !dbg !15051
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15052 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15069, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15060, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15061, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i32 %2, metadata !15062, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15063, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i8* %4, metadata !15064, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i8* %5, metadata !15065, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i8* %6, metadata !15066, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i32 %7, metadata !15067, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata i32 %8, metadata !15068, metadata !DIExpression()), !dbg !15070
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !15071
  %13 = icmp eq i64 %11, -1, !dbg !15072
  br i1 %13, label %15, label %14, !dbg !15074

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !15075
  br label %15, !dbg !15077

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15079 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15084, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15083, metadata !DIExpression()), !dbg !15085
  %4 = icmp eq i64 %3, 0, !dbg !15086
  br i1 %4, label %5, label %6, !dbg !15088

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15089
  br label %7, !dbg !15091

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15092
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15099, metadata !DIExpression()), !dbg !15100
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15101, !srcloc !15103
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15104
  ret void, !dbg !15105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15106 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15109, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15108, metadata !DIExpression()), !dbg !15110
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15111
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15112
  ret void, !dbg !15113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15116, metadata !DIExpression()), !dbg !15135
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15136

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15137
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15133, metadata !DIExpression()), !dbg !15138
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15139

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15116, metadata !DIExpression()), !dbg !15135
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15140
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15140
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15143
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15143
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15144
  %9 = load i32, i32* %8, align 4, !dbg !15144
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15145
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15145
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15146
  %13 = load i8*, i8** %12, align 4, !dbg !15146
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15147
  %15 = load i8*, i8** %14, align 4, !dbg !15147
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15148
  %17 = load i8*, i8** %16, align 4, !dbg !15148
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15149
  %19 = load i32, i32* %18, align 4, !dbg !15149
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15150
  %21 = load i32, i32* %20, align 4, !dbg !15150
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !15151
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15152
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15153
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15154
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15154
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15155
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15116, metadata !DIExpression()), !dbg !15135
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15156
  br i1 %27, label %2, label %1, !dbg !15136, !llvm.loop !15158

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !15137
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15133, metadata !DIExpression()), !dbg !15138
  br label %29, !dbg !15139

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !15160
  ret void, !dbg !15161

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15133, metadata !DIExpression()), !dbg !15138
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15162
  %33 = load i32, i32* %32, align 4, !dbg !15162
  %34 = icmp eq i32 %33, -1, !dbg !15166
  br i1 %34, label %43, label %35, !dbg !15167

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15168
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15168
  %38 = icmp sgt i32 %33, 0, !dbg !15170
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15170
  %40 = zext i32 %39 to i64, !dbg !15170
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.194(i64 noundef %40) #26, !dbg !15170
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15171
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15171
  br label %43, !dbg !15172

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15173
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15133, metadata !DIExpression()), !dbg !15138
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15174
  br i1 %45, label %30, label %29, !dbg !15139, !llvm.loop !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.194(i64 noundef %0) unnamed_addr #5 !dbg !15178 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15180, metadata !DIExpression()), !dbg !15181
  call void @llvm.dbg.value(metadata i64 %0, metadata !15182, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 1000, metadata !15185, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 10000, metadata !15186, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i8 1, metadata !15187, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i8 0, metadata !15188, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i8 1, metadata !15189, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i8 0, metadata !15190, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i8 1, metadata !15191, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i8 0, metadata !15192, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i64 0, metadata !15193, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i64 0, metadata !15193, metadata !DIExpression()), !dbg !15197
  %2 = mul i64 %0, 10, !dbg !15199
  ret i64 %2, !dbg !15205
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !15206 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15208, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i8* %1, metadata !15209, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i8* %2, metadata !15210, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.value(metadata i8* %3, metadata !15211, metadata !DIExpression()), !dbg !15212
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15213
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15214
  %7 = load i8, i8* %6, align 4, !dbg !15215
  %8 = or i8 %7, 4, !dbg !15215
  store i8 %8, i8* %6, align 4, !dbg !15215
  tail call void @z_thread_essential_clear() #26, !dbg !15216
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15217
  unreachable, !dbg !15217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !15218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15222, metadata !DIExpression()), !dbg !15223
  ret i32 -134, !dbg !15224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !15225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15229, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.value(metadata i32 %1, metadata !15230, metadata !DIExpression()), !dbg !15231
  ret i32 -134, !dbg !15232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #5 !dbg !15233 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15240, metadata !DIExpression()), !dbg !15242
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15241, metadata !DIExpression()), !dbg !15242
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15243
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15245
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15242
  ret i32 %6, !dbg !15246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #5 !dbg !15247 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15251, metadata !DIExpression()), !dbg !15252
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15253
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15252
  ret i32 %3, !dbg !15255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15256 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15258
  ret void, !dbg !15259
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !15260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15262, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i8* %1, metadata !15263, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.value(metadata i8* %2, metadata !15264, metadata !DIExpression()), !dbg !15265
  br label %4, !dbg !15266

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15267, !srcloc !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !15270, metadata !DIExpression()) #25, !dbg !15275
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()) #25, !dbg !15275
  tail call fastcc void @k_cpu_idle() #26, !dbg !15276
  br label %4, !dbg !15266, !llvm.loop !15277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15279 {
  tail call void @arch_cpu_idle() #27, !dbg !15280
  ret void, !dbg !15281
}

; Function Attrs: optsize
declare !dbg !15282 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #8 !dbg !15283 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15301, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata i8* %1, metadata !15302, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata i32 %2, metadata !15303, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.value(metadata i32 %3, metadata !15304, metadata !DIExpression()), !dbg !15305
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15306
  store i32 %2, i32* %5, align 4, !dbg !15307
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15308
  store i32 %3, i32* %6, align 4, !dbg !15309
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15310
  store i8* %1, i8** %7, align 4, !dbg !15311
  %8 = mul i32 %3, %2, !dbg !15312
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !15313
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15314
  store i8* %9, i8** %10, align 4, !dbg !15315
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15316
  store i8* %1, i8** %11, align 4, !dbg !15317
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15318
  store i8* %1, i8** %12, align 4, !dbg !15319
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15320
  store i32 0, i32* %13, align 4, !dbg !15321
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15322
  store i8 0, i8* %14, align 4, !dbg !15323
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15324
  tail call fastcc void @z_waitq_init.197(%struct._wait_q_t* noundef %15) #26, !dbg !15325
  ret void, !dbg !15326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.197(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15327 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15331, metadata !DIExpression()), !dbg !15332
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15333
  tail call fastcc void @sys_dlist_init.198(%struct._dnode* noundef %2) #26, !dbg !15334
  ret void, !dbg !15335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.198(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15336 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15341, metadata !DIExpression()), !dbg !15342
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15343
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15344
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15345
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15346
  ret void, !dbg !15347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15348 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15352, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.value(metadata i32 %1, metadata !15353, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.value(metadata i32 %2, metadata !15354, metadata !DIExpression()), !dbg !15358
  %5 = bitcast i32* %4 to i8*, !dbg !15359
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15359
  call void @llvm.dbg.value(metadata i32* %4, metadata !15357, metadata !DIExpression(DW_OP_deref)), !dbg !15358
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !15360
  br i1 %6, label %13, label %7, !dbg !15362

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15363
  call void @llvm.dbg.value(metadata i32 %8, metadata !15357, metadata !DIExpression()), !dbg !15358
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !15365
  call void @llvm.dbg.value(metadata i8* %9, metadata !15355, metadata !DIExpression()), !dbg !15358
  %10 = icmp eq i8* %9, null, !dbg !15366
  br i1 %10, label %13, label %11, !dbg !15368

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !15369
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15371
  store i8 1, i8* %12, align 4, !dbg !15372
  call void @llvm.dbg.value(metadata i32 0, metadata !15356, metadata !DIExpression()), !dbg !15358
  br label %13, !dbg !15373

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15374
  call void @llvm.dbg.value(metadata i32 %14, metadata !15356, metadata !DIExpression()), !dbg !15358
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15375
  ret i32 %14, !dbg !15376
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !15377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15382, metadata !DIExpression()), !dbg !15385
  call void @llvm.dbg.value(metadata i32 %1, metadata !15383, metadata !DIExpression()), !dbg !15385
  call void @llvm.dbg.value(metadata i32* %2, metadata !15384, metadata !DIExpression()), !dbg !15385
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15386
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15386
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15386
  store i32 %6, i32* %2, align 4, !dbg !15386
  ret i1 %5, !dbg !15387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15392, metadata !DIExpression()), !dbg !15393
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !15394
  ret i8* %2, !dbg !15395
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15396 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15400, metadata !DIExpression()), !dbg !15401
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15402
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !15402
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15402
  br i1 %4, label %5, label %15, !dbg !15404

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15405
  %7 = load i8, i8* %6, align 4, !dbg !15405
  %8 = and i8 %7, 1, !dbg !15407
  %9 = icmp eq i8 %8, 0, !dbg !15408
  br i1 %9, label %15, label %10, !dbg !15409

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15410
  %12 = load i8*, i8** %11, align 4, !dbg !15410
  tail call void @k_free(i8* noundef %12) #27, !dbg !15412
  %13 = load i8, i8* %6, align 4, !dbg !15413
  %14 = and i8 %13, -2, !dbg !15413
  store i8 %14, i8* %6, align 4, !dbg !15413
  br label %15, !dbg !15414

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15401
  ret i32 %16, !dbg !15415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !15416 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15420, metadata !DIExpression()), !dbg !15421
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15422
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !15423
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15424
  ret %struct.k_thread* %4, !dbg !15425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15430, metadata !DIExpression()), !dbg !15431
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15432
  br i1 %2, label %6, label %3, !dbg !15432

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15433
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15433
  br label %6, !dbg !15432

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15432
  ret %struct._dnode* %7, !dbg !15434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15435 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15439, metadata !DIExpression()), !dbg !15440
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15441
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15441
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15442
  ret i1 %4, !dbg !15443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15444 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15454, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15452, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata i8* %1, metadata !15453, metadata !DIExpression()), !dbg !15462
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15464, metadata !DIExpression()) #25, !dbg !15471
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15473, !srcloc !15479
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %6, metadata !15476, metadata !DIExpression()) #25, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15477, metadata !DIExpression()) #25, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %6, metadata !15470, metadata !DIExpression()) #25, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %6, metadata !15456, metadata !DIExpression()), !dbg !15462
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15481
  %8 = load i32, i32* %7, align 4, !dbg !15481
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15483
  %10 = load i32, i32* %9, align 4, !dbg !15483
  %11 = icmp ult i32 %8, %10, !dbg !15484
  br i1 %11, label %12, label %42, !dbg !15485

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15486
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !15488
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15455, metadata !DIExpression()), !dbg !15462
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !15489
  br i1 %15, label %24, label %16, !dbg !15491

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !15492
  %18 = load i8*, i8** %17, align 4, !dbg !15492
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15494
  %20 = load i32, i32* %19, align 4, !dbg !15494
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15496, metadata !DIExpression()), !dbg !15502
  call void @llvm.dbg.value(metadata i32 0, metadata !15501, metadata !DIExpression()), !dbg !15502
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !15504
  store i32 0, i32* %22, align 4, !dbg !15505
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !15506
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15507
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !15507
  br label %53, !dbg !15508

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15509
  %26 = load i8*, i8** %25, align 4, !dbg !15509
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15511
  %28 = load i32, i32* %27, align 4, !dbg !15511
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !15512
  %30 = load i32, i32* %27, align 4, !dbg !15513
  %31 = load i8*, i8** %25, align 4, !dbg !15514
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !15514
  store i8* %32, i8** %25, align 4, !dbg !15514
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15515
  %34 = load i8*, i8** %33, align 4, !dbg !15515
  %35 = icmp eq i8* %32, %34, !dbg !15517
  br i1 %35, label %36, label %39, !dbg !15518

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15519
  %38 = load i8*, i8** %37, align 4, !dbg !15519
  store i8* %38, i8** %25, align 4, !dbg !15521
  br label %39, !dbg !15522

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !15523
  %41 = add i32 %40, 1, !dbg !15523
  store i32 %41, i32* %7, align 4, !dbg !15523
  call void @llvm.dbg.value(metadata i32 0, metadata !15461, metadata !DIExpression()), !dbg !15462
  br label %51, !dbg !15524

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !15454, metadata !DIExpression()), !dbg !15462
  %44 = icmp eq i64 %43, 0, !dbg !15525
  br i1 %44, label %51, label %45, !dbg !15527

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15528
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !15530
  store i8* %1, i8** %47, align 4, !dbg !15531
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15532
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15533
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !15533
  call void @llvm.dbg.value(metadata i32 %50, metadata !15461, metadata !DIExpression()), !dbg !15462
  br label %53, !dbg !15534

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !15535
  call void @llvm.dbg.value(metadata i32 %52, metadata !15461, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata i32 %6, metadata !15536, metadata !DIExpression()) #25, !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15541, metadata !DIExpression()) #25, !dbg !15542
  call void @llvm.dbg.value(metadata i32 %6, metadata !15544, metadata !DIExpression()) #25, !dbg !15547
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !15549, !srcloc !15550
  br label %53, !dbg !15551

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !15462
  ret i32 %54, !dbg !15552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !15553 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15563, metadata !DIExpression()), !dbg !15565
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15564, metadata !DIExpression()), !dbg !15565
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15566
  %4 = load i32, i32* %3, align 4, !dbg !15566
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15567
  store i32 %4, i32* %5, align 4, !dbg !15568
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15569
  %7 = load i32, i32* %6, align 4, !dbg !15569
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15570
  store i32 %7, i32* %8, align 4, !dbg !15571
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15572
  %10 = load i32, i32* %9, align 4, !dbg !15572
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15573
  store i32 %10, i32* %11, align 4, !dbg !15574
  ret void, !dbg !15575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15576 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15582, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15580, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata i8* %1, metadata !15581, metadata !DIExpression()), !dbg !15586
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15464, metadata !DIExpression()) #25, !dbg !15588
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15590, !srcloc !15479
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !15590
  call void @llvm.dbg.value(metadata i32 %6, metadata !15476, metadata !DIExpression()) #25, !dbg !15592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15477, metadata !DIExpression()) #25, !dbg !15592
  call void @llvm.dbg.value(metadata i32 %6, metadata !15470, metadata !DIExpression()) #25, !dbg !15588
  call void @llvm.dbg.value(metadata i32 %6, metadata !15583, metadata !DIExpression()), !dbg !15586
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15593
  %8 = load i32, i32* %7, align 4, !dbg !15593
  %9 = icmp eq i32 %8, 0, !dbg !15595
  br i1 %9, label %51, label %10, !dbg !15596

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15597
  %12 = load i8*, i8** %11, align 4, !dbg !15597
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15599
  %14 = load i32, i32* %13, align 4, !dbg !15599
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !15600
  %16 = load i32, i32* %13, align 4, !dbg !15601
  %17 = load i8*, i8** %11, align 4, !dbg !15602
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !15602
  store i8* %18, i8** %11, align 4, !dbg !15602
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15603
  %20 = load i8*, i8** %19, align 4, !dbg !15603
  %21 = icmp eq i8* %18, %20, !dbg !15605
  br i1 %21, label %22, label %25, !dbg !15606

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15607
  %24 = load i8*, i8** %23, align 4, !dbg !15607
  store i8* %24, i8** %11, align 4, !dbg !15609
  br label %25, !dbg !15610

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !15611
  %27 = add i32 %26, -1, !dbg !15611
  store i32 %27, i32* %7, align 4, !dbg !15611
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15612
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !15613
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15584, metadata !DIExpression()), !dbg !15586
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !15614
  br i1 %30, label %60, label %31, !dbg !15616

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15617
  %33 = load i8*, i8** %32, align 4, !dbg !15617
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !15619
  %35 = load i8*, i8** %34, align 4, !dbg !15619
  %36 = load i32, i32* %13, align 4, !dbg !15620
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !15621
  %38 = load i32, i32* %13, align 4, !dbg !15622
  %39 = load i8*, i8** %32, align 4, !dbg !15623
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !15623
  store i8* %40, i8** %32, align 4, !dbg !15623
  %41 = load i8*, i8** %19, align 4, !dbg !15624
  %42 = icmp eq i8* %40, %41, !dbg !15626
  br i1 %42, label %43, label %46, !dbg !15627

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15628
  %45 = load i8*, i8** %44, align 4, !dbg !15628
  store i8* %45, i8** %32, align 4, !dbg !15630
  br label %46, !dbg !15631

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !15632
  %48 = add i32 %47, 1, !dbg !15632
  store i32 %48, i32* %7, align 4, !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !15496, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 0, metadata !15501, metadata !DIExpression()), !dbg !15633
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !15635
  store i32 0, i32* %49, align 4, !dbg !15636
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !15637
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15638
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !15638
  br label %62, !dbg !15639

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !15582, metadata !DIExpression()), !dbg !15586
  %53 = icmp eq i64 %52, 0, !dbg !15640
  br i1 %53, label %60, label %54, !dbg !15642

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15643
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !15645
  store i8* %1, i8** %56, align 4, !dbg !15646
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15647
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15648
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !15648
  call void @llvm.dbg.value(metadata i32 %59, metadata !15585, metadata !DIExpression()), !dbg !15586
  br label %62, !dbg !15649

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !15650
  call void @llvm.dbg.value(metadata i32 %61, metadata !15585, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.value(metadata i32 %6, metadata !15536, metadata !DIExpression()) #25, !dbg !15651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15541, metadata !DIExpression()) #25, !dbg !15651
  call void @llvm.dbg.value(metadata i32 %6, metadata !15544, metadata !DIExpression()) #25, !dbg !15653
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !15655, !srcloc !15550
  br label %62, !dbg !15656

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !15586
  ret i32 %63, !dbg !15657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15658 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15662, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i8* %1, metadata !15663, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15464, metadata !DIExpression()) #25, !dbg !15667
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15669, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()) #25, !dbg !15671
  call void @llvm.dbg.value(metadata i32 undef, metadata !15477, metadata !DIExpression()) #25, !dbg !15671
  call void @llvm.dbg.value(metadata i32 undef, metadata !15470, metadata !DIExpression()) #25, !dbg !15667
  call void @llvm.dbg.value(metadata i32 undef, metadata !15664, metadata !DIExpression()), !dbg !15666
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15672
  %5 = load i32, i32* %4, align 4, !dbg !15672
  %6 = icmp eq i32 %5, 0, !dbg !15674
  br i1 %6, label %13, label %7, !dbg !15675

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15676
  %9 = load i8*, i8** %8, align 4, !dbg !15676
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15678
  %11 = load i32, i32* %10, align 4, !dbg !15678
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !15679
  call void @llvm.dbg.value(metadata i32 0, metadata !15665, metadata !DIExpression()), !dbg !15666
  br label %13, !dbg !15680

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !15681
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15669
  call void @llvm.dbg.value(metadata i32 %15, metadata !15476, metadata !DIExpression()) #25, !dbg !15671
  call void @llvm.dbg.value(metadata i32 %15, metadata !15470, metadata !DIExpression()) #25, !dbg !15667
  call void @llvm.dbg.value(metadata i32 %15, metadata !15664, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i32 %14, metadata !15665, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata i32 undef, metadata !15536, metadata !DIExpression()) #25, !dbg !15682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15541, metadata !DIExpression()) #25, !dbg !15682
  call void @llvm.dbg.value(metadata i32 undef, metadata !15544, metadata !DIExpression()) #25, !dbg !15684
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15686, !srcloc !15550
  ret i32 %14, !dbg !15687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15688 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15692, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15464, metadata !DIExpression()) #25, !dbg !15696
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15698, !srcloc !15479
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()) #25, !dbg !15700
  call void @llvm.dbg.value(metadata i32 undef, metadata !15477, metadata !DIExpression()) #25, !dbg !15700
  call void @llvm.dbg.value(metadata i32 undef, metadata !15470, metadata !DIExpression()) #25, !dbg !15696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15693, metadata !DIExpression()), !dbg !15695
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15701
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15694, metadata !DIExpression()), !dbg !15695
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15702
  br i1 %5, label %11, label %6, !dbg !15703

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15496, metadata !DIExpression()), !dbg !15704
  call void @llvm.dbg.value(metadata i32 -35, metadata !15501, metadata !DIExpression()), !dbg !15704
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15707
  store i32 -35, i32* %8, align 4, !dbg !15708
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15709
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !15701
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15694, metadata !DIExpression()), !dbg !15695
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !15702
  br i1 %10, label %11, label %6, !dbg !15703, !llvm.loop !15710

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %12, metadata !15476, metadata !DIExpression()) #25, !dbg !15700
  call void @llvm.dbg.value(metadata i32 %12, metadata !15470, metadata !DIExpression()) #25, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %12, metadata !15693, metadata !DIExpression()), !dbg !15695
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15712
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15713
  store i32 0, i32* %14, align 4, !dbg !15714
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15715
  %16 = load i8*, i8** %15, align 4, !dbg !15715
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15716
  store i8* %16, i8** %17, align 4, !dbg !15717
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15718
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !15718
  ret void, !dbg !15719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #8 !dbg !15720 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15731, metadata !DIExpression()), !dbg !15732
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15733
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !15734
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15735
  store i32 0, i32* %3, align 4, !dbg !15736
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15737
  tail call fastcc void @z_waitq_init.203(%struct._wait_q_t* noundef %4) #26, !dbg !15738
  ret i32 0, !dbg !15739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.203(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !15740 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15744, metadata !DIExpression()), !dbg !15745
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15746
  tail call fastcc void @sys_dlist_init.204(%struct._dnode* noundef %2) #26, !dbg !15747
  ret void, !dbg !15748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.204(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15749 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15754, metadata !DIExpression()), !dbg !15755
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15756
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15757
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15758
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15759
  ret void, !dbg !15760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15761 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15770, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15769, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.value(metadata i8 0, metadata !15777, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15783, metadata !DIExpression()) #25, !dbg !15790
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15792, !srcloc !15798
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15792
  call void @llvm.dbg.value(metadata i32 %5, metadata !15795, metadata !DIExpression()) #25, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !15796, metadata !DIExpression()) #25, !dbg !15799
  call void @llvm.dbg.value(metadata i32 %5, metadata !15789, metadata !DIExpression()) #25, !dbg !15790
  call void @llvm.dbg.value(metadata i32 %5, metadata !15772, metadata !DIExpression()), !dbg !15782
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15800
  %7 = load i32, i32* %6, align 4, !dbg !15800
  %8 = icmp eq i32 %7, 0, !dbg !15800
  br i1 %8, label %14, label %9, !dbg !15800

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15800
  %11 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15800
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15800
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15800
  br i1 %13, label %20, label %29, !dbg !15802, !prof !15803

14:                                               ; preds = %2
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15804
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 0, i32 4, !dbg !15806
  %17 = bitcast %union.anon.2* %16 to i8*, !dbg !15806
  %18 = load i8, i8* %17, align 2, !dbg !15806
  %19 = sext i8 %18 to i32, !dbg !15804
  br label %23, !dbg !15807

20:                                               ; preds = %9
  %21 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15808
  %22 = load i32, i32* %21, align 4, !dbg !15808
  br label %23, !dbg !15807

23:                                               ; preds = %20, %14
  %24 = phi %struct.k_thread* [ %15, %14 ], [ %11, %20 ], !dbg !15809
  %25 = phi i32 [ %19, %14 ], [ %22, %20 ], !dbg !15807
  %26 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15810
  store i32 %25, i32* %26, align 4, !dbg !15811
  %27 = add i32 %7, 1, !dbg !15812
  store i32 %27, i32* %6, align 4, !dbg !15812
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15813
  store %struct.k_thread* %24, %struct.k_thread** %28, align 4, !dbg !15814
  call void @llvm.dbg.value(metadata i32 %5, metadata !15815, metadata !DIExpression()) #25, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15820, metadata !DIExpression()) #25, !dbg !15821
  call void @llvm.dbg.value(metadata i32 %5, metadata !15823, metadata !DIExpression()) #25, !dbg !15826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15828, !srcloc !15829
  br label %78, !dbg !15830

29:                                               ; preds = %9
  %30 = icmp eq i64 %3, 0, !dbg !15831
  br i1 %30, label %31, label %32, !dbg !15833, !prof !15834

31:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %5, metadata !15815, metadata !DIExpression()) #25, !dbg !15835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15820, metadata !DIExpression()) #25, !dbg !15835
  call void @llvm.dbg.value(metadata i32 %5, metadata !15823, metadata !DIExpression()) #25, !dbg !15838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15840, !srcloc !15829
  br label %78, !dbg !15841

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 0, i32 4, !dbg !15842
  %34 = bitcast %union.anon.2* %33 to i8*, !dbg !15842
  %35 = load i8, i8* %34, align 2, !dbg !15842
  %36 = sext i8 %35 to i32, !dbg !15843
  %37 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 0, i32 4, !dbg !15844
  %38 = bitcast %union.anon.2* %37 to i8*, !dbg !15844
  %39 = load i8, i8* %38, align 2, !dbg !15844
  %40 = sext i8 %39 to i32, !dbg !15845
  %41 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %36, i32 noundef %40) #26, !dbg !15846
  call void @llvm.dbg.value(metadata i32 %41, metadata !15771, metadata !DIExpression()), !dbg !15782
  %42 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %41, i32 noundef %40) #26, !dbg !15847
  br i1 %42, label %43, label %45, !dbg !15849

43:                                               ; preds = %32
  %44 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %41) #26, !dbg !15850
  call void @llvm.dbg.value(metadata i1 %44, metadata !15777, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15782
  br label %45, !dbg !15852

45:                                               ; preds = %43, %32
  %46 = phi i1 [ %44, %43 ], [ false, %32 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15777, metadata !DIExpression()), !dbg !15782
  %47 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15853
  %48 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !15854
  %49 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %48, %struct._wait_q_t* noundef %47, [1 x i64] %1) #27, !dbg !15854
  call void @llvm.dbg.value(metadata i32 %49, metadata !15778, metadata !DIExpression()), !dbg !15782
  %50 = icmp eq i32 %49, 0, !dbg !15855
  br i1 %50, label %78, label %51, !dbg !15857

51:                                               ; preds = %45
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15783, metadata !DIExpression()) #25, !dbg !15858
  %52 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15860, !srcloc !15798
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !15860
  call void @llvm.dbg.value(metadata i32 %53, metadata !15795, metadata !DIExpression()) #25, !dbg !15862
  call void @llvm.dbg.value(metadata i32 undef, metadata !15796, metadata !DIExpression()) #25, !dbg !15862
  call void @llvm.dbg.value(metadata i32 %53, metadata !15789, metadata !DIExpression()) #25, !dbg !15858
  call void @llvm.dbg.value(metadata i32 %53, metadata !15772, metadata !DIExpression()), !dbg !15782
  %54 = load %struct.k_thread*, %struct.k_thread** %10, align 4, !dbg !15863
  %55 = icmp eq %struct.k_thread* %54, null, !dbg !15863
  br i1 %55, label %74, label %56, !dbg !15864, !prof !15834

56:                                               ; preds = %51
  %57 = tail call fastcc %struct.k_thread* @z_waitq_head.207(%struct._wait_q_t* noundef nonnull %47) #26, !dbg !15865
  call void @llvm.dbg.value(metadata %struct.k_thread* %57, metadata !15779, metadata !DIExpression()), !dbg !15866
  %58 = icmp eq %struct.k_thread* %57, null, !dbg !15867
  br i1 %58, label %67, label %59, !dbg !15868

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %57, i32 0, i32 0, i32 4, !dbg !15869
  %61 = bitcast %union.anon.2* %60 to i8*, !dbg !15869
  %62 = load i8, i8* %61, align 2, !dbg !15869
  %63 = sext i8 %62 to i32, !dbg !15870
  %64 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15871
  %65 = load i32, i32* %64, align 4, !dbg !15871
  %66 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %63, i32 noundef %65) #26, !dbg !15872
  br label %70, !dbg !15868

67:                                               ; preds = %56
  %68 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15873
  %69 = load i32, i32* %68, align 4, !dbg !15873
  br label %70, !dbg !15868

70:                                               ; preds = %67, %59
  %71 = phi i32 [ %66, %59 ], [ %69, %67 ], !dbg !15868
  call void @llvm.dbg.value(metadata i32 %71, metadata !15771, metadata !DIExpression()), !dbg !15782
  %72 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %71) #26, !dbg !15874
  %73 = select i1 %72, i1 true, i1 %46, !dbg !15875
  call void @llvm.dbg.value(metadata i1 %73, metadata !15777, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15782
  call void @llvm.dbg.value(metadata i8 poison, metadata !15777, metadata !DIExpression()), !dbg !15782
  br i1 %73, label %75, label %77, !dbg !15876

74:                                               ; preds = %51
  call void @llvm.dbg.value(metadata i8 poison, metadata !15777, metadata !DIExpression()), !dbg !15782
  br i1 %46, label %75, label %77, !dbg !15876

75:                                               ; preds = %70, %74
  %76 = insertvalue [1 x i32] poison, i32 %53, 0, !dbg !15877
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %76) #27, !dbg !15877
  br label %78, !dbg !15880

77:                                               ; preds = %70, %74
  call void @llvm.dbg.value(metadata i32 %53, metadata !15815, metadata !DIExpression()) #25, !dbg !15881
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15820, metadata !DIExpression()) #25, !dbg !15881
  call void @llvm.dbg.value(metadata i32 %53, metadata !15823, metadata !DIExpression()) #25, !dbg !15884
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %53) #25, !dbg !15886, !srcloc !15829
  br label %78

78:                                               ; preds = %45, %75, %77, %31, %23
  %79 = phi i32 [ 0, %23 ], [ -16, %31 ], [ 0, %45 ], [ -11, %75 ], [ -11, %77 ], !dbg !15782
  ret i32 %79, !dbg !15887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15892, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 %1, metadata !15893, metadata !DIExpression()), !dbg !15895
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #26, !dbg !15896
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15896
  call void @llvm.dbg.value(metadata i32 %4, metadata !15894, metadata !DIExpression()), !dbg !15895
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #26, !dbg !15897
  call void @llvm.dbg.value(metadata i32 %5, metadata !15894, metadata !DIExpression()), !dbg !15895
  ret i32 %5, !dbg !15898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15903, metadata !DIExpression()), !dbg !15905
  call void @llvm.dbg.value(metadata i32 %1, metadata !15904, metadata !DIExpression()), !dbg !15905
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15906
  ret i1 %3, !dbg !15907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15908 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15912, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata i32 %1, metadata !15913, metadata !DIExpression()), !dbg !15914
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15915
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15915
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15917
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15917
  %7 = load i8, i8* %6, align 2, !dbg !15917
  %8 = sext i8 %7 to i32, !dbg !15918
  %9 = icmp eq i32 %8, %1, !dbg !15919
  br i1 %9, label %12, label %10, !dbg !15920

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #27, !dbg !15921
  br label %12, !dbg !15923

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15914
  ret i1 %13, !dbg !15924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.207(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !15925 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15929, metadata !DIExpression()), !dbg !15930
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15931
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.208(%struct._dnode* noundef %2) #26, !dbg !15932
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15933
  ret %struct.k_thread* %4, !dbg !15934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.208(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15935 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15939, metadata !DIExpression()), !dbg !15940
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.209(%struct._dnode* noundef %0) #26, !dbg !15941
  br i1 %2, label %6, label %3, !dbg !15941

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15942
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15942
  br label %6, !dbg !15941

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15941
  ret %struct._dnode* %7, !dbg !15943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.209(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !15944 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15948, metadata !DIExpression()), !dbg !15949
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15950
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15950
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15951
  ret i1 %4, !dbg !15952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !15953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15955, metadata !DIExpression()), !dbg !15957
  call void @llvm.dbg.value(metadata i32 %1, metadata !15956, metadata !DIExpression()), !dbg !15957
  %3 = icmp slt i32 %0, %1, !dbg !15958
  ret i1 %3, !dbg !15959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15962, metadata !DIExpression()), !dbg !15963
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #26, !dbg !15964
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15964
  ret i32 %3, !dbg !15965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #5 !dbg !15966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15970, metadata !DIExpression()), !dbg !15971
  %2 = icmp sgt i32 %0, -128, !dbg !15972
  ret i1 %2, !dbg !15973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15976, metadata !DIExpression()), !dbg !15980
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15981
  %3 = load %struct.k_thread*, %struct.k_thread** %2, align 4, !dbg !15981
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15981
  br i1 %4, label %31, label %5, !dbg !15983

5:                                                ; preds = %1
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15984
  %7 = icmp eq %struct.k_thread* %3, %6, !dbg !15984
  br i1 %7, label %8, label %31, !dbg !15986

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15987
  %10 = load i32, i32* %9, align 4, !dbg !15987
  %11 = icmp ugt i32 %10, 1, !dbg !15989
  br i1 %11, label %12, label %14, !dbg !15990

12:                                               ; preds = %8
  %13 = add i32 %10, -1, !dbg !15991
  store i32 %13, i32* %9, align 4, !dbg !15991
  br label %31, !dbg !15993

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15783, metadata !DIExpression()) #25, !dbg !15994
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15996, !srcloc !15798
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15996
  call void @llvm.dbg.value(metadata i32 %16, metadata !15795, metadata !DIExpression()) #25, !dbg !15998
  call void @llvm.dbg.value(metadata i32 undef, metadata !15796, metadata !DIExpression()) #25, !dbg !15998
  call void @llvm.dbg.value(metadata i32 %16, metadata !15789, metadata !DIExpression()) #25, !dbg !15994
  call void @llvm.dbg.value(metadata i32 %16, metadata !15978, metadata !DIExpression()), !dbg !15980
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15999
  %18 = load i32, i32* %17, align 4, !dbg !15999
  %19 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %18) #26, !dbg !16000
  %20 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16001
  %21 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %20) #27, !dbg !16002
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !15977, metadata !DIExpression()), !dbg !15980
  store %struct.k_thread* %21, %struct.k_thread** %2, align 4, !dbg !16003
  %22 = icmp eq %struct.k_thread* %21, null, !dbg !16004
  br i1 %22, label %30, label %23, !dbg !16006

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 4, !dbg !16007
  %25 = bitcast %union.anon.2* %24 to i8*, !dbg !16007
  %26 = load i8, i8* %25, align 2, !dbg !16007
  %27 = sext i8 %26 to i32, !dbg !16009
  store i32 %27, i32* %17, align 4, !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_thread* %21, metadata !16011, metadata !DIExpression()), !dbg !16017
  call void @llvm.dbg.value(metadata i32 0, metadata !16016, metadata !DIExpression()), !dbg !16017
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 7, i32 1, !dbg !16019
  store i32 0, i32* %28, align 4, !dbg !16020
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %21) #27, !dbg !16021
  %29 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16022
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %29) #27, !dbg !16022
  br label %31, !dbg !16023

30:                                               ; preds = %14
  store i32 0, i32* %9, align 4, !dbg !16024
  call void @llvm.dbg.value(metadata i32 %16, metadata !15815, metadata !DIExpression()) #25, !dbg !16026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15820, metadata !DIExpression()) #25, !dbg !16026
  call void @llvm.dbg.value(metadata i32 %16, metadata !15823, metadata !DIExpression()) #25, !dbg !16028
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16030, !srcloc !15829
  br label %31

31:                                               ; preds = %23, %30, %12, %5, %1
  %32 = phi i32 [ -22, %1 ], [ -1, %5 ], [ 0, %12 ], [ 0, %30 ], [ 0, %23 ], !dbg !15980
  ret i32 %32, !dbg !16031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !16032 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16036, metadata !DIExpression()), !dbg !16040
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16037, metadata !DIExpression()), !dbg !16040
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16041
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !16041
  %5 = load i8, i8* %4, align 2, !dbg !16041
  call void @llvm.dbg.value(metadata i8 %5, metadata !16038, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16040
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16042
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !16042
  %8 = load i8, i8* %7, align 2, !dbg !16042
  call void @llvm.dbg.value(metadata i8 %8, metadata !16039, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16040
  %9 = icmp eq i8 %8, %5, !dbg !16043
  %10 = sext i8 %5 to i32, !dbg !16045
  %11 = sext i8 %8 to i32, !dbg !16045
  %12 = sub nsw i32 %11, %10, !dbg !16045
  %13 = select i1 %9, i32 0, i32 %12, !dbg !16045
  ret i32 %13, !dbg !16046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !16047 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16051, metadata !DIExpression()), !dbg !16052
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !16053
  %3 = icmp eq i32 %2, 0, !dbg !16055
  br i1 %3, label %8, label %4, !dbg !16056

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !16057
  %6 = add i32 %5, %2, !dbg !16059
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16060
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !16061
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !16062
  br label %8, !dbg !16063

8:                                                ; preds = %4, %1
  ret void, !dbg !16064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !16065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16069, metadata !DIExpression()), !dbg !16071
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !16072
  call void @llvm.dbg.value(metadata i32 %1, metadata !16070, metadata !DIExpression()), !dbg !16071
  ret i32 %1, !dbg !16073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16078, metadata !DIExpression()), !dbg !16087
  call void @llvm.dbg.value(metadata i32 %1, metadata !16079, metadata !DIExpression()), !dbg !16087
  call void @llvm.dbg.value(metadata i32 0, metadata !16080, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16096
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16098, !srcloc !16104
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16098
  call void @llvm.dbg.value(metadata i32 %4, metadata !16101, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16105
  call void @llvm.dbg.value(metadata i32 %4, metadata !16095, metadata !DIExpression()) #25, !dbg !16096
  call void @llvm.dbg.value(metadata i32 %4, metadata !16086, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !16080, metadata !DIExpression()), !dbg !16088
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16106
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !16109
  %6 = icmp sgt i32 %0, 0, !dbg !16110
  %7 = icmp sgt i32 %5, 2, !dbg !16112
  %8 = select i1 %7, i32 %5, i32 2, !dbg !16112
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !16112
  store i32 %9, i32* @slice_ticks, align 4, !dbg !16113
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !16114
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16115
  call void @llvm.dbg.value(metadata i32 %4, metadata !16116, metadata !DIExpression()) #25, !dbg !16122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16122
  call void @llvm.dbg.value(metadata i32 %4, metadata !16124, metadata !DIExpression()) #25, !dbg !16127
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16129, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !16080, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !16080, metadata !DIExpression()), !dbg !16088
  ret void, !dbg !16131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !16132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16134, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i32 %0, metadata !16136, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16151
  call void @llvm.dbg.value(metadata i32 1000, metadata !16139, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i32 10000, metadata !16140, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i8 1, metadata !16141, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i1 true, metadata !16142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16151
  call void @llvm.dbg.value(metadata i1 true, metadata !16143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16151
  call void @llvm.dbg.value(metadata i8 0, metadata !16144, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i1 true, metadata !16145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16151
  call void @llvm.dbg.value(metadata i1 false, metadata !16146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16151
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !16151
  %2 = mul i32 %0, 10, !dbg !16153
  ret i32 %2, !dbg !16159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16162, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16165
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16167, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16167
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !16169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16169
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %3, metadata !16163, metadata !DIExpression()), !dbg !16164
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16170
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16172
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !16173
  br i1 %6, label %7, label %8, !dbg !16174

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16175
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16177
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !16179
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16181, !srcloc !16130
  br label %24, !dbg !16182

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16183
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !16184
  %10 = icmp eq i32 %9, 0, !dbg !16184
  br i1 %10, label %21, label %11, !dbg !16186

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !16187
  br i1 %12, label %13, label %21, !dbg !16188

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16189
  %15 = icmp sgt i32 %14, %0, !dbg !16192
  br i1 %15, label %19, label %16, !dbg !16193

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16194
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !16194
  call void @llvm.dbg.value(metadata i32 %18, metadata !16163, metadata !DIExpression()), !dbg !16164
  br label %22, !dbg !16196

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !16197
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16197
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16199
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !16164
  call void @llvm.dbg.value(metadata i32 %23, metadata !16163, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 %23, metadata !16116, metadata !DIExpression()) #25, !dbg !16201
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16201
  call void @llvm.dbg.value(metadata i32 %23, metadata !16124, metadata !DIExpression()) #25, !dbg !16203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !16205, !srcloc !16130
  br label %24, !dbg !16206

24:                                               ; preds = %22, %7
  ret void, !dbg !16206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !16207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16211, metadata !DIExpression()), !dbg !16213
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !16214
  %3 = icmp eq i32 %2, 0, !dbg !16214
  br i1 %3, label %16, label %4, !dbg !16215

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16216
  br i1 %5, label %16, label %6, !dbg !16217

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16218
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16218
  %9 = load i8, i8* %8, align 2, !dbg !16218
  %10 = sext i8 %9 to i32, !dbg !16219
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16220
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.215(i32 noundef %10, i32 noundef %11) #26, !dbg !16221
  br i1 %12, label %16, label %13, !dbg !16222

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !16223
  %15 = xor i1 %14, true, !dbg !16224
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16213
  call void @llvm.dbg.value(metadata i1 %17, metadata !16212, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16213
  ret i1 %17, !dbg !16225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16226 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16230, metadata !DIExpression()), !dbg !16232
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16233
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16231, metadata !DIExpression()), !dbg !16232
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !16234
  br i1 %3, label %5, label %4, !dbg !16236

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !16237
  br label %5, !dbg !16239

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16230, metadata !DIExpression()), !dbg !16232
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16240
  ret i32 %6, !dbg !16241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16244, metadata !DIExpression()), !dbg !16246
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16247
  %3 = load i8, i8* %2, align 1, !dbg !16247
  call void @llvm.dbg.value(metadata i8 %3, metadata !16245, metadata !DIExpression()), !dbg !16246
  %4 = and i8 %3, 31, !dbg !16248
  %5 = icmp ne i8 %4, 0, !dbg !16249
  ret i1 %5, !dbg !16250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16253, metadata !DIExpression()), !dbg !16254
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16255
  br i1 %2, label %3, label %7, !dbg !16257

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()) #25, !dbg !16261
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16264
  %5 = load i8, i8* %4, align 1, !dbg !16265
  %6 = and i8 %5, 127, !dbg !16265
  store i8 %6, i8* %4, align 1, !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()) #25, !dbg !16269
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16273
  br label %7, !dbg !16274

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16275, metadata !DIExpression()) #25, !dbg !16278
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16280
  %9 = load i8, i8* %8, align 1, !dbg !16281
  %10 = or i8 %9, -128, !dbg !16281
  store i8 %10, i8* %8, align 1, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16282, metadata !DIExpression()) #25, !dbg !16285
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16289, metadata !DIExpression()) #25, !dbg !16297
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16295, metadata !DIExpression()) #25, !dbg !16297
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16299
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !16296, metadata !DIExpression()) #25, !dbg !16297
  %12 = icmp eq %struct._dnode* %11, null, !dbg !16301
  br i1 %12, label %23, label %13, !dbg !16299

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16296, metadata !DIExpression()) #25, !dbg !16297
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !16303
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !16296, metadata !DIExpression()) #25, !dbg !16297
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !16304
  %17 = icmp sgt i32 %16, 0, !dbg !16307
  br i1 %17, label %18, label %20, !dbg !16308

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16309
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !16311
  br label %25, !dbg !16312

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !16301
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16296, metadata !DIExpression()) #25, !dbg !16297
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16301
  br i1 %22, label %23, label %13, !dbg !16299, !llvm.loop !16313

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16315
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !16316
  br label %25, !dbg !16317

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16318
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !16319
  %28 = zext i1 %27 to i32, !dbg !16319
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !16320
  ret void, !dbg !16321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16324, metadata !DIExpression()), !dbg !16325
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !16326
  ret i1 %2, !dbg !16327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #9 !dbg !16328 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16330, metadata !DIExpression()), !dbg !16332
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16331, metadata !DIExpression()), !dbg !16332
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16333
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !16334
  ret void, !dbg !16335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16336 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16340, metadata !DIExpression()), !dbg !16341
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.213(%struct._dnode* noundef %0) #26, !dbg !16342
  br i1 %2, label %6, label %3, !dbg !16342

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16343
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16343
  br label %6, !dbg !16342

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16342
  ret %struct._dnode* %7, !dbg !16344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16345 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16349, metadata !DIExpression()), !dbg !16353
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16350, metadata !DIExpression()), !dbg !16353
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16354
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16354
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16351, metadata !DIExpression()), !dbg !16353
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16355
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16356
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16357
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16358
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16359
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16360
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16361
  ret void, !dbg !16362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !16363 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16367, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16368, metadata !DIExpression()), !dbg !16369
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16370
  br i1 %3, label %6, label %4, !dbg !16371

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !16372
  br label %6, !dbg !16371

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16371
  ret %struct._dnode* %7, !dbg !16373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16374 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16378, metadata !DIExpression()), !dbg !16381
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16379, metadata !DIExpression()), !dbg !16381
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16382
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16382
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16380, metadata !DIExpression()), !dbg !16381
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16383
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16384
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16385
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16386
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16387
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16388
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16389
  ret void, !dbg !16390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16393, metadata !DIExpression()), !dbg !16395
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16396
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16403, metadata !DIExpression()) #25, !dbg !16405
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16406
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16407
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16407
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16394, metadata !DIExpression()), !dbg !16395
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16408, metadata !DIExpression()) #25, !dbg !16414
  call void @llvm.dbg.value(metadata i32 %0, metadata !16413, metadata !DIExpression()) #25, !dbg !16414
  %6 = icmp eq i32 %0, 0, !dbg !16417
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16419
  br i1 %6, label %8, label %15, !dbg !16420

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16421
  br i1 %9, label %15, label %10, !dbg !16423

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16424
  br i1 %11, label %15, label %12, !dbg !16426

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16427
  %14 = icmp eq i32 %13, 0, !dbg !16427
  br i1 %14, label %18, label %15, !dbg !16429

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16430
  br i1 %16, label %18, label %17, !dbg !16433

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16434
  br label %18, !dbg !16436

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16419
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16419
  ret void, !dbg !16437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !16438 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16442, metadata !DIExpression()), !dbg !16445
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16443, metadata !DIExpression()), !dbg !16445
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %0) #26, !dbg !16446
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16444, metadata !DIExpression()), !dbg !16445
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16443, metadata !DIExpression()), !dbg !16445
  ret %struct.k_thread* %3, !dbg !16447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16448 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16450, metadata !DIExpression()), !dbg !16451
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16452
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16453
  %4 = xor i1 %3, true, !dbg !16454
  ret i1 %4, !dbg !16455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16458, metadata !DIExpression()), !dbg !16459
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16460
  %3 = load i16, i16* %2, align 2, !dbg !16460
  %4 = icmp ult i16 %3, 128, !dbg !16461
  %5 = zext i1 %4 to i32, !dbg !16461
  ret i32 %5, !dbg !16462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16463 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16469, metadata !DIExpression()), !dbg !16470
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16471
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16472
  %4 = xor i1 %3, true, !dbg !16473
  ret i1 %4, !dbg !16474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16475 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16481, metadata !DIExpression()), !dbg !16482
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16483
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16483
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16484
  ret i1 %4, !dbg !16485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !16486 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16488, metadata !DIExpression()), !dbg !16490
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16489, metadata !DIExpression()), !dbg !16490
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16491
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16491
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16492
  br i1 %5, label %9, label %6, !dbg !16493

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16494
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16494
  br label %9, !dbg !16493

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16493
  ret %struct._dnode* %10, !dbg !16495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.213(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !16496 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16500, metadata !DIExpression()), !dbg !16501
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16502
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16502
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16503
  ret i1 %4, !dbg !16504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16505 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16509, metadata !DIExpression()), !dbg !16512
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16513
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16513
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16510, metadata !DIExpression()), !dbg !16512
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16514
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16514
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16511, metadata !DIExpression()), !dbg !16512
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16515
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16516
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16517
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16518
  tail call fastcc void @sys_dnode_init.214(%struct._dnode* noundef %0) #26, !dbg !16519
  ret void, !dbg !16520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.214(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !16521 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16523, metadata !DIExpression()), !dbg !16524
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16525
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16526
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16527
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16528
  ret void, !dbg !16529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16534, metadata !DIExpression()), !dbg !16536
  call void @llvm.dbg.value(metadata i32 128, metadata !16535, metadata !DIExpression()), !dbg !16536
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16537
  %3 = load i8, i8* %2, align 1, !dbg !16537
  %4 = icmp slt i8 %3, 0, !dbg !16538
  ret i1 %4, !dbg !16539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.215(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16542, metadata !DIExpression()), !dbg !16544
  call void @llvm.dbg.value(metadata i32 %1, metadata !16543, metadata !DIExpression()), !dbg !16544
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.216(i32 noundef %0, i32 noundef %1) #26, !dbg !16545
  ret i1 %3, !dbg !16546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16549, metadata !DIExpression()), !dbg !16550
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16551
  ret i1 %2, !dbg !16552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.216(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16555, metadata !DIExpression()), !dbg !16557
  call void @llvm.dbg.value(metadata i32 %1, metadata !16556, metadata !DIExpression()), !dbg !16557
  %3 = icmp slt i32 %0, %1, !dbg !16558
  ret i1 %3, !dbg !16559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16562, metadata !DIExpression()), !dbg !16566
  call void @llvm.dbg.value(metadata i32 0, metadata !16563, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16568
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16570, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16570
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16572
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %3, metadata !16565, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !16563, metadata !DIExpression()), !dbg !16567
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16573
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !16578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16578
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !16580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16582, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !16563, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.value(metadata i32 undef, metadata !16563, metadata !DIExpression()), !dbg !16567
  ret void, !dbg !16583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16584 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16586, metadata !DIExpression()), !dbg !16587
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16588
  br i1 %2, label %24, label %3, !dbg !16590

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16591
  br i1 %4, label %5, label %24, !dbg !16592

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16275, metadata !DIExpression()) #25, !dbg !16593
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16596
  %7 = load i8, i8* %6, align 1, !dbg !16597
  %8 = or i8 %7, -128, !dbg !16597
  store i8 %8, i8* %6, align 1, !dbg !16597
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16282, metadata !DIExpression()) #25, !dbg !16598
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16289, metadata !DIExpression()) #25, !dbg !16600
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16295, metadata !DIExpression()) #25, !dbg !16600
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16602
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !16296, metadata !DIExpression()) #25, !dbg !16600
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16603
  br i1 %10, label %21, label %11, !dbg !16602

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16296, metadata !DIExpression()) #25, !dbg !16600
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16604
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16296, metadata !DIExpression()) #25, !dbg !16600
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16605
  %15 = icmp sgt i32 %14, 0, !dbg !16606
  br i1 %15, label %16, label %18, !dbg !16607

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16608
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16609
  br label %23, !dbg !16610

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16603
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !16296, metadata !DIExpression()) #25, !dbg !16600
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16603
  br i1 %20, label %21, label %11, !dbg !16602, !llvm.loop !16611

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16613
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16614
  br label %23, !dbg !16615

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16616
  br label %24, !dbg !16617

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16619 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16621, metadata !DIExpression()), !dbg !16622
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16623
  br i1 %2, label %6, label %3, !dbg !16624

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16625
  %5 = xor i1 %4, true, !dbg !16624
  br label %6, !dbg !16624

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16629, metadata !DIExpression()), !dbg !16633
  call void @llvm.dbg.value(metadata i32 0, metadata !16630, metadata !DIExpression()), !dbg !16634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16635
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16637, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !16639
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16639
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !16635
  call void @llvm.dbg.value(metadata i32 %3, metadata !16632, metadata !DIExpression()), !dbg !16634
  call void @llvm.dbg.value(metadata i32 undef, metadata !16630, metadata !DIExpression()), !dbg !16634
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16640
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !16643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16643
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !16645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16647, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !16630, metadata !DIExpression()), !dbg !16634
  call void @llvm.dbg.value(metadata i32 undef, metadata !16630, metadata !DIExpression()), !dbg !16634
  ret void, !dbg !16648
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16651, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16654
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16656, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16656
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !16658
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16658
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !16654
  call void @llvm.dbg.value(metadata i32 %3, metadata !16652, metadata !DIExpression()), !dbg !16653
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16659
  br i1 %4, label %5, label %6, !dbg !16661

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !16662
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16662
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !16665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16667, !srcloc !16130
  br label %8, !dbg !16668

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.221(%struct.k_thread* noundef %0) #26, !dbg !16669
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16670
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16671
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16671
  br label %8, !dbg !16672

8:                                                ; preds = %6, %5
  ret void, !dbg !16672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16675, metadata !DIExpression()), !dbg !16676
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16677
  %3 = load i8, i8* %2, align 1, !dbg !16677
  %4 = and i8 %3, 4, !dbg !16678
  %5 = icmp eq i8 %4, 0, !dbg !16679
  ret i1 %5, !dbg !16680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.221(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16683, metadata !DIExpression()), !dbg !16684
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16685
  %3 = load i8, i8* %2, align 1, !dbg !16686
  %4 = and i8 %3, -5, !dbg !16686
  store i8 %4, i8* %2, align 1, !dbg !16686
  ret void, !dbg !16687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16688 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16691, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16690, metadata !DIExpression()), !dbg !16692
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16693
  br i1 %4, label %5, label %9, !dbg !16695

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16696
  br i1 %6, label %7, label %9, !dbg !16697

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16698, metadata !DIExpression()) #25, !dbg !16704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16703, metadata !DIExpression()) #25, !dbg !16704
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16707
  br label %10, !dbg !16708

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !16709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16709
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !16712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16714, !srcloc !16130
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16720, metadata !DIExpression()), !dbg !16721
  call void @llvm.dbg.value(metadata i32 %0, metadata !16722, metadata !DIExpression()), !dbg !16727
  %2 = icmp eq i32 %0, 0, !dbg !16729
  br i1 %2, label %3, label %6, !dbg !16730

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16731, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 %4, metadata !16734, metadata !DIExpression()) #25, !dbg !16739
  %5 = icmp eq i32 %4, 0, !dbg !16740
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16721
  ret i1 %7, !dbg !16741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !16742 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16744, metadata !DIExpression()), !dbg !16746
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16747
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16748
  ret i1 %3, !dbg !16749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16752, metadata !DIExpression()), !dbg !16754
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16755
  call void @llvm.dbg.value(metadata i32 %2, metadata !16753, metadata !DIExpression()), !dbg !16754
  ret i32 %2, !dbg !16756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16759, metadata !DIExpression()), !dbg !16763
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16764
  call void @llvm.dbg.value(metadata i32 0, metadata !16760, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16766
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16768, !srcloc !16104
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %4, metadata !16101, metadata !DIExpression()) #25, !dbg !16770
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16770
  call void @llvm.dbg.value(metadata i32 %4, metadata !16095, metadata !DIExpression()) #25, !dbg !16766
  call void @llvm.dbg.value(metadata i32 %4, metadata !16762, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()), !dbg !16765
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16771
  br i1 %5, label %6, label %10, !dbg !16775

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()) #25, !dbg !16776
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16779
  %8 = load i8, i8* %7, align 1, !dbg !16780
  %9 = and i8 %8, 127, !dbg !16780
  store i8 %9, i8* %7, align 1, !dbg !16780
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()) #25, !dbg !16781
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16783
  br label %10, !dbg !16784

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16785
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16786
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16787
  %13 = zext i1 %12 to i32, !dbg !16787
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16788
  call void @llvm.dbg.value(metadata i32 %4, metadata !16116, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 %4, metadata !16124, metadata !DIExpression()) #25, !dbg !16791
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16793, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !16760, metadata !DIExpression()), !dbg !16765
  call void @llvm.dbg.value(metadata i32 undef, metadata !16760, metadata !DIExpression()), !dbg !16765
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16794
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16796
  br i1 %15, label %16, label %17, !dbg !16797

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16798
  br label %17, !dbg !16800

17:                                               ; preds = %16, %10
  ret void, !dbg !16801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16802 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16804, metadata !DIExpression()), !dbg !16805
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16806
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16807
  ret i32 %3, !dbg !16808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16809 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16811, metadata !DIExpression()), !dbg !16812
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16813
  %3 = load i8, i8* %2, align 1, !dbg !16814
  %4 = or i8 %3, 16, !dbg !16814
  store i8 %4, i8* %2, align 1, !dbg !16814
  ret void, !dbg !16815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16816 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16817, !srcloc !16104
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16817
  call void @llvm.dbg.value(metadata i32 %2, metadata !16101, metadata !DIExpression()) #25, !dbg !16819
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16819
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16820
  ret void, !dbg !16821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16824, metadata !DIExpression()), !dbg !16825
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16826
  br i1 %2, label %3, label %5, !dbg !16828

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16829
  br label %6, !dbg !16831

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16124, metadata !DIExpression()) #25, !dbg !16832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16835, !srcloc !16130
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16837 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16839, metadata !DIExpression()), !dbg !16841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16842
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16844, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16844
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !16846
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16846
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !16842
  call void @llvm.dbg.value(metadata i32 %3, metadata !16840, metadata !DIExpression()), !dbg !16841
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16847
  br i1 %4, label %6, label %5, !dbg !16849

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !16850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16850
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !16853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16855, !srcloc !16130
  br label %8, !dbg !16856

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16857
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16858
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16859
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16859
  br label %8, !dbg !16860

8:                                                ; preds = %6, %5
  ret void, !dbg !16860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !16861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16863, metadata !DIExpression()), !dbg !16864
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16865
  %3 = load i8, i8* %2, align 1, !dbg !16865
  %4 = and i8 %3, 16, !dbg !16866
  %5 = icmp ne i8 %4, 0, !dbg !16867
  ret i1 %5, !dbg !16868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !16869 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16871, metadata !DIExpression()), !dbg !16872
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16873
  %3 = load i8, i8* %2, align 1, !dbg !16874
  %4 = and i8 %3, -17, !dbg !16874
  store i8 %4, i8* %2, align 1, !dbg !16874
  ret void, !dbg !16875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16876 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16886, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16884, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16885, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.value(metadata i32 0, metadata !16887, metadata !DIExpression()), !dbg !16891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16892
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16894, !srcloc !16104
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16894
  call void @llvm.dbg.value(metadata i32 %5, metadata !16101, metadata !DIExpression()) #25, !dbg !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16896
  call void @llvm.dbg.value(metadata i32 %5, metadata !16095, metadata !DIExpression()) #25, !dbg !16892
  call void @llvm.dbg.value(metadata i32 %5, metadata !16889, metadata !DIExpression()), !dbg !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()), !dbg !16891
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !16897
  call void @llvm.dbg.value(metadata i32 %5, metadata !16116, metadata !DIExpression()) #25, !dbg !16900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !16900
  call void @llvm.dbg.value(metadata i32 %5, metadata !16124, metadata !DIExpression()) #25, !dbg !16902
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16904, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !16887, metadata !DIExpression()), !dbg !16891
  call void @llvm.dbg.value(metadata i32 undef, metadata !16887, metadata !DIExpression()), !dbg !16891
  ret void, !dbg !16905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16906 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16910, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16908, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16909, metadata !DIExpression()), !dbg !16911
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !16912
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16913
  ret void, !dbg !16914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16919, metadata !DIExpression()), !dbg !16921
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16920, metadata !DIExpression()), !dbg !16921
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16922
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16923
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16924
  br i1 %3, label %21, label %4, !dbg !16926

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16927
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16929
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16930
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16289, metadata !DIExpression()) #25, !dbg !16931
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16295, metadata !DIExpression()) #25, !dbg !16931
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef nonnull %6) #27, !dbg !16933
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16296, metadata !DIExpression()) #25, !dbg !16931
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16934
  br i1 %8, label %19, label %9, !dbg !16933

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16296, metadata !DIExpression()) #25, !dbg !16931
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16935
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !16296, metadata !DIExpression()) #25, !dbg !16931
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16936
  %13 = icmp sgt i32 %12, 0, !dbg !16937
  br i1 %13, label %14, label %16, !dbg !16938

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16939
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16940
  br label %21, !dbg !16941

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16934
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16296, metadata !DIExpression()) #25, !dbg !16931
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16934
  br i1 %18, label %19, label %9, !dbg !16933, !llvm.loop !16942

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16944
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16945
  br label %21, !dbg !16946

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16948 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16953, metadata !DIExpression()), !dbg !16954
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16952, metadata !DIExpression()), !dbg !16954
  %4 = icmp eq i64 %3, -1, !dbg !16955
  br i1 %4, label %6, label %5, !dbg !16957

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.224(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16958
  br label %6, !dbg !16960

6:                                                ; preds = %5, %2
  ret void, !dbg !16961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.224(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16962 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16965, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16964, metadata !DIExpression()), !dbg !16966
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16967
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16968
  ret void, !dbg !16969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16972, metadata !DIExpression()), !dbg !16980
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16981
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16981
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16973, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i32 0, metadata !16974, metadata !DIExpression()), !dbg !16982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !16983
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16985, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()), !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16974, metadata !DIExpression()), !dbg !16982
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16988
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16989
  %7 = load i8, i8* %6, align 1, !dbg !16989
  %8 = and i8 %7, 40, !dbg !16990
  %9 = icmp eq i8 %8, 0, !dbg !16990
  call void @llvm.dbg.value(metadata i1 %9, metadata !16977, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16991
  br i1 %9, label %10, label %17, !dbg !16992

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16993
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !16993
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !16993
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !16997
  br i1 %14, label %16, label %15, !dbg !16998

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16999
  br label %16, !dbg !17001

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.221(%struct.k_thread* noundef nonnull %3) #26, !dbg !17002
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !17003
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !17004
  br label %17, !dbg !17005

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16985
  call void @llvm.dbg.value(metadata i32 %18, metadata !16101, metadata !DIExpression()) #25, !dbg !16987
  call void @llvm.dbg.value(metadata i32 %18, metadata !16095, metadata !DIExpression()) #25, !dbg !16983
  call void @llvm.dbg.value(metadata i32 %18, metadata !16976, metadata !DIExpression()), !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()) #25, !dbg !17006
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17006
  call void @llvm.dbg.value(metadata i32 undef, metadata !16124, metadata !DIExpression()) #25, !dbg !17008
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !17010, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !16974, metadata !DIExpression()), !dbg !16982
  call void @llvm.dbg.value(metadata i32 undef, metadata !16974, metadata !DIExpression()), !dbg !16982
  ret void, !dbg !17011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17014, metadata !DIExpression()), !dbg !17015
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17016
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !17017
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17018
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !17019
  ret void, !dbg !17020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17023, metadata !DIExpression()), !dbg !17024
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17025
  %3 = load i8, i8* %2, align 1, !dbg !17026
  %4 = and i8 %3, -3, !dbg !17026
  store i8 %4, i8* %2, align 1, !dbg !17026
  ret void, !dbg !17027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17030, metadata !DIExpression()), !dbg !17031
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !17032
  br i1 %2, label %3, label %7, !dbg !17034

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()) #25, !dbg !17035
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17038
  %5 = load i8, i8* %4, align 1, !dbg !17039
  %6 = and i8 %5, 127, !dbg !17039
  store i8 %6, i8* %4, align 1, !dbg !17039
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()) #25, !dbg !17040
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17042
  br label %7, !dbg !17043

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17044
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17045
  %10 = zext i1 %9 to i32, !dbg !17045
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !17046
  ret void, !dbg !17047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17048 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17050, metadata !DIExpression()), !dbg !17051
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17052
  %3 = load i8, i8* %2, align 1, !dbg !17053
  %4 = or i8 %3, 2, !dbg !17053
  store i8 %4, i8* %2, align 1, !dbg !17053
  ret void, !dbg !17054
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !17055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17057, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata i32 0, metadata !17058, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17063
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17065, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17065
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !17067
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17067
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !17063
  call void @llvm.dbg.value(metadata i32 %3, metadata !17060, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i32 undef, metadata !17058, metadata !DIExpression()), !dbg !17062
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !17068
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !17071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17071
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !17073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17075, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !17058, metadata !DIExpression()), !dbg !17062
  call void @llvm.dbg.value(metadata i32 undef, metadata !17058, metadata !DIExpression()), !dbg !17062
  ret void, !dbg !17076
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17077 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17083, metadata !DIExpression()), !dbg !17088
  call void @llvm.dbg.value(metadata i32 %0, metadata !17081, metadata !DIExpression()), !dbg !17088
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17082, metadata !DIExpression()), !dbg !17088
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17089
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !17090
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17091
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17092
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !17093
  call void @llvm.dbg.value(metadata i32 %6, metadata !17084, metadata !DIExpression()), !dbg !17088
  call void @llvm.dbg.value(metadata i32 0, metadata !17085, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17095
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17097, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !17099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !17095
  call void @llvm.dbg.value(metadata i32 undef, metadata !17087, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()), !dbg !17094
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17100
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17104
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !17105
  br i1 %10, label %11, label %12, !dbg !17106

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17107
  br label %12, !dbg !17109

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !17097
  call void @llvm.dbg.value(metadata i32 %13, metadata !16101, metadata !DIExpression()) #25, !dbg !17099
  call void @llvm.dbg.value(metadata i32 %13, metadata !16095, metadata !DIExpression()) #25, !dbg !17095
  call void @llvm.dbg.value(metadata i32 %13, metadata !17087, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()) #25, !dbg !17110
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17110
  call void @llvm.dbg.value(metadata i32 undef, metadata !16124, metadata !DIExpression()) #25, !dbg !17112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !17114, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !17085, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 undef, metadata !17085, metadata !DIExpression()), !dbg !17094
  ret i32 %6, !dbg !17115
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17116 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17121, metadata !DIExpression()), !dbg !17124
  call void @llvm.dbg.value(metadata i64 undef, metadata !17123, metadata !DIExpression()), !dbg !17124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17120, metadata !DIExpression()), !dbg !17124
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17122, metadata !DIExpression()), !dbg !17124
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17125
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17127
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17129, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !17131
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17131
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !17127
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17132
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !17133
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16698, metadata !DIExpression()) #25, !dbg !17134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16703, metadata !DIExpression()) #25, !dbg !17134
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !17136
  ret i32 %9, !dbg !17137
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17138 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17142, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17143, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata i32 0, metadata !17144, metadata !DIExpression()), !dbg !17148
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17149
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17151, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !17153
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17153
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !17149
  call void @llvm.dbg.value(metadata i32 undef, metadata !17146, metadata !DIExpression()), !dbg !17148
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17143, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !17144, metadata !DIExpression()), !dbg !17148
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17143, metadata !DIExpression()), !dbg !17147
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !17157
  br i1 %5, label %7, label %6, !dbg !17159

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !17160
  br label %7, !dbg !17162

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17151
  call void @llvm.dbg.value(metadata i32 %8, metadata !16101, metadata !DIExpression()) #25, !dbg !17153
  call void @llvm.dbg.value(metadata i32 %8, metadata !16095, metadata !DIExpression()) #25, !dbg !17149
  call void @llvm.dbg.value(metadata i32 %8, metadata !17146, metadata !DIExpression()), !dbg !17148
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()) #25, !dbg !17163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16124, metadata !DIExpression()) #25, !dbg !17165
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17167, !srcloc !16130
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17143, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !17144, metadata !DIExpression()), !dbg !17148
  ret %struct.k_thread* %4, !dbg !17168
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17169 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17171, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17172, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i32 0, metadata !17173, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17178
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17180, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !17175, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17172, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !17173, metadata !DIExpression()), !dbg !17177
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !17183
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17172, metadata !DIExpression()), !dbg !17176
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !17186
  br i1 %5, label %8, label %6, !dbg !17188

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !17189
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !17191
  br label %8, !dbg !17192

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17180
  call void @llvm.dbg.value(metadata i32 %9, metadata !16101, metadata !DIExpression()) #25, !dbg !17182
  call void @llvm.dbg.value(metadata i32 %9, metadata !16095, metadata !DIExpression()) #25, !dbg !17178
  call void @llvm.dbg.value(metadata i32 %9, metadata !17175, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()) #25, !dbg !17193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !16124, metadata !DIExpression()) #25, !dbg !17195
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17197, !srcloc !16130
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17172, metadata !DIExpression()), !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !17173, metadata !DIExpression()), !dbg !17177
  ret %struct.k_thread* %4, !dbg !17198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17199 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17201, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17057, metadata !DIExpression()) #25, !dbg !17203
  call void @llvm.dbg.value(metadata i32 0, metadata !17058, metadata !DIExpression()) #25, !dbg !17205
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17206
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17208, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17208
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !17210
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17210
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !17206
  call void @llvm.dbg.value(metadata i32 %3, metadata !17060, metadata !DIExpression()) #25, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17058, metadata !DIExpression()) #25, !dbg !17205
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17211
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !17212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17212
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !17214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17216, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !17058, metadata !DIExpression()) #25, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17058, metadata !DIExpression()) #25, !dbg !17205
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17217
  ret void, !dbg !17218
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17221, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i32 %1, metadata !17222, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i8 0, metadata !17223, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i32 0, metadata !17224, metadata !DIExpression()), !dbg !17228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17229
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17231, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !17229
  call void @llvm.dbg.value(metadata i32 undef, metadata !17226, metadata !DIExpression()), !dbg !17228
  call void @llvm.dbg.value(metadata i8 poison, metadata !17223, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i32 undef, metadata !17224, metadata !DIExpression()), !dbg !17228
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !17234
  call void @llvm.dbg.value(metadata i1 %6, metadata !17223, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17227
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !17237

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()) #25, !dbg !17238
  %11 = load i8, i8* %4, align 1, !dbg !17244
  %12 = and i8 %11, 127, !dbg !17244
  store i8 %12, i8* %4, align 1, !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()) #25, !dbg !17245
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17247
  store i8 %9, i8* %8, align 2, !dbg !17248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16275, metadata !DIExpression()) #25, !dbg !17249
  %13 = load i8, i8* %4, align 1, !dbg !17251
  %14 = or i8 %13, -128, !dbg !17251
  store i8 %14, i8* %4, align 1, !dbg !17251
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16282, metadata !DIExpression()) #25, !dbg !17252
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16289, metadata !DIExpression()) #25, !dbg !17254
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16295, metadata !DIExpression()) #25, !dbg !17254
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17256
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16296, metadata !DIExpression()) #25, !dbg !17254
  %16 = icmp eq %struct._dnode* %15, null, !dbg !17257
  br i1 %16, label %26, label %17, !dbg !17256

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !16296, metadata !DIExpression()) #25, !dbg !17254
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !17258
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !16296, metadata !DIExpression()) #25, !dbg !17254
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !17259
  %21 = icmp sgt i32 %20, 0, !dbg !17260
  br i1 %21, label %22, label %23, !dbg !17261

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !17262
  br label %27, !dbg !17263

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !17257
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16296, metadata !DIExpression()) #25, !dbg !17254
  %25 = icmp eq %struct._dnode* %24, null, !dbg !17257
  br i1 %25, label %26, label %17, !dbg !17256, !llvm.loop !17264

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !17266
  br label %27, !dbg !17267

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17268
  br label %29, !dbg !17269

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !17270
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !17231
  call void @llvm.dbg.value(metadata i32 %30, metadata !16101, metadata !DIExpression()) #25, !dbg !17233
  call void @llvm.dbg.value(metadata i32 %30, metadata !16095, metadata !DIExpression()) #25, !dbg !17229
  call void @llvm.dbg.value(metadata i32 %30, metadata !17226, metadata !DIExpression()), !dbg !17228
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()) #25, !dbg !17272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16124, metadata !DIExpression()) #25, !dbg !17274
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !17276, !srcloc !16130
  call void @llvm.dbg.value(metadata i8 poison, metadata !17223, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i32 undef, metadata !17224, metadata !DIExpression()), !dbg !17228
  ret i1 %6, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17282, metadata !DIExpression()), !dbg !17285
  call void @llvm.dbg.value(metadata i32 %1, metadata !17283, metadata !DIExpression()), !dbg !17285
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17286
  call void @llvm.dbg.value(metadata i1 %3, metadata !17284, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17285
  br i1 %3, label %4, label %12, !dbg !17287

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17289
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17290
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17290
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17290
  %9 = load i8, i8* %8, align 1, !dbg !17290
  %10 = icmp eq i8 %9, 0, !dbg !17291
  br i1 %10, label %11, label %12, !dbg !17292

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17293
  br label %12, !dbg !17295

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17297 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17299, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17303
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17305, !srcloc !16104
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17305
  call void @llvm.dbg.value(metadata i32 %2, metadata !16101, metadata !DIExpression()) #25, !dbg !17307
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17307
  call void @llvm.dbg.value(metadata i32 %2, metadata !16095, metadata !DIExpression()) #25, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %2, metadata !17301, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !17299, metadata !DIExpression()), !dbg !17302
  tail call fastcc void @z_sched_lock() #26, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %2, metadata !16116, metadata !DIExpression()) #25, !dbg !17311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17311
  call void @llvm.dbg.value(metadata i32 %2, metadata !16124, metadata !DIExpression()) #25, !dbg !17313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17315, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !17299, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !17299, metadata !DIExpression()), !dbg !17302
  ret void, !dbg !17316
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17317 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17318
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !17319
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !17319
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !17319
  %5 = load i8, i8* %4, align 1, !dbg !17320
  %6 = add i8 %5, -1, !dbg !17320
  store i8 %6, i8* %4, align 1, !dbg !17320
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17321, !srcloc !17323
  ret void, !dbg !17324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17325 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17327, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17331
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17333, !srcloc !16104
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %2, metadata !16101, metadata !DIExpression()) #25, !dbg !17335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17335
  call void @llvm.dbg.value(metadata i32 %2, metadata !16095, metadata !DIExpression()) #25, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %2, metadata !17329, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17327, metadata !DIExpression()), !dbg !17330
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17336
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !17339
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !17339
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !17339
  %7 = load i8, i8* %6, align 1, !dbg !17340
  %8 = add i8 %7, 1, !dbg !17340
  store i8 %8, i8* %6, align 1, !dbg !17340
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !17341
  call void @llvm.dbg.value(metadata i32 %2, metadata !16116, metadata !DIExpression()) #25, !dbg !17342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17342
  call void @llvm.dbg.value(metadata i32 %2, metadata !16124, metadata !DIExpression()) #25, !dbg !17344
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !17346, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 1, metadata !17327, metadata !DIExpression()), !dbg !17330
  call void @llvm.dbg.value(metadata i32 undef, metadata !17327, metadata !DIExpression()), !dbg !17330
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17347
  ret void, !dbg !17348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !17349 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17350
  ret %struct.k_thread* %1, !dbg !17351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !17352 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17356, metadata !DIExpression()), !dbg !17361
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17357, metadata !DIExpression()), !dbg !17361
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17362
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17358, metadata !DIExpression()), !dbg !17361
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17363
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17359, metadata !DIExpression()), !dbg !17361
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !17364
  call void @llvm.dbg.value(metadata i32 %5, metadata !17360, metadata !DIExpression()), !dbg !17361
  %6 = icmp sgt i32 %5, 0, !dbg !17365
  br i1 %6, label %17, label %7, !dbg !17367

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17368
  br i1 %8, label %17, label %9, !dbg !17370

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17371
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17371
  %12 = load i32, i32* %11, align 8, !dbg !17371
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17373
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17373
  %15 = load i32, i32* %14, align 8, !dbg !17373
  %16 = icmp ult i32 %12, %15, !dbg !17374
  br label %17, !dbg !17375

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17376
  ret i1 %18, !dbg !17377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17378 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17395, metadata !DIExpression()), !dbg !17410
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17396, metadata !DIExpression()), !dbg !17410
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17411
  %5 = load i32, i32* %4, align 4, !dbg !17412
  %6 = add nsw i32 %5, 1, !dbg !17412
  store i32 %6, i32* %4, align 4, !dbg !17412
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17413
  store i32 %5, i32* %7, align 8, !dbg !17414
  %8 = load i32, i32* %4, align 4, !dbg !17415
  %9 = icmp eq i32 %8, 0, !dbg !17416
  br i1 %9, label %10, label %32, !dbg !17417

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17418
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17418
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17398, metadata !DIExpression()), !dbg !17418
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17418
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17418
  %14 = load i32, i32* %13, align 4, !dbg !17418
  %15 = shl i32 %14, 2, !dbg !17418
  %16 = alloca i8, i32 %15, align 8, !dbg !17418
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17418
  store i8* %16, i8** %17, align 4, !dbg !17418
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17418
  %19 = alloca i8, i32 %14, align 8, !dbg !17418
  store i8* %19, i8** %18, align 4, !dbg !17418
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17418
  store i32 -1, i32* %20, align 4, !dbg !17418
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17419
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17407, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17397, metadata !DIExpression()), !dbg !17410
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17421
  br i1 %22, label %23, label %24, !dbg !17418

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17421
  br label %32, !dbg !17422

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17397, metadata !DIExpression()), !dbg !17410
  %26 = load i32, i32* %4, align 4, !dbg !17423
  %27 = add nsw i32 %26, 1, !dbg !17423
  store i32 %27, i32* %4, align 4, !dbg !17423
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17425
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17425
  store i32 %26, i32* %29, align 8, !dbg !17426
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17419
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17407, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17397, metadata !DIExpression()), !dbg !17410
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17421
  br i1 %31, label %23, label %24, !dbg !17418, !llvm.loop !17427

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17429
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17430
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17431
  ret void, !dbg !17432
}

; Function Attrs: optsize
declare !dbg !17433 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17438 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17441 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17443, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17444, metadata !DIExpression()), !dbg !17445
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17446
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17447
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17448
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17449
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17449
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17451
  br i1 %7, label %8, label %10, !dbg !17452

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17453
  store i32 0, i32* %9, align 4, !dbg !17455
  br label %10, !dbg !17456

10:                                               ; preds = %8, %2
  ret void, !dbg !17457
}

; Function Attrs: optsize
declare !dbg !17458 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17459 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17463, metadata !DIExpression()), !dbg !17466
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17464, metadata !DIExpression()), !dbg !17466
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17467
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17468
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17465, metadata !DIExpression()), !dbg !17466
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17464, metadata !DIExpression()), !dbg !17466
  ret %struct.k_thread* %4, !dbg !17469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17470 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17474, metadata !DIExpression()), !dbg !17475
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17476
  ret %struct.rbnode* %2, !dbg !17477
}

; Function Attrs: optsize
declare !dbg !17478 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !17481 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17493, metadata !DIExpression()), !dbg !17497
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17498
  %3 = load i32, i32* %2, align 4, !dbg !17498
  %4 = icmp eq i32 %3, 0, !dbg !17500
  br i1 %4, label %10, label %5, !dbg !17501

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17494, metadata !DIExpression()), !dbg !17497
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17502, !range !5055
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17503
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17495, metadata !DIExpression()), !dbg !17497
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %7) #26, !dbg !17504
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17496, metadata !DIExpression()), !dbg !17497
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17494, metadata !DIExpression()), !dbg !17497
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17497
  ret %struct.k_thread* %11, !dbg !17505
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17506 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17510, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i32 0, metadata !17511, metadata !DIExpression()), !dbg !17513
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !17514
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17512, metadata !DIExpression()), !dbg !17513
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17515
  br i1 %3, label %8, label %4, !dbg !17516

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17517
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17519
  call void @llvm.dbg.value(metadata i32 1, metadata !17511, metadata !DIExpression()), !dbg !17513
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !17514
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17512, metadata !DIExpression()), !dbg !17513
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17515
  br i1 %7, label %8, label %4, !dbg !17516, !llvm.loop !17520

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17513
  ret i32 %9, !dbg !17522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef readonly %0) unnamed_addr #4 !dbg !17523 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17525, metadata !DIExpression()), !dbg !17526
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17527
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef %2) #26, !dbg !17528
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17529
  ret %struct.k_thread* %4, !dbg !17530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #8 !dbg !17531 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17540, metadata !DIExpression()), !dbg !17541
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17542
  tail call fastcc void @sys_dlist_init.238(%struct._dnode* noundef nonnull %2) #26, !dbg !17543
  ret void, !dbg !17544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.238(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !17545 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17549, metadata !DIExpression()), !dbg !17550
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17551
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17552
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17553
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17554
  ret void, !dbg !17555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17556 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17557
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17558
  ret void, !dbg !17559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !17560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17565, metadata !DIExpression()), !dbg !17566
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17567
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17567
  %4 = load i8, i8* %3, align 2, !dbg !17567
  %5 = sext i8 %4 to i32, !dbg !17568
  ret i32 %5, !dbg !17569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17574, metadata !DIExpression()), !dbg !17577
  call void @llvm.dbg.value(metadata i32 %1, metadata !17575, metadata !DIExpression()), !dbg !17577
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17576, metadata !DIExpression()), !dbg !17577
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17578
  ret void, !dbg !17579
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17580 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17581
  br i1 %1, label %8, label %2, !dbg !17582

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17583
  br i1 %3, label %8, label %4, !dbg !17584

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17585
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17586
  %7 = xor i1 %6, true, !dbg !17584
  br label %8, !dbg !17584

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !17588 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17589, !range !7720
  %2 = icmp eq i8 %1, 0, !dbg !17589
  ret i1 %2, !dbg !17590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17591 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17594
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17596, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !17598
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17598
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !17594
  call void @llvm.dbg.value(metadata i32 undef, metadata !17593, metadata !DIExpression()), !dbg !17599
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17600
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16258, metadata !DIExpression()) #25, !dbg !17603
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17605
  %4 = load i8, i8* %3, align 1, !dbg !17606
  %5 = and i8 %4, 127, !dbg !17606
  store i8 %5, i8* %3, align 1, !dbg !17606
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16266, metadata !DIExpression()) #25, !dbg !17607
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17609
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17610
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16275, metadata !DIExpression()) #25, !dbg !17611
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17613
  %8 = load i8, i8* %7, align 1, !dbg !17614
  %9 = or i8 %8, -128, !dbg !17614
  store i8 %9, i8* %7, align 1, !dbg !17614
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16282, metadata !DIExpression()) #25, !dbg !17615
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16289, metadata !DIExpression()) #25, !dbg !17617
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16295, metadata !DIExpression()) #25, !dbg !17617
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.212(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17619
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16296, metadata !DIExpression()) #25, !dbg !17617
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17620
  br i1 %11, label %22, label %12, !dbg !17619

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16296, metadata !DIExpression()) #25, !dbg !17617
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17621
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16296, metadata !DIExpression()) #25, !dbg !17617
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17622
  %16 = icmp sgt i32 %15, 0, !dbg !17623
  br i1 %16, label %17, label %19, !dbg !17624

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17625
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17626
  br label %24, !dbg !17627

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17620
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16296, metadata !DIExpression()) #25, !dbg !17617
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17620
  br i1 %21, label %22, label %12, !dbg !17619, !llvm.loop !17628

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17630
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17631
  br label %24, !dbg !17632

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17596
  call void @llvm.dbg.value(metadata i32 %25, metadata !16101, metadata !DIExpression()) #25, !dbg !17598
  call void @llvm.dbg.value(metadata i32 %25, metadata !16095, metadata !DIExpression()) #25, !dbg !17594
  call void @llvm.dbg.value(metadata i32 %25, metadata !17593, metadata !DIExpression()), !dbg !17599
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17633
  call void @llvm.dbg.value(metadata i32 undef, metadata !16698, metadata !DIExpression()) #25, !dbg !17634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16703, metadata !DIExpression()) #25, !dbg !17634
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17636
  ret void, !dbg !17637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17638 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17642, metadata !DIExpression()), !dbg !17645
  %3 = icmp eq i64 %2, -1, !dbg !17646
  br i1 %3, label %4, label %6, !dbg !17648

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17649
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17651
  br label %11, !dbg !17652

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17643, metadata !DIExpression()), !dbg !17645
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17653
  %8 = sext i32 %7 to i64, !dbg !17653
  call void @llvm.dbg.value(metadata i64 %8, metadata !17643, metadata !DIExpression()), !dbg !17645
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64.241(i64 noundef %8) #26, !dbg !17654
  %10 = trunc i64 %9 to i32, !dbg !17654
  call void @llvm.dbg.value(metadata i32 %10, metadata !17644, metadata !DIExpression()), !dbg !17645
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17645
  ret i32 %12, !dbg !17655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17660, metadata !DIExpression()), !dbg !17661
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17662, !srcloc !17664
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17665
  ret void, !dbg !17666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17667 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17671, metadata !DIExpression()), !dbg !17675
  %2 = icmp eq i64 %0, 0, !dbg !17676
  br i1 %2, label %3, label %4, !dbg !17678

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17679
  br label %29, !dbg !17681

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17673, metadata !DIExpression()), !dbg !17675
  %5 = icmp sgt i64 %0, -3, !dbg !17682
  br i1 %5, label %6, label %10, !dbg !17684

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17685
  %8 = trunc i64 %0 to i32, !dbg !17687
  %9 = add i32 %7, %8, !dbg !17687
  call void @llvm.dbg.value(metadata i32 %9, metadata !17672, metadata !DIExpression()), !dbg !17675
  br label %13, !dbg !17688

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17689
  %12 = sub i32 -2, %11, !dbg !17689
  call void @llvm.dbg.value(metadata i32 %12, metadata !17672, metadata !DIExpression()), !dbg !17675
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17691
  call void @llvm.dbg.value(metadata i32 %14, metadata !17672, metadata !DIExpression()), !dbg !17675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17692
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17694, !srcloc !16104
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17694
  call void @llvm.dbg.value(metadata i32 %16, metadata !16101, metadata !DIExpression()) #25, !dbg !17696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17696
  call void @llvm.dbg.value(metadata i32 %16, metadata !16095, metadata !DIExpression()) #25, !dbg !17692
  call void @llvm.dbg.value(metadata i32 %16, metadata !17674, metadata !DIExpression()), !dbg !17675
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17697
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17698
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17699
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17700
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17701
  tail call fastcc void @z_add_thread_timeout.224(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17701
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17702
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17703
  call void @llvm.dbg.value(metadata i32 %16, metadata !16698, metadata !DIExpression()) #25, !dbg !17704
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16703, metadata !DIExpression()) #25, !dbg !17704
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17706
  %22 = zext i32 %14 to i64, !dbg !17707
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17708
  %24 = zext i32 %23 to i64, !dbg !17708
  %25 = sub nsw i64 %22, %24, !dbg !17709
  call void @llvm.dbg.value(metadata i64 %25, metadata !17671, metadata !DIExpression()), !dbg !17675
  %26 = icmp sgt i64 %25, 0, !dbg !17710
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17710
  %28 = trunc i64 %27 to i32, !dbg !17710
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17675
  ret i32 %30, !dbg !17711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.241(i64 noundef %0) unnamed_addr #5 !dbg !17712 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17714, metadata !DIExpression()), !dbg !17715
  call void @llvm.dbg.value(metadata i64 %0, metadata !16136, metadata !DIExpression()), !dbg !17716
  call void @llvm.dbg.value(metadata i32 10000, metadata !16139, metadata !DIExpression()), !dbg !17716
  call void @llvm.dbg.value(metadata i32 1000, metadata !16140, metadata !DIExpression()), !dbg !17716
  call void @llvm.dbg.value(metadata i8 1, metadata !16141, metadata !DIExpression()), !dbg !17716
  call void @llvm.dbg.value(metadata i1 false, metadata !16142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17716
  call void @llvm.dbg.value(metadata i1 false, metadata !16143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17716
  call void @llvm.dbg.value(metadata i8 0, metadata !16144, metadata !DIExpression()), !dbg !17716
  call void @llvm.dbg.value(metadata i1 false, metadata !16145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17716
  call void @llvm.dbg.value(metadata i1 true, metadata !16146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17716
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !17716
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !17716
  call void @llvm.dbg.value(metadata i64 %0, metadata !16136, metadata !DIExpression()), !dbg !17716
  %2 = udiv i64 %0, 10, !dbg !17718
  ret i64 %2, !dbg !17722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17723 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17724, !srcloc !17726
  tail call void @z_impl_k_yield() #26, !dbg !17727
  ret void, !dbg !17728
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17733, metadata !DIExpression()), !dbg !17735
  %2 = sext i32 %0 to i64, !dbg !17736
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17737
  call void @llvm.dbg.value(metadata i64 %3, metadata !17734, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17735
  %4 = shl i64 %3, 32, !dbg !17738
  %5 = ashr exact i64 %4, 32, !dbg !17738
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17739
  call void @llvm.dbg.value(metadata i32 %6, metadata !17734, metadata !DIExpression()), !dbg !17735
  %7 = sext i32 %6 to i64, !dbg !17740
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17741
  %9 = trunc i64 %8 to i32, !dbg !17741
  ret i32 %9, !dbg !17742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17743 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17745, metadata !DIExpression()), !dbg !17746
  call void @llvm.dbg.value(metadata i64 %0, metadata !16136, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16139, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i32 10000, metadata !16140, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i8 1, metadata !16141, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i1 false, metadata !16142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17747
  call void @llvm.dbg.value(metadata i1 true, metadata !16143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17747
  call void @llvm.dbg.value(metadata i8 0, metadata !16144, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i1 false, metadata !16145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17747
  call void @llvm.dbg.value(metadata i1 true, metadata !16146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17747
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !17747
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !17747
  %2 = add i64 %0, 99, !dbg !17749
  call void @llvm.dbg.value(metadata i64 %2, metadata !16136, metadata !DIExpression()), !dbg !17747
  %3 = udiv i64 %2, 100, !dbg !17750
  ret i64 %3, !dbg !17751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17752 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17754, metadata !DIExpression()), !dbg !17755
  call void @llvm.dbg.value(metadata i64 %0, metadata !16136, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.value(metadata i32 10000, metadata !16139, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16140, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.value(metadata i8 1, metadata !16141, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.value(metadata i1 false, metadata !16142, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17756
  call void @llvm.dbg.value(metadata i1 false, metadata !16143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17756
  call void @llvm.dbg.value(metadata i8 0, metadata !16144, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.value(metadata i1 true, metadata !16145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17756
  call void @llvm.dbg.value(metadata i1 false, metadata !16146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17756
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !17756
  call void @llvm.dbg.value(metadata i64 0, metadata !16147, metadata !DIExpression()), !dbg !17756
  %2 = mul i64 %0, 100, !dbg !17758
  ret i64 %2, !dbg !17760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17763, metadata !DIExpression()), !dbg !17764
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17765
  br i1 %2, label %14, label %3, !dbg !17767

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17768
  %5 = icmp slt i32 %4, 0, !dbg !17770
  br i1 %5, label %6, label %10, !dbg !17771

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17772
  %8 = load i8, i8* %7, align 1, !dbg !17772
  %9 = icmp eq i8 %8, 16, !dbg !17775
  br i1 %9, label %10, label %14, !dbg !17776

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17777
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17778
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17779, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 %11, metadata !16734, metadata !DIExpression()) #25, !dbg !17783
  %12 = icmp eq i32 %11, 0, !dbg !17784
  br i1 %12, label %13, label %14, !dbg !17785

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17786
  br label %14, !dbg !17788

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !17790 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17792, metadata !DIExpression()), !dbg !17793
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17794
  %3 = load i8, i8* %2, align 1, !dbg !17794
  %4 = and i8 %3, 2, !dbg !17795
  %5 = icmp ne i8 %4, 0, !dbg !17796
  ret i1 %5, !dbg !17797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !17798 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17803
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17802, metadata !DIExpression()), !dbg !17804
  ret %struct.k_thread* %1, !dbg !17805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17806 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17807, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 %1, metadata !16734, metadata !DIExpression()) #25, !dbg !17810
  %2 = icmp eq i32 %1, 0, !dbg !17811
  br i1 %2, label %3, label %8, !dbg !17812

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17813
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17814
  %6 = icmp ne i32 %5, 0, !dbg !17812
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17816 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17818, metadata !DIExpression()), !dbg !17820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17821
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17823, !srcloc !16104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17823
  call void @llvm.dbg.value(metadata i32 %3, metadata !16101, metadata !DIExpression()) #25, !dbg !17825
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17825
  call void @llvm.dbg.value(metadata i32 %3, metadata !16095, metadata !DIExpression()) #25, !dbg !17821
  call void @llvm.dbg.value(metadata i32 %3, metadata !17819, metadata !DIExpression()), !dbg !17820
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17826
  %5 = load i8, i8* %4, align 4, !dbg !17826
  %6 = and i8 %5, 1, !dbg !17828
  %7 = icmp eq i8 %6, 0, !dbg !17829
  br i1 %7, label %9, label %8, !dbg !17830

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !17831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17831
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !17834
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17836, !srcloc !16130
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17837, !srcloc !17839
  br label %24, !dbg !17840

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17841
  %11 = load i8, i8* %10, align 1, !dbg !17841
  %12 = and i8 %11, 8, !dbg !17843
  %13 = icmp eq i8 %12, 0, !dbg !17844
  br i1 %13, label %15, label %14, !dbg !17845

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !17849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17851, !srcloc !16130
  br label %24, !dbg !17852

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17853
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17854
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17856
  br i1 %17, label %18, label %23, !dbg !17857

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17858, !srcloc !16738
  call void @llvm.dbg.value(metadata i32 %19, metadata !16734, metadata !DIExpression()) #25, !dbg !17861
  %20 = icmp eq i32 %19, 0, !dbg !17862
  br i1 %20, label %21, label %23, !dbg !17863

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16698, metadata !DIExpression()) #25, !dbg !17864
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16703, metadata !DIExpression()) #25, !dbg !17864
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17867
  br label %23, !dbg !17868

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !16116, metadata !DIExpression()) #25, !dbg !17869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17869
  call void @llvm.dbg.value(metadata i32 %3, metadata !16124, metadata !DIExpression()) #25, !dbg !17871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17873, !srcloc !16130
  br label %24, !dbg !17874

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17877, metadata !DIExpression()), !dbg !17878
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17879
  %3 = load i8, i8* %2, align 1, !dbg !17879
  %4 = and i8 %3, 8, !dbg !17881
  %5 = icmp eq i8 %4, 0, !dbg !17882
  br i1 %5, label %6, label %20, !dbg !17883

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17884
  %8 = or i8 %7, 8, !dbg !17884
  store i8 %8, i8* %2, align 1, !dbg !17884
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17886
  br i1 %9, label %10, label %12, !dbg !17888

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()) #25, !dbg !17889
  %11 = and i8 %8, 95, !dbg !17892
  store i8 %11, i8* %2, align 1, !dbg !17892
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16266, metadata !DIExpression()) #25, !dbg !17893
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17895
  br label %12, !dbg !17896

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17897
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17897
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17899
  br i1 %15, label %17, label %16, !dbg !17900

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17901
  br label %17, !dbg !17903

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17904
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17905
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !17906
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17907
  br label %20, !dbg !17908

20:                                               ; preds = %17, %1
  ret void, !dbg !17909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17910 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17914, metadata !DIExpression()), !dbg !17916
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !17917
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17915, metadata !DIExpression()), !dbg !17916
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17918
  br i1 %3, label %10, label %4, !dbg !17919

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17920
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17922
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17923, metadata !DIExpression()), !dbg !17929
  call void @llvm.dbg.value(metadata i32 0, metadata !17928, metadata !DIExpression()), !dbg !17929
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17931
  store i32 0, i32* %7, align 4, !dbg !17932
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17933
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.237(%struct._wait_q_t* noundef %0) #26, !dbg !17917
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17915, metadata !DIExpression()), !dbg !17916
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17918
  br i1 %9, label %10, label %4, !dbg !17919, !llvm.loop !17934

10:                                               ; preds = %4, %1
  ret void, !dbg !17936
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17937 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17942, metadata !DIExpression()), !dbg !17945
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17941, metadata !DIExpression()), !dbg !17945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17946
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17948, !srcloc !16104
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17948
  call void @llvm.dbg.value(metadata i32 %4, metadata !16101, metadata !DIExpression()) #25, !dbg !17950
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !17950
  call void @llvm.dbg.value(metadata i32 %4, metadata !16095, metadata !DIExpression()) #25, !dbg !17946
  call void @llvm.dbg.value(metadata i32 %4, metadata !17943, metadata !DIExpression()), !dbg !17945
  call void @llvm.dbg.value(metadata i32 0, metadata !17944, metadata !DIExpression()), !dbg !17945
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17951
  %6 = load i8, i8* %5, align 1, !dbg !17951
  %7 = and i8 %6, 8, !dbg !17953
  %8 = icmp eq i8 %7, 0, !dbg !17954
  br i1 %8, label %9, label %24, !dbg !17955

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17942, metadata !DIExpression()), !dbg !17945
  %11 = icmp eq i64 %10, 0, !dbg !17956
  br i1 %11, label %24, label %12, !dbg !17958

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17959
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17961
  br i1 %14, label %24, label %15, !dbg !17962

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17963
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !17963
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17964
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !17965
  br i1 %19, label %24, label %20, !dbg !17966

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17967
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !17969
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17970
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17971
  call void @llvm.dbg.value(metadata i32 %4, metadata !16698, metadata !DIExpression()) #25, !dbg !17972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16703, metadata !DIExpression()) #25, !dbg !17972
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17974
  call void @llvm.dbg.value(metadata i32 %23, metadata !17944, metadata !DIExpression()), !dbg !17945
  br label %26, !dbg !17975

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17976
  call void @llvm.dbg.value(metadata i32 %25, metadata !17944, metadata !DIExpression()), !dbg !17945
  call void @llvm.dbg.value(metadata i32 %4, metadata !16116, metadata !DIExpression()) #25, !dbg !17977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !17977
  call void @llvm.dbg.value(metadata i32 %4, metadata !16124, metadata !DIExpression()) #25, !dbg !17979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17981, !srcloc !16130
  br label %26, !dbg !17982

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17945
  ret i32 %27, !dbg !17983
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17984 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17988, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.value(metadata i32 %1, metadata !17989, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.value(metadata i8* %2, metadata !17990, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.value(metadata i8 0, metadata !17992, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.value(metadata i32 0, metadata !17993, metadata !DIExpression()), !dbg !17997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16089, metadata !DIExpression()) #25, !dbg !17998
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18000, !srcloc !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16101, metadata !DIExpression()) #25, !dbg !18002
  call void @llvm.dbg.value(metadata i32 undef, metadata !16102, metadata !DIExpression()) #25, !dbg !18002
  call void @llvm.dbg.value(metadata i32 undef, metadata !16095, metadata !DIExpression()) #25, !dbg !17998
  call void @llvm.dbg.value(metadata i32 undef, metadata !17995, metadata !DIExpression()), !dbg !17997
  call void @llvm.dbg.value(metadata i8 poison, metadata !17992, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.value(metadata i32 undef, metadata !17993, metadata !DIExpression()), !dbg !17997
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !18003
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17991, metadata !DIExpression()), !dbg !17996
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18006
  br i1 %7, label %12, label %8, !dbg !18008

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18009, metadata !DIExpression()), !dbg !18016
  call void @llvm.dbg.value(metadata i32 %1, metadata !18014, metadata !DIExpression()), !dbg !18016
  call void @llvm.dbg.value(metadata i8* %2, metadata !18015, metadata !DIExpression()), !dbg !18016
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17923, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata i32 %1, metadata !17928, metadata !DIExpression()), !dbg !18019
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !18021
  store i32 %1, i32* %9, align 4, !dbg !18022
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !18023
  store i8* %2, i8** %10, align 4, !dbg !18024
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !18025
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !18026
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !18027
  call void @llvm.dbg.value(metadata i8 1, metadata !17992, metadata !DIExpression()), !dbg !17996
  br label %12, !dbg !18028

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !18000
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !18000
  call void @llvm.dbg.value(metadata i32 %14, metadata !16101, metadata !DIExpression()) #25, !dbg !18002
  call void @llvm.dbg.value(metadata i32 %14, metadata !16095, metadata !DIExpression()) #25, !dbg !17998
  call void @llvm.dbg.value(metadata i32 %14, metadata !17995, metadata !DIExpression()), !dbg !17997
  call void @llvm.dbg.value(metadata i8 poison, metadata !17992, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.value(metadata i32 undef, metadata !16116, metadata !DIExpression()) #25, !dbg !18029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16121, metadata !DIExpression()) #25, !dbg !18029
  call void @llvm.dbg.value(metadata i32 undef, metadata !16124, metadata !DIExpression()) #25, !dbg !18031
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18033, !srcloc !16130
  call void @llvm.dbg.value(metadata i32 undef, metadata !17993, metadata !DIExpression()), !dbg !17997
  ret i1 %13, !dbg !18034
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18035 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18041, metadata !DIExpression()), !dbg !18046
  call void @llvm.dbg.value(metadata i64 undef, metadata !18043, metadata !DIExpression()), !dbg !18046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18040, metadata !DIExpression()), !dbg !18046
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !18042, metadata !DIExpression()), !dbg !18046
  call void @llvm.dbg.value(metadata i8** %4, metadata !18044, metadata !DIExpression()), !dbg !18046
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !18047
  call void @llvm.dbg.value(metadata i32 %6, metadata !18045, metadata !DIExpression()), !dbg !18046
  %7 = icmp eq i8** %4, null, !dbg !18048
  br i1 %7, label %12, label %8, !dbg !18050

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18051
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18053
  %11 = load i8*, i8** %10, align 4, !dbg !18053
  store i8* %11, i8** %4, align 4, !dbg !18054
  br label %12, !dbg !18055

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18057 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18059
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18060
  ret void, !dbg !18061
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18062 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18072, metadata !DIExpression()), !dbg !18089
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18070, metadata !DIExpression()), !dbg !18089
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18071, metadata !DIExpression()), !dbg !18089
  %5 = icmp eq i64 %4, -1, !dbg !18090
  br i1 %5, label %55, label %6, !dbg !18092

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18093
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !18094
  call void @llvm.dbg.value(metadata i32 0, metadata !18073, metadata !DIExpression()), !dbg !18095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18103
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18105, !srcloc !18111
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !18105
  call void @llvm.dbg.value(metadata i32 %9, metadata !18108, metadata !DIExpression()) #25, !dbg !18112
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18112
  call void @llvm.dbg.value(metadata i32 %9, metadata !18102, metadata !DIExpression()) #25, !dbg !18103
  call void @llvm.dbg.value(metadata i32 %9, metadata !18079, metadata !DIExpression()), !dbg !18095
  call void @llvm.dbg.value(metadata i32 undef, metadata !18073, metadata !DIExpression()), !dbg !18095
  %10 = icmp slt i64 %4, -1, !dbg !18113
  br i1 %10, label %11, label %17, !dbg !18114

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !18115
  %13 = add i64 %4, %12, !dbg !18116
  %14 = sub i64 -2, %13, !dbg !18116
  call void @llvm.dbg.value(metadata i64 %14, metadata !18083, metadata !DIExpression()), !dbg !18117
  %15 = icmp sgt i64 %14, 1, !dbg !18118
  %16 = select i1 %15, i64 %14, i64 1, !dbg !18118
  br label %22, !dbg !18119

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !18120
  %19 = tail call fastcc i32 @elapsed.250() #26, !dbg !18122
  %20 = sext i32 %19 to i64, !dbg !18122
  %21 = add nsw i64 %18, %20, !dbg !18123
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !18124
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18125
  store i64 %23, i64* %24, align 8, !dbg !18126
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !18127
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !18080, metadata !DIExpression()), !dbg !18129
  %26 = icmp eq %struct._timeout* %25, null, !dbg !18130
  br i1 %26, label %42, label %27, !dbg !18130

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !18131
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !18080, metadata !DIExpression()), !dbg !18129
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !18135
  %31 = load i64, i64* %30, align 8, !dbg !18135
  %32 = icmp slt i64 %28, %31, !dbg !18136
  br i1 %32, label %33, label %38, !dbg !18137

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !18135
  %35 = sub nsw i64 %31, %28, !dbg !18138
  store i64 %35, i64* %34, align 8, !dbg !18138
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !18140
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18141
  tail call fastcc void @sys_dlist_insert.251(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !18142
  br label %44, !dbg !18143

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !18144
  store i64 %39, i64* %24, align 8, !dbg !18144
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !18145
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !18080, metadata !DIExpression()), !dbg !18129
  %41 = icmp eq %struct._timeout* %40, null, !dbg !18130
  br i1 %41, label %42, label %27, !dbg !18130, !llvm.loop !18146

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18148
  tail call fastcc void @sys_dlist_append.252(%struct._dnode* noundef %43) #26, !dbg !18151
  br label %44, !dbg !18152

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !18153
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !18154
  br i1 %46, label %47, label %54, !dbg !18155

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !18156
  call void @llvm.dbg.value(metadata i32 %48, metadata !18086, metadata !DIExpression()), !dbg !18157
  %49 = icmp ne i32 %48, 0, !dbg !18158
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !18160
  br i1 %52, label %54, label %53, !dbg !18160

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !18161
  br label %54, !dbg !18163

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !18164, metadata !DIExpression()) #25, !dbg !18170
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18170
  call void @llvm.dbg.value(metadata i32 %9, metadata !18172, metadata !DIExpression()) #25, !dbg !18175
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18177, !srcloc !18178
  call void @llvm.dbg.value(metadata i32 undef, metadata !18073, metadata !DIExpression()), !dbg !18095
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !18179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.250() unnamed_addr #1 !dbg !18180 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18183
  %2 = icmp eq i32 %1, 0, !dbg !18184
  br i1 %2, label %3, label %5, !dbg !18183

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !18185
  br label %5, !dbg !18183

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18183
  ret i32 %6, !dbg !18186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !18187 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.255() #26, !dbg !18193
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18191, metadata !DIExpression()), !dbg !18194
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18195
  ret %struct._timeout* %2, !dbg !18196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.251(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !18197 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18201, metadata !DIExpression()), !dbg !18205
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18202, metadata !DIExpression()), !dbg !18205
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18206
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18206
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18203, metadata !DIExpression()), !dbg !18205
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18207
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18208
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18209
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18210
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18211
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18212
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18213
  ret void, !dbg !18214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !18215 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18219, metadata !DIExpression()), !dbg !18221
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18222
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.253(%struct._dnode* noundef %2) #26, !dbg !18223
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18220, metadata !DIExpression()), !dbg !18221
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18224
  ret %struct._timeout* %4, !dbg !18225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.252(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !18226 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18231, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18232, metadata !DIExpression()), !dbg !18234
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18235
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18233, metadata !DIExpression()), !dbg !18234
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18236
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18237
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18238
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18239
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18240
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18241
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18242
  ret void, !dbg !18243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18244 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !18249
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18246, metadata !DIExpression()), !dbg !18250
  %2 = tail call fastcc i32 @elapsed.250() #26, !dbg !18251
  call void @llvm.dbg.value(metadata i32 %2, metadata !18247, metadata !DIExpression()), !dbg !18250
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18252
  br i1 %3, label %14, label %4, !dbg !18254

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18255
  %6 = load i64, i64* %5, align 8, !dbg !18255
  %7 = sext i32 %2 to i64, !dbg !18256
  %8 = sub nsw i64 %6, %7, !dbg !18257
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18258
  br i1 %9, label %14, label %10, !dbg !18259

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18260
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18260
  %13 = trunc i64 %12 to i32, !dbg !18260
  call void @llvm.dbg.value(metadata i32 %13, metadata !18248, metadata !DIExpression()), !dbg !18250
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18262
  call void @llvm.dbg.value(metadata i32 %15, metadata !18248, metadata !DIExpression()), !dbg !18250
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18263
  %17 = icmp ne i32 %16, 0, !dbg !18265
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18266
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18266
  call void @llvm.dbg.value(metadata i32 %20, metadata !18248, metadata !DIExpression()), !dbg !18250
  ret i32 %20, !dbg !18267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.253(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !18268 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18272, metadata !DIExpression()), !dbg !18274
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18273, metadata !DIExpression()), !dbg !18274
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18275
  br i1 %2, label %5, label %3, !dbg !18276

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.254(%struct._dnode* noundef nonnull %0) #26, !dbg !18277
  br label %5, !dbg !18276

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18276
  ret %struct._dnode* %6, !dbg !18278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.254(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !18279 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18281, metadata !DIExpression()), !dbg !18283
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18282, metadata !DIExpression()), !dbg !18283
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18284
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18285
  br i1 %3, label %7, label %4, !dbg !18286

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18287
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18287
  br label %7, !dbg !18286

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18286
  ret %struct._dnode* %8, !dbg !18288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.255() unnamed_addr #4 !dbg !18289 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18293, metadata !DIExpression()), !dbg !18294
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.256() #26, !dbg !18295
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18295
  ret %struct._dnode* %3, !dbg !18296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.256() unnamed_addr #4 !dbg !18297 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18301, metadata !DIExpression()), !dbg !18302
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18303
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18304
  ret i1 %2, !dbg !18305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18306 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18310, metadata !DIExpression()), !dbg !18315
  call void @llvm.dbg.value(metadata i32 -22, metadata !18311, metadata !DIExpression()), !dbg !18315
  call void @llvm.dbg.value(metadata i32 0, metadata !18312, metadata !DIExpression()), !dbg !18316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18317
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18319, !srcloc !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !18108, metadata !DIExpression()) #25, !dbg !18321
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18321
  call void @llvm.dbg.value(metadata i32 undef, metadata !18102, metadata !DIExpression()) #25, !dbg !18317
  call void @llvm.dbg.value(metadata i32 undef, metadata !18314, metadata !DIExpression()), !dbg !18316
  call void @llvm.dbg.value(metadata i32 -22, metadata !18311, metadata !DIExpression()), !dbg !18315
  call void @llvm.dbg.value(metadata i32 undef, metadata !18312, metadata !DIExpression()), !dbg !18316
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18311, metadata !DIExpression()), !dbg !18315
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.259(%struct._dnode* noundef %3) #26, !dbg !18322
  br i1 %4, label %5, label %6, !dbg !18326

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !18327
  call void @llvm.dbg.value(metadata i32 0, metadata !18311, metadata !DIExpression()), !dbg !18315
  br label %6, !dbg !18329

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !18315
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !18319
  call void @llvm.dbg.value(metadata i32 %8, metadata !18108, metadata !DIExpression()) #25, !dbg !18321
  call void @llvm.dbg.value(metadata i32 %8, metadata !18102, metadata !DIExpression()) #25, !dbg !18317
  call void @llvm.dbg.value(metadata i32 %8, metadata !18314, metadata !DIExpression()), !dbg !18316
  call void @llvm.dbg.value(metadata i32 %7, metadata !18311, metadata !DIExpression()), !dbg !18315
  call void @llvm.dbg.value(metadata i32 undef, metadata !18164, metadata !DIExpression()) #25, !dbg !18330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18330
  call void @llvm.dbg.value(metadata i32 undef, metadata !18172, metadata !DIExpression()) #25, !dbg !18332
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !18334, !srcloc !18178
  call void @llvm.dbg.value(metadata i32 undef, metadata !18312, metadata !DIExpression()), !dbg !18316
  ret i32 %7, !dbg !18335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.259(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !18336 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18342, metadata !DIExpression()), !dbg !18343
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18344
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18344
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18345
  ret i1 %4, !dbg !18346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !18347 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18349, metadata !DIExpression()), !dbg !18350
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !18351
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18353
  br i1 %3, label %10, label %4, !dbg !18354

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18355
  %6 = load i64, i64* %5, align 8, !dbg !18355
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18357
  %8 = load i64, i64* %7, align 8, !dbg !18358
  %9 = add nsw i64 %8, %6, !dbg !18358
  store i64 %9, i64* %7, align 8, !dbg !18358
  br label %10, !dbg !18359

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18360
  tail call fastcc void @sys_dlist_remove.260(%struct._dnode* noundef %11) #26, !dbg !18361
  ret void, !dbg !18362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.260(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !18363 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18367, metadata !DIExpression()), !dbg !18370
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18371
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18371
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18368, metadata !DIExpression()), !dbg !18370
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18372
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18372
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18369, metadata !DIExpression()), !dbg !18370
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18373
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18374
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18375
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18376
  tail call fastcc void @sys_dnode_init.261(%struct._dnode* noundef %0) #26, !dbg !18377
  ret void, !dbg !18378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.261(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !18379 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18381, metadata !DIExpression()), !dbg !18382
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18383
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18384
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18385
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18386
  ret void, !dbg !18387
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18388 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18394, metadata !DIExpression()), !dbg !18399
  call void @llvm.dbg.value(metadata i64 0, metadata !18395, metadata !DIExpression()), !dbg !18399
  call void @llvm.dbg.value(metadata i32 0, metadata !18396, metadata !DIExpression()), !dbg !18400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18401
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18403, !srcloc !18111
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18403
  call void @llvm.dbg.value(metadata i32 %3, metadata !18108, metadata !DIExpression()) #25, !dbg !18405
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18405
  call void @llvm.dbg.value(metadata i32 %3, metadata !18102, metadata !DIExpression()) #25, !dbg !18401
  call void @llvm.dbg.value(metadata i32 %3, metadata !18398, metadata !DIExpression()), !dbg !18400
  call void @llvm.dbg.value(metadata i64 0, metadata !18395, metadata !DIExpression()), !dbg !18399
  call void @llvm.dbg.value(metadata i32 undef, metadata !18396, metadata !DIExpression()), !dbg !18400
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18406
  call void @llvm.dbg.value(metadata i64 %4, metadata !18395, metadata !DIExpression()), !dbg !18399
  call void @llvm.dbg.value(metadata i32 %3, metadata !18164, metadata !DIExpression()) #25, !dbg !18409
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18409
  call void @llvm.dbg.value(metadata i32 %3, metadata !18172, metadata !DIExpression()) #25, !dbg !18411
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18413, !srcloc !18178
  call void @llvm.dbg.value(metadata i32 undef, metadata !18396, metadata !DIExpression()), !dbg !18400
  ret i64 %4, !dbg !18414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18415 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18417, metadata !DIExpression()), !dbg !18421
  call void @llvm.dbg.value(metadata i64 0, metadata !18418, metadata !DIExpression()), !dbg !18421
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.262(%struct._timeout* noundef %0) #26, !dbg !18422
  br i1 %2, label %21, label %3, !dbg !18424

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18425
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18419, metadata !DIExpression()), !dbg !18426
  call void @llvm.dbg.value(metadata i64 0, metadata !18418, metadata !DIExpression()), !dbg !18421
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18427
  br i1 %5, label %16, label %6, !dbg !18429

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18419, metadata !DIExpression()), !dbg !18426
  call void @llvm.dbg.value(metadata i64 %8, metadata !18418, metadata !DIExpression()), !dbg !18421
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18430
  %10 = load i64, i64* %9, align 8, !dbg !18430
  %11 = add nsw i64 %10, %8, !dbg !18432
  call void @llvm.dbg.value(metadata i64 %11, metadata !18418, metadata !DIExpression()), !dbg !18421
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18433
  br i1 %12, label %16, label %13, !dbg !18435

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18436
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18419, metadata !DIExpression()), !dbg !18426
  call void @llvm.dbg.value(metadata i64 %11, metadata !18418, metadata !DIExpression()), !dbg !18421
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18427
  br i1 %15, label %16, label %6, !dbg !18429, !llvm.loop !18437

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18421
  call void @llvm.dbg.value(metadata i64 %17, metadata !18418, metadata !DIExpression()), !dbg !18421
  %18 = tail call fastcc i32 @elapsed.250() #26, !dbg !18439
  %19 = sext i32 %18 to i64, !dbg !18439
  %20 = sub nsw i64 %17, %19, !dbg !18440
  br label %21, !dbg !18441

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18421
  ret i64 %22, !dbg !18442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.262(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !18443 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18447, metadata !DIExpression()), !dbg !18448
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18449
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.259(%struct._dnode* noundef %2) #26, !dbg !18450
  %4 = xor i1 %3, true, !dbg !18451
  ret i1 %4, !dbg !18452
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18453 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18455, metadata !DIExpression()), !dbg !18460
  call void @llvm.dbg.value(metadata i64 0, metadata !18456, metadata !DIExpression()), !dbg !18460
  call void @llvm.dbg.value(metadata i32 0, metadata !18457, metadata !DIExpression()), !dbg !18461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18462
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18464, !srcloc !18111
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18464
  call void @llvm.dbg.value(metadata i32 %3, metadata !18108, metadata !DIExpression()) #25, !dbg !18466
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18466
  call void @llvm.dbg.value(metadata i32 %3, metadata !18102, metadata !DIExpression()) #25, !dbg !18462
  call void @llvm.dbg.value(metadata i32 %3, metadata !18459, metadata !DIExpression()), !dbg !18461
  call void @llvm.dbg.value(metadata i64 0, metadata !18456, metadata !DIExpression()), !dbg !18460
  call void @llvm.dbg.value(metadata i32 undef, metadata !18457, metadata !DIExpression()), !dbg !18461
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18467
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18470
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18456, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18460
  call void @llvm.dbg.value(metadata i32 %3, metadata !18164, metadata !DIExpression()) #25, !dbg !18471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18471
  call void @llvm.dbg.value(metadata i32 %3, metadata !18172, metadata !DIExpression()) #25, !dbg !18473
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18475, !srcloc !18178
  call void @llvm.dbg.value(metadata i32 undef, metadata !18457, metadata !DIExpression()), !dbg !18461
  %6 = add i64 %5, %4, !dbg !18476
  ret i64 %6, !dbg !18477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18478 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18480, metadata !DIExpression()), !dbg !18484
  call void @llvm.dbg.value(metadata i32 0, metadata !18481, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18486
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18488, !srcloc !18111
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18488
  call void @llvm.dbg.value(metadata i32 %2, metadata !18108, metadata !DIExpression()) #25, !dbg !18490
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18490
  call void @llvm.dbg.value(metadata i32 %2, metadata !18102, metadata !DIExpression()) #25, !dbg !18486
  call void @llvm.dbg.value(metadata i32 %2, metadata !18483, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i32 -1, metadata !18480, metadata !DIExpression()), !dbg !18484
  call void @llvm.dbg.value(metadata i32 undef, metadata !18481, metadata !DIExpression()), !dbg !18485
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18491
  call void @llvm.dbg.value(metadata i32 %3, metadata !18480, metadata !DIExpression()), !dbg !18484
  call void @llvm.dbg.value(metadata i32 %2, metadata !18164, metadata !DIExpression()) #25, !dbg !18494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18494
  call void @llvm.dbg.value(metadata i32 %2, metadata !18172, metadata !DIExpression()) #25, !dbg !18496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18498, !srcloc !18178
  call void @llvm.dbg.value(metadata i32 undef, metadata !18481, metadata !DIExpression()), !dbg !18485
  ret i32 %3, !dbg !18499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18502, metadata !DIExpression()), !dbg !18512
  call void @llvm.dbg.value(metadata i1 %1, metadata !18503, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18512
  call void @llvm.dbg.value(metadata i32 0, metadata !18504, metadata !DIExpression()), !dbg !18513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18514
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18516, !srcloc !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !18108, metadata !DIExpression()) #25, !dbg !18518
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18518
  call void @llvm.dbg.value(metadata i32 undef, metadata !18102, metadata !DIExpression()) #25, !dbg !18514
  call void @llvm.dbg.value(metadata i32 undef, metadata !18506, metadata !DIExpression()), !dbg !18513
  call void @llvm.dbg.value(metadata i32 undef, metadata !18504, metadata !DIExpression()), !dbg !18513
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18519
  call void @llvm.dbg.value(metadata i32 %4, metadata !18507, metadata !DIExpression()), !dbg !18520
  call void @llvm.dbg.value(metadata i1 undef, metadata !18510, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18520
  %5 = icmp slt i32 %4, 2, !dbg !18521
  call void @llvm.dbg.value(metadata i1 %5, metadata !18511, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18520
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18522
  call void @llvm.dbg.value(metadata i1 %6, metadata !18510, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18520
  br i1 %7, label %11, label %8, !dbg !18522

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18524
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18524
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18526
  br label %11, !dbg !18527

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18516
  call void @llvm.dbg.value(metadata i32 %12, metadata !18108, metadata !DIExpression()) #25, !dbg !18518
  call void @llvm.dbg.value(metadata i32 %12, metadata !18102, metadata !DIExpression()) #25, !dbg !18514
  call void @llvm.dbg.value(metadata i32 %12, metadata !18506, metadata !DIExpression()), !dbg !18513
  call void @llvm.dbg.value(metadata i32 undef, metadata !18164, metadata !DIExpression()) #25, !dbg !18528
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18528
  call void @llvm.dbg.value(metadata i32 undef, metadata !18172, metadata !DIExpression()) #25, !dbg !18530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18532, !srcloc !18178
  call void @llvm.dbg.value(metadata i32 1, metadata !18504, metadata !DIExpression()), !dbg !18513
  call void @llvm.dbg.value(metadata i32 undef, metadata !18504, metadata !DIExpression()), !dbg !18513
  ret void, !dbg !18533
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18538, metadata !DIExpression()), !dbg !18543
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18545
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18547, !srcloc !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !18108, metadata !DIExpression()) #25, !dbg !18549
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18549
  call void @llvm.dbg.value(metadata i32 undef, metadata !18102, metadata !DIExpression()) #25, !dbg !18545
  call void @llvm.dbg.value(metadata i32 undef, metadata !18539, metadata !DIExpression()), !dbg !18543
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18543
  call void @llvm.dbg.value(metadata i32 undef, metadata !18539, metadata !DIExpression()), !dbg !18543
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18550
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18551
  br i1 %4, label %28, label %5, !dbg !18552

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18553
  %10 = load i64, i64* %9, align 8, !dbg !18553
  %11 = sext i32 %8 to i64, !dbg !18554
  %12 = icmp sgt i64 %10, %11, !dbg !18555
  br i1 %12, label %26, label %13, !dbg !18556

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18543
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18540, metadata !DIExpression()), !dbg !18557
  %15 = trunc i64 %10 to i32, !dbg !18558
  call void @llvm.dbg.value(metadata i32 %15, metadata !18542, metadata !DIExpression()), !dbg !18557
  %16 = sext i32 %15 to i64, !dbg !18559
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18560
  %18 = add i64 %17, %16, !dbg !18560
  store i64 %18, i64* @curr_tick, align 8, !dbg !18560
  store i64 0, i64* %9, align 8, !dbg !18561
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18562
  call void @llvm.dbg.value(metadata i32 %14, metadata !18164, metadata !DIExpression()) #25, !dbg !18563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18563
  call void @llvm.dbg.value(metadata i32 %14, metadata !18172, metadata !DIExpression()) #25, !dbg !18565
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18567, !srcloc !18178
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18568
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18568
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18570
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18572, !srcloc !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !18108, metadata !DIExpression()) #25, !dbg !18574
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18574
  call void @llvm.dbg.value(metadata i32 undef, metadata !18102, metadata !DIExpression()) #25, !dbg !18570
  call void @llvm.dbg.value(metadata i32 undef, metadata !18539, metadata !DIExpression()), !dbg !18543
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18575
  %23 = sub nsw i32 %22, %15, !dbg !18575
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18543
  call void @llvm.dbg.value(metadata i32 undef, metadata !18539, metadata !DIExpression()), !dbg !18543
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18550
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18551
  br i1 %25, label %28, label %5, !dbg !18552, !llvm.loop !18576

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18578
  store i64 %27, i64* %9, align 8, !dbg !18578
  br label %32, !dbg !18581

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18543
  %31 = sext i32 %30 to i64, !dbg !18582
  br label %32, !dbg !18582

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18582
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18543
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18583
  %37 = add i64 %36, %33, !dbg !18583
  store i64 %37, i64* @curr_tick, align 8, !dbg !18583
  store i32 0, i32* @announce_remaining, align 4, !dbg !18584
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18585
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18586
  call void @llvm.dbg.value(metadata i32 %35, metadata !18164, metadata !DIExpression()) #25, !dbg !18587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18587
  call void @llvm.dbg.value(metadata i32 %35, metadata !18172, metadata !DIExpression()) #25, !dbg !18589
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18591, !srcloc !18178
  ret void, !dbg !18592
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18593 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18595, metadata !DIExpression()), !dbg !18599
  call void @llvm.dbg.value(metadata i32 0, metadata !18596, metadata !DIExpression()), !dbg !18600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18601
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18603, !srcloc !18111
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18603
  call void @llvm.dbg.value(metadata i32 %2, metadata !18108, metadata !DIExpression()) #25, !dbg !18605
  call void @llvm.dbg.value(metadata i32 undef, metadata !18109, metadata !DIExpression()) #25, !dbg !18605
  call void @llvm.dbg.value(metadata i32 %2, metadata !18102, metadata !DIExpression()) #25, !dbg !18601
  call void @llvm.dbg.value(metadata i32 %2, metadata !18598, metadata !DIExpression()), !dbg !18600
  call void @llvm.dbg.value(metadata i64 0, metadata !18595, metadata !DIExpression()), !dbg !18599
  call void @llvm.dbg.value(metadata i32 undef, metadata !18596, metadata !DIExpression()), !dbg !18600
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18606
  %4 = tail call fastcc i32 @elapsed.250() #26, !dbg !18609
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18595, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18599
  call void @llvm.dbg.value(metadata i32 %2, metadata !18164, metadata !DIExpression()) #25, !dbg !18610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18169, metadata !DIExpression()) #25, !dbg !18610
  call void @llvm.dbg.value(metadata i32 %2, metadata !18172, metadata !DIExpression()) #25, !dbg !18612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18614, !srcloc !18178
  call void @llvm.dbg.value(metadata i32 undef, metadata !18596, metadata !DIExpression()), !dbg !18600
  %5 = sext i32 %4 to i64, !dbg !18609
  %6 = add i64 %3, %5, !dbg !18615
  ret i64 %6, !dbg !18616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18617 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18618
  %2 = trunc i64 %1 to i32, !dbg !18619
  ret i32 %2, !dbg !18620
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18621 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18622
  ret i64 %1, !dbg !18623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18626, metadata !DIExpression()), !dbg !18633
  %2 = icmp eq i32 %0, 0, !dbg !18634
  br i1 %2, label %10, label %3, !dbg !18636

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18637
  call void @llvm.dbg.value(metadata i32 %4, metadata !18627, metadata !DIExpression()), !dbg !18633
  %5 = mul i32 %0, 84, !dbg !18638
  call void @llvm.dbg.value(metadata i32 %5, metadata !18628, metadata !DIExpression()), !dbg !18633
  br label %6, !dbg !18639

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18640
  call void @llvm.dbg.value(metadata i32 %7, metadata !18629, metadata !DIExpression()), !dbg !18641
  %8 = sub i32 %7, %4, !dbg !18642
  %9 = icmp ult i32 %8, %5, !dbg !18644
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18646 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18647
  ret i32 %1, !dbg !18648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18649 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18651
  ret i32 %1, !dbg !18652
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18653 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18657, metadata !DIExpression()), !dbg !18659
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18660

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18661
  br label %14, !dbg !18665

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18658, metadata !DIExpression()), !dbg !18659
  %6 = icmp slt i64 %2, -1, !dbg !18666
  br i1 %6, label %7, label %9, !dbg !18669

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18670
  br label %14, !dbg !18671

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18673
  %11 = icmp ugt i64 %2, 1, !dbg !18674
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18674
  %13 = add nsw i64 %10, %12, !dbg !18675
  br label %14, !dbg !18676

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18677
  ret i64 %15, !dbg !18678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !18679 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !18681, metadata !DIExpression()), !dbg !18685
  %2 = icmp eq i8* %0, null, !dbg !18686
  br i1 %2, label %7, label %3, !dbg !18688

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !18682, metadata !DIExpression()), !dbg !18685
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !18689
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !18689
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !18682, metadata !DIExpression()), !dbg !18685
  call void @llvm.dbg.value(metadata i8* %4, metadata !18681, metadata !DIExpression()), !dbg !18685
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !18691
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !18692
  br label %7, !dbg !18693

7:                                                ; preds = %3, %1
  ret void, !dbg !18694
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18699, metadata !DIExpression()), !dbg !18702
  call void @llvm.dbg.value(metadata i32 %1, metadata !18700, metadata !DIExpression()), !dbg !18702
  %3 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !18703
  call void @llvm.dbg.value(metadata i8* %3, metadata !18701, metadata !DIExpression()), !dbg !18702
  ret i8* %3, !dbg !18704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !18705 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18709, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.value(metadata i32 %1, metadata !18710, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.value(metadata i32 %2, metadata !18711, metadata !DIExpression()), !dbg !18715
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !18711, metadata !DIExpression(DW_OP_deref)), !dbg !18715
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !18716
  br i1 %5, label %14, label %6, !dbg !18718

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !18719
  call void @llvm.dbg.value(metadata i32 %7, metadata !18714, metadata !DIExpression()), !dbg !18715
  %8 = load i32, i32* %4, align 4, !dbg !18720
  call void @llvm.dbg.value(metadata i32 %8, metadata !18711, metadata !DIExpression()), !dbg !18715
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !18721
  call void @llvm.dbg.value(metadata i8* %9, metadata !18712, metadata !DIExpression()), !dbg !18715
  %10 = icmp eq i8* %9, null, !dbg !18722
  br i1 %10, label %14, label %11, !dbg !18724

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !18725
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !18713, metadata !DIExpression()), !dbg !18715
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !18726
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !18727
  call void @llvm.dbg.value(metadata i8* %13, metadata !18713, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.value(metadata i8* %13, metadata !18712, metadata !DIExpression()), !dbg !18715
  br label %14, !dbg !18728

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !18715
  ret i8* %15, !dbg !18729
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !18730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18732, metadata !DIExpression()), !dbg !18735
  call void @llvm.dbg.value(metadata i32 4, metadata !18733, metadata !DIExpression()), !dbg !18735
  call void @llvm.dbg.value(metadata i32* %1, metadata !18734, metadata !DIExpression()), !dbg !18735
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !18736
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !18736
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !18736
  store i32 %5, i32* %1, align 4, !dbg !18736
  ret i1 %4, !dbg !18737
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !18738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18740, metadata !DIExpression()), !dbg !18742
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !18743
  call void @llvm.dbg.value(metadata i8* %2, metadata !18741, metadata !DIExpression()), !dbg !18742
  ret i8* %2, !dbg !18744
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18745 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !18747, metadata !DIExpression()), !dbg !18751
  call void @llvm.dbg.value(metadata i32 %1, metadata !18748, metadata !DIExpression()), !dbg !18751
  %4 = bitcast i32* %3 to i8*, !dbg !18752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18752
  call void @llvm.dbg.value(metadata i32* %3, metadata !18750, metadata !DIExpression(DW_OP_deref)), !dbg !18751
  %5 = call fastcc zeroext i1 @size_mul_overflow.280(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !18753
  br i1 %5, label %12, label %6, !dbg !18755

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !18756
  call void @llvm.dbg.value(metadata i32 %7, metadata !18750, metadata !DIExpression()), !dbg !18751
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !18757
  call void @llvm.dbg.value(metadata i8* %8, metadata !18749, metadata !DIExpression()), !dbg !18751
  %9 = icmp eq i8* %8, null, !dbg !18758
  br i1 %9, label %12, label %10, !dbg !18760

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !18750, metadata !DIExpression()), !dbg !18751
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !18761
  br label %12, !dbg !18763

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !18751
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !18764
  ret i8* %13, !dbg !18764
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.280(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !18765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18767, metadata !DIExpression()), !dbg !18770
  call void @llvm.dbg.value(metadata i32 %1, metadata !18768, metadata !DIExpression()), !dbg !18770
  call void @llvm.dbg.value(metadata i32* %2, metadata !18769, metadata !DIExpression()), !dbg !18770
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !18771
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !18771
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !18771
  store i32 %6, i32* %2, align 4, !dbg !18771
  ret i1 %5, !dbg !18772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !18773 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18847, metadata !DIExpression()), !dbg !18848
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !18849
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !18850
  ret void, !dbg !18851
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18854, metadata !DIExpression()), !dbg !18858
  call void @llvm.dbg.value(metadata i32 %1, metadata !18855, metadata !DIExpression()), !dbg !18858
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !18859
  br i1 %3, label %9, label %4, !dbg !18861

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18862
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !18864
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !18864
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !18857, metadata !DIExpression()), !dbg !18858
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !18865
  br i1 %8, label %12, label %9, !dbg !18867

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !18868
  call void @llvm.dbg.value(metadata i8* %11, metadata !18856, metadata !DIExpression()), !dbg !18858
  br label %12, !dbg !18870

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !18871
  call void @llvm.dbg.value(metadata i8* %13, metadata !18856, metadata !DIExpression()), !dbg !18858
  ret i8* %13, !dbg !18872
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !18873 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !18875, !srcloc !18878
  ret void, !dbg !18879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18880 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.289, i32 0, i32 0)) #27, !dbg !18882
  ret void, !dbg !18883
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18886, metadata !DIExpression()), !dbg !18906
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18887, metadata !DIExpression()), !dbg !18907
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !18908

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !18909

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18887, metadata !DIExpression()), !dbg !18907
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18910
  %6 = load i8*, i8** %5, align 4, !dbg !18910
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18914
  %8 = load i32, i32* %7, align 4, !dbg !18914
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !18915
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18916
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !18887, metadata !DIExpression()), !dbg !18907
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18917
  br i1 %10, label %3, label %2, !dbg !18908, !llvm.loop !18919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18921 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18925, metadata !DIExpression()), !dbg !18928
  call void @llvm.dbg.value(metadata i8* %1, metadata !18926, metadata !DIExpression()), !dbg !18928
  call void @llvm.dbg.value(metadata i32 %2, metadata !18927, metadata !DIExpression()), !dbg !18928
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18929
  tail call fastcc void @z_waitq_init.291(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !18930
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18931
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18932
  ret void, !dbg !18933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.291(%struct._wait_q_t* noundef %0) unnamed_addr #8 !dbg !18934 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18939, metadata !DIExpression()), !dbg !18940
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18941
  tail call fastcc void @sys_dlist_init.292(%struct._dnode* noundef %2) #26, !dbg !18942
  ret void, !dbg !18943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.292(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !18944 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18949, metadata !DIExpression()), !dbg !18950
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18951
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18952
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18953
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18954
  ret void, !dbg !18955
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18956 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18967, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18964, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i32 %1, metadata !18965, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i32 %2, metadata !18966, metadata !DIExpression()), !dbg !18977
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18978
  call void @llvm.dbg.value(metadata i64 %6, metadata !18969, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i8* null, metadata !18970, metadata !DIExpression()), !dbg !18977
  %7 = icmp eq i64 %5, -1, !dbg !18979
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18979
  call void @llvm.dbg.value(metadata i64 %8, metadata !18969, metadata !DIExpression()), !dbg !18977
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18981, metadata !DIExpression()) #25, !dbg !18988
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18990, !srcloc !18996
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #25, !dbg !18997
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()) #25, !dbg !18997
  call void @llvm.dbg.value(metadata i32 undef, metadata !18987, metadata !DIExpression()) #25, !dbg !18988
  call void @llvm.dbg.value(metadata i32 undef, metadata !18971, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i8 0, metadata !18976, metadata !DIExpression()), !dbg !18977
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18970, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i8 0, metadata !18976, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i32 undef, metadata !18971, metadata !DIExpression()), !dbg !18977
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18998
  call void @llvm.dbg.value(metadata i8* %12, metadata !18970, metadata !DIExpression()), !dbg !18977
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !19000
  call void @llvm.dbg.value(metadata i64 %13, metadata !18968, metadata !DIExpression()), !dbg !18977
  %14 = icmp eq i8* %12, null, !dbg !19001
  br i1 %14, label %15, label %31, !dbg !19003

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18971, metadata !DIExpression()), !dbg !18977
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !19003

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18976, metadata !DIExpression()), !dbg !18977
  %20 = sub nsw i64 %8, %18, !dbg !19004
  %21 = icmp slt i64 %20, 1, !dbg !19005
  br i1 %21, label %31, label %22, !dbg !19006

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !18977
  call void @llvm.dbg.value(metadata i8 undef, metadata !18976, metadata !DIExpression()), !dbg !18977
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !19007
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !19007
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !19007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18981, metadata !DIExpression()) #25, !dbg !19008
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19010, !srcloc !18996
  call void @llvm.dbg.value(metadata i32 undef, metadata !18993, metadata !DIExpression()) #25, !dbg !19012
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()) #25, !dbg !19012
  call void @llvm.dbg.value(metadata i32 undef, metadata !18987, metadata !DIExpression()) #25, !dbg !19008
  call void @llvm.dbg.value(metadata i32 undef, metadata !18971, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i8* null, metadata !18970, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i32 undef, metadata !18971, metadata !DIExpression()), !dbg !18977
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !18998
  call void @llvm.dbg.value(metadata i8* %28, metadata !18970, metadata !DIExpression()), !dbg !18977
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !19000
  call void @llvm.dbg.value(metadata i64 %29, metadata !18968, metadata !DIExpression()), !dbg !18977
  %30 = icmp eq i8* %28, null, !dbg !19001
  br i1 %30, label %17, label %31, !dbg !19003, !llvm.loop !19013

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !18998
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !18977
  call void @llvm.dbg.value(metadata i8* %33, metadata !18970, metadata !DIExpression()), !dbg !18977
  call void @llvm.dbg.value(metadata i32 %34, metadata !19016, metadata !DIExpression()) #25, !dbg !19022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !19021, metadata !DIExpression()) #25, !dbg !19022
  call void @llvm.dbg.value(metadata i32 %34, metadata !19024, metadata !DIExpression()) #25, !dbg !19027
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !19029, !srcloc !19030
  ret i8* %33, !dbg !19031
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19032 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19038, metadata !DIExpression()), !dbg !19040
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19036, metadata !DIExpression()), !dbg !19040
  call void @llvm.dbg.value(metadata i32 %1, metadata !19037, metadata !DIExpression()), !dbg !19040
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !19041
  call void @llvm.dbg.value(metadata i8* %4, metadata !19039, metadata !DIExpression()), !dbg !19040
  ret i8* %4, !dbg !19042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19043 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19047, metadata !DIExpression()), !dbg !19050
  call void @llvm.dbg.value(metadata i8* %1, metadata !19048, metadata !DIExpression()), !dbg !19050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !18981, metadata !DIExpression()) #25, !dbg !19051
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19053, !srcloc !18996
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !19053
  call void @llvm.dbg.value(metadata i32 %4, metadata !18993, metadata !DIExpression()) #25, !dbg !19055
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()) #25, !dbg !19055
  call void @llvm.dbg.value(metadata i32 %4, metadata !18987, metadata !DIExpression()) #25, !dbg !19051
  call void @llvm.dbg.value(metadata i32 %4, metadata !19049, metadata !DIExpression()), !dbg !19050
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19056
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !19057
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19058
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !19060
  %8 = icmp eq i32 %7, 0, !dbg !19061
  br i1 %8, label %12, label %9, !dbg !19062

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19063
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !19064
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !19064
  br label %13, !dbg !19066

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !19016, metadata !DIExpression()) #25, !dbg !19067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !19021, metadata !DIExpression()) #25, !dbg !19067
  call void @llvm.dbg.value(metadata i32 %4, metadata !19024, metadata !DIExpression()) #25, !dbg !19070
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !19072, !srcloc !19030
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !19073
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!903, !2, !2717, !27, !366, !390, !2719, !2721, !2754, !2788, !400, !450, !2790, !2793, !2804, !2850, !2852, !2880, !2908, !2951, !3022, !3067, !479, !619, !3095, !655, !665, !690, !702, !941, !3100, !1080, !1146, !1449, !1733, !3141, !1846, !1936, !3143, !3206, !3273, !1990, !3276, !1997, !2364, !3294, !3296, !2384, !2492, !3400, !2607, !2646, !3403, !3405, !2686}
!llvm.ident = !{!3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407, !3407}
!llvm.module.flags = !{!3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_mutex_bm_channel", scope: !27, file: !114, line: 16, type: !136, isLocal: true, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !290, !292, !294, !296, !298, !300, !302, !304, !306, !339, !343, !348, !350, !357, !362}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "bm_channel", scope: !27, file: !114, line: 16, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/benchmark.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !123, !125, !126, !134, !259}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !116, file: !117, line: 35, baseType: !120, size: 16)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !116, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !116, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !116, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!131, !13, !132}
!131 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !133, line: 214, baseType: !32)
!133 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !116, file: !117, line: 56, baseType: !135, size: 32, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !160, !257, !258}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !136, file: !137, line: 2722, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !142, file: !141, line: 232, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !147)
!146 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !148)
!148 = !{!149, !155}
!149 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 38, baseType: !150, size: 32)
!150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 38, size: 32, elements: !151)
!151 = !{!152, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !150, file: !146, line: 39, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !150, file: !146, line: 40, baseType: !153, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, scope: !147, file: !146, line: 42, baseType: !156, size: 32, offset: 32)
!156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !147, file: !146, line: 42, size: 32, elements: !157)
!157 = !{!158, !159}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !156, file: !146, line: 43, baseType: !153, size: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !156, file: !146, line: 44, baseType: !153, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !136, file: !137, line: 2724, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !{!165, !212, !225, !226, !227, !228, !234, !252}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !162, file: !163, line: 247, baseType: !166, size: 384)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !167)
!167 = !{!168, !182, !184, !187, !188, !199, !200, !201}
!168 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 60, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 60, size: 64, elements: !170)
!170 = !{!171, !173}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !169, file: !163, line: 61, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !147)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !169, file: !163, line: 62, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !176)
!175 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !174, file: !175, line: 50, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !180)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!180 = !{!181}
!181 = !DISubrange(count: 2)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !166, file: !163, line: 68, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !166, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !166, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !166, file: !163, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !163, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !163, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !163, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !163, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !163, line: 100, baseType: !121, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !166, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !166, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !166, file: !163, line: 131, baseType: !202, size: 192, offset: 192)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !203)
!203 = !{!204, !205, !211}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !202, file: !141, line: 245, baseType: !172, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !202, file: !141, line: 246, baseType: !206, size: 32, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !207)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !202, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !162, file: !163, line: 250, baseType: !213, size: 288, offset: 384)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !215)
!214 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !213, file: !214, line: 26, baseType: !108, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !213, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !213, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !213, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !213, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !213, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !213, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !213, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !213, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !162, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !162, file: !163, line: 256, baseType: !140, size: 64, offset: 704)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !162, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !162, file: !163, line: 300, baseType: !229, size: 96, offset: 800)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !230)
!230 = !{!231, !232, !233}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !229, file: !163, line: 153, baseType: !22, size: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !229, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !162, file: !163, line: 325, baseType: !235, size: 32, offset: 896)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !237)
!237 = !{!238, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !236, file: !137, line: 5074, baseType: !239, size: 96)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !241)
!240 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !{!242, !245, !246}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !240, line: 57, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !240, line: 57, flags: DIFlagFwdDecl)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !239, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !239, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !236, file: !137, line: 5075, baseType: !140, size: 64, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !236, file: !137, line: 5076, baseType: !249, offset: 160)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !162, file: !163, line: 343, baseType: !253, size: 64, offset: 928)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !253, file: !214, line: 63, baseType: !108, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !253, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !136, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !136, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !116, file: !117, line: 67, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !265)
!265 = !{!266, !267, !284}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !264, file: !117, line: 91, baseType: !131, size: 8)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !264, file: !117, line: 93, baseType: !268, size: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !279, !280, !281, !282, !283}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !137, line: 4206, baseType: !140, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !137, line: 4208, baseType: !249, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !270, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !270, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !270, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !270, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !270, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !270, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !270, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !270, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !264, file: !117, line: 96, baseType: !285, size: 32, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "s1", scope: !27, file: !114, line: 126, type: !264, isLocal: false, isDefinition: true, align: 32)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "s2", scope: !27, file: !114, line: 129, type: !264, isLocal: false, isDefinition: true, align: 32)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "s3", scope: !27, file: !114, line: 131, type: !264, isLocal: false, isDefinition: true, align: 32)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "s4", scope: !27, file: !114, line: 132, type: !264, isLocal: false, isDefinition: true, align: 32)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "s5", scope: !27, file: !114, line: 134, type: !264, isLocal: false, isDefinition: true, align: 32)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "s6", scope: !27, file: !114, line: 135, type: !264, isLocal: false, isDefinition: true, align: 32)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "s7", scope: !27, file: !114, line: 136, type: !264, isLocal: false, isDefinition: true, align: 32)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "s8", scope: !27, file: !114, line: 137, type: !264, isLocal: false, isDefinition: true, align: 32)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !27, file: !114, line: 216, type: !308, isLocal: false, isDefinition: true, align: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !309)
!309 = !{!310, !311, !319, !320, !325, !326, !327, !328, !329, !330, !332, !336}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !308, file: !137, line: 621, baseType: !161, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !308, file: !137, line: 622, baseType: !312, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !315)
!314 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{!318}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !315, file: !316, line: 48, baseType: !278, size: 8)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !308, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !308, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !314, line: 46, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null, !102, !102, !102}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !308, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !308, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !308, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !308, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !308, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !308, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !308, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DISubroutineType(types: !335)
!335 = !{null}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !308, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !27, file: !114, line: 216, type: !341, isLocal: false, isDefinition: true)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !161)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !27, file: !114, line: 216, type: !345, isLocal: false, isDefinition: true, align: 512)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 8704, elements: !346)
!346 = !{!347}
!347 = !DISubrange(count: 1088)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !27, file: !114, line: 216, type: !162, isLocal: false, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "_zbus_message_bm_channel", scope: !27, file: !114, line: 16, type: !352, isLocal: true, isDefinition: true)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !353, line: 10, size: 64, elements: !354)
!353 = !DIFile(filename: "zephyr/samples/subsys/zbus/benchmark/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !356}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !352, file: !353, line: 11, baseType: !102, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !352, file: !353, line: 12, baseType: !132, size: 32, offset: 32)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "_zbus_observers_bm_channel", scope: !27, file: !114, line: 16, type: !359, isLocal: true, isDefinition: true)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 288, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 9)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !114, line: 44, type: !109, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !366, file: !381, line: 18, type: !382, isLocal: false, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !368, globals: !380, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!368 = !{!22, !102, !24, !369, !371, !373, !132, !103, !374, !375, !377, !378, !277, !379, !121, !337}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!380 = !{!364}
!381 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !384, line: 17, baseType: !337, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !383, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(name: "_char_out", scope: !390, file: !394, line: 54, type: !395, isLocal: false, isDefinition: true)
!390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !391, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !393, splitDebugInlining: false, nameTableKind: None)
!391 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!392 = !{!102, !103}
!393 = !{!388}
!394 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DISubroutineType(types: !397)
!397 = !{!103, !103}
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !400, file: !417, line: 56, type: !418, isLocal: true, isDefinition: true, align: 32)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !402, globals: !416, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 407, baseType: !406)
!405 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 398, size: 224, elements: !407)
!407 = !{!408, !410, !411, !412, !413, !414, !415}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !406, file: !405, line: 400, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !406, file: !405, line: 401, baseType: !409, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !406, file: !405, line: 402, baseType: !409, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !406, file: !405, line: 403, baseType: !409, size: 32, offset: 96)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !406, file: !405, line: 404, baseType: !409, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !406, file: !405, line: 405, baseType: !409, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !406, file: !405, line: 406, baseType: !409, size: 32, offset: 192)
!416 = !{!398}
!417 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !447}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !419, file: !420, line: 60, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DISubroutineType(types: !425)
!425 = !{!103, !426}
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !430)
!429 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!430 = !{!431, !432, !433, !434, !440, !441}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !429, line: 380, baseType: !337, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !428, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !428, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !428, file: !429, line: 386, baseType: !435, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 32)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !436, file: !429, line: 359, baseType: !185, size: 8)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !436, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !428, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !428, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !429, line: 43, baseType: !445)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !446)
!446 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !419, file: !420, line: 65, baseType: !426, size: 32, offset: 32)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !450, file: !453, line: 71, type: !454, isLocal: true, isDefinition: true, align: 32)
!450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !452, splitDebugInlining: false, nameTableKind: None)
!451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!452 = !{!448}
!453 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !456)
!456 = !{!457, !476}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !455, file: !420, line: 60, baseType: !458, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DISubroutineType(types: !460)
!460 = !{!103, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !464)
!464 = !{!465, !466, !467, !468, !474, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !463, file: !429, line: 380, baseType: !337, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !463, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !463, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !463, file: !429, line: 386, baseType: !469, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !471)
!471 = !{!472, !473}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !470, file: !429, line: 359, baseType: !185, size: 8)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !470, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !463, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !463, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !455, file: !420, line: 65, baseType: !461, size: 32, offset: 32)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !479, file: !486, line: 17, type: !612, isLocal: false, isDefinition: true)
!479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !481, globals: !482, splitDebugInlining: false, nameTableKind: None)
!480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!481 = !{!132, !103, !108, !102}
!482 = !{!477, !483, !608}
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !485, file: !486, line: 198, type: !594, isLocal: true, isDefinition: true)
!485 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !486, file: !486, line: 175, type: !487, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !589)
!486 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!487 = !DISubroutineType(types: !488)
!488 = !{null, !489}
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !491)
!491 = !{!492, !550, !562, !563, !564, !565, !571, !584}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !490, file: !163, line: 247, baseType: !493, size: 384)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !494)
!494 = !{!495, !519, !526, !527, !528, !537, !538, !539}
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 60, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 60, size: 64, elements: !497)
!497 = !{!498, !513}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !496, file: !163, line: 61, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !501)
!501 = !{!502, !508}
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 38, baseType: !503, size: 32)
!503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 38, size: 32, elements: !504)
!504 = !{!505, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !503, file: !146, line: 39, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !503, file: !146, line: 40, baseType: !506, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !146, line: 42, baseType: !509, size: 32, offset: 32)
!509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !146, line: 42, size: 32, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !509, file: !146, line: 43, baseType: !506, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !509, file: !146, line: 44, baseType: !506, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !496, file: !163, line: 62, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !514, file: !175, line: 50, baseType: !517, size: 64)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 64, elements: !180)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !493, file: !163, line: 68, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !522, file: !141, line: 232, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !500)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !493, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !493, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!528 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !163, line: 90, baseType: !529, size: 16, offset: 112)
!529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !163, line: 90, size: 16, elements: !530)
!530 = !{!531, !536}
!531 = !DIDerivedType(tag: DW_TAG_member, scope: !529, file: !163, line: 91, baseType: !532, size: 16)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !529, file: !163, line: 91, size: 16, elements: !533)
!533 = !{!534, !535}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !532, file: !163, line: 96, baseType: !195, size: 8)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !532, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !529, file: !163, line: 100, baseType: !121, size: 16)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !493, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !493, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !493, file: !163, line: 131, baseType: !540, size: 192, offset: 192)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !541)
!541 = !{!542, !543, !549}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !540, file: !141, line: 245, baseType: !499, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !540, file: !141, line: 246, baseType: !544, size: 32, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 32)
!546 = !DISubroutineType(types: !547)
!547 = !{null, !548}
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !540, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !490, file: !163, line: 250, baseType: !551, size: 288, offset: 384)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !552)
!552 = !{!553, !554, !555, !556, !557, !558, !559, !560, !561}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !551, file: !214, line: 26, baseType: !108, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !551, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !551, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !551, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !551, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !551, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !551, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !551, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !551, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !490, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !490, file: !163, line: 256, baseType: !521, size: 64, offset: 704)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !490, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !490, file: !163, line: 300, baseType: !566, size: 96, offset: 800)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !566, file: !163, line: 153, baseType: !22, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !566, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !566, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !490, file: !163, line: 325, baseType: !572, size: 32, offset: 896)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !574)
!574 = !{!575, !581, !582}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !573, file: !137, line: 5074, baseType: !576, size: 96)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !577)
!577 = !{!578, !579, !580}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !576, file: !240, line: 57, baseType: !243, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !576, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !576, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !573, file: !137, line: 5075, baseType: !521, size: 64, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !573, file: !137, line: 5076, baseType: !583, offset: 160)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !490, file: !163, line: 343, baseType: !585, size: 64, offset: 928)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !585, file: !214, line: 63, baseType: !108, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !585, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!589 = !{!590, !591, !592, !593}
!590 = !DILocalVariable(name: "thread", arg: 1, scope: !485, file: !486, line: 175, type: !489)
!591 = !DILocalVariable(name: "region_num", scope: !485, file: !486, line: 200, type: !185)
!592 = !DILocalVariable(name: "guard_start", scope: !485, file: !486, line: 265, type: !22)
!593 = !DILocalVariable(name: "guard_size", scope: !485, file: !486, line: 266, type: !132)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 96, elements: !606)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !597)
!596 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!597 = !{!598, !599, !600}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !595, file: !596, line: 53, baseType: !22, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !595, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !595, file: !596, line: 55, baseType: !601, size: 32, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !603)
!602 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !603, file: !602, line: 150, baseType: !108, size: 32)
!606 = !{!607}
!607 = !DISubrange(count: 1)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "static_regions", scope: !479, file: !486, line: 62, type: !610, isLocal: true, isDefinition: true)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 96, elements: !606)
!611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !613, file: !384, line: 17, baseType: !337, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !613, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !619, file: !652, line: 39, type: !185, isLocal: true, isDefinition: true)
!619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !621, globals: !651, splitDebugInlining: false, nameTableKind: None)
!620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!621 = !{!622, !102, !103, !639, !185}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !624, line: 1226, baseType: !625)
!624 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 1213, size: 352, elements: !626)
!626 = !{!627, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !625, file: !624, line: 1215, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !625, file: !624, line: 1216, baseType: !409, size: 32, offset: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !625, file: !624, line: 1217, baseType: !409, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !625, file: !624, line: 1218, baseType: !409, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !625, file: !624, line: 1219, baseType: !409, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !625, file: !624, line: 1220, baseType: !409, size: 32, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !625, file: !624, line: 1221, baseType: !409, size: 32, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !625, file: !624, line: 1222, baseType: !409, size: 32, offset: 224)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !625, file: !624, line: 1223, baseType: !409, size: 32, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !625, file: !624, line: 1224, baseType: !409, size: 32, offset: 288)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !625, file: !624, line: 1225, baseType: !409, size: 32, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !643)
!642 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!643 = !{!644, !645, !646}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !641, file: !642, line: 29, baseType: !108, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !641, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !641, file: !642, line: 37, baseType: !647, size: 32, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !648, file: !602, line: 143, baseType: !108, size: 32)
!651 = !{!617}
!652 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !655, file: !662, line: 21, type: !395, isLocal: true, isDefinition: true)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !656, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !657, globals: !661, splitDebugInlining: false, nameTableKind: None)
!656 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!657 = !{!658, !103, !102}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !660, line: 22, baseType: !103)
!660 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!661 = !{!653}
!662 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !665, file: !670, line: 13, type: !687, isLocal: true, isDefinition: true)
!665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !667, splitDebugInlining: false, nameTableKind: None)
!666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!667 = !{!668, !663}
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "mpu_config", scope: !665, file: !670, line: 37, type: !671, isLocal: false, isDefinition: true)
!670 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !642, line: 41, size: 64, elements: !673)
!673 = !{!674, !675}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !672, file: !642, line: 43, baseType: !108, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !672, file: !642, line: 45, baseType: !676, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !642, line: 27, size: 96, elements: !679)
!679 = !{!680, !681, !682}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !678, file: !642, line: 29, baseType: !108, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !678, file: !642, line: 31, baseType: !337, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !678, file: !642, line: 37, baseType: !683, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !602, line: 146, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !602, line: 141, size: 32, elements: !685)
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !684, file: !602, line: 143, baseType: !108, size: 32)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, size: 192, elements: !180)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !690, file: !694, line: 10, type: !695, isLocal: false, isDefinition: true)
!690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !692, globals: !693, splitDebugInlining: false, nameTableKind: None)
!691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!692 = !{!104, !102, !103}
!693 = !{!688}
!694 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !384, line: 17, baseType: !337, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !696, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !702, file: !815, line: 72, type: !898, isLocal: true, isDefinition: true)
!702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !704, retainedTypes: !801, globals: !812, splitDebugInlining: false, nameTableKind: None)
!703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!704 = !{!30, !705}
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 65, baseType: !103, size: 32, elements: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!707 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!708 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!709 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!710 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!711 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!712 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!713 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!714 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!715 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!716 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!717 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!718 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!719 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!720 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!721 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!722 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!723 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!724 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!725 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!726 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!727 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!728 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!729 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!730 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!731 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!732 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!733 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!734 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!735 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!736 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!737 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!738 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!739 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!740 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!741 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!742 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!743 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!744 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!745 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!746 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!747 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!748 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!749 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!750 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!751 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!752 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!753 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!754 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!755 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!756 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!757 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!758 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!759 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!760 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!761 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!762 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!763 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!764 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!765 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!766 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!767 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!768 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!769 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!770 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!771 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!772 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!773 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!774 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!775 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!776 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!777 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!778 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!779 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!780 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!781 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!782 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!783 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!784 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!785 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!786 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!787 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!788 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!789 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!790 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!791 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!792 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!793 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!794 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!795 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!796 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!797 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!798 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!799 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!800 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!801 = !{!132, !103, !102, !802}
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !405, line: 392, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 384, size: 192, elements: !805)
!805 = !{!806, !807, !808, !809, !810, !811}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !804, file: !405, line: 386, baseType: !409, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !804, file: !405, line: 387, baseType: !409, size: 32, offset: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !804, file: !405, line: 388, baseType: !409, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !804, file: !405, line: 389, baseType: !409, size: 32, offset: 96)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !804, file: !405, line: 390, baseType: !409, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !804, file: !405, line: 391, baseType: !409, size: 32, offset: 160)
!812 = !{!813, !819, !835, !846, !863, !700, !865, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896}
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !702, file: !815, line: 424, type: !816, isLocal: false, isDefinition: true, align: 16)
!815 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 64, elements: !817)
!817 = !{!818}
!818 = !DISubrange(count: 4)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !702, file: !815, line: 424, type: !821, isLocal: false, isDefinition: true, align: 32)
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !823)
!823 = !{!824, !825, !826, !827, !833, !834}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !822, file: !429, line: 380, baseType: !337, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !822, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !822, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !822, file: !429, line: 386, baseType: !828, size: 32, offset: 96)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !829, file: !429, line: 359, baseType: !185, size: 8)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !829, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !822, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !822, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !702, file: !815, line: 424, type: !837, isLocal: true, isDefinition: true, align: 32)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !839)
!839 = !{!840, !845}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !838, file: !420, line: 60, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!103, !844}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !838, file: !420, line: 65, baseType: !844, size: 32, offset: 32)
!846 = !DIGlobalVariableExpression(var: !847, expr: !DIExpression())
!847 = distinct !DIGlobalVariable(name: "exti_data", scope: !702, file: !815, line: 423, type: !848, isLocal: true, isDefinition: true)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !815, line: 107, size: 1472, elements: !849)
!849 = !{!850}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !848, file: !815, line: 109, baseType: !851, size: 1472)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 1472, elements: !861)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !815, line: 101, size: 64, elements: !853)
!853 = !{!854, !860}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !852, file: !815, line: 102, baseType: !855, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !856, line: 63, baseType: !857)
!856 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !103, !102}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !852, file: !815, line: 103, baseType: !102, size: 32, offset: 32)
!861 = !{!862}
!862 = !DISubrange(count: 23)
!863 = !DIGlobalVariableExpression(var: !864, expr: !DIExpression())
!864 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !702, file: !815, line: 424, type: !829, isLocal: true, isDefinition: true, align: 8)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !867, file: !815, line: 493, type: !872, isLocal: true, isDefinition: true, align: 32)
!867 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !815, file: !815, line: 460, type: !868, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !870)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !844}
!870 = !{!871}
!871 = !DILocalVariable(name: "dev", arg: 1, scope: !867, file: !815, line: 460, type: !844)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !873)
!873 = !{!874, !875, !876, !877}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !872, file: !10, line: 55, baseType: !331, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !872, file: !10, line: 57, baseType: !331, size: 32, offset: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !872, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !872, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !867, file: !815, line: 497, type: !872, isLocal: true, isDefinition: true, align: 32)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !867, file: !815, line: 507, type: !872, isLocal: true, isDefinition: true, align: 32)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !867, file: !815, line: 512, type: !872, isLocal: true, isDefinition: true, align: 32)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !867, file: !815, line: 516, type: !872, isLocal: true, isDefinition: true, align: 32)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !867, file: !815, line: 523, type: !872, isLocal: true, isDefinition: true, align: 32)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !867, file: !815, line: 527, type: !872, isLocal: true, isDefinition: true, align: 32)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !867, file: !815, line: 581, type: !872, isLocal: true, isDefinition: true, align: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !867, file: !815, line: 586, type: !872, isLocal: true, isDefinition: true, align: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !867, file: !815, line: 591, type: !872, isLocal: true, isDefinition: true, align: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !867, file: !815, line: 595, type: !872, isLocal: true, isDefinition: true, align: 32)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 736, elements: !861)
!899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !405, line: 163, baseType: !705)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !903, file: !908, line: 25, type: !936, isLocal: false, isDefinition: true, align: 16)
!903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !905, splitDebugInlining: false, nameTableKind: None)
!904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!905 = !{!906, !901, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930, !932, !934}
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !903, file: !908, line: 20, type: !909, isLocal: false, isDefinition: true, align: 16)
!908 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 240, elements: !910)
!910 = !{!911}
!911 = !DISubrange(count: 15)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !903, file: !908, line: 32, type: !816, isLocal: false, isDefinition: true, align: 16)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !903, file: !908, line: 39, type: !816, isLocal: false, isDefinition: true, align: 16)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !903, file: !908, line: 46, type: !816, isLocal: false, isDefinition: true, align: 16)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !903, file: !908, line: 53, type: !816, isLocal: false, isDefinition: true, align: 16)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !903, file: !908, line: 60, type: !816, isLocal: false, isDefinition: true, align: 16)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !903, file: !908, line: 67, type: !816, isLocal: false, isDefinition: true, align: 16)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !903, file: !908, line: 74, type: !816, isLocal: false, isDefinition: true, align: 16)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !903, file: !908, line: 81, type: !816, isLocal: false, isDefinition: true, align: 16)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !903, file: !908, line: 88, type: !816, isLocal: false, isDefinition: true, align: 16)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !903, file: !908, line: 95, type: !816, isLocal: false, isDefinition: true, align: 16)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !903, file: !908, line: 102, type: !816, isLocal: false, isDefinition: true, align: 16)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !903, file: !908, line: 109, type: !816, isLocal: false, isDefinition: true, align: 16)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 48, elements: !937)
!937 = !{!938}
!938 = !DISubrange(count: 3)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !941, file: !1006, line: 398, type: !1039, isLocal: true, isDefinition: true)
!941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !943, retainedTypes: !956, globals: !1003, splitDebugInlining: false, nameTableKind: None)
!942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!943 = !{!944, !30, !949}
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !945, line: 197, baseType: !32, size: 32, elements: !946)
!945 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!946 = !{!947, !948}
!947 = !DIEnumerator(name: "SUCCESS", value: 0)
!948 = !DIEnumerator(name: "ERROR", value: 1)
!949 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !950, line: 44, baseType: !32, size: 32, elements: !951)
!950 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!951 = !{!952, !953, !954, !955}
!952 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!953 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!954 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!955 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!956 = !{!102, !103, !108, !957, !996, !1002}
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 586, baseType: !959)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 550, size: 1216, elements: !960)
!960 = !{!961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !959, file: !405, line: 552, baseType: !409, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !959, file: !405, line: 553, baseType: !409, size: 32, offset: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !959, file: !405, line: 554, baseType: !409, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !959, file: !405, line: 555, baseType: !409, size: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !959, file: !405, line: 556, baseType: !409, size: 32, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !959, file: !405, line: 557, baseType: !409, size: 32, offset: 160)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !959, file: !405, line: 558, baseType: !409, size: 32, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !959, file: !405, line: 559, baseType: !108, size: 32, offset: 224)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !959, file: !405, line: 560, baseType: !409, size: 32, offset: 256)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !959, file: !405, line: 561, baseType: !409, size: 32, offset: 288)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !959, file: !405, line: 562, baseType: !972, size: 64, offset: 320)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !180)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !959, file: !405, line: 563, baseType: !409, size: 32, offset: 384)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !959, file: !405, line: 564, baseType: !409, size: 32, offset: 416)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !959, file: !405, line: 565, baseType: !409, size: 32, offset: 448)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !959, file: !405, line: 566, baseType: !108, size: 32, offset: 480)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !959, file: !405, line: 567, baseType: !409, size: 32, offset: 512)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !959, file: !405, line: 568, baseType: !409, size: 32, offset: 544)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !959, file: !405, line: 569, baseType: !972, size: 64, offset: 576)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !959, file: !405, line: 570, baseType: !409, size: 32, offset: 640)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !959, file: !405, line: 571, baseType: !409, size: 32, offset: 672)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !959, file: !405, line: 572, baseType: !409, size: 32, offset: 704)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !959, file: !405, line: 573, baseType: !108, size: 32, offset: 736)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !959, file: !405, line: 574, baseType: !409, size: 32, offset: 768)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !959, file: !405, line: 575, baseType: !409, size: 32, offset: 800)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !959, file: !405, line: 576, baseType: !972, size: 64, offset: 832)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !959, file: !405, line: 577, baseType: !409, size: 32, offset: 896)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !959, file: !405, line: 578, baseType: !409, size: 32, offset: 928)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !959, file: !405, line: 579, baseType: !972, size: 64, offset: 960)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !959, file: !405, line: 580, baseType: !409, size: 32, offset: 1024)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !959, file: !405, line: 581, baseType: !409, size: 32, offset: 1056)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !959, file: !405, line: 582, baseType: !409, size: 32, offset: 1088)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !959, file: !405, line: 583, baseType: !409, size: 32, offset: 1120)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !959, file: !405, line: 584, baseType: !409, size: 32, offset: 1152)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !959, file: !405, line: 585, baseType: !409, size: 32, offset: 1184)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !998, line: 343, size: 64, elements: !999)
!998 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!999 = !{!1000, !1001}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !997, file: !998, line: 344, baseType: !108, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !997, file: !998, line: 345, baseType: !108, size: 32, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1003 = !{!1004, !1010, !1026, !1037, !939}
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !941, file: !1006, line: 752, type: !1007, isLocal: false, isDefinition: true, align: 16)
!1006 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 800, elements: !1008)
!1008 = !{!1009}
!1009 = !DISubrange(count: 50)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !941, file: !1006, line: 752, type: !1012, isLocal: false, isDefinition: true, align: 32)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1024, !1025}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1013, file: !429, line: 380, baseType: !337, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1013, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1013, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1013, file: !429, line: 386, baseType: !1019, size: 32, offset: 96)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1020, file: !429, line: 359, baseType: !185, size: 8)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1020, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1013, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1013, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !941, file: !1006, line: 752, type: !1028, isLocal: true, isDefinition: true, align: 32)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1030)
!1030 = !{!1031, !1036}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1029, file: !420, line: 60, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!103, !1035}
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1029, file: !420, line: 65, baseType: !1035, size: 32, offset: 32)
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !941, file: !1006, line: 752, type: !1020, isLocal: true, isDefinition: true, align: 8)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !950, line: 100, size: 224, elements: !1040)
!1040 = !{!1041, !1047, !1048, !1057, !1062, !1067, !1073}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1039, file: !950, line: 101, baseType: !1042, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !950, line: 76, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!103, !1035, !1046}
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !950, line: 56, baseType: !102)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1039, file: !950, line: 102, baseType: !1042, size: 32, offset: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1039, file: !950, line: 103, baseType: !1049, size: 32, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !950, line: 83, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!103, !1035, !1046, !1053, !102}
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !950, line: 72, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1035, !1046, !102}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1039, file: !950, line: 104, baseType: !1058, size: 32, offset: 96)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !950, line: 79, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!103, !1035, !1046, !1002}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1039, file: !950, line: 105, baseType: !1063, size: 32, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !950, line: 88, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!949, !1035, !1046}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1039, file: !950, line: 106, baseType: !1068, size: 32, offset: 160)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !950, line: 92, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!103, !1035, !1046, !1072}
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !950, line: 64, baseType: !102)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1039, file: !950, line: 107, baseType: !1074, size: 32, offset: 192)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !950, line: 96, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!103, !1035, !1046, !102}
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1080, file: !1137, line: 603, type: !1139, isLocal: true, isDefinition: true, align: 32)
!1080 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1081, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1082, globals: !1134, splitDebugInlining: false, nameTableKind: None)
!1081 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1082 = !{!102, !103, !1083}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1085)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1086, line: 336, size: 160, elements: !1087)
!1086 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1087 = !{!1088, !1108, !1112, !1116, !1129}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1085, file: !1086, line: 365, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!103, !1092, !1107}
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099, !1105, !1106}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1094, file: !429, line: 380, baseType: !337, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1094, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1094, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1094, file: !429, line: 386, baseType: !1100, size: 32, offset: 96)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1101, file: !429, line: 359, baseType: !185, size: 8)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1101, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1094, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1094, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1085, file: !1086, line: 366, baseType: !1109, size: 32, offset: 32)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1092, !186}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1085, file: !1086, line: 374, baseType: !1113, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!103, !1092}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1085, file: !1086, line: 377, baseType: !1117, size: 32, offset: 96)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!103, !1092, !1120}
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1086, line: 122, size: 64, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1122, file: !1086, line: 123, baseType: !108, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1122, file: !1086, line: 124, baseType: !185, size: 8, offset: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1122, file: !1086, line: 125, baseType: !185, size: 8, offset: 40)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1122, file: !1086, line: 126, baseType: !185, size: 8, offset: 48)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1122, file: !1086, line: 127, baseType: !185, size: 8, offset: 56)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1085, file: !1086, line: 379, baseType: !1130, size: 32, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!103, !1092, !1133}
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1134 = !{!1078, !1135}
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1080, file: !1137, line: 38, type: !1138, isLocal: true, isDefinition: true)
!1137 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1092)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1141)
!1141 = !{!1142, !1143}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1140, file: !420, line: 60, baseType: !1113, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1140, file: !420, line: 65, baseType: !1092, size: 32, offset: 32)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1146, file: !1317, line: 762, type: !1424, isLocal: true, isDefinition: true)
!1146 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1147, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1148, retainedTypes: !1166, globals: !1314, splitDebugInlining: false, nameTableKind: None)
!1147 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1148 = !{!30, !1149, !1155, !1160, !949}
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1150, line: 506, baseType: !32, size: 32, elements: !1151)
!1150 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1151 = !{!1152, !1153, !1154}
!1152 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1153 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1154 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1150, line: 512, baseType: !32, size: 32, elements: !1156)
!1156 = !{!1157, !1158, !1159}
!1157 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1158 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1159 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !856, line: 43, baseType: !32, size: 32, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165}
!1162 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1163 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1164 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1165 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1166 = !{!102, !103, !1167, !1237, !1242, !1202, !1155, !1149, !1247, !1248, !108, !1262, !1217, !277, !1274, !1275}
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1150, line: 523, size: 288, elements: !1170)
!1170 = !{!1171, !1192, !1198, !1203, !1207, !1208, !1209, !1213, !1233}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1169, file: !1150, line: 524, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!103, !1175, !1190, !1191}
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1188, !1189}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1177, file: !429, line: 380, baseType: !337, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1177, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1177, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1177, file: !429, line: 386, baseType: !1183, size: 32, offset: 96)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1185)
!1185 = !{!1186, !1187}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1184, file: !429, line: 359, baseType: !185, size: 8)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1184, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1177, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1177, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1150, line: 237, baseType: !185)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1150, line: 257, baseType: !108)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1169, file: !1150, line: 530, baseType: !1193, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!103, !1175, !1196}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1150, line: 229, baseType: !108)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1169, file: !1150, line: 532, baseType: !1199, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!103, !1175, !1202, !1197}
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1150, line: 216, baseType: !108)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1169, file: !1150, line: 535, baseType: !1204, size: 32, offset: 96)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!103, !1175, !1202}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1169, file: !1150, line: 537, baseType: !1204, size: 32, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1169, file: !1150, line: 539, baseType: !1204, size: 32, offset: 160)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1169, file: !1150, line: 541, baseType: !1210, size: 32, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!103, !1175, !1190, !1149, !1155}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1169, file: !1150, line: 544, baseType: !1214, size: 32, offset: 224)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!103, !1175, !1217, !131}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1150, line: 478, size: 96, elements: !1219)
!1219 = !{!1220, !1227, !1232}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1218, file: !1150, line: 482, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1222, line: 33, baseType: !1223)
!1222 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1222, line: 29, size: 32, elements: !1224)
!1224 = !{!1225}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1223, file: !1222, line: 30, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1218, file: !1150, line: 485, baseType: !1228, size: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1150, line: 464, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{null, !1175, !1217, !1202}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1218, file: !1150, line: 493, baseType: !1202, size: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1169, file: !1150, line: 547, baseType: !1234, size: 32, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!108, !1175}
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1150, line: 428, size: 32, elements: !1240)
!1240 = !{!1241}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1239, file: !1150, line: 434, baseType: !1202, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1150, line: 441, size: 32, elements: !1245)
!1245 = !{!1246}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1244, file: !1150, line: 447, baseType: !1202, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !405, line: 469, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 458, size: 320, elements: !1251)
!1251 = !{!1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1250, file: !405, line: 460, baseType: !409, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1250, file: !405, line: 461, baseType: !409, size: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1250, file: !405, line: 462, baseType: !409, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1250, file: !405, line: 463, baseType: !409, size: 32, offset: 96)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1250, file: !405, line: 464, baseType: !409, size: 32, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1250, file: !405, line: 465, baseType: !409, size: 32, offset: 160)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1250, file: !405, line: 466, baseType: !409, size: 32, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1250, file: !405, line: 467, baseType: !409, size: 32, offset: 224)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1250, file: !405, line: 468, baseType: !1261, size: 64, offset: 256)
!1261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !180)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !405, line: 484, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 475, size: 384, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1270, !1271, !1272, !1273}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1264, file: !405, line: 477, baseType: !409, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1264, file: !405, line: 478, baseType: !409, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1264, file: !405, line: 479, baseType: !1269, size: 128, offset: 64)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 128, elements: !817)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1264, file: !405, line: 480, baseType: !972, size: 64, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1264, file: !405, line: 481, baseType: !409, size: 32, offset: 256)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1264, file: !405, line: 482, baseType: !972, size: 64, offset: 288)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1264, file: !405, line: 483, baseType: !409, size: 32, offset: 352)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !950, line: 100, size: 224, elements: !1278)
!1278 = !{!1279, !1284, !1285, !1294, !1299, !1304, !1309}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1277, file: !950, line: 101, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !950, line: 76, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!103, !1175, !1046}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1277, file: !950, line: 102, baseType: !1280, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1277, file: !950, line: 103, baseType: !1286, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !950, line: 83, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!103, !1175, !1046, !1290, !102}
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !950, line: 72, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{null, !1175, !1046, !102}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1277, file: !950, line: 104, baseType: !1295, size: 32, offset: 96)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !950, line: 79, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!103, !1175, !1046, !1002}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1277, file: !950, line: 105, baseType: !1300, size: 32, offset: 128)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !950, line: 88, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!949, !1175, !1046}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1277, file: !950, line: 106, baseType: !1305, size: 32, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !950, line: 92, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!103, !1175, !1046, !1072}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1277, file: !950, line: 107, baseType: !1310, size: 32, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !950, line: 96, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!103, !1175, !1046, !102}
!1314 = !{!1315, !1321, !1323, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1348, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1414, !1416, !1418, !1144, !1420, !1422, !1435, !1437, !1439, !1441, !1443, !1445}
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1146, file: !1317, line: 762, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1317 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 80, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 5)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1146, file: !1317, line: 762, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1146, file: !1317, line: 762, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1327)
!1327 = !{!1328, !1332}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1326, file: !420, line: 60, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!103, !1175}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1326, file: !420, line: 65, baseType: !1175, size: 32, offset: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1146, file: !1317, line: 766, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1146, file: !1317, line: 766, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1146, file: !1317, line: 766, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1146, file: !1317, line: 770, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1146, file: !1317, line: 770, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1146, file: !1317, line: 770, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1146, file: !1317, line: 774, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 144, elements: !360)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1146, file: !1317, line: 774, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1146, file: !1317, line: 774, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1146, file: !1317, line: 778, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1146, file: !1317, line: 778, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1146, file: !1317, line: 778, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1146, file: !1317, line: 782, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1146, file: !1317, line: 782, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1146, file: !1317, line: 782, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1146, file: !1317, line: 786, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1146, file: !1317, line: 786, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1146, file: !1317, line: 786, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1146, file: !1317, line: 790, type: !1318, isLocal: false, isDefinition: true, align: 16)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1146, file: !1317, line: 790, type: !1176, isLocal: false, isDefinition: true, align: 32)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1146, file: !1317, line: 790, type: !1325, isLocal: true, isDefinition: true, align: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1146, file: !1317, line: 762, type: !1378, isLocal: true, isDefinition: true)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1379, line: 237, size: 128, elements: !1380)
!1379 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1378, file: !1379, line: 239, baseType: !1244, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1378, file: !1379, line: 241, baseType: !1175, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1378, file: !1379, line: 243, baseType: !1384, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1222, line: 40, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1222, line: 35, size: 64, elements: !1386)
!1386 = !{!1387, !1389}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1385, file: !1222, line: 36, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1385, file: !1222, line: 37, baseType: !1388, size: 32, offset: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1146, file: !1317, line: 762, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1146, file: !1317, line: 766, type: !1378, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1146, file: !1317, line: 766, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1146, file: !1317, line: 770, type: !1378, isLocal: true, isDefinition: true)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1146, file: !1317, line: 770, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1146, file: !1317, line: 774, type: !1378, isLocal: true, isDefinition: true)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1146, file: !1317, line: 774, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1146, file: !1317, line: 778, type: !1378, isLocal: true, isDefinition: true)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1146, file: !1317, line: 778, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1146, file: !1317, line: 782, type: !1378, isLocal: true, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1146, file: !1317, line: 782, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1146, file: !1317, line: 786, type: !1378, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1146, file: !1317, line: 786, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1146, file: !1317, line: 790, type: !1378, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1146, file: !1317, line: 790, type: !1184, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1146, file: !1317, line: 656, type: !1168, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1146, file: !1317, line: 766, type: !1424, isLocal: true, isDefinition: true)
!1424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1379, line: 224, size: 160, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1425, file: !1379, line: 226, baseType: !1239, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1425, file: !1379, line: 228, baseType: !1002, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1425, file: !1379, line: 230, baseType: !103, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1425, file: !1379, line: 231, baseType: !1431, size: 64, offset: 96)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !998, line: 343, size: 64, elements: !1432)
!1432 = !{!1433, !1434}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1431, file: !998, line: 344, baseType: !108, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1431, file: !998, line: 345, baseType: !108, size: 32, offset: 32)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1146, file: !1317, line: 770, type: !1424, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1146, file: !1317, line: 774, type: !1424, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1146, file: !1317, line: 778, type: !1424, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1146, file: !1317, line: 782, type: !1424, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1146, file: !1317, line: 786, type: !1424, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1146, file: !1317, line: 790, type: !1424, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1449, file: !1588, line: 44, type: !1726, isLocal: false, isDefinition: true)
!1449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1450, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1451, retainedTypes: !1484, globals: !1585, splitDebugInlining: false, nameTableKind: None)
!1450 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1451 = !{!30, !1452, !1459, !1466, !1473, !1479, !949}
!1452 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1086, line: 47, baseType: !32, size: 32, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458}
!1454 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1455 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1456 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1457 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1458 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1086, line: 75, baseType: !32, size: 32, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1464, !1465}
!1461 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1462 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1463 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1464 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1465 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1466 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1086, line: 92, baseType: !32, size: 32, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472}
!1468 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1469 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1470 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1471 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1472 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1086, line: 84, baseType: !32, size: 32, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478}
!1475 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1476 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1477 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1478 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1479 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1086, line: 107, baseType: !32, size: 32, elements: !1480)
!1480 = !{!1481, !1482, !1483}
!1481 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1482 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1483 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1484 = !{!102, !103, !1485, !186, !185, !1534, !108, !1046, !1545, !121, !109, !1584}
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1086, line: 336, size: 160, elements: !1488)
!1488 = !{!1489, !1508, !1512, !1516, !1529}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1487, file: !1086, line: 365, baseType: !1490, size: 32)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!103, !1493, !1107}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1506, !1507}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1495, file: !429, line: 380, baseType: !337, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1495, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1495, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1495, file: !429, line: 386, baseType: !1501, size: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1502, file: !429, line: 359, baseType: !185, size: 8)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1502, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1495, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1495, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1487, file: !1086, line: 366, baseType: !1509, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{null, !1493, !186}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1487, file: !1086, line: 374, baseType: !1513, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!103, !1493}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1487, file: !1086, line: 377, baseType: !1517, size: 32, offset: 96)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DISubroutineType(types: !1519)
!1519 = !{!103, !1493, !1520}
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1086, line: 122, size: 64, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1522, file: !1086, line: 123, baseType: !108, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1522, file: !1086, line: 124, baseType: !185, size: 8, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1522, file: !1086, line: 125, baseType: !185, size: 8, offset: 40)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1522, file: !1086, line: 126, baseType: !185, size: 8, offset: 48)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1522, file: !1086, line: 127, baseType: !185, size: 8, offset: 56)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1487, file: !1086, line: 379, baseType: !1530, size: 32, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!103, !1493, !1533}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !405, line: 783, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 774, size: 224, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1536, file: !405, line: 776, baseType: !409, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1536, file: !405, line: 777, baseType: !409, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1536, file: !405, line: 778, baseType: !409, size: 32, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1536, file: !405, line: 779, baseType: !409, size: 32, offset: 96)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1536, file: !405, line: 780, baseType: !409, size: 32, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1536, file: !405, line: 781, baseType: !409, size: 32, offset: 160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1536, file: !405, line: 782, baseType: !409, size: 32, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !950, line: 100, size: 224, elements: !1548)
!1548 = !{!1549, !1554, !1555, !1564, !1569, !1574, !1579}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1547, file: !950, line: 101, baseType: !1550, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !950, line: 76, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!103, !1493, !1046}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1547, file: !950, line: 102, baseType: !1550, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1547, file: !950, line: 103, baseType: !1556, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !950, line: 83, baseType: !1557)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!103, !1493, !1046, !1560, !102}
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !950, line: 72, baseType: !1561)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{null, !1493, !1046, !102}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1547, file: !950, line: 104, baseType: !1565, size: 32, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !950, line: 79, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{!103, !1493, !1046, !1002}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1547, file: !950, line: 105, baseType: !1570, size: 32, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !950, line: 88, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!949, !1493, !1046}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1547, file: !950, line: 106, baseType: !1575, size: 32, offset: 160)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !950, line: 92, baseType: !1576)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!103, !1493, !1046, !1072}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1547, file: !950, line: 107, baseType: !1580, size: 32, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !950, line: 96, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!103, !1493, !1046, !102}
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!1585 = !{!1447, !1586, !1592, !1594, !1601, !1603, !1605, !1607, !1609, !1611, !1613, !1615, !1617, !1619, !1621, !1623, !1625, !1627, !1671, !1674, !1676, !1679, !1682, !1684, !1690, !1692, !1694, !1696, !1698, !1700, !1702, !1704, !1706, !1708, !1710, !1712, !1714, !1716, !1718, !1720, !1722, !1724}
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1588 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 128, elements: !1590)
!1590 = !{!1591}
!1591 = !DISubrange(count: 8)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1597, file: !420, line: 60, baseType: !1513, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1597, file: !420, line: 65, baseType: !1493, size: 32, offset: 32)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1609 = !DIGlobalVariableExpression(var: !1610, expr: !DIExpression())
!1610 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1449, file: !1588, line: 1914, type: !1589, isLocal: false, isDefinition: true, align: 16)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1449, file: !1588, line: 1914, type: !1494, isLocal: false, isDefinition: true, align: 32)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1449, file: !1588, line: 1914, type: !1596, isLocal: true, isDefinition: true, align: 32)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1449, file: !1588, line: 1914, type: !1502, isLocal: true, isDefinition: true, align: 8)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1449, file: !1588, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1631, line: 22, size: 224, elements: !1632)
!1631 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !{!1633, !1634, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1630, file: !1631, line: 24, baseType: !1534, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1630, file: !1631, line: 26, baseType: !1635, size: 32, offset: 32)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !998, line: 343, size: 64, elements: !1638)
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1637, file: !998, line: 344, baseType: !108, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1637, file: !998, line: 345, baseType: !108, size: 32, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1630, file: !1631, line: 28, baseType: !132, size: 32, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1630, file: !1631, line: 30, baseType: !131, size: 8, offset: 96)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1630, file: !1631, line: 32, baseType: !103, size: 32, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1630, file: !1631, line: 34, baseType: !131, size: 8, offset: 160)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1630, file: !1631, line: 36, baseType: !131, size: 8, offset: 168)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1630, file: !1631, line: 38, baseType: !131, size: 8, offset: 176)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1630, file: !1631, line: 40, baseType: !131, size: 8, offset: 184)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1630, file: !1631, line: 41, baseType: !1649, size: 32, offset: 192)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1651)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1652, line: 60, size: 64, elements: !1653)
!1652 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1653 = !{!1654, !1670}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1651, file: !1652, line: 69, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1652, line: 50, size: 64, elements: !1658)
!1658 = !{!1659, !1668, !1669}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1657, file: !1652, line: 52, baseType: !1660, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1663, line: 37, baseType: !1664)
!1663 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1663, line: 32, size: 64, elements: !1665)
!1665 = !{!1666, !1667}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1664, file: !1663, line: 34, baseType: !108, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1664, file: !1663, line: 36, baseType: !108, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1657, file: !1652, line: 54, baseType: !185, size: 8, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1657, file: !1652, line: 56, baseType: !185, size: 8, offset: 40)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1651, file: !1652, line: 71, baseType: !185, size: 8, offset: 32)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1636, size: 64, elements: !606)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1449, file: !1588, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1656, size: 64, elements: !606)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1449, file: !1588, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1661, size: 128, elements: !180)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1449, file: !1588, line: 1539, type: !1486, isLocal: true, isDefinition: true)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1449, file: !1588, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1631, line: 74, size: 64, elements: !1687)
!1687 = !{!1688, !1689}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1686, file: !1631, line: 76, baseType: !108, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1686, file: !1631, line: 78, baseType: !1493, size: 32, offset: 32)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1449, file: !1588, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1694 = !DIGlobalVariableExpression(var: !1695, expr: !DIExpression())
!1695 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1449, file: !1588, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1449, file: !1588, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1449, file: !1588, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1449, file: !1588, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1449, file: !1588, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1449, file: !1588, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1449, file: !1588, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1449, file: !1588, line: 1914, type: !1629, isLocal: true, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1449, file: !1588, line: 1914, type: !1673, isLocal: true, isDefinition: true)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1449, file: !1588, line: 1914, type: !1650, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1449, file: !1588, line: 1914, type: !1678, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1449, file: !1588, line: 1914, type: !1681, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1449, file: !1588, line: 1914, type: !1686, isLocal: true, isDefinition: true)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !1728)
!1728 = !{!1729, !1730}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1727, file: !384, line: 17, baseType: !337, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1727, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1733, file: !1811, line: 65, type: !409, isLocal: true, isDefinition: true)
!1733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1734, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1735, retainedTypes: !1736, globals: !1808, splitDebugInlining: false, nameTableKind: None)
!1734 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1735 = !{!705}
!1736 = !{!104, !1737, !331, !185, !108, !1745, !1776}
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1739, file: !624, line: 766, baseType: !409, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1739, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1739, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1739, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !1747)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !1748)
!1748 = !{!1749, !1751, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1766, !1771, !1775}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1747, file: !624, line: 413, baseType: !1750, size: 256)
!1750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 256, elements: !1590)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1747, file: !624, line: 414, baseType: !1752, size: 768, offset: 256)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !1753)
!1753 = !{!1754}
!1754 = !DISubrange(count: 24)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1747, file: !624, line: 415, baseType: !1750, size: 256, offset: 1024)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1747, file: !624, line: 416, baseType: !1752, size: 768, offset: 1280)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1747, file: !624, line: 417, baseType: !1750, size: 256, offset: 2048)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1747, file: !624, line: 418, baseType: !1752, size: 768, offset: 2304)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1747, file: !624, line: 419, baseType: !1750, size: 256, offset: 3072)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1747, file: !624, line: 420, baseType: !1752, size: 768, offset: 3328)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1747, file: !624, line: 421, baseType: !1750, size: 256, offset: 4096)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1747, file: !624, line: 422, baseType: !1763, size: 1792, offset: 4352)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !1764)
!1764 = !{!1765}
!1765 = !DISubrange(count: 56)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1747, file: !624, line: 423, baseType: !1767, size: 1920, offset: 6144)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1768, size: 1920, elements: !1769)
!1768 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1769 = !{!1770}
!1770 = !DISubrange(count: 240)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1747, file: !624, line: 424, baseType: !1772, size: 20608, offset: 8064)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !1773)
!1773 = !{!1774}
!1774 = !DISubrange(count: 644)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1747, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !1778)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !1779)
!1779 = !{!1780, !1781, !1782, !1783, !1784, !1785, !1786, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1799, !1800, !1801, !1803, !1805, !1807}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1778, file: !624, line: 447, baseType: !628, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1778, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1778, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1778, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1778, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1778, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1778, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1768, size: 96, elements: !1788)
!1788 = !{!1789}
!1789 = !DISubrange(count: 12)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1778, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1778, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1778, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1778, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1778, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1778, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1778, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1778, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 64, elements: !180)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1778, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1778, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1778, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 128, elements: !817)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1778, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 160, elements: !1319)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1778, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !1319)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1778, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!1808 = !{!1809, !1835, !1838, !1840, !1842, !1731}
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1733, file: !1811, line: 285, type: !1812, isLocal: true, isDefinition: true, align: 32)
!1811 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !1814)
!1814 = !{!1815, !1834}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1813, file: !420, line: 60, baseType: !1816, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!103, !1819}
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1822)
!1822 = !{!1823, !1824, !1825, !1826, !1832, !1833}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1821, file: !429, line: 380, baseType: !337, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1821, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1821, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1821, file: !429, line: 386, baseType: !1827, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1829)
!1829 = !{!1830, !1831}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1828, file: !429, line: 359, baseType: !185, size: 8)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1828, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1821, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1821, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1813, file: !420, line: 65, baseType: !1819, size: 32, offset: 32)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "lock", scope: !1733, file: !1811, line: 34, type: !1837, isLocal: true, isDefinition: true)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "last_load", scope: !1733, file: !1811, line: 36, type: !108, isLocal: true, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1733, file: !1811, line: 48, type: !108, isLocal: true, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1733, file: !1811, line: 54, type: !108, isLocal: true, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1846, file: !1928, line: 22, type: !1930, isLocal: true, isDefinition: true)
!1846 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1847, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1848, retainedTypes: !1849, globals: !1925, splitDebugInlining: false, nameTableKind: None)
!1847 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1848 = !{!1149, !1155}
!1849 = !{!1850, !1914, !1919, !1202, !1155, !1149, !1924, !102}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1150, line: 523, size: 288, elements: !1853)
!1853 = !{!1854, !1873, !1877, !1881, !1885, !1886, !1887, !1891, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1852, file: !1150, line: 524, baseType: !1855, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!103, !1858, !1190, !1191}
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !1861)
!1861 = !{!1862, !1863, !1864, !1865, !1871, !1872}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1860, file: !429, line: 380, baseType: !337, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1860, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1860, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1860, file: !429, line: 386, baseType: !1866, size: 32, offset: 96)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !1868)
!1868 = !{!1869, !1870}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1867, file: !429, line: 359, baseType: !185, size: 8)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1867, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1860, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1860, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1852, file: !1150, line: 530, baseType: !1874, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!103, !1858, !1196}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1852, file: !1150, line: 532, baseType: !1878, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!103, !1858, !1202, !1197}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1852, file: !1150, line: 535, baseType: !1882, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!103, !1858, !1202}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1852, file: !1150, line: 537, baseType: !1882, size: 32, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1852, file: !1150, line: 539, baseType: !1882, size: 32, offset: 160)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1852, file: !1150, line: 541, baseType: !1888, size: 32, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!103, !1858, !1190, !1149, !1155}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1852, file: !1150, line: 544, baseType: !1892, size: 32, offset: 224)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!103, !1858, !1895, !131}
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1150, line: 478, size: 96, elements: !1897)
!1897 = !{!1898, !1904, !1909}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1896, file: !1150, line: 482, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1222, line: 33, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1222, line: 29, size: 32, elements: !1901)
!1901 = !{!1902}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1900, file: !1222, line: 30, baseType: !1903, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1896, file: !1150, line: 485, baseType: !1905, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1150, line: 464, baseType: !1906)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 32)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !1858, !1895, !1202}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1896, file: !1150, line: 493, baseType: !1202, size: 32, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1852, file: !1150, line: 547, baseType: !1911, size: 32, offset: 256)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 32)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{!108, !1858}
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1150, line: 428, size: 32, elements: !1917)
!1917 = !{!1918}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1916, file: !1150, line: 434, baseType: !1202, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1150, line: 441, size: 32, elements: !1922)
!1922 = !{!1923}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1921, file: !1150, line: 447, baseType: !1202, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1925 = !{!1926, !1844}
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1927 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1846, file: !1928, line: 37, type: !1929, isLocal: true, isDefinition: true)
!1928 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 352, elements: !1932)
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1858)
!1932 = !{!1933}
!1933 = !DISubrange(count: 11)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1936, file: !1980, line: 139, type: !1987, isLocal: false, isDefinition: true)
!1936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1938, globals: !1977, splitDebugInlining: false, nameTableKind: None)
!1937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1938 = !{!1939}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 586, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 550, size: 1216, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1941, file: !405, line: 552, baseType: !409, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1941, file: !405, line: 553, baseType: !409, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1941, file: !405, line: 554, baseType: !409, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1941, file: !405, line: 555, baseType: !409, size: 32, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1941, file: !405, line: 556, baseType: !409, size: 32, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1941, file: !405, line: 557, baseType: !409, size: 32, offset: 160)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1941, file: !405, line: 558, baseType: !409, size: 32, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1941, file: !405, line: 559, baseType: !108, size: 32, offset: 224)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1941, file: !405, line: 560, baseType: !409, size: 32, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1941, file: !405, line: 561, baseType: !409, size: 32, offset: 288)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1941, file: !405, line: 562, baseType: !972, size: 64, offset: 320)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1941, file: !405, line: 563, baseType: !409, size: 32, offset: 384)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1941, file: !405, line: 564, baseType: !409, size: 32, offset: 416)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1941, file: !405, line: 565, baseType: !409, size: 32, offset: 448)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1941, file: !405, line: 566, baseType: !108, size: 32, offset: 480)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1941, file: !405, line: 567, baseType: !409, size: 32, offset: 512)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1941, file: !405, line: 568, baseType: !409, size: 32, offset: 544)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1941, file: !405, line: 569, baseType: !972, size: 64, offset: 576)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1941, file: !405, line: 570, baseType: !409, size: 32, offset: 640)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1941, file: !405, line: 571, baseType: !409, size: 32, offset: 672)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1941, file: !405, line: 572, baseType: !409, size: 32, offset: 704)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1941, file: !405, line: 573, baseType: !108, size: 32, offset: 736)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1941, file: !405, line: 574, baseType: !409, size: 32, offset: 768)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1941, file: !405, line: 575, baseType: !409, size: 32, offset: 800)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1941, file: !405, line: 576, baseType: !972, size: 64, offset: 832)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1941, file: !405, line: 577, baseType: !409, size: 32, offset: 896)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1941, file: !405, line: 578, baseType: !409, size: 32, offset: 928)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1941, file: !405, line: 579, baseType: !972, size: 64, offset: 960)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1941, file: !405, line: 580, baseType: !409, size: 32, offset: 1024)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1941, file: !405, line: 581, baseType: !409, size: 32, offset: 1056)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1941, file: !405, line: 582, baseType: !409, size: 32, offset: 1088)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1941, file: !405, line: 583, baseType: !409, size: 32, offset: 1120)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1941, file: !405, line: 584, baseType: !409, size: 32, offset: 1152)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1941, file: !405, line: 585, baseType: !409, size: 32, offset: 1184)
!1977 = !{!1978, !1981, !1934}
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1936, file: !1980, line: 137, type: !108, isLocal: false, isDefinition: true)
!1980 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1981 = !DIGlobalVariableExpression(var: !1982, expr: !DIExpression())
!1982 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1936, file: !1980, line: 138, type: !1983, isLocal: false, isDefinition: true)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1984, size: 128, elements: !1985)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1985 = !{!1986}
!1986 = !DISubrange(count: 16)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1984, size: 64, elements: !1590)
!1988 = !DIGlobalVariableExpression(var: !1989, expr: !DIExpression())
!1989 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1990, file: !1993, line: 23, type: !1994, isLocal: false, isDefinition: true)
!1990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !1992, splitDebugInlining: false, nameTableKind: None)
!1991 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1992 = !{!1988}
!1993 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1995 = !DIGlobalVariableExpression(var: !1996, expr: !DIExpression())
!1996 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1997, file: !2001, line: 37, type: !2252, isLocal: false, isDefinition: true)
!1997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1999, retainedTypes: !2008, globals: !2081, splitDebugInlining: false, nameTableKind: None)
!1998 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!1999 = !{!2000, !30, !705}
!2000 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2001, line: 63, baseType: !32, size: 32, elements: !2002)
!2001 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2002 = !{!2003, !2004, !2005, !2006, !2007}
!2003 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2004 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2005 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2006 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2007 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2008 = !{!132, !102, !103, !2009, !277, !108, !2039, !331, !185, !2064}
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2012, line: 51, size: 64, elements: !2013)
!2012 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2013 = !{!2014, !2034}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2011, file: !2012, line: 52, baseType: !2015, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2012, line: 38, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!103, !2019, !379, !121}
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2021)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !2022)
!2022 = !{!2023, !2024, !2025, !2026, !2032, !2033}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2021, file: !429, line: 380, baseType: !337, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2021, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2021, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2021, file: !429, line: 386, baseType: !2027, size: 32, offset: 96)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2028, file: !429, line: 359, baseType: !185, size: 8)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2028, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2021, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2021, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2011, file: !2012, line: 53, baseType: !2035, size: 32, offset: 32)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2012, line: 47, baseType: !2036)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!103, !2019, !379, !121, !108}
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2042)
!2042 = !{!2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2041, file: !624, line: 447, baseType: !628, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2041, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2041, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2041, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2041, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2041, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2041, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2041, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2041, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2041, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2041, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2041, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2041, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2041, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2041, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2041, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2041, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2041, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2041, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2041, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2041, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2066, file: !624, line: 413, baseType: !1750, size: 256)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2066, file: !624, line: 414, baseType: !1752, size: 768, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2066, file: !624, line: 415, baseType: !1750, size: 256, offset: 1024)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2066, file: !624, line: 416, baseType: !1752, size: 768, offset: 1280)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2066, file: !624, line: 417, baseType: !1750, size: 256, offset: 2048)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2066, file: !624, line: 418, baseType: !1752, size: 768, offset: 2304)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2066, file: !624, line: 419, baseType: !1750, size: 256, offset: 3072)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2066, file: !624, line: 420, baseType: !1752, size: 768, offset: 3328)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2066, file: !624, line: 421, baseType: !1750, size: 256, offset: 4096)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2066, file: !624, line: 422, baseType: !1763, size: 1792, offset: 4352)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2066, file: !624, line: 423, baseType: !1767, size: 1920, offset: 6144)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2066, file: !624, line: 424, baseType: !1772, size: 20608, offset: 8064)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2066, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2081 = !{!1995, !2082, !2204, !2210, !2212, !2215, !2220, !2222, !2227}
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "_kernel", scope: !1997, file: !2001, line: 40, type: !2084, isLocal: false, isDefinition: true)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !141, line: 158, size: 288, elements: !2085)
!2085 = !{!2086, !2199}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2084, file: !141, line: 159, baseType: !2087, size: 192)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2088, size: 192, elements: !606)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !141, line: 100, size: 192, elements: !2089)
!2089 = !{!2090, !2091, !2092, !2193, !2194, !2195, !2196}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2088, file: !141, line: 102, baseType: !108, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2088, file: !141, line: 105, baseType: !277, size: 32, offset: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2088, file: !141, line: 108, baseType: !2093, size: 32, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2095)
!2095 = !{!2096, !2154, !2166, !2167, !2168, !2169, !2175, !2188}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2094, file: !163, line: 247, baseType: !2097, size: 384)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2098)
!2098 = !{!2099, !2123, !2130, !2131, !2132, !2141, !2142, !2143}
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !163, line: 60, baseType: !2100, size: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2097, file: !163, line: 60, size: 64, elements: !2101)
!2101 = !{!2102, !2117}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2100, file: !163, line: 61, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2105)
!2105 = !{!2106, !2112}
!2106 = !DIDerivedType(tag: DW_TAG_member, scope: !2104, file: !146, line: 38, baseType: !2107, size: 32)
!2107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2104, file: !146, line: 38, size: 32, elements: !2108)
!2108 = !{!2109, !2111}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2107, file: !146, line: 39, baseType: !2110, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2107, file: !146, line: 40, baseType: !2110, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, scope: !2104, file: !146, line: 42, baseType: !2113, size: 32, offset: 32)
!2113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2104, file: !146, line: 42, size: 32, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2113, file: !146, line: 43, baseType: !2110, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2113, file: !146, line: 44, baseType: !2110, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2100, file: !163, line: 62, baseType: !2118, size: 64)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2119)
!2119 = !{!2120}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2118, file: !175, line: 50, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 64, elements: !180)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2097, file: !163, line: 68, baseType: !2124, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2126)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2127)
!2127 = !{!2128}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2126, file: !141, line: 232, baseType: !2129, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2104)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2097, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2097, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2132 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !163, line: 90, baseType: !2133, size: 16, offset: 112)
!2133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2097, file: !163, line: 90, size: 16, elements: !2134)
!2134 = !{!2135, !2140}
!2135 = !DIDerivedType(tag: DW_TAG_member, scope: !2133, file: !163, line: 91, baseType: !2136, size: 16)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2133, file: !163, line: 91, size: 16, elements: !2137)
!2137 = !{!2138, !2139}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2136, file: !163, line: 96, baseType: !195, size: 8)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2136, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2133, file: !163, line: 100, baseType: !121, size: 16)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2097, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2097, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2097, file: !163, line: 131, baseType: !2144, size: 192, offset: 192)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2145)
!2145 = !{!2146, !2147, !2153}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2144, file: !141, line: 245, baseType: !2103, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2144, file: !141, line: 246, baseType: !2148, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2149)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{null, !2152}
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2144, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2094, file: !163, line: 250, baseType: !2155, size: 288, offset: 384)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2156)
!2156 = !{!2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2155, file: !214, line: 26, baseType: !108, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2155, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2155, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2155, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2155, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2155, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2155, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2155, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2155, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2094, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2094, file: !163, line: 256, baseType: !2125, size: 64, offset: 704)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2094, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2094, file: !163, line: 300, baseType: !2170, size: 96, offset: 800)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2171)
!2171 = !{!2172, !2173, !2174}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2170, file: !163, line: 153, baseType: !22, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2170, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2170, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2094, file: !163, line: 325, baseType: !2176, size: 32, offset: 896)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2178)
!2178 = !{!2179, !2185, !2186}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2177, file: !137, line: 5074, baseType: !2180, size: 96)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2181)
!2181 = !{!2182, !2183, !2184}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2180, file: !240, line: 57, baseType: !243, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2180, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2180, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2177, file: !137, line: 5075, baseType: !2125, size: 64, offset: 96)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2177, file: !137, line: 5076, baseType: !2187, offset: 160)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2094, file: !163, line: 343, baseType: !2189, size: 64, offset: 928)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2190)
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2189, file: !214, line: 63, baseType: !108, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2189, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2088, file: !141, line: 111, baseType: !2093, size: 32, offset: 96)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2088, file: !141, line: 124, baseType: !103, size: 32, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2088, file: !141, line: 127, baseType: !185, size: 8, offset: 160)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2088, file: !141, line: 153, baseType: !2197, offset: 168)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2198, line: 33, elements: !251)
!2198 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2084, file: !141, line: 170, baseType: !2200, size: 96, offset: 192)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !2201)
!2201 = !{!2202, !2203}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2200, file: !141, line: 86, baseType: !2093, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2200, file: !141, line: 90, baseType: !2129, size: 64, offset: 32)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1997, file: !2001, line: 43, type: !2206, isLocal: false, isDefinition: true, align: 512)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2207, size: 8704, elements: !346)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !2208)
!2208 = !{!2209}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2207, file: !316, line: 48, baseType: !278, size: 8)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1997, file: !2001, line: 44, type: !2094, isLocal: false, isDefinition: true)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1997, file: !2001, line: 48, type: !2214, isLocal: false, isDefinition: true)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2094, size: 1024, elements: !606)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1997, file: !2001, line: 86, type: !2217, isLocal: false, isDefinition: true, align: 512)
!2217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2207, size: 16896, elements: !2218)
!2218 = !{!607, !2219}
!2219 = !DISubrange(count: 2112)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1997, file: !2001, line: 217, type: !131, isLocal: false, isDefinition: true)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1997, file: !2001, line: 50, type: !2224, isLocal: true, isDefinition: true, align: 512)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2207, size: 3072, elements: !2225)
!2225 = !{!607, !2226}
!2226 = !DISubrange(count: 384)
!2227 = !DIGlobalVariableExpression(var: !2228, expr: !DIExpression())
!2228 = distinct !DIGlobalVariable(name: "levels", scope: !2229, file: !2001, line: 232, type: !2249, isLocal: true, isDefinition: true)
!2229 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2001, file: !2001, line: 230, type: !2230, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !2232)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{null, !2000}
!2232 = !{!2233, !2234, !2244, !2248}
!2233 = !DILocalVariable(name: "level", arg: 1, scope: !2229, file: !2001, line: 230, type: !2000)
!2234 = !DILocalVariable(name: "entry", scope: !2229, file: !2001, line: 244, type: !2235)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2237)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2238)
!2238 = !{!2239, !2243}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2237, file: !420, line: 60, baseType: !2240, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!103, !2019}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2237, file: !420, line: 65, baseType: !2019, size: 32, offset: 32)
!2244 = !DILocalVariable(name: "dev", scope: !2245, file: !2001, line: 247, type: !2019)
!2245 = distinct !DILexicalBlock(scope: !2246, file: !2001, line: 246, column: 64)
!2246 = distinct !DILexicalBlock(scope: !2247, file: !2001, line: 246, column: 2)
!2247 = distinct !DILexicalBlock(scope: !2229, file: !2001, line: 246, column: 2)
!2248 = !DILocalVariable(name: "rc", scope: !2245, file: !2001, line: 248, type: !103)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2235, size: 192, elements: !2250)
!2250 = !{!2251}
!2251 = !DISubrange(count: 6)
!2252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !384, line: 16, size: 64, elements: !2254)
!2254 = !{!2255, !2256}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2253, file: !384, line: 17, baseType: !337, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2253, file: !384, line: 18, baseType: !185, size: 8, offset: 32)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "states_str", scope: !2259, file: !2260, line: 276, type: !2381, isLocal: true, isDefinition: true)
!2259 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2260, file: !2260, line: 271, type: !2261, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !2372)
!2260 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!337, !2263, !277, !132}
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2264)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2266)
!2266 = !{!2267, !2325, !2337, !2338, !2339, !2340, !2346, !2359}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2265, file: !163, line: 247, baseType: !2268, size: 384)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2269)
!2269 = !{!2270, !2294, !2301, !2302, !2303, !2312, !2313, !2314}
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !163, line: 60, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2268, file: !163, line: 60, size: 64, elements: !2272)
!2272 = !{!2273, !2288}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2271, file: !163, line: 61, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2276)
!2276 = !{!2277, !2283}
!2277 = !DIDerivedType(tag: DW_TAG_member, scope: !2275, file: !146, line: 38, baseType: !2278, size: 32)
!2278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2275, file: !146, line: 38, size: 32, elements: !2279)
!2279 = !{!2280, !2282}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2278, file: !146, line: 39, baseType: !2281, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2278, file: !146, line: 40, baseType: !2281, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, scope: !2275, file: !146, line: 42, baseType: !2284, size: 32, offset: 32)
!2284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2275, file: !146, line: 42, size: 32, elements: !2285)
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2284, file: !146, line: 43, baseType: !2281, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2284, file: !146, line: 44, baseType: !2281, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2271, file: !163, line: 62, baseType: !2289, size: 64)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2290)
!2290 = !{!2291}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2289, file: !175, line: 50, baseType: !2292, size: 64)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2293, size: 64, elements: !180)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2268, file: !163, line: 68, baseType: !2295, size: 32, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2298)
!2298 = !{!2299}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2297, file: !141, line: 232, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2275)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2268, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2268, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2268, file: !163, line: 90, baseType: !2304, size: 16, offset: 112)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2268, file: !163, line: 90, size: 16, elements: !2305)
!2305 = !{!2306, !2311}
!2306 = !DIDerivedType(tag: DW_TAG_member, scope: !2304, file: !163, line: 91, baseType: !2307, size: 16)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2304, file: !163, line: 91, size: 16, elements: !2308)
!2308 = !{!2309, !2310}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2307, file: !163, line: 96, baseType: !195, size: 8)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2307, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2304, file: !163, line: 100, baseType: !121, size: 16)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2268, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2268, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2268, file: !163, line: 131, baseType: !2315, size: 192, offset: 192)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2316)
!2316 = !{!2317, !2318, !2324}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2315, file: !141, line: 245, baseType: !2274, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2315, file: !141, line: 246, baseType: !2319, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2320)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{null, !2323}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2315, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2265, file: !163, line: 250, baseType: !2326, size: 288, offset: 384)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2326, file: !214, line: 26, baseType: !108, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2326, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2326, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2326, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2326, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2326, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2326, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2326, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2326, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2265, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2265, file: !163, line: 256, baseType: !2296, size: 64, offset: 704)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2265, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2265, file: !163, line: 300, baseType: !2341, size: 96, offset: 800)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2342)
!2342 = !{!2343, !2344, !2345}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2341, file: !163, line: 153, baseType: !22, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2341, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2341, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2265, file: !163, line: 325, baseType: !2347, size: 32, offset: 896)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2349)
!2349 = !{!2350, !2356, !2357}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2348, file: !137, line: 5074, baseType: !2351, size: 96)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2352)
!2352 = !{!2353, !2354, !2355}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2351, file: !240, line: 57, baseType: !243, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2351, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2351, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2348, file: !137, line: 5075, baseType: !2296, size: 64, offset: 96)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2348, file: !137, line: 5076, baseType: !2358, offset: 160)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2265, file: !163, line: 343, baseType: !2360, size: 64, offset: 928)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2361)
!2361 = !{!2362, !2363}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2360, file: !214, line: 63, baseType: !108, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2360, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2365, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2366, globals: !2368, splitDebugInlining: false, nameTableKind: None)
!2365 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2366 = !{!102, !337, !104, !185, !103, !2367, !24, !132, !277, !22, !108, !109}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2368 = !{!2257, !2369}
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "states_sz", scope: !2259, file: !2260, line: 279, type: !2371, isLocal: true, isDefinition: true)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 256, elements: !1590)
!2372 = !{!2373, !2374, !2375, !2376, !2377, !2378, !2379}
!2373 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2259, file: !2260, line: 271, type: !2263)
!2374 = !DILocalVariable(name: "buf", arg: 2, scope: !2259, file: !2260, line: 271, type: !277)
!2375 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2259, file: !2260, line: 271, type: !132)
!2376 = !DILocalVariable(name: "off", scope: !2259, file: !2260, line: 273, type: !132)
!2377 = !DILocalVariable(name: "bit", scope: !2259, file: !2260, line: 274, type: !185)
!2378 = !DILocalVariable(name: "thread_state", scope: !2259, file: !2260, line: 275, type: !185)
!2379 = !DILocalVariable(name: "index", scope: !2380, file: !2260, line: 293, type: !185)
!2380 = distinct !DILexicalBlock(scope: !2259, file: !2260, line: 293, column: 2)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !1590)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "lock", scope: !2384, file: !2489, line: 47, type: !2482, isLocal: true, isDefinition: true)
!2384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2385, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2386, globals: !2488, splitDebugInlining: false, nameTableKind: None)
!2385 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2386 = !{!131, !102, !103, !2387, !2402}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2390)
!2390 = !{!2391, !2397}
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !146, line: 38, baseType: !2392, size: 32)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !146, line: 38, size: 32, elements: !2393)
!2393 = !{!2394, !2396}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2392, file: !146, line: 39, baseType: !2395, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2392, file: !146, line: 40, baseType: !2395, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !146, line: 42, baseType: !2398, size: 32, offset: 32)
!2398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !146, line: 42, size: 32, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2398, file: !146, line: 43, baseType: !2395, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2398, file: !146, line: 44, baseType: !2395, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2404)
!2404 = !{!2405, !2449, !2461, !2462, !2463, !2464, !2470, !2483}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2403, file: !163, line: 247, baseType: !2406, size: 384)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2407)
!2407 = !{!2408, !2418, !2425, !2426, !2427, !2436, !2437, !2438}
!2408 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !163, line: 60, baseType: !2409, size: 64)
!2409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !163, line: 60, size: 64, elements: !2410)
!2410 = !{!2411, !2412}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2409, file: !163, line: 61, baseType: !2388, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2409, file: !163, line: 62, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2414)
!2414 = !{!2415}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2413, file: !175, line: 50, baseType: !2416, size: 64)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2417, size: 64, elements: !180)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2406, file: !163, line: 68, baseType: !2419, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2422)
!2422 = !{!2423}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2421, file: !141, line: 232, baseType: !2424, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2389)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2406, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2406, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2406, file: !163, line: 90, baseType: !2428, size: 16, offset: 112)
!2428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2406, file: !163, line: 90, size: 16, elements: !2429)
!2429 = !{!2430, !2435}
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2428, file: !163, line: 91, baseType: !2431, size: 16)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2428, file: !163, line: 91, size: 16, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2431, file: !163, line: 96, baseType: !195, size: 8)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2431, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2428, file: !163, line: 100, baseType: !121, size: 16)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2406, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2406, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2406, file: !163, line: 131, baseType: !2439, size: 192, offset: 192)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2440)
!2440 = !{!2441, !2442, !2448}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2439, file: !141, line: 245, baseType: !2388, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2439, file: !141, line: 246, baseType: !2443, size: 32, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2444)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{null, !2447}
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2439, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2403, file: !163, line: 250, baseType: !2450, size: 288, offset: 384)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2451)
!2451 = !{!2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2450, file: !214, line: 26, baseType: !108, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2450, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2450, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2450, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2450, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2450, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2450, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2450, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2450, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2403, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2403, file: !163, line: 256, baseType: !2420, size: 64, offset: 704)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2403, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2403, file: !163, line: 300, baseType: !2465, size: 96, offset: 800)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2466)
!2466 = !{!2467, !2468, !2469}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2465, file: !163, line: 153, baseType: !22, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2465, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2465, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2403, file: !163, line: 325, baseType: !2471, size: 32, offset: 896)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2473)
!2473 = !{!2474, !2480, !2481}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2472, file: !137, line: 5074, baseType: !2475, size: 96)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2476)
!2476 = !{!2477, !2478, !2479}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2475, file: !240, line: 57, baseType: !243, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2475, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2475, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2472, file: !137, line: 5075, baseType: !2420, size: 64, offset: 96)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2472, file: !137, line: 5076, baseType: !2482, offset: 160)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2403, file: !163, line: 343, baseType: !2484, size: 64, offset: 928)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2484, file: !214, line: 63, baseType: !108, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2484, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2488 = !{!2382}
!2489 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2490 = !DIGlobalVariableExpression(var: !2491, expr: !DIExpression())
!2491 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2492, file: !2600, line: 56, type: !2589, isLocal: false, isDefinition: true)
!2492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2494, globals: !2597, splitDebugInlining: false, nameTableKind: None)
!2493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2494 = !{!2495, !277, !102, !2595, !379, !104, !331, !103, !108, !109, !2596}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !2497)
!2497 = !{!2498, !2556, !2568, !2569, !2570, !2571, !2577, !2590}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2496, file: !163, line: 247, baseType: !2499, size: 384)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !2500)
!2500 = !{!2501, !2525, !2532, !2533, !2534, !2543, !2544, !2545}
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !2499, file: !163, line: 60, baseType: !2502, size: 64)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2499, file: !163, line: 60, size: 64, elements: !2503)
!2503 = !{!2504, !2519}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2502, file: !163, line: 61, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2506)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2507)
!2507 = !{!2508, !2514}
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2506, file: !146, line: 38, baseType: !2509, size: 32)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2506, file: !146, line: 38, size: 32, elements: !2510)
!2510 = !{!2511, !2513}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2509, file: !146, line: 39, baseType: !2512, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2509, file: !146, line: 40, baseType: !2512, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, scope: !2506, file: !146, line: 42, baseType: !2515, size: 32, offset: 32)
!2515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2506, file: !146, line: 42, size: 32, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2515, file: !146, line: 43, baseType: !2512, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2515, file: !146, line: 44, baseType: !2512, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2502, file: !163, line: 62, baseType: !2520, size: 64)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !2521)
!2521 = !{!2522}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2520, file: !175, line: 50, baseType: !2523, size: 64)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2524, size: 64, elements: !180)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2499, file: !163, line: 68, baseType: !2526, size: 32, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2528)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2529)
!2529 = !{!2530}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2528, file: !141, line: 232, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2506)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2499, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2499, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!2534 = !DIDerivedType(tag: DW_TAG_member, scope: !2499, file: !163, line: 90, baseType: !2535, size: 16, offset: 112)
!2535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2499, file: !163, line: 90, size: 16, elements: !2536)
!2536 = !{!2537, !2542}
!2537 = !DIDerivedType(tag: DW_TAG_member, scope: !2535, file: !163, line: 91, baseType: !2538, size: 16)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2535, file: !163, line: 91, size: 16, elements: !2539)
!2539 = !{!2540, !2541}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2538, file: !163, line: 96, baseType: !195, size: 8)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2538, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2535, file: !163, line: 100, baseType: !121, size: 16)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2499, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2499, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2499, file: !163, line: 131, baseType: !2546, size: 192, offset: 192)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2547)
!2547 = !{!2548, !2549, !2555}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2546, file: !141, line: 245, baseType: !2505, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2546, file: !141, line: 246, baseType: !2550, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2551)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{null, !2554}
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2546, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2496, file: !163, line: 250, baseType: !2557, size: 288, offset: 384)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !2558)
!2558 = !{!2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2557, file: !214, line: 26, baseType: !108, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2557, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2557, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2557, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2557, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2557, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2557, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2557, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2557, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2496, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2496, file: !163, line: 256, baseType: !2527, size: 64, offset: 704)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2496, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2496, file: !163, line: 300, baseType: !2572, size: 96, offset: 800)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !2573)
!2573 = !{!2574, !2575, !2576}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2572, file: !163, line: 153, baseType: !22, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2572, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2572, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2496, file: !163, line: 325, baseType: !2578, size: 32, offset: 896)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2580)
!2580 = !{!2581, !2587, !2588}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2579, file: !137, line: 5074, baseType: !2582, size: 96)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2583)
!2583 = !{!2584, !2585, !2586}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2582, file: !240, line: 57, baseType: !243, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2582, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2582, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2579, file: !137, line: 5075, baseType: !2527, size: 64, offset: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2579, file: !137, line: 5076, baseType: !2589, offset: 160)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2496, file: !163, line: 343, baseType: !2591, size: 64, offset: 928)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !2592)
!2592 = !{!2593, !2594}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2591, file: !214, line: 63, baseType: !108, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2591, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2597 = !{!2490, !2598, !2601, !2603}
!2598 = !DIGlobalVariableExpression(var: !2599, expr: !DIExpression())
!2599 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2492, file: !2600, line: 404, type: !103, isLocal: true, isDefinition: true)
!2600 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2492, file: !2600, line: 405, type: !103, isLocal: true, isDefinition: true)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "pending_current", scope: !2492, file: !2600, line: 425, type: !2495, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2607, file: !2637, line: 15, type: !109, isLocal: true, isDefinition: true)
!2607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2609, globals: !2634, splitDebugInlining: false, nameTableKind: None)
!2608 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2609 = !{!104, !102, !331, !108, !109, !103, !2610, !277, !106}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !2612)
!2612 = !{!2613, !2628, !2633}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2611, file: !141, line: 245, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2615)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2616)
!2616 = !{!2617, !2623}
!2617 = !DIDerivedType(tag: DW_TAG_member, scope: !2615, file: !146, line: 38, baseType: !2618, size: 32)
!2618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2615, file: !146, line: 38, size: 32, elements: !2619)
!2619 = !{!2620, !2622}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2618, file: !146, line: 39, baseType: !2621, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2618, file: !146, line: 40, baseType: !2621, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, scope: !2615, file: !146, line: 42, baseType: !2624, size: 32, offset: 32)
!2624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2615, file: !146, line: 42, size: 32, elements: !2625)
!2625 = !{!2626, !2627}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2624, file: !146, line: 43, baseType: !2621, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2624, file: !146, line: 44, baseType: !2621, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2611, file: !141, line: 246, baseType: !2629, size: 32, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{null, !2610}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2611, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!2634 = !{!2605, !2635, !2639, !2641}
!2635 = !DIGlobalVariableExpression(var: !2636, expr: !DIExpression())
!2636 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2607, file: !2637, line: 19, type: !2638, isLocal: true, isDefinition: true)
!2637 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2639 = !DIGlobalVariableExpression(var: !2640, expr: !DIExpression())
!2640 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2607, file: !2637, line: 25, type: !103, isLocal: true, isDefinition: true)
!2641 = !DIGlobalVariableExpression(var: !2642, expr: !DIExpression())
!2642 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2607, file: !2637, line: 17, type: !2643, isLocal: true, isDefinition: true)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2615)
!2644 = !DIGlobalVariableExpression(var: !2645, expr: !DIExpression())
!2645 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2646, file: !2651, line: 61, type: !2681, isLocal: false, isDefinition: true, align: 64)
!2646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, globals: !2648, splitDebugInlining: false, nameTableKind: None)
!2647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2648 = !{!2649, !2644}
!2649 = !DIGlobalVariableExpression(var: !2650, expr: !DIExpression())
!2650 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2646, file: !2651, line: 61, type: !2652, isLocal: false, isDefinition: true, align: 32)
!2651 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !2653)
!2653 = !{!2654, !2660, !2679}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2652, file: !137, line: 5074, baseType: !2655, size: 96)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !2656)
!2656 = !{!2657, !2658, !2659}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2655, file: !240, line: 57, baseType: !243, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2655, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2655, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2652, file: !137, line: 5075, baseType: !2661, size: 64, offset: 96)
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !2662)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !2663)
!2663 = !{!2664}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2662, file: !141, line: 232, baseType: !2665, size: 64)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2666)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2667)
!2667 = !{!2668, !2674}
!2668 = !DIDerivedType(tag: DW_TAG_member, scope: !2666, file: !146, line: 38, baseType: !2669, size: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2666, file: !146, line: 38, size: 32, elements: !2670)
!2670 = !{!2671, !2673}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2669, file: !146, line: 39, baseType: !2672, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2669, file: !146, line: 40, baseType: !2672, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, scope: !2666, file: !146, line: 42, baseType: !2675, size: 32, offset: 32)
!2675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2666, file: !146, line: 42, size: 32, elements: !2676)
!2676 = !{!2677, !2678}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2675, file: !146, line: 43, baseType: !2672, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2675, file: !146, line: 44, baseType: !2672, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2652, file: !137, line: 5076, baseType: !2680, offset: 160)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!2681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 8192, elements: !2682)
!2682 = !{!2683}
!2683 = !DISubrange(count: 1024)
!2684 = !DIGlobalVariableExpression(var: !2685, expr: !DIExpression())
!2685 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2686, file: !2705, line: 55, type: !2706, isLocal: true, isDefinition: true, align: 32)
!2686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2688, globals: !2704, splitDebugInlining: false, nameTableKind: None)
!2687 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2688 = !{!102, !104, !103, !2689}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !2692)
!2692 = !{!2693, !2699}
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !146, line: 38, baseType: !2694, size: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !146, line: 38, size: 32, elements: !2695)
!2695 = !{!2696, !2698}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2694, file: !146, line: 39, baseType: !2697, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2694, file: !146, line: 40, baseType: !2697, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !146, line: 42, baseType: !2700, size: 32, offset: 32)
!2700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2691, file: !146, line: 42, size: 32, elements: !2701)
!2701 = !{!2702, !2703}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2700, file: !146, line: 43, baseType: !2697, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2700, file: !146, line: 44, baseType: !2697, size: 32)
!2704 = !{!2684}
!2705 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2707)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !420, line: 51, size: 64, elements: !2708)
!2708 = !{!2709, !2716}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2707, file: !420, line: 60, baseType: !2710, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!103, !2713}
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2715)
!2715 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !420, line: 48, flags: DIFlagFwdDecl)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2707, file: !420, line: 65, baseType: !2713, size: 32, offset: 32)
!2717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2718, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2718 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2719 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2720, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2720 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2723, retainedTypes: !2731, splitDebugInlining: false, nameTableKind: None)
!2722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2723 = !{!30, !2724}
!2724 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2725, line: 54, baseType: !32, size: 32, elements: !2726)
!2725 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2726 = !{!2727, !2728, !2729, !2730}
!2727 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2728 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2729 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2730 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2731 = !{!102, !132, !379, !24, !2732, !22, !2738, !103, !1002, !2753}
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2725, line: 58, baseType: !2734)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2725, line: 58, size: 64, elements: !2735)
!2735 = !{!2736}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2734, file: !2725, line: 58, baseType: !2737, size: 64)
!2737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 64, elements: !1590)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2725, line: 68, size: 128, elements: !2740)
!2740 = !{!2741, !2744, !2745, !2746}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2739, file: !2725, line: 69, baseType: !2742, size: 64)
!2742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2743, size: 64, elements: !180)
!2743 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2725, line: 61, baseType: !108)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2739, file: !2725, line: 70, baseType: !2743, size: 32, offset: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2739, file: !2725, line: 71, baseType: !108, size: 32, offset: 96)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2739, file: !2725, line: 77, baseType: !2747, offset: 128)
!2747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2748, elements: !2751)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2725, line: 64, size: 32, elements: !2749)
!2749 = !{!2750}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2748, file: !2725, line: 65, baseType: !2743, size: 32)
!2751 = !{!2752}
!2752 = !DISubrange(count: 0)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!2754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2755, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2756, retainedTypes: !2776, splitDebugInlining: false, nameTableKind: None)
!2755 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2756 = !{!2757, !2765}
!2757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2758, line: 69, baseType: !32, size: 32, elements: !2759)
!2758 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2759 = !{!2760, !2761, !2762, !2763, !2764}
!2760 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2761 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2762 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2763 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2764 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2765 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2758, line: 56, baseType: !32, size: 32, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!2767 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2768 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2769 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2770 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2771 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2772 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2773 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2774 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2775 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2776 = !{!103, !2757, !2765, !2777, !196, !446, !2779, !2780, !186, !122, !337, !132, !102, !22, !32, !374, !2782, !2783, !376, !375, !107, !377, !2778, !2784, !2785, !2786, !2787}
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2758, line: 31, baseType: !2778)
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !133, line: 329, baseType: !32)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2758, line: 32, baseType: !2781)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !133, line: 145, baseType: !103)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!2788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2790 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2791, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2792, splitDebugInlining: false, nameTableKind: None)
!2791 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2792 = !{!337, !186, !103, !32}
!2793 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2794, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2795, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2794 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2795 = !{!2796, !30}
!2796 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2797, line: 27, baseType: !32, size: 32, elements: !2798)
!2797 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2798 = !{!2799, !2800, !2801, !2802, !2803}
!2799 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2800 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2801 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2802 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2803 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2806, retainedTypes: !2807, splitDebugInlining: false, nameTableKind: None)
!2805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2806 = !{!705, !2796, !30}
!2807 = !{!900, !2808, !102, !103, !331, !108, !185, !2825}
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !2810)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !2811)
!2811 = !{!2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2810, file: !624, line: 413, baseType: !1750, size: 256)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2810, file: !624, line: 414, baseType: !1752, size: 768, offset: 256)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2810, file: !624, line: 415, baseType: !1750, size: 256, offset: 1024)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2810, file: !624, line: 416, baseType: !1752, size: 768, offset: 1280)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2810, file: !624, line: 417, baseType: !1750, size: 256, offset: 2048)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2810, file: !624, line: 418, baseType: !1752, size: 768, offset: 2304)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2810, file: !624, line: 419, baseType: !1750, size: 256, offset: 3072)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2810, file: !624, line: 420, baseType: !1752, size: 768, offset: 3328)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2810, file: !624, line: 421, baseType: !1750, size: 256, offset: 4096)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2810, file: !624, line: 422, baseType: !1763, size: 1792, offset: 4352)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2810, file: !624, line: 423, baseType: !1767, size: 1920, offset: 6144)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2810, file: !624, line: 424, baseType: !1772, size: 20608, offset: 8064)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2810, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2827)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2828)
!2828 = !{!2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2827, file: !624, line: 447, baseType: !628, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2827, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2827, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2827, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2827, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2827, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2827, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2827, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2827, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2827, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2827, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2827, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2827, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2827, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2827, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2827, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2827, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2827, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2827, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2827, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2827, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2850 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2851, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!2851 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2854, splitDebugInlining: false, nameTableKind: None)
!2853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2854 = !{!102, !103, !22, !2855}
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2857)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2857, file: !624, line: 447, baseType: !628, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2857, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2857, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2857, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2857, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2857, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2857, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2857, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2857, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2857, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2857, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2857, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2857, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2857, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2857, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2857, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2857, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2857, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2857, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2857, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2857, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2880 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2881, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2882, splitDebugInlining: false, nameTableKind: None)
!2881 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2882 = !{!2883, !102, !103}
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2885)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2886)
!2886 = !{!2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2885, file: !624, line: 447, baseType: !628, size: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2885, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2885, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2885, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2885, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2885, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2885, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2885, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2885, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2885, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2885, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2885, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2885, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2885, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2885, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2885, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2885, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2885, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2885, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2885, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2885, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2908 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2909, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2910, splitDebugInlining: false, nameTableKind: None)
!2909 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2910 = !{!2911, !108, !102, !103}
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 32)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2913, line: 98, size: 256, elements: !2914)
!2913 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2914 = !{!2915, !2920, !2925, !2930, !2935, !2940, !2945, !2950}
!2915 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2913, line: 99, baseType: !2916, size: 32)
!2916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2913, line: 99, size: 32, elements: !2917)
!2917 = !{!2918, !2919}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2916, file: !2913, line: 99, baseType: !108, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2916, file: !2913, line: 99, baseType: !108, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2913, line: 100, baseType: !2921, size: 32, offset: 32)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2913, line: 100, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2921, file: !2913, line: 100, baseType: !108, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2921, file: !2913, line: 100, baseType: !108, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2913, line: 101, baseType: !2926, size: 32, offset: 64)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2913, line: 101, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2926, file: !2913, line: 101, baseType: !108, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2926, file: !2913, line: 101, baseType: !108, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2913, line: 102, baseType: !2931, size: 32, offset: 96)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2913, line: 102, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2931, file: !2913, line: 102, baseType: !108, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2931, file: !2913, line: 102, baseType: !108, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2913, line: 103, baseType: !2936, size: 32, offset: 128)
!2936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2913, line: 103, size: 32, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2936, file: !2913, line: 103, baseType: !108, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2936, file: !2913, line: 103, baseType: !108, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2913, line: 104, baseType: !2941, size: 32, offset: 160)
!2941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2913, line: 104, size: 32, elements: !2942)
!2942 = !{!2943, !2944}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2941, file: !2913, line: 104, baseType: !108, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2941, file: !2913, line: 104, baseType: !108, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2913, line: 105, baseType: !2946, size: 32, offset: 192)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2913, line: 105, size: 32, elements: !2947)
!2947 = !{!2948, !2949}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2946, file: !2913, line: 105, baseType: !108, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2946, file: !2913, line: 105, baseType: !108, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2912, file: !2913, line: 106, baseType: !108, size: 32, offset: 224)
!2951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2795, retainedTypes: !2953, splitDebugInlining: false, nameTableKind: None)
!2952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!2953 = !{!2954, !102, !103, !2979, !2753, !108}
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !2956)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !2957)
!2957 = !{!2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2956, file: !624, line: 447, baseType: !628, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2956, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2956, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2956, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2956, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2956, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2956, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2956, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2956, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2956, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2956, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2956, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2956, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2956, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2956, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2956, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2956, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2956, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2956, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2956, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2956, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2913, line: 141, baseType: !2981)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2913, line: 97, size: 256, elements: !2982)
!2982 = !{!2983}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2981, file: !2913, line: 107, baseType: !2984, size: 256)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2913, line: 98, size: 256, elements: !2985)
!2985 = !{!2986, !2991, !2996, !3001, !3006, !3011, !3016, !3021}
!2986 = !DIDerivedType(tag: DW_TAG_member, scope: !2984, file: !2913, line: 99, baseType: !2987, size: 32)
!2987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2984, file: !2913, line: 99, size: 32, elements: !2988)
!2988 = !{!2989, !2990}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2987, file: !2913, line: 99, baseType: !108, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2987, file: !2913, line: 99, baseType: !108, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, scope: !2984, file: !2913, line: 100, baseType: !2992, size: 32, offset: 32)
!2992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2984, file: !2913, line: 100, size: 32, elements: !2993)
!2993 = !{!2994, !2995}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2992, file: !2913, line: 100, baseType: !108, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2992, file: !2913, line: 100, baseType: !108, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2984, file: !2913, line: 101, baseType: !2997, size: 32, offset: 64)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2984, file: !2913, line: 101, size: 32, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2997, file: !2913, line: 101, baseType: !108, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2997, file: !2913, line: 101, baseType: !108, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2984, file: !2913, line: 102, baseType: !3002, size: 32, offset: 96)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2984, file: !2913, line: 102, size: 32, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3002, file: !2913, line: 102, baseType: !108, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3002, file: !2913, line: 102, baseType: !108, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !2984, file: !2913, line: 103, baseType: !3007, size: 32, offset: 128)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2984, file: !2913, line: 103, size: 32, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3007, file: !2913, line: 103, baseType: !108, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3007, file: !2913, line: 103, baseType: !108, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !2984, file: !2913, line: 104, baseType: !3012, size: 32, offset: 160)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2984, file: !2913, line: 104, size: 32, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3012, file: !2913, line: 104, baseType: !108, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3012, file: !2913, line: 104, baseType: !108, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !2984, file: !2913, line: 105, baseType: !3017, size: 32, offset: 192)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2984, file: !2913, line: 105, size: 32, elements: !3018)
!3018 = !{!3019, !3020}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3017, file: !2913, line: 105, baseType: !108, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3017, file: !2913, line: 105, baseType: !108, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2984, file: !2913, line: 106, baseType: !108, size: 32, offset: 224)
!3022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3023, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1735, retainedTypes: !3024, splitDebugInlining: false, nameTableKind: None)
!3023 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3024 = !{!900, !331, !185, !108, !3025, !3042}
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !624, line: 426, baseType: !3027)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 411, size: 28704, elements: !3028)
!3028 = !{!3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3027, file: !624, line: 413, baseType: !1750, size: 256)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3027, file: !624, line: 414, baseType: !1752, size: 768, offset: 256)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3027, file: !624, line: 415, baseType: !1750, size: 256, offset: 1024)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3027, file: !624, line: 416, baseType: !1752, size: 768, offset: 1280)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3027, file: !624, line: 417, baseType: !1750, size: 256, offset: 2048)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3027, file: !624, line: 418, baseType: !1752, size: 768, offset: 2304)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3027, file: !624, line: 419, baseType: !1750, size: 256, offset: 3072)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3027, file: !624, line: 420, baseType: !1752, size: 768, offset: 3328)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3027, file: !624, line: 421, baseType: !1750, size: 256, offset: 4096)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3027, file: !624, line: 422, baseType: !1763, size: 1792, offset: 4352)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3027, file: !624, line: 423, baseType: !1767, size: 1920, offset: 6144)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3027, file: !624, line: 424, baseType: !1772, size: 20608, offset: 8064)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3027, file: !624, line: 425, baseType: !409, size: 32, offset: 28672)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !3044)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !3045)
!3045 = !{!3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3044, file: !624, line: 447, baseType: !628, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3044, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3044, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3044, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3044, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3044, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3044, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3044, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3044, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3044, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3044, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3044, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3044, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3044, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3044, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3044, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3044, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3044, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3044, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3044, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3044, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!3067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3069, splitDebugInlining: false, nameTableKind: None)
!3068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3069 = !{!3070, !102, !103}
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !624, line: 468, baseType: !3072)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 445, size: 1120, elements: !3073)
!3073 = !{!3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3072, file: !624, line: 447, baseType: !628, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3072, file: !624, line: 448, baseType: !409, size: 32, offset: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3072, file: !624, line: 449, baseType: !409, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3072, file: !624, line: 450, baseType: !409, size: 32, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3072, file: !624, line: 451, baseType: !409, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3072, file: !624, line: 452, baseType: !409, size: 32, offset: 160)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3072, file: !624, line: 453, baseType: !1787, size: 96, offset: 192)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3072, file: !624, line: 454, baseType: !409, size: 32, offset: 288)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3072, file: !624, line: 455, baseType: !409, size: 32, offset: 320)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3072, file: !624, line: 456, baseType: !409, size: 32, offset: 352)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3072, file: !624, line: 457, baseType: !409, size: 32, offset: 384)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3072, file: !624, line: 458, baseType: !409, size: 32, offset: 416)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3072, file: !624, line: 459, baseType: !409, size: 32, offset: 448)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3072, file: !624, line: 460, baseType: !409, size: 32, offset: 480)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3072, file: !624, line: 461, baseType: !1798, size: 64, offset: 512)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3072, file: !624, line: 462, baseType: !628, size: 32, offset: 576)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3072, file: !624, line: 463, baseType: !628, size: 32, offset: 608)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3072, file: !624, line: 464, baseType: !1802, size: 128, offset: 640)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3072, file: !624, line: 465, baseType: !1804, size: 160, offset: 768)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3072, file: !624, line: 466, baseType: !1806, size: 160, offset: 928)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3072, file: !624, line: 467, baseType: !409, size: 32, offset: 1088)
!3095 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3096, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3097, splitDebugInlining: false, nameTableKind: None)
!3096 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3097 = !{!278, !277, !132, !1107, !3098, !186, !102}
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!3100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3101, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3102, splitDebugInlining: false, nameTableKind: None)
!3101 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3102 = !{!3103}
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 32)
!3104 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 586, baseType: !3105)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 550, size: 1216, elements: !3106)
!3106 = !{!3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3105, file: !405, line: 552, baseType: !409, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3105, file: !405, line: 553, baseType: !409, size: 32, offset: 32)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3105, file: !405, line: 554, baseType: !409, size: 32, offset: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3105, file: !405, line: 555, baseType: !409, size: 32, offset: 96)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3105, file: !405, line: 556, baseType: !409, size: 32, offset: 128)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3105, file: !405, line: 557, baseType: !409, size: 32, offset: 160)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3105, file: !405, line: 558, baseType: !409, size: 32, offset: 192)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3105, file: !405, line: 559, baseType: !108, size: 32, offset: 224)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3105, file: !405, line: 560, baseType: !409, size: 32, offset: 256)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3105, file: !405, line: 561, baseType: !409, size: 32, offset: 288)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3105, file: !405, line: 562, baseType: !972, size: 64, offset: 320)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3105, file: !405, line: 563, baseType: !409, size: 32, offset: 384)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3105, file: !405, line: 564, baseType: !409, size: 32, offset: 416)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3105, file: !405, line: 565, baseType: !409, size: 32, offset: 448)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3105, file: !405, line: 566, baseType: !108, size: 32, offset: 480)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3105, file: !405, line: 567, baseType: !409, size: 32, offset: 512)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3105, file: !405, line: 568, baseType: !409, size: 32, offset: 544)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3105, file: !405, line: 569, baseType: !972, size: 64, offset: 576)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3105, file: !405, line: 570, baseType: !409, size: 32, offset: 640)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3105, file: !405, line: 571, baseType: !409, size: 32, offset: 672)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3105, file: !405, line: 572, baseType: !409, size: 32, offset: 704)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3105, file: !405, line: 573, baseType: !108, size: 32, offset: 736)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3105, file: !405, line: 574, baseType: !409, size: 32, offset: 768)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3105, file: !405, line: 575, baseType: !409, size: 32, offset: 800)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3105, file: !405, line: 576, baseType: !972, size: 64, offset: 832)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3105, file: !405, line: 577, baseType: !409, size: 32, offset: 896)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3105, file: !405, line: 578, baseType: !409, size: 32, offset: 928)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3105, file: !405, line: 579, baseType: !972, size: 64, offset: 960)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3105, file: !405, line: 580, baseType: !409, size: 32, offset: 1024)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3105, file: !405, line: 581, baseType: !409, size: 32, offset: 1056)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3105, file: !405, line: 582, baseType: !409, size: 32, offset: 1088)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3105, file: !405, line: 583, baseType: !409, size: 32, offset: 1120)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3105, file: !405, line: 584, baseType: !409, size: 32, offset: 1152)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3105, file: !405, line: 585, baseType: !409, size: 32, offset: 1184)
!3141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3142, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3142 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3144, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3145, retainedTypes: !3161, splitDebugInlining: false, nameTableKind: None)
!3144 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3145 = !{!3146, !3153, !3157}
!3146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3147, line: 38, baseType: !32, size: 32, elements: !3148)
!3147 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3148 = !{!3149, !3150, !3151, !3152}
!3149 = !DIEnumerator(name: "HAL_OK", value: 0)
!3150 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3151 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3152 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3153 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !945, line: 184, baseType: !32, size: 32, elements: !3154)
!3154 = !{!3155, !3156}
!3155 = !DIEnumerator(name: "RESET", value: 0)
!3156 = !DIEnumerator(name: "SET", value: 1)
!3157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !945, line: 190, baseType: !32, size: 32, elements: !3158)
!3158 = !{!3159, !3160}
!3159 = !DIEnumerator(name: "DISABLE", value: 0)
!3160 = !DIEnumerator(name: "ENABLE", value: 1)
!3161 = !{!3162, !108, !3200, !1584, !185, !109, !102}
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 586, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 550, size: 1216, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3164, file: !405, line: 552, baseType: !409, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3164, file: !405, line: 553, baseType: !409, size: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3164, file: !405, line: 554, baseType: !409, size: 32, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3164, file: !405, line: 555, baseType: !409, size: 32, offset: 96)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3164, file: !405, line: 556, baseType: !409, size: 32, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3164, file: !405, line: 557, baseType: !409, size: 32, offset: 160)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3164, file: !405, line: 558, baseType: !409, size: 32, offset: 192)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3164, file: !405, line: 559, baseType: !108, size: 32, offset: 224)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3164, file: !405, line: 560, baseType: !409, size: 32, offset: 256)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3164, file: !405, line: 561, baseType: !409, size: 32, offset: 288)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3164, file: !405, line: 562, baseType: !972, size: 64, offset: 320)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3164, file: !405, line: 563, baseType: !409, size: 32, offset: 384)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3164, file: !405, line: 564, baseType: !409, size: 32, offset: 416)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3164, file: !405, line: 565, baseType: !409, size: 32, offset: 448)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3164, file: !405, line: 566, baseType: !108, size: 32, offset: 480)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3164, file: !405, line: 567, baseType: !409, size: 32, offset: 512)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3164, file: !405, line: 568, baseType: !409, size: 32, offset: 544)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3164, file: !405, line: 569, baseType: !972, size: 64, offset: 576)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3164, file: !405, line: 570, baseType: !409, size: 32, offset: 640)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3164, file: !405, line: 571, baseType: !409, size: 32, offset: 672)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3164, file: !405, line: 572, baseType: !409, size: 32, offset: 704)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3164, file: !405, line: 573, baseType: !108, size: 32, offset: 736)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3164, file: !405, line: 574, baseType: !409, size: 32, offset: 768)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3164, file: !405, line: 575, baseType: !409, size: 32, offset: 800)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3164, file: !405, line: 576, baseType: !972, size: 64, offset: 832)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3164, file: !405, line: 577, baseType: !409, size: 32, offset: 896)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3164, file: !405, line: 578, baseType: !409, size: 32, offset: 928)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3164, file: !405, line: 579, baseType: !972, size: 64, offset: 960)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3164, file: !405, line: 580, baseType: !409, size: 32, offset: 1024)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3164, file: !405, line: 581, baseType: !409, size: 32, offset: 1056)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3164, file: !405, line: 582, baseType: !409, size: 32, offset: 1088)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3164, file: !405, line: 583, baseType: !409, size: 32, offset: 1120)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3164, file: !405, line: 584, baseType: !409, size: 32, offset: 1152)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3164, file: !405, line: 585, baseType: !409, size: 32, offset: 1184)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 544, baseType: !3202)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 540, size: 64, elements: !3203)
!3203 = !{!3204, !3205}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3202, file: !405, line: 542, baseType: !409, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3202, file: !405, line: 543, baseType: !409, size: 32, offset: 32)
!3206 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3207, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3208, retainedTypes: !3209, splitDebugInlining: false, nameTableKind: None)
!3207 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3208 = !{!944}
!3209 = !{!3210, !108, !3218, !3224, !3235}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !624, line: 770, baseType: !3212)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !624, line: 764, size: 128, elements: !3213)
!3213 = !{!3214, !3215, !3216, !3217}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3212, file: !624, line: 766, baseType: !409, size: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3212, file: !624, line: 767, baseType: !409, size: 32, offset: 32)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3212, file: !624, line: 768, baseType: !409, size: 32, offset: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3212, file: !624, line: 769, baseType: !628, size: 32, offset: 96)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 32)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !405, line: 544, baseType: !3220)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 540, size: 64, elements: !3221)
!3221 = !{!3222, !3223}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3220, file: !405, line: 542, baseType: !409, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3220, file: !405, line: 543, baseType: !409, size: 32, offset: 32)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !405, line: 407, baseType: !3226)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 398, size: 224, elements: !3227)
!3227 = !{!3228, !3229, !3230, !3231, !3232, !3233, !3234}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3226, file: !405, line: 400, baseType: !409, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3226, file: !405, line: 401, baseType: !409, size: 32, offset: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3226, file: !405, line: 402, baseType: !409, size: 32, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3226, file: !405, line: 403, baseType: !409, size: 32, offset: 96)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3226, file: !405, line: 404, baseType: !409, size: 32, offset: 128)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3226, file: !405, line: 405, baseType: !409, size: 32, offset: 160)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3226, file: !405, line: 406, baseType: !409, size: 32, offset: 192)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 32)
!3236 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !405, line: 586, baseType: !3237)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 550, size: 1216, elements: !3238)
!3238 = !{!3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3237, file: !405, line: 552, baseType: !409, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3237, file: !405, line: 553, baseType: !409, size: 32, offset: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3237, file: !405, line: 554, baseType: !409, size: 32, offset: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3237, file: !405, line: 555, baseType: !409, size: 32, offset: 96)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3237, file: !405, line: 556, baseType: !409, size: 32, offset: 128)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3237, file: !405, line: 557, baseType: !409, size: 32, offset: 160)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3237, file: !405, line: 558, baseType: !409, size: 32, offset: 192)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3237, file: !405, line: 559, baseType: !108, size: 32, offset: 224)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3237, file: !405, line: 560, baseType: !409, size: 32, offset: 256)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3237, file: !405, line: 561, baseType: !409, size: 32, offset: 288)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3237, file: !405, line: 562, baseType: !972, size: 64, offset: 320)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3237, file: !405, line: 563, baseType: !409, size: 32, offset: 384)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3237, file: !405, line: 564, baseType: !409, size: 32, offset: 416)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3237, file: !405, line: 565, baseType: !409, size: 32, offset: 448)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3237, file: !405, line: 566, baseType: !108, size: 32, offset: 480)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3237, file: !405, line: 567, baseType: !409, size: 32, offset: 512)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3237, file: !405, line: 568, baseType: !409, size: 32, offset: 544)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3237, file: !405, line: 569, baseType: !972, size: 64, offset: 576)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3237, file: !405, line: 570, baseType: !409, size: 32, offset: 640)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3237, file: !405, line: 571, baseType: !409, size: 32, offset: 672)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3237, file: !405, line: 572, baseType: !409, size: 32, offset: 704)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3237, file: !405, line: 573, baseType: !108, size: 32, offset: 736)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3237, file: !405, line: 574, baseType: !409, size: 32, offset: 768)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3237, file: !405, line: 575, baseType: !409, size: 32, offset: 800)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3237, file: !405, line: 576, baseType: !972, size: 64, offset: 832)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3237, file: !405, line: 577, baseType: !409, size: 32, offset: 896)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3237, file: !405, line: 578, baseType: !409, size: 32, offset: 928)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3237, file: !405, line: 579, baseType: !972, size: 64, offset: 960)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3237, file: !405, line: 580, baseType: !409, size: 32, offset: 1024)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3237, file: !405, line: 581, baseType: !409, size: 32, offset: 1056)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3237, file: !405, line: 582, baseType: !409, size: 32, offset: 1088)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3237, file: !405, line: 583, baseType: !409, size: 32, offset: 1120)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3237, file: !405, line: 584, baseType: !409, size: 32, offset: 1152)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3237, file: !405, line: 585, baseType: !409, size: 32, offset: 1184)
!3273 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3274, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3275, splitDebugInlining: false, nameTableKind: None)
!3274 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3275 = !{!102, !132}
!3276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3277, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3278, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3277 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3278 = !{!3279, !3286, !30}
!3279 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3280, line: 14, baseType: !32, size: 32, elements: !3281)
!3280 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3281 = !{!3282, !3283, !3284, !3285}
!3282 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3283 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3284 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3285 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3286 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3280, line: 42, baseType: !32, size: 32, elements: !3287)
!3287 = !{!3288, !3289, !3290, !3291, !3292, !3293}
!3288 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3289 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3290 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3291 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3292 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3293 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3294 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3295, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3295 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3297, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3298, splitDebugInlining: false, nameTableKind: None)
!3297 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3298 = !{!102, !103, !3299, !3314}
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 32)
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !3301)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !3302)
!3302 = !{!3303, !3309}
!3303 = !DIDerivedType(tag: DW_TAG_member, scope: !3301, file: !146, line: 38, baseType: !3304, size: 32)
!3304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3301, file: !146, line: 38, size: 32, elements: !3305)
!3305 = !{!3306, !3308}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3304, file: !146, line: 39, baseType: !3307, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3304, file: !146, line: 40, baseType: !3307, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, scope: !3301, file: !146, line: 42, baseType: !3310, size: 32, offset: 32)
!3310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3301, file: !146, line: 42, size: 32, elements: !3311)
!3311 = !{!3312, !3313}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3310, file: !146, line: 43, baseType: !3307, size: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3310, file: !146, line: 44, baseType: !3307, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 32)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !3316)
!3316 = !{!3317, !3361, !3373, !3374, !3375, !3376, !3382, !3395}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3315, file: !163, line: 247, baseType: !3318, size: 384)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !3319)
!3319 = !{!3320, !3330, !3337, !3338, !3339, !3348, !3349, !3350}
!3320 = !DIDerivedType(tag: DW_TAG_member, scope: !3318, file: !163, line: 60, baseType: !3321, size: 64)
!3321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3318, file: !163, line: 60, size: 64, elements: !3322)
!3322 = !{!3323, !3324}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3321, file: !163, line: 61, baseType: !3300, size: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3321, file: !163, line: 62, baseType: !3325, size: 64)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !3326)
!3326 = !{!3327}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3325, file: !175, line: 50, baseType: !3328, size: 64)
!3328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3329, size: 64, elements: !180)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3318, file: !163, line: 68, baseType: !3331, size: 32, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !3333)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !3334)
!3334 = !{!3335}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3333, file: !141, line: 232, baseType: !3336, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !3301)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3318, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3318, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!3339 = !DIDerivedType(tag: DW_TAG_member, scope: !3318, file: !163, line: 90, baseType: !3340, size: 16, offset: 112)
!3340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3318, file: !163, line: 90, size: 16, elements: !3341)
!3341 = !{!3342, !3347}
!3342 = !DIDerivedType(tag: DW_TAG_member, scope: !3340, file: !163, line: 91, baseType: !3343, size: 16)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3340, file: !163, line: 91, size: 16, elements: !3344)
!3344 = !{!3345, !3346}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3343, file: !163, line: 96, baseType: !195, size: 8)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3343, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3340, file: !163, line: 100, baseType: !121, size: 16)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3318, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3318, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3318, file: !163, line: 131, baseType: !3351, size: 192, offset: 192)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !3352)
!3352 = !{!3353, !3354, !3360}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3351, file: !141, line: 245, baseType: !3300, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3351, file: !141, line: 246, baseType: !3355, size: 32, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !3356)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 32)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{null, !3359}
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3351, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3315, file: !163, line: 250, baseType: !3362, size: 288, offset: 384)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !3363)
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3362, file: !214, line: 26, baseType: !108, size: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3362, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3362, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3362, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3362, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3362, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3362, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3362, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3362, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3315, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3315, file: !163, line: 256, baseType: !3332, size: 64, offset: 704)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3315, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3315, file: !163, line: 300, baseType: !3377, size: 96, offset: 800)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !3378)
!3378 = !{!3379, !3380, !3381}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3377, file: !163, line: 153, baseType: !22, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3377, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3377, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3315, file: !163, line: 325, baseType: !3383, size: 32, offset: 896)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 32)
!3384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !3385)
!3385 = !{!3386, !3392, !3393}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3384, file: !137, line: 5074, baseType: !3387, size: 96)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !3388)
!3388 = !{!3389, !3390, !3391}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3387, file: !240, line: 57, baseType: !243, size: 32)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3387, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3387, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3384, file: !137, line: 5075, baseType: !3332, size: 64, offset: 96)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3384, file: !137, line: 5076, baseType: !3394, offset: 160)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3315, file: !163, line: 343, baseType: !3396, size: 64, offset: 928)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !3397)
!3397 = !{!3398, !3399}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3396, file: !214, line: 63, baseType: !108, size: 32)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3396, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!3400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3402, splitDebugInlining: false, nameTableKind: None)
!3401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3402 = !{!22, !102, !103}
!3403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !392, splitDebugInlining: false, nameTableKind: None)
!3406 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3407 = !{!"Ubuntu clang version 14.0.6"}
!3408 = !{i32 7, !"Dwarf Version", i32 4}
!3409 = !{i32 2, !"Debug Info Version", i32 3}
!3410 = !{i32 1, !"wchar_size", i32 4}
!3411 = !{i32 1, !"min_enum_size", i32 4}
!3412 = !{i32 1, !"branch-target-enforcement", i32 0}
!3413 = !{i32 1, !"sign-return-address", i32 0}
!3414 = !{i32 1, !"sign-return-address-all", i32 0}
!3415 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3416 = !{i32 7, !"frame-pointer", i32 2}
!3417 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3418, file: !3418, line: 26, type: !334, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2717, retainedNodes: !251)
!3418 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3419 = !DILocation(line: 28, column: 1, scope: !3417)
!3420 = !{i64 2155361943, i64 2155361963, i64 2155362026}
!3421 = !DILocation(line: 29, column: 1, scope: !3417)
!3422 = !{i64 2155362358, i64 2155362378, i64 2155362441}
!3423 = !DILocation(line: 30, column: 1, scope: !3417)
!3424 = !{i64 2155362777, i64 2155362797, i64 2155362860}
!3425 = !DILocation(line: 31, column: 1, scope: !3417)
!3426 = !{i64 2155363196, i64 2155363216, i64 2155363279}
!3427 = !DILocation(line: 33, column: 1, scope: !3417)
!3428 = !{i64 2155363488, i64 2155363508, i64 2155363571}
!3429 = !DILocation(line: 35, column: 1, scope: !3417)
!3430 = !{i64 2155363813, i64 2155363833, i64 2155363896}
!3431 = !DILocation(line: 50, column: 1, scope: !3417)
!3432 = !{i64 2155364240, i64 2155364260, i64 2155364323}
!3433 = !DILocation(line: 54, column: 1, scope: !3417)
!3434 = !{i64 2155368740, i64 2155368760, i64 2155368823}
!3435 = !DILocation(line: 61, column: 1, scope: !3417)
!3436 = !{i64 2155369057, i64 2155369077, i64 2155369140}
!3437 = !DILocation(line: 63, column: 1, scope: !3417)
!3438 = !{i64 2155369437, i64 2155369457, i64 2155369520}
!3439 = !DILocation(line: 64, column: 1, scope: !3417)
!3440 = !{i64 2155369959, i64 2155369979, i64 2155370042}
!3441 = !DILocation(line: 65, column: 1, scope: !3417)
!3442 = !{i64 2155370457, i64 2155370477, i64 2155370540}
!3443 = !DILocation(line: 66, column: 1, scope: !3417)
!3444 = !{i64 2155370939, i64 2155370959, i64 2155371022}
!3445 = !DILocation(line: 67, column: 1, scope: !3417)
!3446 = !{i64 2155371446, i64 2155371466, i64 2155371529}
!3447 = !DILocation(line: 68, column: 1, scope: !3417)
!3448 = !{i64 2155371934, i64 2155371954, i64 2155372017}
!3449 = !DILocation(line: 70, column: 1, scope: !3417)
!3450 = !{i64 2155372402, i64 2155372422, i64 2155372485}
!3451 = !DILocation(line: 71, column: 1, scope: !3417)
!3452 = !{i64 2155372844, i64 2155372864, i64 2155372927}
!3453 = !DILocation(line: 72, column: 1, scope: !3417)
!3454 = !{i64 2155373302, i64 2155373322, i64 2155373385}
!3455 = !DILocation(line: 79, column: 1, scope: !3417)
!3456 = !{i64 2155373756, i64 2155373776, i64 2155373839}
!3457 = !DILocation(line: 80, column: 1, scope: !3417)
!3458 = !{i64 2155374267, i64 2155374287, i64 2155374350}
!3459 = !DILocation(line: 82, column: 1, scope: !3417)
!3460 = !{i64 2155374758, i64 2155374778, i64 2155374841}
!3461 = !DILocation(line: 97, column: 1, scope: !3417)
!3462 = !{i64 2155375095, i64 2155375115, i64 2155375178}
!3463 = !DILocation(line: 99, column: 1, scope: !3417)
!3464 = !{i64 2155375313, i64 2155375333, i64 2155375396}
!3465 = !DILocation(line: 102, column: 1, scope: !3417)
!3466 = !{i64 2155375570, i64 2155375590, i64 2155375653}
!3467 = !DILocation(line: 105, column: 1, scope: !3417)
!3468 = !{i64 2155375810, i64 2155375830, i64 2155375893}
!3469 = !DILocation(line: 115, column: 1, scope: !3417)
!3470 = !{i64 2155376149, i64 2155376169, i64 2155376232}
!3471 = !DILocation(line: 118, column: 1, scope: !3417)
!3472 = !{i64 2155376493, i64 2155376513, i64 2155376576}
!3473 = !DILocation(line: 32, column: 1, scope: !3474)
!3474 = !DILexicalBlockFile(scope: !3417, file: !3475, discriminator: 0)
!3475 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3476 = !{i64 2155376849, i64 2155376869, i64 2155376932}
!3477 = !DILocation(line: 33, column: 1, scope: !3474)
!3478 = !{i64 2155377361, i64 2155377381, i64 2155377444}
!3479 = !DILocation(line: 53, column: 1, scope: !3474)
!3480 = !{i64 2155377869, i64 2155377889, i64 2155377952}
!3481 = !DILocation(line: 54, column: 1, scope: !3474)
!3482 = !{i64 2155382348, i64 2155382368, i64 2155382431}
!3483 = !DILocation(line: 55, column: 1, scope: !3474)
!3484 = !{i64 2155382766, i64 2155382786, i64 2155382849}
!3485 = !DILocation(line: 56, column: 1, scope: !3474)
!3486 = !{i64 2155383184, i64 2155383204, i64 2155383267}
!3487 = !DILocation(line: 57, column: 1, scope: !3474)
!3488 = !{i64 2155383602, i64 2155383622, i64 2155383685}
!3489 = !DILocation(line: 58, column: 1, scope: !3474)
!3490 = !{i64 2155384020, i64 2155384040, i64 2155384103}
!3491 = !DILocation(line: 59, column: 1, scope: !3474)
!3492 = !{i64 2155384438, i64 2155384458, i64 2155384521}
!3493 = !DILocation(line: 60, column: 1, scope: !3474)
!3494 = !{i64 2155384862, i64 2155384882, i64 2155384945}
!3495 = !DILocation(line: 61, column: 1, scope: !3474)
!3496 = !{i64 2155385179, i64 2155385199, i64 2155385262}
!3497 = !DILocation(line: 70, column: 1, scope: !3474)
!3498 = !{i64 2155385408, i64 2155385428, i64 2155385491}
!3499 = !DILocation(line: 72, column: 1, scope: !3474)
!3500 = !{i64 2155385740, i64 2155385760, i64 2155385823}
!3501 = !DILocation(line: 73, column: 1, scope: !3474)
!3502 = !{i64 2155386190, i64 2155386210, i64 2155386273}
!3503 = !DILocation(line: 74, column: 1, scope: !3474)
!3504 = !{i64 2155386640, i64 2155386660, i64 2155386723}
!3505 = !DILocation(line: 75, column: 1, scope: !3474)
!3506 = !{i64 2155387090, i64 2155387110, i64 2155387173}
!3507 = !DILocation(line: 76, column: 1, scope: !3474)
!3508 = !{i64 2155387540, i64 2155387560, i64 2155387623}
!3509 = !DILocation(line: 77, column: 1, scope: !3474)
!3510 = !{i64 2155387990, i64 2155388010, i64 2155388073}
!3511 = !DILocation(line: 78, column: 1, scope: !3474)
!3512 = !{i64 2155388440, i64 2155388460, i64 2155388523}
!3513 = !DILocation(line: 79, column: 1, scope: !3474)
!3514 = !{i64 2155388890, i64 2155388910, i64 2155388973}
!3515 = !DILocation(line: 80, column: 1, scope: !3474)
!3516 = !{i64 2155389343, i64 2155389363, i64 2155389426}
!3517 = !DILocation(line: 84, column: 1, scope: !3474)
!3518 = !{i64 2155389675, i64 2155389695, i64 2155389758}
!3519 = !DILocation(line: 91, column: 1, scope: !3474)
!3520 = !{i64 2155390072, i64 2155390092, i64 2155390155}
!3521 = !DILocation(line: 93, column: 1, scope: !3474)
!3522 = !{i64 2155390439, i64 2155390459, i64 2155390522}
!3523 = !DILocation(line: 106, column: 1, scope: !3474)
!3524 = !{i64 2155390709, i64 2155390729, i64 2155390792}
!3525 = !DILocation(line: 11, column: 1, scope: !3526)
!3526 = !DILexicalBlockFile(scope: !3417, file: !3527, discriminator: 0)
!3527 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3528 = distinct !DISubprogram(name: "s_cb", scope: !114, file: !114, line: 152, type: !287, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3529)
!3529 = !{!3530, !3531, !3538}
!3530 = !DILocalVariable(name: "chan", arg: 1, scope: !3528, file: !114, line: 152, type: !289)
!3531 = !DILocalVariable(name: "msg_received", scope: !3528, file: !114, line: 154, type: !3532)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bm_msg", file: !353, line: 15, size: 2048, elements: !3533)
!3533 = !{!3534}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3532, file: !353, line: 16, baseType: !3535, size: 2048)
!3535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !3536)
!3536 = !{!3537}
!3537 = !DISubrange(count: 256)
!3538 = !DILocalVariable(name: "actual_message_data", scope: !3528, file: !114, line: 155, type: !3539)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 32)
!3540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!3541 = !DILocation(line: 0, scope: !3528)
!3542 = !DILocation(line: 154, column: 2, scope: !3528)
!3543 = !DILocation(line: 154, column: 16, scope: !3528)
!3544 = !DILocation(line: 155, column: 56, scope: !3528)
!3545 = !DILocation(line: 157, column: 45, scope: !3528)
!3546 = !DILocation(line: 157, column: 2, scope: !3528)
!3547 = !DILocation(line: 159, column: 8, scope: !3528)
!3548 = !DILocation(line: 160, column: 1, scope: !3528)
!3549 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !117, file: !117, line: 416, type: !3550, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3552)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!13, !289}
!3552 = !{!3553}
!3553 = !DILocalVariable(name: "chan", arg: 1, scope: !3549, file: !117, line: 416, type: !289)
!3554 = !DILocation(line: 0, scope: !3549)
!3555 = !DILocation(line: 420, column: 15, scope: !3549)
!3556 = !DILocation(line: 420, column: 2, scope: !3549)
!3557 = distinct !DISubprogram(name: "producer_thread", scope: !114, file: !114, line: 164, type: !334, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3558)
!3558 = !{!3559, !3560, !3562, !3564, !3565, !3567, !3568, !3569}
!3559 = !DILocalVariable(name: "msg", scope: !3557, file: !114, line: 169, type: !3532)
!3560 = !DILocalVariable(name: "actual_message_data", scope: !3557, file: !114, line: 170, type: !3561)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!3562 = !DILocalVariable(name: "i", scope: !3563, file: !114, line: 172, type: !109)
!3563 = distinct !DILexicalBlock(scope: !3557, file: !114, line: 172, column: 2)
!3564 = !DILocalVariable(name: "start", scope: !3557, file: !114, line: 186, type: !108)
!3565 = !DILocalVariable(name: "internal_count", scope: !3566, file: !114, line: 188, type: !109)
!3566 = distinct !DILexicalBlock(scope: !3557, file: !114, line: 188, column: 2)
!3567 = !DILocalVariable(name: "duration", scope: !3557, file: !114, line: 200, type: !108)
!3568 = !DILocalVariable(name: "i", scope: !3557, file: !114, line: 206, type: !109)
!3569 = !DILocalVariable(name: "f", scope: !3557, file: !114, line: 207, type: !109)
!3570 = !DILocation(line: 166, column: 2, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !114, line: 166, column: 2)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !114, line: 166, column: 2)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !114, line: 166, column: 2)
!3574 = distinct !DILexicalBlock(scope: !3557, file: !114, line: 166, column: 2)
!3575 = !DILocation(line: 169, column: 2, scope: !3557)
!3576 = !DILocation(line: 169, column: 16, scope: !3557)
!3577 = !DILocation(line: 0, scope: !3563)
!3578 = !DILocation(line: 172, column: 2, scope: !3563)
!3579 = !DILocation(line: 176, column: 2, scope: !3557)
!3580 = !DILocation(line: 0, scope: !3557)
!3581 = !DILocation(line: 179, column: 35, scope: !3557)
!3582 = !DILocation(line: 179, column: 33, scope: !3557)
!3583 = !DILocation(line: 181, column: 28, scope: !3557)
!3584 = !DILocation(line: 184, column: 2, scope: !3557)
!3585 = !DILocation(line: 186, column: 19, scope: !3557)
!3586 = !DILocation(line: 0, scope: !3566)
!3587 = !DILocation(line: 188, column: 2, scope: !3566)
!3588 = !DILocation(line: 173, column: 18, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !114, line: 172, column: 62)
!3590 = distinct !DILexicalBlock(scope: !3563, file: !114, line: 172, column: 2)
!3591 = !DILocation(line: 173, column: 3, scope: !3589)
!3592 = !DILocation(line: 173, column: 16, scope: !3589)
!3593 = !DILocation(line: 172, column: 57, scope: !3590)
!3594 = !DILocation(line: 172, column: 52, scope: !3590)
!3595 = distinct !{!3595, !3578, !3596}
!3596 = !DILocation(line: 174, column: 2, scope: !3563)
!3597 = !DILocation(line: 200, column: 23, scope: !3557)
!3598 = !DILocation(line: 200, column: 41, scope: !3557)
!3599 = !DILocation(line: 202, column: 15, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3557, file: !114, line: 202, column: 6)
!3601 = !DILocation(line: 202, column: 6, scope: !3557)
!3602 = !DILocation(line: 190, column: 3, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !114, line: 189, column: 49)
!3604 = distinct !DILexicalBlock(scope: !3566, file: !114, line: 188, column: 2)
!3605 = !DILocation(line: 194, column: 31, scope: !3603)
!3606 = !DILocation(line: 194, column: 3, scope: !3603)
!3607 = !DILocation(line: 196, column: 3, scope: !3603)
!3608 = !DILocation(line: 198, column: 33, scope: !3603)
!3609 = !DILocation(line: 198, column: 3, scope: !3603)
!3610 = !DILocation(line: 189, column: 22, scope: !3604)
!3611 = !DILocation(line: 188, column: 85, scope: !3604)
!3612 = distinct !{!3612, !3587, !3613}
!3613 = !DILocation(line: 199, column: 2, scope: !3566)
!3614 = !DILocation(line: 203, column: 3, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !114, line: 203, column: 3)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !114, line: 203, column: 3)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !114, line: 203, column: 3)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !114, line: 203, column: 3)
!3619 = distinct !DILexicalBlock(scope: !3600, file: !114, line: 202, column: 21)
!3620 = !DILocation(line: 204, column: 3, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3619, file: !114, line: 204, column: 3)
!3622 = !{i64 2155813000, i64 2155813016, i64 2155813042, i64 2155813070, i64 2155813090}
!3623 = !DILocation(line: 205, column: 2, scope: !3619)
!3624 = !DILocation(line: 206, column: 43, scope: !3557)
!3625 = !DILocation(line: 206, column: 41, scope: !3557)
!3626 = !DILocation(line: 207, column: 44, scope: !3557)
!3627 = !DILocation(line: 207, column: 56, scope: !3557)
!3628 = !DILocation(line: 209, column: 2, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !114, line: 209, column: 2)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !114, line: 209, column: 2)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !114, line: 209, column: 2)
!3632 = distinct !DILexicalBlock(scope: !3557, file: !114, line: 209, column: 2)
!3633 = !DILocation(line: 210, column: 2, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !114, line: 210, column: 2)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !114, line: 210, column: 2)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !114, line: 210, column: 2)
!3637 = distinct !DILexicalBlock(scope: !3557, file: !114, line: 210, column: 2)
!3638 = !DILocation(line: 211, column: 2, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !114, line: 211, column: 2)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !114, line: 211, column: 2)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !114, line: 211, column: 2)
!3642 = distinct !DILexicalBlock(scope: !3557, file: !114, line: 211, column: 2)
!3643 = !DILocation(line: 213, column: 2, scope: !3557)
!3644 = !DILocation(line: 214, column: 1, scope: !3557)
!3645 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3646, file: !3646, line: 175, type: !3647, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3649)
!3646 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!278, !103}
!3649 = !{!3650}
!3650 = !DILocalVariable(name: "level", arg: 1, scope: !3645, file: !3646, line: 175, type: !103)
!3651 = !DILocation(line: 0, scope: !3645)
!3652 = !DILocation(line: 177, column: 2, scope: !3645)
!3653 = !DILocation(line: 189, column: 1, scope: !3645)
!3654 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !137, file: !137, line: 1640, type: !3655, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!108}
!3657 = !DILocation(line: 1642, column: 19, scope: !3654)
!3658 = !DILocation(line: 1642, column: 9, scope: !3654)
!3659 = !DILocation(line: 1642, column: 2, scope: !3654)
!3660 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3661, file: !3661, line: 403, type: !3662, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3664)
!3661 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3662 = !DISubroutineType(types: !3663)
!3663 = !{!109, !109}
!3664 = !{!3665}
!3665 = !DILocalVariable(name: "t", arg: 1, scope: !3660, file: !3661, line: 403, type: !109)
!3666 = !DILocation(line: 0, scope: !3660)
!3667 = !DILocation(line: 406, column: 2, scope: !3660)
!3668 = distinct !DISubprogram(name: "k_uptime_get", scope: !137, file: !137, line: 1616, type: !3669, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!106}
!3671 = !DILocation(line: 1618, column: 31, scope: !3668)
!3672 = !DILocation(line: 1618, column: 9, scope: !3668)
!3673 = !DILocation(line: 1618, column: 2, scope: !3668)
!3674 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3675, file: !3675, line: 564, type: !3669, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !251)
!3675 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!3676 = !DILocation(line: 573, column: 2, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3674, file: !3675, line: 573, column: 2)
!3678 = !{i64 2155079942}
!3679 = !DILocation(line: 574, column: 9, scope: !3674)
!3680 = !DILocation(line: 574, column: 2, scope: !3674)
!3681 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3661, file: !3661, line: 1103, type: !3662, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3682)
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "t", arg: 1, scope: !3681, file: !3661, line: 1103, type: !109)
!3684 = !DILocation(line: 0, scope: !3681)
!3685 = !DILocalVariable(name: "t", arg: 1, scope: !3686, file: !3661, line: 102, type: !109)
!3686 = distinct !DISubprogram(name: "z_tmcvt", scope: !3661, file: !3661, line: 102, type: !3687, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3689)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{!109, !109, !108, !108, !131, !131, !131, !131}
!3689 = !{!3685, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699}
!3690 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3686, file: !3661, line: 102, type: !108)
!3691 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3686, file: !3661, line: 103, type: !108)
!3692 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3686, file: !3661, line: 103, type: !131)
!3693 = !DILocalVariable(name: "result32", arg: 5, scope: !3686, file: !3661, line: 104, type: !131)
!3694 = !DILocalVariable(name: "round_up", arg: 6, scope: !3686, file: !3661, line: 104, type: !131)
!3695 = !DILocalVariable(name: "round_off", arg: 7, scope: !3686, file: !3661, line: 105, type: !131)
!3696 = !DILocalVariable(name: "mul_ratio", scope: !3686, file: !3661, line: 107, type: !131)
!3697 = !DILocalVariable(name: "div_ratio", scope: !3686, file: !3661, line: 109, type: !131)
!3698 = !DILocalVariable(name: "off", scope: !3686, file: !3661, line: 116, type: !109)
!3699 = !DILocalVariable(name: "rdivisor", scope: !3700, file: !3661, line: 119, type: !108)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !3661, line: 118, column: 18)
!3701 = distinct !DILexicalBlock(scope: !3686, file: !3661, line: 118, column: 6)
!3702 = !DILocation(line: 0, scope: !3686, inlinedAt: !3703)
!3703 = distinct !DILocation(line: 1106, column: 9, scope: !3681)
!3704 = !DILocation(line: 139, column: 13, scope: !3705, inlinedAt: !3703)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !3661, line: 138, column: 10)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !3661, line: 136, column: 7)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !3661, line: 134, column: 17)
!3708 = distinct !DILexicalBlock(scope: !3686, file: !3661, line: 134, column: 6)
!3709 = !DILocation(line: 1106, column: 2, scope: !3681)
!3710 = distinct !DISubprogram(name: "cbvprintf_package", scope: !381, file: !381, line: 233, type: !3711, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !3720)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!103, !102, !132, !108, !337, !3713}
!3713 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3714, line: 99, baseType: !3715)
!3714 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3715 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3714, line: 40, baseType: !3716)
!3716 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !381, baseType: !3717)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3718)
!3718 = !{!3719}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3717, file: !381, line: 18, baseType: !102, size: 32)
!3720 = !{!3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3756, !3765, !3768, !3769, !3772, !3775, !3778, !3781, !3787}
!3721 = !DILocalVariable(name: "packaged", arg: 1, scope: !3710, file: !381, line: 233, type: !102)
!3722 = !DILocalVariable(name: "len", arg: 2, scope: !3710, file: !381, line: 233, type: !132)
!3723 = !DILocalVariable(name: "flags", arg: 3, scope: !3710, file: !381, line: 233, type: !108)
!3724 = !DILocalVariable(name: "fmt", arg: 4, scope: !3710, file: !381, line: 234, type: !337)
!3725 = !DILocalVariable(name: "ap", arg: 5, scope: !3710, file: !381, line: 234, type: !3713)
!3726 = !DILocalVariable(name: "buf0", scope: !3710, file: !381, line: 247, type: !379)
!3727 = !DILocalVariable(name: "buf", scope: !3710, file: !381, line: 248, type: !379)
!3728 = !DILocalVariable(name: "size", scope: !3710, file: !381, line: 249, type: !32)
!3729 = !DILocalVariable(name: "align", scope: !3710, file: !381, line: 250, type: !32)
!3730 = !DILocalVariable(name: "str_ptr_pos", scope: !3710, file: !381, line: 251, type: !3731)
!3731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !1985)
!3732 = !DILocalVariable(name: "str_ptr_arg", scope: !3710, file: !381, line: 252, type: !3731)
!3733 = !DILocalVariable(name: "s_idx", scope: !3710, file: !381, line: 253, type: !32)
!3734 = !DILocalVariable(name: "s_rw_cnt", scope: !3710, file: !381, line: 254, type: !32)
!3735 = !DILocalVariable(name: "s_ro_cnt", scope: !3710, file: !381, line: 255, type: !32)
!3736 = !DILocalVariable(name: "arg_idx", scope: !3710, file: !381, line: 256, type: !103)
!3737 = !DILocalVariable(name: "i", scope: !3710, file: !381, line: 257, type: !32)
!3738 = !DILocalVariable(name: "s", scope: !3710, file: !381, line: 258, type: !337)
!3739 = !DILocalVariable(name: "parsing", scope: !3710, file: !381, line: 259, type: !131)
!3740 = !DILocalVariable(name: "rws_pos_en", scope: !3710, file: !381, line: 263, type: !131)
!3741 = !DILocalVariable(name: "fros_cnt", scope: !3710, file: !381, line: 268, type: !103)
!3742 = !DILocalVariable(name: "is_str_arg", scope: !3710, file: !381, line: 269, type: !131)
!3743 = !DILocalVariable(name: "pkg_hdr", scope: !3710, file: !381, line: 270, type: !3744)
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 32)
!3745 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3746, line: 78, size: 32, elements: !3747)
!3746 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3747 = !{!3748, !3755}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3745, file: !3746, line: 80, baseType: !3749, size: 32)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3746, line: 45, size: 32, elements: !3750)
!3750 = !{!3751, !3752, !3753, !3754}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3749, file: !3746, line: 47, baseType: !185, size: 8)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3749, file: !3746, line: 50, baseType: !185, size: 8, offset: 8)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3749, file: !3746, line: 53, baseType: !185, size: 8, offset: 16)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3749, file: !3746, line: 56, baseType: !185, size: 8, offset: 24)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3745, file: !3746, line: 82, baseType: !102, size: 32)
!3756 = !DILocalVariable(name: "v", scope: !3757, file: !381, line: 567, type: !3761)
!3757 = distinct !DILexicalBlock(scope: !3758, file: !381, line: 562, column: 14)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !381, line: 481, column: 18)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !381, line: 466, column: 3)
!3760 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 343, column: 15)
!3761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3710, file: !381, line: 567, size: 64, elements: !3762)
!3762 = !{!3763, !3764}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3761, file: !381, line: 567, baseType: !372, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3761, file: !381, line: 567, baseType: !370, size: 64)
!3765 = !DILocalVariable(name: "is_ro", scope: !3766, file: !381, line: 620, type: !131)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !381, line: 613, column: 19)
!3767 = distinct !DILexicalBlock(scope: !3760, file: !381, line: 613, column: 7)
!3768 = !DILocalVariable(name: "do_ro", scope: !3766, file: !381, line: 621, type: !131)
!3769 = !DILocalVariable(name: "s_ptr_idx", scope: !3770, file: !381, line: 626, type: !108)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !381, line: 625, column: 11)
!3771 = distinct !DILexicalBlock(scope: !3766, file: !381, line: 623, column: 8)
!3772 = !DILocalVariable(name: "v", scope: !3773, file: !381, line: 684, type: !103)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !381, line: 683, column: 35)
!3774 = distinct !DILexicalBlock(scope: !3767, file: !381, line: 683, column: 14)
!3775 = !DILocalVariable(name: "v", scope: !3776, file: !381, line: 691, type: !376)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !381, line: 690, column: 36)
!3777 = distinct !DILexicalBlock(scope: !3774, file: !381, line: 690, column: 14)
!3778 = !DILocalVariable(name: "v", scope: !3779, file: !381, line: 698, type: !107)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !381, line: 697, column: 41)
!3780 = distinct !DILexicalBlock(scope: !3777, file: !381, line: 697, column: 14)
!3781 = !DILocalVariable(name: "pos", scope: !3782, file: !381, line: 762, type: !185)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !381, line: 757, column: 31)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !381, line: 757, column: 3)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !381, line: 757, column: 3)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !381, line: 756, column: 16)
!3786 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 756, column: 6)
!3787 = !DILabel(scope: !3766, name: "process_string", file: !381, line: 615)
!3788 = !DILocation(line: 0, scope: !3710)
!3789 = !DILocation(line: 251, column: 2, scope: !3710)
!3790 = !DILocation(line: 251, column: 10, scope: !3710)
!3791 = !DILocation(line: 252, column: 2, scope: !3710)
!3792 = !DILocation(line: 252, column: 10, scope: !3710)
!3793 = !DILocation(line: 263, column: 29, scope: !3710)
!3794 = !DILocation(line: 263, column: 21, scope: !3710)
!3795 = !DILocation(line: 268, column: 21, scope: !3710)
!3796 = !DILocation(line: 268, column: 19, scope: !3710)
!3797 = !DILocation(line: 273, column: 6, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 273, column: 6)
!3799 = !DILocation(line: 273, column: 26, scope: !3798)
!3800 = !DILocation(line: 273, column: 6, scope: !3710)
!3801 = !DILocation(line: 297, column: 6, scope: !3710)
!3802 = !DILocation(line: 305, column: 11, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 305, column: 6)
!3804 = !DILocation(line: 305, column: 6, scope: !3710)
!3805 = !DILocation(line: 327, column: 19, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 327, column: 6)
!3807 = !DILocation(line: 327, column: 22, scope: !3806)
!3808 = !DILocation(line: 327, column: 33, scope: !3806)
!3809 = !DILocation(line: 327, column: 50, scope: !3806)
!3810 = !DILocation(line: 327, column: 6, scope: !3710)
!3811 = !DILocation(line: 338, column: 9, scope: !3710)
!3812 = !DILocation(line: 341, column: 2, scope: !3710)
!3813 = !DILocation(line: 472, column: 8, scope: !3759)
!3814 = !DILocation(line: 473, column: 14, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !381, line: 473, column: 9)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !381, line: 472, column: 18)
!3817 = distinct !DILexicalBlock(scope: !3759, file: !381, line: 472, column: 8)
!3818 = !DILocation(line: 473, column: 9, scope: !3816)
!3819 = !DILocation(line: 479, column: 5, scope: !3816)
!3820 = !DILocation(line: 468, column: 9, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3759, file: !381, line: 468, column: 8)
!3822 = !DILocation(line: 468, column: 8, scope: !3821)
!3823 = !DILocation(line: 468, column: 15, scope: !3821)
!3824 = !DILocation(line: 468, column: 8, scope: !3759)
!3825 = distinct !{!3825, !3826, !3827}
!3826 = !DILocation(line: 343, column: 2, scope: !3710)
!3827 = !DILocation(line: 712, column: 2, scope: !3710)
!3828 = !DILocation(line: 481, column: 4, scope: !3759)
!3829 = !DILocation(line: 484, column: 12, scope: !3758)
!3830 = !DILocation(line: 485, column: 5, scope: !3758)
!3831 = !DILocation(line: 505, column: 5, scope: !3758)
!3832 = !DILocation(line: 518, column: 5, scope: !3758)
!3833 = !DILocation(line: 523, column: 5, scope: !3758)
!3834 = !DILocation(line: 532, column: 9, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3758, file: !381, line: 532, column: 9)
!3836 = !DILocation(line: 532, column: 17, scope: !3835)
!3837 = !DILocation(line: 532, column: 9, scope: !3758)
!3838 = !DILocation(line: 533, column: 10, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3840, file: !381, line: 533, column: 10)
!3840 = distinct !DILexicalBlock(scope: !3835, file: !381, line: 532, column: 25)
!3841 = !DILocation(line: 533, column: 18, scope: !3839)
!3842 = !DILocation(line: 0, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3757, file: !381, line: 569, column: 9)
!3844 = !DILocation(line: 0, scope: !3757)
!3845 = !DILocation(line: 579, column: 20, scope: !3757)
!3846 = !DILocation(line: 579, column: 11, scope: !3757)
!3847 = !DILocation(line: 580, column: 9, scope: !3757)
!3848 = !DILocation(line: 582, column: 21, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !381, line: 582, column: 10)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !381, line: 580, column: 23)
!3851 = distinct !DILexicalBlock(scope: !3757, file: !381, line: 580, column: 9)
!3852 = !DILocation(line: 582, column: 28, scope: !3849)
!3853 = !DILocation(line: 582, column: 10, scope: !3850)
!3854 = !DILocation(line: 0, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !381, line: 587, column: 17)
!3856 = distinct !DILexicalBlock(scope: !3850, file: !381, line: 585, column: 10)
!3857 = !DILocation(line: 593, column: 9, scope: !3757)
!3858 = !DILocation(line: 600, column: 5, scope: !3758)
!3859 = !DILocation(line: 605, column: 18, scope: !3760)
!3860 = !DILocation(line: 605, column: 9, scope: !3760)
!3861 = !DILocation(line: 608, column: 20, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3760, file: !381, line: 608, column: 7)
!3863 = !DILocation(line: 608, column: 23, scope: !3862)
!3864 = !DILocation(line: 608, column: 34, scope: !3862)
!3865 = !DILocation(line: 608, column: 41, scope: !3862)
!3866 = !DILocation(line: 608, column: 7, scope: !3760)
!3867 = !DILocation(line: 613, column: 7, scope: !3760)
!3868 = !DILocation(line: 614, column: 8, scope: !3766)
!3869 = !DILocation(line: 614, column: 4, scope: !3766)
!3870 = !DILocation(line: 255, column: 15, scope: !3710)
!3871 = !DILocation(line: 256, column: 6, scope: !3710)
!3872 = !DILocation(line: 254, column: 15, scope: !3710)
!3873 = !DILocation(line: 253, column: 15, scope: !3710)
!3874 = !DILocation(line: 320, column: 7, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3803, file: !381, line: 305, column: 20)
!3876 = !DILocation(line: 615, column: 1, scope: !3766)
!3877 = !DILocation(line: 616, column: 8, scope: !3766)
!3878 = !DILocation(line: 617, column: 5, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !381, line: 616, column: 22)
!3880 = distinct !DILexicalBlock(scope: !3766, file: !381, line: 616, column: 8)
!3881 = !DILocation(line: 617, column: 25, scope: !3879)
!3882 = !DILocation(line: 618, column: 4, scope: !3879)
!3883 = !DILocation(line: 620, column: 26, scope: !3766)
!3884 = !DILocation(line: 620, column: 29, scope: !3766)
!3885 = !DILocation(line: 620, column: 17, scope: !3766)
!3886 = !DILocation(line: 620, column: 43, scope: !3766)
!3887 = !DILocation(line: 0, scope: !3766)
!3888 = !DILocation(line: 623, column: 14, scope: !3771)
!3889 = !DILocation(line: 626, column: 26, scope: !3770)
!3890 = !DILocation(line: 626, column: 37, scope: !3770)
!3891 = !DILocation(line: 0, scope: !3770)
!3892 = !DILocation(line: 634, column: 15, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3770, file: !381, line: 634, column: 9)
!3894 = !DILocation(line: 644, column: 9, scope: !3770)
!3895 = !DILocation(line: 649, column: 27, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3897, file: !381, line: 644, column: 23)
!3897 = distinct !DILexicalBlock(scope: !3770, file: !381, line: 644, column: 9)
!3898 = !DILocation(line: 649, column: 6, scope: !3896)
!3899 = !DILocation(line: 649, column: 25, scope: !3896)
!3900 = !DILocation(line: 650, column: 27, scope: !3896)
!3901 = !DILocation(line: 650, column: 6, scope: !3896)
!3902 = !DILocation(line: 650, column: 25, scope: !3896)
!3903 = !DILocation(line: 651, column: 10, scope: !3896)
!3904 = !DILocation(line: 653, column: 26, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !381, line: 651, column: 17)
!3906 = distinct !DILexicalBlock(scope: !3896, file: !381, line: 651, column: 10)
!3907 = !DILocation(line: 654, column: 15, scope: !3905)
!3908 = !DILocation(line: 655, column: 6, scope: !3905)
!3909 = !DILocation(line: 656, column: 15, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3906, file: !381, line: 655, column: 13)
!3911 = !DILocation(line: 658, column: 16, scope: !3897)
!3912 = !DILocation(line: 663, column: 10, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !381, line: 658, column: 23)
!3914 = distinct !DILexicalBlock(scope: !3897, file: !381, line: 658, column: 16)
!3915 = !DILocation(line: 664, column: 5, scope: !3913)
!3916 = !DILocation(line: 664, column: 16, scope: !3914)
!3917 = !DILocation(line: 669, column: 10, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !381, line: 664, column: 28)
!3919 = distinct !DILexicalBlock(scope: !3914, file: !381, line: 664, column: 16)
!3920 = !DILocation(line: 670, column: 5, scope: !3918)
!3921 = !DILocation(line: 675, column: 13, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3919, file: !381, line: 670, column: 12)
!3923 = !DILocation(line: 675, column: 27, scope: !3922)
!3924 = !DILocation(line: 675, column: 10, scope: !3922)
!3925 = !DILocation(line: 678, column: 10, scope: !3770)
!3926 = !DILocation(line: 680, column: 8, scope: !3766)
!3927 = !DILocation(line: 683, column: 14, scope: !3767)
!3928 = !DILocation(line: 684, column: 12, scope: !3773)
!3929 = !DILocation(line: 0, scope: !3773)
!3930 = !DILocation(line: 686, column: 8, scope: !3773)
!3931 = !DILocation(line: 687, column: 5, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !381, line: 686, column: 22)
!3933 = distinct !DILexicalBlock(scope: !3773, file: !381, line: 686, column: 8)
!3934 = !DILocation(line: 687, column: 17, scope: !3932)
!3935 = !DILocation(line: 688, column: 4, scope: !3932)
!3936 = !DILocation(line: 698, column: 18, scope: !3779)
!3937 = !DILocation(line: 0, scope: !3779)
!3938 = !DILocation(line: 700, column: 8, scope: !3779)
!3939 = !DILocation(line: 704, column: 6, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !381, line: 703, column: 12)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !381, line: 701, column: 9)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !381, line: 700, column: 22)
!3943 = distinct !DILexicalBlock(scope: !3779, file: !381, line: 700, column: 8)
!3944 = !DILocation(line: 704, column: 24, scope: !3940)
!3945 = !DILocation(line: 706, column: 4, scope: !3942)
!3946 = !DILocation(line: 0, scope: !3774)
!3947 = !DILocation(line: 0, scope: !3760)
!3948 = !DILocation(line: 720, column: 6, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 720, column: 6)
!3950 = !DILocation(line: 720, column: 17, scope: !3949)
!3951 = !DILocation(line: 720, column: 31, scope: !3949)
!3952 = !DILocation(line: 720, column: 6, scope: !3710)
!3953 = !DILocation(line: 729, column: 6, scope: !3710)
!3954 = !DILocation(line: 730, column: 21, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !381, line: 729, column: 20)
!3956 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 729, column: 6)
!3957 = !DILocation(line: 730, column: 27, scope: !3955)
!3958 = !DILocation(line: 730, column: 3, scope: !3955)
!3959 = !DILocation(line: 737, column: 22, scope: !3710)
!3960 = !DILocation(line: 737, column: 20, scope: !3710)
!3961 = !DILocation(line: 0, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 739, column: 6)
!3963 = !DILocation(line: 745, column: 17, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3962, file: !381, line: 743, column: 9)
!3965 = !DILocation(line: 745, column: 25, scope: !3964)
!3966 = !DILocation(line: 746, column: 17, scope: !3964)
!3967 = !DILocation(line: 746, column: 28, scope: !3964)
!3968 = !DILocation(line: 749, column: 29, scope: !3710)
!3969 = !DILocation(line: 749, column: 16, scope: !3710)
!3970 = !DILocation(line: 749, column: 27, scope: !3710)
!3971 = !DILocation(line: 756, column: 6, scope: !3786)
!3972 = !DILocation(line: 756, column: 6, scope: !3710)
!3973 = !DILocation(line: 757, column: 3, scope: !3784)
!3974 = !DILocation(line: 758, column: 10, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3782, file: !381, line: 758, column: 8)
!3976 = !DILocation(line: 758, column: 25, scope: !3975)
!3977 = !DILocation(line: 758, column: 8, scope: !3782)
!3978 = !DILocation(line: 0, scope: !3782)
!3979 = !DILocation(line: 765, column: 8, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3782, file: !381, line: 765, column: 8)
!3981 = !DILocation(line: 765, column: 19, scope: !3980)
!3982 = !DILocation(line: 765, column: 23, scope: !3980)
!3983 = !DILocation(line: 765, column: 8, scope: !3782)
!3984 = !DILocation(line: 762, column: 33, scope: !3782)
!3985 = !DILocation(line: 769, column: 8, scope: !3782)
!3986 = !DILocation(line: 769, column: 11, scope: !3782)
!3987 = !DILocation(line: 757, column: 27, scope: !3783)
!3988 = !DILocation(line: 757, column: 17, scope: !3783)
!3989 = distinct !{!3989, !3973, !3990}
!3990 = !DILocation(line: 770, column: 3, scope: !3784)
!3991 = !DILocation(line: 774, column: 16, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !381, line: 774, column: 2)
!3993 = distinct !DILexicalBlock(scope: !3710, file: !381, line: 774, column: 2)
!3994 = !DILocation(line: 774, column: 2, scope: !3993)
!3995 = !DILocation(line: 776, column: 16, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !381, line: 776, column: 7)
!3997 = distinct !DILexicalBlock(scope: !3992, file: !381, line: 774, column: 30)
!3998 = !DILocation(line: 776, column: 19, scope: !3996)
!3999 = !DILocation(line: 776, column: 34, scope: !3996)
!4000 = !DILocation(line: 776, column: 7, scope: !3997)
!4001 = !DILocation(line: 780, column: 7, scope: !3997)
!4002 = !DILocation(line: 782, column: 13, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !381, line: 780, column: 19)
!4004 = distinct !DILexicalBlock(scope: !3997, file: !381, line: 780, column: 7)
!4005 = !DILocation(line: 782, column: 8, scope: !4003)
!4006 = !DILocation(line: 782, column: 11, scope: !4003)
!4007 = !DILocation(line: 783, column: 3, scope: !4003)
!4008 = !DILocation(line: 785, column: 26, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4004, file: !381, line: 783, column: 10)
!4010 = !DILocation(line: 785, column: 41, scope: !4009)
!4011 = !DILocation(line: 785, column: 24, scope: !4009)
!4012 = !DILocation(line: 785, column: 8, scope: !4009)
!4013 = !DILocation(line: 787, column: 52, scope: !4009)
!4014 = !DILocation(line: 789, column: 11, scope: !4009)
!4015 = !DILocation(line: 789, column: 21, scope: !4009)
!4016 = !DILocation(line: 0, scope: !4004)
!4017 = !DILocation(line: 793, column: 7, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3997, file: !381, line: 793, column: 7)
!4019 = !DILocation(line: 793, column: 18, scope: !4018)
!4020 = !DILocation(line: 793, column: 22, scope: !4018)
!4021 = !DILocation(line: 793, column: 29, scope: !4018)
!4022 = !DILocation(line: 793, column: 7, scope: !3997)
!4023 = !DILocation(line: 797, column: 12, scope: !3997)
!4024 = !DILocation(line: 797, column: 7, scope: !3997)
!4025 = !DILocation(line: 797, column: 10, scope: !3997)
!4026 = !DILocation(line: 799, column: 3, scope: !3997)
!4027 = !DILocation(line: 800, column: 7, scope: !3997)
!4028 = !DILocation(line: 801, column: 2, scope: !3997)
!4029 = !DILocation(line: 338, column: 4, scope: !3710)
!4030 = !DILocation(line: 774, column: 26, scope: !3992)
!4031 = distinct !{!4031, !3994, !4032}
!4032 = !DILocation(line: 801, column: 2, scope: !3993)
!4033 = !DILocation(line: 808, column: 9, scope: !3710)
!4034 = !DILocation(line: 808, column: 2, scope: !3710)
!4035 = !DILocation(line: 813, column: 1, scope: !3710)
!4036 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !381, file: !381, line: 33, type: !4037, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4039)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!131, !337}
!4039 = !{!4040}
!4040 = !DILocalVariable(name: "addr", arg: 1, scope: !4036, file: !381, line: 33, type: !337)
!4041 = !DILocation(line: 0, scope: !4036)
!4042 = !DILocation(line: 41, column: 9, scope: !4036)
!4043 = !DILocation(line: 41, column: 2, scope: !4036)
!4044 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4045, file: !4045, line: 24, type: !4046, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4048)
!4045 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4046 = !DISubroutineType(types: !4047)
!4047 = !{!131, !13}
!4048 = !{!4049}
!4049 = !DILocalVariable(name: "addr", arg: 1, scope: !4044, file: !4045, line: 24, type: !13)
!4050 = !DILocation(line: 0, scope: !4044)
!4051 = !DILocation(line: 49, column: 30, scope: !4044)
!4052 = !DILocation(line: 49, column: 57, scope: !4044)
!4053 = !DILocation(line: 49, column: 2, scope: !4044)
!4054 = distinct !DISubprogram(name: "cbprintf_package", scope: !381, file: !381, line: 815, type: !4055, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4057)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!103, !102, !132, !108, !337, null}
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063}
!4058 = !DILocalVariable(name: "packaged", arg: 1, scope: !4054, file: !381, line: 815, type: !102)
!4059 = !DILocalVariable(name: "len", arg: 2, scope: !4054, file: !381, line: 815, type: !132)
!4060 = !DILocalVariable(name: "flags", arg: 3, scope: !4054, file: !381, line: 815, type: !108)
!4061 = !DILocalVariable(name: "format", arg: 4, scope: !4054, file: !381, line: 816, type: !337)
!4062 = !DILocalVariable(name: "ap", scope: !4054, file: !381, line: 818, type: !3713)
!4063 = !DILocalVariable(name: "ret", scope: !4054, file: !381, line: 819, type: !103)
!4064 = !DILocation(line: 0, scope: !4054)
!4065 = !DILocation(line: 818, column: 2, scope: !4054)
!4066 = !DILocation(line: 818, column: 10, scope: !4054)
!4067 = !DILocation(line: 821, column: 2, scope: !4054)
!4068 = !DILocation(line: 822, column: 8, scope: !4054)
!4069 = !DILocation(line: 823, column: 2, scope: !4054)
!4070 = !DILocation(line: 825, column: 1, scope: !4054)
!4071 = !DILocation(line: 824, column: 2, scope: !4054)
!4072 = distinct !DISubprogram(name: "cbpprintf_external", scope: !381, file: !381, line: 827, type: !4073, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4083)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!103, !4075, !4079, !102, !102}
!4075 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3746, line: 297, baseType: !4076)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 32)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!103, null}
!4079 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3746, line: 328, baseType: !4080)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 32)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!103, !4075, !102, !337, !3713}
!4083 = !{!4084, !4085, !4086, !4087, !4088, !4089, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102}
!4084 = !DILocalVariable(name: "out", arg: 1, scope: !4072, file: !381, line: 827, type: !4075)
!4085 = !DILocalVariable(name: "formatter", arg: 2, scope: !4072, file: !381, line: 828, type: !4079)
!4086 = !DILocalVariable(name: "ctx", arg: 3, scope: !4072, file: !381, line: 829, type: !102)
!4087 = !DILocalVariable(name: "packaged", arg: 4, scope: !4072, file: !381, line: 829, type: !102)
!4088 = !DILocalVariable(name: "buf", scope: !4072, file: !381, line: 831, type: !379)
!4089 = !DILocalVariable(name: "hdr", scope: !4072, file: !381, line: 832, type: !4090)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 32)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3746, line: 96, size: 64, elements: !4092)
!4092 = !{!4093, !4094}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4091, file: !3746, line: 98, baseType: !3745, size: 32)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4091, file: !3746, line: 101, baseType: !277, size: 32, offset: 32)
!4095 = !DILocalVariable(name: "s", scope: !4072, file: !381, line: 833, type: !277)
!4096 = !DILocalVariable(name: "ps", scope: !4072, file: !381, line: 833, type: !378)
!4097 = !DILocalVariable(name: "i", scope: !4072, file: !381, line: 834, type: !32)
!4098 = !DILocalVariable(name: "args_size", scope: !4072, file: !381, line: 834, type: !32)
!4099 = !DILocalVariable(name: "s_nbr", scope: !4072, file: !381, line: 834, type: !32)
!4100 = !DILocalVariable(name: "ros_nbr", scope: !4072, file: !381, line: 834, type: !32)
!4101 = !DILocalVariable(name: "rws_nbr", scope: !4072, file: !381, line: 834, type: !32)
!4102 = !DILocalVariable(name: "s_idx", scope: !4072, file: !381, line: 834, type: !32)
!4103 = !DILocation(line: 0, scope: !4072)
!4104 = !DILocation(line: 836, column: 10, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4072, file: !381, line: 836, column: 6)
!4106 = !DILocation(line: 836, column: 6, scope: !4072)
!4107 = !DILocation(line: 842, column: 28, scope: !4072)
!4108 = !DILocation(line: 842, column: 14, scope: !4072)
!4109 = !DILocation(line: 852, column: 16, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !381, line: 852, column: 2)
!4111 = distinct !DILexicalBlock(scope: !4072, file: !381, line: 852, column: 2)
!4112 = !DILocation(line: 852, column: 2, scope: !4111)
!4113 = !DILocation(line: 841, column: 28, scope: !4072)
!4114 = !DILocation(line: 841, column: 14, scope: !4072)
!4115 = !DILocation(line: 841, column: 32, scope: !4072)
!4116 = !DILocation(line: 847, column: 19, scope: !4072)
!4117 = !DILocation(line: 843, column: 28, scope: !4072)
!4118 = !DILocation(line: 843, column: 14, scope: !4072)
!4119 = !DILocation(line: 847, column: 31, scope: !4072)
!4120 = !DILocation(line: 844, column: 28, scope: !4072)
!4121 = !DILocation(line: 844, column: 14, scope: !4072)
!4122 = !DILocation(line: 847, column: 45, scope: !4072)
!4123 = !DILocation(line: 847, column: 41, scope: !4072)
!4124 = !DILocation(line: 854, column: 24, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4110, file: !381, line: 852, column: 30)
!4126 = !DILocation(line: 854, column: 11, scope: !4125)
!4127 = !DILocation(line: 855, column: 30, scope: !4125)
!4128 = !DILocation(line: 855, column: 22, scope: !4125)
!4129 = !DILocation(line: 855, column: 8, scope: !4125)
!4130 = !DILocation(line: 857, column: 7, scope: !4125)
!4131 = !DILocation(line: 859, column: 8, scope: !4125)
!4132 = !DILocation(line: 859, column: 18, scope: !4125)
!4133 = !DILocation(line: 859, column: 5, scope: !4125)
!4134 = !DILocation(line: 852, column: 26, scope: !4110)
!4135 = distinct !{!4135, !4112, !4136}
!4136 = !DILocation(line: 860, column: 2, scope: !4111)
!4137 = !DILocation(line: 863, column: 6, scope: !4072)
!4138 = !DILocation(line: 866, column: 56, scope: !4072)
!4139 = !DILocation(line: 866, column: 9, scope: !4072)
!4140 = !DILocation(line: 866, column: 2, scope: !4072)
!4141 = !DILocation(line: 867, column: 1, scope: !4072)
!4142 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !381, file: !381, line: 179, type: !4143, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4145)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{!103, !4075, !4079, !102, !337, !102}
!4145 = !{!4146, !4147, !4148, !4149, !4150, !4151}
!4146 = !DILocalVariable(name: "out", arg: 1, scope: !4142, file: !381, line: 179, type: !4075)
!4147 = !DILocalVariable(name: "formatter", arg: 2, scope: !4142, file: !381, line: 180, type: !4079)
!4148 = !DILocalVariable(name: "ctx", arg: 3, scope: !4142, file: !381, line: 181, type: !102)
!4149 = !DILocalVariable(name: "fmt", arg: 4, scope: !4142, file: !381, line: 182, type: !337)
!4150 = !DILocalVariable(name: "buf", arg: 5, scope: !4142, file: !381, line: 182, type: !102)
!4151 = !DILocalVariable(name: "u", scope: !4142, file: !381, line: 187, type: !4152)
!4152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4142, file: !381, line: 184, size: 32, elements: !4153)
!4153 = !{!4154, !4155}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4152, file: !381, line: 185, baseType: !3713, size: 32)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4152, file: !381, line: 186, baseType: !102, size: 32)
!4156 = !DILocation(line: 0, scope: !4142)
!4157 = !DILocation(line: 191, column: 9, scope: !4142)
!4158 = !DILocation(line: 191, column: 2, scope: !4142)
!4159 = distinct !DISubprogram(name: "is_ptr", scope: !381, file: !381, line: 881, type: !4160, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4162)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!131, !337, !103}
!4162 = !{!4163, !4164, !4165, !4166, !4167}
!4163 = !DILocalVariable(name: "fmt", arg: 1, scope: !4159, file: !381, line: 881, type: !337)
!4164 = !DILocalVariable(name: "n", arg: 2, scope: !4159, file: !381, line: 881, type: !103)
!4165 = !DILocalVariable(name: "c", scope: !4159, file: !381, line: 883, type: !278)
!4166 = !DILocalVariable(name: "mod", scope: !4159, file: !381, line: 884, type: !131)
!4167 = !DILocalVariable(name: "cnt", scope: !4159, file: !381, line: 885, type: !103)
!4168 = !DILocation(line: 0, scope: !4159)
!4169 = !DILocation(line: 887, column: 14, scope: !4159)
!4170 = !DILocation(line: 887, column: 22, scope: !4159)
!4171 = !DILocation(line: 887, column: 2, scope: !4159)
!4172 = !DILocation(line: 887, column: 18, scope: !4159)
!4173 = !DILocation(line: 888, column: 7, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4159, file: !381, line: 887, column: 31)
!4175 = !DILocation(line: 889, column: 12, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !381, line: 889, column: 8)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !381, line: 888, column: 12)
!4178 = distinct !DILexicalBlock(scope: !4174, file: !381, line: 888, column: 7)
!4179 = !DILocation(line: 889, column: 8, scope: !4177)
!4180 = !DILocation(line: 890, column: 11, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !381, line: 890, column: 9)
!4182 = distinct !DILexicalBlock(scope: !4176, file: !381, line: 889, column: 18)
!4183 = !DILocation(line: 890, column: 9, scope: !4182)
!4184 = !DILocation(line: 892, column: 16, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4181, file: !381, line: 892, column: 16)
!4186 = !DILocation(line: 892, column: 16, scope: !4181)
!4187 = !DILocation(line: 895, column: 15, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4176, file: !381, line: 895, column: 15)
!4189 = !DILocation(line: 895, column: 15, scope: !4176)
!4190 = !DILocation(line: 900, column: 9, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4174, file: !381, line: 900, column: 7)
!4192 = !DILocation(line: 900, column: 7, scope: !4174)
!4193 = distinct !{!4193, !4171, !4194}
!4194 = !DILocation(line: 903, column: 2, scope: !4159)
!4195 = !DILocation(line: 906, column: 1, scope: !4159)
!4196 = distinct !DISubprogram(name: "is_fmt_spec", scope: !381, file: !381, line: 873, type: !4197, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4199)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!131, !278}
!4199 = !{!4200}
!4200 = !DILocalVariable(name: "c", arg: 1, scope: !4196, file: !381, line: 873, type: !278)
!4201 = !DILocation(line: 0, scope: !4196)
!4202 = !DILocation(line: 875, column: 19, scope: !4196)
!4203 = !DILocation(line: 875, column: 2, scope: !4196)
!4204 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !381, file: !381, line: 908, type: !4205, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4211)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!103, !102, !132, !4207, !102, !108, !2753, !132}
!4207 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3746, line: 308, baseType: !4208)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 32)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!103, !13, !132, !102}
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4229, !4230, !4231, !4232, !4233, !4239, !4242, !4243, !4244, !4246, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4262, !4265, !4266, !4267, !4268, !4269, !4270, !4272, !4275, !4276, !4277}
!4212 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4204, file: !381, line: 908, type: !102)
!4213 = !DILocalVariable(name: "in_len", arg: 2, scope: !4204, file: !381, line: 909, type: !132)
!4214 = !DILocalVariable(name: "cb", arg: 3, scope: !4204, file: !381, line: 910, type: !4207)
!4215 = !DILocalVariable(name: "ctx", arg: 4, scope: !4204, file: !381, line: 911, type: !102)
!4216 = !DILocalVariable(name: "flags", arg: 5, scope: !4204, file: !381, line: 912, type: !108)
!4217 = !DILocalVariable(name: "strl", arg: 6, scope: !4204, file: !381, line: 913, type: !2753)
!4218 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4204, file: !381, line: 914, type: !132)
!4219 = !DILocalVariable(name: "buf", scope: !4204, file: !381, line: 918, type: !379)
!4220 = !DILocalVariable(name: "buf32", scope: !4204, file: !381, line: 919, type: !1002)
!4221 = !DILocalVariable(name: "args_size", scope: !4204, file: !381, line: 920, type: !32)
!4222 = !DILocalVariable(name: "ros_nbr", scope: !4204, file: !381, line: 920, type: !32)
!4223 = !DILocalVariable(name: "rws_nbr", scope: !4204, file: !381, line: 920, type: !32)
!4224 = !DILocalVariable(name: "fmt_present", scope: !4204, file: !381, line: 921, type: !131)
!4225 = !DILocalVariable(name: "rw_cpy", scope: !4204, file: !381, line: 922, type: !131)
!4226 = !DILocalVariable(name: "ro_cpy", scope: !4204, file: !381, line: 923, type: !131)
!4227 = !DILocalVariable(name: "in_desc", scope: !4204, file: !381, line: 924, type: !4228)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3749, size: 32)
!4229 = !DILocalVariable(name: "out_len", scope: !4204, file: !381, line: 960, type: !103)
!4230 = !DILocalVariable(name: "fmt", scope: !4204, file: !381, line: 965, type: !337)
!4231 = !DILocalVariable(name: "str_pos", scope: !4204, file: !381, line: 966, type: !379)
!4232 = !DILocalVariable(name: "strl_cnt", scope: !4204, file: !381, line: 967, type: !132)
!4233 = !DILocalVariable(name: "i", scope: !4234, file: !381, line: 973, type: !103)
!4234 = distinct !DILexicalBlock(scope: !4235, file: !381, line: 973, column: 4)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !381, line: 972, column: 15)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !381, line: 972, column: 7)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !381, line: 970, column: 18)
!4238 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 970, column: 6)
!4239 = !DILocalVariable(name: "str", scope: !4240, file: !381, line: 974, type: !337)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !381, line: 973, column: 38)
!4241 = distinct !DILexicalBlock(scope: !4234, file: !381, line: 973, column: 4)
!4242 = !DILocalVariable(name: "len", scope: !4240, file: !381, line: 975, type: !103)
!4243 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4237, file: !381, line: 990, type: !131)
!4244 = !DILocalVariable(name: "i", scope: !4245, file: !381, line: 995, type: !103)
!4245 = distinct !DILexicalBlock(scope: !4237, file: !381, line: 995, column: 3)
!4246 = !DILocalVariable(name: "arg_idx", scope: !4247, file: !381, line: 996, type: !185)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !381, line: 995, column: 37)
!4248 = distinct !DILexicalBlock(scope: !4245, file: !381, line: 995, column: 3)
!4249 = !DILocalVariable(name: "arg_pos", scope: !4247, file: !381, line: 997, type: !185)
!4250 = !DILocalVariable(name: "str", scope: !4247, file: !381, line: 998, type: !337)
!4251 = !DILocalVariable(name: "is_ro", scope: !4247, file: !381, line: 999, type: !131)
!4252 = !DILocalVariable(name: "len", scope: !4247, file: !381, line: 1000, type: !103)
!4253 = !DILocalVariable(name: "out_desc", scope: !4204, file: !381, line: 1038, type: !3749)
!4254 = !DILocalVariable(name: "cpy_str_pos", scope: !4204, file: !381, line: 1040, type: !3731)
!4255 = !DILocalVariable(name: "keep_str_pos", scope: !4204, file: !381, line: 1042, type: !3731)
!4256 = !DILocalVariable(name: "scpy_cnt", scope: !4204, file: !381, line: 1043, type: !185)
!4257 = !DILocalVariable(name: "keep_cnt", scope: !4204, file: !381, line: 1044, type: !185)
!4258 = !DILocalVariable(name: "dst", scope: !4204, file: !381, line: 1045, type: !379)
!4259 = !DILocalVariable(name: "rv", scope: !4204, file: !381, line: 1046, type: !103)
!4260 = !DILocalVariable(name: "i", scope: !4261, file: !381, line: 1074, type: !103)
!4261 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1074, column: 2)
!4262 = !DILocalVariable(name: "arg_idx", scope: !4263, file: !381, line: 1075, type: !185)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !381, line: 1074, column: 36)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !381, line: 1074, column: 2)
!4265 = !DILocalVariable(name: "arg_pos", scope: !4263, file: !381, line: 1076, type: !185)
!4266 = !DILocalVariable(name: "str", scope: !4263, file: !381, line: 1077, type: !337)
!4267 = !DILocalVariable(name: "is_ro", scope: !4263, file: !381, line: 1078, type: !131)
!4268 = !DILocalVariable(name: "in_desc_backup", scope: !4204, file: !381, line: 1114, type: !3749)
!4269 = !DILocalVariable(name: "strs_len", scope: !4204, file: !381, line: 1134, type: !132)
!4270 = !DILocalVariable(name: "i", scope: !4271, file: !381, line: 1143, type: !103)
!4271 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1143, column: 2)
!4272 = !DILocalVariable(name: "loc", scope: !4273, file: !381, line: 1144, type: !185)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !381, line: 1143, column: 37)
!4274 = distinct !DILexicalBlock(scope: !4271, file: !381, line: 1143, column: 2)
!4275 = !DILocalVariable(name: "str", scope: !4273, file: !381, line: 1145, type: !337)
!4276 = !DILocalVariable(name: "str_len", scope: !4273, file: !381, line: 1146, type: !121)
!4277 = !DILabel(scope: !4278, name: "calculate_string_length", file: !381, line: 1021)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !381, line: 1020, column: 56)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !381, line: 1020, column: 15)
!4280 = distinct !DILexicalBlock(scope: !4247, file: !381, line: 1014, column: 8)
!4281 = !DILocation(line: 0, scope: !4204)
!4282 = !DILocation(line: 919, column: 20, scope: !4204)
!4283 = !DILocation(line: 921, column: 27, scope: !4204)
!4284 = !DILocation(line: 921, column: 21, scope: !4204)
!4285 = !DILocation(line: 926, column: 18, scope: !4204)
!4286 = !DILocation(line: 926, column: 11, scope: !4204)
!4287 = !DILocation(line: 926, column: 34, scope: !4204)
!4288 = !DILocation(line: 931, column: 21, scope: !4204)
!4289 = !DILocation(line: 931, column: 12, scope: !4204)
!4290 = !DILocation(line: 932, column: 11, scope: !4204)
!4291 = !DILocation(line: 932, column: 19, scope: !4204)
!4292 = !DILocation(line: 938, column: 21, scope: !4204)
!4293 = !DILocation(line: 938, column: 12, scope: !4204)
!4294 = !DILocation(line: 939, column: 19, scope: !4204)
!4295 = !DILocation(line: 939, column: 23, scope: !4204)
!4296 = !DILocation(line: 946, column: 14, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 946, column: 6)
!4298 = !DILocation(line: 947, column: 7, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !381, line: 947, column: 7)
!4300 = distinct !DILexicalBlock(scope: !4297, file: !381, line: 946, column: 26)
!4301 = !DILocation(line: 947, column: 7, scope: !4300)
!4302 = !DILocation(line: 948, column: 4, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4299, file: !381, line: 947, column: 11)
!4304 = !DILocation(line: 949, column: 3, scope: !4303)
!4305 = !DILocation(line: 958, column: 23, scope: !4204)
!4306 = !DILocation(line: 958, column: 14, scope: !4204)
!4307 = !DILocation(line: 958, column: 27, scope: !4204)
!4308 = !DILocation(line: 965, column: 41, scope: !4204)
!4309 = !DILocation(line: 965, column: 20, scope: !4204)
!4310 = !DILocation(line: 966, column: 22, scope: !4204)
!4311 = !DILocation(line: 970, column: 9, scope: !4238)
!4312 = !DILocation(line: 970, column: 6, scope: !4204)
!4313 = !DILocation(line: 972, column: 7, scope: !4237)
!4314 = !DILocation(line: 0, scope: !4234)
!4315 = !DILocation(line: 973, column: 4, scope: !4234)
!4316 = !DILocation(line: 974, column: 46, scope: !4240)
!4317 = !DILocation(line: 974, column: 40, scope: !4240)
!4318 = !DILocation(line: 974, column: 23, scope: !4240)
!4319 = !DILocation(line: 0, scope: !4240)
!4320 = !DILocation(line: 975, column: 15, scope: !4240)
!4321 = !DILocation(line: 978, column: 14, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4240, file: !381, line: 978, column: 9)
!4323 = !DILocation(line: 979, column: 25, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4322, file: !381, line: 978, column: 38)
!4325 = !DILocation(line: 979, column: 19, scope: !4324)
!4326 = !DILocation(line: 979, column: 6, scope: !4324)
!4327 = !DILocation(line: 979, column: 23, scope: !4324)
!4328 = !DILocation(line: 980, column: 5, scope: !4324)
!4329 = !DILocation(line: 981, column: 13, scope: !4240)
!4330 = !DILocation(line: 982, column: 12, scope: !4240)
!4331 = !DILocation(line: 973, column: 34, scope: !4241)
!4332 = !DILocation(line: 973, column: 22, scope: !4241)
!4333 = distinct !{!4333, !4315, !4334}
!4334 = !DILocation(line: 983, column: 4, scope: !4234)
!4335 = !DILocation(line: 985, column: 16, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !381, line: 985, column: 8)
!4337 = distinct !DILexicalBlock(scope: !4236, file: !381, line: 984, column: 10)
!4338 = !DILocation(line: 967, column: 9, scope: !4204)
!4339 = !DILocation(line: 971, column: 11, scope: !4237)
!4340 = !DILocation(line: 0, scope: !4237)
!4341 = !DILocation(line: 0, scope: !4245)
!4342 = !DILocation(line: 995, column: 21, scope: !4248)
!4343 = !DILocation(line: 995, column: 3, scope: !4245)
!4344 = !DILocation(line: 990, column: 34, scope: !4237)
!4345 = !DILocation(line: 990, column: 26, scope: !4237)
!4346 = !DILocation(line: 996, column: 30, scope: !4247)
!4347 = !DILocation(line: 0, scope: !4247)
!4348 = !DILocation(line: 997, column: 30, scope: !4247)
!4349 = !DILocation(line: 997, column: 22, scope: !4247)
!4350 = !DILocation(line: 998, column: 39, scope: !4247)
!4351 = !DILocation(line: 998, column: 22, scope: !4247)
!4352 = !DILocation(line: 999, column: 17, scope: !4247)
!4353 = !DILocation(line: 1002, column: 20, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4247, file: !381, line: 1002, column: 8)
!4355 = !DILocation(line: 996, column: 22, scope: !4247)
!4356 = !DILocation(line: 1002, column: 35, scope: !4354)
!4357 = !DILocation(line: 1002, column: 23, scope: !4354)
!4358 = !DILocation(line: 1002, column: 8, scope: !4247)
!4359 = !DILocation(line: 1003, column: 5, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !381, line: 1003, column: 5)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !381, line: 1003, column: 5)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !381, line: 1003, column: 5)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !381, line: 1003, column: 5)
!4364 = distinct !DILexicalBlock(scope: !4354, file: !381, line: 1002, column: 45)
!4365 = !DILocation(line: 1010, column: 13, scope: !4364)
!4366 = !DILocation(line: 1011, column: 5, scope: !4364)
!4367 = !DILocation(line: 1014, column: 8, scope: !4247)
!4368 = !DILocation(line: 1015, column: 9, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4280, file: !381, line: 1014, column: 15)
!4370 = !DILocation(line: 1018, column: 14, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !381, line: 1017, column: 12)
!4372 = distinct !DILexicalBlock(scope: !4369, file: !381, line: 1015, column: 9)
!4373 = !DILocation(line: 1020, column: 4, scope: !4369)
!4374 = !DILocation(line: 1020, column: 15, scope: !4280)
!4375 = !DILocation(line: 1021, column: 1, scope: !4278)
!4376 = !DILocation(line: 1022, column: 11, scope: !4278)
!4377 = !DILocation(line: 1025, column: 14, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4278, file: !381, line: 1025, column: 9)
!4379 = !DILocation(line: 1026, column: 25, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4378, file: !381, line: 1025, column: 38)
!4381 = !DILocation(line: 1026, column: 19, scope: !4380)
!4382 = !DILocation(line: 1026, column: 6, scope: !4380)
!4383 = !DILocation(line: 1026, column: 23, scope: !4380)
!4384 = !DILocation(line: 1027, column: 5, scope: !4380)
!4385 = !DILocation(line: 1031, column: 21, scope: !4278)
!4386 = !DILocation(line: 1031, column: 13, scope: !4278)
!4387 = !DILocation(line: 1032, column: 4, scope: !4278)
!4388 = !DILocation(line: 995, column: 33, scope: !4248)
!4389 = distinct !{!4389, !4343, !4390}
!4390 = !DILocation(line: 1033, column: 3, scope: !4245)
!4391 = !DILocation(line: 1040, column: 10, scope: !4204)
!4392 = !DILocation(line: 1042, column: 10, scope: !4204)
!4393 = !DILocation(line: 1052, column: 6, scope: !4204)
!4394 = !DILocation(line: 1055, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !381, line: 1052, column: 14)
!4396 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1052, column: 6)
!4397 = !DILocation(line: 1056, column: 2, scope: !4395)
!4398 = !DILocation(line: 1056, column: 21, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4396, file: !381, line: 1056, column: 13)
!4400 = !DILocation(line: 1066, column: 3, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !381, line: 1065, column: 11)
!4402 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1065, column: 6)
!4403 = !DILocation(line: 1067, column: 2, scope: !4401)
!4404 = !DILocation(line: 1068, column: 10, scope: !4204)
!4405 = !DILocation(line: 0, scope: !4261)
!4406 = !DILocation(line: 1074, column: 20, scope: !4264)
!4407 = !DILocation(line: 1074, column: 2, scope: !4261)
!4408 = !DILocation(line: 1110, column: 24, scope: !4204)
!4409 = !DILocation(line: 1053, column: 12, scope: !4395)
!4410 = !DILocation(line: 1054, column: 12, scope: !4395)
!4411 = !DILocation(line: 1108, column: 30, scope: !4204)
!4412 = !DILocation(line: 1108, column: 40, scope: !4204)
!4413 = !DILocation(line: 1108, column: 38, scope: !4204)
!4414 = !DILocation(line: 1109, column: 31, scope: !4204)
!4415 = !DILocation(line: 1109, column: 24, scope: !4204)
!4416 = !DILocation(line: 1110, column: 31, scope: !4204)
!4417 = !DILocation(line: 1114, column: 31, scope: !4204)
!4418 = !DILocation(line: 1114, column: 48, scope: !4204)
!4419 = !DILocation(line: 1115, column: 13, scope: !4204)
!4420 = !DILocation(line: 1118, column: 7, scope: !4204)
!4421 = !DILocation(line: 1119, column: 9, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1119, column: 6)
!4423 = !DILocation(line: 1119, column: 6, scope: !4204)
!4424 = !DILocation(line: 1075, column: 29, scope: !4263)
!4425 = !DILocation(line: 1075, column: 21, scope: !4263)
!4426 = !DILocation(line: 0, scope: !4263)
!4427 = !DILocation(line: 1076, column: 29, scope: !4263)
!4428 = !DILocation(line: 1076, column: 21, scope: !4263)
!4429 = !DILocation(line: 1077, column: 38, scope: !4263)
!4430 = !DILocation(line: 1077, column: 21, scope: !4263)
!4431 = !DILocation(line: 1078, column: 16, scope: !4263)
!4432 = !DILocation(line: 1080, column: 19, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4263, file: !381, line: 1080, column: 7)
!4434 = !DILocation(line: 1080, column: 34, scope: !4433)
!4435 = !DILocation(line: 1080, column: 22, scope: !4433)
!4436 = !DILocation(line: 1080, column: 7, scope: !4263)
!4437 = !DILocation(line: 1084, column: 7, scope: !4263)
!4438 = !DILocation(line: 1085, column: 8, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4440, file: !381, line: 1084, column: 14)
!4440 = distinct !DILexicalBlock(scope: !4263, file: !381, line: 1084, column: 7)
!4441 = !DILocation(line: 1087, column: 25, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4443, file: !381, line: 1085, column: 49)
!4443 = distinct !DILexicalBlock(scope: !4439, file: !381, line: 1085, column: 8)
!4444 = !DILocation(line: 1088, column: 4, scope: !4442)
!4445 = !DILocation(line: 1088, column: 15, scope: !4443)
!4446 = !DILocation(line: 1090, column: 26, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4448, file: !381, line: 1088, column: 61)
!4448 = distinct !DILexicalBlock(scope: !4443, file: !381, line: 1088, column: 15)
!4449 = !DILocation(line: 1091, column: 4, scope: !4447)
!4450 = !DILocation(line: 1095, column: 8, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4440, file: !381, line: 1094, column: 10)
!4452 = !DILocation(line: 1097, column: 25, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !381, line: 1095, column: 49)
!4454 = distinct !DILexicalBlock(scope: !4451, file: !381, line: 1095, column: 8)
!4455 = !DILocation(line: 1098, column: 4, scope: !4453)
!4456 = !DILocation(line: 1100, column: 26, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4454, file: !381, line: 1098, column: 11)
!4458 = !DILocation(line: 1100, column: 5, scope: !4457)
!4459 = !DILocation(line: 1100, column: 30, scope: !4457)
!4460 = !DILocation(line: 1101, column: 26, scope: !4457)
!4461 = !DILocation(line: 0, scope: !4440)
!4462 = !DILocation(line: 1074, column: 32, scope: !4264)
!4463 = distinct !{!4463, !4407, !4464}
!4464 = !DILocation(line: 1104, column: 2, scope: !4261)
!4465 = !DILocation(line: 1124, column: 13, scope: !4204)
!4466 = !DILocation(line: 1127, column: 10, scope: !4204)
!4467 = !DILocation(line: 1127, column: 7, scope: !4204)
!4468 = !DILocation(line: 1128, column: 9, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1128, column: 6)
!4470 = !DILocation(line: 1128, column: 6, scope: !4204)
!4471 = !DILocation(line: 1134, column: 27, scope: !4204)
!4472 = !DILocation(line: 1136, column: 7, scope: !4204)
!4473 = !DILocation(line: 1137, column: 9, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4204, file: !381, line: 1137, column: 6)
!4475 = !DILocation(line: 1137, column: 6, scope: !4204)
!4476 = !DILocation(line: 1131, column: 10, scope: !4204)
!4477 = !DILocation(line: 1140, column: 10, scope: !4204)
!4478 = !DILocation(line: 0, scope: !4271)
!4479 = !DILocation(line: 1143, column: 20, scope: !4274)
!4480 = !DILocation(line: 1143, column: 2, scope: !4271)
!4481 = !DILocation(line: 1144, column: 3, scope: !4273)
!4482 = !DILocation(line: 1144, column: 17, scope: !4273)
!4483 = !DILocation(line: 0, scope: !4273)
!4484 = !DILocation(line: 1144, column: 11, scope: !4273)
!4485 = !DILocation(line: 1145, column: 38, scope: !4273)
!4486 = !DILocation(line: 1145, column: 21, scope: !4273)
!4487 = !DILocation(line: 1146, column: 22, scope: !4273)
!4488 = !DILocation(line: 1146, column: 29, scope: !4273)
!4489 = !DILocation(line: 1148, column: 8, scope: !4273)
!4490 = !DILocation(line: 1149, column: 10, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4273, file: !381, line: 1149, column: 7)
!4492 = !DILocation(line: 1149, column: 7, scope: !4273)
!4493 = !DILocation(line: 1154, column: 8, scope: !4273)
!4494 = !DILocation(line: 1155, column: 10, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4273, file: !381, line: 1155, column: 7)
!4496 = !DILocation(line: 1155, column: 7, scope: !4273)
!4497 = !DILocation(line: 1159, column: 2, scope: !4274)
!4498 = !DILocation(line: 1152, column: 11, scope: !4273)
!4499 = !DILocation(line: 1158, column: 11, scope: !4273)
!4500 = !DILocation(line: 1143, column: 33, scope: !4274)
!4501 = distinct !{!4501, !4480, !4502}
!4502 = !DILocation(line: 1159, column: 2, scope: !4271)
!4503 = !DILocation(line: 1162, column: 8, scope: !4204)
!4504 = !DILocation(line: 1164, column: 2, scope: !4204)
!4505 = !DILocation(line: 1165, column: 1, scope: !4204)
!4506 = distinct !DISubprogram(name: "get_package_len", scope: !381, file: !381, line: 196, type: !4507, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4509)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{!132, !102}
!4509 = !{!4510, !4511, !4512, !4513, !4514, !4515, !4516}
!4510 = !DILocalVariable(name: "packaged", arg: 1, scope: !4506, file: !381, line: 196, type: !102)
!4511 = !DILocalVariable(name: "buf", scope: !4506, file: !381, line: 200, type: !379)
!4512 = !DILocalVariable(name: "start", scope: !4506, file: !381, line: 201, type: !379)
!4513 = !DILocalVariable(name: "args_size", scope: !4506, file: !381, line: 202, type: !32)
!4514 = !DILocalVariable(name: "s_nbr", scope: !4506, file: !381, line: 202, type: !32)
!4515 = !DILocalVariable(name: "ros_nbr", scope: !4506, file: !381, line: 202, type: !32)
!4516 = !DILocalVariable(name: "i", scope: !4517, file: !381, line: 215, type: !103)
!4517 = distinct !DILexicalBlock(scope: !4506, file: !381, line: 215, column: 2)
!4518 = !DILocation(line: 0, scope: !4506)
!4519 = !DILocation(line: 204, column: 14, scope: !4506)
!4520 = !DILocation(line: 204, column: 21, scope: !4506)
!4521 = !DILocation(line: 205, column: 14, scope: !4506)
!4522 = !DILocation(line: 206, column: 14, scope: !4506)
!4523 = !DILocation(line: 209, column: 6, scope: !4506)
!4524 = !DILocation(line: 212, column: 6, scope: !4506)
!4525 = !DILocation(line: 0, scope: !4517)
!4526 = !DILocation(line: 215, column: 20, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4517, file: !381, line: 215, column: 2)
!4528 = !DILocation(line: 215, column: 2, scope: !4517)
!4529 = !DILocation(line: 220, column: 33, scope: !4506)
!4530 = !DILocation(line: 220, column: 2, scope: !4506)
!4531 = !DILocation(line: 216, column: 6, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !381, line: 215, column: 34)
!4533 = !DILocation(line: 217, column: 10, scope: !4532)
!4534 = !DILocation(line: 217, column: 36, scope: !4532)
!4535 = !DILocation(line: 217, column: 7, scope: !4532)
!4536 = !DILocation(line: 215, column: 30, scope: !4527)
!4537 = distinct !{!4537, !4528, !4538}
!4538 = !DILocation(line: 218, column: 2, scope: !4517)
!4539 = distinct !DISubprogram(name: "append_string", scope: !381, file: !381, line: 223, type: !4540, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !4542)
!4540 = !DISubroutineType(types: !4541)
!4541 = !{!103, !4207, !102, !337, !121}
!4542 = !{!4543, !4544, !4545, !4546}
!4543 = !DILocalVariable(name: "cb", arg: 1, scope: !4539, file: !381, line: 223, type: !4207)
!4544 = !DILocalVariable(name: "ctx", arg: 2, scope: !4539, file: !381, line: 223, type: !102)
!4545 = !DILocalVariable(name: "str", arg: 3, scope: !4539, file: !381, line: 223, type: !337)
!4546 = !DILocalVariable(name: "strl", arg: 4, scope: !4539, file: !381, line: 223, type: !121)
!4547 = !DILocation(line: 0, scope: !4539)
!4548 = !DILocation(line: 225, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4539, file: !381, line: 225, column: 6)
!4550 = !DILocation(line: 225, column: 6, scope: !4539)
!4551 = !DILocation(line: 226, column: 14, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4549, file: !381, line: 225, column: 18)
!4553 = !DILocation(line: 226, column: 12, scope: !4552)
!4554 = !DILocation(line: 226, column: 3, scope: !4552)
!4555 = !DILocation(line: 229, column: 14, scope: !4539)
!4556 = !DILocation(line: 229, column: 9, scope: !4539)
!4557 = !DILocation(line: 229, column: 27, scope: !4539)
!4558 = !DILocation(line: 229, column: 39, scope: !4539)
!4559 = !DILocation(line: 230, column: 17, scope: !4539)
!4560 = !DILocation(line: 230, column: 9, scope: !4539)
!4561 = !DILocation(line: 230, column: 2, scope: !4539)
!4562 = !DILocation(line: 231, column: 1, scope: !4539)
!4563 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !394, file: !394, line: 45, type: !396, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4564)
!4564 = !{!4565}
!4565 = !DILocalVariable(name: "c", arg: 1, scope: !4563, file: !394, line: 45, type: !103)
!4566 = !DILocation(line: 0, scope: !4563)
!4567 = !DILocation(line: 50, column: 2, scope: !4563)
!4568 = distinct !DISubprogram(name: "__printk_hook_install", scope: !394, file: !394, line: 63, type: !4569, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4571)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{null, !395}
!4571 = !{!4572}
!4572 = !DILocalVariable(name: "fn", arg: 1, scope: !4568, file: !394, line: 63, type: !395)
!4573 = !DILocation(line: 0, scope: !4568)
!4574 = !DILocation(line: 65, column: 12, scope: !4568)
!4575 = !DILocation(line: 66, column: 1, scope: !4568)
!4576 = distinct !DISubprogram(name: "__printk_get_hook", scope: !394, file: !394, line: 76, type: !4577, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !251)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!102}
!4579 = !DILocation(line: 78, column: 9, scope: !4576)
!4580 = !DILocation(line: 78, column: 2, scope: !4576)
!4581 = distinct !DISubprogram(name: "vprintk", scope: !394, file: !394, line: 113, type: !4582, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4590)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{null, !337, !4584}
!4584 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3714, line: 99, baseType: !4585)
!4585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3714, line: 40, baseType: !4586)
!4586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !394, baseType: !4587)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4588)
!4588 = !{!4589}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4587, file: !394, line: 79, baseType: !102, size: 32)
!4590 = !{!4591, !4592, !4593}
!4591 = !DILocalVariable(name: "fmt", arg: 1, scope: !4581, file: !394, line: 113, type: !337)
!4592 = !DILocalVariable(name: "ap", arg: 2, scope: !4581, file: !394, line: 113, type: !4584)
!4593 = !DILocalVariable(name: "ctx", scope: !4594, file: !394, line: 121, type: !4596)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !394, line: 120, column: 27)
!4595 = distinct !DILexicalBlock(scope: !4581, file: !394, line: 120, column: 6)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !394, line: 81, size: 32, elements: !4597)
!4597 = !{!4598, !4599}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4596, file: !394, line: 85, baseType: !32, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4596, file: !394, line: 86, baseType: !4600, offset: 32)
!4600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, elements: !2751)
!4601 = !DILocation(line: 0, scope: !4581)
!4602 = !DILocation(line: 148, column: 3, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4595, file: !394, line: 138, column: 9)
!4604 = !DILocation(line: 155, column: 1, scope: !4581)
!4605 = distinct !DISubprogram(name: "char_out", scope: !394, file: !394, line: 107, type: !4606, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4608)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!103, !103, !102}
!4608 = !{!4609, !4610}
!4609 = !DILocalVariable(name: "c", arg: 1, scope: !4605, file: !394, line: 107, type: !103)
!4610 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4605, file: !394, line: 107, type: !102)
!4611 = !DILocation(line: 0, scope: !4605)
!4612 = !DILocation(line: 110, column: 9, scope: !4605)
!4613 = !DILocation(line: 110, column: 2, scope: !4605)
!4614 = distinct !DISubprogram(name: "cbvprintf", scope: !3746, file: !3746, line: 739, type: !4615, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4617)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{!103, !4075, !102, !337, !4584}
!4617 = !{!4618, !4619, !4620, !4621}
!4618 = !DILocalVariable(name: "out", arg: 1, scope: !4614, file: !3746, line: 739, type: !4075)
!4619 = !DILocalVariable(name: "ctx", arg: 2, scope: !4614, file: !3746, line: 739, type: !102)
!4620 = !DILocalVariable(name: "format", arg: 3, scope: !4614, file: !3746, line: 739, type: !337)
!4621 = !DILocalVariable(name: "ap", arg: 4, scope: !4614, file: !3746, line: 739, type: !4584)
!4622 = !DILocation(line: 0, scope: !4614)
!4623 = !DILocation(line: 741, column: 9, scope: !4614)
!4624 = !DILocation(line: 741, column: 2, scope: !4614)
!4625 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !394, file: !394, line: 157, type: !4626, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4628)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{null, !277, !132}
!4628 = !{!4629, !4630, !4631}
!4629 = !DILocalVariable(name: "c", arg: 1, scope: !4625, file: !394, line: 157, type: !277)
!4630 = !DILocalVariable(name: "n", arg: 2, scope: !4625, file: !394, line: 157, type: !132)
!4631 = !DILocalVariable(name: "i", scope: !4625, file: !394, line: 159, type: !132)
!4632 = !DILocation(line: 0, scope: !4625)
!4633 = !DILocation(line: 164, column: 16, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !394, line: 164, column: 2)
!4635 = distinct !DILexicalBlock(scope: !4625, file: !394, line: 164, column: 2)
!4636 = !DILocation(line: 164, column: 2, scope: !4635)
!4637 = !DILocation(line: 165, column: 3, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4634, file: !394, line: 164, column: 26)
!4639 = !DILocation(line: 165, column: 13, scope: !4638)
!4640 = !DILocation(line: 164, column: 22, scope: !4634)
!4641 = distinct !{!4641, !4636, !4642}
!4642 = !DILocation(line: 166, column: 2, scope: !4635)
!4643 = !DILocation(line: 171, column: 1, scope: !4625)
!4644 = distinct !DISubprogram(name: "printk", scope: !394, file: !394, line: 203, type: !4645, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4647)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{null, !337, null}
!4647 = !{!4648, !4649}
!4648 = !DILocalVariable(name: "fmt", arg: 1, scope: !4644, file: !394, line: 203, type: !337)
!4649 = !DILocalVariable(name: "ap", scope: !4644, file: !394, line: 205, type: !4584)
!4650 = !DILocation(line: 0, scope: !4644)
!4651 = !DILocation(line: 205, column: 2, scope: !4644)
!4652 = !DILocation(line: 205, column: 10, scope: !4644)
!4653 = !DILocation(line: 207, column: 2, scope: !4644)
!4654 = !DILocation(line: 209, column: 2, scope: !4644)
!4655 = !DILocation(line: 211, column: 2, scope: !4644)
!4656 = !DILocation(line: 212, column: 1, scope: !4644)
!4657 = distinct !DISubprogram(name: "snprintk", scope: !394, file: !394, line: 239, type: !4658, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4660)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!103, !277, !132, !337, null}
!4660 = !{!4661, !4662, !4663, !4664, !4665}
!4661 = !DILocalVariable(name: "str", arg: 1, scope: !4657, file: !394, line: 239, type: !277)
!4662 = !DILocalVariable(name: "size", arg: 2, scope: !4657, file: !394, line: 239, type: !132)
!4663 = !DILocalVariable(name: "fmt", arg: 3, scope: !4657, file: !394, line: 239, type: !337)
!4664 = !DILocalVariable(name: "ap", scope: !4657, file: !394, line: 241, type: !4584)
!4665 = !DILocalVariable(name: "ret", scope: !4657, file: !394, line: 242, type: !103)
!4666 = !DILocation(line: 0, scope: !4657)
!4667 = !DILocation(line: 241, column: 2, scope: !4657)
!4668 = !DILocation(line: 241, column: 10, scope: !4657)
!4669 = !DILocation(line: 244, column: 2, scope: !4657)
!4670 = !DILocation(line: 245, column: 8, scope: !4657)
!4671 = !DILocation(line: 246, column: 2, scope: !4657)
!4672 = !DILocation(line: 249, column: 1, scope: !4657)
!4673 = !DILocation(line: 248, column: 2, scope: !4657)
!4674 = distinct !DISubprogram(name: "vsnprintk", scope: !394, file: !394, line: 251, type: !4675, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4677)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{!103, !277, !132, !337, !4584}
!4677 = !{!4678, !4679, !4680, !4681, !4682}
!4678 = !DILocalVariable(name: "str", arg: 1, scope: !4674, file: !394, line: 251, type: !277)
!4679 = !DILocalVariable(name: "size", arg: 2, scope: !4674, file: !394, line: 251, type: !132)
!4680 = !DILocalVariable(name: "fmt", arg: 3, scope: !4674, file: !394, line: 251, type: !337)
!4681 = !DILocalVariable(name: "ap", arg: 4, scope: !4674, file: !394, line: 251, type: !4584)
!4682 = !DILocalVariable(name: "ctx", scope: !4674, file: !394, line: 253, type: !4683)
!4683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !394, line: 217, size: 96, elements: !4684)
!4684 = !{!4685, !4686, !4687}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4683, file: !394, line: 218, baseType: !277, size: 32)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4683, file: !394, line: 219, baseType: !103, size: 32, offset: 32)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4683, file: !394, line: 220, baseType: !103, size: 32, offset: 64)
!4688 = !DILocation(line: 0, scope: !4674)
!4689 = !DILocation(line: 253, column: 2, scope: !4674)
!4690 = !DILocation(line: 253, column: 21, scope: !4674)
!4691 = !DILocation(line: 253, column: 27, scope: !4674)
!4692 = !DILocation(line: 255, column: 2, scope: !4674)
!4693 = !DILocation(line: 257, column: 10, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4674, file: !394, line: 257, column: 6)
!4695 = !DILocation(line: 257, column: 22, scope: !4694)
!4696 = !DILocation(line: 257, column: 16, scope: !4694)
!4697 = !DILocation(line: 257, column: 6, scope: !4674)
!4698 = !DILocation(line: 258, column: 3, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4694, file: !394, line: 257, column: 27)
!4700 = !DILocation(line: 258, column: 18, scope: !4699)
!4701 = !DILocation(line: 259, column: 2, scope: !4699)
!4702 = !DILocation(line: 262, column: 1, scope: !4674)
!4703 = !DILocation(line: 261, column: 2, scope: !4674)
!4704 = distinct !DISubprogram(name: "str_out", scope: !394, file: !394, line: 223, type: !4705, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4708)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!103, !103, !4707}
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 32)
!4708 = !{!4709, !4710}
!4709 = !DILocalVariable(name: "c", arg: 1, scope: !4704, file: !394, line: 223, type: !103)
!4710 = !DILocalVariable(name: "ctx", arg: 2, scope: !4704, file: !394, line: 223, type: !4707)
!4711 = !DILocation(line: 0, scope: !4704)
!4712 = !DILocation(line: 225, column: 11, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4704, file: !394, line: 225, column: 6)
!4714 = !DILocation(line: 225, column: 15, scope: !4713)
!4715 = !DILocation(line: 0, scope: !4713)
!4716 = !DILocation(line: 225, column: 23, scope: !4713)
!4717 = !DILocation(line: 225, column: 45, scope: !4713)
!4718 = !DILocation(line: 225, column: 37, scope: !4713)
!4719 = !DILocation(line: 225, column: 6, scope: !4704)
!4720 = !DILocation(line: 226, column: 8, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4713, file: !394, line: 225, column: 50)
!4722 = !DILocation(line: 226, column: 13, scope: !4721)
!4723 = !DILocation(line: 227, column: 3, scope: !4721)
!4724 = !DILocation(line: 230, column: 29, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4704, file: !394, line: 230, column: 6)
!4726 = !DILocation(line: 230, column: 17, scope: !4725)
!4727 = !DILocation(line: 230, column: 6, scope: !4704)
!4728 = !DILocation(line: 231, column: 22, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4725, file: !394, line: 230, column: 34)
!4730 = !DILocation(line: 231, column: 3, scope: !4729)
!4731 = !DILocation(line: 231, column: 26, scope: !4729)
!4732 = !DILocation(line: 232, column: 2, scope: !4729)
!4733 = !DILocation(line: 233, column: 28, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4725, file: !394, line: 232, column: 9)
!4735 = !DILocation(line: 233, column: 22, scope: !4734)
!4736 = !DILocation(line: 233, column: 3, scope: !4734)
!4737 = !DILocation(line: 233, column: 26, scope: !4734)
!4738 = !DILocation(line: 237, column: 1, scope: !4704)
!4739 = distinct !DISubprogram(name: "z_thread_entry", scope: !4740, file: !4740, line: 30, type: !4741, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !4743)
!4740 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4741 = !DISubroutineType(types: !4742)
!4742 = !{null, !321, !102, !102, !102}
!4743 = !{!4744, !4745, !4746, !4747}
!4744 = !DILocalVariable(name: "entry", arg: 1, scope: !4739, file: !4740, line: 30, type: !321)
!4745 = !DILocalVariable(name: "p1", arg: 2, scope: !4739, file: !4740, line: 31, type: !102)
!4746 = !DILocalVariable(name: "p2", arg: 3, scope: !4739, file: !4740, line: 31, type: !102)
!4747 = !DILocalVariable(name: "p3", arg: 4, scope: !4739, file: !4740, line: 31, type: !102)
!4748 = !DILocation(line: 0, scope: !4739)
!4749 = !DILocation(line: 36, column: 2, scope: !4739)
!4750 = !DILocation(line: 38, column: 17, scope: !4739)
!4751 = !DILocation(line: 38, column: 2, scope: !4739)
!4752 = !DILocation(line: 45, column: 2, scope: !4739)
!4753 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !4754, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !251)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{!4756}
!4756 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !4757)
!4757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4758, size: 32)
!4758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !4759)
!4759 = !{!4760, !4818, !4830, !4831, !4832, !4833, !4839, !4852}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4758, file: !163, line: 247, baseType: !4761, size: 384)
!4761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !4762)
!4762 = !{!4763, !4787, !4794, !4795, !4796, !4805, !4806, !4807}
!4763 = !DIDerivedType(tag: DW_TAG_member, scope: !4761, file: !163, line: 60, baseType: !4764, size: 64)
!4764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4761, file: !163, line: 60, size: 64, elements: !4765)
!4765 = !{!4766, !4781}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4764, file: !163, line: 61, baseType: !4767, size: 64)
!4767 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !4768)
!4768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !4769)
!4769 = !{!4770, !4776}
!4770 = !DIDerivedType(tag: DW_TAG_member, scope: !4768, file: !146, line: 38, baseType: !4771, size: 32)
!4771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4768, file: !146, line: 38, size: 32, elements: !4772)
!4772 = !{!4773, !4775}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4771, file: !146, line: 39, baseType: !4774, size: 32)
!4774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 32)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4771, file: !146, line: 40, baseType: !4774, size: 32)
!4776 = !DIDerivedType(tag: DW_TAG_member, scope: !4768, file: !146, line: 42, baseType: !4777, size: 32, offset: 32)
!4777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4768, file: !146, line: 42, size: 32, elements: !4778)
!4778 = !{!4779, !4780}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4777, file: !146, line: 43, baseType: !4774, size: 32)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4777, file: !146, line: 44, baseType: !4774, size: 32)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4764, file: !163, line: 62, baseType: !4782, size: 64)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !4783)
!4783 = !{!4784}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4782, file: !175, line: 50, baseType: !4785, size: 64)
!4785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4786, size: 64, elements: !180)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 32)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4761, file: !163, line: 68, baseType: !4788, size: 32, offset: 64)
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 32)
!4789 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !4790)
!4790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !4791)
!4791 = !{!4792}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4790, file: !141, line: 232, baseType: !4793, size: 64)
!4793 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !4768)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4761, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4761, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!4796 = !DIDerivedType(tag: DW_TAG_member, scope: !4761, file: !163, line: 90, baseType: !4797, size: 16, offset: 112)
!4797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4761, file: !163, line: 90, size: 16, elements: !4798)
!4798 = !{!4799, !4804}
!4799 = !DIDerivedType(tag: DW_TAG_member, scope: !4797, file: !163, line: 91, baseType: !4800, size: 16)
!4800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4797, file: !163, line: 91, size: 16, elements: !4801)
!4801 = !{!4802, !4803}
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4800, file: !163, line: 96, baseType: !195, size: 8)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4800, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4797, file: !163, line: 100, baseType: !121, size: 16)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4761, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4761, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4761, file: !163, line: 131, baseType: !4808, size: 192, offset: 192)
!4808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !4809)
!4809 = !{!4810, !4811, !4817}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4808, file: !141, line: 245, baseType: !4767, size: 64)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4808, file: !141, line: 246, baseType: !4812, size: 32, offset: 64)
!4812 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !4813)
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 32)
!4814 = !DISubroutineType(types: !4815)
!4815 = !{null, !4816}
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 32)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4808, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4758, file: !163, line: 250, baseType: !4819, size: 288, offset: 384)
!4819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !4820)
!4820 = !{!4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4819, file: !214, line: 26, baseType: !108, size: 32)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4819, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4819, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4819, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4819, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4819, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4819, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4819, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4819, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4758, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4758, file: !163, line: 256, baseType: !4789, size: 64, offset: 704)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4758, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4758, file: !163, line: 300, baseType: !4834, size: 96, offset: 800)
!4834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !4835)
!4835 = !{!4836, !4837, !4838}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4834, file: !163, line: 153, baseType: !22, size: 32)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4834, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4834, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4758, file: !163, line: 325, baseType: !4840, size: 32, offset: 896)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 32)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !4842)
!4842 = !{!4843, !4849, !4850}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4841, file: !137, line: 5074, baseType: !4844, size: 96)
!4844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4845)
!4845 = !{!4846, !4847, !4848}
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4844, file: !240, line: 57, baseType: !243, size: 32)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4844, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4844, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4841, file: !137, line: 5075, baseType: !4789, size: 64, offset: 96)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4841, file: !137, line: 5076, baseType: !4851, offset: 160)
!4851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4758, file: !163, line: 343, baseType: !4853, size: 64, offset: 928)
!4853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !4854)
!4854 = !{!4855, !4856}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4853, file: !214, line: 63, baseType: !108, size: 32)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4853, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!4857 = !DILocation(line: 535, column: 9, scope: !4753)
!4858 = !DILocation(line: 535, column: 2, scope: !4753)
!4859 = distinct !DISubprogram(name: "k_thread_abort", scope: !3675, file: !3675, line: 188, type: !4860, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !4862)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{null, !4756}
!4862 = !{!4863}
!4863 = !DILocalVariable(name: "thread", arg: 1, scope: !4859, file: !3675, line: 188, type: !4756)
!4864 = !DILocation(line: 0, scope: !4859)
!4865 = !DILocation(line: 197, column: 2, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4859, file: !3675, line: 197, column: 2)
!4867 = !{i64 2155059208}
!4868 = !DILocation(line: 198, column: 2, scope: !4859)
!4869 = !DILocation(line: 199, column: 1, scope: !4859)
!4870 = distinct !DISubprogram(name: "z_current_get", scope: !3675, file: !3675, line: 173, type: !4754, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !251)
!4871 = !DILocation(line: 180, column: 2, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4870, file: !3675, line: 180, column: 2)
!4873 = !{i64 2155059140}
!4874 = !DILocation(line: 181, column: 9, scope: !4870)
!4875 = !DILocation(line: 181, column: 2, scope: !4870)
!4876 = distinct !DISubprogram(name: "sys_heap_free", scope: !4877, file: !4877, line: 163, type: !4878, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4886)
!4877 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4878 = !DISubroutineType(types: !4879)
!4879 = !{null, !4880, !102}
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 32)
!4881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !4882)
!4882 = !{!4883, !4884, !4885}
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4881, file: !240, line: 57, baseType: !2738, size: 32)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4881, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4881, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!4886 = !{!4887, !4888, !4889, !4890}
!4887 = !DILocalVariable(name: "heap", arg: 1, scope: !4876, file: !4877, line: 163, type: !4880)
!4888 = !DILocalVariable(name: "mem", arg: 2, scope: !4876, file: !4877, line: 163, type: !102)
!4889 = !DILocalVariable(name: "h", scope: !4876, file: !4877, line: 168, type: !2738)
!4890 = !DILocalVariable(name: "c", scope: !4876, file: !4877, line: 169, type: !2743)
!4891 = !DILocation(line: 0, scope: !4876)
!4892 = !DILocation(line: 165, column: 10, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4876, file: !4877, line: 165, column: 6)
!4894 = !DILocation(line: 165, column: 6, scope: !4876)
!4895 = !DILocation(line: 168, column: 27, scope: !4876)
!4896 = !DILocation(line: 169, column: 16, scope: !4876)
!4897 = !{i32 0, i32 536870912}
!4898 = !DILocation(line: 187, column: 2, scope: !4876)
!4899 = !DILocation(line: 197, column: 2, scope: !4876)
!4900 = !DILocation(line: 198, column: 1, scope: !4876)
!4901 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4877, file: !4877, line: 157, type: !4902, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4904)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!2743, !2738, !102}
!4904 = !{!4905, !4906, !4907, !4908}
!4905 = !DILocalVariable(name: "h", arg: 1, scope: !4901, file: !4877, line: 157, type: !2738)
!4906 = !DILocalVariable(name: "p", arg: 2, scope: !4901, file: !4877, line: 157, type: !102)
!4907 = !DILocalVariable(name: "mem", scope: !4901, file: !4877, line: 159, type: !379)
!4908 = !DILocalVariable(name: "base", scope: !4901, file: !4877, line: 159, type: !379)
!4909 = !DILocation(line: 0, scope: !4901)
!4910 = !DILocation(line: 159, column: 39, scope: !4901)
!4911 = !DILocation(line: 160, column: 14, scope: !4901)
!4912 = !DILocation(line: 160, column: 38, scope: !4901)
!4913 = !DILocation(line: 160, column: 46, scope: !4901)
!4914 = !DILocation(line: 160, column: 2, scope: !4901)
!4915 = distinct !DISubprogram(name: "set_chunk_used", scope: !2725, file: !2725, line: 147, type: !4916, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4918)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{null, !2738, !2743, !131}
!4918 = !{!4919, !4920, !4921, !4922, !4923}
!4919 = !DILocalVariable(name: "h", arg: 1, scope: !4915, file: !2725, line: 147, type: !2738)
!4920 = !DILocalVariable(name: "c", arg: 2, scope: !4915, file: !2725, line: 147, type: !2743)
!4921 = !DILocalVariable(name: "used", arg: 3, scope: !4915, file: !2725, line: 147, type: !131)
!4922 = !DILocalVariable(name: "buf", scope: !4915, file: !2725, line: 149, type: !2732)
!4923 = !DILocalVariable(name: "cmem", scope: !4915, file: !2725, line: 150, type: !102)
!4924 = !DILocation(line: 0, scope: !4915)
!4925 = !DILocation(line: 149, column: 22, scope: !4915)
!4926 = !DILocation(line: 0, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !2725, line: 159, column: 7)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !2725, line: 158, column: 9)
!4929 = distinct !DILexicalBlock(scope: !4915, file: !2725, line: 152, column: 6)
!4930 = !DILocation(line: 159, column: 7, scope: !4928)
!4931 = !DILocation(line: 165, column: 1, scope: !4915)
!4932 = distinct !DISubprogram(name: "free_chunk", scope: !4877, file: !4877, line: 133, type: !4933, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4935)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{null, !2738, !2743}
!4935 = !{!4936, !4937}
!4936 = !DILocalVariable(name: "h", arg: 1, scope: !4932, file: !4877, line: 133, type: !2738)
!4937 = !DILocalVariable(name: "c", arg: 2, scope: !4932, file: !4877, line: 133, type: !2743)
!4938 = !DILocation(line: 0, scope: !4932)
!4939 = !DILocation(line: 136, column: 21, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4932, file: !4877, line: 136, column: 6)
!4941 = !DILocation(line: 136, column: 7, scope: !4940)
!4942 = !DILocation(line: 136, column: 6, scope: !4932)
!4943 = !DILocation(line: 137, column: 3, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !4877, line: 136, column: 41)
!4945 = !DILocation(line: 138, column: 22, scope: !4944)
!4946 = !DILocation(line: 138, column: 3, scope: !4944)
!4947 = !DILocation(line: 139, column: 2, scope: !4944)
!4948 = !DILocation(line: 142, column: 21, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4932, file: !4877, line: 142, column: 6)
!4950 = !{i32 -65535, i32 536903678}
!4951 = !DILocation(line: 142, column: 7, scope: !4949)
!4952 = !DILocation(line: 142, column: 6, scope: !4932)
!4953 = !DILocation(line: 143, column: 3, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4949, file: !4877, line: 142, column: 40)
!4955 = !DILocation(line: 144, column: 19, scope: !4954)
!4956 = !DILocation(line: 144, column: 3, scope: !4954)
!4957 = !DILocation(line: 145, column: 7, scope: !4954)
!4958 = !DILocation(line: 146, column: 2, scope: !4954)
!4959 = !DILocation(line: 148, column: 2, scope: !4932)
!4960 = !DILocation(line: 149, column: 1, scope: !4932)
!4961 = distinct !DISubprogram(name: "right_chunk", scope: !2725, file: !2725, line: 204, type: !4962, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4964)
!4962 = !DISubroutineType(types: !4963)
!4963 = !{!2743, !2738, !2743}
!4964 = !{!4965, !4966}
!4965 = !DILocalVariable(name: "h", arg: 1, scope: !4961, file: !2725, line: 204, type: !2738)
!4966 = !DILocalVariable(name: "c", arg: 2, scope: !4961, file: !2725, line: 204, type: !2743)
!4967 = !DILocation(line: 0, scope: !4961)
!4968 = !DILocation(line: 206, column: 13, scope: !4961)
!4969 = !DILocation(line: 206, column: 11, scope: !4961)
!4970 = !DILocation(line: 206, column: 2, scope: !4961)
!4971 = distinct !DISubprogram(name: "chunk_used", scope: !2725, file: !2725, line: 137, type: !4972, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4974)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{!131, !2738, !2743}
!4974 = !{!4975, !4976}
!4975 = !DILocalVariable(name: "h", arg: 1, scope: !4971, file: !2725, line: 137, type: !2738)
!4976 = !DILocalVariable(name: "c", arg: 2, scope: !4971, file: !2725, line: 137, type: !2743)
!4977 = !DILocation(line: 0, scope: !4971)
!4978 = !DILocation(line: 139, column: 9, scope: !4971)
!4979 = !DILocation(line: 139, column: 42, scope: !4971)
!4980 = !DILocation(line: 139, column: 2, scope: !4971)
!4981 = distinct !DISubprogram(name: "free_list_remove", scope: !4877, file: !4877, line: 60, type: !4933, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4982)
!4982 = !{!4983, !4984, !4985}
!4983 = !DILocalVariable(name: "h", arg: 1, scope: !4981, file: !4877, line: 60, type: !2738)
!4984 = !DILocalVariable(name: "c", arg: 2, scope: !4981, file: !4877, line: 60, type: !2743)
!4985 = !DILocalVariable(name: "bidx", scope: !4986, file: !4877, line: 63, type: !103)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !4877, line: 62, column: 31)
!4987 = distinct !DILexicalBlock(scope: !4981, file: !4877, line: 62, column: 6)
!4988 = !DILocation(line: 0, scope: !4981)
!4989 = !DILocation(line: 63, column: 28, scope: !4986)
!4990 = !{i32 0, i32 32768}
!4991 = !DILocation(line: 63, column: 14, scope: !4986)
!4992 = !DILocation(line: 0, scope: !4986)
!4993 = !DILocation(line: 64, column: 3, scope: !4986)
!4994 = !DILocation(line: 66, column: 1, scope: !4981)
!4995 = distinct !DISubprogram(name: "merge_chunks", scope: !4877, file: !4877, line: 125, type: !4996, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{null, !2738, !2743, !2743}
!4998 = !{!4999, !5000, !5001, !5002}
!4999 = !DILocalVariable(name: "h", arg: 1, scope: !4995, file: !4877, line: 125, type: !2738)
!5000 = !DILocalVariable(name: "lc", arg: 2, scope: !4995, file: !4877, line: 125, type: !2743)
!5001 = !DILocalVariable(name: "rc", arg: 3, scope: !4995, file: !4877, line: 125, type: !2743)
!5002 = !DILocalVariable(name: "newsz", scope: !4995, file: !4877, line: 127, type: !5003)
!5003 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2725, line: 62, baseType: !108)
!5004 = !DILocation(line: 0, scope: !4995)
!5005 = !DILocation(line: 127, column: 20, scope: !4995)
!5006 = !DILocation(line: 127, column: 40, scope: !4995)
!5007 = !DILocation(line: 127, column: 38, scope: !4995)
!5008 = !DILocation(line: 129, column: 2, scope: !4995)
!5009 = !DILocation(line: 130, column: 25, scope: !4995)
!5010 = !DILocation(line: 130, column: 2, scope: !4995)
!5011 = !DILocation(line: 131, column: 1, scope: !4995)
!5012 = distinct !DISubprogram(name: "left_chunk", scope: !2725, file: !2725, line: 199, type: !4962, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5013)
!5013 = !{!5014, !5015}
!5014 = !DILocalVariable(name: "h", arg: 1, scope: !5012, file: !2725, line: 199, type: !2738)
!5015 = !DILocalVariable(name: "c", arg: 2, scope: !5012, file: !2725, line: 199, type: !2743)
!5016 = !DILocation(line: 0, scope: !5012)
!5017 = !DILocation(line: 201, column: 13, scope: !5012)
!5018 = !DILocation(line: 201, column: 11, scope: !5012)
!5019 = !DILocation(line: 201, column: 2, scope: !5012)
!5020 = distinct !DISubprogram(name: "free_list_add", scope: !4877, file: !4877, line: 98, type: !4933, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5021)
!5021 = !{!5022, !5023, !5024}
!5022 = !DILocalVariable(name: "h", arg: 1, scope: !5020, file: !4877, line: 98, type: !2738)
!5023 = !DILocalVariable(name: "c", arg: 2, scope: !5020, file: !4877, line: 98, type: !2743)
!5024 = !DILocalVariable(name: "bidx", scope: !5025, file: !4877, line: 101, type: !103)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !4877, line: 100, column: 31)
!5026 = distinct !DILexicalBlock(scope: !5020, file: !4877, line: 100, column: 6)
!5027 = !DILocation(line: 0, scope: !5020)
!5028 = !DILocation(line: 101, column: 28, scope: !5025)
!5029 = !DILocation(line: 101, column: 14, scope: !5025)
!5030 = !DILocation(line: 0, scope: !5025)
!5031 = !DILocation(line: 102, column: 3, scope: !5025)
!5032 = !DILocation(line: 104, column: 1, scope: !5020)
!5033 = distinct !DISubprogram(name: "chunk_size", scope: !2725, file: !2725, line: 142, type: !5034, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5036)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{!5003, !2738, !2743}
!5036 = !{!5037, !5038}
!5037 = !DILocalVariable(name: "h", arg: 1, scope: !5033, file: !2725, line: 142, type: !2738)
!5038 = !DILocalVariable(name: "c", arg: 2, scope: !5033, file: !2725, line: 142, type: !2743)
!5039 = !DILocation(line: 0, scope: !5033)
!5040 = !DILocation(line: 144, column: 9, scope: !5033)
!5041 = !DILocation(line: 144, column: 42, scope: !5033)
!5042 = !DILocation(line: 144, column: 2, scope: !5033)
!5043 = distinct !DISubprogram(name: "bucket_idx", scope: !2725, file: !2725, line: 250, type: !5044, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5046)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!103, !2738, !5003}
!5046 = !{!5047, !5048, !5049}
!5047 = !DILocalVariable(name: "h", arg: 1, scope: !5043, file: !2725, line: 250, type: !2738)
!5048 = !DILocalVariable(name: "sz", arg: 2, scope: !5043, file: !2725, line: 250, type: !5003)
!5049 = !DILocalVariable(name: "usable_sz", scope: !5043, file: !2725, line: 252, type: !32)
!5050 = !DILocation(line: 0, scope: !5043)
!5051 = !DILocation(line: 252, column: 32, scope: !5043)
!5052 = !DILocation(line: 252, column: 30, scope: !5043)
!5053 = !DILocation(line: 252, column: 50, scope: !5043)
!5054 = !DILocation(line: 253, column: 14, scope: !5043)
!5055 = !{i32 0, i32 33}
!5056 = !DILocation(line: 253, column: 12, scope: !5043)
!5057 = !DILocation(line: 253, column: 2, scope: !5043)
!5058 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4877, file: !4877, line: 68, type: !5059, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5061)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{null, !2738, !2743, !103}
!5061 = !{!5062, !5063, !5064, !5065, !5067, !5070}
!5062 = !DILocalVariable(name: "h", arg: 1, scope: !5058, file: !4877, line: 68, type: !2738)
!5063 = !DILocalVariable(name: "c", arg: 2, scope: !5058, file: !4877, line: 68, type: !2743)
!5064 = !DILocalVariable(name: "bidx", arg: 3, scope: !5058, file: !4877, line: 68, type: !103)
!5065 = !DILocalVariable(name: "b", scope: !5058, file: !4877, line: 70, type: !5066)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 32)
!5067 = !DILocalVariable(name: "second", scope: !5068, file: !4877, line: 84, type: !2743)
!5068 = distinct !DILexicalBlock(scope: !5069, file: !4877, line: 80, column: 9)
!5069 = distinct !DILexicalBlock(scope: !5058, file: !4877, line: 72, column: 6)
!5070 = !DILocalVariable(name: "first", scope: !5068, file: !4877, line: 85, type: !2743)
!5071 = !DILocation(line: 0, scope: !5058)
!5072 = !DILocation(line: 72, column: 9, scope: !5069)
!5073 = !DILocation(line: 72, column: 14, scope: !5069)
!5074 = !DILocation(line: 72, column: 6, scope: !5058)
!5075 = !DILocation(line: 76, column: 23, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5069, file: !4877, line: 72, column: 21)
!5077 = !DILocation(line: 76, column: 6, scope: !5076)
!5078 = !DILocation(line: 76, column: 20, scope: !5076)
!5079 = !DILocation(line: 77, column: 11, scope: !5076)
!5080 = !DILocation(line: 78, column: 3, scope: !5076)
!5081 = !DILocation(line: 79, column: 3, scope: !5076)
!5082 = !DILocation(line: 80, column: 2, scope: !5076)
!5083 = !DILocation(line: 0, scope: !5068)
!5084 = !DILocation(line: 85, column: 21, scope: !5068)
!5085 = !{i32 0, i32 65536}
!5086 = !DILocation(line: 87, column: 3, scope: !5068)
!5087 = !DILocation(line: 88, column: 3, scope: !5068)
!5088 = !DILocation(line: 89, column: 3, scope: !5068)
!5089 = !DILocation(line: 90, column: 3, scope: !5068)
!5090 = !DILocation(line: 96, column: 1, scope: !5058)
!5091 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2725, file: !2725, line: 187, type: !4996, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5092)
!5092 = !{!5093, !5094, !5095}
!5093 = !DILocalVariable(name: "h", arg: 1, scope: !5091, file: !2725, line: 187, type: !2738)
!5094 = !DILocalVariable(name: "c", arg: 2, scope: !5091, file: !2725, line: 187, type: !2743)
!5095 = !DILocalVariable(name: "prev", arg: 3, scope: !5091, file: !2725, line: 188, type: !2743)
!5096 = !DILocation(line: 0, scope: !5091)
!5097 = !DILocation(line: 190, column: 2, scope: !5091)
!5098 = !DILocation(line: 191, column: 1, scope: !5091)
!5099 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2725, file: !2725, line: 193, type: !4996, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5100)
!5100 = !{!5101, !5102, !5103}
!5101 = !DILocalVariable(name: "h", arg: 1, scope: !5099, file: !2725, line: 193, type: !2738)
!5102 = !DILocalVariable(name: "c", arg: 2, scope: !5099, file: !2725, line: 193, type: !2743)
!5103 = !DILocalVariable(name: "next", arg: 3, scope: !5099, file: !2725, line: 194, type: !2743)
!5104 = !DILocation(line: 0, scope: !5099)
!5105 = !DILocation(line: 196, column: 2, scope: !5099)
!5106 = !DILocation(line: 197, column: 1, scope: !5099)
!5107 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2725, file: !2725, line: 177, type: !4962, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5108)
!5108 = !{!5109, !5110}
!5109 = !DILocalVariable(name: "h", arg: 1, scope: !5107, file: !2725, line: 177, type: !2738)
!5110 = !DILocalVariable(name: "c", arg: 2, scope: !5107, file: !2725, line: 177, type: !2743)
!5111 = !DILocation(line: 0, scope: !5107)
!5112 = !DILocation(line: 179, column: 9, scope: !5107)
!5113 = !DILocation(line: 179, column: 2, scope: !5107)
!5114 = distinct !DISubprogram(name: "chunk_field", scope: !2725, file: !2725, line: 107, type: !5115, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5117)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{!2743, !2738, !2743, !2724}
!5117 = !{!5118, !5119, !5120, !5121, !5122}
!5118 = !DILocalVariable(name: "h", arg: 1, scope: !5114, file: !2725, line: 107, type: !2738)
!5119 = !DILocalVariable(name: "c", arg: 2, scope: !5114, file: !2725, line: 107, type: !2743)
!5120 = !DILocalVariable(name: "f", arg: 3, scope: !5114, file: !2725, line: 108, type: !2724)
!5121 = !DILocalVariable(name: "buf", scope: !5114, file: !2725, line: 110, type: !2732)
!5122 = !DILocalVariable(name: "cmem", scope: !5114, file: !2725, line: 111, type: !102)
!5123 = !DILocation(line: 0, scope: !5114)
!5124 = !DILocation(line: 110, column: 22, scope: !5114)
!5125 = !DILocation(line: 111, column: 15, scope: !5114)
!5126 = !DILocation(line: 116, column: 11, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !2725, line: 115, column: 9)
!5128 = distinct !DILexicalBlock(scope: !5114, file: !2725, line: 113, column: 6)
!5129 = !DILocation(line: 116, column: 10, scope: !5127)
!5130 = !DILocation(line: 118, column: 1, scope: !5114)
!5131 = distinct !DISubprogram(name: "chunk_buf", scope: !2725, file: !2725, line: 101, type: !5132, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5134)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!2732, !2738}
!5134 = !{!5135}
!5135 = !DILocalVariable(name: "h", arg: 1, scope: !5131, file: !2725, line: 101, type: !2738)
!5136 = !DILocation(line: 0, scope: !5131)
!5137 = !DILocation(line: 104, column: 9, scope: !5131)
!5138 = !DILocation(line: 104, column: 2, scope: !5131)
!5139 = distinct !DISubprogram(name: "chunk_set", scope: !2725, file: !2725, line: 120, type: !5140, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5142)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !2738, !2743, !2724, !2743}
!5142 = !{!5143, !5144, !5145, !5146, !5147, !5148}
!5143 = !DILocalVariable(name: "h", arg: 1, scope: !5139, file: !2725, line: 120, type: !2738)
!5144 = !DILocalVariable(name: "c", arg: 2, scope: !5139, file: !2725, line: 120, type: !2743)
!5145 = !DILocalVariable(name: "f", arg: 3, scope: !5139, file: !2725, line: 121, type: !2724)
!5146 = !DILocalVariable(name: "val", arg: 4, scope: !5139, file: !2725, line: 121, type: !2743)
!5147 = !DILocalVariable(name: "buf", scope: !5139, file: !2725, line: 125, type: !2732)
!5148 = !DILocalVariable(name: "cmem", scope: !5139, file: !2725, line: 126, type: !102)
!5149 = !DILocation(line: 0, scope: !5139)
!5150 = !DILocation(line: 125, column: 22, scope: !5139)
!5151 = !DILocation(line: 126, column: 15, scope: !5139)
!5152 = !DILocation(line: 133, column: 27, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5154, file: !2725, line: 131, column: 9)
!5154 = distinct !DILexicalBlock(scope: !5139, file: !2725, line: 128, column: 6)
!5155 = !DILocation(line: 133, column: 4, scope: !5153)
!5156 = !DILocation(line: 133, column: 3, scope: !5153)
!5157 = !DILocation(line: 133, column: 25, scope: !5153)
!5158 = !DILocation(line: 135, column: 1, scope: !5139)
!5159 = distinct !DISubprogram(name: "min_chunk_size", scope: !2725, file: !2725, line: 240, type: !5160, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5162)
!5160 = !DISubroutineType(types: !5161)
!5161 = !{!5003, !2738}
!5162 = !{!5163}
!5163 = !DILocalVariable(name: "h", arg: 1, scope: !5159, file: !2725, line: 240, type: !2738)
!5164 = !DILocation(line: 0, scope: !5159)
!5165 = !DILocation(line: 242, column: 9, scope: !5159)
!5166 = !DILocation(line: 242, column: 2, scope: !5159)
!5167 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2725, file: !2725, line: 235, type: !5168, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5170)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!5003, !2738, !132}
!5170 = !{!5171, !5172}
!5171 = !DILocalVariable(name: "h", arg: 1, scope: !5167, file: !2725, line: 235, type: !2738)
!5172 = !DILocalVariable(name: "bytes", arg: 2, scope: !5167, file: !2725, line: 235, type: !132)
!5173 = !DILocation(line: 0, scope: !5167)
!5174 = !DILocation(line: 237, column: 39, scope: !5167)
!5175 = !DILocation(line: 237, column: 9, scope: !5167)
!5176 = !DILocation(line: 237, column: 2, scope: !5167)
!5177 = distinct !DISubprogram(name: "chunksz", scope: !2725, file: !2725, line: 230, type: !5178, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5180)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!5003, !132}
!5180 = !{!5181}
!5181 = !DILocalVariable(name: "bytes", arg: 1, scope: !5177, file: !2725, line: 230, type: !132)
!5182 = !DILocation(line: 0, scope: !5177)
!5183 = !DILocation(line: 232, column: 29, scope: !5177)
!5184 = !DILocation(line: 232, column: 35, scope: !5177)
!5185 = !DILocation(line: 232, column: 2, scope: !5177)
!5186 = distinct !DISubprogram(name: "set_chunk_size", scope: !2725, file: !2725, line: 172, type: !5187, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5189)
!5187 = !DISubroutineType(types: !5188)
!5188 = !{null, !2738, !2743, !5003}
!5189 = !{!5190, !5191, !5192}
!5190 = !DILocalVariable(name: "h", arg: 1, scope: !5186, file: !2725, line: 172, type: !2738)
!5191 = !DILocalVariable(name: "c", arg: 2, scope: !5186, file: !2725, line: 172, type: !2743)
!5192 = !DILocalVariable(name: "size", arg: 3, scope: !5186, file: !2725, line: 172, type: !5003)
!5193 = !DILocation(line: 0, scope: !5186)
!5194 = !DILocation(line: 174, column: 38, scope: !5186)
!5195 = !DILocation(line: 174, column: 2, scope: !5186)
!5196 = !DILocation(line: 175, column: 1, scope: !5186)
!5197 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2725, file: !2725, line: 209, type: !5187, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5198)
!5198 = !{!5199, !5200, !5201}
!5199 = !DILocalVariable(name: "h", arg: 1, scope: !5197, file: !2725, line: 209, type: !2738)
!5200 = !DILocalVariable(name: "c", arg: 2, scope: !5197, file: !2725, line: 209, type: !2743)
!5201 = !DILocalVariable(name: "size", arg: 3, scope: !5197, file: !2725, line: 210, type: !5003)
!5202 = !DILocation(line: 0, scope: !5197)
!5203 = !DILocation(line: 212, column: 2, scope: !5197)
!5204 = !DILocation(line: 213, column: 1, scope: !5197)
!5205 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4877, file: !4877, line: 34, type: !5059, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5206)
!5206 = !{!5207, !5208, !5209, !5210, !5211, !5214}
!5207 = !DILocalVariable(name: "h", arg: 1, scope: !5205, file: !4877, line: 34, type: !2738)
!5208 = !DILocalVariable(name: "c", arg: 2, scope: !5205, file: !4877, line: 34, type: !2743)
!5209 = !DILocalVariable(name: "bidx", arg: 3, scope: !5205, file: !4877, line: 34, type: !103)
!5210 = !DILocalVariable(name: "b", scope: !5205, file: !4877, line: 36, type: !5066)
!5211 = !DILocalVariable(name: "first", scope: !5212, file: !4877, line: 47, type: !2743)
!5212 = distinct !DILexicalBlock(scope: !5213, file: !4877, line: 46, column: 9)
!5213 = distinct !DILexicalBlock(scope: !5205, file: !4877, line: 42, column: 6)
!5214 = !DILocalVariable(name: "second", scope: !5212, file: !4877, line: 48, type: !2743)
!5215 = !DILocation(line: 0, scope: !5205)
!5216 = !DILocation(line: 36, column: 29, scope: !5205)
!5217 = !DILocation(line: 42, column: 6, scope: !5213)
!5218 = !DILocation(line: 42, column: 28, scope: !5213)
!5219 = !DILocation(line: 42, column: 6, scope: !5205)
!5220 = !DILocation(line: 44, column: 24, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5213, file: !4877, line: 42, column: 34)
!5222 = !DILocation(line: 44, column: 23, scope: !5221)
!5223 = !DILocation(line: 44, column: 6, scope: !5221)
!5224 = !DILocation(line: 44, column: 20, scope: !5221)
!5225 = !DILocation(line: 45, column: 6, scope: !5221)
!5226 = !DILocation(line: 45, column: 11, scope: !5221)
!5227 = !DILocation(line: 46, column: 2, scope: !5221)
!5228 = !DILocation(line: 47, column: 21, scope: !5212)
!5229 = !DILocation(line: 0, scope: !5212)
!5230 = !DILocation(line: 50, column: 6, scope: !5212)
!5231 = !DILocation(line: 50, column: 11, scope: !5212)
!5232 = !DILocation(line: 51, column: 3, scope: !5212)
!5233 = !DILocation(line: 52, column: 3, scope: !5212)
!5234 = !DILocation(line: 58, column: 1, scope: !5205)
!5235 = distinct !DISubprogram(name: "next_free_chunk", scope: !2725, file: !2725, line: 182, type: !4962, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5236)
!5236 = !{!5237, !5238}
!5237 = !DILocalVariable(name: "h", arg: 1, scope: !5235, file: !2725, line: 182, type: !2738)
!5238 = !DILocalVariable(name: "c", arg: 2, scope: !5235, file: !2725, line: 182, type: !2743)
!5239 = !DILocation(line: 0, scope: !5235)
!5240 = !DILocation(line: 184, column: 9, scope: !5235)
!5241 = !DILocation(line: 184, column: 2, scope: !5235)
!5242 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4877, file: !4877, line: 200, type: !5243, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5245)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!132, !4880, !102}
!5245 = !{!5246, !5247, !5248, !5249, !5250, !5251, !5252}
!5246 = !DILocalVariable(name: "heap", arg: 1, scope: !5242, file: !4877, line: 200, type: !4880)
!5247 = !DILocalVariable(name: "mem", arg: 2, scope: !5242, file: !4877, line: 200, type: !102)
!5248 = !DILocalVariable(name: "h", scope: !5242, file: !4877, line: 202, type: !2738)
!5249 = !DILocalVariable(name: "c", scope: !5242, file: !4877, line: 203, type: !2743)
!5250 = !DILocalVariable(name: "addr", scope: !5242, file: !4877, line: 204, type: !132)
!5251 = !DILocalVariable(name: "chunk_base", scope: !5242, file: !4877, line: 205, type: !132)
!5252 = !DILocalVariable(name: "chunk_sz", scope: !5242, file: !4877, line: 206, type: !132)
!5253 = !DILocation(line: 0, scope: !5242)
!5254 = !DILocation(line: 202, column: 27, scope: !5242)
!5255 = !DILocation(line: 203, column: 16, scope: !5242)
!5256 = !DILocation(line: 204, column: 16, scope: !5242)
!5257 = !DILocation(line: 205, column: 31, scope: !5242)
!5258 = !DILocation(line: 205, column: 22, scope: !5242)
!5259 = !DILocation(line: 206, column: 20, scope: !5242)
!5260 = !DILocation(line: 206, column: 37, scope: !5242)
!5261 = !DILocation(line: 208, column: 26, scope: !5242)
!5262 = !DILocation(line: 208, column: 18, scope: !5242)
!5263 = !DILocation(line: 208, column: 2, scope: !5242)
!5264 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4877, file: !4877, line: 263, type: !5265, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5267)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!102, !4880, !132}
!5267 = !{!5268, !5269, !5270, !5271, !5272, !5273}
!5268 = !DILocalVariable(name: "heap", arg: 1, scope: !5264, file: !4877, line: 263, type: !4880)
!5269 = !DILocalVariable(name: "bytes", arg: 2, scope: !5264, file: !4877, line: 263, type: !132)
!5270 = !DILocalVariable(name: "h", scope: !5264, file: !4877, line: 265, type: !2738)
!5271 = !DILocalVariable(name: "mem", scope: !5264, file: !4877, line: 266, type: !102)
!5272 = !DILocalVariable(name: "chunk_sz", scope: !5264, file: !4877, line: 272, type: !5003)
!5273 = !DILocalVariable(name: "c", scope: !5264, file: !4877, line: 273, type: !2743)
!5274 = !DILocation(line: 0, scope: !5264)
!5275 = !DILocation(line: 265, column: 27, scope: !5264)
!5276 = !DILocation(line: 268, column: 12, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5264, file: !4877, line: 268, column: 6)
!5278 = !DILocation(line: 268, column: 18, scope: !5277)
!5279 = !DILocation(line: 268, column: 21, scope: !5277)
!5280 = !DILocation(line: 268, column: 6, scope: !5264)
!5281 = !DILocation(line: 272, column: 23, scope: !5264)
!5282 = !DILocation(line: 273, column: 16, scope: !5264)
!5283 = !DILocation(line: 274, column: 8, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5264, file: !4877, line: 274, column: 6)
!5285 = !DILocation(line: 274, column: 6, scope: !5264)
!5286 = !DILocation(line: 279, column: 6, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5264, file: !4877, line: 279, column: 6)
!5288 = !DILocation(line: 279, column: 23, scope: !5287)
!5289 = !DILocation(line: 279, column: 6, scope: !5264)
!5290 = !DILocation(line: 280, column: 24, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5287, file: !4877, line: 279, column: 35)
!5292 = !DILocation(line: 280, column: 3, scope: !5291)
!5293 = !DILocation(line: 281, column: 3, scope: !5291)
!5294 = !DILocation(line: 282, column: 2, scope: !5291)
!5295 = !DILocation(line: 284, column: 2, scope: !5264)
!5296 = !DILocation(line: 286, column: 8, scope: !5264)
!5297 = !DILocation(line: 298, column: 2, scope: !5264)
!5298 = !DILocation(line: 299, column: 1, scope: !5264)
!5299 = distinct !DISubprogram(name: "size_too_big", scope: !2725, file: !2725, line: 256, type: !5300, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{!131, !2738, !132}
!5302 = !{!5303, !5304}
!5303 = !DILocalVariable(name: "h", arg: 1, scope: !5299, file: !2725, line: 256, type: !2738)
!5304 = !DILocalVariable(name: "bytes", arg: 2, scope: !5299, file: !2725, line: 256, type: !132)
!5305 = !DILocation(line: 0, scope: !5299)
!5306 = !DILocation(line: 262, column: 16, scope: !5299)
!5307 = !DILocation(line: 262, column: 36, scope: !5299)
!5308 = !DILocation(line: 262, column: 30, scope: !5299)
!5309 = !DILocation(line: 262, column: 2, scope: !5299)
!5310 = distinct !DISubprogram(name: "alloc_chunk", scope: !4877, file: !4877, line: 211, type: !5311, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5313)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!2743, !2738, !5003}
!5313 = !{!5314, !5315, !5316, !5317, !5318, !5321, !5322, !5324, !5325, !5328}
!5314 = !DILocalVariable(name: "h", arg: 1, scope: !5310, file: !4877, line: 211, type: !2738)
!5315 = !DILocalVariable(name: "sz", arg: 2, scope: !5310, file: !4877, line: 211, type: !5003)
!5316 = !DILocalVariable(name: "bi", scope: !5310, file: !4877, line: 213, type: !103)
!5317 = !DILocalVariable(name: "b", scope: !5310, file: !4877, line: 214, type: !5066)
!5318 = !DILocalVariable(name: "first", scope: !5319, file: !4877, line: 233, type: !2743)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !4877, line: 232, column: 15)
!5320 = distinct !DILexicalBlock(scope: !5310, file: !4877, line: 232, column: 6)
!5321 = !DILocalVariable(name: "i", scope: !5319, file: !4877, line: 234, type: !103)
!5322 = !DILocalVariable(name: "c", scope: !5323, file: !4877, line: 236, type: !2743)
!5323 = distinct !DILexicalBlock(scope: !5319, file: !4877, line: 235, column: 6)
!5324 = !DILocalVariable(name: "bmask", scope: !5310, file: !4877, line: 249, type: !108)
!5325 = !DILocalVariable(name: "minbucket", scope: !5326, file: !4877, line: 252, type: !103)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !4877, line: 251, column: 19)
!5327 = distinct !DILexicalBlock(scope: !5310, file: !4877, line: 251, column: 6)
!5328 = !DILocalVariable(name: "c", scope: !5326, file: !4877, line: 253, type: !2743)
!5329 = !DILocation(line: 0, scope: !5310)
!5330 = !DILocation(line: 213, column: 11, scope: !5310)
!5331 = !DILocation(line: 232, column: 9, scope: !5320)
!5332 = !DILocation(line: 232, column: 6, scope: !5320)
!5333 = !DILocation(line: 232, column: 6, scope: !5310)
!5334 = !DILocation(line: 236, column: 21, scope: !5323)
!5335 = !DILocation(line: 0, scope: !5319)
!5336 = !DILocation(line: 0, scope: !5323)
!5337 = !DILocation(line: 237, column: 8, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5323, file: !4877, line: 237, column: 8)
!5339 = !DILocation(line: 237, column: 25, scope: !5338)
!5340 = !DILocation(line: 237, column: 8, scope: !5323)
!5341 = !DILocation(line: 238, column: 5, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5338, file: !4877, line: 237, column: 32)
!5343 = !DILocation(line: 241, column: 14, scope: !5323)
!5344 = !DILocation(line: 241, column: 12, scope: !5323)
!5345 = !DILocation(line: 243, column: 12, scope: !5319)
!5346 = !DILocation(line: 243, column: 16, scope: !5319)
!5347 = distinct !{!5347, !5348, !5349}
!5348 = !DILocation(line: 235, column: 3, scope: !5319)
!5349 = !DILocation(line: 243, column: 35, scope: !5319)
!5350 = !DILocation(line: 249, column: 22, scope: !5310)
!5351 = !DILocation(line: 249, column: 39, scope: !5310)
!5352 = !DILocation(line: 249, column: 36, scope: !5310)
!5353 = !DILocation(line: 251, column: 12, scope: !5327)
!5354 = !DILocation(line: 251, column: 6, scope: !5310)
!5355 = !DILocation(line: 252, column: 19, scope: !5326)
!5356 = !DILocation(line: 0, scope: !5326)
!5357 = !DILocation(line: 253, column: 39, scope: !5326)
!5358 = !DILocation(line: 255, column: 3, scope: !5326)
!5359 = !DILocation(line: 261, column: 1, scope: !5310)
!5360 = distinct !DISubprogram(name: "split_chunks", scope: !4877, file: !4877, line: 109, type: !4996, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5361)
!5361 = !{!5362, !5363, !5364, !5365, !5366, !5367}
!5362 = !DILocalVariable(name: "h", arg: 1, scope: !5360, file: !4877, line: 109, type: !2738)
!5363 = !DILocalVariable(name: "lc", arg: 2, scope: !5360, file: !4877, line: 109, type: !2743)
!5364 = !DILocalVariable(name: "rc", arg: 3, scope: !5360, file: !4877, line: 109, type: !2743)
!5365 = !DILocalVariable(name: "sz0", scope: !5360, file: !4877, line: 114, type: !5003)
!5366 = !DILocalVariable(name: "lsz", scope: !5360, file: !4877, line: 115, type: !5003)
!5367 = !DILocalVariable(name: "rsz", scope: !5360, file: !4877, line: 116, type: !5003)
!5368 = !DILocation(line: 0, scope: !5360)
!5369 = !DILocation(line: 114, column: 18, scope: !5360)
!5370 = !DILocation(line: 115, column: 21, scope: !5360)
!5371 = !DILocation(line: 116, column: 22, scope: !5360)
!5372 = !DILocation(line: 118, column: 2, scope: !5360)
!5373 = !DILocation(line: 119, column: 2, scope: !5360)
!5374 = !DILocation(line: 120, column: 2, scope: !5360)
!5375 = !DILocation(line: 121, column: 25, scope: !5360)
!5376 = !DILocation(line: 121, column: 2, scope: !5360)
!5377 = !DILocation(line: 122, column: 1, scope: !5360)
!5378 = distinct !DISubprogram(name: "chunk_mem", scope: !4877, file: !4877, line: 24, type: !5379, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5381)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!102, !2738, !2743}
!5381 = !{!5382, !5383, !5384, !5385}
!5382 = !DILocalVariable(name: "h", arg: 1, scope: !5378, file: !4877, line: 24, type: !2738)
!5383 = !DILocalVariable(name: "c", arg: 2, scope: !5378, file: !4877, line: 24, type: !2743)
!5384 = !DILocalVariable(name: "buf", scope: !5378, file: !4877, line: 26, type: !2732)
!5385 = !DILocalVariable(name: "ret", scope: !5378, file: !4877, line: 27, type: !379)
!5386 = !DILocation(line: 0, scope: !5378)
!5387 = !DILocation(line: 26, column: 22, scope: !5378)
!5388 = !DILocation(line: 27, column: 38, scope: !5378)
!5389 = !DILocation(line: 31, column: 2, scope: !5378)
!5390 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4877, file: !4877, line: 301, type: !5391, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5393)
!5391 = !DISubroutineType(types: !5392)
!5392 = !{!102, !4880, !132, !132}
!5393 = !{!5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405}
!5394 = !DILocalVariable(name: "heap", arg: 1, scope: !5390, file: !4877, line: 301, type: !4880)
!5395 = !DILocalVariable(name: "align", arg: 2, scope: !5390, file: !4877, line: 301, type: !132)
!5396 = !DILocalVariable(name: "bytes", arg: 3, scope: !5390, file: !4877, line: 301, type: !132)
!5397 = !DILocalVariable(name: "h", scope: !5390, file: !4877, line: 303, type: !2738)
!5398 = !DILocalVariable(name: "gap", scope: !5390, file: !4877, line: 304, type: !132)
!5399 = !DILocalVariable(name: "rew", scope: !5390, file: !4877, line: 304, type: !132)
!5400 = !DILocalVariable(name: "padded_sz", scope: !5390, file: !4877, line: 335, type: !5003)
!5401 = !DILocalVariable(name: "c0", scope: !5390, file: !4877, line: 336, type: !2743)
!5402 = !DILocalVariable(name: "mem", scope: !5390, file: !4877, line: 341, type: !379)
!5403 = !DILocalVariable(name: "end", scope: !5390, file: !4877, line: 345, type: !2732)
!5404 = !DILocalVariable(name: "c", scope: !5390, file: !4877, line: 348, type: !2743)
!5405 = !DILocalVariable(name: "c_end", scope: !5390, file: !4877, line: 349, type: !2743)
!5406 = !DILocation(line: 0, scope: !5390)
!5407 = !DILocation(line: 303, column: 27, scope: !5390)
!5408 = !DILocation(line: 313, column: 16, scope: !5390)
!5409 = !DILocation(line: 313, column: 14, scope: !5390)
!5410 = !DILocation(line: 314, column: 12, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5390, file: !4877, line: 314, column: 6)
!5412 = !DILocation(line: 314, column: 6, scope: !5390)
!5413 = !DILocation(line: 315, column: 9, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5411, file: !4877, line: 314, column: 20)
!5415 = !DILocation(line: 316, column: 9, scope: !5414)
!5416 = !DILocation(line: 318, column: 13, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !4877, line: 318, column: 7)
!5418 = distinct !DILexicalBlock(scope: !5411, file: !4877, line: 317, column: 9)
!5419 = !DILocation(line: 318, column: 7, scope: !5418)
!5420 = !DILocation(line: 319, column: 11, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !4877, line: 318, column: 39)
!5422 = !DILocation(line: 319, column: 4, scope: !5421)
!5423 = !DILocation(line: 0, scope: !5411)
!5424 = !DILocation(line: 326, column: 12, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5390, file: !4877, line: 326, column: 6)
!5426 = !DILocation(line: 326, column: 17, scope: !5425)
!5427 = !DILocation(line: 326, column: 20, scope: !5425)
!5428 = !DILocation(line: 326, column: 6, scope: !5390)
!5429 = !DILocation(line: 335, column: 50, scope: !5390)
!5430 = !DILocation(line: 335, column: 58, scope: !5390)
!5431 = !DILocation(line: 335, column: 24, scope: !5390)
!5432 = !DILocation(line: 336, column: 17, scope: !5390)
!5433 = !DILocation(line: 338, column: 9, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5390, file: !4877, line: 338, column: 6)
!5435 = !DILocation(line: 338, column: 6, scope: !5390)
!5436 = !DILocation(line: 341, column: 17, scope: !5390)
!5437 = !DILocation(line: 344, column: 20, scope: !5390)
!5438 = !DILocation(line: 344, column: 8, scope: !5390)
!5439 = !DILocation(line: 344, column: 47, scope: !5390)
!5440 = !DILocation(line: 345, column: 39, scope: !5390)
!5441 = !DILocation(line: 348, column: 16, scope: !5390)
!5442 = !DILocation(line: 349, column: 26, scope: !5390)
!5443 = !DILocation(line: 349, column: 24, scope: !5390)
!5444 = !DILocation(line: 353, column: 8, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5390, file: !4877, line: 353, column: 6)
!5446 = !DILocation(line: 353, column: 6, scope: !5390)
!5447 = !DILocation(line: 354, column: 3, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5445, file: !4877, line: 353, column: 14)
!5449 = !DILocation(line: 355, column: 3, scope: !5448)
!5450 = !DILocation(line: 356, column: 2, scope: !5448)
!5451 = !DILocation(line: 359, column: 6, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5390, file: !4877, line: 359, column: 6)
!5453 = !DILocation(line: 359, column: 24, scope: !5452)
!5454 = !DILocation(line: 359, column: 6, scope: !5390)
!5455 = !DILocation(line: 360, column: 3, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5452, file: !4877, line: 359, column: 33)
!5457 = !DILocation(line: 361, column: 3, scope: !5456)
!5458 = !DILocation(line: 362, column: 2, scope: !5456)
!5459 = !DILocation(line: 364, column: 2, scope: !5390)
!5460 = !DILocation(line: 377, column: 1, scope: !5390)
!5461 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4877, file: !4877, line: 379, type: !5462, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5464)
!5462 = !DISubroutineType(types: !5463)
!5463 = !{!102, !4880, !102, !132, !132}
!5464 = !{!5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5480, !5481}
!5465 = !DILocalVariable(name: "heap", arg: 1, scope: !5461, file: !4877, line: 379, type: !4880)
!5466 = !DILocalVariable(name: "ptr", arg: 2, scope: !5461, file: !4877, line: 379, type: !102)
!5467 = !DILocalVariable(name: "align", arg: 3, scope: !5461, file: !4877, line: 380, type: !132)
!5468 = !DILocalVariable(name: "bytes", arg: 4, scope: !5461, file: !4877, line: 380, type: !132)
!5469 = !DILocalVariable(name: "h", scope: !5461, file: !4877, line: 382, type: !2738)
!5470 = !DILocalVariable(name: "c", scope: !5461, file: !4877, line: 399, type: !2743)
!5471 = !DILocalVariable(name: "rc", scope: !5461, file: !4877, line: 400, type: !2743)
!5472 = !DILocalVariable(name: "align_gap", scope: !5461, file: !4877, line: 401, type: !132)
!5473 = !DILocalVariable(name: "chunks_need", scope: !5461, file: !4877, line: 402, type: !5003)
!5474 = !DILocalVariable(name: "split_size", scope: !5475, file: !4877, line: 435, type: !5003)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !4877, line: 433, column: 61)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !4877, line: 432, column: 13)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !4877, line: 409, column: 13)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !4877, line: 406, column: 13)
!5479 = distinct !DILexicalBlock(scope: !5461, file: !4877, line: 404, column: 6)
!5480 = !DILocalVariable(name: "ptr2", scope: !5461, file: !4877, line: 474, type: !102)
!5481 = !DILocalVariable(name: "prev_size", scope: !5482, file: !4877, line: 477, type: !132)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !4877, line: 476, column: 20)
!5483 = distinct !DILexicalBlock(scope: !5461, file: !4877, line: 476, column: 6)
!5484 = !DILocation(line: 0, scope: !5461)
!5485 = !DILocation(line: 382, column: 27, scope: !5461)
!5486 = !DILocation(line: 385, column: 10, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5461, file: !4877, line: 385, column: 6)
!5488 = !DILocation(line: 385, column: 6, scope: !5461)
!5489 = !DILocation(line: 386, column: 10, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5487, file: !4877, line: 385, column: 19)
!5491 = !DILocation(line: 386, column: 3, scope: !5490)
!5492 = !DILocation(line: 388, column: 12, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5461, file: !4877, line: 388, column: 6)
!5494 = !DILocation(line: 388, column: 6, scope: !5461)
!5495 = !DILocation(line: 389, column: 3, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5493, file: !4877, line: 388, column: 18)
!5497 = !DILocation(line: 390, column: 3, scope: !5496)
!5498 = !DILocation(line: 395, column: 6, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5461, file: !4877, line: 395, column: 6)
!5500 = !DILocation(line: 395, column: 6, scope: !5461)
!5501 = !DILocation(line: 399, column: 16, scope: !5461)
!5502 = !DILocation(line: 400, column: 17, scope: !5461)
!5503 = !DILocation(line: 401, column: 49, scope: !5461)
!5504 = !DILocation(line: 401, column: 36, scope: !5461)
!5505 = !DILocation(line: 402, column: 52, scope: !5461)
!5506 = !DILocation(line: 402, column: 26, scope: !5461)
!5507 = !DILocation(line: 404, column: 6, scope: !5479)
!5508 = !DILocation(line: 404, column: 12, scope: !5479)
!5509 = !DILocation(line: 404, column: 40, scope: !5479)
!5510 = !DILocation(line: 404, column: 31, scope: !5479)
!5511 = !DILocation(line: 404, column: 6, scope: !5461)
!5512 = !DILocation(line: 406, column: 13, scope: !5478)
!5513 = !DILocation(line: 406, column: 30, scope: !5478)
!5514 = !DILocation(line: 406, column: 13, scope: !5479)
!5515 = !DILocation(line: 409, column: 30, scope: !5477)
!5516 = !DILocation(line: 409, column: 13, scope: !5478)
!5517 = !DILocation(line: 420, column: 24, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5477, file: !4877, line: 409, column: 45)
!5519 = !DILocation(line: 420, column: 3, scope: !5518)
!5520 = !DILocation(line: 421, column: 3, scope: !5518)
!5521 = !DILocation(line: 422, column: 3, scope: !5518)
!5522 = !DILocation(line: 431, column: 3, scope: !5518)
!5523 = !DILocation(line: 432, column: 14, scope: !5476)
!5524 = !DILocation(line: 432, column: 32, scope: !5476)
!5525 = !DILocation(line: 433, column: 26, scope: !5476)
!5526 = !DILocation(line: 433, column: 24, scope: !5476)
!5527 = !DILocation(line: 433, column: 44, scope: !5476)
!5528 = !DILocation(line: 432, column: 13, scope: !5477)
!5529 = !DILocation(line: 435, column: 38, scope: !5475)
!5530 = !DILocation(line: 0, scope: !5475)
!5531 = !DILocation(line: 445, column: 3, scope: !5475)
!5532 = !DILocation(line: 447, column: 20, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5475, file: !4877, line: 447, column: 7)
!5534 = !DILocation(line: 447, column: 18, scope: !5533)
!5535 = !DILocation(line: 447, column: 7, scope: !5475)
!5536 = !DILocation(line: 448, column: 27, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5533, file: !4877, line: 447, column: 39)
!5538 = !DILocation(line: 448, column: 4, scope: !5537)
!5539 = !DILocation(line: 449, column: 4, scope: !5537)
!5540 = !DILocation(line: 450, column: 3, scope: !5537)
!5541 = !DILocation(line: 452, column: 3, scope: !5475)
!5542 = !DILocation(line: 453, column: 3, scope: !5475)
!5543 = !DILocation(line: 474, column: 15, scope: !5461)
!5544 = !DILocation(line: 476, column: 11, scope: !5483)
!5545 = !DILocation(line: 476, column: 6, scope: !5461)
!5546 = !DILocation(line: 477, column: 42, scope: !5482)
!5547 = !DILocation(line: 477, column: 22, scope: !5482)
!5548 = !DILocation(line: 477, column: 60, scope: !5482)
!5549 = !DILocation(line: 0, scope: !5482)
!5550 = !DILocation(line: 479, column: 21, scope: !5482)
!5551 = !DILocation(line: 479, column: 3, scope: !5482)
!5552 = !DILocation(line: 480, column: 3, scope: !5482)
!5553 = !DILocation(line: 481, column: 2, scope: !5482)
!5554 = !DILocation(line: 483, column: 1, scope: !5461)
!5555 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2725, file: !2725, line: 245, type: !5556, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5558)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{!132, !2738, !5003}
!5558 = !{!5559, !5560}
!5559 = !DILocalVariable(name: "h", arg: 1, scope: !5555, file: !2725, line: 245, type: !2738)
!5560 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5555, file: !2725, line: 245, type: !5003)
!5561 = !DILocation(line: 0, scope: !5555)
!5562 = !DILocation(line: 247, column: 20, scope: !5555)
!5563 = !DILocation(line: 247, column: 33, scope: !5555)
!5564 = !DILocation(line: 247, column: 2, scope: !5555)
!5565 = distinct !DISubprogram(name: "sys_heap_init", scope: !4877, file: !4877, line: 485, type: !5566, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !5568)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{null, !4880, !102, !132}
!5568 = !{!5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578}
!5569 = !DILocalVariable(name: "heap", arg: 1, scope: !5565, file: !4877, line: 485, type: !4880)
!5570 = !DILocalVariable(name: "mem", arg: 2, scope: !5565, file: !4877, line: 485, type: !102)
!5571 = !DILocalVariable(name: "bytes", arg: 3, scope: !5565, file: !4877, line: 485, type: !132)
!5572 = !DILocalVariable(name: "addr", scope: !5565, file: !4877, line: 502, type: !22)
!5573 = !DILocalVariable(name: "end", scope: !5565, file: !4877, line: 503, type: !22)
!5574 = !DILocalVariable(name: "heap_sz", scope: !5565, file: !4877, line: 504, type: !5003)
!5575 = !DILocalVariable(name: "h", scope: !5565, file: !4877, line: 509, type: !2738)
!5576 = !DILocalVariable(name: "nb_buckets", scope: !5565, file: !4877, line: 520, type: !103)
!5577 = !DILocalVariable(name: "chunk0_size", scope: !5565, file: !4877, line: 521, type: !5003)
!5578 = !DILocalVariable(name: "i", scope: !5579, file: !4877, line: 526, type: !103)
!5579 = distinct !DILexicalBlock(scope: !5565, file: !4877, line: 526, column: 2)
!5580 = !DILocation(line: 0, scope: !5565)
!5581 = !DILocation(line: 499, column: 8, scope: !5565)
!5582 = !DILocation(line: 502, column: 19, scope: !5565)
!5583 = !DILocation(line: 503, column: 18, scope: !5565)
!5584 = !DILocation(line: 504, column: 27, scope: !5565)
!5585 = !DILocation(line: 504, column: 35, scope: !5565)
!5586 = !DILocation(line: 509, column: 21, scope: !5565)
!5587 = !DILocation(line: 510, column: 8, scope: !5565)
!5588 = !DILocation(line: 510, column: 13, scope: !5565)
!5589 = !DILocation(line: 511, column: 5, scope: !5565)
!5590 = !DILocation(line: 511, column: 15, scope: !5565)
!5591 = !DILocation(line: 512, column: 5, scope: !5565)
!5592 = !DILocation(line: 512, column: 19, scope: !5565)
!5593 = !DILocation(line: 520, column: 19, scope: !5565)
!5594 = !DILocation(line: 522, column: 21, scope: !5565)
!5595 = !DILocation(line: 521, column: 56, scope: !5565)
!5596 = !DILocation(line: 521, column: 26, scope: !5565)
!5597 = !DILocation(line: 0, scope: !5579)
!5598 = !DILocation(line: 526, column: 20, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5579, file: !4877, line: 526, column: 2)
!5600 = !DILocation(line: 526, column: 2, scope: !5579)
!5601 = !DILocation(line: 531, column: 2, scope: !5565)
!5602 = !DILocation(line: 532, column: 2, scope: !5565)
!5603 = !DILocation(line: 533, column: 2, scope: !5565)
!5604 = !DILocation(line: 536, column: 41, scope: !5565)
!5605 = !DILocation(line: 536, column: 2, scope: !5565)
!5606 = !DILocation(line: 537, column: 2, scope: !5565)
!5607 = !DILocation(line: 540, column: 2, scope: !5565)
!5608 = !DILocation(line: 541, column: 2, scope: !5565)
!5609 = !DILocation(line: 542, column: 2, scope: !5565)
!5610 = !DILocation(line: 544, column: 2, scope: !5565)
!5611 = !DILocation(line: 545, column: 1, scope: !5565)
!5612 = !DILocation(line: 527, column: 17, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5599, file: !4877, line: 526, column: 39)
!5614 = !DILocation(line: 527, column: 22, scope: !5613)
!5615 = !DILocation(line: 526, column: 35, scope: !5599)
!5616 = distinct !{!5616, !5600, !5617}
!5617 = !DILocation(line: 528, column: 2, scope: !5579)
!5618 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2758, file: !2758, line: 1338, type: !5619, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !5627)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!103, !4075, !102, !337, !5621, !108}
!5621 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3714, line: 99, baseType: !5622)
!5622 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3714, line: 40, baseType: !5623)
!5623 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2758, baseType: !5624)
!5624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5625)
!5625 = !{!5626}
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5624, file: !2758, baseType: !102, size: 32)
!5627 = !{!5628, !5629, !5630, !5631, !5632, !5633, !5637, !5638, !5639, !5641, !5646, !5689, !5692, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5704, !5705, !5706, !5710, !5713, !5715, !5718, !5719, !5720, !5725, !5731, !5734, !5738, !5744, !5748, !5751, !5753, !5756}
!5628 = !DILocalVariable(name: "out", arg: 1, scope: !5618, file: !2758, line: 1338, type: !4075)
!5629 = !DILocalVariable(name: "ctx", arg: 2, scope: !5618, file: !2758, line: 1338, type: !102)
!5630 = !DILocalVariable(name: "fp", arg: 3, scope: !5618, file: !2758, line: 1338, type: !337)
!5631 = !DILocalVariable(name: "ap", arg: 4, scope: !5618, file: !2758, line: 1339, type: !5621)
!5632 = !DILocalVariable(name: "flags", arg: 5, scope: !5618, file: !2758, line: 1339, type: !108)
!5633 = !DILocalVariable(name: "buf", scope: !5618, file: !2758, line: 1341, type: !5634)
!5634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 176, elements: !5635)
!5635 = !{!5636}
!5636 = !DISubrange(count: 22)
!5637 = !DILocalVariable(name: "count", scope: !5618, file: !2758, line: 1342, type: !132)
!5638 = !DILocalVariable(name: "sint", scope: !5618, file: !2758, line: 1343, type: !2777)
!5639 = !DILocalVariable(name: "tagged_ap", scope: !5618, file: !2758, line: 1345, type: !5640)
!5640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!5641 = !DILocalVariable(name: "rc", scope: !5642, file: !2758, line: 1377, type: !103)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !2758, line: 1377, column: 4)
!5643 = distinct !DILexicalBlock(scope: !5644, file: !2758, line: 1376, column: 19)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1376, column: 7)
!5645 = distinct !DILexicalBlock(scope: !5618, file: !2758, line: 1375, column: 19)
!5646 = !DILocalVariable(name: "state", scope: !5645, file: !2758, line: 1395, type: !5647)
!5647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5618, file: !2758, line: 1392, size: 192, elements: !5648)
!5648 = !{!5649, !5657}
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5647, file: !2758, line: 1393, baseType: !5650, size: 64)
!5650 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2758, line: 166, size: 64, elements: !5651)
!5651 = !{!5652, !5653, !5654, !5655, !5656}
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5650, file: !2758, line: 168, baseType: !2777, size: 64)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5650, file: !2758, line: 171, baseType: !2780, size: 64)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5650, file: !2758, line: 174, baseType: !372, size: 64)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5650, file: !2758, line: 177, baseType: !370, size: 64)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5650, file: !2758, line: 180, baseType: !102, size: 32)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5647, file: !2758, line: 1394, baseType: !5658, size: 96, offset: 64)
!5658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2758, line: 189, size: 96, elements: !5659)
!5659 = !{!5660, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5684}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5658, file: !2758, line: 191, baseType: !131, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5658, file: !2758, line: 194, baseType: !131, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5658, file: !2758, line: 197, baseType: !131, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5658, file: !2758, line: 200, baseType: !131, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5658, file: !2758, line: 203, baseType: !131, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5658, file: !2758, line: 206, baseType: !131, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5658, file: !2758, line: 209, baseType: !131, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5658, file: !2758, line: 212, baseType: !131, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5658, file: !2758, line: 219, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5658, file: !2758, line: 222, baseType: !131, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5658, file: !2758, line: 229, baseType: !131, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5658, file: !2758, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5658, file: !2758, line: 238, baseType: !131, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5658, file: !2758, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5658, file: !2758, line: 244, baseType: !131, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5658, file: !2758, line: 247, baseType: !131, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5658, file: !2758, line: 252, baseType: !131, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5658, file: !2758, line: 257, baseType: !131, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5658, file: !2758, line: 260, baseType: !186, size: 8, offset: 24)
!5679 = !DIDerivedType(tag: DW_TAG_member, scope: !5658, file: !2758, line: 262, baseType: !5680, size: 32, offset: 32)
!5680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5658, file: !2758, line: 262, size: 32, elements: !5681)
!5681 = !{!5682, !5683}
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5680, file: !2758, line: 267, baseType: !103, size: 32)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5680, file: !2758, line: 289, baseType: !103, size: 32)
!5684 = !DIDerivedType(tag: DW_TAG_member, scope: !5658, file: !2758, line: 292, baseType: !5685, size: 32, offset: 64)
!5685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5658, file: !2758, line: 292, size: 32, elements: !5686)
!5686 = !{!5687, !5688}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5685, file: !2758, line: 297, baseType: !103, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5685, file: !2758, line: 306, baseType: !103, size: 32)
!5689 = !DILocalVariable(name: "conv", scope: !5645, file: !2758, line: 1400, type: !5690)
!5690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5691)
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5658, size: 32)
!5692 = !DILocalVariable(name: "value", scope: !5645, file: !2758, line: 1401, type: !5693)
!5693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5694)
!5694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 32)
!5695 = !DILocalVariable(name: "sp", scope: !5645, file: !2758, line: 1402, type: !337)
!5696 = !DILocalVariable(name: "width", scope: !5645, file: !2758, line: 1403, type: !103)
!5697 = !DILocalVariable(name: "precision", scope: !5645, file: !2758, line: 1404, type: !103)
!5698 = !DILocalVariable(name: "bps", scope: !5645, file: !2758, line: 1405, type: !337)
!5699 = !DILocalVariable(name: "bpe", scope: !5645, file: !2758, line: 1406, type: !337)
!5700 = !DILocalVariable(name: "sign", scope: !5645, file: !2758, line: 1407, type: !278)
!5701 = !DILocalVariable(name: "arg", scope: !5702, file: !2758, line: 1432, type: !103)
!5702 = distinct !DILexicalBlock(scope: !5703, file: !2758, line: 1431, column: 24)
!5703 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1431, column: 7)
!5704 = !DILocalVariable(name: "specifier_cat", scope: !5645, file: !2758, line: 1468, type: !2757)
!5705 = !DILocalVariable(name: "length_mod", scope: !5645, file: !2758, line: 1470, type: !2765)
!5706 = !DILocalVariable(name: "rc", scope: !5707, file: !2758, line: 1575, type: !103)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !2758, line: 1575, column: 4)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !2758, line: 1574, column: 43)
!5709 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1574, column: 7)
!5710 = !DILocalVariable(name: "rc", scope: !5711, file: !2758, line: 1584, type: !103)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !2758, line: 1584, column: 4)
!5712 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1582, column: 28)
!5713 = !DILocalVariable(name: "len", scope: !5714, file: !2758, line: 1589, type: !132)
!5714 = distinct !DILexicalBlock(scope: !5712, file: !2758, line: 1586, column: 13)
!5715 = !DILocalVariable(name: "len", scope: !5716, file: !2758, line: 1641, type: !132)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !2758, line: 1640, column: 24)
!5717 = distinct !DILexicalBlock(scope: !5712, file: !2758, line: 1640, column: 8)
!5718 = !DILocalVariable(name: "nj_len", scope: !5645, file: !2758, line: 1722, type: !132)
!5719 = !DILocalVariable(name: "pad_len", scope: !5645, file: !2758, line: 1723, type: !103)
!5720 = !DILocalVariable(name: "pad", scope: !5721, file: !2758, line: 1751, type: !278)
!5721 = distinct !DILexicalBlock(scope: !5722, file: !2758, line: 1750, column: 26)
!5722 = distinct !DILexicalBlock(scope: !5723, file: !2758, line: 1750, column: 8)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !2758, line: 1747, column: 18)
!5724 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1747, column: 7)
!5725 = !DILocalVariable(name: "rc", scope: !5726, file: !2758, line: 1758, type: !103)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !2758, line: 1758, column: 7)
!5727 = distinct !DILexicalBlock(scope: !5728, file: !2758, line: 1757, column: 21)
!5728 = distinct !DILexicalBlock(scope: !5729, file: !2758, line: 1757, column: 10)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !2758, line: 1756, column: 26)
!5730 = distinct !DILexicalBlock(scope: !5721, file: !2758, line: 1756, column: 9)
!5731 = !DILocalVariable(name: "rc", scope: !5732, file: !2758, line: 1765, type: !103)
!5732 = distinct !DILexicalBlock(scope: !5733, file: !2758, line: 1765, column: 6)
!5733 = distinct !DILexicalBlock(scope: !5721, file: !2758, line: 1764, column: 25)
!5734 = !DILocalVariable(name: "rc", scope: !5735, file: !2758, line: 1774, type: !103)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !2758, line: 1774, column: 4)
!5736 = distinct !DILexicalBlock(scope: !5737, file: !2758, line: 1773, column: 18)
!5737 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1773, column: 7)
!5738 = !DILocalVariable(name: "rc", scope: !5739, file: !2758, line: 1819, type: !103)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !2758, line: 1819, column: 5)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !2758, line: 1818, column: 44)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !2758, line: 1818, column: 8)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !2758, line: 1817, column: 10)
!5743 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1777, column: 7)
!5744 = !DILocalVariable(name: "rc", scope: !5745, file: !2758, line: 1823, type: !103)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !2758, line: 1823, column: 5)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !2758, line: 1822, column: 26)
!5747 = distinct !DILexicalBlock(scope: !5742, file: !2758, line: 1822, column: 8)
!5748 = !DILocalVariable(name: "rc", scope: !5749, file: !2758, line: 1828, type: !103)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !2758, line: 1828, column: 5)
!5750 = distinct !DILexicalBlock(scope: !5742, file: !2758, line: 1827, column: 26)
!5751 = !DILocalVariable(name: "rc", scope: !5752, file: !2758, line: 1831, type: !103)
!5752 = distinct !DILexicalBlock(scope: !5742, file: !2758, line: 1831, column: 4)
!5753 = !DILocalVariable(name: "rc", scope: !5754, file: !2758, line: 1836, type: !103)
!5754 = distinct !DILexicalBlock(scope: !5755, file: !2758, line: 1836, column: 4)
!5755 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1835, column: 21)
!5756 = !DILabel(scope: !5712, name: "prec_int_pad0", file: !2758, line: 1634)
!5757 = !DILocation(line: 0, scope: !5618)
!5758 = !DILocation(line: 1341, column: 2, scope: !5618)
!5759 = !DILocation(line: 1341, column: 7, scope: !5618)
!5760 = !DILocation(line: 1375, column: 2, scope: !5618)
!5761 = !DILocation(line: 1342, column: 9, scope: !5618)
!5762 = !DILocation(line: 1375, column: 9, scope: !5618)
!5763 = !DILocation(line: 1377, column: 4, scope: !5642)
!5764 = !DILocation(line: 0, scope: !5642)
!5765 = !DILocation(line: 1377, column: 4, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5642, file: !2758, line: 1377, column: 4)
!5767 = distinct !{!5767, !5760, !5768}
!5768 = !DILocation(line: 1839, column: 2, scope: !5618)
!5769 = !DILocation(line: 1392, column: 3, scope: !5645)
!5770 = !DILocation(line: 1395, column: 5, scope: !5645)
!5771 = !DILocation(line: 0, scope: !5645)
!5772 = !DILocation(line: 1409, column: 8, scope: !5645)
!5773 = !DILocation(line: 1414, column: 13, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1414, column: 7)
!5775 = !DILocation(line: 1414, column: 7, scope: !5645)
!5776 = !DILocation(line: 1415, column: 12, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5774, file: !2758, line: 1414, column: 25)
!5778 = !DILocation(line: 1417, column: 14, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5777, file: !2758, line: 1417, column: 8)
!5780 = !DILocation(line: 1417, column: 8, scope: !5777)
!5781 = !DILocation(line: 1418, column: 21, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5779, file: !2758, line: 1417, column: 19)
!5783 = !DILocation(line: 1419, column: 13, scope: !5782)
!5784 = !DILocation(line: 1420, column: 4, scope: !5782)
!5785 = !DILocation(line: 1421, column: 20, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5774, file: !2758, line: 1421, column: 14)
!5787 = !DILocation(line: 1421, column: 14, scope: !5774)
!5788 = !DILocation(line: 1431, column: 13, scope: !5703)
!5789 = !DILocation(line: 1431, column: 7, scope: !5645)
!5790 = !DILocation(line: 1432, column: 14, scope: !5702)
!5791 = !DILocation(line: 0, scope: !5702)
!5792 = !DILocation(line: 1434, column: 12, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5702, file: !2758, line: 1434, column: 8)
!5794 = !DILocation(line: 1434, column: 8, scope: !5702)
!5795 = !DILocation(line: 1435, column: 24, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5793, file: !2758, line: 1434, column: 17)
!5797 = !DILocation(line: 1436, column: 4, scope: !5796)
!5798 = !DILocation(line: 1439, column: 20, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5703, file: !2758, line: 1439, column: 14)
!5800 = !DILocation(line: 1439, column: 14, scope: !5703)
!5801 = !DILocation(line: 1469, column: 37, scope: !5645)
!5802 = !DILocation(line: 1448, column: 20, scope: !5645)
!5803 = !DILocation(line: 1449, column: 22, scope: !5645)
!5804 = !DILocation(line: 1471, column: 34, scope: !5645)
!5805 = !DILocation(line: 1478, column: 7, scope: !5645)
!5806 = !DILocation(line: 1479, column: 4, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !2758, line: 1478, column: 40)
!5808 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1478, column: 7)
!5809 = !DILocation(line: 1484, column: 19, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5807, file: !2758, line: 1479, column: 24)
!5811 = !DILocation(line: 1484, column: 17, scope: !5810)
!5812 = !DILocation(line: 1485, column: 5, scope: !5810)
!5813 = !DILocation(line: 1492, column: 20, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !2758, line: 1491, column: 12)
!5815 = distinct !DILexicalBlock(scope: !5810, file: !2758, line: 1487, column: 9)
!5816 = !DILocation(line: 1492, column: 18, scope: !5814)
!5817 = !DILocation(line: 1494, column: 5, scope: !5810)
!5818 = !DILocation(line: 1497, column: 23, scope: !5810)
!5819 = !DILocation(line: 1496, column: 17, scope: !5810)
!5820 = !DILocation(line: 1498, column: 5, scope: !5810)
!5821 = !DILocation(line: 1501, column: 23, scope: !5810)
!5822 = !DILocation(line: 1500, column: 17, scope: !5810)
!5823 = !DILocation(line: 1502, column: 5, scope: !5810)
!5824 = !DILocation(line: 1513, column: 23, scope: !5810)
!5825 = !DILocation(line: 1513, column: 6, scope: !5810)
!5826 = !DILocation(line: 1512, column: 17, scope: !5810)
!5827 = !DILocation(line: 1514, column: 5, scope: !5810)
!5828 = !DILocation(line: 0, scope: !5810)
!5829 = !DILocation(line: 1516, column: 8, scope: !5807)
!5830 = !DILocation(line: 1517, column: 19, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5832, file: !2758, line: 1516, column: 33)
!5832 = distinct !DILexicalBlock(scope: !5807, file: !2758, line: 1516, column: 8)
!5833 = !DILocation(line: 1517, column: 17, scope: !5831)
!5834 = !DILocation(line: 1518, column: 4, scope: !5831)
!5835 = !DILocation(line: 1519, column: 19, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !2758, line: 1518, column: 39)
!5837 = distinct !DILexicalBlock(scope: !5832, file: !2758, line: 1518, column: 15)
!5838 = !DILocation(line: 1519, column: 17, scope: !5836)
!5839 = !DILocation(line: 1520, column: 4, scope: !5836)
!5840 = !DILocation(line: 1522, column: 4, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !2758, line: 1521, column: 47)
!5842 = distinct !DILexicalBlock(scope: !5808, file: !2758, line: 1521, column: 14)
!5843 = !DILocation(line: 1527, column: 19, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5841, file: !2758, line: 1522, column: 24)
!5845 = !DILocation(line: 1527, column: 17, scope: !5844)
!5846 = !DILocation(line: 1528, column: 5, scope: !5844)
!5847 = !DILocation(line: 0, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5844, file: !2758, line: 1530, column: 9)
!5849 = !DILocation(line: 1540, column: 23, scope: !5844)
!5850 = !DILocation(line: 1539, column: 17, scope: !5844)
!5851 = !DILocation(line: 1542, column: 5, scope: !5844)
!5852 = !DILocation(line: 1545, column: 23, scope: !5844)
!5853 = !DILocation(line: 1544, column: 17, scope: !5844)
!5854 = !DILocation(line: 1547, column: 5, scope: !5844)
!5855 = !DILocation(line: 1551, column: 23, scope: !5844)
!5856 = !DILocation(line: 1551, column: 6, scope: !5844)
!5857 = !DILocation(line: 1550, column: 17, scope: !5844)
!5858 = !DILocation(line: 1552, column: 5, scope: !5844)
!5859 = !DILocation(line: 0, scope: !5844)
!5860 = !DILocation(line: 1554, column: 8, scope: !5841)
!5861 = !DILocation(line: 1555, column: 19, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !2758, line: 1554, column: 33)
!5863 = distinct !DILexicalBlock(scope: !5841, file: !2758, line: 1554, column: 8)
!5864 = !DILocation(line: 1555, column: 17, scope: !5862)
!5865 = !DILocation(line: 1556, column: 4, scope: !5862)
!5866 = !DILocation(line: 1557, column: 19, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5868, file: !2758, line: 1556, column: 39)
!5868 = distinct !DILexicalBlock(scope: !5863, file: !2758, line: 1556, column: 15)
!5869 = !DILocation(line: 1557, column: 17, scope: !5867)
!5870 = !DILocation(line: 1558, column: 4, scope: !5867)
!5871 = !DILocation(line: 0, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5873, file: !2758, line: 1560, column: 8)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !2758, line: 1559, column: 45)
!5874 = distinct !DILexicalBlock(scope: !5842, file: !2758, line: 1559, column: 14)
!5875 = !DILocation(line: 1566, column: 17, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !2758, line: 1565, column: 46)
!5877 = distinct !DILexicalBlock(scope: !5874, file: !2758, line: 1565, column: 14)
!5878 = !DILocation(line: 1566, column: 15, scope: !5876)
!5879 = !DILocation(line: 1567, column: 3, scope: !5876)
!5880 = !DILocation(line: 1574, column: 21, scope: !5709)
!5881 = !DILocation(line: 1575, column: 4, scope: !5707)
!5882 = !DILocation(line: 0, scope: !5707)
!5883 = !DILocation(line: 1575, column: 4, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5707, file: !2758, line: 1575, column: 4)
!5885 = !DILocation(line: 1582, column: 17, scope: !5645)
!5886 = !DILocation(line: 1582, column: 3, scope: !5645)
!5887 = !DILocation(line: 1584, column: 4, scope: !5711)
!5888 = !DILocation(line: 0, scope: !5711)
!5889 = !DILocation(line: 1584, column: 4, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5711, file: !2758, line: 1584, column: 4)
!5891 = !DILocation(line: 1587, column: 31, scope: !5714)
!5892 = !DILocation(line: 1591, column: 18, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5714, file: !2758, line: 1591, column: 8)
!5894 = !DILocation(line: 1591, column: 8, scope: !5714)
!5895 = !DILocation(line: 1592, column: 11, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5893, file: !2758, line: 1591, column: 24)
!5897 = !DILocation(line: 0, scope: !5714)
!5898 = !DILocation(line: 1593, column: 4, scope: !5896)
!5899 = !DILocation(line: 1594, column: 11, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5893, file: !2758, line: 1593, column: 11)
!5901 = !DILocation(line: 1604, column: 51, scope: !5712)
!5902 = !DILocation(line: 1604, column: 13, scope: !5712)
!5903 = !DILocation(line: 1604, column: 11, scope: !5712)
!5904 = !DILocation(line: 1606, column: 4, scope: !5712)
!5905 = !DILocation(line: 1609, column: 14, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5712, file: !2758, line: 1609, column: 8)
!5907 = !DILocation(line: 1609, column: 8, scope: !5712)
!5908 = !DILocation(line: 1619, column: 18, scope: !5712)
!5909 = !DILocation(line: 1620, column: 13, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5712, file: !2758, line: 1620, column: 8)
!5911 = !DILocation(line: 1620, column: 8, scope: !5712)
!5912 = !DILocation(line: 1622, column: 36, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !2758, line: 1620, column: 18)
!5914 = !DILocation(line: 1622, column: 17, scope: !5913)
!5915 = !DILocation(line: 1623, column: 4, scope: !5913)
!5916 = !DILocation(line: 1632, column: 29, scope: !5712)
!5917 = !DILocation(line: 1632, column: 10, scope: !5712)
!5918 = !DILocation(line: 1632, column: 4, scope: !5712)
!5919 = !DILocation(line: 1407, column: 8, scope: !5645)
!5920 = !DILocation(line: 0, scope: !5712)
!5921 = !DILocation(line: 1634, column: 3, scope: !5712)
!5922 = !DILocation(line: 1640, column: 18, scope: !5717)
!5923 = !DILocation(line: 1640, column: 8, scope: !5712)
!5924 = !DILocation(line: 1729, column: 13, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1729, column: 7)
!5926 = !DILocation(line: 1641, column: 22, scope: !5716)
!5927 = !DILocation(line: 0, scope: !5716)
!5928 = !DILocation(line: 1646, column: 21, scope: !5716)
!5929 = !DILocation(line: 1649, column: 13, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5716, file: !2758, line: 1649, column: 9)
!5931 = !DILocation(line: 1649, column: 9, scope: !5716)
!5932 = !DILocation(line: 1650, column: 35, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5930, file: !2758, line: 1649, column: 34)
!5934 = !DILocation(line: 1650, column: 23, scope: !5933)
!5935 = !DILocation(line: 1651, column: 5, scope: !5933)
!5936 = !DILocation(line: 1660, column: 15, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5712, file: !2758, line: 1660, column: 8)
!5938 = !DILocation(line: 1660, column: 19, scope: !5937)
!5939 = !DILocation(line: 1660, column: 8, scope: !5712)
!5940 = !DILocation(line: 1661, column: 23, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5937, file: !2758, line: 1660, column: 28)
!5942 = !DILocation(line: 1661, column: 11, scope: !5941)
!5943 = !DILocation(line: 1665, column: 22, scope: !5941)
!5944 = !DILocation(line: 1666, column: 21, scope: !5941)
!5945 = !DILocation(line: 1668, column: 5, scope: !5941)
!5946 = !DILocation(line: 1677, column: 30, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !2758, line: 1676, column: 49)
!5948 = distinct !DILexicalBlock(scope: !5712, file: !2758, line: 1676, column: 8)
!5949 = !DILocation(line: 1677, column: 5, scope: !5947)
!5950 = !DILocation(line: 1680, column: 4, scope: !5712)
!5951 = !DILocation(line: 0, scope: !5893)
!5952 = !DILocation(line: 1597, column: 14, scope: !5714)
!5953 = !DILocation(line: 1699, column: 11, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1699, column: 7)
!5955 = !DILocation(line: 1699, column: 7, scope: !5645)
!5956 = !DILocation(line: 1725, column: 7, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1725, column: 7)
!5958 = !DILocation(line: 1725, column: 12, scope: !5957)
!5959 = !DILocation(line: 1747, column: 13, scope: !5724)
!5960 = !DILocation(line: 1747, column: 7, scope: !5645)
!5961 = !DILocation(line: 1722, column: 24, scope: !5645)
!5962 = !DILocation(line: 1725, column: 7, scope: !5645)
!5963 = !DILocation(line: 1729, column: 7, scope: !5645)
!5964 = !DILocation(line: 1736, column: 13, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5645, file: !2758, line: 1736, column: 7)
!5966 = !DILocation(line: 1735, column: 19, scope: !5645)
!5967 = !DILocation(line: 1736, column: 7, scope: !5645)
!5968 = !DILocation(line: 1748, column: 10, scope: !5723)
!5969 = !DILocation(line: 1750, column: 15, scope: !5722)
!5970 = !DILocation(line: 1750, column: 8, scope: !5723)
!5971 = !DILocation(line: 0, scope: !5721)
!5972 = !DILocation(line: 1756, column: 15, scope: !5730)
!5973 = !DILocation(line: 1756, column: 9, scope: !5721)
!5974 = !DILocation(line: 1758, column: 7, scope: !5726)
!5975 = !DILocation(line: 0, scope: !5726)
!5976 = !DILocation(line: 1758, column: 7, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5726, file: !2758, line: 1758, column: 7)
!5978 = !DILocation(line: 1764, column: 5, scope: !5721)
!5979 = !DILocation(line: 0, scope: !5723)
!5980 = !DILocation(line: 1764, column: 20, scope: !5721)
!5981 = !DILocation(line: 1764, column: 17, scope: !5721)
!5982 = !DILocation(line: 1765, column: 6, scope: !5732)
!5983 = !DILocation(line: 0, scope: !5732)
!5984 = !DILocation(line: 1765, column: 6, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5732, file: !2758, line: 1765, column: 6)
!5986 = distinct !{!5986, !5978, !5987}
!5987 = !DILocation(line: 1766, column: 5, scope: !5721)
!5988 = !DILocation(line: 1773, column: 12, scope: !5737)
!5989 = !DILocation(line: 1773, column: 7, scope: !5645)
!5990 = !DILocation(line: 1773, column: 7, scope: !5737)
!5991 = !DILocation(line: 1774, column: 4, scope: !5735)
!5992 = !DILocation(line: 0, scope: !5735)
!5993 = !DILocation(line: 1774, column: 4, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5735, file: !2758, line: 1774, column: 4)
!5995 = !DILocation(line: 1818, column: 8, scope: !5741)
!5996 = !DILocation(line: 1818, column: 27, scope: !5741)
!5997 = !DILocation(line: 1818, column: 25, scope: !5741)
!5998 = !DILocation(line: 1818, column: 8, scope: !5742)
!5999 = !DILocation(line: 1819, column: 5, scope: !5739)
!6000 = !DILocation(line: 0, scope: !5739)
!6001 = !DILocation(line: 1819, column: 5, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5739, file: !2758, line: 1819, column: 5)
!6003 = !DILocation(line: 1822, column: 14, scope: !5747)
!6004 = !DILocation(line: 1822, column: 8, scope: !5742)
!6005 = !DILocation(line: 1823, column: 5, scope: !5745)
!6006 = !DILocation(line: 0, scope: !5745)
!6007 = !DILocation(line: 1823, column: 5, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5745, file: !2758, line: 1823, column: 5)
!6009 = !DILocation(line: 1826, column: 20, scope: !5742)
!6010 = !DILocation(line: 1827, column: 4, scope: !5742)
!6011 = !DILocation(line: 0, scope: !5742)
!6012 = !DILocation(line: 1827, column: 21, scope: !5742)
!6013 = !DILocation(line: 1827, column: 18, scope: !5742)
!6014 = !DILocation(line: 1828, column: 5, scope: !5749)
!6015 = !DILocation(line: 0, scope: !5749)
!6016 = !DILocation(line: 1828, column: 5, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5749, file: !2758, line: 1828, column: 5)
!6018 = distinct !{!6018, !6010, !6019}
!6019 = !DILocation(line: 1829, column: 4, scope: !5742)
!6020 = !DILocation(line: 1831, column: 4, scope: !5752)
!6021 = !DILocation(line: 0, scope: !5752)
!6022 = !DILocation(line: 1831, column: 4, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !5752, file: !2758, line: 1831, column: 4)
!6024 = !DILocation(line: 1835, column: 16, scope: !5645)
!6025 = !DILocation(line: 1835, column: 3, scope: !5645)
!6026 = !DILocation(line: 1836, column: 4, scope: !5754)
!6027 = !DILocation(line: 0, scope: !5754)
!6028 = !DILocation(line: 1836, column: 4, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !5754, file: !2758, line: 1836, column: 4)
!6030 = !DILocation(line: 1837, column: 4, scope: !5755)
!6031 = distinct !{!6031, !6025, !6032}
!6032 = !DILocation(line: 1838, column: 3, scope: !5645)
!6033 = !DILocation(line: 1844, column: 1, scope: !5618)
!6034 = distinct !DISubprogram(name: "extract_conversion", scope: !2758, file: !2758, line: 642, type: !6035, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6037)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!337, !5691, !337}
!6037 = !{!6038, !6039}
!6038 = !DILocalVariable(name: "conv", arg: 1, scope: !6034, file: !2758, line: 642, type: !5691)
!6039 = !DILocalVariable(name: "sp", arg: 2, scope: !6034, file: !2758, line: 643, type: !337)
!6040 = !DILocation(line: 0, scope: !6034)
!6041 = !DILocation(line: 645, column: 10, scope: !6034)
!6042 = !DILocation(line: 653, column: 2, scope: !6034)
!6043 = !DILocation(line: 654, column: 6, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6034, file: !2758, line: 654, column: 6)
!6045 = !DILocation(line: 654, column: 10, scope: !6044)
!6046 = !DILocation(line: 654, column: 6, scope: !6034)
!6047 = !DILocation(line: 655, column: 24, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6044, file: !2758, line: 654, column: 18)
!6049 = !DILocation(line: 655, column: 19, scope: !6048)
!6050 = !DILocation(line: 656, column: 3, scope: !6048)
!6051 = !DILocation(line: 659, column: 7, scope: !6034)
!6052 = !DILocation(line: 660, column: 7, scope: !6034)
!6053 = !DILocation(line: 661, column: 7, scope: !6034)
!6054 = !DILocation(line: 662, column: 7, scope: !6034)
!6055 = !DILocation(line: 663, column: 7, scope: !6034)
!6056 = !DILocation(line: 665, column: 2, scope: !6034)
!6057 = !DILocation(line: 666, column: 1, scope: !6034)
!6058 = distinct !DISubprogram(name: "outs", scope: !2758, file: !2758, line: 1319, type: !6059, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6061)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!103, !4075, !102, !337, !337}
!6061 = !{!6062, !6063, !6064, !6065, !6066, !6067}
!6062 = !DILocalVariable(name: "out", arg: 1, scope: !6058, file: !2758, line: 1319, type: !4075)
!6063 = !DILocalVariable(name: "ctx", arg: 2, scope: !6058, file: !2758, line: 1320, type: !102)
!6064 = !DILocalVariable(name: "sp", arg: 3, scope: !6058, file: !2758, line: 1321, type: !337)
!6065 = !DILocalVariable(name: "ep", arg: 4, scope: !6058, file: !2758, line: 1322, type: !337)
!6066 = !DILocalVariable(name: "count", scope: !6058, file: !2758, line: 1324, type: !132)
!6067 = !DILocalVariable(name: "rc", scope: !6068, file: !2758, line: 1327, type: !103)
!6068 = distinct !DILexicalBlock(scope: !6058, file: !2758, line: 1326, column: 45)
!6069 = !DILocation(line: 0, scope: !6058)
!6070 = !DILocation(line: 1326, column: 2, scope: !6058)
!6071 = !DILocation(line: 1324, column: 9, scope: !6058)
!6072 = !DILocation(line: 1326, column: 13, scope: !6058)
!6073 = !DILocation(line: 1326, column: 19, scope: !6058)
!6074 = !DILocation(line: 1327, column: 21, scope: !6068)
!6075 = !DILocation(line: 1326, column: 36, scope: !6058)
!6076 = !DILocation(line: 1326, column: 39, scope: !6058)
!6077 = !DILocation(line: 1327, column: 24, scope: !6068)
!6078 = !DILocation(line: 1327, column: 16, scope: !6068)
!6079 = !DILocation(line: 1327, column: 12, scope: !6068)
!6080 = !DILocation(line: 0, scope: !6068)
!6081 = !DILocation(line: 1329, column: 10, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6068, file: !2758, line: 1329, column: 7)
!6083 = !DILocation(line: 1329, column: 7, scope: !6068)
!6084 = distinct !{!6084, !6070, !6085}
!6085 = !DILocation(line: 1333, column: 2, scope: !6058)
!6086 = !DILocation(line: 1336, column: 1, scope: !6058)
!6087 = distinct !DISubprogram(name: "encode_uint", scope: !2758, file: !2758, line: 788, type: !6088, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6090)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!277, !2780, !5691, !277, !337}
!6090 = !{!6091, !6092, !6093, !6094, !6095, !6096, !6098, !6099}
!6091 = !DILocalVariable(name: "value", arg: 1, scope: !6087, file: !2758, line: 788, type: !2780)
!6092 = !DILocalVariable(name: "conv", arg: 2, scope: !6087, file: !2758, line: 789, type: !5691)
!6093 = !DILocalVariable(name: "bps", arg: 3, scope: !6087, file: !2758, line: 790, type: !277)
!6094 = !DILocalVariable(name: "bpe", arg: 4, scope: !6087, file: !2758, line: 791, type: !337)
!6095 = !DILocalVariable(name: "upcase", scope: !6087, file: !2758, line: 793, type: !131)
!6096 = !DILocalVariable(name: "radix", scope: !6087, file: !2758, line: 794, type: !6097)
!6097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6098 = !DILocalVariable(name: "bp", scope: !6087, file: !2758, line: 795, type: !277)
!6099 = !DILocalVariable(name: "lsv", scope: !6100, file: !2758, line: 798, type: !32)
!6100 = distinct !DILexicalBlock(scope: !6087, file: !2758, line: 797, column: 5)
!6101 = !DILocation(line: 0, scope: !6087)
!6102 = !DILocation(line: 793, column: 35, scope: !6087)
!6103 = !DILocation(line: 793, column: 24, scope: !6087)
!6104 = !DILocation(line: 793, column: 16, scope: !6087)
!6105 = !DILocation(line: 794, column: 29, scope: !6087)
!6106 = !DILocation(line: 795, column: 24, scope: !6087)
!6107 = !DILocation(line: 795, column: 17, scope: !6087)
!6108 = !DILocation(line: 797, column: 2, scope: !6087)
!6109 = !DILocation(line: 802, column: 9, scope: !6100)
!6110 = !DILocation(line: 798, column: 22, scope: !6100)
!6111 = !DILocation(line: 0, scope: !6100)
!6112 = !DILocation(line: 800, column: 16, scope: !6100)
!6113 = !DILocation(line: 800, column: 11, scope: !6100)
!6114 = !DILocation(line: 800, column: 4, scope: !6100)
!6115 = !DILocation(line: 800, column: 9, scope: !6100)
!6116 = !DILocation(line: 803, column: 18, scope: !6087)
!6117 = !DILocation(line: 803, column: 24, scope: !6087)
!6118 = !DILocation(line: 803, column: 2, scope: !6100)
!6119 = distinct !{!6119, !6108, !6120}
!6120 = !DILocation(line: 803, column: 37, scope: !6087)
!6121 = !DILocation(line: 808, column: 12, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6087, file: !2758, line: 808, column: 6)
!6123 = !DILocation(line: 808, column: 6, scope: !6087)
!6124 = !DILocation(line: 809, column: 7, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6122, file: !2758, line: 808, column: 23)
!6126 = !DILocation(line: 813, column: 3, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !2758, line: 811, column: 27)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !2758, line: 811, column: 14)
!6129 = distinct !DILexicalBlock(scope: !6125, file: !2758, line: 809, column: 7)
!6130 = !DILocation(line: 0, scope: !6129)
!6131 = !DILocation(line: 818, column: 2, scope: !6087)
!6132 = distinct !DISubprogram(name: "store_count", scope: !2758, file: !2758, line: 1280, type: !6133, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6137)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{null, !6135, !102, !103}
!6135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 32)
!6136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5658)
!6137 = !{!6138, !6139, !6140}
!6138 = !DILocalVariable(name: "conv", arg: 1, scope: !6132, file: !2758, line: 1280, type: !6135)
!6139 = !DILocalVariable(name: "dp", arg: 2, scope: !6132, file: !2758, line: 1281, type: !102)
!6140 = !DILocalVariable(name: "count", arg: 3, scope: !6132, file: !2758, line: 1282, type: !103)
!6141 = !DILocation(line: 0, scope: !6132)
!6142 = !DILocation(line: 1284, column: 38, scope: !6132)
!6143 = !DILocation(line: 1284, column: 2, scope: !6132)
!6144 = !DILocation(line: 1286, column: 4, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6132, file: !2758, line: 1284, column: 50)
!6146 = !DILocation(line: 1286, column: 14, scope: !6145)
!6147 = !DILocation(line: 1287, column: 3, scope: !6145)
!6148 = !DILocation(line: 1289, column: 24, scope: !6145)
!6149 = !DILocation(line: 1289, column: 22, scope: !6145)
!6150 = !DILocation(line: 1290, column: 3, scope: !6145)
!6151 = !DILocation(line: 1292, column: 18, scope: !6145)
!6152 = !DILocation(line: 1292, column: 4, scope: !6145)
!6153 = !DILocation(line: 1292, column: 16, scope: !6145)
!6154 = !DILocation(line: 1293, column: 3, scope: !6145)
!6155 = !DILocation(line: 1295, column: 4, scope: !6145)
!6156 = !DILocation(line: 1295, column: 15, scope: !6145)
!6157 = !DILocation(line: 1296, column: 3, scope: !6145)
!6158 = !DILocation(line: 1298, column: 22, scope: !6145)
!6159 = !DILocation(line: 1298, column: 4, scope: !6145)
!6160 = !DILocation(line: 1298, column: 20, scope: !6145)
!6161 = !DILocation(line: 1299, column: 3, scope: !6145)
!6162 = !DILocation(line: 1301, column: 21, scope: !6145)
!6163 = !DILocation(line: 1301, column: 4, scope: !6145)
!6164 = !DILocation(line: 1301, column: 19, scope: !6145)
!6165 = !DILocation(line: 1302, column: 3, scope: !6145)
!6166 = !DILocation(line: 1304, column: 4, scope: !6145)
!6167 = !DILocation(line: 1304, column: 17, scope: !6145)
!6168 = !DILocation(line: 1305, column: 3, scope: !6145)
!6169 = !DILocation(line: 1307, column: 4, scope: !6145)
!6170 = !DILocation(line: 1307, column: 20, scope: !6145)
!6171 = !DILocation(line: 1308, column: 3, scope: !6145)
!6172 = !DILocation(line: 1316, column: 1, scope: !6132)
!6173 = distinct !DISubprogram(name: "isupper", scope: !6174, file: !6174, line: 16, type: !396, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6175)
!6174 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6175 = !{!6176}
!6176 = !DILocalVariable(name: "a", arg: 1, scope: !6173, file: !6174, line: 16, type: !103)
!6177 = !DILocation(line: 0, scope: !6173)
!6178 = !DILocation(line: 18, column: 29, scope: !6173)
!6179 = !DILocation(line: 18, column: 45, scope: !6173)
!6180 = !DILocation(line: 18, column: 2, scope: !6173)
!6181 = distinct !DISubprogram(name: "conversion_radix", scope: !2758, file: !2758, line: 761, type: !6182, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6184)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{!132, !278}
!6184 = !{!6185}
!6185 = !DILocalVariable(name: "specifier", arg: 1, scope: !6181, file: !2758, line: 761, type: !278)
!6186 = !DILocation(line: 0, scope: !6181)
!6187 = !DILocation(line: 763, column: 2, scope: !6181)
!6188 = !DILocation(line: 770, column: 3, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6181, file: !2758, line: 763, column: 21)
!6190 = !DILocation(line: 774, column: 3, scope: !6189)
!6191 = !DILocation(line: 0, scope: !6189)
!6192 = !DILocation(line: 776, column: 1, scope: !6181)
!6193 = distinct !DISubprogram(name: "extract_flags", scope: !2758, file: !2758, line: 339, type: !6035, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6194)
!6194 = !{!6195, !6196, !6197}
!6195 = !DILocalVariable(name: "conv", arg: 1, scope: !6193, file: !2758, line: 339, type: !5691)
!6196 = !DILocalVariable(name: "sp", arg: 2, scope: !6193, file: !2758, line: 340, type: !337)
!6197 = !DILocalVariable(name: "loop", scope: !6193, file: !2758, line: 342, type: !131)
!6198 = !DILocation(line: 0, scope: !6193)
!6199 = !DILocation(line: 344, column: 2, scope: !6193)
!6200 = !DILocation(line: 345, column: 11, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6193, file: !2758, line: 344, column: 5)
!6202 = !DILocation(line: 345, column: 3, scope: !6201)
!6203 = !DILocation(line: 351, column: 4, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6201, file: !2758, line: 345, column: 16)
!6205 = !DILocation(line: 354, column: 4, scope: !6204)
!6206 = !DILocation(line: 357, column: 4, scope: !6204)
!6207 = !DILocation(line: 360, column: 4, scope: !6204)
!6208 = !DILocation(line: 0, scope: !6204)
!6209 = !DILocation(line: 370, column: 12, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6193, file: !2758, line: 370, column: 6)
!6211 = !DILocation(line: 370, column: 22, scope: !6210)
!6212 = !DILocation(line: 371, column: 19, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6210, file: !2758, line: 370, column: 42)
!6214 = !DILocation(line: 372, column: 2, scope: !6213)
!6215 = !DILocation(line: 376, column: 2, scope: !6193)
!6216 = distinct !DISubprogram(name: "extract_width", scope: !2758, file: !2758, line: 388, type: !6035, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6217)
!6217 = !{!6218, !6219, !6220, !6221}
!6218 = !DILocalVariable(name: "conv", arg: 1, scope: !6216, file: !2758, line: 388, type: !5691)
!6219 = !DILocalVariable(name: "sp", arg: 2, scope: !6216, file: !2758, line: 389, type: !337)
!6220 = !DILocalVariable(name: "wp", scope: !6216, file: !2758, line: 398, type: !337)
!6221 = !DILocalVariable(name: "width", scope: !6216, file: !2758, line: 399, type: !132)
!6222 = !DILocation(line: 0, scope: !6216)
!6223 = !DILocation(line: 391, column: 8, scope: !6216)
!6224 = !DILocation(line: 391, column: 22, scope: !6216)
!6225 = !DILocation(line: 393, column: 6, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6216, file: !2758, line: 393, column: 6)
!6227 = !DILocation(line: 393, column: 10, scope: !6226)
!6228 = !DILocation(line: 393, column: 6, scope: !6216)
!6229 = !DILocation(line: 394, column: 20, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6226, file: !2758, line: 393, column: 18)
!6231 = !DILocation(line: 395, column: 10, scope: !6230)
!6232 = !DILocation(line: 395, column: 3, scope: !6230)
!6233 = !DILocation(line: 399, column: 17, scope: !6216)
!6234 = !DILocation(line: 401, column: 6, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6216, file: !2758, line: 401, column: 6)
!6236 = !DILocation(line: 401, column: 9, scope: !6235)
!6237 = !DILocation(line: 401, column: 6, scope: !6216)
!6238 = !DILocation(line: 402, column: 23, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6235, file: !2758, line: 401, column: 16)
!6240 = !DILocation(line: 403, column: 9, scope: !6239)
!6241 = !DILocation(line: 403, column: 21, scope: !6239)
!6242 = !DILocation(line: 405, column: 11, scope: !6239)
!6243 = !DILocation(line: 404, column: 21, scope: !6239)
!6244 = !DILocation(line: 406, column: 2, scope: !6239)
!6245 = !DILocation(line: 409, column: 1, scope: !6216)
!6246 = distinct !DISubprogram(name: "extract_prec", scope: !2758, file: !2758, line: 420, type: !6035, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6247)
!6247 = !{!6248, !6249, !6250}
!6248 = !DILocalVariable(name: "conv", arg: 1, scope: !6246, file: !2758, line: 420, type: !5691)
!6249 = !DILocalVariable(name: "sp", arg: 2, scope: !6246, file: !2758, line: 421, type: !337)
!6250 = !DILocalVariable(name: "prec", scope: !6246, file: !2758, line: 435, type: !132)
!6251 = !DILocation(line: 0, scope: !6246)
!6252 = !DILocation(line: 423, column: 24, scope: !6246)
!6253 = !DILocation(line: 423, column: 28, scope: !6246)
!6254 = !DILocation(line: 423, column: 8, scope: !6246)
!6255 = !DILocation(line: 423, column: 21, scope: !6246)
!6256 = !DILocation(line: 425, column: 6, scope: !6246)
!6257 = !DILocation(line: 428, column: 2, scope: !6246)
!6258 = !DILocation(line: 430, column: 6, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6246, file: !2758, line: 430, column: 6)
!6260 = !DILocation(line: 430, column: 10, scope: !6259)
!6261 = !DILocation(line: 430, column: 6, scope: !6246)
!6262 = !DILocation(line: 431, column: 19, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !2758, line: 430, column: 18)
!6264 = !DILocation(line: 432, column: 10, scope: !6263)
!6265 = !DILocation(line: 432, column: 3, scope: !6263)
!6266 = !DILocation(line: 435, column: 16, scope: !6246)
!6267 = !DILocation(line: 437, column: 8, scope: !6246)
!6268 = !DILocation(line: 437, column: 19, scope: !6246)
!6269 = !DILocation(line: 439, column: 10, scope: !6246)
!6270 = !DILocation(line: 438, column: 20, scope: !6246)
!6271 = !DILocation(line: 441, column: 9, scope: !6246)
!6272 = !DILocation(line: 442, column: 1, scope: !6246)
!6273 = distinct !DISubprogram(name: "extract_length", scope: !2758, file: !2758, line: 453, type: !6035, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6274)
!6274 = !{!6275, !6276}
!6275 = !DILocalVariable(name: "conv", arg: 1, scope: !6273, file: !2758, line: 453, type: !5691)
!6276 = !DILocalVariable(name: "sp", arg: 2, scope: !6273, file: !2758, line: 454, type: !337)
!6277 = !DILocation(line: 0, scope: !6273)
!6278 = !DILocation(line: 456, column: 10, scope: !6273)
!6279 = !DILocation(line: 456, column: 2, scope: !6273)
!6280 = !DILocation(line: 458, column: 8, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !2758, line: 458, column: 7)
!6282 = distinct !DILexicalBlock(scope: !6273, file: !2758, line: 456, column: 15)
!6283 = !DILocation(line: 458, column: 7, scope: !6281)
!6284 = !DILocation(line: 458, column: 13, scope: !6281)
!6285 = !DILocation(line: 0, scope: !6281)
!6286 = !DILocation(line: 458, column: 7, scope: !6282)
!6287 = !DILocation(line: 459, column: 21, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6281, file: !2758, line: 458, column: 21)
!6289 = !DILocation(line: 460, column: 4, scope: !6288)
!6290 = !DILocation(line: 461, column: 3, scope: !6288)
!6291 = !DILocation(line: 462, column: 21, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6281, file: !2758, line: 461, column: 10)
!6293 = !DILocation(line: 466, column: 8, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6282, file: !2758, line: 466, column: 7)
!6295 = !DILocation(line: 466, column: 7, scope: !6294)
!6296 = !DILocation(line: 466, column: 13, scope: !6294)
!6297 = !DILocation(line: 0, scope: !6294)
!6298 = !DILocation(line: 466, column: 7, scope: !6282)
!6299 = !DILocation(line: 467, column: 21, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6294, file: !2758, line: 466, column: 21)
!6301 = !DILocation(line: 468, column: 4, scope: !6300)
!6302 = !DILocation(line: 469, column: 3, scope: !6300)
!6303 = !DILocation(line: 470, column: 21, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6294, file: !2758, line: 469, column: 10)
!6305 = !DILocation(line: 474, column: 9, scope: !6282)
!6306 = !DILocation(line: 474, column: 20, scope: !6282)
!6307 = !DILocation(line: 475, column: 3, scope: !6282)
!6308 = !DILocation(line: 476, column: 3, scope: !6282)
!6309 = !DILocation(line: 478, column: 9, scope: !6282)
!6310 = !DILocation(line: 478, column: 20, scope: !6282)
!6311 = !DILocation(line: 479, column: 3, scope: !6282)
!6312 = !DILocation(line: 480, column: 3, scope: !6282)
!6313 = !DILocation(line: 482, column: 9, scope: !6282)
!6314 = !DILocation(line: 482, column: 20, scope: !6282)
!6315 = !DILocation(line: 483, column: 3, scope: !6282)
!6316 = !DILocation(line: 484, column: 3, scope: !6282)
!6317 = !DILocation(line: 486, column: 9, scope: !6282)
!6318 = !DILocation(line: 486, column: 20, scope: !6282)
!6319 = !DILocation(line: 487, column: 3, scope: !6282)
!6320 = !DILocation(line: 492, column: 21, scope: !6282)
!6321 = !DILocation(line: 493, column: 3, scope: !6282)
!6322 = !DILocation(line: 495, column: 9, scope: !6282)
!6323 = !DILocation(line: 495, column: 20, scope: !6282)
!6324 = !DILocation(line: 496, column: 3, scope: !6282)
!6325 = !DILocation(line: 498, column: 2, scope: !6273)
!6326 = distinct !DISubprogram(name: "extract_specifier", scope: !2758, file: !2758, line: 513, type: !6035, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6327)
!6327 = !{!6328, !6329, !6330, !6331}
!6328 = !DILocalVariable(name: "conv", arg: 1, scope: !6326, file: !2758, line: 513, type: !5691)
!6329 = !DILocalVariable(name: "sp", arg: 2, scope: !6326, file: !2758, line: 514, type: !337)
!6330 = !DILocalVariable(name: "unsupported", scope: !6326, file: !2758, line: 516, type: !131)
!6331 = !DILabel(scope: !6332, name: "int_conv", file: !2758, line: 526)
!6332 = distinct !DILexicalBlock(scope: !6326, file: !2758, line: 520, column: 27)
!6333 = !DILocation(line: 0, scope: !6326)
!6334 = !DILocation(line: 518, column: 20, scope: !6326)
!6335 = !DILocation(line: 518, column: 8, scope: !6326)
!6336 = !DILocation(line: 518, column: 18, scope: !6326)
!6337 = !DILocation(line: 520, column: 2, scope: !6326)
!6338 = !DILocation(line: 525, column: 3, scope: !6332)
!6339 = !DILocation(line: 0, scope: !6332)
!6340 = !DILocation(line: 526, column: 1, scope: !6332)
!6341 = !DILocation(line: 528, column: 24, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6332, file: !2758, line: 528, column: 7)
!6343 = !DILocation(line: 528, column: 7, scope: !6332)
!6344 = !DILocation(line: 535, column: 23, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6332, file: !2758, line: 535, column: 7)
!6346 = !DILocation(line: 535, column: 7, scope: !6332)
!6347 = !DILocation(line: 536, column: 36, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6345, file: !2758, line: 535, column: 31)
!6349 = !DILocation(line: 537, column: 3, scope: !6348)
!6350 = !DILocation(line: 570, column: 9, scope: !6332)
!6351 = !DILocation(line: 570, column: 23, scope: !6332)
!6352 = !DILocation(line: 575, column: 4, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !2758, line: 573, column: 48)
!6354 = distinct !DILexicalBlock(scope: !6332, file: !2758, line: 573, column: 7)
!6355 = !DILocation(line: 603, column: 9, scope: !6332)
!6356 = !DILocation(line: 603, column: 23, scope: !6332)
!6357 = !DILocation(line: 605, column: 24, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6332, file: !2758, line: 605, column: 7)
!6359 = !DILocation(line: 605, column: 7, scope: !6332)
!6360 = !DILocation(line: 612, column: 9, scope: !6332)
!6361 = !DILocation(line: 612, column: 23, scope: !6332)
!6362 = !DILocation(line: 619, column: 24, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6332, file: !2758, line: 619, column: 7)
!6364 = !DILocation(line: 619, column: 7, scope: !6332)
!6365 = !DILocation(line: 625, column: 9, scope: !6332)
!6366 = !DILocation(line: 625, column: 17, scope: !6332)
!6367 = !DILocation(line: 626, column: 3, scope: !6332)
!6368 = !DILocation(line: 629, column: 20, scope: !6326)
!6369 = !DILocation(line: 629, column: 8, scope: !6326)
!6370 = !DILocation(line: 518, column: 23, scope: !6326)
!6371 = !DILocation(line: 631, column: 2, scope: !6326)
!6372 = distinct !DISubprogram(name: "extract_decimal", scope: !2758, file: !2758, line: 318, type: !6373, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6375)
!6373 = !DISubroutineType(types: !6374)
!6374 = !{!132, !373}
!6375 = !{!6376, !6377, !6378}
!6376 = !DILocalVariable(name: "str", arg: 1, scope: !6372, file: !2758, line: 318, type: !373)
!6377 = !DILocalVariable(name: "sp", scope: !6372, file: !2758, line: 320, type: !337)
!6378 = !DILocalVariable(name: "val", scope: !6372, file: !2758, line: 321, type: !132)
!6379 = !DILocation(line: 0, scope: !6372)
!6380 = !DILocation(line: 320, column: 19, scope: !6372)
!6381 = !DILocation(line: 323, column: 37, scope: !6372)
!6382 = !DILocation(line: 323, column: 17, scope: !6372)
!6383 = !DILocation(line: 323, column: 9, scope: !6372)
!6384 = !DILocation(line: 323, column: 2, scope: !6372)
!6385 = !DILocation(line: 324, column: 13, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6372, file: !2758, line: 323, column: 43)
!6387 = !DILocation(line: 324, column: 24, scope: !6386)
!6388 = !DILocation(line: 324, column: 19, scope: !6386)
!6389 = !DILocation(line: 324, column: 27, scope: !6386)
!6390 = distinct !{!6390, !6384, !6391}
!6391 = !DILocation(line: 325, column: 2, scope: !6372)
!6392 = !DILocation(line: 326, column: 7, scope: !6372)
!6393 = !DILocation(line: 327, column: 2, scope: !6372)
!6394 = distinct !DISubprogram(name: "isdigit", scope: !6174, file: !6174, line: 43, type: !396, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2754, retainedNodes: !6395)
!6395 = !{!6396}
!6396 = !DILocalVariable(name: "a", arg: 1, scope: !6394, file: !6174, line: 43, type: !103)
!6397 = !DILocation(line: 0, scope: !6394)
!6398 = !DILocation(line: 45, column: 29, scope: !6394)
!6399 = !DILocation(line: 45, column: 45, scope: !6394)
!6400 = !DILocation(line: 45, column: 2, scope: !6394)
!6401 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6402, file: !6402, line: 9, type: !334, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2788, retainedNodes: !251)
!6402 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!6403 = !DILocation(line: 11, column: 1, scope: !6401)
!6404 = !{i64 2147565425, i64 2147565468, i64 2147565508}
!6405 = !DILocation(line: 12, column: 1, scope: !6401)
!6406 = !{i64 2147569687, i64 2147569730, i64 2147569770}
!6407 = !DILocation(line: 13, column: 1, scope: !6401)
!6408 = !{i64 2147569868, i64 2147569911, i64 2147569951}
!6409 = !DILocation(line: 14, column: 1, scope: !6401)
!6410 = !{i64 2147570034, i64 2147570077, i64 2147570117}
!6411 = !DILocation(line: 15, column: 1, scope: !6401)
!6412 = !{i64 2147570243, i64 2147570286, i64 2147570326}
!6413 = !DILocation(line: 16, column: 1, scope: !6401)
!6414 = !{i64 2147570412, i64 2147570455, i64 2147570495}
!6415 = !DILocation(line: 17, column: 1, scope: !6401)
!6416 = !{i64 2147570575, i64 2147570618, i64 2147570658}
!6417 = !DILocation(line: 18, column: 1, scope: !6401)
!6418 = !{i64 2147570759, i64 2147570802, i64 2147570842}
!6419 = !DILocation(line: 19, column: 1, scope: !6401)
!6420 = !{i64 2147570938, i64 2147570981, i64 2147571021}
!6421 = !DILocation(line: 20, column: 1, scope: !6401)
!6422 = !{i64 2147571180, i64 2147571223, i64 2147571263}
!6423 = !DILocation(line: 21, column: 1, scope: !6401)
!6424 = !{i64 2147571415, i64 2147571458, i64 2147571498}
!6425 = !DILocation(line: 22, column: 1, scope: !6401)
!6426 = !{i64 2147571601, i64 2147571644, i64 2147571684}
!6427 = !DILocation(line: 23, column: 1, scope: !6401)
!6428 = !{i64 2147571817, i64 2147571860, i64 2147571900}
!6429 = !DILocation(line: 24, column: 1, scope: !6401)
!6430 = !{i64 2147572020, i64 2147572063, i64 2147572103}
!6431 = !DILocation(line: 25, column: 1, scope: !6401)
!6432 = !{i64 2147572223, i64 2147572266, i64 2147572306}
!6433 = !DILocation(line: 26, column: 1, scope: !6401)
!6434 = !{i64 2147572398, i64 2147572441, i64 2147572481}
!6435 = !DILocation(line: 27, column: 1, scope: !6401)
!6436 = !{i64 2147572609, i64 2147572652, i64 2147572692}
!6437 = !DILocation(line: 28, column: 1, scope: !6401)
!6438 = !{i64 2147572813, i64 2147572856, i64 2147572896}
!6439 = !DILocation(line: 29, column: 1, scope: !6401)
!6440 = !{i64 2147573006, i64 2147573049, i64 2147573089}
!6441 = !DILocation(line: 30, column: 1, scope: !6401)
!6442 = !{i64 2147573208, i64 2147573251, i64 2147573291}
!6443 = !DILocation(line: 31, column: 1, scope: !6401)
!6444 = !{i64 2147573407, i64 2147573450, i64 2147573490}
!6445 = !DILocation(line: 32, column: 1, scope: !6401)
!6446 = !{i64 2147573634, i64 2147573677, i64 2147573717}
!6447 = !DILocation(line: 33, column: 1, scope: !6401)
!6448 = !{i64 2147573836, i64 2147573879, i64 2147573919}
!6449 = !DILocation(line: 34, column: 1, scope: !6401)
!6450 = !{i64 2147574051, i64 2147574094, i64 2147574134}
!6451 = !DILocation(line: 35, column: 1, scope: !6401)
!6452 = !{i64 2147574223, i64 2147574266, i64 2147574306}
!6453 = !DILocation(line: 36, column: 1, scope: !6401)
!6454 = !{i64 2147574425, i64 2147574468, i64 2147574508}
!6455 = !DILocation(line: 37, column: 1, scope: !6401)
!6456 = !{i64 2147574651, i64 2147574694, i64 2147574734}
!6457 = !DILocation(line: 38, column: 1, scope: !6401)
!6458 = !{i64 2147574850, i64 2147574893, i64 2147574933}
!6459 = !DILocation(line: 39, column: 1, scope: !6401)
!6460 = !{i64 2147575025, i64 2147575068, i64 2147575108}
!6461 = !DILocation(line: 40, column: 1, scope: !6401)
!6462 = !{i64 2147575278, i64 2147575321, i64 2147575361}
!6463 = !DILocation(line: 41, column: 1, scope: !6401)
!6464 = !{i64 2147575519, i64 2147575562, i64 2147575602}
!6465 = !DILocation(line: 42, column: 1, scope: !6401)
!6466 = !{i64 2147575754, i64 2147575797, i64 2147575837}
!6467 = !DILocation(line: 43, column: 1, scope: !6401)
!6468 = !{i64 2147575986, i64 2147576029, i64 2147576069}
!6469 = !DILocation(line: 44, column: 1, scope: !6401)
!6470 = !{i64 2147576212, i64 2147576255, i64 2147576295}
!6471 = !DILocation(line: 45, column: 1, scope: !6401)
!6472 = !{i64 2147576438, i64 2147576481, i64 2147576521}
!6473 = !DILocation(line: 46, column: 1, scope: !6401)
!6474 = !{i64 2147576664, i64 2147576707, i64 2147576747}
!6475 = !DILocation(line: 47, column: 1, scope: !6401)
!6476 = !{i64 2147576899, i64 2147576942, i64 2147576982}
!6477 = !DILocation(line: 48, column: 1, scope: !6401)
!6478 = !{i64 2147577143, i64 2147577186, i64 2147577226}
!6479 = !DILocation(line: 49, column: 1, scope: !6401)
!6480 = !{i64 2147577390, i64 2147577433, i64 2147577473}
!6481 = !DILocation(line: 50, column: 1, scope: !6401)
!6482 = !{i64 2147577622, i64 2147577665, i64 2147577705}
!6483 = !DILocation(line: 51, column: 1, scope: !6401)
!6484 = !{i64 2147577866, i64 2147577909, i64 2147577949}
!6485 = !DILocation(line: 52, column: 1, scope: !6401)
!6486 = !{i64 2147578104, i64 2147578147, i64 2147578187}
!6487 = !DILocation(line: 53, column: 1, scope: !6401)
!6488 = !{i64 2147578378, i64 2147578421, i64 2147578461}
!6489 = !DILocation(line: 54, column: 1, scope: !6401)
!6490 = !{i64 2147582677, i64 2147582720, i64 2147582760}
!6491 = !DILocation(line: 55, column: 1, scope: !6401)
!6492 = !{i64 2147582930, i64 2147582973, i64 2147583013}
!6493 = !DILocation(line: 56, column: 1, scope: !6401)
!6494 = !{i64 2147583174, i64 2147583217, i64 2147583257}
!6495 = !DILocation(line: 57, column: 1, scope: !6401)
!6496 = !{i64 2147583409, i64 2147583452, i64 2147583492}
!6497 = !DILocation(line: 58, column: 1, scope: !6401)
!6498 = !{i64 2147583659, i64 2147583702, i64 2147583742}
!6499 = !DILocation(line: 59, column: 1, scope: !6401)
!6500 = !{i64 2147583906, i64 2147583949, i64 2147583989}
!6501 = !DILocation(line: 60, column: 1, scope: !6401)
!6502 = !{i64 2147584141, i64 2147584184, i64 2147584224}
!6503 = !DILocation(line: 61, column: 1, scope: !6401)
!6504 = !{i64 2147584376, i64 2147584419, i64 2147584459}
!6505 = !DILocation(line: 62, column: 1, scope: !6401)
!6506 = !{i64 2147584611, i64 2147584654, i64 2147584694}
!6507 = !DILocation(line: 63, column: 1, scope: !6401)
!6508 = !{i64 2147584846, i64 2147584889, i64 2147584929}
!6509 = !DILocation(line: 64, column: 1, scope: !6401)
!6510 = !{i64 2147585090, i64 2147585133, i64 2147585173}
!6511 = !DILocation(line: 65, column: 1, scope: !6401)
!6512 = !{i64 2147585328, i64 2147585371, i64 2147585411}
!6513 = !DILocation(line: 66, column: 1, scope: !6401)
!6514 = !{i64 2147585569, i64 2147585612, i64 2147585652}
!6515 = !DILocation(line: 67, column: 1, scope: !6401)
!6516 = !{i64 2147585849, i64 2147585892, i64 2147585932}
!6517 = !DILocation(line: 68, column: 1, scope: !6401)
!6518 = !{i64 2147586108, i64 2147586151, i64 2147586191}
!6519 = !DILocation(line: 69, column: 1, scope: !6401)
!6520 = !{i64 2147586346, i64 2147586389, i64 2147586429}
!6521 = !DILocation(line: 70, column: 1, scope: !6401)
!6522 = !{i64 2147586575, i64 2147586618, i64 2147586658}
!6523 = !DILocation(line: 71, column: 1, scope: !6401)
!6524 = !{i64 2147586783, i64 2147586826, i64 2147586866}
!6525 = !DILocation(line: 72, column: 1, scope: !6401)
!6526 = !{i64 2147586994, i64 2147587037, i64 2147587077}
!6527 = !DILocation(line: 73, column: 1, scope: !6401)
!6528 = !{i64 2147587229, i64 2147587272, i64 2147587312}
!6529 = !DILocation(line: 74, column: 1, scope: !6401)
!6530 = !{i64 2147587458, i64 2147587501, i64 2147587541}
!6531 = !DILocation(line: 75, column: 1, scope: !6401)
!6532 = !{i64 2147587675, i64 2147587718, i64 2147587758}
!6533 = !DILocation(line: 76, column: 1, scope: !6401)
!6534 = !{i64 2147587904, i64 2147587947, i64 2147587987}
!6535 = !DILocation(line: 77, column: 1, scope: !6401)
!6536 = !{i64 2147588142, i64 2147588185, i64 2147588225}
!6537 = !DILocation(line: 78, column: 1, scope: !6401)
!6538 = !{i64 2147588374, i64 2147588417, i64 2147588457}
!6539 = !DILocation(line: 79, column: 1, scope: !6401)
!6540 = !{i64 2147588600, i64 2147588643, i64 2147588683}
!6541 = !DILocation(line: 80, column: 1, scope: !6401)
!6542 = !{i64 2147588817, i64 2147588860, i64 2147588900}
!6543 = !DILocation(line: 81, column: 1, scope: !6401)
!6544 = !{i64 2147589049, i64 2147589092, i64 2147589132}
!6545 = !DILocation(line: 82, column: 1, scope: !6401)
!6546 = !{i64 2147589275, i64 2147589318, i64 2147589358}
!6547 = !DILocation(line: 83, column: 1, scope: !6401)
!6548 = !{i64 2147589489, i64 2147589532, i64 2147589572}
!6549 = !DILocation(line: 84, column: 1, scope: !6401)
!6550 = !{i64 2147589709, i64 2147589752, i64 2147589792}
!6551 = !DILocation(line: 85, column: 1, scope: !6401)
!6552 = !{i64 2147589941, i64 2147589984, i64 2147590024}
!6553 = !DILocation(line: 86, column: 1, scope: !6401)
!6554 = !{i64 2147590149, i64 2147590192, i64 2147590232}
!6555 = !DILocation(line: 87, column: 1, scope: !6401)
!6556 = !{i64 2147590354, i64 2147590397, i64 2147590437}
!6557 = !DILocation(line: 88, column: 1, scope: !6401)
!6558 = !{i64 2147590571, i64 2147590614, i64 2147590654}
!6559 = !DILocation(line: 89, column: 1, scope: !6401)
!6560 = !{i64 2147594846, i64 2147594889, i64 2147594929}
!6561 = !DILocation(line: 90, column: 1, scope: !6401)
!6562 = !{i64 2147595072, i64 2147595115, i64 2147595155}
!6563 = !DILocation(line: 91, column: 1, scope: !6401)
!6564 = !{i64 2147595292, i64 2147595335, i64 2147595375}
!6565 = !DILocation(line: 92, column: 1, scope: !6401)
!6566 = !{i64 2147595497, i64 2147595540, i64 2147595580}
!6567 = !DILocation(line: 93, column: 1, scope: !6401)
!6568 = !{i64 2147595729, i64 2147595772, i64 2147595812}
!6569 = !DILocation(line: 94, column: 1, scope: !6401)
!6570 = !{i64 2147595964, i64 2147596007, i64 2147596047}
!6571 = !DILocation(line: 95, column: 1, scope: !6401)
!6572 = !{i64 2147596214, i64 2147596257, i64 2147596297}
!6573 = !DILocation(line: 96, column: 1, scope: !6401)
!6574 = !{i64 2147596464, i64 2147596507, i64 2147596547}
!6575 = !DILocation(line: 97, column: 1, scope: !6401)
!6576 = !{i64 2147596702, i64 2147596745, i64 2147596785}
!6577 = !DILocation(line: 98, column: 1, scope: !6401)
!6578 = !{i64 2147596913, i64 2147596956, i64 2147596996}
!6579 = !DILocation(line: 99, column: 1, scope: !6401)
!6580 = !{i64 2147597130, i64 2147597173, i64 2147597213}
!6581 = !DILocation(line: 100, column: 1, scope: !6401)
!6582 = !{i64 2147597326, i64 2147597369, i64 2147597409}
!6583 = !DILocation(line: 101, column: 1, scope: !6401)
!6584 = !{i64 2147597528, i64 2147597571, i64 2147597611}
!6585 = !DILocation(line: 102, column: 1, scope: !6401)
!6586 = !{i64 2147597721, i64 2147597764, i64 2147597804}
!6587 = !DILocation(line: 103, column: 1, scope: !6401)
!6588 = !{i64 2147597929, i64 2147597972, i64 2147598012}
!6589 = !DILocation(line: 104, column: 1, scope: !6401)
!6590 = !{i64 2147598125, i64 2147598168, i64 2147598208}
!6591 = !DILocation(line: 105, column: 1, scope: !6401)
!6592 = !{i64 2147598357, i64 2147598400, i64 2147598440}
!6593 = !DILocation(line: 106, column: 1, scope: !6401)
!6594 = !{i64 2147598568, i64 2147598611, i64 2147598651}
!6595 = !DILocation(line: 107, column: 1, scope: !6401)
!6596 = !{i64 2147598767, i64 2147598810, i64 2147598850}
!6597 = !DILocation(line: 108, column: 1, scope: !6401)
!6598 = !{i64 2147598942, i64 2147598985, i64 2147599025}
!6599 = !DILocation(line: 109, column: 1, scope: !6401)
!6600 = !{i64 2147599126, i64 2147599169, i64 2147599209}
!6601 = !DILocation(line: 110, column: 1, scope: !6401)
!6602 = !{i64 2147599328, i64 2147599371, i64 2147599411}
!6603 = !DILocation(line: 111, column: 1, scope: !6401)
!6604 = !{i64 2147599527, i64 2147599570, i64 2147599610}
!6605 = !DILocation(line: 112, column: 1, scope: !6401)
!6606 = !{i64 2147599732, i64 2147599775, i64 2147599815}
!6607 = !DILocation(line: 113, column: 1, scope: !6401)
!6608 = !{i64 2147599925, i64 2147599968, i64 2147600008}
!6609 = !DILocation(line: 114, column: 1, scope: !6401)
!6610 = !{i64 2147600091, i64 2147600134, i64 2147600174}
!6611 = !DILocation(line: 115, column: 1, scope: !6401)
!6612 = !{i64 2147600275, i64 2147600318, i64 2147600358}
!6613 = !DILocation(line: 116, column: 1, scope: !6401)
!6614 = !{i64 2147600465, i64 2147600508, i64 2147600548}
!6615 = !DILocation(line: 117, column: 1, scope: !6401)
!6616 = !{i64 2147600649, i64 2147600692, i64 2147600732}
!6617 = !DILocation(line: 118, column: 1, scope: !6401)
!6618 = !{i64 2147600863, i64 2147600906, i64 2147600946}
!6619 = !DILocation(line: 119, column: 1, scope: !6401)
!6620 = !{i64 2147601074, i64 2147601117, i64 2147601157}
!6621 = !DILocation(line: 120, column: 1, scope: !6401)
!6622 = !{i64 2147601297, i64 2147601340, i64 2147601380}
!6623 = !DILocation(line: 121, column: 1, scope: !6401)
!6624 = !{i64 2147601481, i64 2147601524, i64 2147601564}
!6625 = !DILocation(line: 122, column: 1, scope: !6401)
!6626 = !{i64 2147601695, i64 2147601738, i64 2147601778}
!6627 = !DILocation(line: 123, column: 1, scope: !6401)
!6628 = !{i64 2147601861, i64 2147601904, i64 2147601944}
!6629 = !DILocation(line: 124, column: 1, scope: !6401)
!6630 = !{i64 2147602042, i64 2147602085, i64 2147602125}
!6631 = !DILocation(line: 125, column: 1, scope: !6401)
!6632 = !{i64 2147602235, i64 2147602278, i64 2147602318}
!6633 = !DILocation(line: 126, column: 1, scope: !6401)
!6634 = !{i64 2147602461, i64 2147602504, i64 2147602544}
!6635 = !DILocation(line: 127, column: 1, scope: !6401)
!6636 = !{i64 2147602675, i64 2147602718, i64 2147602758}
!6637 = !DILocation(line: 128, column: 1, scope: !6401)
!6638 = !{i64 2147602901, i64 2147602944, i64 2147602984}
!6639 = !DILocation(line: 129, column: 1, scope: !6401)
!6640 = !{i64 2147603118, i64 2147603161, i64 2147603201}
!6641 = !DILocation(line: 130, column: 1, scope: !6401)
!6642 = !{i64 2147603395, i64 2147603438, i64 2147603478}
!6643 = !DILocation(line: 131, column: 1, scope: !6401)
!6644 = !{i64 2147603621, i64 2147603664, i64 2147603704}
!6645 = !DILocation(line: 132, column: 1, scope: !6401)
!6646 = !{i64 2147607890, i64 2147607933, i64 2147607973}
!6647 = !DILocation(line: 133, column: 1, scope: !6401)
!6648 = !{i64 2147608086, i64 2147608129, i64 2147608169}
!6649 = !DILocation(line: 134, column: 1, scope: !6401)
!6650 = !{i64 2147608351, i64 2147608394, i64 2147608434}
!6651 = !DILocation(line: 135, column: 1, scope: !6401)
!6652 = !{i64 2147608565, i64 2147608608, i64 2147608648}
!6653 = !DILocation(line: 136, column: 1, scope: !6401)
!6654 = !{i64 2147608740, i64 2147608783, i64 2147608823}
!6655 = !DILocation(line: 137, column: 1, scope: !6401)
!6656 = !{i64 2147608994, i64 2147609037, i64 2147609077}
!6657 = !DILocation(line: 138, column: 1, scope: !6401)
!6658 = !{i64 2147609193, i64 2147609236, i64 2147609276}
!6659 = !DILocation(line: 139, column: 1, scope: !6401)
!6660 = !{i64 2147609435, i64 2147609478, i64 2147609518}
!6661 = !DILocation(line: 140, column: 1, scope: !6401)
!6662 = !{i64 2147609598, i64 2147609641, i64 2147609681}
!6663 = !DILocation(line: 141, column: 1, scope: !6401)
!6664 = !{i64 2147609785, i64 2147609828, i64 2147609868}
!6665 = !DILocation(line: 142, column: 1, scope: !6401)
!6666 = !{i64 2147609993, i64 2147610036, i64 2147610076}
!6667 = !DILocation(line: 143, column: 1, scope: !6401)
!6668 = !{i64 2147610189, i64 2147610232, i64 2147610272}
!6669 = !DILocation(line: 144, column: 1, scope: !6401)
!6670 = !{i64 2147610382, i64 2147610425, i64 2147610465}
!6671 = !DILocation(line: 145, column: 1, scope: !6401)
!6672 = !{i64 2147610565, i64 2147610608, i64 2147610648}
!6673 = !DILocation(line: 146, column: 1, scope: !6401)
!6674 = !{i64 2147610779, i64 2147610822, i64 2147610862}
!6675 = !DILocation(line: 147, column: 1, scope: !6401)
!6676 = !{i64 2147610990, i64 2147611033, i64 2147611073}
!6677 = !DILocation(line: 148, column: 1, scope: !6401)
!6678 = !{i64 2147611210, i64 2147611253, i64 2147611293}
!6679 = !DILocation(line: 149, column: 1, scope: !6401)
!6680 = !{i64 2147611417, i64 2147611460, i64 2147611500}
!6681 = !DILocation(line: 150, column: 1, scope: !6401)
!6682 = !{i64 2147611690, i64 2147611733, i64 2147611773}
!6683 = !DILocation(line: 151, column: 1, scope: !6401)
!6684 = !{i64 2147611938, i64 2147611981, i64 2147612021}
!6685 = !DILocation(line: 152, column: 1, scope: !6401)
!6686 = !{i64 2147612137, i64 2147612180, i64 2147612220}
!6687 = !DILocation(line: 153, column: 1, scope: !6401)
!6688 = !{i64 2147612372, i64 2147612415, i64 2147612455}
!6689 = !DILocation(line: 154, column: 1, scope: !6401)
!6690 = !{i64 2147612622, i64 2147612665, i64 2147612705}
!6691 = !DILocation(line: 155, column: 1, scope: !6401)
!6692 = !{i64 2147612824, i64 2147612867, i64 2147612907}
!6693 = !DILocation(line: 156, column: 1, scope: !6401)
!6694 = !{i64 2147613047, i64 2147613090, i64 2147613130}
!6695 = !DILocation(line: 157, column: 1, scope: !6401)
!6696 = !{i64 2147613261, i64 2147613304, i64 2147613344}
!6697 = !DILocation(line: 158, column: 1, scope: !6401)
!6698 = !{i64 2147613505, i64 2147613548, i64 2147613588}
!6699 = !DILocation(line: 159, column: 1, scope: !6401)
!6700 = !{i64 2147613734, i64 2147613777, i64 2147613817}
!6701 = !DILocation(line: 160, column: 1, scope: !6401)
!6702 = !{i64 2147613963, i64 2147614006, i64 2147614046}
!6703 = !DILocation(line: 161, column: 1, scope: !6401)
!6704 = !{i64 2147614171, i64 2147614214, i64 2147614254}
!6705 = !DILocation(line: 162, column: 1, scope: !6401)
!6706 = !{i64 2147614409, i64 2147614452, i64 2147614492}
!6707 = !DILocation(line: 163, column: 1, scope: !6401)
!6708 = !{i64 2147614635, i64 2147614678, i64 2147614718}
!6709 = !DILocation(line: 164, column: 1, scope: !6401)
!6710 = !{i64 2147614894, i64 2147614937, i64 2147614977}
!6711 = !DILocation(line: 165, column: 1, scope: !6401)
!6712 = !{i64 2147615114, i64 2147615157, i64 2147615197}
!6713 = !DILocation(line: 166, column: 1, scope: !6401)
!6714 = !{i64 2147615346, i64 2147615389, i64 2147615429}
!6715 = !DILocation(line: 167, column: 1, scope: !6401)
!6716 = !{i64 2147615587, i64 2147615630, i64 2147615670}
!6717 = !DILocation(line: 168, column: 1, scope: !6401)
!6718 = !{i64 2147615828, i64 2147615871, i64 2147615911}
!6719 = !DILocation(line: 169, column: 1, scope: !6401)
!6720 = !{i64 2147616051, i64 2147616094, i64 2147616134}
!6721 = !DILocation(line: 170, column: 1, scope: !6401)
!6722 = !{i64 2147616268, i64 2147616311, i64 2147616351}
!6723 = !DILocation(line: 171, column: 1, scope: !6401)
!6724 = !{i64 2147620570, i64 2147620613, i64 2147620653}
!6725 = !DILocation(line: 172, column: 1, scope: !6401)
!6726 = !{i64 2147620757, i64 2147620800, i64 2147620840}
!6727 = !DILocation(line: 173, column: 1, scope: !6401)
!6728 = !{i64 2147620944, i64 2147620987, i64 2147621027}
!6729 = !DILocation(line: 174, column: 1, scope: !6401)
!6730 = !{i64 2147621107, i64 2147621150, i64 2147621190}
!6731 = !DILocation(line: 175, column: 1, scope: !6401)
!6732 = !{i64 2147621312, i64 2147621355, i64 2147621395}
!6733 = !DILocation(line: 176, column: 1, scope: !6401)
!6734 = !{i64 2147621505, i64 2147621548, i64 2147621588}
!6735 = !DILocation(line: 177, column: 1, scope: !6401)
!6736 = !{i64 2147621764, i64 2147621807, i64 2147621847}
!6737 = !DILocation(line: 178, column: 1, scope: !6401)
!6738 = !{i64 2147621987, i64 2147622030, i64 2147622070}
!6739 = !DILocation(line: 179, column: 1, scope: !6401)
!6740 = !{i64 2147622216, i64 2147622259, i64 2147622299}
!6741 = !DILocation(line: 180, column: 1, scope: !6401)
!6742 = !{i64 2147622430, i64 2147622473, i64 2147622513}
!6743 = !DILocation(line: 181, column: 1, scope: !6401)
!6744 = !{i64 2147622632, i64 2147622675, i64 2147622715}
!6745 = !DILocation(line: 182, column: 1, scope: !6401)
!6746 = !{i64 2147622828, i64 2147622871, i64 2147622911}
!6747 = !DILocation(line: 183, column: 1, scope: !6401)
!6748 = !{i64 2147623040, i64 2147623083, i64 2147623123}
!6749 = !DILocation(line: 184, column: 1, scope: !6401)
!6750 = !{i64 2147623261, i64 2147623304, i64 2147623344}
!6751 = !DILocation(line: 185, column: 1, scope: !6401)
!6752 = !{i64 2147623475, i64 2147623518, i64 2147623558}
!6753 = !DILocation(line: 186, column: 1, scope: !6401)
!6754 = !{i64 2147623665, i64 2147623708, i64 2147623748}
!6755 = !DILocation(line: 187, column: 1, scope: !6401)
!6756 = !{i64 2147623864, i64 2147623907, i64 2147623947}
!6757 = !DILocation(line: 188, column: 1, scope: !6401)
!6758 = !{i64 2147624069, i64 2147624112, i64 2147624152}
!6759 = !DILocation(line: 189, column: 1, scope: !6401)
!6760 = !{i64 2147624289, i64 2147624332, i64 2147624372}
!6761 = !DILocation(line: 190, column: 1, scope: !6401)
!6762 = !{i64 2147624490, i64 2147624533, i64 2147624573}
!6763 = !DILocation(line: 191, column: 1, scope: !6401)
!6764 = !{i64 2147624689, i64 2147624732, i64 2147624772}
!6765 = !DILocation(line: 192, column: 1, scope: !6401)
!6766 = !{i64 2147624894, i64 2147624937, i64 2147624977}
!6767 = !DILocation(line: 193, column: 1, scope: !6401)
!6768 = !{i64 2147625063, i64 2147625106, i64 2147625146}
!6769 = !DILocation(line: 194, column: 1, scope: !6401)
!6770 = !{i64 2147625247, i64 2147625290, i64 2147625330}
!6771 = !DILocation(line: 195, column: 1, scope: !6401)
!6772 = !{i64 2147625431, i64 2147625474, i64 2147625514}
!6773 = !DILocation(line: 196, column: 1, scope: !6401)
!6774 = !{i64 2147625618, i64 2147625661, i64 2147625701}
!6775 = !DILocation(line: 197, column: 1, scope: !6401)
!6776 = !{i64 2147625802, i64 2147625845, i64 2147625885}
!6777 = !DILocation(line: 198, column: 1, scope: !6401)
!6778 = !{i64 2147626040, i64 2147626083, i64 2147626123}
!6779 = !DILocation(line: 199, column: 1, scope: !6401)
!6780 = !{i64 2147626270, i64 2147626313, i64 2147626353}
!6781 = !DILocation(line: 200, column: 1, scope: !6401)
!6782 = !{i64 2147626499, i64 2147626542, i64 2147626582}
!6783 = !DILocation(line: 201, column: 1, scope: !6401)
!6784 = !{i64 2147626686, i64 2147626729, i64 2147626769}
!6785 = !DILocation(line: 202, column: 1, scope: !6401)
!6786 = !{i64 2147626882, i64 2147626925, i64 2147626965}
!6787 = !DILocation(line: 203, column: 1, scope: !6401)
!6788 = !{i64 2147627090, i64 2147627133, i64 2147627173}
!6789 = !DILocation(line: 204, column: 1, scope: !6401)
!6790 = !{i64 2147627302, i64 2147627345, i64 2147627385}
!6791 = !DILocation(line: 205, column: 1, scope: !6401)
!6792 = !{i64 2147627501, i64 2147627544, i64 2147627584}
!6793 = !DILocation(line: 206, column: 1, scope: !6401)
!6794 = !{i64 2147627739, i64 2147627782, i64 2147627822}
!6795 = !DILocation(line: 207, column: 1, scope: !6401)
!6796 = !{i64 2147627935, i64 2147627978, i64 2147628018}
!6797 = !DILocation(line: 208, column: 1, scope: !6401)
!6798 = !{i64 2147628137, i64 2147628180, i64 2147628220}
!6799 = !DILocation(line: 209, column: 1, scope: !6401)
!6800 = !{i64 2147628330, i64 2147628373, i64 2147628413}
!6801 = !DILocation(line: 210, column: 1, scope: !6401)
!6802 = !{i64 2147628564, i64 2147628607, i64 2147628647}
!6803 = !DILocation(line: 211, column: 1, scope: !6401)
!6804 = !{i64 2147628727, i64 2147628770, i64 2147628810}
!6805 = !DILocation(line: 212, column: 1, scope: !6401)
!6806 = !{i64 2147628966, i64 2147629009, i64 2147629049}
!6807 = !DILocation(line: 213, column: 1, scope: !6401)
!6808 = !{i64 2147629205, i64 2147629248, i64 2147629288}
!6809 = !DILocation(line: 214, column: 1, scope: !6401)
!6810 = !{i64 2147629441, i64 2147629484, i64 2147629524}
!6811 = !DILocation(line: 215, column: 1, scope: !6401)
!6812 = !{i64 2147633732, i64 2147633775, i64 2147633815}
!6813 = !DILocation(line: 216, column: 1, scope: !6401)
!6814 = !{i64 2147633919, i64 2147633962, i64 2147634002}
!6815 = !DILocation(line: 217, column: 1, scope: !6401)
!6816 = !{i64 2147634118, i64 2147634161, i64 2147634201}
!6817 = !DILocation(line: 218, column: 1, scope: !6401)
!6818 = !{i64 2147634389, i64 2147634432, i64 2147634472}
!6819 = !DILocation(line: 219, column: 1, scope: !6401)
!6820 = !{i64 2147634564, i64 2147634607, i64 2147634647}
!6821 = !DILocation(line: 220, column: 1, scope: !6401)
!6822 = !{i64 2147634798, i64 2147634841, i64 2147634881}
!6823 = !DILocation(line: 221, column: 1, scope: !6401)
!6824 = !{i64 2147635006, i64 2147635049, i64 2147635089}
!6825 = !DILocation(line: 222, column: 1, scope: !6401)
!6826 = !{i64 2147635224, i64 2147635267, i64 2147635307}
!6827 = !DILocation(line: 223, column: 1, scope: !6401)
!6828 = !{i64 2147635414, i64 2147635457, i64 2147635497}
!6829 = !DILocation(line: 224, column: 1, scope: !6401)
!6830 = !{i64 2147635646, i64 2147635689, i64 2147635729}
!6831 = !DILocation(line: 225, column: 1, scope: !6401)
!6832 = !{i64 2147635866, i64 2147635909, i64 2147635949}
!6833 = !DILocation(line: 226, column: 1, scope: !6401)
!6834 = !{i64 2147636062, i64 2147636105, i64 2147636145}
!6835 = !DILocation(line: 227, column: 1, scope: !6401)
!6836 = !{i64 2147636268, i64 2147636311, i64 2147636351}
!6837 = !DILocation(line: 228, column: 1, scope: !6401)
!6838 = !{i64 2147636473, i64 2147636516, i64 2147636556}
!6839 = !DILocation(line: 229, column: 1, scope: !6401)
!6840 = !{i64 2147636687, i64 2147636730, i64 2147636770}
!6841 = !DILocation(line: 230, column: 1, scope: !6401)
!6842 = !{i64 2147636913, i64 2147636956, i64 2147636996}
!6843 = !DILocation(line: 231, column: 1, scope: !6401)
!6844 = !{i64 2147637121, i64 2147637164, i64 2147637204}
!6845 = !DILocation(line: 232, column: 1, scope: !6401)
!6846 = !{i64 2147637317, i64 2147637360, i64 2147637400}
!6847 = !DILocation(line: 233, column: 1, scope: !6401)
!6848 = !{i64 2147637549, i64 2147637592, i64 2147637632}
!6849 = !DILocation(line: 234, column: 1, scope: !6401)
!6850 = !{i64 2147637733, i64 2147637776, i64 2147637816}
!6851 = !DILocation(line: 235, column: 1, scope: !6401)
!6852 = !{i64 2147637942, i64 2147637985, i64 2147638025}
!6853 = !DILocation(line: 236, column: 1, scope: !6401)
!6854 = !{i64 2147638150, i64 2147638193, i64 2147638233}
!6855 = !DILocation(line: 237, column: 1, scope: !6401)
!6856 = !{i64 2147638346, i64 2147638389, i64 2147638429}
!6857 = !DILocation(line: 238, column: 1, scope: !6401)
!6858 = !{i64 2147638530, i64 2147638573, i64 2147638613}
!6859 = !DILocation(line: 239, column: 1, scope: !6401)
!6860 = !{i64 2147638756, i64 2147638799, i64 2147638839}
!6861 = !DILocation(line: 240, column: 1, scope: !6401)
!6862 = !{i64 2147638982, i64 2147639025, i64 2147639065}
!6863 = !DILocation(line: 241, column: 1, scope: !6401)
!6864 = !{i64 2147639208, i64 2147639251, i64 2147639291}
!6865 = !DILocation(line: 242, column: 1, scope: !6401)
!6866 = !{i64 2147639434, i64 2147639477, i64 2147639517}
!6867 = !DILocation(line: 243, column: 1, scope: !6401)
!6868 = !{i64 2147639660, i64 2147639703, i64 2147639743}
!6869 = !DILocation(line: 244, column: 1, scope: !6401)
!6870 = !{i64 2147639892, i64 2147639935, i64 2147639975}
!6871 = !DILocation(line: 245, column: 1, scope: !6401)
!6872 = !{i64 2147640130, i64 2147640173, i64 2147640213}
!6873 = !DILocation(line: 246, column: 1, scope: !6401)
!6874 = !{i64 2147640350, i64 2147640393, i64 2147640433}
!6875 = !DILocation(line: 247, column: 1, scope: !6401)
!6876 = !{i64 2147640594, i64 2147640637, i64 2147640677}
!6877 = !DILocation(line: 248, column: 1, scope: !6401)
!6878 = !{i64 2147640835, i64 2147640878, i64 2147640918}
!6879 = !DILocation(line: 249, column: 1, scope: !6401)
!6880 = !{i64 2147641070, i64 2147641113, i64 2147641153}
!6881 = !DILocation(line: 250, column: 1, scope: !6401)
!6882 = !{i64 2147641302, i64 2147641345, i64 2147641385}
!6883 = !DILocation(line: 251, column: 1, scope: !6401)
!6884 = !{i64 2147641504, i64 2147641547, i64 2147641587}
!6885 = !DILocation(line: 252, column: 1, scope: !6401)
!6886 = !{i64 2147641754, i64 2147641797, i64 2147641837}
!6887 = !DILocation(line: 253, column: 1, scope: !6401)
!6888 = !{i64 2147641992, i64 2147642035, i64 2147642075}
!6889 = !DILocation(line: 254, column: 1, scope: !6401)
!6890 = !{i64 2147642200, i64 2147642243, i64 2147642283}
!6891 = !DILocation(line: 255, column: 1, scope: !6401)
!6892 = !{i64 2147642396, i64 2147642439, i64 2147642479}
!6893 = !DILocation(line: 256, column: 1, scope: !6401)
!6894 = !{i64 2147646641, i64 2147646684, i64 2147646724}
!6895 = !DILocation(line: 257, column: 1, scope: !6401)
!6896 = !{i64 2147646858, i64 2147646901, i64 2147646941}
!6897 = !DILocation(line: 258, column: 1, scope: !6401)
!6898 = !{i64 2147647063, i64 2147647106, i64 2147647146}
!6899 = !DILocation(line: 259, column: 1, scope: !6401)
!6900 = !{i64 2147647298, i64 2147647341, i64 2147647381}
!6901 = !DILocation(line: 260, column: 1, scope: !6401)
!6902 = !{i64 2147647521, i64 2147647564, i64 2147647604}
!6903 = !DILocation(line: 261, column: 1, scope: !6401)
!6904 = !{i64 2147647745, i64 2147647788, i64 2147647828}
!6905 = !DILocation(line: 262, column: 1, scope: !6401)
!6906 = !{i64 2147647983, i64 2147648026, i64 2147648066}
!6907 = !DILocation(line: 263, column: 1, scope: !6401)
!6908 = !{i64 2147648221, i64 2147648264, i64 2147648304}
!6909 = !DILocation(line: 264, column: 1, scope: !6401)
!6910 = !{i64 2147648438, i64 2147648481, i64 2147648521}
!6911 = !DILocation(line: 265, column: 1, scope: !6401)
!6912 = !{i64 2147648643, i64 2147648686, i64 2147648726}
!6913 = !DILocation(line: 266, column: 1, scope: !6401)
!6914 = !{i64 2147648836, i64 2147648879, i64 2147648919}
!6915 = !DILocation(line: 267, column: 1, scope: !6401)
!6916 = !{i64 2147649089, i64 2147649132, i64 2147649172}
!6917 = !DILocation(line: 268, column: 1, scope: !6401)
!6918 = !{i64 2147649297, i64 2147649340, i64 2147649380}
!6919 = !DILocation(line: 269, column: 1, scope: !6401)
!6920 = !{i64 2147649493, i64 2147649536, i64 2147649576}
!6921 = !DILocation(line: 270, column: 1, scope: !6401)
!6922 = !{i64 2147649707, i64 2147649750, i64 2147649790}
!6923 = !DILocation(line: 271, column: 1, scope: !6401)
!6924 = !{i64 2147649915, i64 2147649958, i64 2147649998}
!6925 = !DILocation(line: 272, column: 1, scope: !6401)
!6926 = !{i64 2147650105, i64 2147650148, i64 2147650188}
!6927 = !DILocation(line: 273, column: 1, scope: !6401)
!6928 = !{i64 2147650319, i64 2147650362, i64 2147650402}
!6929 = !DILocation(line: 274, column: 1, scope: !6401)
!6930 = !{i64 2147650581, i64 2147650624, i64 2147650664}
!6931 = !DILocation(line: 275, column: 1, scope: !6401)
!6932 = !{i64 2147650792, i64 2147650835, i64 2147650875}
!6933 = !DILocation(line: 276, column: 1, scope: !6401)
!6934 = !{i64 2147651036, i64 2147651079, i64 2147651119}
!6935 = !DILocation(line: 277, column: 1, scope: !6401)
!6936 = !{i64 2147651247, i64 2147651290, i64 2147651330}
!6937 = !DILocation(line: 278, column: 1, scope: !6401)
!6938 = !{i64 2147651476, i64 2147651519, i64 2147651559}
!6939 = !DILocation(line: 279, column: 1, scope: !6401)
!6940 = !{i64 2147651741, i64 2147651784, i64 2147651824}
!6941 = !DILocation(line: 280, column: 1, scope: !6401)
!6942 = !{i64 2147651946, i64 2147651989, i64 2147652029}
!6943 = !DILocation(line: 281, column: 1, scope: !6401)
!6944 = !{i64 2147652142, i64 2147652185, i64 2147652225}
!6945 = !DILocation(line: 282, column: 1, scope: !6401)
!6946 = !{i64 2147652365, i64 2147652408, i64 2147652448}
!6947 = !DILocation(line: 283, column: 1, scope: !6401)
!6948 = !{i64 2147652528, i64 2147652571, i64 2147652611}
!6949 = !DILocation(line: 284, column: 1, scope: !6401)
!6950 = !{i64 2147652733, i64 2147652776, i64 2147652816}
!6951 = !DILocation(line: 285, column: 1, scope: !6401)
!6952 = !{i64 2147652953, i64 2147652996, i64 2147653036}
!6953 = !DILocation(line: 286, column: 1, scope: !6401)
!6954 = !{i64 2147653167, i64 2147653210, i64 2147653250}
!6955 = !DILocation(line: 287, column: 1, scope: !6401)
!6956 = !{i64 2147653411, i64 2147653454, i64 2147653494}
!6957 = !DILocation(line: 288, column: 1, scope: !6401)
!6958 = !{i64 2147653643, i64 2147653686, i64 2147653726}
!6959 = !DILocation(line: 289, column: 1, scope: !6401)
!6960 = !{i64 2147653857, i64 2147653900, i64 2147653940}
!6961 = !DILocation(line: 290, column: 1, scope: !6401)
!6962 = !{i64 2147654068, i64 2147654111, i64 2147654151}
!6963 = !DILocation(line: 291, column: 1, scope: !6401)
!6964 = !{i64 2147654261, i64 2147654304, i64 2147654344}
!6965 = !DILocation(line: 292, column: 1, scope: !6401)
!6966 = !{i64 2147654460, i64 2147654503, i64 2147654543}
!6967 = !DILocation(line: 293, column: 1, scope: !6401)
!6968 = !{i64 2147654632, i64 2147654675, i64 2147654715}
!6969 = !DILocation(line: 294, column: 1, scope: !6401)
!6970 = !{i64 2147654825, i64 2147654868, i64 2147654908}
!6971 = !DILocation(line: 295, column: 1, scope: !6401)
!6972 = !{i64 2147655021, i64 2147655064, i64 2147655104}
!6973 = !DILocation(line: 296, column: 1, scope: !6401)
!6974 = !{i64 2147655184, i64 2147655227, i64 2147655267}
!6975 = !DILocation(line: 297, column: 1, scope: !6401)
!6976 = !{i64 2147655386, i64 2147655429, i64 2147655469}
!6977 = !DILocation(line: 298, column: 1, scope: !6401)
!6978 = !{i64 2147659652, i64 2147659695, i64 2147659735}
!6979 = !DILocation(line: 299, column: 1, scope: !6401)
!6980 = !{i64 2147659860, i64 2147659903, i64 2147659943}
!6981 = !DILocation(line: 300, column: 1, scope: !6401)
!6982 = !{i64 2147660053, i64 2147660096, i64 2147660136}
!6983 = !DILocation(line: 301, column: 1, scope: !6401)
!6984 = !{i64 2147660240, i64 2147660283, i64 2147660323}
!6985 = !DILocation(line: 302, column: 1, scope: !6401)
!6986 = !{i64 2147660467, i64 2147660510, i64 2147660550}
!6987 = !DILocation(line: 303, column: 1, scope: !6401)
!6988 = !{i64 2147660633, i64 2147660676, i64 2147660716}
!6989 = !DILocation(line: 304, column: 1, scope: !6401)
!6990 = !{i64 2147660871, i64 2147660914, i64 2147660954}
!6991 = !DILocation(line: 305, column: 1, scope: !6401)
!6992 = !{i64 2147661121, i64 2147661164, i64 2147661204}
!6993 = !DILocation(line: 306, column: 1, scope: !6401)
!6994 = !{i64 2147661329, i64 2147661372, i64 2147661412}
!6995 = !DILocation(line: 307, column: 1, scope: !6401)
!6996 = !{i64 2147661525, i64 2147661568, i64 2147661608}
!6997 = !DILocation(line: 308, column: 1, scope: !6401)
!6998 = !{i64 2147661742, i64 2147661785, i64 2147661825}
!6999 = !DILocation(line: 309, column: 1, scope: !6401)
!7000 = !{i64 2147662034, i64 2147662077, i64 2147662117}
!7001 = !DILocation(line: 310, column: 1, scope: !6401)
!7002 = !{i64 2147662266, i64 2147662309, i64 2147662349}
!7003 = !DILocation(line: 311, column: 1, scope: !6401)
!7004 = !{i64 2147662483, i64 2147662526, i64 2147662566}
!7005 = !DILocation(line: 312, column: 1, scope: !6401)
!7006 = !{i64 2147662690, i64 2147662733, i64 2147662773}
!7007 = !DILocation(line: 313, column: 1, scope: !6401)
!7008 = !{i64 2147662891, i64 2147662934, i64 2147662974}
!7009 = !DILocation(line: 314, column: 1, scope: !6401)
!7010 = !{i64 2147663123, i64 2147663166, i64 2147663206}
!7011 = !DILocation(line: 315, column: 1, scope: !6401)
!7012 = !{i64 2147663331, i64 2147663374, i64 2147663414}
!7013 = !DILocation(line: 316, column: 1, scope: !6401)
!7014 = !{i64 2147663521, i64 2147663564, i64 2147663604}
!7015 = !DILocation(line: 317, column: 1, scope: !6401)
!7016 = !{i64 2147663747, i64 2147663790, i64 2147663830}
!7017 = !DILocation(line: 318, column: 1, scope: !6401)
!7018 = !{i64 2147663936, i64 2147663979, i64 2147664019}
!7019 = !DILocation(line: 319, column: 1, scope: !6401)
!7020 = !{i64 2147664207, i64 2147664250, i64 2147664290}
!7021 = !DILocation(line: 320, column: 1, scope: !6401)
!7022 = !{i64 2147664427, i64 2147664470, i64 2147664510}
!7023 = !DILocation(line: 321, column: 1, scope: !6401)
!7024 = !{i64 2147664680, i64 2147664723, i64 2147664763}
!7025 = !DILocation(line: 322, column: 1, scope: !6401)
!7026 = !{i64 2147664888, i64 2147664931, i64 2147664971}
!7027 = !DILocation(line: 323, column: 1, scope: !6401)
!7028 = !{i64 2147665120, i64 2147665163, i64 2147665203}
!7029 = !DILocation(line: 324, column: 1, scope: !6401)
!7030 = !{i64 2147665331, i64 2147665374, i64 2147665414}
!7031 = !DILocation(line: 325, column: 1, scope: !6401)
!7032 = !{i64 2147665521, i64 2147665564, i64 2147665604}
!7033 = !DILocation(line: 326, column: 1, scope: !6401)
!7034 = !{i64 2147665735, i64 2147665778, i64 2147665818}
!7035 = !DILocation(line: 327, column: 1, scope: !6401)
!7036 = !{i64 2147665934, i64 2147665977, i64 2147666017}
!7037 = !DILocation(line: 328, column: 1, scope: !6401)
!7038 = !{i64 2147666121, i64 2147666164, i64 2147666204}
!7039 = !DILocation(line: 329, column: 1, scope: !6401)
!7040 = !{i64 2147666329, i64 2147666372, i64 2147666412}
!7041 = !DILocation(line: 330, column: 1, scope: !6401)
!7042 = !{i64 2147666558, i64 2147666601, i64 2147666641}
!7043 = !DILocation(line: 331, column: 1, scope: !6401)
!7044 = !{i64 2147666760, i64 2147666803, i64 2147666843}
!7045 = !DILocation(line: 332, column: 1, scope: !6401)
!7046 = !{i64 2147666959, i64 2147667002, i64 2147667042}
!7047 = !DILocation(line: 333, column: 1, scope: !6401)
!7048 = !{i64 2147667176, i64 2147667219, i64 2147667259}
!7049 = !DILocation(line: 335, column: 1, scope: !6401)
!7050 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !417, file: !417, line: 30, type: !424, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7051)
!7051 = !{!7052, !7053}
!7052 = !DILocalVariable(name: "arg", arg: 1, scope: !7050, file: !417, line: 30, type: !426)
!7053 = !DILocalVariable(name: "key", scope: !7050, file: !417, line: 32, type: !108)
!7054 = !DILocation(line: 0, scope: !7050)
!7055 = !DILocation(line: 37, column: 2, scope: !7050)
!7056 = !DILocation(line: 38, column: 2, scope: !7050)
!7057 = !DILocation(line: 55, column: 2, scope: !7058, inlinedAt: !7065)
!7058 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7062)
!7059 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!32}
!7062 = !{!7063, !7064}
!7063 = !DILocalVariable(name: "key", scope: !7058, file: !7059, line: 44, type: !32)
!7064 = !DILocalVariable(name: "tmp", scope: !7058, file: !7059, line: 53, type: !32)
!7065 = distinct !DILocation(line: 40, column: 8, scope: !7050)
!7066 = !{i64 2186101}
!7067 = !DILocation(line: 0, scope: !7058, inlinedAt: !7065)
!7068 = !DILocalVariable(name: "key", arg: 1, scope: !7069, file: !7059, line: 84, type: !32)
!7069 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !7072)
!7070 = !DISubroutineType(types: !7071)
!7071 = !{null, !32}
!7072 = !{!7068}
!7073 = !DILocation(line: 0, scope: !7069, inlinedAt: !7074)
!7074 = distinct !DILocation(line: 47, column: 2, scope: !7050)
!7075 = !DILocation(line: 95, column: 2, scope: !7069, inlinedAt: !7074)
!7076 = !{i64 2186918}
!7077 = !DILocation(line: 51, column: 18, scope: !7050)
!7078 = !DILocation(line: 53, column: 2, scope: !7050)
!7079 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7080, file: !7080, line: 1609, type: !334, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7080 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7081 = !DILocation(line: 1611, column: 3, scope: !7079)
!7082 = !DILocation(line: 1612, column: 1, scope: !7079)
!7083 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7080, file: !7080, line: 1629, type: !334, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !251)
!7084 = !DILocation(line: 1631, column: 3, scope: !7083)
!7085 = !DILocation(line: 1632, column: 1, scope: !7083)
!7086 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !453, file: !453, line: 26, type: !459, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !450, retainedNodes: !7087)
!7087 = !{!7088}
!7088 = !DILocalVariable(name: "dev", arg: 1, scope: !7086, file: !453, line: 26, type: !461)
!7089 = !DILocation(line: 0, scope: !7086)
!7090 = !DILocation(line: 68, column: 2, scope: !7086)
!7091 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7092, file: !7092, line: 14, type: !4645, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7093)
!7092 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7093 = !{!7094, !7095}
!7094 = !DILocalVariable(name: "fmt", arg: 1, scope: !7091, file: !7092, line: 14, type: !337)
!7095 = !DILocalVariable(name: "ap", scope: !7091, file: !7092, line: 16, type: !7096)
!7096 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3714, line: 99, baseType: !7097)
!7097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3714, line: 40, baseType: !7098)
!7098 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7092, baseType: !7099)
!7099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7100)
!7100 = !{!7101}
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7099, file: !7092, line: 16, baseType: !102, size: 32)
!7102 = !DILocation(line: 0, scope: !7091)
!7103 = !DILocation(line: 16, column: 2, scope: !7091)
!7104 = !DILocation(line: 16, column: 10, scope: !7091)
!7105 = !DILocation(line: 18, column: 2, scope: !7091)
!7106 = !DILocation(line: 19, column: 2, scope: !7091)
!7107 = !DILocation(line: 20, column: 2, scope: !7091)
!7108 = !DILocation(line: 21, column: 1, scope: !7091)
!7109 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7092, file: !7092, line: 23, type: !7110, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7112)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{null, !337, !7096}
!7112 = !{!7113, !7114}
!7113 = !DILocalVariable(name: "fmt", arg: 1, scope: !7109, file: !7092, line: 23, type: !337)
!7114 = !DILocalVariable(name: "ap", arg: 2, scope: !7109, file: !7092, line: 23, type: !7096)
!7115 = !DILocation(line: 0, scope: !7109)
!7116 = !DILocation(line: 25, column: 2, scope: !7109)
!7117 = !DILocation(line: 26, column: 1, scope: !7109)
!7118 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7092, file: !7092, line: 52, type: !7119, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7121)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{null, !103, !13, !132}
!7121 = !{!7122, !7123, !7124, !7125}
!7122 = !DILocalVariable(name: "level", arg: 1, scope: !7118, file: !7092, line: 52, type: !103)
!7123 = !DILocalVariable(name: "data", arg: 2, scope: !7118, file: !7092, line: 52, type: !13)
!7124 = !DILocalVariable(name: "size", arg: 3, scope: !7118, file: !7092, line: 52, type: !132)
!7125 = !DILocalVariable(name: "data_buffer", scope: !7118, file: !7092, line: 54, type: !337)
!7126 = !DILocation(line: 0, scope: !7118)
!7127 = !DILocation(line: 55, column: 14, scope: !7118)
!7128 = !DILocation(line: 55, column: 2, scope: !7118)
!7129 = !DILocation(line: 56, column: 3, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7118, file: !7092, line: 55, column: 20)
!7131 = !DILocation(line: 57, column: 3, scope: !7130)
!7132 = !DILocation(line: 59, column: 7, scope: !7130)
!7133 = distinct !{!7133, !7128, !7134}
!7134 = !DILocation(line: 65, column: 2, scope: !7118)
!7135 = !DILocation(line: 66, column: 1, scope: !7118)
!7136 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3646, file: !3646, line: 175, type: !3647, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7137)
!7137 = !{!7138}
!7138 = !DILocalVariable(name: "level", arg: 1, scope: !7136, file: !3646, line: 175, type: !103)
!7139 = !DILocation(line: 0, scope: !7136)
!7140 = !DILocation(line: 177, column: 2, scope: !7136)
!7141 = !DILocation(line: 189, column: 1, scope: !7136)
!7142 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7092, file: !7092, line: 28, type: !7143, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7145)
!7143 = !DISubroutineType(types: !7144)
!7144 = !{null, !337, !132}
!7145 = !{!7146, !7147, !7148, !7150, !7152}
!7146 = !DILocalVariable(name: "data", arg: 1, scope: !7142, file: !7092, line: 28, type: !337)
!7147 = !DILocalVariable(name: "length", arg: 2, scope: !7142, file: !7092, line: 28, type: !132)
!7148 = !DILocalVariable(name: "i", scope: !7149, file: !7092, line: 30, type: !132)
!7149 = distinct !DILexicalBlock(scope: !7142, file: !7092, line: 30, column: 2)
!7150 = !DILocalVariable(name: "i", scope: !7151, file: !7092, line: 40, type: !132)
!7151 = distinct !DILexicalBlock(scope: !7142, file: !7092, line: 40, column: 2)
!7152 = !DILocalVariable(name: "c", scope: !7153, file: !7092, line: 42, type: !186)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !7092, line: 41, column: 19)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !7092, line: 41, column: 7)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !7092, line: 40, column: 54)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !7092, line: 40, column: 2)
!7157 = !DILocation(line: 0, scope: !7142)
!7158 = !DILocation(line: 0, scope: !7149)
!7159 = !DILocation(line: 30, column: 2, scope: !7149)
!7160 = !DILocation(line: 38, column: 2, scope: !7142)
!7161 = !DILocation(line: 0, scope: !7151)
!7162 = !DILocation(line: 40, column: 2, scope: !7151)
!7163 = !DILocation(line: 31, column: 9, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !7092, line: 31, column: 7)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !7092, line: 30, column: 54)
!7166 = distinct !DILexicalBlock(scope: !7149, file: !7092, line: 30, column: 2)
!7167 = !DILocation(line: 31, column: 7, scope: !7165)
!7168 = !DILocation(line: 32, column: 35, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7164, file: !7092, line: 31, column: 19)
!7170 = !DILocation(line: 32, column: 20, scope: !7169)
!7171 = !DILocation(line: 32, column: 4, scope: !7169)
!7172 = !DILocation(line: 33, column: 3, scope: !7169)
!7173 = !DILocation(line: 34, column: 4, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7164, file: !7092, line: 33, column: 10)
!7175 = !DILocation(line: 30, column: 50, scope: !7166)
!7176 = !DILocation(line: 30, column: 24, scope: !7166)
!7177 = distinct !{!7177, !7159, !7178}
!7178 = !DILocation(line: 36, column: 2, scope: !7149)
!7179 = !DILocation(line: 49, column: 2, scope: !7142)
!7180 = !DILocation(line: 50, column: 1, scope: !7142)
!7181 = !DILocation(line: 41, column: 9, scope: !7154)
!7182 = !DILocation(line: 41, column: 7, scope: !7155)
!7183 = !DILocation(line: 42, column: 22, scope: !7153)
!7184 = !DILocation(line: 0, scope: !7153)
!7185 = !DILocation(line: 44, column: 25, scope: !7153)
!7186 = !DILocation(line: 44, column: 17, scope: !7153)
!7187 = !DILocation(line: 44, column: 33, scope: !7153)
!7188 = !DILocation(line: 44, column: 4, scope: !7153)
!7189 = !DILocation(line: 45, column: 3, scope: !7153)
!7190 = !DILocation(line: 46, column: 4, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7154, file: !7092, line: 45, column: 10)
!7192 = !DILocation(line: 40, column: 50, scope: !7156)
!7193 = !DILocation(line: 40, column: 24, scope: !7156)
!7194 = distinct !{!7194, !7162, !7195}
!7195 = !DILocation(line: 48, column: 2, scope: !7151)
!7196 = distinct !DISubprogram(name: "isprint", scope: !6174, file: !6174, line: 37, type: !396, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2790, retainedNodes: !7197)
!7197 = !{!7198}
!7198 = !DILocalVariable(name: "c", arg: 1, scope: !7196, file: !6174, line: 37, type: !103)
!7199 = !DILocation(line: 0, scope: !7196)
!7200 = !DILocation(line: 39, column: 38, scope: !7196)
!7201 = !DILocation(line: 39, column: 2, scope: !7196)
!7202 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7203, file: !7203, line: 57, type: !7204, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2793, retainedNodes: !7250)
!7203 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7204 = !DISubroutineType(types: !7205)
!7205 = !{null, !32, !7206}
!7206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7207, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7208)
!7208 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2913, line: 141, baseType: !7209)
!7209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2913, line: 97, size: 256, elements: !7210)
!7210 = !{!7211}
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7209, file: !2913, line: 107, baseType: !7212, size: 256)
!7212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2913, line: 98, size: 256, elements: !7213)
!7213 = !{!7214, !7219, !7224, !7229, !7234, !7239, !7244, !7249}
!7214 = !DIDerivedType(tag: DW_TAG_member, scope: !7212, file: !2913, line: 99, baseType: !7215, size: 32)
!7215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7212, file: !2913, line: 99, size: 32, elements: !7216)
!7216 = !{!7217, !7218}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7215, file: !2913, line: 99, baseType: !108, size: 32)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7215, file: !2913, line: 99, baseType: !108, size: 32)
!7219 = !DIDerivedType(tag: DW_TAG_member, scope: !7212, file: !2913, line: 100, baseType: !7220, size: 32, offset: 32)
!7220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7212, file: !2913, line: 100, size: 32, elements: !7221)
!7221 = !{!7222, !7223}
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7220, file: !2913, line: 100, baseType: !108, size: 32)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7220, file: !2913, line: 100, baseType: !108, size: 32)
!7224 = !DIDerivedType(tag: DW_TAG_member, scope: !7212, file: !2913, line: 101, baseType: !7225, size: 32, offset: 64)
!7225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7212, file: !2913, line: 101, size: 32, elements: !7226)
!7226 = !{!7227, !7228}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7225, file: !2913, line: 101, baseType: !108, size: 32)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7225, file: !2913, line: 101, baseType: !108, size: 32)
!7229 = !DIDerivedType(tag: DW_TAG_member, scope: !7212, file: !2913, line: 102, baseType: !7230, size: 32, offset: 96)
!7230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7212, file: !2913, line: 102, size: 32, elements: !7231)
!7231 = !{!7232, !7233}
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7230, file: !2913, line: 102, baseType: !108, size: 32)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7230, file: !2913, line: 102, baseType: !108, size: 32)
!7234 = !DIDerivedType(tag: DW_TAG_member, scope: !7212, file: !2913, line: 103, baseType: !7235, size: 32, offset: 128)
!7235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7212, file: !2913, line: 103, size: 32, elements: !7236)
!7236 = !{!7237, !7238}
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7235, file: !2913, line: 103, baseType: !108, size: 32)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7235, file: !2913, line: 103, baseType: !108, size: 32)
!7239 = !DIDerivedType(tag: DW_TAG_member, scope: !7212, file: !2913, line: 104, baseType: !7240, size: 32, offset: 160)
!7240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7212, file: !2913, line: 104, size: 32, elements: !7241)
!7241 = !{!7242, !7243}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7240, file: !2913, line: 104, baseType: !108, size: 32)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7240, file: !2913, line: 104, baseType: !108, size: 32)
!7244 = !DIDerivedType(tag: DW_TAG_member, scope: !7212, file: !2913, line: 105, baseType: !7245, size: 32, offset: 192)
!7245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7212, file: !2913, line: 105, size: 32, elements: !7246)
!7246 = !{!7247, !7248}
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7245, file: !2913, line: 105, baseType: !108, size: 32)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7245, file: !2913, line: 105, baseType: !108, size: 32)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7212, file: !2913, line: 106, baseType: !108, size: 32, offset: 224)
!7250 = !{!7251, !7252}
!7251 = !DILocalVariable(name: "reason", arg: 1, scope: !7202, file: !7203, line: 57, type: !32)
!7252 = !DILocalVariable(name: "esf", arg: 2, scope: !7202, file: !7203, line: 57, type: !7206)
!7253 = !DILocation(line: 0, scope: !7202)
!7254 = !DILocation(line: 60, column: 10, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7202, file: !7203, line: 60, column: 6)
!7256 = !DILocation(line: 60, column: 6, scope: !7202)
!7257 = !DILocation(line: 61, column: 3, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7255, file: !7203, line: 60, column: 19)
!7259 = !DILocation(line: 62, column: 2, scope: !7258)
!7260 = !DILocation(line: 63, column: 2, scope: !7202)
!7261 = !DILocation(line: 64, column: 1, scope: !7202)
!7262 = distinct !DISubprogram(name: "esf_dump", scope: !7203, file: !7203, line: 20, type: !7263, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2793, retainedNodes: !7265)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{null, !7206}
!7265 = !{!7266}
!7266 = !DILocalVariable(name: "esf", arg: 1, scope: !7262, file: !7203, line: 20, type: !7206)
!7267 = !DILocation(line: 0, scope: !7262)
!7268 = !DILocation(line: 22, column: 2, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !7203, line: 22, column: 2)
!7270 = distinct !DILexicalBlock(scope: !7271, file: !7203, line: 22, column: 2)
!7271 = distinct !DILexicalBlock(scope: !7272, file: !7203, line: 22, column: 2)
!7272 = distinct !DILexicalBlock(scope: !7262, file: !7203, line: 22, column: 2)
!7273 = !DILocation(line: 24, column: 2, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !7203, line: 24, column: 2)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !7203, line: 24, column: 2)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !7203, line: 24, column: 2)
!7277 = distinct !DILexicalBlock(scope: !7262, file: !7203, line: 24, column: 2)
!7278 = !DILocation(line: 26, column: 2, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !7203, line: 26, column: 2)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !7203, line: 26, column: 2)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !7203, line: 26, column: 2)
!7282 = distinct !DILexicalBlock(scope: !7262, file: !7203, line: 26, column: 2)
!7283 = !DILocation(line: 53, column: 2, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !7203, line: 53, column: 2)
!7285 = distinct !DILexicalBlock(scope: !7286, file: !7203, line: 53, column: 2)
!7286 = distinct !DILexicalBlock(scope: !7287, file: !7203, line: 53, column: 2)
!7287 = distinct !DILexicalBlock(scope: !7262, file: !7203, line: 53, column: 2)
!7288 = !DILocation(line: 55, column: 1, scope: !7262)
!7289 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7203, file: !7203, line: 82, type: !7290, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2793, retainedNodes: !7305)
!7290 = !DISubroutineType(types: !7291)
!7291 = !{null, !7206, !7292}
!7292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7293, size: 32)
!7293 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7294)
!7294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7295)
!7295 = !{!7296, !7297, !7298, !7299, !7300, !7301, !7302, !7303, !7304}
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7294, file: !214, line: 26, baseType: !108, size: 32)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7294, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7294, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7294, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7294, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7294, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7294, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7294, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7294, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7305 = !{!7306, !7307, !7308}
!7306 = !DILocalVariable(name: "esf", arg: 1, scope: !7289, file: !7203, line: 82, type: !7206)
!7307 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7289, file: !7203, line: 82, type: !7292)
!7308 = !DILocalVariable(name: "reason", scope: !7289, file: !7203, line: 88, type: !32)
!7309 = !DILocation(line: 0, scope: !7289)
!7310 = !DILocation(line: 88, column: 35, scope: !7289)
!7311 = !DILocation(line: 108, column: 2, scope: !7289)
!7312 = !DILocation(line: 131, column: 1, scope: !7289)
!7313 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7203, file: !7203, line: 133, type: !7314, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2793, retainedNodes: !7316)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{null, !102}
!7316 = !{!7317, !7318, !7319}
!7317 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7313, file: !7203, line: 133, type: !102)
!7318 = !DILocalVariable(name: "ssf_contents", scope: !7313, file: !7203, line: 135, type: !1002)
!7319 = !DILocalVariable(name: "oops_esf", scope: !7313, file: !7203, line: 136, type: !7208)
!7320 = !DILocation(line: 0, scope: !7313)
!7321 = !DILocation(line: 136, column: 2, scope: !7313)
!7322 = !DILocation(line: 136, column: 15, scope: !7313)
!7323 = !DILocation(line: 139, column: 22, scope: !7313)
!7324 = !DILocation(line: 139, column: 17, scope: !7313)
!7325 = !DILocation(line: 139, column: 20, scope: !7313)
!7326 = !DILocation(line: 141, column: 2, scope: !7313)
!7327 = !DILocation(line: 142, column: 2, scope: !7313)
!7328 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7329, file: !7329, line: 40, type: !7070, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7330)
!7329 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7330 = !{!7331}
!7331 = !DILocalVariable(name: "irq", arg: 1, scope: !7328, file: !7329, line: 40, type: !32)
!7332 = !DILocation(line: 0, scope: !7328)
!7333 = !DILocation(line: 42, column: 2, scope: !7328)
!7334 = !DILocation(line: 43, column: 1, scope: !7328)
!7335 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !624, file: !624, line: 1684, type: !7336, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7338)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{null, !900}
!7338 = !{!7339}
!7339 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7335, file: !624, line: 1684, type: !900)
!7340 = !DILocation(line: 0, scope: !7335)
!7341 = !DILocation(line: 1686, column: 23, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7335, file: !624, line: 1686, column: 7)
!7343 = !DILocation(line: 1686, column: 7, scope: !7335)
!7344 = !DILocation(line: 1688, column: 5, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7342, file: !624, line: 1687, column: 3)
!7346 = !{i64 2151255623}
!7347 = !DILocation(line: 1689, column: 81, scope: !7345)
!7348 = !DILocation(line: 1689, column: 60, scope: !7345)
!7349 = !DILocation(line: 1689, column: 34, scope: !7345)
!7350 = !DILocation(line: 1689, column: 5, scope: !7345)
!7351 = !DILocation(line: 1689, column: 43, scope: !7345)
!7352 = !DILocation(line: 1690, column: 5, scope: !7345)
!7353 = !{i64 2151255737}
!7354 = !DILocation(line: 1691, column: 3, scope: !7345)
!7355 = !DILocation(line: 1692, column: 1, scope: !7335)
!7356 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7329, file: !7329, line: 45, type: !7070, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7357)
!7357 = !{!7358}
!7358 = !DILocalVariable(name: "irq", arg: 1, scope: !7356, file: !7329, line: 45, type: !32)
!7359 = !DILocation(line: 0, scope: !7356)
!7360 = !DILocation(line: 47, column: 2, scope: !7356)
!7361 = !DILocation(line: 48, column: 1, scope: !7356)
!7362 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !624, file: !624, line: 1722, type: !7336, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7363)
!7363 = !{!7364}
!7364 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7362, file: !624, line: 1722, type: !900)
!7365 = !DILocation(line: 0, scope: !7362)
!7366 = !DILocation(line: 1724, column: 23, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7362, file: !624, line: 1724, column: 7)
!7368 = !DILocation(line: 1724, column: 7, scope: !7362)
!7369 = !DILocation(line: 1726, column: 81, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7367, file: !624, line: 1725, column: 3)
!7371 = !DILocation(line: 1726, column: 60, scope: !7370)
!7372 = !DILocation(line: 1726, column: 34, scope: !7370)
!7373 = !DILocation(line: 1726, column: 5, scope: !7370)
!7374 = !DILocation(line: 1726, column: 43, scope: !7370)
!7375 = !DILocation(line: 271, column: 3, scope: !7376, inlinedAt: !7378)
!7376 = distinct !DISubprogram(name: "__DSB", scope: !7377, file: !7377, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !251)
!7377 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7378 = distinct !DILocation(line: 1727, column: 5, scope: !7370)
!7379 = !{i64 3710006}
!7380 = !DILocation(line: 260, column: 3, scope: !7381, inlinedAt: !7382)
!7381 = distinct !DISubprogram(name: "__ISB", scope: !7377, file: !7377, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !251)
!7382 = distinct !DILocation(line: 1728, column: 5, scope: !7370)
!7383 = !{i64 3709723}
!7384 = !DILocation(line: 1729, column: 3, scope: !7370)
!7385 = !DILocation(line: 1730, column: 1, scope: !7362)
!7386 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7329, file: !7329, line: 50, type: !7387, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7389)
!7387 = !DISubroutineType(types: !7388)
!7388 = !{!103, !32}
!7389 = !{!7390}
!7390 = !DILocalVariable(name: "irq", arg: 1, scope: !7386, file: !7329, line: 50, type: !32)
!7391 = !DILocation(line: 0, scope: !7386)
!7392 = !DILocation(line: 52, column: 20, scope: !7386)
!7393 = !DILocation(line: 52, column: 9, scope: !7386)
!7394 = !DILocation(line: 52, column: 41, scope: !7386)
!7395 = !DILocation(line: 52, column: 39, scope: !7386)
!7396 = !DILocation(line: 52, column: 2, scope: !7386)
!7397 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7329, file: !7329, line: 64, type: !7398, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7400)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{null, !32, !32, !108}
!7400 = !{!7401, !7402, !7403}
!7401 = !DILocalVariable(name: "irq", arg: 1, scope: !7397, file: !7329, line: 64, type: !32)
!7402 = !DILocalVariable(name: "prio", arg: 2, scope: !7397, file: !7329, line: 64, type: !32)
!7403 = !DILocalVariable(name: "flags", arg: 3, scope: !7397, file: !7329, line: 64, type: !108)
!7404 = !DILocation(line: 0, scope: !7397)
!7405 = !DILocation(line: 83, column: 8, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !7329, line: 82, column: 9)
!7407 = distinct !DILexicalBlock(scope: !7397, file: !7329, line: 76, column: 6)
!7408 = !DILocation(line: 95, column: 2, scope: !7397)
!7409 = !DILocation(line: 96, column: 1, scope: !7397)
!7410 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7411, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7413)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{null, !900, !108}
!7413 = !{!7414, !7415}
!7414 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7410, file: !624, line: 1814, type: !900)
!7415 = !DILocalVariable(name: "priority", arg: 2, scope: !7410, file: !624, line: 1814, type: !108)
!7416 = !DILocation(line: 0, scope: !7410)
!7417 = !DILocation(line: 0, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7410, file: !624, line: 1816, column: 7)
!7419 = !DILocation(line: 1816, column: 7, scope: !7410)
!7420 = !DILocation(line: 1824, column: 1, scope: !7410)
!7421 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7329, file: !7329, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2804, retainedNodes: !7422)
!7422 = !{!7423}
!7423 = !DILocalVariable(name: "unused", arg: 1, scope: !7421, file: !7329, line: 155, type: !13)
!7424 = !DILocation(line: 0, scope: !7421)
!7425 = !DILocation(line: 159, column: 2, scope: !7421)
!7426 = !DILocation(line: 160, column: 1, scope: !7421)
!7427 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7428, file: !7428, line: 87, type: !334, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2850, retainedNodes: !251)
!7428 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7429 = !DILocation(line: 89, column: 2, scope: !7427)
!7430 = !DILocation(line: 90, column: 2, scope: !7427)
!7431 = !DILocation(line: 91, column: 1, scope: !7427)
!7432 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7428, file: !7428, line: 23, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7433 = !DISubprogram(name: "z_arm_int_exit", scope: !7434, file: !7434, line: 153, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!7434 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7435 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7436, file: !7436, line: 256, type: !334, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !251)
!7436 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7437 = !DILocation(line: 258, column: 2, scope: !7435)
!7438 = !DILocation(line: 260, column: 2, scope: !7435)
!7439 = !DILocation(line: 262, column: 2, scope: !7435)
!7440 = !DILocation(line: 263, column: 2, scope: !7435)
!7441 = !DILocation(line: 267, column: 2, scope: !7435)
!7442 = !DILocation(line: 268, column: 2, scope: !7435)
!7443 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7436, file: !7436, line: 53, type: !334, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !251)
!7444 = !DILocation(line: 55, column: 12, scope: !7443)
!7445 = !DILocation(line: 271, column: 3, scope: !7446, inlinedAt: !7447)
!7446 = distinct !DISubprogram(name: "__DSB", scope: !7377, file: !7377, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !251)
!7447 = distinct !DILocation(line: 56, column: 2, scope: !7443)
!7448 = !{i64 3708677}
!7449 = !DILocation(line: 260, column: 3, scope: !7450, inlinedAt: !7451)
!7450 = distinct !DISubprogram(name: "__ISB", scope: !7377, file: !7377, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !251)
!7451 = distinct !DILocation(line: 57, column: 2, scope: !7443)
!7452 = !{i64 3708394}
!7453 = !DILocation(line: 58, column: 1, scope: !7443)
!7454 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7436, file: !7436, line: 96, type: !334, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !251)
!7455 = !DILocation(line: 103, column: 13, scope: !7454)
!7456 = !DILocation(line: 975, column: 3, scope: !7457, inlinedAt: !7460)
!7457 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7377, file: !7377, line: 971, type: !3655, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !7458)
!7458 = !{!7459}
!7459 = !DILocalVariable(name: "result", scope: !7457, file: !7377, line: 973, type: !108)
!7460 = distinct !DILocation(line: 189, column: 16, scope: !7454)
!7461 = !{i64 3729507}
!7462 = !DILocation(line: 0, scope: !7457, inlinedAt: !7460)
!7463 = !DILocation(line: 189, column: 32, scope: !7454)
!7464 = !DILocalVariable(name: "control", arg: 1, scope: !7465, file: !7377, line: 1001, type: !108)
!7465 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7377, file: !7377, line: 1001, type: !7466, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !7468)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{null, !108}
!7468 = !{!7464}
!7469 = !DILocation(line: 0, scope: !7465, inlinedAt: !7470)
!7470 = distinct !DILocation(line: 189, column: 2, scope: !7454)
!7471 = !DILocation(line: 1003, column: 3, scope: !7465, inlinedAt: !7470)
!7472 = !{i64 3730227}
!7473 = !DILocation(line: 260, column: 3, scope: !7450, inlinedAt: !7474)
!7474 = distinct !DILocation(line: 1004, column: 3, scope: !7465, inlinedAt: !7470)
!7475 = !DILocation(line: 191, column: 1, scope: !7454)
!7476 = distinct !DISubprogram(name: "arch_swap", scope: !7477, file: !7477, line: 33, type: !7387, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7478)
!7477 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7478 = !{!7479}
!7479 = !DILocalVariable(name: "key", arg: 1, scope: !7476, file: !7477, line: 33, type: !32)
!7480 = !DILocation(line: 0, scope: !7476)
!7481 = !DILocation(line: 36, column: 2, scope: !7476)
!7482 = !DILocation(line: 36, column: 17, scope: !7476)
!7483 = !DILocation(line: 36, column: 25, scope: !7476)
!7484 = !DILocation(line: 37, column: 37, scope: !7476)
!7485 = !DILocation(line: 37, column: 17, scope: !7476)
!7486 = !DILocation(line: 37, column: 35, scope: !7476)
!7487 = !DILocation(line: 41, column: 12, scope: !7476)
!7488 = !DILocalVariable(name: "key", arg: 1, scope: !7489, file: !7059, line: 84, type: !32)
!7489 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2880, retainedNodes: !7490)
!7490 = !{!7488}
!7491 = !DILocation(line: 0, scope: !7489, inlinedAt: !7492)
!7492 = distinct !DILocation(line: 44, column: 2, scope: !7476)
!7493 = !DILocation(line: 95, column: 2, scope: !7489, inlinedAt: !7492)
!7494 = !{i64 2279178}
!7495 = !DILocation(line: 53, column: 9, scope: !7476)
!7496 = !DILocation(line: 53, column: 24, scope: !7476)
!7497 = !DILocation(line: 53, column: 2, scope: !7476)
!7498 = distinct !DISubprogram(name: "arch_new_thread", scope: !7499, file: !7499, line: 56, type: !7500, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !7607)
!7499 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7500 = !DISubroutineType(types: !7501)
!7501 = !{null, !7502, !7602, !277, !321, !102, !102, !102}
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7503, size: 32)
!7503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !7504)
!7504 = !{!7505, !7563, !7575, !7576, !7577, !7578, !7584, !7597}
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7503, file: !163, line: 247, baseType: !7506, size: 384)
!7506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !7507)
!7507 = !{!7508, !7532, !7539, !7540, !7541, !7550, !7551, !7552}
!7508 = !DIDerivedType(tag: DW_TAG_member, scope: !7506, file: !163, line: 60, baseType: !7509, size: 64)
!7509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7506, file: !163, line: 60, size: 64, elements: !7510)
!7510 = !{!7511, !7526}
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7509, file: !163, line: 61, baseType: !7512, size: 64)
!7512 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !7513)
!7513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !7514)
!7514 = !{!7515, !7521}
!7515 = !DIDerivedType(tag: DW_TAG_member, scope: !7513, file: !146, line: 38, baseType: !7516, size: 32)
!7516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7513, file: !146, line: 38, size: 32, elements: !7517)
!7517 = !{!7518, !7520}
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7516, file: !146, line: 39, baseType: !7519, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7513, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7516, file: !146, line: 40, baseType: !7519, size: 32)
!7521 = !DIDerivedType(tag: DW_TAG_member, scope: !7513, file: !146, line: 42, baseType: !7522, size: 32, offset: 32)
!7522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7513, file: !146, line: 42, size: 32, elements: !7523)
!7523 = !{!7524, !7525}
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7522, file: !146, line: 43, baseType: !7519, size: 32)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7522, file: !146, line: 44, baseType: !7519, size: 32)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7509, file: !163, line: 62, baseType: !7527, size: 64)
!7527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !7528)
!7528 = !{!7529}
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7527, file: !175, line: 50, baseType: !7530, size: 64)
!7530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7531, size: 64, elements: !180)
!7531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7527, size: 32)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7506, file: !163, line: 68, baseType: !7533, size: 32, offset: 64)
!7533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7534, size: 32)
!7534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !7535)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !7536)
!7536 = !{!7537}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7535, file: !141, line: 232, baseType: !7538, size: 64)
!7538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !7513)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7506, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7506, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!7541 = !DIDerivedType(tag: DW_TAG_member, scope: !7506, file: !163, line: 90, baseType: !7542, size: 16, offset: 112)
!7542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7506, file: !163, line: 90, size: 16, elements: !7543)
!7543 = !{!7544, !7549}
!7544 = !DIDerivedType(tag: DW_TAG_member, scope: !7542, file: !163, line: 91, baseType: !7545, size: 16)
!7545 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7542, file: !163, line: 91, size: 16, elements: !7546)
!7546 = !{!7547, !7548}
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7545, file: !163, line: 96, baseType: !195, size: 8)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7545, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7542, file: !163, line: 100, baseType: !121, size: 16)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7506, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7506, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7506, file: !163, line: 131, baseType: !7553, size: 192, offset: 192)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !7554)
!7554 = !{!7555, !7556, !7562}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7553, file: !141, line: 245, baseType: !7512, size: 64)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7553, file: !141, line: 246, baseType: !7557, size: 32, offset: 64)
!7557 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !7558)
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7559, size: 32)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !7561}
!7561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7553, size: 32)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7553, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7503, file: !163, line: 250, baseType: !7564, size: 288, offset: 384)
!7564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7565)
!7565 = !{!7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574}
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7564, file: !214, line: 26, baseType: !108, size: 32)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7564, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7564, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7564, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7564, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7564, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7564, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7564, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7564, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7503, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7503, file: !163, line: 256, baseType: !7534, size: 64, offset: 704)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7503, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7503, file: !163, line: 300, baseType: !7579, size: 96, offset: 800)
!7579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !7580)
!7580 = !{!7581, !7582, !7583}
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7579, file: !163, line: 153, baseType: !22, size: 32)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7579, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7579, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7503, file: !163, line: 325, baseType: !7585, size: 32, offset: 896)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 32)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !7587)
!7587 = !{!7588, !7594, !7595}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7586, file: !137, line: 5074, baseType: !7589, size: 96)
!7589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !7590)
!7590 = !{!7591, !7592, !7593}
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7589, file: !240, line: 57, baseType: !243, size: 32)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7589, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7589, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7586, file: !137, line: 5075, baseType: !7534, size: 64, offset: 96)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7586, file: !137, line: 5076, baseType: !7596, offset: 160)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7503, file: !163, line: 343, baseType: !7598, size: 64, offset: 928)
!7598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !7599)
!7599 = !{!7600, !7601}
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7598, file: !214, line: 63, baseType: !108, size: 32)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7598, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!7602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7603, size: 32)
!7603 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !7604)
!7604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !7605)
!7605 = !{!7606}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7604, file: !316, line: 48, baseType: !278, size: 8)
!7607 = !{!7608, !7609, !7610, !7611, !7612, !7613, !7614, !7615}
!7608 = !DILocalVariable(name: "thread", arg: 1, scope: !7498, file: !7499, line: 56, type: !7502)
!7609 = !DILocalVariable(name: "stack", arg: 2, scope: !7498, file: !7499, line: 56, type: !7602)
!7610 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7498, file: !7499, line: 57, type: !277)
!7611 = !DILocalVariable(name: "entry", arg: 4, scope: !7498, file: !7499, line: 57, type: !321)
!7612 = !DILocalVariable(name: "p1", arg: 5, scope: !7498, file: !7499, line: 58, type: !102)
!7613 = !DILocalVariable(name: "p2", arg: 6, scope: !7498, file: !7499, line: 58, type: !102)
!7614 = !DILocalVariable(name: "p3", arg: 7, scope: !7498, file: !7499, line: 58, type: !102)
!7615 = !DILocalVariable(name: "iframe", scope: !7498, file: !7499, line: 60, type: !2911)
!7616 = !DILocation(line: 0, scope: !7498)
!7617 = !DILocation(line: 85, column: 11, scope: !7498)
!7618 = !DILocation(line: 93, column: 10, scope: !7498)
!7619 = !DILocation(line: 98, column: 13, scope: !7498)
!7620 = !DILocation(line: 100, column: 15, scope: !7498)
!7621 = !DILocation(line: 100, column: 10, scope: !7498)
!7622 = !DILocation(line: 100, column: 13, scope: !7498)
!7623 = !DILocation(line: 101, column: 15, scope: !7498)
!7624 = !DILocation(line: 101, column: 10, scope: !7498)
!7625 = !DILocation(line: 101, column: 13, scope: !7498)
!7626 = !DILocation(line: 102, column: 15, scope: !7498)
!7627 = !DILocation(line: 102, column: 10, scope: !7498)
!7628 = !DILocation(line: 102, column: 13, scope: !7498)
!7629 = !DILocation(line: 103, column: 15, scope: !7498)
!7630 = !DILocation(line: 103, column: 10, scope: !7498)
!7631 = !DILocation(line: 103, column: 13, scope: !7498)
!7632 = !DILocation(line: 106, column: 10, scope: !7498)
!7633 = !DILocation(line: 106, column: 15, scope: !7498)
!7634 = !DILocation(line: 122, column: 29, scope: !7498)
!7635 = !DILocation(line: 122, column: 23, scope: !7498)
!7636 = !DILocation(line: 122, column: 27, scope: !7498)
!7637 = !DILocation(line: 123, column: 15, scope: !7498)
!7638 = !DILocation(line: 123, column: 23, scope: !7498)
!7639 = !DILocation(line: 143, column: 1, scope: !7498)
!7640 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7499, file: !7499, line: 385, type: !7641, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !7644)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{!108, !7643, !7643}
!7643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!7644 = !{!7645, !7646, !7647, !7650}
!7645 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7640, file: !7499, line: 385, type: !7643)
!7646 = !DILocalVariable(name: "psp", arg: 2, scope: !7640, file: !7499, line: 385, type: !7643)
!7647 = !DILocalVariable(name: "thread", scope: !7640, file: !7499, line: 388, type: !7648)
!7648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7649, size: 32)
!7649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7503)
!7650 = !DILocalVariable(name: "guard_len", scope: !7640, file: !7499, line: 405, type: !108)
!7651 = !DILocation(line: 0, scope: !7640)
!7652 = !DILocation(line: 388, column: 34, scope: !7640)
!7653 = !DILocation(line: 390, column: 13, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7640, file: !7499, line: 390, column: 6)
!7655 = !DILocation(line: 390, column: 6, scope: !7640)
!7656 = !DILocation(line: 438, column: 6, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7640, file: !7499, line: 438, column: 6)
!7658 = !DILocation(line: 438, column: 6, scope: !7640)
!7659 = !DILocation(line: 442, column: 3, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7657, file: !7499, line: 440, column: 22)
!7661 = !DILocation(line: 455, column: 1, scope: !7640)
!7662 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7499, file: !7499, line: 530, type: !7663, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2908, retainedNodes: !7665)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{null, !7502, !277, !321}
!7665 = !{!7666, !7667, !7668}
!7666 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7662, file: !7499, line: 530, type: !7502)
!7667 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7662, file: !7499, line: 530, type: !277)
!7668 = !DILocalVariable(name: "_main", arg: 3, scope: !7662, file: !7499, line: 531, type: !321)
!7669 = !DILocation(line: 0, scope: !7662)
!7670 = !DILocation(line: 535, column: 11, scope: !7662)
!7671 = !DILocation(line: 560, column: 2, scope: !7662)
!7672 = !DILocation(line: 576, column: 2, scope: !7662)
!7673 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7674 = !DILocation(line: 603, column: 2, scope: !7662)
!7675 = distinct !DISubprogram(name: "z_arm_fault", scope: !7676, file: !7676, line: 1036, type: !7677, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7692)
!7676 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7677 = !DISubroutineType(types: !7678)
!7678 = !{null, !108, !108, !108, !7679}
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 32)
!7680 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !214, line: 37, baseType: !7681)
!7681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !7682)
!7682 = !{!7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7681, file: !214, line: 26, baseType: !108, size: 32)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7681, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7681, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7681, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7681, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7681, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7681, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7681, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7681, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!7692 = !{!7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7702}
!7693 = !DILocalVariable(name: "msp", arg: 1, scope: !7675, file: !7676, line: 1036, type: !108)
!7694 = !DILocalVariable(name: "psp", arg: 2, scope: !7675, file: !7676, line: 1036, type: !108)
!7695 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7675, file: !7676, line: 1036, type: !108)
!7696 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7675, file: !7676, line: 1037, type: !7679)
!7697 = !DILocalVariable(name: "reason", scope: !7675, file: !7676, line: 1039, type: !108)
!7698 = !DILocalVariable(name: "fault", scope: !7675, file: !7676, line: 1040, type: !103)
!7699 = !DILocalVariable(name: "recoverable", scope: !7675, file: !7676, line: 1041, type: !131)
!7700 = !DILocalVariable(name: "nested_exc", scope: !7675, file: !7676, line: 1041, type: !131)
!7701 = !DILocalVariable(name: "esf", scope: !7675, file: !7676, line: 1042, type: !2979)
!7702 = !DILocalVariable(name: "esf_copy", scope: !7675, file: !7676, line: 1047, type: !2980)
!7703 = !DILocation(line: 0, scope: !7675)
!7704 = !DILocation(line: 1040, column: 19, scope: !7675)
!7705 = !DILocation(line: 1040, column: 24, scope: !7675)
!7706 = !DILocation(line: 1041, column: 2, scope: !7675)
!7707 = !DILocation(line: 1047, column: 2, scope: !7675)
!7708 = !DILocation(line: 1047, column: 15, scope: !7675)
!7709 = !DILocalVariable(name: "key", arg: 1, scope: !7710, file: !7059, line: 84, type: !32)
!7710 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7711)
!7711 = !{!7709}
!7712 = !DILocation(line: 0, scope: !7710, inlinedAt: !7713)
!7713 = distinct !DILocation(line: 1050, column: 2, scope: !7675)
!7714 = !DILocation(line: 95, column: 2, scope: !7710, inlinedAt: !7713)
!7715 = !{i64 2312422}
!7716 = !DILocation(line: 1055, column: 9, scope: !7675)
!7717 = !DILocation(line: 1063, column: 11, scope: !7675)
!7718 = !DILocation(line: 1064, column: 6, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7675, file: !7676, line: 1064, column: 6)
!7720 = !{i8 0, i8 2}
!7721 = !DILocation(line: 1064, column: 6, scope: !7675)
!7722 = !DILocation(line: 1070, column: 20, scope: !7675)
!7723 = !DILocation(line: 1070, column: 2, scope: !7675)
!7724 = !DILocation(line: 1089, column: 6, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7675, file: !7676, line: 1089, column: 6)
!7726 = !DILocation(line: 0, scope: !7725)
!7727 = !DILocation(line: 1089, column: 6, scope: !7675)
!7728 = !DILocation(line: 1090, column: 28, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !7676, line: 1090, column: 7)
!7730 = distinct !DILexicalBlock(scope: !7725, file: !7676, line: 1089, column: 18)
!7731 = !DILocation(line: 1090, column: 44, scope: !7729)
!7732 = !DILocation(line: 1090, column: 7, scope: !7730)
!7733 = !DILocation(line: 1091, column: 24, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7729, file: !7676, line: 1090, column: 50)
!7735 = !DILocation(line: 1092, column: 3, scope: !7734)
!7736 = !DILocation(line: 1094, column: 23, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7725, file: !7676, line: 1093, column: 9)
!7738 = !DILocation(line: 1097, column: 2, scope: !7675)
!7739 = !DILocation(line: 1098, column: 1, scope: !7675)
!7740 = distinct !DISubprogram(name: "get_esf", scope: !7676, file: !7676, line: 894, type: !7741, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7744)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!2979, !108, !108, !108, !7743}
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!7744 = !{!7745, !7746, !7747, !7748, !7749, !7750}
!7745 = !DILocalVariable(name: "msp", arg: 1, scope: !7740, file: !7676, line: 894, type: !108)
!7746 = !DILocalVariable(name: "psp", arg: 2, scope: !7740, file: !7676, line: 894, type: !108)
!7747 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7740, file: !7676, line: 894, type: !108)
!7748 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7740, file: !7676, line: 895, type: !7743)
!7749 = !DILocalVariable(name: "alternative_state_exc", scope: !7740, file: !7676, line: 897, type: !131)
!7750 = !DILocalVariable(name: "ptr_esf", scope: !7740, file: !7676, line: 898, type: !2979)
!7751 = !DILocation(line: 0, scope: !7740)
!7752 = !DILocation(line: 900, column: 14, scope: !7740)
!7753 = !DILocation(line: 902, column: 49, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7740, file: !7676, line: 902, column: 6)
!7755 = !DILocation(line: 902, column: 6, scope: !7740)
!7756 = !DILocation(line: 983, column: 44, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7740, file: !7676, line: 983, column: 6)
!7758 = !DILocation(line: 985, column: 3, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !7676, line: 985, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !7676, line: 985, column: 3)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !7676, line: 985, column: 3)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !7676, line: 985, column: 3)
!7763 = distinct !DILexicalBlock(scope: !7757, file: !7676, line: 984, column: 47)
!7764 = !DILocation(line: 986, column: 3, scope: !7763)
!7765 = !DILocation(line: 983, column: 18, scope: !7757)
!7766 = !DILocation(line: 991, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !7676, line: 990, column: 30)
!7768 = distinct !DILexicalBlock(scope: !7740, file: !7676, line: 990, column: 6)
!7769 = !DILocation(line: 998, column: 16, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7676, line: 995, column: 10)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !7676, line: 991, column: 7)
!7772 = !DILocation(line: 1002, column: 2, scope: !7740)
!7773 = !DILocation(line: 1003, column: 1, scope: !7740)
!7774 = distinct !DISubprogram(name: "fault_handle", scope: !7676, file: !7676, line: 786, type: !7775, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7777)
!7775 = !DISubroutineType(types: !7776)
!7776 = !{!108, !2979, !103, !7743}
!7777 = !{!7778, !7779, !7780, !7781}
!7778 = !DILocalVariable(name: "esf", arg: 1, scope: !7774, file: !7676, line: 786, type: !2979)
!7779 = !DILocalVariable(name: "fault", arg: 2, scope: !7774, file: !7676, line: 786, type: !103)
!7780 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7774, file: !7676, line: 786, type: !7743)
!7781 = !DILocalVariable(name: "reason", scope: !7774, file: !7676, line: 788, type: !108)
!7782 = !DILocation(line: 0, scope: !7774)
!7783 = !DILocation(line: 790, column: 15, scope: !7774)
!7784 = !DILocation(line: 792, column: 2, scope: !7774)
!7785 = !DILocation(line: 794, column: 12, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7774, file: !7676, line: 792, column: 17)
!7787 = !DILocation(line: 795, column: 3, scope: !7786)
!7788 = !DILocation(line: 800, column: 12, scope: !7786)
!7789 = !DILocation(line: 801, column: 3, scope: !7786)
!7790 = !DILocation(line: 803, column: 12, scope: !7786)
!7791 = !DILocation(line: 804, column: 3, scope: !7786)
!7792 = !DILocation(line: 806, column: 12, scope: !7786)
!7793 = !DILocation(line: 807, column: 3, scope: !7786)
!7794 = !DILocation(line: 814, column: 3, scope: !7786)
!7795 = !DILocation(line: 815, column: 3, scope: !7786)
!7796 = !DILocation(line: 820, column: 3, scope: !7786)
!7797 = !DILocation(line: 821, column: 3, scope: !7786)
!7798 = !DILocation(line: 829, column: 2, scope: !7774)
!7799 = distinct !DISubprogram(name: "hard_fault", scope: !7676, file: !7676, line: 709, type: !7800, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7802)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{!108, !2979, !7743}
!7802 = !{!7803, !7804, !7805}
!7803 = !DILocalVariable(name: "esf", arg: 1, scope: !7799, file: !7676, line: 709, type: !2979)
!7804 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7799, file: !7676, line: 709, type: !7743)
!7805 = !DILocalVariable(name: "reason", scope: !7799, file: !7676, line: 711, type: !108)
!7806 = !DILocation(line: 0, scope: !7799)
!7807 = !DILocation(line: 713, column: 2, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !7676, line: 713, column: 2)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !7676, line: 713, column: 2)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !7676, line: 713, column: 2)
!7811 = distinct !DILexicalBlock(scope: !7799, file: !7676, line: 713, column: 2)
!7812 = !DILocation(line: 732, column: 15, scope: !7799)
!7813 = !DILocation(line: 734, column: 12, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7799, file: !7676, line: 734, column: 6)
!7815 = !DILocation(line: 734, column: 17, scope: !7814)
!7816 = !DILocation(line: 734, column: 41, scope: !7814)
!7817 = !DILocation(line: 734, column: 6, scope: !7799)
!7818 = !DILocation(line: 735, column: 3, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7820, file: !7676, line: 735, column: 3)
!7820 = distinct !DILexicalBlock(scope: !7821, file: !7676, line: 735, column: 3)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7676, line: 735, column: 3)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7676, line: 735, column: 3)
!7823 = distinct !DILexicalBlock(scope: !7814, file: !7676, line: 734, column: 47)
!7824 = !DILocation(line: 736, column: 2, scope: !7823)
!7825 = !DILocation(line: 736, column: 19, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7814, file: !7676, line: 736, column: 13)
!7827 = !DILocation(line: 736, column: 49, scope: !7826)
!7828 = !DILocation(line: 736, column: 13, scope: !7814)
!7829 = !DILocation(line: 737, column: 3, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !7676, line: 737, column: 3)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !7676, line: 737, column: 3)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !7676, line: 737, column: 3)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7676, line: 737, column: 3)
!7834 = distinct !DILexicalBlock(scope: !7826, file: !7676, line: 736, column: 55)
!7835 = !DILocation(line: 738, column: 2, scope: !7834)
!7836 = !DILocation(line: 738, column: 19, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7826, file: !7676, line: 738, column: 13)
!7838 = !DILocation(line: 738, column: 24, scope: !7837)
!7839 = !DILocation(line: 738, column: 47, scope: !7837)
!7840 = !DILocation(line: 738, column: 13, scope: !7826)
!7841 = !DILocation(line: 739, column: 3, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !7676, line: 739, column: 3)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !7676, line: 739, column: 3)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7676, line: 739, column: 3)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !7676, line: 739, column: 3)
!7846 = distinct !DILexicalBlock(scope: !7837, file: !7676, line: 738, column: 53)
!7847 = !DILocation(line: 740, column: 7, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7846, file: !7676, line: 740, column: 7)
!7849 = !DILocation(line: 740, column: 7, scope: !7846)
!7850 = !DILocation(line: 741, column: 4, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7676, line: 741, column: 4)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7676, line: 741, column: 4)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !7676, line: 741, column: 4)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !7676, line: 741, column: 4)
!7855 = distinct !DILexicalBlock(scope: !7848, file: !7676, line: 740, column: 38)
!7856 = !DILocation(line: 742, column: 24, scope: !7855)
!7857 = !DILocation(line: 743, column: 3, scope: !7855)
!7858 = !DILocation(line: 743, column: 20, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7848, file: !7676, line: 743, column: 14)
!7860 = !DILocation(line: 743, column: 25, scope: !7859)
!7861 = !DILocation(line: 743, column: 52, scope: !7859)
!7862 = !DILocation(line: 743, column: 14, scope: !7848)
!7863 = !DILocation(line: 744, column: 13, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7859, file: !7676, line: 743, column: 58)
!7865 = !DILocation(line: 745, column: 3, scope: !7864)
!7866 = !DILocation(line: 745, column: 20, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7859, file: !7676, line: 745, column: 14)
!7868 = !DILocation(line: 745, column: 25, scope: !7867)
!7869 = !DILocation(line: 745, column: 52, scope: !7867)
!7870 = !DILocation(line: 745, column: 14, scope: !7859)
!7871 = !DILocation(line: 746, column: 13, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7867, file: !7676, line: 745, column: 58)
!7873 = !DILocation(line: 747, column: 3, scope: !7872)
!7874 = !DILocation(line: 747, column: 20, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7867, file: !7676, line: 747, column: 14)
!7876 = !DILocation(line: 747, column: 52, scope: !7875)
!7877 = !DILocation(line: 747, column: 14, scope: !7867)
!7878 = !DILocation(line: 748, column: 13, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7875, file: !7676, line: 747, column: 58)
!7880 = !DILocation(line: 753, column: 3, scope: !7879)
!7881 = !DILocation(line: 766, column: 2, scope: !7799)
!7882 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7676, file: !7676, line: 229, type: !7775, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7883)
!7883 = !{!7884, !7885, !7886, !7887, !7888, !7889, !7892}
!7884 = !DILocalVariable(name: "esf", arg: 1, scope: !7882, file: !7676, line: 229, type: !2979)
!7885 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7882, file: !7676, line: 229, type: !103)
!7886 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7882, file: !7676, line: 230, type: !7743)
!7887 = !DILocalVariable(name: "reason", scope: !7882, file: !7676, line: 232, type: !108)
!7888 = !DILocalVariable(name: "mmfar", scope: !7882, file: !7676, line: 233, type: !108)
!7889 = !DILocalVariable(name: "temp", scope: !7890, file: !7676, line: 254, type: !108)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !7676, line: 244, column: 48)
!7891 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 244, column: 6)
!7892 = !DILocalVariable(name: "min_stack_ptr", scope: !7893, file: !7676, line: 309, type: !108)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7676, line: 308, column: 43)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !7676, line: 308, column: 7)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !7676, line: 289, column: 40)
!7896 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 288, column: 6)
!7897 = !DILocation(line: 0, scope: !7882)
!7898 = !DILocation(line: 235, column: 2, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7900, file: !7676, line: 235, column: 2)
!7900 = distinct !DILexicalBlock(scope: !7901, file: !7676, line: 235, column: 2)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7676, line: 235, column: 2)
!7902 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 235, column: 2)
!7903 = !DILocation(line: 237, column: 12, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 237, column: 6)
!7905 = !DILocation(line: 237, column: 17, scope: !7904)
!7906 = !DILocation(line: 237, column: 41, scope: !7904)
!7907 = !DILocation(line: 237, column: 6, scope: !7882)
!7908 = !DILocation(line: 238, column: 3, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7910, file: !7676, line: 238, column: 3)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !7676, line: 238, column: 3)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !7676, line: 238, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !7676, line: 238, column: 3)
!7913 = distinct !DILexicalBlock(scope: !7904, file: !7676, line: 237, column: 47)
!7914 = !DILocation(line: 240, column: 2, scope: !7913)
!7915 = !DILocation(line: 241, column: 12, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 241, column: 6)
!7917 = !DILocation(line: 241, column: 17, scope: !7916)
!7918 = !DILocation(line: 241, column: 43, scope: !7916)
!7919 = !DILocation(line: 241, column: 6, scope: !7882)
!7920 = !DILocation(line: 242, column: 3, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !7676, line: 242, column: 3)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !7676, line: 242, column: 3)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !7676, line: 242, column: 3)
!7924 = distinct !DILexicalBlock(scope: !7925, file: !7676, line: 242, column: 3)
!7925 = distinct !DILexicalBlock(scope: !7916, file: !7676, line: 241, column: 49)
!7926 = !DILocation(line: 243, column: 2, scope: !7925)
!7927 = !DILocation(line: 244, column: 12, scope: !7891)
!7928 = !DILocation(line: 244, column: 17, scope: !7891)
!7929 = !DILocation(line: 244, column: 42, scope: !7891)
!7930 = !DILocation(line: 244, column: 6, scope: !7882)
!7931 = !DILocation(line: 245, column: 3, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !7676, line: 245, column: 3)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !7676, line: 245, column: 3)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !7676, line: 245, column: 3)
!7935 = distinct !DILexicalBlock(scope: !7890, file: !7676, line: 245, column: 3)
!7936 = !DILocation(line: 254, column: 24, scope: !7890)
!7937 = !DILocation(line: 0, scope: !7890)
!7938 = !DILocation(line: 256, column: 13, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7890, file: !7676, line: 256, column: 7)
!7940 = !DILocation(line: 256, column: 18, scope: !7939)
!7941 = !DILocation(line: 256, column: 44, scope: !7939)
!7942 = !DILocation(line: 256, column: 7, scope: !7890)
!7943 = !DILocation(line: 258, column: 4, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !7676, line: 258, column: 4)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !7676, line: 258, column: 4)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !7676, line: 258, column: 4)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !7676, line: 258, column: 4)
!7948 = distinct !DILexicalBlock(scope: !7939, file: !7676, line: 256, column: 50)
!7949 = !DILocation(line: 259, column: 24, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7948, file: !7676, line: 259, column: 8)
!7951 = !DILocation(line: 259, column: 8, scope: !7948)
!7952 = !DILocation(line: 261, column: 15, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !7676, line: 259, column: 30)
!7954 = !DILocation(line: 262, column: 4, scope: !7953)
!7955 = !DILocation(line: 265, column: 12, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 265, column: 6)
!7957 = !DILocation(line: 265, column: 17, scope: !7956)
!7958 = !DILocation(line: 265, column: 42, scope: !7956)
!7959 = !DILocation(line: 265, column: 6, scope: !7882)
!7960 = !DILocation(line: 266, column: 3, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !7676, line: 266, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !7676, line: 266, column: 3)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !7676, line: 266, column: 3)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7676, line: 266, column: 3)
!7965 = distinct !DILexicalBlock(scope: !7956, file: !7676, line: 265, column: 48)
!7966 = !DILocation(line: 267, column: 2, scope: !7965)
!7967 = !DILocation(line: 269, column: 12, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 269, column: 6)
!7969 = !DILocation(line: 269, column: 17, scope: !7968)
!7970 = !DILocation(line: 269, column: 41, scope: !7968)
!7971 = !DILocation(line: 269, column: 6, scope: !7882)
!7972 = !DILocation(line: 270, column: 3, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !7676, line: 270, column: 3)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !7676, line: 270, column: 3)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7676, line: 270, column: 3)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !7676, line: 270, column: 3)
!7977 = distinct !DILexicalBlock(scope: !7968, file: !7676, line: 269, column: 47)
!7978 = !DILocation(line: 272, column: 2, scope: !7977)
!7979 = !DILocation(line: 288, column: 12, scope: !7896)
!7980 = !DILocation(line: 288, column: 17, scope: !7896)
!7981 = !DILocation(line: 288, column: 41, scope: !7896)
!7982 = !DILocation(line: 289, column: 9, scope: !7896)
!7983 = !DILocation(line: 289, column: 14, scope: !7896)
!7984 = !DILocation(line: 288, column: 6, scope: !7882)
!7985 = !DILocation(line: 308, column: 12, scope: !7894)
!7986 = !DILocation(line: 308, column: 17, scope: !7894)
!7987 = !DILocation(line: 308, column: 7, scope: !7895)
!7988 = !DILocation(line: 310, column: 6, scope: !7893)
!7989 = !DILocation(line: 309, column: 29, scope: !7893)
!7990 = !DILocation(line: 0, scope: !7893)
!7991 = !DILocation(line: 312, column: 8, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7893, file: !7676, line: 312, column: 8)
!7993 = !DILocation(line: 312, column: 8, scope: !7893)
!7994 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7995, file: !7377, line: 1099, type: !108)
!7995 = distinct !DISubprogram(name: "__set_PSP", scope: !7377, file: !7377, line: 1099, type: !7466, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7996)
!7996 = !{!7994}
!7997 = !DILocation(line: 0, scope: !7995, inlinedAt: !7998)
!7998 = distinct !DILocation(line: 338, column: 5, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7992, file: !7676, line: 312, column: 23)
!8000 = !DILocation(line: 1101, column: 3, scope: !7995, inlinedAt: !7998)
!8001 = !{i64 3759646}
!8002 = !DILocation(line: 341, column: 4, scope: !7999)
!8003 = !DILocation(line: 360, column: 12, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7882, file: !7676, line: 360, column: 6)
!8005 = !DILocation(line: 360, column: 17, scope: !8004)
!8006 = !DILocation(line: 360, column: 41, scope: !8004)
!8007 = !DILocation(line: 360, column: 6, scope: !7882)
!8008 = !DILocation(line: 361, column: 14, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8004, file: !7676, line: 360, column: 47)
!8010 = !DILocation(line: 362, column: 2, scope: !8009)
!8011 = !DILocation(line: 366, column: 12, scope: !7882)
!8012 = !DILocation(line: 369, column: 15, scope: !7882)
!8013 = !DILocation(line: 371, column: 2, scope: !7882)
!8014 = distinct !DISubprogram(name: "bus_fault", scope: !7676, file: !7676, line: 383, type: !8015, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !8017)
!8015 = !DISubroutineType(types: !8016)
!8016 = !{!103, !2979, !103, !7743}
!8017 = !{!8018, !8019, !8020, !8021, !8022}
!8018 = !DILocalVariable(name: "esf", arg: 1, scope: !8014, file: !7676, line: 383, type: !2979)
!8019 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8014, file: !7676, line: 383, type: !103)
!8020 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8014, file: !7676, line: 383, type: !7743)
!8021 = !DILocalVariable(name: "reason", scope: !8014, file: !7676, line: 385, type: !108)
!8022 = !DILocalVariable(name: "bfar", scope: !8023, file: !7676, line: 405, type: !108)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !7676, line: 395, column: 42)
!8024 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 395, column: 6)
!8025 = !DILocation(line: 0, scope: !8014)
!8026 = !DILocation(line: 387, column: 2, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7676, line: 387, column: 2)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7676, line: 387, column: 2)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !7676, line: 387, column: 2)
!8030 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 387, column: 2)
!8031 = !DILocation(line: 389, column: 11, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 389, column: 6)
!8033 = !DILocation(line: 389, column: 16, scope: !8032)
!8034 = !DILocation(line: 389, column: 6, scope: !8014)
!8035 = !DILocation(line: 390, column: 3, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8037, file: !7676, line: 390, column: 3)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !7676, line: 390, column: 3)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7676, line: 390, column: 3)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !7676, line: 390, column: 3)
!8040 = distinct !DILexicalBlock(scope: !8032, file: !7676, line: 389, column: 39)
!8041 = !DILocation(line: 391, column: 2, scope: !8040)
!8042 = !DILocation(line: 392, column: 11, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 392, column: 6)
!8044 = !DILocation(line: 392, column: 16, scope: !8043)
!8045 = !DILocation(line: 392, column: 6, scope: !8014)
!8046 = !DILocation(line: 393, column: 3, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !7676, line: 393, column: 3)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !7676, line: 393, column: 3)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7676, line: 393, column: 3)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !7676, line: 393, column: 3)
!8051 = distinct !DILexicalBlock(scope: !8043, file: !7676, line: 392, column: 41)
!8052 = !DILocation(line: 394, column: 2, scope: !8051)
!8053 = !DILocation(line: 395, column: 11, scope: !8024)
!8054 = !DILocation(line: 395, column: 16, scope: !8024)
!8055 = !DILocation(line: 395, column: 6, scope: !8014)
!8056 = !DILocation(line: 396, column: 3, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8058, file: !7676, line: 396, column: 3)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !7676, line: 396, column: 3)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !7676, line: 396, column: 3)
!8060 = distinct !DILexicalBlock(scope: !8023, file: !7676, line: 396, column: 3)
!8061 = !DILocation(line: 405, column: 3, scope: !8023)
!8062 = !DILocation(line: 0, scope: !8023)
!8063 = !DILocation(line: 407, column: 13, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8023, file: !7676, line: 407, column: 7)
!8065 = !DILocation(line: 407, column: 18, scope: !8064)
!8066 = !DILocation(line: 407, column: 44, scope: !8064)
!8067 = !DILocation(line: 407, column: 7, scope: !8023)
!8068 = !DILocation(line: 408, column: 4, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !7676, line: 408, column: 4)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !7676, line: 408, column: 4)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !7676, line: 408, column: 4)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !7676, line: 408, column: 4)
!8073 = distinct !DILexicalBlock(scope: !8064, file: !7676, line: 407, column: 50)
!8074 = !DILocation(line: 409, column: 24, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8073, file: !7676, line: 409, column: 8)
!8076 = !DILocation(line: 409, column: 8, scope: !8073)
!8077 = !DILocation(line: 411, column: 15, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8075, file: !7676, line: 409, column: 30)
!8079 = !DILocation(line: 412, column: 4, scope: !8078)
!8080 = !DILocation(line: 415, column: 11, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 415, column: 6)
!8082 = !DILocation(line: 415, column: 16, scope: !8081)
!8083 = !DILocation(line: 415, column: 6, scope: !8014)
!8084 = !DILocation(line: 416, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !7676, line: 416, column: 3)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7676, line: 416, column: 3)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7676, line: 416, column: 3)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !7676, line: 416, column: 3)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !7676, line: 415, column: 44)
!8090 = !DILocation(line: 417, column: 2, scope: !8089)
!8091 = !DILocation(line: 418, column: 12, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8014, file: !7676, line: 418, column: 6)
!8093 = !DILocation(line: 418, column: 17, scope: !8092)
!8094 = !DILocation(line: 418, column: 41, scope: !8092)
!8095 = !DILocation(line: 418, column: 6, scope: !8014)
!8096 = !DILocation(line: 423, column: 18, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8092, file: !7676, line: 423, column: 13)
!8098 = !DILocation(line: 423, column: 23, scope: !8097)
!8099 = !DILocation(line: 423, column: 13, scope: !8092)
!8100 = !DILocation(line: 0, scope: !8092)
!8101 = !DILocation(line: 524, column: 12, scope: !8014)
!8102 = !DILocation(line: 526, column: 15, scope: !8014)
!8103 = !DILocation(line: 528, column: 2, scope: !8014)
!8104 = distinct !DISubprogram(name: "usage_fault", scope: !7676, file: !7676, line: 539, type: !8105, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !8109)
!8105 = !DISubroutineType(types: !8106)
!8106 = !{!108, !8107}
!8107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8108, size: 32)
!8108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2980)
!8109 = !{!8110, !8111}
!8110 = !DILocalVariable(name: "esf", arg: 1, scope: !8104, file: !7676, line: 539, type: !8107)
!8111 = !DILocalVariable(name: "reason", scope: !8104, file: !7676, line: 541, type: !108)
!8112 = !DILocation(line: 0, scope: !8104)
!8113 = !DILocation(line: 543, column: 2, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !7676, line: 543, column: 2)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !7676, line: 543, column: 2)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !7676, line: 543, column: 2)
!8117 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 543, column: 2)
!8118 = !DILocation(line: 546, column: 12, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 546, column: 6)
!8120 = !DILocation(line: 546, column: 17, scope: !8119)
!8121 = !DILocation(line: 546, column: 43, scope: !8119)
!8122 = !DILocation(line: 546, column: 6, scope: !8104)
!8123 = !DILocation(line: 547, column: 3, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !7676, line: 547, column: 3)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !7676, line: 547, column: 3)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !7676, line: 547, column: 3)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !7676, line: 547, column: 3)
!8128 = distinct !DILexicalBlock(scope: !8119, file: !7676, line: 546, column: 49)
!8129 = !DILocation(line: 548, column: 2, scope: !8128)
!8130 = !DILocation(line: 549, column: 12, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 549, column: 6)
!8132 = !DILocation(line: 549, column: 17, scope: !8131)
!8133 = !DILocation(line: 549, column: 43, scope: !8131)
!8134 = !DILocation(line: 549, column: 6, scope: !8104)
!8135 = !DILocation(line: 550, column: 3, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !7676, line: 550, column: 3)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !7676, line: 550, column: 3)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !7676, line: 550, column: 3)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !7676, line: 550, column: 3)
!8140 = distinct !DILexicalBlock(scope: !8131, file: !7676, line: 549, column: 49)
!8141 = !DILocation(line: 551, column: 2, scope: !8140)
!8142 = !DILocation(line: 567, column: 12, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 567, column: 6)
!8144 = !DILocation(line: 567, column: 17, scope: !8143)
!8145 = !DILocation(line: 567, column: 38, scope: !8143)
!8146 = !DILocation(line: 567, column: 6, scope: !8104)
!8147 = !DILocation(line: 568, column: 3, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !7676, line: 568, column: 3)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !7676, line: 568, column: 3)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !7676, line: 568, column: 3)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !7676, line: 568, column: 3)
!8152 = distinct !DILexicalBlock(scope: !8143, file: !7676, line: 567, column: 44)
!8153 = !DILocation(line: 569, column: 2, scope: !8152)
!8154 = !DILocation(line: 570, column: 12, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 570, column: 6)
!8156 = !DILocation(line: 570, column: 17, scope: !8155)
!8157 = !DILocation(line: 570, column: 39, scope: !8155)
!8158 = !DILocation(line: 570, column: 6, scope: !8104)
!8159 = !DILocation(line: 571, column: 3, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !7676, line: 571, column: 3)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !7676, line: 571, column: 3)
!8162 = distinct !DILexicalBlock(scope: !8163, file: !7676, line: 571, column: 3)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !7676, line: 571, column: 3)
!8164 = distinct !DILexicalBlock(scope: !8155, file: !7676, line: 570, column: 45)
!8165 = !DILocation(line: 572, column: 2, scope: !8164)
!8166 = !DILocation(line: 573, column: 12, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 573, column: 6)
!8168 = !DILocation(line: 573, column: 17, scope: !8167)
!8169 = !DILocation(line: 573, column: 42, scope: !8167)
!8170 = !DILocation(line: 573, column: 6, scope: !8104)
!8171 = !DILocation(line: 574, column: 3, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !7676, line: 574, column: 3)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !7676, line: 574, column: 3)
!8174 = distinct !DILexicalBlock(scope: !8175, file: !7676, line: 574, column: 3)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !7676, line: 574, column: 3)
!8176 = distinct !DILexicalBlock(scope: !8167, file: !7676, line: 573, column: 48)
!8177 = !DILocation(line: 575, column: 2, scope: !8176)
!8178 = !DILocation(line: 576, column: 12, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8104, file: !7676, line: 576, column: 6)
!8180 = !DILocation(line: 576, column: 17, scope: !8179)
!8181 = !DILocation(line: 576, column: 44, scope: !8179)
!8182 = !DILocation(line: 576, column: 6, scope: !8104)
!8183 = !DILocation(line: 577, column: 3, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !7676, line: 577, column: 3)
!8185 = distinct !DILexicalBlock(scope: !8186, file: !7676, line: 577, column: 3)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !7676, line: 577, column: 3)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !7676, line: 577, column: 3)
!8188 = distinct !DILexicalBlock(scope: !8179, file: !7676, line: 576, column: 50)
!8189 = !DILocation(line: 578, column: 2, scope: !8188)
!8190 = !DILocation(line: 581, column: 12, scope: !8104)
!8191 = !DILocation(line: 583, column: 2, scope: !8104)
!8192 = distinct !DISubprogram(name: "debug_monitor", scope: !7676, file: !7676, line: 632, type: !8193, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !8195)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{null, !2979, !7743}
!8195 = !{!8196, !8197}
!8196 = !DILocalVariable(name: "esf", arg: 1, scope: !8192, file: !7676, line: 632, type: !2979)
!8197 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8192, file: !7676, line: 632, type: !7743)
!8198 = !DILocation(line: 0, scope: !8192)
!8199 = !DILocation(line: 634, column: 15, scope: !8192)
!8200 = !DILocation(line: 636, column: 2, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !7676, line: 636, column: 2)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !7676, line: 636, column: 2)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !7676, line: 636, column: 2)
!8204 = distinct !DILexicalBlock(scope: !8192, file: !7676, line: 636, column: 2)
!8205 = !DILocation(line: 652, column: 1, scope: !8192)
!8206 = distinct !DISubprogram(name: "reserved_exception", scope: !7676, file: !7676, line: 776, type: !8207, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !8209)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{null, !8107, !103}
!8209 = !{!8210, !8211}
!8210 = !DILocalVariable(name: "esf", arg: 1, scope: !8206, file: !7676, line: 776, type: !8107)
!8211 = !DILocalVariable(name: "fault", arg: 2, scope: !8206, file: !7676, line: 776, type: !103)
!8212 = !DILocation(line: 0, scope: !8206)
!8213 = !DILocation(line: 780, column: 2, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !7676, line: 780, column: 2)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !7676, line: 780, column: 2)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !7676, line: 780, column: 2)
!8217 = distinct !DILexicalBlock(scope: !8206, file: !7676, line: 780, column: 2)
!8218 = !DILocation(line: 783, column: 1, scope: !8206)
!8219 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7676, file: !7676, line: 658, type: !8220, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !8222)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!131, !2979}
!8222 = !{!8223, !8224, !8225}
!8223 = !DILocalVariable(name: "esf", arg: 1, scope: !8219, file: !7676, line: 658, type: !2979)
!8224 = !DILocalVariable(name: "ret_addr", scope: !8219, file: !7676, line: 660, type: !2753)
!8225 = !DILocalVariable(name: "fault_insn", scope: !8219, file: !7676, line: 686, type: !121)
!8226 = !DILocation(line: 0, scope: !8219)
!8227 = !DILocation(line: 660, column: 46, scope: !8219)
!8228 = !DILocation(line: 660, column: 23, scope: !8219)
!8229 = !DILocation(line: 682, column: 11, scope: !8219)
!8230 = !DILocation(line: 271, column: 3, scope: !8231, inlinedAt: !8232)
!8231 = distinct !DISubprogram(name: "__DSB", scope: !7377, file: !7377, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !251)
!8232 = distinct !DILocation(line: 683, column: 2, scope: !8219)
!8233 = !{i64 3735781}
!8234 = !DILocation(line: 260, column: 3, scope: !8235, inlinedAt: !8236)
!8235 = distinct !DISubprogram(name: "__ISB", scope: !7377, file: !7377, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !251)
!8236 = distinct !DILocation(line: 684, column: 2, scope: !8219)
!8237 = !{i64 3735498}
!8238 = !DILocation(line: 686, column: 35, scope: !8219)
!8239 = !DILocation(line: 686, column: 24, scope: !8219)
!8240 = !DILocation(line: 688, column: 11, scope: !8219)
!8241 = !DILocation(line: 271, column: 3, scope: !8231, inlinedAt: !8242)
!8242 = distinct !DILocation(line: 689, column: 2, scope: !8219)
!8243 = !DILocation(line: 260, column: 3, scope: !8235, inlinedAt: !8244)
!8244 = distinct !DILocation(line: 690, column: 2, scope: !8219)
!8245 = !DILocation(line: 693, column: 45, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8219, file: !7676, line: 693, column: 6)
!8247 = !DILocation(line: 699, column: 1, scope: !8219)
!8248 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7676, file: !7676, line: 1107, type: !334, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !251)
!8249 = !DILocation(line: 1111, column: 11, scope: !8248)
!8250 = !DILocation(line: 1136, column: 1, scope: !8248)
!8251 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8252, file: !8252, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !8253)
!8252 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8253 = !{!8254}
!8254 = !DILocalVariable(name: "irq", scope: !8251, file: !8252, line: 28, type: !103)
!8255 = !DILocation(line: 0, scope: !8251)
!8256 = !DILocation(line: 30, column: 2, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8251, file: !8252, line: 30, column: 2)
!8258 = !DILocation(line: 31, column: 3, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !8252, line: 30, column: 39)
!8260 = distinct !DILexicalBlock(scope: !8257, file: !8252, line: 30, column: 2)
!8261 = !DILocation(line: 30, column: 35, scope: !8260)
!8262 = !DILocation(line: 30, column: 13, scope: !8260)
!8263 = distinct !{!8263, !8256, !8264}
!8264 = !DILocation(line: 32, column: 2, scope: !8257)
!8265 = !DILocation(line: 33, column: 1, scope: !8251)
!8266 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7411, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3022, retainedNodes: !8267)
!8267 = !{!8268, !8269}
!8268 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8266, file: !624, line: 1814, type: !900)
!8269 = !DILocalVariable(name: "priority", arg: 2, scope: !8266, file: !624, line: 1814, type: !108)
!8270 = !DILocation(line: 0, scope: !8266)
!8271 = !DILocation(line: 1816, column: 7, scope: !8266)
!8272 = !DILocation(line: 0, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8266, file: !624, line: 1816, column: 7)
!8274 = !DILocation(line: 1824, column: 1, scope: !8266)
!8275 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8276, file: !8276, line: 27, type: !8277, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !8380)
!8276 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8277 = !DISubroutineType(types: !8278)
!8278 = !{null, !8279}
!8279 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !8280)
!8280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8281, size: 32)
!8281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !8282)
!8282 = !{!8283, !8341, !8353, !8354, !8355, !8356, !8362, !8375}
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8281, file: !163, line: 247, baseType: !8284, size: 384)
!8284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !8285)
!8285 = !{!8286, !8310, !8317, !8318, !8319, !8328, !8329, !8330}
!8286 = !DIDerivedType(tag: DW_TAG_member, scope: !8284, file: !163, line: 60, baseType: !8287, size: 64)
!8287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8284, file: !163, line: 60, size: 64, elements: !8288)
!8288 = !{!8289, !8304}
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8287, file: !163, line: 61, baseType: !8290, size: 64)
!8290 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !8291)
!8291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !8292)
!8292 = !{!8293, !8299}
!8293 = !DIDerivedType(tag: DW_TAG_member, scope: !8291, file: !146, line: 38, baseType: !8294, size: 32)
!8294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8291, file: !146, line: 38, size: 32, elements: !8295)
!8295 = !{!8296, !8298}
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8294, file: !146, line: 39, baseType: !8297, size: 32)
!8297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8291, size: 32)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8294, file: !146, line: 40, baseType: !8297, size: 32)
!8299 = !DIDerivedType(tag: DW_TAG_member, scope: !8291, file: !146, line: 42, baseType: !8300, size: 32, offset: 32)
!8300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8291, file: !146, line: 42, size: 32, elements: !8301)
!8301 = !{!8302, !8303}
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8300, file: !146, line: 43, baseType: !8297, size: 32)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8300, file: !146, line: 44, baseType: !8297, size: 32)
!8304 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8287, file: !163, line: 62, baseType: !8305, size: 64)
!8305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !8306)
!8306 = !{!8307}
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8305, file: !175, line: 50, baseType: !8308, size: 64)
!8308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8309, size: 64, elements: !180)
!8309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8305, size: 32)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8284, file: !163, line: 68, baseType: !8311, size: 32, offset: 64)
!8311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8312, size: 32)
!8312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !8313)
!8313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !8314)
!8314 = !{!8315}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8313, file: !141, line: 232, baseType: !8316, size: 64)
!8316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !8291)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8284, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8284, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!8319 = !DIDerivedType(tag: DW_TAG_member, scope: !8284, file: !163, line: 90, baseType: !8320, size: 16, offset: 112)
!8320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8284, file: !163, line: 90, size: 16, elements: !8321)
!8321 = !{!8322, !8327}
!8322 = !DIDerivedType(tag: DW_TAG_member, scope: !8320, file: !163, line: 91, baseType: !8323, size: 16)
!8323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8320, file: !163, line: 91, size: 16, elements: !8324)
!8324 = !{!8325, !8326}
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8323, file: !163, line: 96, baseType: !195, size: 8)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8323, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8320, file: !163, line: 100, baseType: !121, size: 16)
!8328 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8284, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!8329 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8284, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8284, file: !163, line: 131, baseType: !8331, size: 192, offset: 192)
!8331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !8332)
!8332 = !{!8333, !8334, !8340}
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8331, file: !141, line: 245, baseType: !8290, size: 64)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8331, file: !141, line: 246, baseType: !8335, size: 32, offset: 64)
!8335 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !8336)
!8336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8337, size: 32)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{null, !8339}
!8339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8331, size: 32)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8331, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8281, file: !163, line: 250, baseType: !8342, size: 288, offset: 384)
!8342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !8343)
!8343 = !{!8344, !8345, !8346, !8347, !8348, !8349, !8350, !8351, !8352}
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8342, file: !214, line: 26, baseType: !108, size: 32)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8342, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8342, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8342, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8342, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8342, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8342, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8342, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8342, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8281, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8281, file: !163, line: 256, baseType: !8312, size: 64, offset: 704)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8281, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8281, file: !163, line: 300, baseType: !8357, size: 96, offset: 800)
!8357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !8358)
!8358 = !{!8359, !8360, !8361}
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8357, file: !163, line: 153, baseType: !22, size: 32)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8357, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8357, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8281, file: !163, line: 325, baseType: !8363, size: 32, offset: 896)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8364, size: 32)
!8364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !8365)
!8365 = !{!8366, !8372, !8373}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8364, file: !137, line: 5074, baseType: !8367, size: 96)
!8367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !8368)
!8368 = !{!8369, !8370, !8371}
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8367, file: !240, line: 57, baseType: !243, size: 32)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8367, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8367, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8364, file: !137, line: 5075, baseType: !8312, size: 64, offset: 96)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8364, file: !137, line: 5076, baseType: !8374, offset: 160)
!8374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8281, file: !163, line: 343, baseType: !8376, size: 64, offset: 928)
!8376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !8377)
!8377 = !{!8378, !8379}
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8376, file: !214, line: 63, baseType: !108, size: 32)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8376, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!8380 = !{!8381}
!8381 = !DILocalVariable(name: "thread", arg: 1, scope: !8275, file: !8276, line: 27, type: !8279)
!8382 = !DILocation(line: 0, scope: !8275)
!8383 = !DILocation(line: 29, column: 6, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8275, file: !8276, line: 29, column: 6)
!8385 = !DILocation(line: 29, column: 15, scope: !8384)
!8386 = !DILocation(line: 29, column: 6, scope: !8275)
!8387 = !DILocation(line: 1031, column: 3, scope: !8388, inlinedAt: !8391)
!8388 = distinct !DISubprogram(name: "__get_IPSR", scope: !7377, file: !7377, line: 1027, type: !3655, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "result", scope: !8388, file: !7377, line: 1029, type: !108)
!8391 = distinct !DILocation(line: 48, column: 10, scope: !8392, inlinedAt: !8396)
!8392 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8393, file: !8393, line: 46, type: !8394, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !251)
!8393 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8394 = !DISubroutineType(types: !8395)
!8395 = !{!131}
!8396 = distinct !DILocation(line: 30, column: 7, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !8276, line: 30, column: 7)
!8398 = distinct !DILexicalBlock(scope: !8384, file: !8276, line: 29, column: 26)
!8399 = !{i64 3724629}
!8400 = !DILocation(line: 0, scope: !8388, inlinedAt: !8391)
!8401 = !DILocation(line: 48, column: 9, scope: !8392, inlinedAt: !8396)
!8402 = !DILocation(line: 30, column: 7, scope: !8398)
!8403 = !DILocation(line: 42, column: 14, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8397, file: !8276, line: 30, column: 25)
!8405 = !DILocation(line: 48, column: 15, scope: !8404)
!8406 = !DILocation(line: 49, column: 3, scope: !8404)
!8407 = !DILocation(line: 52, column: 2, scope: !8275)
!8408 = !DILocation(line: 53, column: 1, scope: !8275)
!8409 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !486, file: !486, line: 127, type: !334, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !479, retainedNodes: !251)
!8410 = !DILocation(line: 134, column: 2, scope: !8409)
!8411 = !DILocation(line: 156, column: 1, scope: !8409)
!8412 = !DILocation(line: 0, scope: !485)
!8413 = !DILocation(line: 289, column: 36, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !485, file: !486, line: 285, column: 2)
!8415 = !DILocation(line: 289, column: 42, scope: !8414)
!8416 = !DILocation(line: 300, column: 36, scope: !485)
!8417 = !DILocation(line: 301, column: 35, scope: !485)
!8418 = !DILocation(line: 302, column: 37, scope: !485)
!8419 = !DILocation(line: 311, column: 2, scope: !485)
!8420 = !DILocation(line: 316, column: 1, scope: !485)
!8421 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !652, file: !652, line: 180, type: !334, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8422 = !DILocation(line: 188, column: 12, scope: !8421)
!8423 = !DILocation(line: 271, column: 3, scope: !8424, inlinedAt: !8425)
!8424 = distinct !DISubprogram(name: "__DSB", scope: !7377, file: !7377, line: 269, type: !334, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8425 = distinct !DILocation(line: 192, column: 2, scope: !8421)
!8426 = !{i64 3912531}
!8427 = !DILocation(line: 260, column: 3, scope: !8428, inlinedAt: !8429)
!8428 = distinct !DISubprogram(name: "__ISB", scope: !7377, file: !7377, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8429 = distinct !DILocation(line: 193, column: 2, scope: !8421)
!8430 = !{i64 3912248}
!8431 = !DILocation(line: 194, column: 1, scope: !8421)
!8432 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !652, file: !652, line: 199, type: !334, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8433 = !DILocation(line: 282, column: 3, scope: !8434, inlinedAt: !8435)
!8434 = distinct !DISubprogram(name: "__DMB", scope: !7377, file: !7377, line: 280, type: !334, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !251)
!8435 = distinct !DILocation(line: 202, column: 2, scope: !8432)
!8436 = !{i64 3912807}
!8437 = !DILocation(line: 205, column: 12, scope: !8432)
!8438 = !DILocation(line: 206, column: 1, scope: !8432)
!8439 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !652, file: !652, line: 275, type: !8440, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8453)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{null, !8442, !1984, !7643, !7643}
!8442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8443, size: 32)
!8443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8444)
!8444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !596, line: 52, size: 96, elements: !8445)
!8445 = !{!8446, !8447, !8448}
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8444, file: !596, line: 53, baseType: !22, size: 32)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8444, file: !596, line: 54, baseType: !132, size: 32, offset: 32)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8444, file: !596, line: 55, baseType: !8449, size: 32, offset: 64)
!8449 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !602, line: 151, baseType: !8450)
!8450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !602, line: 149, size: 32, elements: !8451)
!8451 = !{!8452}
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8450, file: !602, line: 150, baseType: !108, size: 32)
!8453 = !{!8454, !8455, !8456, !8457}
!8454 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8439, file: !652, line: 276, type: !8442)
!8455 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8439, file: !652, line: 276, type: !1984)
!8456 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8439, file: !652, line: 277, type: !7643)
!8457 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8439, file: !652, line: 277, type: !7643)
!8458 = !DILocation(line: 0, scope: !8439)
!8459 = !DILocation(line: 279, column: 6, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8439, file: !652, line: 279, column: 6)
!8461 = !DILocation(line: 285, column: 1, scope: !8439)
!8462 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8463, file: !8463, line: 220, type: !8464, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8466)
!8463 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8464 = !DISubroutineType(types: !8465)
!8465 = !{!103, !8442, !1984, !7643, !7643}
!8466 = !{!8467, !8468, !8469, !8470, !8471}
!8467 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8462, file: !8463, line: 221, type: !8442)
!8468 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8462, file: !8463, line: 221, type: !1984)
!8469 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8462, file: !8463, line: 222, type: !7643)
!8470 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8462, file: !8463, line: 223, type: !7643)
!8471 = !DILocalVariable(name: "mpu_reg_index", scope: !8462, file: !8463, line: 225, type: !103)
!8472 = !DILocation(line: 0, scope: !8462)
!8473 = !DILocation(line: 225, column: 22, scope: !8462)
!8474 = !DILocation(line: 233, column: 18, scope: !8462)
!8475 = !DILocation(line: 236, column: 23, scope: !8462)
!8476 = !DILocation(line: 236, column: 21, scope: !8462)
!8477 = !DILocation(line: 238, column: 2, scope: !8462)
!8478 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !652, file: !652, line: 105, type: !8479, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8481)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{!103, !8442, !185, !185, !131}
!8481 = !{!8482, !8483, !8484, !8485, !8486, !8487}
!8482 = !DILocalVariable(name: "regions", arg: 1, scope: !8478, file: !652, line: 106, type: !8442)
!8483 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8478, file: !652, line: 106, type: !185)
!8484 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8478, file: !652, line: 106, type: !185)
!8485 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8478, file: !652, line: 107, type: !131)
!8486 = !DILocalVariable(name: "i", scope: !8478, file: !652, line: 109, type: !103)
!8487 = !DILocalVariable(name: "reg_index", scope: !8478, file: !652, line: 110, type: !103)
!8488 = !DILocation(line: 0, scope: !8478)
!8489 = !DILocation(line: 110, column: 18, scope: !8478)
!8490 = !DILocation(line: 112, column: 16, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !652, line: 112, column: 2)
!8492 = distinct !DILexicalBlock(scope: !8478, file: !652, line: 112, column: 2)
!8493 = !DILocation(line: 112, column: 2, scope: !8492)
!8494 = !DILocation(line: 113, column: 7, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !652, line: 113, column: 7)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !652, line: 112, column: 36)
!8497 = !DILocation(line: 113, column: 18, scope: !8495)
!8498 = !DILocation(line: 113, column: 23, scope: !8495)
!8499 = !DILocation(line: 113, column: 7, scope: !8496)
!8500 = !DILocation(line: 118, column: 23, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8496, file: !652, line: 118, column: 7)
!8502 = !DILocation(line: 119, column: 7, scope: !8501)
!8503 = !DILocation(line: 118, column: 7, scope: !8496)
!8504 = !DILocation(line: 120, column: 4, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !652, line: 120, column: 4)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !652, line: 120, column: 4)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !652, line: 120, column: 4)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !652, line: 120, column: 4)
!8509 = distinct !DILexicalBlock(scope: !8501, file: !652, line: 119, column: 45)
!8510 = !DILocation(line: 121, column: 4, scope: !8509)
!8511 = !DILocation(line: 124, column: 36, scope: !8496)
!8512 = !DILocation(line: 124, column: 15, scope: !8496)
!8513 = !DILocation(line: 126, column: 17, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8496, file: !652, line: 126, column: 7)
!8515 = !DILocation(line: 126, column: 7, scope: !8496)
!8516 = !DILocation(line: 131, column: 12, scope: !8496)
!8517 = !DILocation(line: 132, column: 2, scope: !8496)
!8518 = !DILocation(line: 112, column: 32, scope: !8491)
!8519 = distinct !{!8519, !8493, !8520}
!8520 = !DILocation(line: 132, column: 2, scope: !8492)
!8521 = !DILocation(line: 135, column: 1, scope: !8478)
!8522 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8463, file: !8463, line: 63, type: !8523, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8525)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{!103, !8442}
!8525 = !{!8526, !8527}
!8526 = !DILocalVariable(name: "part", arg: 1, scope: !8522, file: !8463, line: 63, type: !8442)
!8527 = !DILocalVariable(name: "partition_is_valid", scope: !8522, file: !8463, line: 70, type: !103)
!8528 = !DILocation(line: 0, scope: !8522)
!8529 = !DILocation(line: 71, column: 11, scope: !8522)
!8530 = !DILocation(line: 71, column: 37, scope: !8522)
!8531 = !DILocation(line: 72, column: 3, scope: !8522)
!8532 = !DILocation(line: 71, column: 30, scope: !8522)
!8533 = !DILocation(line: 75, column: 11, scope: !8522)
!8534 = !DILocation(line: 75, column: 17, scope: !8522)
!8535 = !DILocation(line: 75, column: 38, scope: !8522)
!8536 = !DILocation(line: 77, column: 2, scope: !8522)
!8537 = distinct !DISubprogram(name: "mpu_configure_region", scope: !652, file: !652, line: 79, type: !8538, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8540)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!103, !1984, !8442}
!8540 = !{!8541, !8542, !8543}
!8541 = !DILocalVariable(name: "index", arg: 1, scope: !8537, file: !652, line: 79, type: !1984)
!8542 = !DILocalVariable(name: "new_region", arg: 2, scope: !8537, file: !652, line: 80, type: !8442)
!8543 = !DILocalVariable(name: "region_conf", scope: !8537, file: !652, line: 82, type: !641)
!8544 = !DILocation(line: 0, scope: !8537)
!8545 = !DILocation(line: 82, column: 2, scope: !8537)
!8546 = !DILocation(line: 82, column: 24, scope: !8537)
!8547 = !DILocation(line: 87, column: 33, scope: !8537)
!8548 = !DILocation(line: 87, column: 14, scope: !8537)
!8549 = !DILocation(line: 87, column: 19, scope: !8537)
!8550 = !DILocation(line: 91, column: 55, scope: !8537)
!8551 = !DILocation(line: 92, column: 16, scope: !8537)
!8552 = !DILocation(line: 92, column: 53, scope: !8537)
!8553 = !DILocation(line: 91, column: 2, scope: !8537)
!8554 = !DILocation(line: 95, column: 9, scope: !8537)
!8555 = !DILocation(line: 97, column: 1, scope: !8537)
!8556 = !DILocation(line: 95, column: 2, scope: !8537)
!8557 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8463, file: !8463, line: 113, type: !8558, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8563)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !8560, !8561, !108, !108}
!8560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!8561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8562, size: 32)
!8562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8449)
!8563 = !{!8564, !8565, !8566, !8567}
!8564 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8557, file: !8463, line: 114, type: !8560)
!8565 = !DILocalVariable(name: "attr", arg: 2, scope: !8557, file: !8463, line: 115, type: !8561)
!8566 = !DILocalVariable(name: "base", arg: 3, scope: !8557, file: !8463, line: 115, type: !108)
!8567 = !DILocalVariable(name: "size", arg: 4, scope: !8557, file: !8463, line: 115, type: !108)
!8568 = !DILocation(line: 0, scope: !8557)
!8569 = !DILocation(line: 127, column: 23, scope: !8557)
!8570 = !DILocation(line: 127, column: 35, scope: !8557)
!8571 = !DILocation(line: 127, column: 33, scope: !8557)
!8572 = !DILocation(line: 127, column: 10, scope: !8557)
!8573 = !DILocation(line: 127, column: 15, scope: !8557)
!8574 = !DILocation(line: 129, column: 1, scope: !8557)
!8575 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !652, file: !652, line: 57, type: !8576, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8578)
!8576 = !DISubroutineType(types: !8577)
!8577 = !{!103, !1984, !639}
!8578 = !{!8579, !8580}
!8579 = !DILocalVariable(name: "index", arg: 1, scope: !8575, file: !652, line: 57, type: !1984)
!8580 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8575, file: !652, line: 58, type: !639)
!8581 = !DILocation(line: 0, scope: !8575)
!8582 = !DILocation(line: 61, column: 6, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8575, file: !652, line: 61, column: 6)
!8584 = !DILocation(line: 61, column: 12, scope: !8583)
!8585 = !DILocation(line: 61, column: 6, scope: !8575)
!8586 = !DILocation(line: 64, column: 3, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !652, line: 64, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !652, line: 64, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !652, line: 64, column: 3)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !652, line: 64, column: 3)
!8591 = distinct !DILexicalBlock(scope: !8583, file: !652, line: 61, column: 40)
!8592 = !DILocation(line: 65, column: 3, scope: !8591)
!8593 = !DILocation(line: 71, column: 2, scope: !8575)
!8594 = !DILocation(line: 73, column: 2, scope: !8575)
!8595 = !DILocation(line: 74, column: 1, scope: !8575)
!8596 = distinct !DISubprogram(name: "region_init", scope: !8463, file: !8463, line: 29, type: !8597, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8599)
!8597 = !DISubroutineType(types: !8598)
!8598 = !{null, !7643, !639}
!8599 = !{!8600, !8601}
!8600 = !DILocalVariable(name: "index", arg: 1, scope: !8596, file: !8463, line: 29, type: !7643)
!8601 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8596, file: !8463, line: 30, type: !639)
!8602 = !DILocation(line: 0, scope: !8596)
!8603 = !DILocation(line: 33, column: 2, scope: !8596)
!8604 = !DILocation(line: 47, column: 28, scope: !8596)
!8605 = !DILocation(line: 47, column: 33, scope: !8596)
!8606 = !DILocation(line: 48, column: 26, scope: !8596)
!8607 = !DILocation(line: 47, column: 12, scope: !8596)
!8608 = !DILocation(line: 49, column: 32, scope: !8596)
!8609 = !DILocation(line: 49, column: 37, scope: !8596)
!8610 = !DILocation(line: 49, column: 12, scope: !8596)
!8611 = !DILocation(line: 53, column: 1, scope: !8596)
!8612 = distinct !DISubprogram(name: "set_region_number", scope: !8613, file: !8613, line: 32, type: !7466, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8614)
!8613 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8614 = !{!8615}
!8615 = !DILocalVariable(name: "index", arg: 1, scope: !8612, file: !8613, line: 32, type: !108)
!8616 = !DILocation(line: 0, scope: !8612)
!8617 = !DILocation(line: 34, column: 11, scope: !8612)
!8618 = !DILocation(line: 35, column: 1, scope: !8612)
!8619 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8463, file: !8463, line: 88, type: !8620, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8622)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{!108, !108}
!8622 = !{!8623}
!8623 = !DILocalVariable(name: "size", arg: 1, scope: !8619, file: !8463, line: 88, type: !108)
!8624 = !DILocation(line: 0, scope: !8619)
!8625 = !DILocation(line: 91, column: 11, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8619, file: !8463, line: 91, column: 6)
!8627 = !DILocation(line: 91, column: 6, scope: !8619)
!8628 = !DILocation(line: 100, column: 11, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8619, file: !8463, line: 100, column: 6)
!8630 = !DILocation(line: 100, column: 6, scope: !8619)
!8631 = !DILocation(line: 104, column: 35, scope: !8619)
!8632 = !DILocation(line: 104, column: 16, scope: !8619)
!8633 = !DILocation(line: 104, column: 50, scope: !8619)
!8634 = !DILocation(line: 104, column: 72, scope: !8619)
!8635 = !DILocation(line: 104, column: 2, scope: !8619)
!8636 = !DILocation(line: 106, column: 1, scope: !8619)
!8637 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !652, file: !652, line: 307, type: !8638, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8640)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{null, !8442, !185}
!8640 = !{!8641, !8642}
!8641 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8637, file: !652, line: 308, type: !8442)
!8642 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8637, file: !652, line: 308, type: !185)
!8643 = !DILocation(line: 0, scope: !8637)
!8644 = !DILocation(line: 310, column: 6, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8637, file: !652, line: 310, column: 6)
!8646 = !DILocation(line: 316, column: 1, scope: !8637)
!8647 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8463, file: !8463, line: 249, type: !8648, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8650)
!8648 = !DISubroutineType(types: !8649)
!8649 = !{!103, !8442, !185}
!8650 = !{!8651, !8652, !8653, !8654}
!8651 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8647, file: !8463, line: 250, type: !8442)
!8652 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8647, file: !8463, line: 250, type: !185)
!8653 = !DILocalVariable(name: "mpu_reg_index", scope: !8647, file: !8463, line: 252, type: !103)
!8654 = !DILocalVariable(name: "i", scope: !8655, file: !8463, line: 264, type: !103)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !8463, line: 264, column: 3)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8463, line: 261, column: 32)
!8657 = distinct !DILexicalBlock(scope: !8647, file: !8463, line: 261, column: 6)
!8658 = !DILocation(line: 0, scope: !8647)
!8659 = !DILocation(line: 252, column: 22, scope: !8647)
!8660 = !DILocation(line: 258, column: 18, scope: !8647)
!8661 = !DILocation(line: 261, column: 20, scope: !8657)
!8662 = !DILocation(line: 261, column: 6, scope: !8647)
!8663 = !DILocation(line: 0, scope: !8655)
!8664 = !DILocation(line: 265, column: 4, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8666, file: !8463, line: 264, column: 59)
!8666 = distinct !DILexicalBlock(scope: !8655, file: !8463, line: 264, column: 3)
!8667 = !DILocation(line: 264, column: 55, scope: !8666)
!8668 = !DILocation(line: 264, column: 33, scope: !8666)
!8669 = !DILocation(line: 264, column: 3, scope: !8655)
!8670 = distinct !{!8670, !8669, !8671}
!8671 = !DILocation(line: 266, column: 3, scope: !8655)
!8672 = !DILocation(line: 269, column: 2, scope: !8647)
!8673 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8674, file: !8674, line: 218, type: !7466, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8675)
!8674 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8675 = !{!8676}
!8676 = !DILocalVariable(name: "rnr", arg: 1, scope: !8673, file: !8674, line: 218, type: !108)
!8677 = !DILocation(line: 0, scope: !8673)
!8678 = !DILocation(line: 220, column: 12, scope: !8673)
!8679 = !DILocation(line: 221, column: 13, scope: !8673)
!8680 = !DILocation(line: 222, column: 1, scope: !8673)
!8681 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !652, file: !652, line: 326, type: !8682, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !619, retainedNodes: !8684)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!103}
!8684 = !{!8685}
!8685 = !DILocalVariable(name: "r_index", scope: !8681, file: !652, line: 328, type: !108)
!8686 = !DILocation(line: 330, column: 17, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8681, file: !652, line: 330, column: 6)
!8688 = !DILocation(line: 330, column: 29, scope: !8687)
!8689 = !DILocation(line: 330, column: 6, scope: !8681)
!8690 = !DILocation(line: 347, column: 2, scope: !8681)
!8691 = !DILocation(line: 0, scope: !8681)
!8692 = !DILocation(line: 364, column: 29, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !652, line: 364, column: 2)
!8694 = distinct !DILexicalBlock(scope: !8681, file: !652, line: 364, column: 2)
!8695 = !DILocation(line: 364, column: 2, scope: !8694)
!8696 = !DILocation(line: 365, column: 25, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8693, file: !652, line: 364, column: 66)
!8698 = !DILocation(line: 365, column: 3, scope: !8697)
!8699 = !DILocation(line: 364, column: 62, scope: !8693)
!8700 = distinct !{!8700, !8695, !8701}
!8701 = !DILocation(line: 366, column: 2, scope: !8694)
!8702 = !DILocation(line: 369, column: 23, scope: !8681)
!8703 = !DILocation(line: 369, column: 21, scope: !8681)
!8704 = !DILocation(line: 372, column: 2, scope: !8681)
!8705 = !DILocation(line: 443, column: 2, scope: !8681)
!8706 = !DILocation(line: 444, column: 1, scope: !8681)
!8707 = distinct !DISubprogram(name: "strcpy", scope: !8708, file: !8708, line: 20, type: !8709, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8713)
!8708 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!277, !8711, !8712}
!8711 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !277)
!8712 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !337)
!8713 = !{!8714, !8715, !8716}
!8714 = !DILocalVariable(name: "d", arg: 1, scope: !8707, file: !8708, line: 20, type: !8711)
!8715 = !DILocalVariable(name: "s", arg: 2, scope: !8707, file: !8708, line: 20, type: !8712)
!8716 = !DILocalVariable(name: "dest", scope: !8707, file: !8708, line: 22, type: !277)
!8717 = !DILocation(line: 0, scope: !8707)
!8718 = !DILocation(line: 24, column: 9, scope: !8707)
!8719 = !DILocation(line: 24, column: 12, scope: !8707)
!8720 = !DILocation(line: 24, column: 2, scope: !8707)
!8721 = !DILocation(line: 25, column: 6, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8707, file: !8708, line: 24, column: 21)
!8723 = !DILocation(line: 26, column: 4, scope: !8722)
!8724 = !DILocation(line: 27, column: 4, scope: !8722)
!8725 = distinct !{!8725, !8720, !8726}
!8726 = !DILocation(line: 28, column: 2, scope: !8707)
!8727 = !DILocation(line: 30, column: 5, scope: !8707)
!8728 = !DILocation(line: 32, column: 2, scope: !8707)
!8729 = distinct !DISubprogram(name: "strncpy", scope: !8708, file: !8708, line: 42, type: !8730, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8732)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!277, !8711, !8712, !132}
!8732 = !{!8733, !8734, !8735, !8736}
!8733 = !DILocalVariable(name: "d", arg: 1, scope: !8729, file: !8708, line: 42, type: !8711)
!8734 = !DILocalVariable(name: "s", arg: 2, scope: !8729, file: !8708, line: 42, type: !8712)
!8735 = !DILocalVariable(name: "n", arg: 3, scope: !8729, file: !8708, line: 42, type: !132)
!8736 = !DILocalVariable(name: "dest", scope: !8729, file: !8708, line: 44, type: !277)
!8737 = !DILocation(line: 0, scope: !8729)
!8738 = !DILocation(line: 46, column: 12, scope: !8729)
!8739 = !DILocation(line: 46, column: 17, scope: !8729)
!8740 = !DILocation(line: 46, column: 20, scope: !8729)
!8741 = !DILocation(line: 46, column: 23, scope: !8729)
!8742 = !DILocation(line: 46, column: 2, scope: !8729)
!8743 = !DILocation(line: 47, column: 6, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8729, file: !8708, line: 46, column: 32)
!8745 = !DILocation(line: 48, column: 4, scope: !8744)
!8746 = !DILocation(line: 49, column: 4, scope: !8744)
!8747 = !DILocation(line: 50, column: 4, scope: !8744)
!8748 = distinct !{!8748, !8742, !8749}
!8749 = !DILocation(line: 51, column: 2, scope: !8729)
!8750 = !DILocation(line: 54, column: 6, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8729, file: !8708, line: 53, column: 16)
!8752 = !DILocation(line: 55, column: 4, scope: !8751)
!8753 = !DILocation(line: 56, column: 4, scope: !8751)
!8754 = !DILocation(line: 53, column: 11, scope: !8729)
!8755 = !DILocation(line: 53, column: 2, scope: !8729)
!8756 = distinct !{!8756, !8755, !8757}
!8757 = !DILocation(line: 57, column: 2, scope: !8729)
!8758 = !DILocation(line: 59, column: 2, scope: !8729)
!8759 = distinct !DISubprogram(name: "strchr", scope: !8708, file: !8708, line: 69, type: !8760, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8762)
!8760 = !DISubroutineType(types: !8761)
!8761 = !{!277, !337, !103}
!8762 = !{!8763, !8764, !8765}
!8763 = !DILocalVariable(name: "s", arg: 1, scope: !8759, file: !8708, line: 69, type: !337)
!8764 = !DILocalVariable(name: "c", arg: 2, scope: !8759, file: !8708, line: 69, type: !103)
!8765 = !DILocalVariable(name: "tmp", scope: !8759, file: !8708, line: 71, type: !278)
!8766 = !DILocation(line: 0, scope: !8759)
!8767 = !DILocation(line: 73, column: 2, scope: !8759)
!8768 = !DILocation(line: 73, column: 10, scope: !8759)
!8769 = !DILocation(line: 73, column: 13, scope: !8759)
!8770 = !DILocation(line: 73, column: 21, scope: !8759)
!8771 = !DILocation(line: 74, column: 4, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8759, file: !8708, line: 73, column: 38)
!8773 = distinct !{!8773, !8767, !8774}
!8774 = !DILocation(line: 75, column: 2, scope: !8759)
!8775 = !DILocation(line: 77, column: 9, scope: !8759)
!8776 = !DILocation(line: 77, column: 2, scope: !8759)
!8777 = distinct !DISubprogram(name: "strrchr", scope: !8708, file: !8708, line: 87, type: !8760, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8778)
!8778 = !{!8779, !8780, !8781}
!8779 = !DILocalVariable(name: "s", arg: 1, scope: !8777, file: !8708, line: 87, type: !337)
!8780 = !DILocalVariable(name: "c", arg: 2, scope: !8777, file: !8708, line: 87, type: !103)
!8781 = !DILocalVariable(name: "match", scope: !8777, file: !8708, line: 89, type: !277)
!8782 = !DILocation(line: 0, scope: !8777)
!8783 = !DILocation(line: 91, column: 2, scope: !8777)
!8784 = !DILocation(line: 92, column: 7, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8786, file: !8708, line: 92, column: 7)
!8786 = distinct !DILexicalBlock(scope: !8777, file: !8708, line: 91, column: 5)
!8787 = !DILocation(line: 92, column: 10, scope: !8785)
!8788 = !DILocation(line: 92, column: 7, scope: !8786)
!8789 = !DILocation(line: 95, column: 13, scope: !8777)
!8790 = !DILocation(line: 95, column: 2, scope: !8786)
!8791 = distinct !{!8791, !8783, !8792}
!8792 = !DILocation(line: 95, column: 15, scope: !8777)
!8793 = !DILocation(line: 97, column: 2, scope: !8777)
!8794 = distinct !DISubprogram(name: "strlen", scope: !8708, file: !8708, line: 107, type: !8795, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8797)
!8795 = !DISubroutineType(types: !8796)
!8796 = !{!132, !337}
!8797 = !{!8798, !8799}
!8798 = !DILocalVariable(name: "s", arg: 1, scope: !8794, file: !8708, line: 107, type: !337)
!8799 = !DILocalVariable(name: "n", scope: !8794, file: !8708, line: 109, type: !132)
!8800 = !DILocation(line: 0, scope: !8794)
!8801 = !DILocation(line: 111, column: 9, scope: !8794)
!8802 = !DILocation(line: 111, column: 12, scope: !8794)
!8803 = !DILocation(line: 111, column: 2, scope: !8794)
!8804 = !DILocation(line: 112, column: 4, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8794, file: !8708, line: 111, column: 21)
!8806 = !DILocation(line: 113, column: 4, scope: !8805)
!8807 = distinct !{!8807, !8803, !8808}
!8808 = !DILocation(line: 114, column: 2, scope: !8794)
!8809 = !DILocation(line: 116, column: 2, scope: !8794)
!8810 = distinct !DISubprogram(name: "strnlen", scope: !8708, file: !8708, line: 126, type: !8811, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8813)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!132, !337, !132}
!8813 = !{!8814, !8815, !8816}
!8814 = !DILocalVariable(name: "s", arg: 1, scope: !8810, file: !8708, line: 126, type: !337)
!8815 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8810, file: !8708, line: 126, type: !132)
!8816 = !DILocalVariable(name: "n", scope: !8810, file: !8708, line: 128, type: !132)
!8817 = !DILocation(line: 0, scope: !8810)
!8818 = !DILocation(line: 130, column: 9, scope: !8810)
!8819 = !DILocation(line: 130, column: 12, scope: !8810)
!8820 = !DILocation(line: 130, column: 20, scope: !8810)
!8821 = !DILocation(line: 130, column: 2, scope: !8810)
!8822 = !DILocation(line: 131, column: 4, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8810, file: !8708, line: 130, column: 35)
!8824 = !DILocation(line: 132, column: 4, scope: !8823)
!8825 = distinct !{!8825, !8821, !8826}
!8826 = !DILocation(line: 133, column: 2, scope: !8810)
!8827 = !DILocation(line: 135, column: 2, scope: !8810)
!8828 = distinct !DISubprogram(name: "strcmp", scope: !8708, file: !8708, line: 145, type: !8829, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!103, !337, !337}
!8831 = !{!8832, !8833}
!8832 = !DILocalVariable(name: "s1", arg: 1, scope: !8828, file: !8708, line: 145, type: !337)
!8833 = !DILocalVariable(name: "s2", arg: 2, scope: !8828, file: !8708, line: 145, type: !337)
!8834 = !DILocation(line: 0, scope: !8828)
!8835 = !DILocation(line: 147, column: 10, scope: !8828)
!8836 = !DILocation(line: 147, column: 17, scope: !8828)
!8837 = !DILocation(line: 147, column: 14, scope: !8828)
!8838 = !DILocation(line: 147, column: 22, scope: !8828)
!8839 = !DILocation(line: 148, column: 5, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8828, file: !8708, line: 147, column: 40)
!8841 = !DILocation(line: 149, column: 5, scope: !8840)
!8842 = distinct !{!8842, !8843, !8844}
!8843 = !DILocation(line: 147, column: 2, scope: !8828)
!8844 = !DILocation(line: 150, column: 2, scope: !8828)
!8845 = !DILocation(line: 152, column: 9, scope: !8828)
!8846 = !DILocation(line: 152, column: 15, scope: !8828)
!8847 = !DILocation(line: 152, column: 13, scope: !8828)
!8848 = !DILocation(line: 152, column: 2, scope: !8828)
!8849 = distinct !DISubprogram(name: "strncmp", scope: !8708, file: !8708, line: 162, type: !8850, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{!103, !337, !337, !132}
!8852 = !{!8853, !8854, !8855}
!8853 = !DILocalVariable(name: "s1", arg: 1, scope: !8849, file: !8708, line: 162, type: !337)
!8854 = !DILocalVariable(name: "s2", arg: 2, scope: !8849, file: !8708, line: 162, type: !337)
!8855 = !DILocalVariable(name: "n", arg: 3, scope: !8849, file: !8708, line: 162, type: !132)
!8856 = !DILocation(line: 0, scope: !8849)
!8857 = !DILocation(line: 164, column: 17, scope: !8849)
!8858 = !DILocation(line: 164, column: 21, scope: !8849)
!8859 = !DILocation(line: 164, column: 28, scope: !8849)
!8860 = !DILocation(line: 164, column: 25, scope: !8849)
!8861 = !DILocation(line: 164, column: 33, scope: !8849)
!8862 = !DILocation(line: 165, column: 5, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8849, file: !8708, line: 164, column: 51)
!8864 = !DILocation(line: 166, column: 5, scope: !8863)
!8865 = !DILocation(line: 167, column: 4, scope: !8863)
!8866 = distinct !{!8866, !8867, !8868}
!8867 = !DILocation(line: 164, column: 2, scope: !8849)
!8868 = !DILocation(line: 168, column: 2, scope: !8849)
!8869 = !DILocation(line: 170, column: 25, scope: !8849)
!8870 = !DILocation(line: 170, column: 31, scope: !8849)
!8871 = !DILocation(line: 170, column: 29, scope: !8849)
!8872 = !DILocation(line: 170, column: 9, scope: !8849)
!8873 = !DILocation(line: 170, column: 2, scope: !8849)
!8874 = distinct !DISubprogram(name: "strtok_r", scope: !8708, file: !8708, line: 180, type: !8875, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!277, !277, !337, !378}
!8877 = !{!8878, !8879, !8880, !8881, !8882}
!8878 = !DILocalVariable(name: "str", arg: 1, scope: !8874, file: !8708, line: 180, type: !277)
!8879 = !DILocalVariable(name: "sep", arg: 2, scope: !8874, file: !8708, line: 180, type: !337)
!8880 = !DILocalVariable(name: "state", arg: 3, scope: !8874, file: !8708, line: 180, type: !378)
!8881 = !DILocalVariable(name: "start", scope: !8874, file: !8708, line: 182, type: !277)
!8882 = !DILocalVariable(name: "end", scope: !8874, file: !8708, line: 182, type: !277)
!8883 = !DILocation(line: 0, scope: !8874)
!8884 = !DILocation(line: 184, column: 10, scope: !8874)
!8885 = !DILocation(line: 184, column: 22, scope: !8874)
!8886 = !DILocation(line: 187, column: 9, scope: !8874)
!8887 = !DILocation(line: 187, column: 16, scope: !8874)
!8888 = !DILocation(line: 187, column: 19, scope: !8874)
!8889 = !DILocation(line: 187, column: 2, scope: !8874)
!8890 = !DILocation(line: 188, column: 8, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8874, file: !8708, line: 187, column: 40)
!8892 = distinct !{!8892, !8889, !8893}
!8893 = !DILocation(line: 189, column: 2, scope: !8874)
!8894 = !DILocation(line: 198, column: 9, scope: !8874)
!8895 = !DILocation(line: 198, column: 18, scope: !8874)
!8896 = !DILocation(line: 198, column: 17, scope: !8874)
!8897 = !DILocation(line: 198, column: 2, scope: !8874)
!8898 = !DILocation(line: 199, column: 6, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8874, file: !8708, line: 198, column: 37)
!8900 = !DILocation(line: 198, column: 14, scope: !8874)
!8901 = distinct !{!8901, !8897, !8902}
!8902 = !DILocation(line: 200, column: 2, scope: !8874)
!8903 = !DILocation(line: 203, column: 8, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !8708, line: 202, column: 20)
!8905 = distinct !DILexicalBlock(scope: !8874, file: !8708, line: 202, column: 6)
!8906 = !DILocation(line: 204, column: 16, scope: !8904)
!8907 = !DILocation(line: 205, column: 2, scope: !8904)
!8908 = !DILocation(line: 210, column: 1, scope: !8874)
!8909 = distinct !DISubprogram(name: "strcat", scope: !8708, file: !8708, line: 212, type: !8709, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8910)
!8910 = !{!8911, !8912}
!8911 = !DILocalVariable(name: "dest", arg: 1, scope: !8909, file: !8708, line: 212, type: !8711)
!8912 = !DILocalVariable(name: "src", arg: 2, scope: !8909, file: !8708, line: 212, type: !8712)
!8913 = !DILocation(line: 0, scope: !8909)
!8914 = !DILocation(line: 214, column: 16, scope: !8909)
!8915 = !DILocation(line: 214, column: 14, scope: !8909)
!8916 = !DILocation(line: 214, column: 2, scope: !8909)
!8917 = !DILocation(line: 215, column: 2, scope: !8909)
!8918 = distinct !DISubprogram(name: "strncat", scope: !8708, file: !8708, line: 218, type: !8730, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8919)
!8919 = !{!8920, !8921, !8922, !8923, !8924}
!8920 = !DILocalVariable(name: "dest", arg: 1, scope: !8918, file: !8708, line: 218, type: !8711)
!8921 = !DILocalVariable(name: "src", arg: 2, scope: !8918, file: !8708, line: 218, type: !8712)
!8922 = !DILocalVariable(name: "n", arg: 3, scope: !8918, file: !8708, line: 219, type: !132)
!8923 = !DILocalVariable(name: "orig_dest", scope: !8918, file: !8708, line: 221, type: !277)
!8924 = !DILocalVariable(name: "len", scope: !8918, file: !8708, line: 222, type: !132)
!8925 = !DILocation(line: 0, scope: !8918)
!8926 = !DILocation(line: 222, column: 15, scope: !8918)
!8927 = !DILocation(line: 224, column: 7, scope: !8918)
!8928 = !DILocation(line: 225, column: 14, scope: !8918)
!8929 = !DILocation(line: 225, column: 19, scope: !8918)
!8930 = !DILocation(line: 225, column: 11, scope: !8918)
!8931 = !DILocation(line: 225, column: 23, scope: !8918)
!8932 = !DILocation(line: 225, column: 28, scope: !8918)
!8933 = !DILocation(line: 225, column: 2, scope: !8918)
!8934 = !DILocation(line: 226, column: 17, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8918, file: !8708, line: 225, column: 38)
!8936 = !DILocation(line: 226, column: 8, scope: !8935)
!8937 = !DILocation(line: 226, column: 11, scope: !8935)
!8938 = distinct !{!8938, !8933, !8939}
!8939 = !DILocation(line: 227, column: 2, scope: !8918)
!8940 = !DILocation(line: 228, column: 8, scope: !8918)
!8941 = !DILocation(line: 230, column: 2, scope: !8918)
!8942 = distinct !DISubprogram(name: "memcmp", scope: !8708, file: !8708, line: 239, type: !8943, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8945)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!103, !13, !13, !132}
!8945 = !{!8946, !8947, !8948, !8949, !8950}
!8946 = !DILocalVariable(name: "m1", arg: 1, scope: !8942, file: !8708, line: 239, type: !13)
!8947 = !DILocalVariable(name: "m2", arg: 2, scope: !8942, file: !8708, line: 239, type: !13)
!8948 = !DILocalVariable(name: "n", arg: 3, scope: !8942, file: !8708, line: 239, type: !132)
!8949 = !DILocalVariable(name: "c1", scope: !8942, file: !8708, line: 241, type: !337)
!8950 = !DILocalVariable(name: "c2", scope: !8942, file: !8708, line: 242, type: !337)
!8951 = !DILocation(line: 0, scope: !8942)
!8952 = !DILocation(line: 244, column: 7, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8942, file: !8708, line: 244, column: 6)
!8954 = !DILocation(line: 244, column: 6, scope: !8942)
!8955 = !DILocation(line: 248, column: 10, scope: !8942)
!8956 = !DILocation(line: 248, column: 14, scope: !8942)
!8957 = !DILocation(line: 248, column: 19, scope: !8942)
!8958 = !DILocation(line: 248, column: 2, scope: !8942)
!8959 = !DILocation(line: 248, column: 23, scope: !8942)
!8960 = !DILocation(line: 248, column: 30, scope: !8942)
!8961 = !DILocation(line: 248, column: 27, scope: !8942)
!8962 = !DILocation(line: 249, column: 5, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8942, file: !8708, line: 248, column: 36)
!8964 = !DILocation(line: 250, column: 5, scope: !8963)
!8965 = distinct !{!8965, !8958, !8966}
!8966 = !DILocation(line: 251, column: 2, scope: !8942)
!8967 = !DILocation(line: 253, column: 9, scope: !8942)
!8968 = !DILocation(line: 253, column: 15, scope: !8942)
!8969 = !DILocation(line: 253, column: 13, scope: !8942)
!8970 = !DILocation(line: 253, column: 2, scope: !8942)
!8971 = !DILocation(line: 254, column: 1, scope: !8942)
!8972 = distinct !DISubprogram(name: "memmove", scope: !8708, file: !8708, line: 263, type: !8973, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !8975)
!8973 = !DISubroutineType(types: !8974)
!8974 = !{!102, !102, !13, !132}
!8975 = !{!8976, !8977, !8978, !8979, !8980}
!8976 = !DILocalVariable(name: "d", arg: 1, scope: !8972, file: !8708, line: 263, type: !102)
!8977 = !DILocalVariable(name: "s", arg: 2, scope: !8972, file: !8708, line: 263, type: !13)
!8978 = !DILocalVariable(name: "n", arg: 3, scope: !8972, file: !8708, line: 263, type: !132)
!8979 = !DILocalVariable(name: "dest", scope: !8972, file: !8708, line: 265, type: !277)
!8980 = !DILocalVariable(name: "src", scope: !8972, file: !8708, line: 266, type: !337)
!8981 = !DILocation(line: 0, scope: !8972)
!8982 = !DILocation(line: 268, column: 21, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8972, file: !8708, line: 268, column: 6)
!8984 = !DILocation(line: 268, column: 28, scope: !8983)
!8985 = !DILocation(line: 268, column: 6, scope: !8972)
!8986 = !DILocation(line: 280, column: 12, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !8708, line: 278, column: 9)
!8988 = !DILocation(line: 280, column: 3, scope: !8987)
!8989 = !DILocation(line: 275, column: 5, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !8708, line: 274, column: 17)
!8991 = distinct !DILexicalBlock(scope: !8983, file: !8708, line: 268, column: 33)
!8992 = !DILocation(line: 276, column: 14, scope: !8990)
!8993 = !DILocation(line: 276, column: 4, scope: !8990)
!8994 = !DILocation(line: 276, column: 12, scope: !8990)
!8995 = !DILocation(line: 274, column: 12, scope: !8991)
!8996 = !DILocation(line: 274, column: 3, scope: !8991)
!8997 = distinct !{!8997, !8996, !8998}
!8998 = !DILocation(line: 277, column: 3, scope: !8991)
!8999 = !DILocation(line: 281, column: 12, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8987, file: !8708, line: 280, column: 17)
!9001 = !DILocation(line: 281, column: 10, scope: !9000)
!9002 = !DILocation(line: 282, column: 8, scope: !9000)
!9003 = !DILocation(line: 283, column: 7, scope: !9000)
!9004 = !DILocation(line: 284, column: 5, scope: !9000)
!9005 = distinct !{!9005, !8988, !9006}
!9006 = !DILocation(line: 285, column: 3, scope: !8987)
!9007 = !DILocation(line: 288, column: 2, scope: !8972)
!9008 = distinct !DISubprogram(name: "memcpy", scope: !8708, file: !8708, line: 298, type: !9009, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !9013)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{!102, !9011, !9012, !132}
!9011 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9012 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9013 = !{!9014, !9015, !9016, !9017, !9018}
!9014 = !DILocalVariable(name: "d", arg: 1, scope: !9008, file: !8708, line: 298, type: !9011)
!9015 = !DILocalVariable(name: "s", arg: 2, scope: !9008, file: !8708, line: 298, type: !9012)
!9016 = !DILocalVariable(name: "n", arg: 3, scope: !9008, file: !8708, line: 298, type: !132)
!9017 = !DILocalVariable(name: "d_byte", scope: !9008, file: !8708, line: 302, type: !1107)
!9018 = !DILocalVariable(name: "s_byte", scope: !9008, file: !8708, line: 303, type: !3098)
!9019 = !DILocation(line: 0, scope: !9008)
!9020 = !DILocation(line: 337, column: 11, scope: !9008)
!9021 = !DILocation(line: 337, column: 2, scope: !9008)
!9022 = !DILocation(line: 338, column: 25, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9008, file: !8708, line: 337, column: 16)
!9024 = !DILocation(line: 338, column: 17, scope: !9023)
!9025 = !DILocation(line: 338, column: 11, scope: !9023)
!9026 = !DILocation(line: 338, column: 15, scope: !9023)
!9027 = !DILocation(line: 339, column: 4, scope: !9023)
!9028 = distinct !{!9028, !9021, !9029}
!9029 = !DILocation(line: 340, column: 2, scope: !9008)
!9030 = !DILocation(line: 342, column: 2, scope: !9008)
!9031 = distinct !DISubprogram(name: "memset", scope: !8708, file: !8708, line: 352, type: !9032, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !9034)
!9032 = !DISubroutineType(types: !9033)
!9033 = !{!102, !102, !103, !132}
!9034 = !{!9035, !9036, !9037, !9038, !9039}
!9035 = !DILocalVariable(name: "buf", arg: 1, scope: !9031, file: !8708, line: 352, type: !102)
!9036 = !DILocalVariable(name: "c", arg: 2, scope: !9031, file: !8708, line: 352, type: !103)
!9037 = !DILocalVariable(name: "n", arg: 3, scope: !9031, file: !8708, line: 352, type: !132)
!9038 = !DILocalVariable(name: "d_byte", scope: !9031, file: !8708, line: 356, type: !1107)
!9039 = !DILocalVariable(name: "c_byte", scope: !9031, file: !8708, line: 357, type: !186)
!9040 = !DILocation(line: 0, scope: !9031)
!9041 = !DILocation(line: 357, column: 25, scope: !9031)
!9042 = !DILocation(line: 389, column: 11, scope: !9031)
!9043 = !DILocation(line: 389, column: 2, scope: !9031)
!9044 = !DILocation(line: 390, column: 11, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9031, file: !8708, line: 389, column: 16)
!9046 = !DILocation(line: 390, column: 15, scope: !9045)
!9047 = !DILocation(line: 391, column: 4, scope: !9045)
!9048 = distinct !{!9048, !9043, !9049}
!9049 = !DILocation(line: 392, column: 2, scope: !9031)
!9050 = !DILocation(line: 394, column: 2, scope: !9031)
!9051 = distinct !DISubprogram(name: "memchr", scope: !8708, file: !8708, line: 404, type: !9052, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !9054)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{!102, !13, !103, !132}
!9054 = !{!9055, !9056, !9057, !9058}
!9055 = !DILocalVariable(name: "s", arg: 1, scope: !9051, file: !8708, line: 404, type: !13)
!9056 = !DILocalVariable(name: "c", arg: 2, scope: !9051, file: !8708, line: 404, type: !103)
!9057 = !DILocalVariable(name: "n", arg: 3, scope: !9051, file: !8708, line: 404, type: !132)
!9058 = !DILocalVariable(name: "p", scope: !9059, file: !8708, line: 407, type: !3098)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !8708, line: 406, column: 14)
!9060 = distinct !DILexicalBlock(scope: !9051, file: !8708, line: 406, column: 6)
!9061 = !DILocation(line: 0, scope: !9051)
!9062 = !DILocation(line: 406, column: 8, scope: !9060)
!9063 = !DILocation(line: 406, column: 6, scope: !9051)
!9064 = !DILocation(line: 409, column: 3, scope: !9059)
!9065 = !DILocation(line: 0, scope: !9059)
!9066 = !DILocation(line: 410, column: 8, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !8708, line: 410, column: 8)
!9068 = distinct !DILexicalBlock(scope: !9059, file: !8708, line: 409, column: 6)
!9069 = !DILocation(line: 410, column: 13, scope: !9067)
!9070 = !DILocation(line: 410, column: 8, scope: !9068)
!9071 = distinct !{!9071, !9064, !9072}
!9072 = !DILocation(line: 414, column: 20, scope: !9059)
!9073 = !DILocation(line: 417, column: 2, scope: !9051)
!9074 = !DILocation(line: 418, column: 1, scope: !9051)
!9075 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !662, file: !662, line: 23, type: !4569, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9076)
!9076 = !{!9077}
!9077 = !DILocalVariable(name: "hook", arg: 1, scope: !9075, file: !662, line: 23, type: !395)
!9078 = !DILocation(line: 0, scope: !9075)
!9079 = !DILocation(line: 25, column: 15, scope: !9075)
!9080 = !DILocation(line: 26, column: 1, scope: !9075)
!9081 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !662, file: !662, line: 14, type: !396, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9082)
!9082 = !{!9083}
!9083 = !DILocalVariable(name: "c", arg: 1, scope: !9081, file: !662, line: 14, type: !103)
!9084 = !DILocation(line: 0, scope: !9081)
!9085 = !DILocation(line: 18, column: 2, scope: !9081)
!9086 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !662, file: !662, line: 28, type: !9087, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!103, !103, !658}
!9089 = !{!9090, !9091}
!9090 = !DILocalVariable(name: "c", arg: 1, scope: !9086, file: !662, line: 28, type: !103)
!9091 = !DILocalVariable(name: "stream", arg: 2, scope: !9086, file: !662, line: 28, type: !658)
!9092 = !DILocation(line: 0, scope: !9086)
!9093 = !DILocation(line: 30, column: 27, scope: !9086)
!9094 = !DILocation(line: 30, column: 50, scope: !9086)
!9095 = !DILocation(line: 30, column: 9, scope: !9086)
!9096 = !DILocation(line: 30, column: 2, scope: !9086)
!9097 = distinct !DISubprogram(name: "fputc", scope: !662, file: !662, line: 41, type: !9087, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9098)
!9098 = !{!9099, !9100}
!9099 = !DILocalVariable(name: "c", arg: 1, scope: !9097, file: !662, line: 41, type: !103)
!9100 = !DILocalVariable(name: "stream", arg: 2, scope: !9097, file: !662, line: 41, type: !658)
!9101 = !DILocation(line: 0, scope: !9097)
!9102 = !DILocation(line: 43, column: 9, scope: !9097)
!9103 = !DILocation(line: 43, column: 2, scope: !9097)
!9104 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9105, file: !9105, line: 72, type: !9087, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9106)
!9105 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!9106 = !{!9107, !9108}
!9107 = !DILocalVariable(name: "c", arg: 1, scope: !9104, file: !9105, line: 72, type: !103)
!9108 = !DILocalVariable(name: "stream", arg: 2, scope: !9104, file: !9105, line: 72, type: !658)
!9109 = !DILocation(line: 0, scope: !9104)
!9110 = !DILocation(line: 81, column: 2, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9104, file: !9105, line: 81, column: 2)
!9112 = !{i64 2155124757}
!9113 = !DILocation(line: 82, column: 9, scope: !9104)
!9114 = !DILocation(line: 82, column: 2, scope: !9104)
!9115 = distinct !DISubprogram(name: "fputs", scope: !662, file: !662, line: 46, type: !9116, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9119)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{!103, !8712, !9118}
!9118 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !658)
!9119 = !{!9120, !9121, !9122, !9123}
!9120 = !DILocalVariable(name: "s", arg: 1, scope: !9115, file: !662, line: 46, type: !8712)
!9121 = !DILocalVariable(name: "stream", arg: 2, scope: !9115, file: !662, line: 46, type: !9118)
!9122 = !DILocalVariable(name: "len", scope: !9115, file: !662, line: 48, type: !103)
!9123 = !DILocalVariable(name: "ret", scope: !9115, file: !662, line: 49, type: !103)
!9124 = !DILocation(line: 0, scope: !9115)
!9125 = !DILocation(line: 48, column: 12, scope: !9115)
!9126 = !DILocation(line: 51, column: 8, scope: !9115)
!9127 = !DILocation(line: 53, column: 13, scope: !9115)
!9128 = !DILocation(line: 53, column: 9, scope: !9115)
!9129 = !DILocation(line: 53, column: 2, scope: !9115)
!9130 = distinct !DISubprogram(name: "fwrite", scope: !662, file: !662, line: 99, type: !9131, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!132, !9012, !132, !132, !9118}
!9133 = !{!9134, !9135, !9136, !9137}
!9134 = !DILocalVariable(name: "ptr", arg: 1, scope: !9130, file: !662, line: 99, type: !9012)
!9135 = !DILocalVariable(name: "size", arg: 2, scope: !9130, file: !662, line: 99, type: !132)
!9136 = !DILocalVariable(name: "nitems", arg: 3, scope: !9130, file: !662, line: 99, type: !132)
!9137 = !DILocalVariable(name: "stream", arg: 4, scope: !9130, file: !662, line: 100, type: !9118)
!9138 = !DILocation(line: 0, scope: !9130)
!9139 = !DILocation(line: 102, column: 9, scope: !9130)
!9140 = !DILocation(line: 102, column: 2, scope: !9130)
!9141 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9105, file: !9105, line: 96, type: !9131, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9142)
!9142 = !{!9143, !9144, !9145, !9146}
!9143 = !DILocalVariable(name: "ptr", arg: 1, scope: !9141, file: !9105, line: 96, type: !9012)
!9144 = !DILocalVariable(name: "size", arg: 2, scope: !9141, file: !9105, line: 96, type: !132)
!9145 = !DILocalVariable(name: "nitems", arg: 3, scope: !9141, file: !9105, line: 96, type: !132)
!9146 = !DILocalVariable(name: "stream", arg: 4, scope: !9141, file: !9105, line: 96, type: !9118)
!9147 = !DILocation(line: 0, scope: !9141)
!9148 = !DILocation(line: 107, column: 2, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9141, file: !9105, line: 107, column: 2)
!9150 = !{i64 2155124861}
!9151 = !DILocation(line: 108, column: 9, scope: !9141)
!9152 = !DILocation(line: 108, column: 2, scope: !9141)
!9153 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !662, file: !662, line: 56, type: !9131, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9154)
!9154 = !{!9155, !9156, !9157, !9158, !9159, !9160, !9161, !9162}
!9155 = !DILocalVariable(name: "ptr", arg: 1, scope: !9153, file: !662, line: 56, type: !9012)
!9156 = !DILocalVariable(name: "size", arg: 2, scope: !9153, file: !662, line: 56, type: !132)
!9157 = !DILocalVariable(name: "nitems", arg: 3, scope: !9153, file: !662, line: 57, type: !132)
!9158 = !DILocalVariable(name: "stream", arg: 4, scope: !9153, file: !662, line: 57, type: !9118)
!9159 = !DILocalVariable(name: "i", scope: !9153, file: !662, line: 59, type: !132)
!9160 = !DILocalVariable(name: "j", scope: !9153, file: !662, line: 60, type: !132)
!9161 = !DILocalVariable(name: "p", scope: !9153, file: !662, line: 61, type: !3098)
!9162 = !DILabel(scope: !9153, name: "done", file: !662, line: 82)
!9163 = !DILocation(line: 0, scope: !9153)
!9164 = !DILocation(line: 63, column: 14, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9153, file: !662, line: 63, column: 6)
!9166 = !DILocation(line: 63, column: 24, scope: !9165)
!9167 = !DILocation(line: 72, column: 3, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9153, file: !662, line: 70, column: 5)
!9169 = !DILocation(line: 0, scope: !9168)
!9170 = !DILocation(line: 73, column: 8, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9172, file: !662, line: 73, column: 8)
!9172 = distinct !DILexicalBlock(scope: !9168, file: !662, line: 72, column: 6)
!9173 = !DILocation(line: 73, column: 29, scope: !9171)
!9174 = !DILocation(line: 73, column: 27, scope: !9171)
!9175 = !DILocation(line: 73, column: 21, scope: !9171)
!9176 = !DILocation(line: 73, column: 33, scope: !9171)
!9177 = !DILocation(line: 73, column: 8, scope: !9172)
!9178 = !DILocation(line: 76, column: 5, scope: !9172)
!9179 = !DILocation(line: 77, column: 14, scope: !9168)
!9180 = !DILocation(line: 77, column: 3, scope: !9172)
!9181 = distinct !{!9181, !9167, !9182}
!9182 = !DILocation(line: 77, column: 17, scope: !9168)
!9183 = !DILocation(line: 79, column: 4, scope: !9168)
!9184 = !DILocation(line: 80, column: 13, scope: !9153)
!9185 = !DILocation(line: 80, column: 2, scope: !9168)
!9186 = distinct !{!9186, !9187, !9188}
!9187 = !DILocation(line: 70, column: 2, scope: !9153)
!9188 = !DILocation(line: 80, column: 16, scope: !9153)
!9189 = !DILocation(line: 82, column: 1, scope: !9153)
!9190 = !DILocation(line: 83, column: 17, scope: !9153)
!9191 = !DILocation(line: 83, column: 2, scope: !9153)
!9192 = !DILocation(line: 84, column: 1, scope: !9153)
!9193 = distinct !DISubprogram(name: "puts", scope: !662, file: !662, line: 106, type: !9194, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !655, retainedNodes: !9196)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!103, !337}
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "s", arg: 1, scope: !9193, file: !662, line: 106, type: !337)
!9198 = !DILocation(line: 0, scope: !9193)
!9199 = !DILocation(line: 108, column: 6, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9193, file: !662, line: 108, column: 6)
!9201 = !DILocation(line: 108, column: 23, scope: !9200)
!9202 = !DILocation(line: 108, column: 6, scope: !9193)
!9203 = !DILocation(line: 112, column: 9, scope: !9193)
!9204 = !DILocation(line: 112, column: 29, scope: !9193)
!9205 = !DILocation(line: 112, column: 2, scope: !9193)
!9206 = !DILocation(line: 113, column: 1, scope: !9193)
!9207 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !694, file: !694, line: 12, type: !9208, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9214)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{!9210, !109}
!9210 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9211)
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9212)
!9212 = !{!9213}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9211, file: !105, line: 66, baseType: !104, size: 64)
!9214 = !{!9215, !9216}
!9215 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9207, file: !694, line: 12, type: !109)
!9216 = !DILocalVariable(name: "now_ticks", scope: !9207, file: !694, line: 14, type: !106)
!9217 = !DILocation(line: 0, scope: !9207)
!9218 = !DILocation(line: 14, column: 22, scope: !9207)
!9219 = !DILocation(line: 16, column: 9, scope: !9207)
!9220 = !DILocation(line: 17, column: 1, scope: !9207)
!9221 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !694, file: !694, line: 103, type: !9222, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9368)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!103, !9224, !13, !9210}
!9224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9225, size: 32)
!9225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9226)
!9226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !117, line: 29, size: 192, elements: !9227)
!9227 = !{!9228, !9229, !9230, !9231, !9232, !9340}
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9226, file: !117, line: 35, baseType: !120, size: 16)
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9226, file: !117, line: 40, baseType: !124, size: 32, offset: 32)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9226, file: !117, line: 45, baseType: !124, size: 32, offset: 64)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9226, file: !117, line: 51, baseType: !127, size: 32, offset: 96)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9226, file: !117, line: 56, baseType: !9233, size: 32, offset: 128)
!9233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9234, size: 32)
!9234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !9235)
!9235 = !{!9236, !9255, !9338, !9339}
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9234, file: !137, line: 2722, baseType: !9237, size: 64)
!9237 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !9238)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !9239)
!9239 = !{!9240}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9238, file: !141, line: 232, baseType: !9241, size: 64)
!9241 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !9242)
!9242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !9243)
!9243 = !{!9244, !9250}
!9244 = !DIDerivedType(tag: DW_TAG_member, scope: !9242, file: !146, line: 38, baseType: !9245, size: 32)
!9245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9242, file: !146, line: 38, size: 32, elements: !9246)
!9246 = !{!9247, !9249}
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9245, file: !146, line: 39, baseType: !9248, size: 32)
!9248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9242, size: 32)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9245, file: !146, line: 40, baseType: !9248, size: 32)
!9250 = !DIDerivedType(tag: DW_TAG_member, scope: !9242, file: !146, line: 42, baseType: !9251, size: 32, offset: 32)
!9251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9242, file: !146, line: 42, size: 32, elements: !9252)
!9252 = !{!9253, !9254}
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9251, file: !146, line: 43, baseType: !9248, size: 32)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9251, file: !146, line: 44, baseType: !9248, size: 32)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9234, file: !137, line: 2724, baseType: !9256, size: 32, offset: 64)
!9256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9257, size: 32)
!9257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !9258)
!9258 = !{!9259, !9299, !9311, !9312, !9313, !9314, !9320, !9333}
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9257, file: !163, line: 247, baseType: !9260, size: 384)
!9260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !9261)
!9261 = !{!9262, !9273, !9275, !9276, !9277, !9286, !9287, !9288}
!9262 = !DIDerivedType(tag: DW_TAG_member, scope: !9260, file: !163, line: 60, baseType: !9263, size: 64)
!9263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9260, file: !163, line: 60, size: 64, elements: !9264)
!9264 = !{!9265, !9267}
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9263, file: !163, line: 61, baseType: !9266, size: 64)
!9266 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !9242)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9263, file: !163, line: 62, baseType: !9268, size: 64)
!9268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !9269)
!9269 = !{!9270}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9268, file: !175, line: 50, baseType: !9271, size: 64)
!9271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9272, size: 64, elements: !180)
!9272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 32)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9260, file: !163, line: 68, baseType: !9274, size: 32, offset: 64)
!9274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9237, size: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9260, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9260, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!9277 = !DIDerivedType(tag: DW_TAG_member, scope: !9260, file: !163, line: 90, baseType: !9278, size: 16, offset: 112)
!9278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9260, file: !163, line: 90, size: 16, elements: !9279)
!9279 = !{!9280, !9285}
!9280 = !DIDerivedType(tag: DW_TAG_member, scope: !9278, file: !163, line: 91, baseType: !9281, size: 16)
!9281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9278, file: !163, line: 91, size: 16, elements: !9282)
!9282 = !{!9283, !9284}
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9281, file: !163, line: 96, baseType: !195, size: 8)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9281, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9278, file: !163, line: 100, baseType: !121, size: 16)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9260, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9260, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9260, file: !163, line: 131, baseType: !9289, size: 192, offset: 192)
!9289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !9290)
!9290 = !{!9291, !9292, !9298}
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9289, file: !141, line: 245, baseType: !9266, size: 64)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9289, file: !141, line: 246, baseType: !9293, size: 32, offset: 64)
!9293 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !9294)
!9294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9295, size: 32)
!9295 = !DISubroutineType(types: !9296)
!9296 = !{null, !9297}
!9297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9289, size: 32)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9289, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9257, file: !163, line: 250, baseType: !9300, size: 288, offset: 384)
!9300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !9301)
!9301 = !{!9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9310}
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9300, file: !214, line: 26, baseType: !108, size: 32)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9300, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9300, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9300, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9300, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9300, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9300, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9300, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9300, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9257, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9257, file: !163, line: 256, baseType: !9237, size: 64, offset: 704)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9257, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9257, file: !163, line: 300, baseType: !9315, size: 96, offset: 800)
!9315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !9316)
!9316 = !{!9317, !9318, !9319}
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9315, file: !163, line: 153, baseType: !22, size: 32)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9315, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9315, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9257, file: !163, line: 325, baseType: !9321, size: 32, offset: 896)
!9321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9322, size: 32)
!9322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !9323)
!9323 = !{!9324, !9330, !9331}
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9322, file: !137, line: 5074, baseType: !9325, size: 96)
!9325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !9326)
!9326 = !{!9327, !9328, !9329}
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9325, file: !240, line: 57, baseType: !243, size: 32)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9325, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9325, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9322, file: !137, line: 5075, baseType: !9237, size: 64, offset: 96)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9322, file: !137, line: 5076, baseType: !9332, offset: 160)
!9332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9257, file: !163, line: 343, baseType: !9334, size: 64, offset: 928)
!9334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !9335)
!9335 = !{!9336, !9337}
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9334, file: !214, line: 63, baseType: !108, size: 32)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9334, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9234, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9234, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9226, file: !117, line: 67, baseType: !9341, size: 32, offset: 160)
!9341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9342, size: 32)
!9342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9343)
!9343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9344, size: 32)
!9344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9345)
!9345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !117, line: 85, size: 96, elements: !9346)
!9346 = !{!9347, !9348, !9363}
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9345, file: !117, line: 91, baseType: !131, size: 8)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9345, file: !117, line: 93, baseType: !9349, size: 32, offset: 32)
!9349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9350)
!9350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9351, size: 32)
!9351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !9352)
!9352 = !{!9353, !9354, !9355, !9356, !9357, !9358, !9359, !9360, !9361, !9362}
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9351, file: !137, line: 4206, baseType: !9237, size: 64)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9351, file: !137, line: 4208, baseType: !9332, offset: 64)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9351, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9351, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9351, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9351, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9351, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9351, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9351, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9351, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9345, file: !117, line: 96, baseType: !9364, size: 32, offset: 64)
!9364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9365)
!9365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9366, size: 32)
!9366 = !DISubroutineType(types: !9367)
!9367 = !{null, !9224}
!9368 = !{!9369, !9370, !9371, !9372, !9373}
!9369 = !DILocalVariable(name: "chan", arg: 1, scope: !9221, file: !694, line: 103, type: !9224)
!9370 = !DILocalVariable(name: "msg", arg: 2, scope: !9221, file: !694, line: 103, type: !13)
!9371 = !DILocalVariable(name: "timeout", arg: 3, scope: !9221, file: !694, line: 103, type: !9210)
!9372 = !DILocalVariable(name: "err", scope: !9221, file: !694, line: 105, type: !103)
!9373 = !DILocalVariable(name: "end_ticks", scope: !9221, file: !694, line: 106, type: !109)
!9374 = !DILocation(line: 0, scope: !9221)
!9375 = !DILocation(line: 106, column: 23, scope: !9221)
!9376 = !DILocation(line: 112, column: 12, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9221, file: !694, line: 112, column: 6)
!9378 = !DILocation(line: 112, column: 22, scope: !9377)
!9379 = !DILocation(line: 112, column: 30, scope: !9377)
!9380 = !DILocation(line: 112, column: 61, scope: !9377)
!9381 = !DILocation(line: 112, column: 55, scope: !9377)
!9382 = !DILocation(line: 112, column: 34, scope: !9377)
!9383 = !DILocation(line: 112, column: 6, scope: !9221)
!9384 = !DILocation(line: 116, column: 27, scope: !9221)
!9385 = !DILocation(line: 116, column: 8, scope: !9221)
!9386 = !DILocation(line: 117, column: 6, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9221, file: !694, line: 117, column: 6)
!9388 = !DILocation(line: 117, column: 6, scope: !9221)
!9389 = !DILocation(line: 121, column: 15, scope: !9221)
!9390 = !DILocation(line: 121, column: 35, scope: !9221)
!9391 = !DILocation(line: 121, column: 29, scope: !9221)
!9392 = !DILocation(line: 121, column: 2, scope: !9221)
!9393 = !DILocation(line: 123, column: 8, scope: !9221)
!9394 = !DILocation(line: 125, column: 23, scope: !9221)
!9395 = !DILocation(line: 125, column: 2, scope: !9221)
!9396 = !DILocation(line: 127, column: 2, scope: !9221)
!9397 = !DILocation(line: 128, column: 1, scope: !9221)
!9398 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3675, file: !3675, line: 927, type: !9399, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9401)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{!103, !9233, !9210}
!9401 = !{!9402, !9403}
!9402 = !DILocalVariable(name: "mutex", arg: 1, scope: !9398, file: !3675, line: 927, type: !9233)
!9403 = !DILocalVariable(name: "timeout", arg: 2, scope: !9398, file: !3675, line: 927, type: !9210)
!9404 = !DILocation(line: 0, scope: !9398)
!9405 = !DILocation(line: 936, column: 2, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9398, file: !3675, line: 936, column: 2)
!9407 = !{i64 2155066318}
!9408 = !DILocation(line: 937, column: 9, scope: !9398)
!9409 = !DILocation(line: 937, column: 2, scope: !9398)
!9410 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !694, file: !694, line: 66, type: !9411, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9413)
!9411 = !DISubroutineType(types: !9412)
!9412 = !{!103, !9224, !109}
!9413 = !{!9414, !9415, !9416, !9417, !9418, !9420}
!9414 = !DILocalVariable(name: "chan", arg: 1, scope: !9410, file: !694, line: 66, type: !9224)
!9415 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9410, file: !694, line: 66, type: !109)
!9416 = !DILocalVariable(name: "last_error", scope: !9410, file: !694, line: 68, type: !103)
!9417 = !DILocalVariable(name: "err", scope: !9410, file: !694, line: 68, type: !103)
!9418 = !DILocalVariable(name: "obs", scope: !9419, file: !694, line: 70, type: !9341)
!9419 = distinct !DILexicalBlock(scope: !9410, file: !694, line: 70, column: 2)
!9420 = !DILocalVariable(name: "obs", scope: !9421, file: !694, line: 81, type: !9341)
!9421 = distinct !DILexicalBlock(scope: !9410, file: !694, line: 81, column: 2)
!9422 = !DILocation(line: 0, scope: !9410)
!9423 = !DILocation(line: 70, column: 54, scope: !9419)
!9424 = !DILocation(line: 0, scope: !9419)
!9425 = !DILocation(line: 70, column: 65, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9419, file: !694, line: 70, column: 2)
!9427 = !DILocation(line: 70, column: 70, scope: !9426)
!9428 = !DILocation(line: 70, column: 2, scope: !9419)
!9429 = !DILocation(line: 81, column: 54, scope: !9421)
!9430 = !DILocation(line: 81, column: 65, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9421, file: !694, line: 81, column: 2)
!9432 = !DILocation(line: 0, scope: !9421)
!9433 = !DILocation(line: 81, column: 70, scope: !9431)
!9434 = !DILocation(line: 81, column: 2, scope: !9421)
!9435 = !DILocation(line: 71, column: 15, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !694, line: 71, column: 7)
!9437 = distinct !DILexicalBlock(scope: !9426, file: !694, line: 70, column: 86)
!9438 = !DILocation(line: 71, column: 23, scope: !9436)
!9439 = !DILocation(line: 71, column: 35, scope: !9436)
!9440 = !DILocation(line: 71, column: 44, scope: !9436)
!9441 = !DILocation(line: 71, column: 7, scope: !9437)
!9442 = !DILocation(line: 72, column: 4, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9436, file: !694, line: 71, column: 54)
!9444 = !DILocation(line: 73, column: 3, scope: !9443)
!9445 = !DILocation(line: 70, column: 79, scope: !9426)
!9446 = distinct !{!9446, !9428, !9447}
!9447 = !DILocation(line: 74, column: 2, scope: !9419)
!9448 = !DILocation(line: 100, column: 2, scope: !9410)
!9449 = !DILocation(line: 82, column: 15, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !694, line: 82, column: 7)
!9451 = distinct !DILexicalBlock(scope: !9431, file: !694, line: 81, column: 86)
!9452 = !DILocation(line: 82, column: 23, scope: !9450)
!9453 = !DILocation(line: 82, column: 35, scope: !9450)
!9454 = !DILocation(line: 82, column: 41, scope: !9450)
!9455 = !DILocation(line: 82, column: 7, scope: !9451)
!9456 = !DILocation(line: 83, column: 43, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9450, file: !694, line: 82, column: 51)
!9458 = !DILocation(line: 83, column: 10, scope: !9457)
!9459 = !DILocation(line: 86, column: 8, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9457, file: !694, line: 86, column: 8)
!9461 = !DILocation(line: 86, column: 8, scope: !9457)
!9462 = !DILocation(line: 87, column: 5, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9464, file: !694, line: 87, column: 5)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !694, line: 87, column: 5)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !694, line: 87, column: 5)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !694, line: 87, column: 5)
!9467 = distinct !DILexicalBlock(scope: !9460, file: !694, line: 86, column: 13)
!9468 = !DILocation(line: 90, column: 4, scope: !9467)
!9469 = !DILocation(line: 81, column: 79, scope: !9431)
!9470 = distinct !{!9470, !9434, !9471}
!9471 = !DILocation(line: 92, column: 2, scope: !9421)
!9472 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3675, file: !3675, line: 944, type: !9473, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9475)
!9473 = !DISubroutineType(types: !9474)
!9474 = !{!103, !9233}
!9475 = !{!9476}
!9476 = !DILocalVariable(name: "mutex", arg: 1, scope: !9472, file: !3675, line: 944, type: !9233)
!9477 = !DILocation(line: 0, scope: !9472)
!9478 = !DILocation(line: 952, column: 2, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9472, file: !3675, line: 952, column: 2)
!9480 = !{i64 2155066386}
!9481 = !DILocation(line: 953, column: 9, scope: !9472)
!9482 = !DILocation(line: 953, column: 2, scope: !9472)
!9483 = distinct !DISubprogram(name: "k_msgq_put", scope: !3675, file: !3675, line: 1129, type: !9484, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9486)
!9484 = !DISubroutineType(types: !9485)
!9485 = !{!103, !9350, !13, !9210}
!9486 = !{!9487, !9488, !9489}
!9487 = !DILocalVariable(name: "msgq", arg: 1, scope: !9483, file: !3675, line: 1129, type: !9350)
!9488 = !DILocalVariable(name: "data", arg: 2, scope: !9483, file: !3675, line: 1129, type: !13)
!9489 = !DILocalVariable(name: "timeout", arg: 3, scope: !9483, file: !3675, line: 1129, type: !9210)
!9490 = !DILocation(line: 0, scope: !9483)
!9491 = !DILocation(line: 1139, column: 2, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9483, file: !3675, line: 1139, column: 2)
!9493 = !{i64 2155067134}
!9494 = !DILocation(line: 1140, column: 9, scope: !9483)
!9495 = !DILocation(line: 1140, column: 2, scope: !9483)
!9496 = distinct !DISubprogram(name: "zbus_chan_read", scope: !694, file: !694, line: 130, type: !9497, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9499)
!9497 = !DISubroutineType(types: !9498)
!9498 = !{!103, !9224, !102, !9210}
!9499 = !{!9500, !9501, !9502, !9503}
!9500 = !DILocalVariable(name: "chan", arg: 1, scope: !9496, file: !694, line: 130, type: !9224)
!9501 = !DILocalVariable(name: "msg", arg: 2, scope: !9496, file: !694, line: 130, type: !102)
!9502 = !DILocalVariable(name: "timeout", arg: 3, scope: !9496, file: !694, line: 130, type: !9210)
!9503 = !DILocalVariable(name: "err", scope: !9496, file: !694, line: 132, type: !103)
!9504 = !DILocation(line: 0, scope: !9496)
!9505 = !DILocation(line: 138, column: 27, scope: !9496)
!9506 = !DILocation(line: 138, column: 8, scope: !9496)
!9507 = !DILocation(line: 139, column: 6, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9496, file: !694, line: 139, column: 6)
!9509 = !DILocation(line: 139, column: 6, scope: !9496)
!9510 = !DILocation(line: 143, column: 20, scope: !9496)
!9511 = !DILocation(line: 143, column: 35, scope: !9496)
!9512 = !DILocation(line: 143, column: 29, scope: !9496)
!9513 = !DILocation(line: 143, column: 2, scope: !9496)
!9514 = !DILocation(line: 145, column: 30, scope: !9496)
!9515 = !DILocation(line: 145, column: 9, scope: !9496)
!9516 = !DILocation(line: 145, column: 2, scope: !9496)
!9517 = !DILocation(line: 146, column: 1, scope: !9496)
!9518 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !694, file: !694, line: 148, type: !9519, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9521)
!9519 = !DISubroutineType(types: !9520)
!9520 = !{!103, !9224, !9210}
!9521 = !{!9522, !9523, !9524, !9525}
!9522 = !DILocalVariable(name: "chan", arg: 1, scope: !9518, file: !694, line: 148, type: !9224)
!9523 = !DILocalVariable(name: "timeout", arg: 2, scope: !9518, file: !694, line: 148, type: !9210)
!9524 = !DILocalVariable(name: "err", scope: !9518, file: !694, line: 150, type: !103)
!9525 = !DILocalVariable(name: "end_ticks", scope: !9518, file: !694, line: 151, type: !109)
!9526 = !DILocation(line: 0, scope: !9518)
!9527 = !DILocation(line: 151, column: 23, scope: !9518)
!9528 = !DILocation(line: 156, column: 27, scope: !9518)
!9529 = !DILocation(line: 156, column: 8, scope: !9518)
!9530 = !DILocation(line: 157, column: 6, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9518, file: !694, line: 157, column: 6)
!9532 = !DILocation(line: 157, column: 6, scope: !9518)
!9533 = !DILocation(line: 161, column: 8, scope: !9518)
!9534 = !DILocation(line: 163, column: 23, scope: !9518)
!9535 = !DILocation(line: 163, column: 2, scope: !9518)
!9536 = !DILocation(line: 165, column: 2, scope: !9518)
!9537 = !DILocation(line: 166, column: 1, scope: !9518)
!9538 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !694, file: !694, line: 168, type: !9519, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9539)
!9539 = !{!9540, !9541, !9542}
!9540 = !DILocalVariable(name: "chan", arg: 1, scope: !9538, file: !694, line: 168, type: !9224)
!9541 = !DILocalVariable(name: "timeout", arg: 2, scope: !9538, file: !694, line: 168, type: !9210)
!9542 = !DILocalVariable(name: "err", scope: !9538, file: !694, line: 173, type: !103)
!9543 = !DILocation(line: 0, scope: !9538)
!9544 = !DILocation(line: 173, column: 31, scope: !9538)
!9545 = !DILocation(line: 173, column: 12, scope: !9538)
!9546 = !DILocation(line: 180, column: 1, scope: !9538)
!9547 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !694, file: !694, line: 182, type: !9548, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9550)
!9548 = !DISubroutineType(types: !9549)
!9549 = !{!103, !9224}
!9550 = !{!9551, !9552}
!9551 = !DILocalVariable(name: "chan", arg: 1, scope: !9547, file: !694, line: 182, type: !9224)
!9552 = !DILocalVariable(name: "err", scope: !9547, file: !694, line: 187, type: !103)
!9553 = !DILocation(line: 0, scope: !9547)
!9554 = !DILocation(line: 187, column: 33, scope: !9547)
!9555 = !DILocation(line: 187, column: 12, scope: !9547)
!9556 = !DILocation(line: 189, column: 2, scope: !9547)
!9557 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !694, file: !694, line: 192, type: !9558, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9561)
!9558 = !DISubroutineType(types: !9559)
!9559 = !{!103, !9343, !9560, !9210}
!9560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9224, size: 32)
!9561 = !{!9562, !9563, !9564}
!9562 = !DILocalVariable(name: "sub", arg: 1, scope: !9557, file: !694, line: 192, type: !9343)
!9563 = !DILocalVariable(name: "chan", arg: 2, scope: !9557, file: !694, line: 192, type: !9560)
!9564 = !DILocalVariable(name: "timeout", arg: 3, scope: !9557, file: !694, line: 193, type: !9210)
!9565 = !DILocation(line: 0, scope: !9557)
!9566 = !DILocation(line: 199, column: 11, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9557, file: !694, line: 199, column: 6)
!9568 = !DILocation(line: 199, column: 17, scope: !9567)
!9569 = !DILocation(line: 199, column: 6, scope: !9557)
!9570 = !DILocation(line: 203, column: 32, scope: !9557)
!9571 = !DILocation(line: 203, column: 9, scope: !9557)
!9572 = !DILocation(line: 203, column: 2, scope: !9557)
!9573 = !DILocation(line: 204, column: 1, scope: !9557)
!9574 = distinct !DISubprogram(name: "k_msgq_get", scope: !3675, file: !3675, line: 1147, type: !9575, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !690, retainedNodes: !9577)
!9575 = !DISubroutineType(types: !9576)
!9576 = !{!103, !9350, !102, !9210}
!9577 = !{!9578, !9579, !9580}
!9578 = !DILocalVariable(name: "msgq", arg: 1, scope: !9574, file: !3675, line: 1147, type: !9350)
!9579 = !DILocalVariable(name: "data", arg: 2, scope: !9574, file: !3675, line: 1147, type: !102)
!9580 = !DILocalVariable(name: "timeout", arg: 3, scope: !9574, file: !3675, line: 1147, type: !9210)
!9581 = !DILocation(line: 0, scope: !9574)
!9582 = !DILocation(line: 1157, column: 2, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9574, file: !3675, line: 1157, column: 2)
!9584 = !{i64 2155067202}
!9585 = !DILocation(line: 1158, column: 9, scope: !9574)
!9586 = !DILocation(line: 1158, column: 2, scope: !9574)
!9587 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !815, file: !815, line: 368, type: !868, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9588)
!9588 = !{!9589}
!9589 = !DILocalVariable(name: "dev", arg: 1, scope: !9587, file: !815, line: 368, type: !844)
!9590 = !DILocation(line: 0, scope: !9587)
!9591 = !DILocation(line: 370, column: 2, scope: !9587)
!9592 = !DILocation(line: 371, column: 1, scope: !9587)
!9593 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !815, file: !815, line: 243, type: !9594, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9596)
!9594 = !DISubroutineType(types: !9595)
!9595 = !{null, !103, !103, !844}
!9596 = !{!9597, !9598, !9599, !9600, !9602}
!9597 = !DILocalVariable(name: "min", arg: 1, scope: !9593, file: !815, line: 243, type: !103)
!9598 = !DILocalVariable(name: "max", arg: 2, scope: !9593, file: !815, line: 243, type: !103)
!9599 = !DILocalVariable(name: "dev", arg: 3, scope: !9593, file: !815, line: 243, type: !844)
!9600 = !DILocalVariable(name: "data", scope: !9593, file: !815, line: 245, type: !9601)
!9601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!9602 = !DILocalVariable(name: "line", scope: !9593, file: !815, line: 246, type: !103)
!9603 = !DILocation(line: 0, scope: !9593)
!9604 = !DILocation(line: 245, column: 38, scope: !9593)
!9605 = !DILocation(line: 249, column: 24, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !815, line: 249, column: 2)
!9607 = distinct !DILexicalBlock(scope: !9593, file: !815, line: 249, column: 2)
!9608 = !DILocation(line: 249, column: 2, scope: !9607)
!9609 = !DILocation(line: 251, column: 7, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !815, line: 251, column: 7)
!9611 = distinct !DILexicalBlock(scope: !9606, file: !815, line: 249, column: 39)
!9612 = !DILocation(line: 251, column: 7, scope: !9611)
!9613 = !DILocation(line: 253, column: 4, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !815, line: 251, column: 36)
!9615 = !DILocation(line: 256, column: 24, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9614, file: !815, line: 256, column: 8)
!9617 = !DILocation(line: 256, column: 9, scope: !9616)
!9618 = !DILocation(line: 256, column: 8, scope: !9614)
!9619 = !DILocation(line: 260, column: 43, scope: !9614)
!9620 = !DILocation(line: 260, column: 4, scope: !9614)
!9621 = !DILocation(line: 261, column: 3, scope: !9614)
!9622 = !DILocation(line: 249, column: 35, scope: !9606)
!9623 = distinct !{!9623, !9608, !9624}
!9624 = !DILocation(line: 262, column: 2, scope: !9607)
!9625 = !DILocation(line: 263, column: 1, scope: !9593)
!9626 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !815, file: !815, line: 158, type: !396, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9627)
!9627 = !{!9628}
!9628 = !DILocalVariable(name: "line", arg: 1, scope: !9626, file: !815, line: 158, type: !103)
!9629 = !DILocation(line: 0, scope: !9626)
!9630 = !DILocation(line: 170, column: 38, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !815, line: 160, column: 17)
!9632 = distinct !DILexicalBlock(scope: !9626, file: !815, line: 160, column: 6)
!9633 = !DILocation(line: 170, column: 10, scope: !9631)
!9634 = !DILocation(line: 176, column: 1, scope: !9626)
!9635 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !815, file: !815, line: 183, type: !9636, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9638)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{null, !103}
!9638 = !{!9639}
!9639 = !DILocalVariable(name: "line", arg: 1, scope: !9635, file: !815, line: 183, type: !103)
!9640 = !DILocation(line: 0, scope: !9635)
!9641 = !DILocation(line: 195, column: 28, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9643, file: !815, line: 185, column: 17)
!9643 = distinct !DILexicalBlock(scope: !9635, file: !815, line: 185, column: 6)
!9644 = !DILocation(line: 195, column: 3, scope: !9642)
!9645 = !DILocation(line: 200, column: 1, scope: !9635)
!9646 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9647, file: !9647, line: 910, type: !7466, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9648)
!9647 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9648 = !{!9649}
!9649 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9646, file: !9647, line: 910, type: !108)
!9650 = !DILocation(line: 0, scope: !9646)
!9651 = !DILocation(line: 912, column: 3, scope: !9646)
!9652 = !DILocation(line: 913, column: 1, scope: !9646)
!9653 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9647, file: !9647, line: 834, type: !8620, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9654)
!9654 = !{!9655}
!9655 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9653, file: !9647, line: 834, type: !108)
!9656 = !DILocation(line: 0, scope: !9653)
!9657 = !DILocation(line: 836, column: 11, scope: !9653)
!9658 = !DILocation(line: 836, column: 40, scope: !9653)
!9659 = !DILocation(line: 836, column: 3, scope: !9653)
!9660 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !815, file: !815, line: 304, type: !868, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9661)
!9661 = !{!9662}
!9662 = !DILocalVariable(name: "dev", arg: 1, scope: !9660, file: !815, line: 304, type: !844)
!9663 = !DILocation(line: 0, scope: !9660)
!9664 = !DILocation(line: 306, column: 2, scope: !9660)
!9665 = !DILocation(line: 307, column: 1, scope: !9660)
!9666 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !815, file: !815, line: 299, type: !868, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9667)
!9667 = !{!9668}
!9668 = !DILocalVariable(name: "dev", arg: 1, scope: !9666, file: !815, line: 299, type: !844)
!9669 = !DILocation(line: 0, scope: !9666)
!9670 = !DILocation(line: 301, column: 2, scope: !9666)
!9671 = !DILocation(line: 302, column: 1, scope: !9666)
!9672 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !815, file: !815, line: 294, type: !868, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9673)
!9673 = !{!9674}
!9674 = !DILocalVariable(name: "dev", arg: 1, scope: !9672, file: !815, line: 294, type: !844)
!9675 = !DILocation(line: 0, scope: !9672)
!9676 = !DILocation(line: 296, column: 2, scope: !9672)
!9677 = !DILocation(line: 297, column: 1, scope: !9672)
!9678 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !815, file: !815, line: 397, type: !868, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9679)
!9679 = !{!9680}
!9680 = !DILocalVariable(name: "dev", arg: 1, scope: !9678, file: !815, line: 397, type: !844)
!9681 = !DILocation(line: 0, scope: !9678)
!9682 = !DILocation(line: 399, column: 2, scope: !9678)
!9683 = !DILocation(line: 400, column: 1, scope: !9678)
!9684 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !815, file: !815, line: 392, type: !868, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9685)
!9685 = !{!9686}
!9686 = !DILocalVariable(name: "dev", arg: 1, scope: !9684, file: !815, line: 392, type: !844)
!9687 = !DILocation(line: 0, scope: !9684)
!9688 = !DILocation(line: 394, column: 2, scope: !9684)
!9689 = !DILocation(line: 395, column: 1, scope: !9684)
!9690 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !815, file: !815, line: 289, type: !868, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9691)
!9691 = !{!9692}
!9692 = !DILocalVariable(name: "dev", arg: 1, scope: !9690, file: !815, line: 289, type: !844)
!9693 = !DILocation(line: 0, scope: !9690)
!9694 = !DILocation(line: 291, column: 2, scope: !9690)
!9695 = !DILocation(line: 292, column: 1, scope: !9690)
!9696 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !815, file: !815, line: 387, type: !868, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9697)
!9697 = !{!9698}
!9698 = !DILocalVariable(name: "dev", arg: 1, scope: !9696, file: !815, line: 387, type: !844)
!9699 = !DILocation(line: 0, scope: !9696)
!9700 = !DILocation(line: 389, column: 2, scope: !9696)
!9701 = !DILocation(line: 390, column: 1, scope: !9696)
!9702 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !815, file: !815, line: 382, type: !868, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9703)
!9703 = !{!9704}
!9704 = !DILocalVariable(name: "dev", arg: 1, scope: !9702, file: !815, line: 382, type: !844)
!9705 = !DILocation(line: 0, scope: !9702)
!9706 = !DILocation(line: 384, column: 2, scope: !9702)
!9707 = !DILocation(line: 385, column: 1, scope: !9702)
!9708 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !815, file: !815, line: 373, type: !868, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9709)
!9709 = !{!9710}
!9710 = !DILocalVariable(name: "dev", arg: 1, scope: !9708, file: !815, line: 373, type: !844)
!9711 = !DILocation(line: 0, scope: !9708)
!9712 = !DILocation(line: 375, column: 2, scope: !9708)
!9713 = !DILocation(line: 376, column: 1, scope: !9708)
!9714 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !815, file: !815, line: 284, type: !868, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9715)
!9715 = !{!9716}
!9716 = !DILocalVariable(name: "dev", arg: 1, scope: !9714, file: !815, line: 284, type: !844)
!9717 = !DILocation(line: 0, scope: !9714)
!9718 = !DILocation(line: 286, column: 2, scope: !9714)
!9719 = !DILocation(line: 287, column: 1, scope: !9714)
!9720 = distinct !DISubprogram(name: "stm32_exti_init", scope: !815, file: !815, line: 416, type: !842, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9721)
!9721 = !{!9722}
!9722 = !DILocalVariable(name: "dev", arg: 1, scope: !9720, file: !815, line: 416, type: !844)
!9723 = !DILocation(line: 0, scope: !9720)
!9724 = !DILocation(line: 418, column: 2, scope: !9720)
!9725 = !DILocation(line: 420, column: 2, scope: !9720)
!9726 = !DILocation(line: 0, scope: !867)
!9727 = !DILocation(line: 493, column: 2, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !867, file: !815, line: 493, column: 2)
!9729 = !DILocation(line: 497, column: 2, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !867, file: !815, line: 497, column: 2)
!9731 = !DILocation(line: 507, column: 2, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !867, file: !815, line: 507, column: 2)
!9733 = !DILocation(line: 512, column: 2, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !867, file: !815, line: 512, column: 2)
!9735 = !DILocation(line: 516, column: 2, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !867, file: !815, line: 516, column: 2)
!9737 = !DILocation(line: 523, column: 2, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !867, file: !815, line: 523, column: 2)
!9739 = !DILocation(line: 527, column: 2, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !867, file: !815, line: 527, column: 2)
!9741 = !DILocation(line: 581, column: 2, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !867, file: !815, line: 581, column: 2)
!9743 = !DILocation(line: 586, column: 2, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !867, file: !815, line: 586, column: 2)
!9745 = !DILocation(line: 591, column: 2, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !867, file: !815, line: 591, column: 2)
!9747 = !DILocation(line: 595, column: 2, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !867, file: !815, line: 595, column: 2)
!9749 = !DILocation(line: 607, column: 1, scope: !867)
!9750 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !815, file: !815, line: 112, type: !9636, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9751)
!9751 = !{!9752, !9753}
!9752 = !DILocalVariable(name: "line", arg: 1, scope: !9750, file: !815, line: 112, type: !103)
!9753 = !DILocalVariable(name: "irqnum", scope: !9750, file: !815, line: 114, type: !103)
!9754 = !DILocation(line: 0, scope: !9750)
!9755 = !DILocation(line: 121, column: 11, scope: !9750)
!9756 = !DILocation(line: 130, column: 26, scope: !9750)
!9757 = !DILocation(line: 130, column: 2, scope: !9750)
!9758 = !DILocation(line: 134, column: 2, scope: !9750)
!9759 = !DILocation(line: 135, column: 1, scope: !9750)
!9760 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9647, file: !9647, line: 268, type: !7466, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9761)
!9761 = !{!9762}
!9762 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9760, file: !9647, line: 268, type: !108)
!9763 = !DILocation(line: 0, scope: !9760)
!9764 = !DILocation(line: 270, column: 3, scope: !9760)
!9765 = !DILocation(line: 271, column: 1, scope: !9760)
!9766 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !815, file: !815, line: 137, type: !9636, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9767)
!9767 = !{!9768}
!9768 = !DILocalVariable(name: "line", arg: 1, scope: !9766, file: !815, line: 137, type: !103)
!9769 = !DILocation(line: 0, scope: !9766)
!9770 = !DILocation(line: 141, column: 11, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9766, file: !815, line: 141, column: 6)
!9772 = !DILocation(line: 141, column: 6, scope: !9766)
!9773 = !DILocation(line: 145, column: 28, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9771, file: !815, line: 141, column: 17)
!9775 = !DILocation(line: 145, column: 3, scope: !9774)
!9776 = !DILocation(line: 147, column: 2, scope: !9774)
!9777 = !DILocation(line: 151, column: 1, scope: !9766)
!9778 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9647, file: !9647, line: 309, type: !7466, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9779)
!9779 = !{!9780}
!9780 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9778, file: !9647, line: 309, type: !108)
!9781 = !DILocation(line: 0, scope: !9778)
!9782 = !DILocation(line: 311, column: 3, scope: !9778)
!9783 = !DILocation(line: 312, column: 1, scope: !9778)
!9784 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !815, file: !815, line: 202, type: !9785, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9787)
!9785 = !DISubroutineType(types: !9786)
!9786 = !{null, !103, !103}
!9787 = !{!9788, !9789}
!9788 = !DILocalVariable(name: "line", arg: 1, scope: !9784, file: !815, line: 202, type: !103)
!9789 = !DILocalVariable(name: "trigger", arg: 2, scope: !9784, file: !815, line: 202, type: !103)
!9790 = !DILocation(line: 0, scope: !9784)
!9791 = !DILocation(line: 211, column: 2, scope: !9784)
!9792 = !DILocation(line: 213, column: 36, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9784, file: !815, line: 211, column: 19)
!9794 = !DILocation(line: 213, column: 3, scope: !9793)
!9795 = !DILocation(line: 214, column: 3, scope: !9793)
!9796 = !DILocation(line: 215, column: 3, scope: !9793)
!9797 = !DILocation(line: 217, column: 35, scope: !9793)
!9798 = !DILocation(line: 217, column: 3, scope: !9793)
!9799 = !DILocation(line: 218, column: 3, scope: !9793)
!9800 = !DILocation(line: 219, column: 3, scope: !9793)
!9801 = !DILocation(line: 221, column: 36, scope: !9793)
!9802 = !DILocation(line: 221, column: 3, scope: !9793)
!9803 = !DILocation(line: 222, column: 3, scope: !9793)
!9804 = !DILocation(line: 223, column: 3, scope: !9793)
!9805 = !DILocation(line: 225, column: 35, scope: !9793)
!9806 = !DILocation(line: 225, column: 3, scope: !9793)
!9807 = !DILocation(line: 226, column: 3, scope: !9793)
!9808 = !DILocation(line: 227, column: 3, scope: !9793)
!9809 = !DILocation(line: 232, column: 1, scope: !9784)
!9810 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9647, file: !9647, line: 573, type: !7466, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9811)
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9810, file: !9647, line: 573, type: !108)
!9813 = !DILocation(line: 0, scope: !9810)
!9814 = !DILocation(line: 575, column: 3, scope: !9810)
!9815 = !DILocation(line: 577, column: 1, scope: !9810)
!9816 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9647, file: !9647, line: 703, type: !7466, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9817)
!9817 = !{!9818}
!9818 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9816, file: !9647, line: 703, type: !108)
!9819 = !DILocation(line: 0, scope: !9816)
!9820 = !DILocation(line: 705, column: 3, scope: !9816)
!9821 = !DILocation(line: 706, column: 1, scope: !9816)
!9822 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9647, file: !9647, line: 529, type: !7466, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9823)
!9823 = !{!9824}
!9824 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9822, file: !9647, line: 529, type: !108)
!9825 = !DILocation(line: 0, scope: !9822)
!9826 = !DILocation(line: 531, column: 3, scope: !9822)
!9827 = !DILocation(line: 533, column: 1, scope: !9822)
!9828 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9647, file: !9647, line: 661, type: !7466, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9829)
!9829 = !{!9830}
!9830 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9828, file: !9647, line: 661, type: !108)
!9831 = !DILocation(line: 0, scope: !9828)
!9832 = !DILocation(line: 663, column: 3, scope: !9828)
!9833 = !DILocation(line: 664, column: 1, scope: !9828)
!9834 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !815, file: !815, line: 433, type: !9835, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9837)
!9835 = !DISubroutineType(types: !9836)
!9836 = !{!103, !103, !855, !102}
!9837 = !{!9838, !9839, !9840, !9841, !9843}
!9838 = !DILocalVariable(name: "line", arg: 1, scope: !9834, file: !815, line: 433, type: !103)
!9839 = !DILocalVariable(name: "cb", arg: 2, scope: !9834, file: !815, line: 433, type: !855)
!9840 = !DILocalVariable(name: "arg", arg: 3, scope: !9834, file: !815, line: 433, type: !102)
!9841 = !DILocalVariable(name: "dev", scope: !9834, file: !815, line: 435, type: !9842)
!9842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!9843 = !DILocalVariable(name: "data", scope: !9834, file: !815, line: 436, type: !9601)
!9844 = !DILocation(line: 0, scope: !9834)
!9845 = !DILocation(line: 438, column: 21, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9834, file: !815, line: 438, column: 6)
!9847 = !DILocation(line: 438, column: 6, scope: !9846)
!9848 = !DILocation(line: 438, column: 6, scope: !9834)
!9849 = !DILocation(line: 442, column: 20, scope: !9834)
!9850 = !DILocation(line: 443, column: 17, scope: !9834)
!9851 = !DILocation(line: 443, column: 22, scope: !9834)
!9852 = !DILocation(line: 445, column: 2, scope: !9834)
!9853 = !DILocation(line: 446, column: 1, scope: !9834)
!9854 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !815, file: !815, line: 448, type: !9636, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !702, retainedNodes: !9855)
!9855 = !{!9856, !9857, !9858}
!9856 = !DILocalVariable(name: "line", arg: 1, scope: !9854, file: !815, line: 448, type: !103)
!9857 = !DILocalVariable(name: "dev", scope: !9854, file: !815, line: 450, type: !9842)
!9858 = !DILocalVariable(name: "data", scope: !9854, file: !815, line: 451, type: !9601)
!9859 = !DILocation(line: 0, scope: !9854)
!9860 = !DILocation(line: 453, column: 17, scope: !9854)
!9861 = !DILocation(line: 453, column: 20, scope: !9854)
!9862 = !DILocation(line: 454, column: 17, scope: !9854)
!9863 = !DILocation(line: 454, column: 22, scope: !9854)
!9864 = !DILocation(line: 455, column: 1, scope: !9854)
!9865 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1006, file: !1006, line: 183, type: !1044, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9866)
!9866 = !{!9867, !9868, !9869, !9870, !9871}
!9867 = !DILocalVariable(name: "dev", arg: 1, scope: !9865, file: !1006, line: 183, type: !1035)
!9868 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9865, file: !1006, line: 184, type: !1046)
!9869 = !DILocalVariable(name: "pclken", scope: !9865, file: !1006, line: 186, type: !996)
!9870 = !DILocalVariable(name: "reg", scope: !9865, file: !1006, line: 187, type: !1584)
!9871 = !DILocalVariable(name: "reg_val", scope: !9865, file: !1006, line: 188, type: !108)
!9872 = !DILocation(line: 0, scope: !9865)
!9873 = !DILocation(line: 192, column: 6, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9865, file: !1006, line: 192, column: 6)
!9875 = !DILocation(line: 192, column: 6, scope: !9865)
!9876 = !DILocation(line: 197, column: 52, scope: !9865)
!9877 = !DILocation(line: 197, column: 8, scope: !9865)
!9878 = !DILocation(line: 198, column: 12, scope: !9865)
!9879 = !DILocation(line: 199, column: 21, scope: !9865)
!9880 = !DILocation(line: 199, column: 10, scope: !9865)
!9881 = !DILocation(line: 200, column: 7, scope: !9865)
!9882 = !DILocation(line: 202, column: 2, scope: !9865)
!9883 = !DILocation(line: 203, column: 1, scope: !9865)
!9884 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1006, file: !1006, line: 205, type: !1044, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9885)
!9885 = !{!9886, !9887, !9888, !9889, !9890}
!9886 = !DILocalVariable(name: "dev", arg: 1, scope: !9884, file: !1006, line: 205, type: !1035)
!9887 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9884, file: !1006, line: 206, type: !1046)
!9888 = !DILocalVariable(name: "pclken", scope: !9884, file: !1006, line: 208, type: !996)
!9889 = !DILocalVariable(name: "reg", scope: !9884, file: !1006, line: 209, type: !1584)
!9890 = !DILocalVariable(name: "reg_val", scope: !9884, file: !1006, line: 210, type: !108)
!9891 = !DILocation(line: 0, scope: !9884)
!9892 = !DILocation(line: 214, column: 6, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9884, file: !1006, line: 214, column: 6)
!9894 = !DILocation(line: 214, column: 6, scope: !9884)
!9895 = !DILocation(line: 219, column: 52, scope: !9884)
!9896 = !DILocation(line: 219, column: 8, scope: !9884)
!9897 = !DILocation(line: 220, column: 12, scope: !9884)
!9898 = !DILocation(line: 221, column: 22, scope: !9884)
!9899 = !DILocation(line: 221, column: 13, scope: !9884)
!9900 = !DILocation(line: 221, column: 10, scope: !9884)
!9901 = !DILocation(line: 222, column: 7, scope: !9884)
!9902 = !DILocation(line: 224, column: 2, scope: !9884)
!9903 = !DILocation(line: 225, column: 1, scope: !9884)
!9904 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1006, file: !1006, line: 262, type: !1060, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9905)
!9905 = !{!9906, !9907, !9908, !9909, !9910, !9911, !9912, !9913}
!9906 = !DILocalVariable(name: "clock", arg: 1, scope: !9904, file: !1006, line: 262, type: !1035)
!9907 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9904, file: !1006, line: 263, type: !1046)
!9908 = !DILocalVariable(name: "rate", arg: 3, scope: !9904, file: !1006, line: 264, type: !1002)
!9909 = !DILocalVariable(name: "pclken", scope: !9904, file: !1006, line: 266, type: !996)
!9910 = !DILocalVariable(name: "ahb_clock", scope: !9904, file: !1006, line: 273, type: !108)
!9911 = !DILocalVariable(name: "apb1_clock", scope: !9904, file: !1006, line: 274, type: !108)
!9912 = !DILocalVariable(name: "apb2_clock", scope: !9904, file: !1006, line: 276, type: !108)
!9913 = !DILocalVariable(name: "ahb3_clock", scope: !9904, file: !1006, line: 286, type: !108)
!9914 = !DILocation(line: 0, scope: !9904)
!9915 = !DILocation(line: 273, column: 23, scope: !9904)
!9916 = !DILocation(line: 299, column: 18, scope: !9904)
!9917 = !DILocation(line: 299, column: 2, scope: !9904)
!9918 = !DILocation(line: 274, column: 24, scope: !9904)
!9919 = !DILocation(line: 319, column: 3, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9904, file: !1006, line: 299, column: 23)
!9921 = !DILocation(line: 276, column: 24, scope: !9904)
!9922 = !DILocation(line: 323, column: 3, scope: !9920)
!9923 = !DILocation(line: 346, column: 33, scope: !9920)
!9924 = !DILocation(line: 346, column: 11, scope: !9920)
!9925 = !DILocation(line: 350, column: 3, scope: !9920)
!9926 = !DILocation(line: 354, column: 33, scope: !9920)
!9927 = !DILocation(line: 354, column: 11, scope: !9920)
!9928 = !DILocation(line: 358, column: 3, scope: !9920)
!9929 = !DILocation(line: 374, column: 3, scope: !9920)
!9930 = !DILocation(line: 379, column: 3, scope: !9920)
!9931 = !DILocation(line: 0, scope: !9920)
!9932 = !DILocation(line: 396, column: 1, scope: !9904)
!9933 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1006, file: !1006, line: 227, type: !1076, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9934)
!9934 = !{!9935, !9936, !9937, !9938, !9939, !9940, !9941, !9942}
!9935 = !DILocalVariable(name: "dev", arg: 1, scope: !9933, file: !1006, line: 227, type: !1035)
!9936 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9933, file: !1006, line: 228, type: !1046)
!9937 = !DILocalVariable(name: "data", arg: 3, scope: !9933, file: !1006, line: 229, type: !102)
!9938 = !DILocalVariable(name: "pclken", scope: !9933, file: !1006, line: 233, type: !996)
!9939 = !DILocalVariable(name: "reg", scope: !9933, file: !1006, line: 234, type: !1584)
!9940 = !DILocalVariable(name: "reg_val", scope: !9933, file: !1006, line: 235, type: !108)
!9941 = !DILocalVariable(name: "dt_val", scope: !9933, file: !1006, line: 235, type: !108)
!9942 = !DILocalVariable(name: "err", scope: !9933, file: !1006, line: 236, type: !103)
!9943 = !DILocation(line: 0, scope: !9933)
!9944 = !DILocation(line: 241, column: 30, scope: !9933)
!9945 = !DILocation(line: 241, column: 8, scope: !9933)
!9946 = !DILocation(line: 242, column: 10, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9933, file: !1006, line: 242, column: 6)
!9948 = !DILocation(line: 242, column: 6, scope: !9933)
!9949 = !DILocation(line: 247, column: 11, scope: !9933)
!9950 = !DILocation(line: 248, column: 6, scope: !9933)
!9951 = !DILocation(line: 247, column: 44, scope: !9933)
!9952 = !DILocation(line: 250, column: 6, scope: !9933)
!9953 = !DILocation(line: 249, column: 52, scope: !9933)
!9954 = !DILocation(line: 249, column: 8, scope: !9933)
!9955 = !DILocation(line: 251, column: 12, scope: !9933)
!9956 = !DILocation(line: 252, column: 10, scope: !9933)
!9957 = !DILocation(line: 253, column: 7, scope: !9933)
!9958 = !DILocation(line: 255, column: 2, scope: !9933)
!9959 = !DILocation(line: 260, column: 1, scope: !9933)
!9960 = distinct !DISubprogram(name: "enabled_clock", scope: !1006, file: !1006, line: 100, type: !9961, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9963)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{!103, !108}
!9963 = !{!9964, !9965}
!9964 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9960, file: !1006, line: 100, type: !108)
!9965 = !DILocalVariable(name: "r", scope: !9960, file: !1006, line: 102, type: !103)
!9966 = !DILocation(line: 0, scope: !9960)
!9967 = !DILocation(line: 104, column: 2, scope: !9960)
!9968 = !DILocation(line: 180, column: 2, scope: !9960)
!9969 = !DILocation(line: 181, column: 1, scope: !9960)
!9970 = distinct !DISubprogram(name: "get_bus_clock", scope: !1006, file: !1006, line: 79, type: !9971, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9973)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!108, !108, !108}
!9973 = !{!9974, !9975}
!9974 = !DILocalVariable(name: "clock", arg: 1, scope: !9970, file: !1006, line: 79, type: !108)
!9975 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9970, file: !1006, line: 79, type: !108)
!9976 = !DILocation(line: 0, scope: !9970)
!9977 = !DILocation(line: 81, column: 15, scope: !9970)
!9978 = !DILocation(line: 81, column: 2, scope: !9970)
!9979 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1006, file: !1006, line: 68, type: !9980, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9982)
!9980 = !DISubroutineType(types: !9981)
!9981 = !{!108, !108, !103, !103, !103}
!9982 = !{!9983, !9984, !9985, !9986}
!9983 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9979, file: !1006, line: 68, type: !108)
!9984 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9979, file: !1006, line: 69, type: !103)
!9985 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9979, file: !1006, line: 70, type: !103)
!9986 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9979, file: !1006, line: 71, type: !103)
!9987 = !DILocation(line: 0, scope: !9979)
!9988 = !DILocation(line: 75, column: 22, scope: !9979)
!9989 = !DILocation(line: 76, column: 13, scope: !9979)
!9990 = !DILocation(line: 75, column: 34, scope: !9979)
!9991 = !DILocation(line: 75, column: 2, scope: !9979)
!9992 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1006, file: !1006, line: 641, type: !1033, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !9993)
!9993 = !{!9994, !9995, !9996}
!9994 = !DILocalVariable(name: "dev", arg: 1, scope: !9992, file: !1006, line: 641, type: !1035)
!9995 = !DILocalVariable(name: "old_flash_freq", scope: !9992, file: !1006, line: 664, type: !108)
!9996 = !DILocalVariable(name: "new_flash_freq", scope: !9992, file: !1006, line: 665, type: !108)
!9997 = !DILocation(line: 0, scope: !9992)
!9998 = !DILocation(line: 646, column: 2, scope: !9992)
!9999 = !DILocation(line: 667, column: 19, scope: !9992)
!10000 = !DILocation(line: 674, column: 21, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9992, file: !1006, line: 674, column: 6)
!10002 = !DILocation(line: 674, column: 6, scope: !9992)
!10003 = !DILocation(line: 675, column: 3, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10001, file: !1006, line: 674, column: 59)
!10005 = !DILocation(line: 676, column: 2, scope: !10004)
!10006 = !DILocation(line: 680, column: 2, scope: !9992)
!10007 = !DILocation(line: 683, column: 2, scope: !9992)
!10008 = !DILocation(line: 690, column: 3, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !1006, line: 689, column: 9)
!10010 = distinct !DILexicalBlock(scope: !9992, file: !1006, line: 685, column: 6)
!10011 = !DILocation(line: 695, column: 2, scope: !9992)
!10012 = !DILocation(line: 696, column: 2, scope: !9992)
!10013 = !DILocation(line: 696, column: 9, scope: !9992)
!10014 = !DILocation(line: 696, column: 34, scope: !9992)
!10015 = distinct !{!10015, !10012, !10016}
!10016 = !DILocation(line: 697, column: 2, scope: !9992)
!10017 = !DILocation(line: 720, column: 21, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !9992, file: !1006, line: 720, column: 6)
!10019 = !DILocation(line: 720, column: 6, scope: !9992)
!10020 = !DILocation(line: 721, column: 3, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10018, file: !1006, line: 720, column: 60)
!10022 = !DILocation(line: 722, column: 2, scope: !10021)
!10023 = !DILocation(line: 725, column: 18, scope: !9992)
!10024 = !DILocation(line: 728, column: 2, scope: !9992)
!10025 = !DILocation(line: 730, column: 2, scope: !9992)
!10026 = !DILocation(line: 745, column: 2, scope: !9992)
!10027 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10028, file: !10028, line: 3275, type: !3655, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10028 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10029 = !DILocation(line: 3277, column: 21, scope: !10027)
!10030 = !DILocation(line: 3277, column: 3, scope: !10027)
!10031 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1006, file: !1006, line: 507, type: !334, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10032 = !DILocation(line: 516, column: 4, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !1006, line: 515, column: 10)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !1006, line: 513, column: 7)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !1006, line: 510, column: 37)
!10036 = distinct !DILexicalBlock(scope: !10031, file: !1006, line: 510, column: 6)
!10037 = !DILocation(line: 526, column: 3, scope: !10035)
!10038 = !DILocation(line: 527, column: 3, scope: !10035)
!10039 = !DILocation(line: 527, column: 10, scope: !10035)
!10040 = !DILocation(line: 527, column: 31, scope: !10035)
!10041 = distinct !{!10041, !10038, !10042}
!10042 = !DILocation(line: 529, column: 3, scope: !10035)
!10043 = !DILocation(line: 583, column: 3, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10045, file: !1006, line: 577, column: 37)
!10045 = distinct !DILexicalBlock(scope: !10031, file: !1006, line: 577, column: 6)
!10046 = !DILocation(line: 584, column: 3, scope: !10044)
!10047 = !DILocation(line: 584, column: 10, scope: !10044)
!10048 = !DILocation(line: 584, column: 31, scope: !10044)
!10049 = distinct !{!10049, !10046, !10050}
!10050 = !DILocation(line: 585, column: 3, scope: !10044)
!10051 = !DILocation(line: 627, column: 1, scope: !10031)
!10052 = distinct !DISubprogram(name: "set_up_plls", scope: !1006, file: !1006, line: 448, type: !334, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10053 = !DILocation(line: 460, column: 6, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10052, file: !1006, line: 460, column: 6)
!10055 = !DILocation(line: 460, column: 31, scope: !10054)
!10056 = !DILocation(line: 460, column: 6, scope: !10052)
!10057 = !DILocation(line: 461, column: 3, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !1006, line: 460, column: 67)
!10059 = !DILocation(line: 462, column: 3, scope: !10058)
!10060 = !DILocation(line: 463, column: 2, scope: !10058)
!10061 = !DILocation(line: 464, column: 2, scope: !10052)
!10062 = !DILocation(line: 488, column: 2, scope: !10052)
!10063 = !DILocation(line: 492, column: 2, scope: !10052)
!10064 = !DILocation(line: 496, column: 2, scope: !10052)
!10065 = !DILocation(line: 499, column: 2, scope: !10052)
!10066 = !DILocation(line: 500, column: 2, scope: !10052)
!10067 = !DILocation(line: 500, column: 9, scope: !10052)
!10068 = !DILocation(line: 500, column: 30, scope: !10052)
!10069 = distinct !{!10069, !10066, !10070}
!10070 = !DILocation(line: 502, column: 2, scope: !10052)
!10071 = !DILocation(line: 505, column: 1, scope: !10052)
!10072 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10028, file: !10028, line: 3224, type: !7466, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !10073)
!10073 = !{!10074}
!10074 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10072, file: !10028, line: 3224, type: !108)
!10075 = !DILocation(line: 0, scope: !10072)
!10076 = !DILocation(line: 3226, column: 3, scope: !10072)
!10077 = !DILocation(line: 3227, column: 1, scope: !10072)
!10078 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10028, file: !10028, line: 3188, type: !7466, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !10079)
!10079 = !{!10080}
!10080 = !DILocalVariable(name: "Source", arg: 1, scope: !10078, file: !10028, line: 3188, type: !108)
!10081 = !DILocation(line: 0, scope: !10078)
!10082 = !DILocation(line: 3190, column: 3, scope: !10078)
!10083 = !DILocation(line: 3191, column: 1, scope: !10078)
!10084 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10028, file: !10028, line: 3204, type: !3655, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10085 = !DILocation(line: 3206, column: 21, scope: !10084)
!10086 = !DILocation(line: 3206, column: 3, scope: !10084)
!10087 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10028, file: !10028, line: 3240, type: !7466, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !10088)
!10088 = !{!10089}
!10089 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10087, file: !10028, line: 3240, type: !108)
!10090 = !DILocation(line: 0, scope: !10087)
!10091 = !DILocation(line: 3242, column: 3, scope: !10087)
!10092 = !DILocation(line: 3243, column: 1, scope: !10087)
!10093 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10028, file: !10028, line: 3256, type: !7466, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !10094)
!10094 = !{!10095}
!10095 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10093, file: !10028, line: 3256, type: !108)
!10096 = !DILocation(line: 0, scope: !10093)
!10097 = !DILocation(line: 3258, column: 3, scope: !10093)
!10098 = !DILocation(line: 3259, column: 1, scope: !10093)
!10099 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1006, file: !1006, line: 409, type: !334, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10100 = !DILocation(line: 412, column: 6, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10099, file: !1006, line: 412, column: 6)
!10102 = !DILocation(line: 412, column: 27, scope: !10101)
!10103 = !DILocation(line: 412, column: 6, scope: !10099)
!10104 = !DILocation(line: 414, column: 3, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10101, file: !1006, line: 412, column: 33)
!10106 = !DILocation(line: 415, column: 3, scope: !10105)
!10107 = !DILocation(line: 415, column: 10, scope: !10105)
!10108 = !DILocation(line: 415, column: 31, scope: !10105)
!10109 = distinct !{!10109, !10106, !10110}
!10110 = !DILocation(line: 417, column: 3, scope: !10105)
!10111 = !DILocation(line: 421, column: 2, scope: !10099)
!10112 = !DILocation(line: 422, column: 2, scope: !10099)
!10113 = !DILocation(line: 422, column: 9, scope: !10099)
!10114 = !DILocation(line: 422, column: 34, scope: !10099)
!10115 = distinct !{!10115, !10112, !10116}
!10116 = !DILocation(line: 423, column: 2, scope: !10099)
!10117 = !DILocation(line: 424, column: 1, scope: !10099)
!10118 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10028, file: !10028, line: 4195, type: !334, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10119 = !DILocation(line: 4197, column: 3, scope: !10118)
!10120 = !DILocation(line: 4198, column: 1, scope: !10118)
!10121 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10028, file: !10028, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10122 = !DILocation(line: 4186, column: 3, scope: !10121)
!10123 = !DILocation(line: 4187, column: 1, scope: !10121)
!10124 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10028, file: !10028, line: 4205, type: !3655, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10125 = !DILocation(line: 4207, column: 11, scope: !10124)
!10126 = !DILocation(line: 4207, column: 44, scope: !10124)
!10127 = !DILocation(line: 4207, column: 3, scope: !10124)
!10128 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10028, file: !10028, line: 3007, type: !3655, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10129 = !DILocation(line: 3009, column: 11, scope: !10128)
!10130 = !DILocation(line: 3009, column: 44, scope: !10128)
!10131 = !DILocation(line: 3009, column: 3, scope: !10128)
!10132 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10028, file: !10028, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10133 = !DILocation(line: 2989, column: 3, scope: !10132)
!10134 = !DILocation(line: 2990, column: 1, scope: !10132)
!10135 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10028, file: !10028, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10136 = !DILocation(line: 2941, column: 3, scope: !10135)
!10137 = !DILocation(line: 2942, column: 1, scope: !10135)
!10138 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10028, file: !10028, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10139 = !DILocation(line: 2951, column: 3, scope: !10138)
!10140 = !DILocation(line: 2952, column: 1, scope: !10138)
!10141 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10028, file: !10028, line: 2969, type: !3655, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10142 = !DILocation(line: 2971, column: 11, scope: !10141)
!10143 = !DILocation(line: 2971, column: 44, scope: !10141)
!10144 = !DILocation(line: 2971, column: 3, scope: !10141)
!10145 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10028, file: !10028, line: 3143, type: !334, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10146 = !DILocation(line: 3145, column: 3, scope: !10145)
!10147 = !DILocation(line: 3146, column: 1, scope: !10145)
!10148 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10028, file: !10028, line: 3163, type: !3655, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !941, retainedNodes: !251)
!10149 = !DILocation(line: 3165, column: 11, scope: !10148)
!10150 = !DILocation(line: 3165, column: 46, scope: !10148)
!10151 = !DILocation(line: 3165, column: 3, scope: !10148)
!10152 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10153, file: !10153, line: 40, type: !3655, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !251)
!10153 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10154 = !DILocation(line: 45, column: 3, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10156, file: !10153, line: 44, column: 44)
!10156 = distinct !DILexicalBlock(scope: !10157, file: !10153, line: 44, column: 13)
!10157 = distinct !DILexicalBlock(scope: !10152, file: !10153, line: 42, column: 6)
!10158 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10153, file: !10153, line: 56, type: !334, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !251)
!10159 = !DILocation(line: 58, column: 2, scope: !10158)
!10160 = !DILocation(line: 62, column: 1, scope: !10158)
!10161 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10028, file: !10028, line: 4304, type: !10162, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !10164)
!10162 = !DISubroutineType(types: !10163)
!10163 = !{null, !108, !108, !108, !108}
!10164 = !{!10165, !10166, !10167, !10168}
!10165 = !DILocalVariable(name: "Source", arg: 1, scope: !10161, file: !10028, line: 4304, type: !108)
!10166 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10161, file: !10028, line: 4304, type: !108)
!10167 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10161, file: !10028, line: 4304, type: !108)
!10168 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10161, file: !10028, line: 4304, type: !108)
!10169 = !DILocation(line: 0, scope: !10161)
!10170 = !DILocation(line: 4306, column: 3, scope: !10161)
!10171 = !DILocation(line: 4308, column: 3, scope: !10161)
!10172 = !DILocation(line: 4310, column: 3, scope: !10161)
!10173 = !DILocation(line: 4312, column: 1, scope: !10161)
!10174 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10153, file: !10153, line: 69, type: !334, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !251)
!10175 = !DILocation(line: 72, column: 2, scope: !10174)
!10176 = !DILocation(line: 73, column: 1, scope: !10174)
!10177 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10178, file: !10178, line: 1185, type: !7466, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3100, retainedNodes: !10179)
!10178 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10179 = !{!10180, !10181}
!10180 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10177, file: !10178, line: 1185, type: !108)
!10181 = !DILocalVariable(name: "tmpreg", scope: !10177, file: !10178, line: 1187, type: !409)
!10182 = !DILocation(line: 0, scope: !10177)
!10183 = !DILocation(line: 1187, column: 3, scope: !10177)
!10184 = !DILocation(line: 1187, column: 17, scope: !10177)
!10185 = !DILocation(line: 1188, column: 3, scope: !10177)
!10186 = !DILocation(line: 1190, column: 12, scope: !10177)
!10187 = !DILocation(line: 1190, column: 10, scope: !10177)
!10188 = !DILocation(line: 1191, column: 9, scope: !10177)
!10189 = !DILocation(line: 1192, column: 1, scope: !10177)
!10190 = distinct !DISubprogram(name: "uart_console_init", scope: !1137, file: !1137, line: 588, type: !1114, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10191)
!10191 = !{!10192}
!10192 = !DILocalVariable(name: "arg", arg: 1, scope: !10190, file: !1137, line: 588, type: !1092)
!10193 = !DILocation(line: 0, scope: !10190)
!10194 = !DILocation(line: 593, column: 7, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10190, file: !1137, line: 593, column: 6)
!10196 = !DILocation(line: 593, column: 6, scope: !10190)
!10197 = !DILocation(line: 597, column: 2, scope: !10190)
!10198 = !DILocation(line: 599, column: 2, scope: !10190)
!10199 = !DILocation(line: 600, column: 1, scope: !10190)
!10200 = distinct !DISubprogram(name: "device_is_ready", scope: !10201, file: !10201, line: 47, type: !10202, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10204)
!10201 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!131, !1092}
!10204 = !{!10205}
!10205 = !DILocalVariable(name: "dev", arg: 1, scope: !10200, file: !10201, line: 47, type: !1092)
!10206 = !DILocation(line: 0, scope: !10200)
!10207 = !DILocation(line: 55, column: 2, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10200, file: !10201, line: 55, column: 2)
!10209 = !{i64 2155287850}
!10210 = !DILocation(line: 56, column: 9, scope: !10200)
!10211 = !DILocation(line: 56, column: 2, scope: !10200)
!10212 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1137, file: !1137, line: 573, type: !334, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !251)
!10213 = !DILocation(line: 576, column: 2, scope: !10212)
!10214 = !DILocation(line: 579, column: 2, scope: !10212)
!10215 = !DILocation(line: 581, column: 1, scope: !10212)
!10216 = distinct !DISubprogram(name: "console_out", scope: !1137, file: !1137, line: 77, type: !396, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10217)
!10217 = !{!10218}
!10218 = !DILocalVariable(name: "c", arg: 1, scope: !10216, file: !1137, line: 77, type: !103)
!10219 = !DILocation(line: 0, scope: !10216)
!10220 = !DILocation(line: 89, column: 11, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10216, file: !1137, line: 89, column: 6)
!10222 = !DILocation(line: 89, column: 6, scope: !10216)
!10223 = !DILocation(line: 90, column: 3, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10221, file: !1137, line: 89, column: 17)
!10225 = !DILocation(line: 91, column: 2, scope: !10224)
!10226 = !DILocation(line: 92, column: 34, scope: !10216)
!10227 = !DILocation(line: 92, column: 2, scope: !10216)
!10228 = !DILocation(line: 94, column: 2, scope: !10216)
!10229 = distinct !DISubprogram(name: "uart_poll_out", scope: !10230, file: !10230, line: 95, type: !1110, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10231)
!10230 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/benchmark")
!10231 = !{!10232, !10233}
!10232 = !DILocalVariable(name: "dev", arg: 1, scope: !10229, file: !10230, line: 95, type: !1092)
!10233 = !DILocalVariable(name: "out_char", arg: 2, scope: !10229, file: !10230, line: 95, type: !186)
!10234 = !DILocation(line: 0, scope: !10229)
!10235 = !DILocation(line: 105, column: 2, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10229, file: !10230, line: 105, column: 2)
!10237 = !{i64 2155371241}
!10238 = !DILocation(line: 106, column: 2, scope: !10229)
!10239 = !DILocation(line: 107, column: 1, scope: !10229)
!10240 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1086, file: !1086, line: 574, type: !1110, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10241)
!10241 = !{!10242, !10243, !10244}
!10242 = !DILocalVariable(name: "dev", arg: 1, scope: !10240, file: !1086, line: 574, type: !1092)
!10243 = !DILocalVariable(name: "out_char", arg: 2, scope: !10240, file: !1086, line: 575, type: !186)
!10244 = !DILocalVariable(name: "api", scope: !10240, file: !1086, line: 577, type: !1083)
!10245 = !DILocation(line: 0, scope: !10240)
!10246 = !DILocation(line: 578, column: 40, scope: !10240)
!10247 = !DILocation(line: 580, column: 7, scope: !10240)
!10248 = !DILocation(line: 580, column: 2, scope: !10240)
!10249 = !DILocation(line: 581, column: 1, scope: !10240)
!10250 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10202, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10251)
!10251 = !{!10252}
!10252 = !DILocalVariable(name: "dev", arg: 1, scope: !10250, file: !429, line: 730, type: !1092)
!10253 = !DILocation(line: 0, scope: !10250)
!10254 = !DILocation(line: 732, column: 9, scope: !10250)
!10255 = !DILocation(line: 732, column: 2, scope: !10250)
!10256 = distinct !DISubprogram(name: "uart_register_input", scope: !1137, file: !1137, line: 560, type: !10257, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1080, retainedNodes: !10302)
!10257 = !DISubroutineType(types: !10258)
!10258 = !{null, !10259, !10259, !10299}
!10259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10260, size: 32)
!10260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !137, line: 2208, size: 128, elements: !10261)
!10261 = !{!10262}
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10260, file: !137, line: 2209, baseType: !10263, size: 128)
!10263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !137, line: 1709, size: 128, elements: !10264)
!10264 = !{!10265, !10278, !10280}
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10263, file: !137, line: 1710, baseType: !10266, size: 64)
!10266 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10267, line: 46, baseType: !10268)
!10267 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10267, line: 41, size: 64, elements: !10269)
!10269 = !{!10270, !10277}
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10268, file: !10267, line: 42, baseType: !10271, size: 32)
!10271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10272, size: 32)
!10272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10267, line: 39, baseType: !10273)
!10273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10267, line: 35, size: 32, elements: !10274)
!10274 = !{!10275}
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10273, file: !10267, line: 36, baseType: !10276, size: 32)
!10276 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10267, line: 32, baseType: !108)
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10268, file: !10267, line: 43, baseType: !10271, size: 32, offset: 32)
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10263, file: !137, line: 1711, baseType: !10279, offset: 64)
!10279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10263, file: !137, line: 1712, baseType: !10281, size: 64, offset: 64)
!10281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !10282)
!10282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !10283)
!10283 = !{!10284}
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10282, file: !141, line: 232, baseType: !10285, size: 64)
!10285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !10286)
!10286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !10287)
!10287 = !{!10288, !10294}
!10288 = !DIDerivedType(tag: DW_TAG_member, scope: !10286, file: !146, line: 38, baseType: !10289, size: 32)
!10289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10286, file: !146, line: 38, size: 32, elements: !10290)
!10290 = !{!10291, !10293}
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10289, file: !146, line: 39, baseType: !10292, size: 32)
!10292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10286, size: 32)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10289, file: !146, line: 40, baseType: !10292, size: 32)
!10294 = !DIDerivedType(tag: DW_TAG_member, scope: !10286, file: !146, line: 42, baseType: !10295, size: 32, offset: 32)
!10295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10286, file: !146, line: 42, size: 32, elements: !10296)
!10296 = !{!10297, !10298}
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10295, file: !146, line: 43, baseType: !10292, size: 32)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10295, file: !146, line: 44, baseType: !10292, size: 32)
!10299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10300, size: 32)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{!185, !277, !185}
!10302 = !{!10303, !10304, !10305}
!10303 = !DILocalVariable(name: "avail", arg: 1, scope: !10256, file: !1137, line: 560, type: !10259)
!10304 = !DILocalVariable(name: "lines", arg: 2, scope: !10256, file: !1137, line: 560, type: !10259)
!10305 = !DILocalVariable(name: "completion", arg: 3, scope: !10256, file: !1137, line: 561, type: !10299)
!10306 = !DILocation(line: 0, scope: !10256)
!10307 = !DILocation(line: 566, column: 1, scope: !10256)
!10308 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1317, file: !1317, line: 523, type: !1173, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10309)
!10309 = !{!10310, !10311, !10312, !10313, !10314}
!10310 = !DILocalVariable(name: "dev", arg: 1, scope: !10308, file: !1317, line: 523, type: !1175)
!10311 = !DILocalVariable(name: "pin", arg: 2, scope: !10308, file: !1317, line: 524, type: !1190)
!10312 = !DILocalVariable(name: "flags", arg: 3, scope: !10308, file: !1317, line: 524, type: !1191)
!10313 = !DILocalVariable(name: "err", scope: !10308, file: !1317, line: 526, type: !103)
!10314 = !DILocalVariable(name: "pincfg", scope: !10308, file: !1317, line: 527, type: !103)
!10315 = !DILocation(line: 0, scope: !10308)
!10316 = !DILocation(line: 527, column: 2, scope: !10308)
!10317 = !DILocation(line: 532, column: 8, scope: !10308)
!10318 = !DILocation(line: 533, column: 10, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10308, file: !1317, line: 533, column: 6)
!10320 = !DILocation(line: 533, column: 6, scope: !10308)
!10321 = !DILocation(line: 543, column: 13, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10308, file: !1317, line: 543, column: 6)
!10323 = !DILocation(line: 543, column: 28, scope: !10322)
!10324 = !DILocation(line: 543, column: 6, scope: !10308)
!10325 = !DILocation(line: 544, column: 14, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10327, file: !1317, line: 544, column: 7)
!10327 = distinct !DILexicalBlock(scope: !10322, file: !1317, line: 543, column: 34)
!10328 = !DILocation(line: 544, column: 39, scope: !10326)
!10329 = !DILocation(line: 544, column: 7, scope: !10327)
!10330 = !DILocation(line: 545, column: 38, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10326, file: !1317, line: 544, column: 45)
!10332 = !DILocation(line: 545, column: 4, scope: !10331)
!10333 = !DILocation(line: 546, column: 3, scope: !10331)
!10334 = !DILocation(line: 546, column: 21, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10326, file: !1317, line: 546, column: 14)
!10336 = !DILocation(line: 546, column: 45, scope: !10335)
!10337 = !DILocation(line: 546, column: 14, scope: !10326)
!10338 = !DILocation(line: 547, column: 40, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10335, file: !1317, line: 546, column: 51)
!10340 = !DILocation(line: 547, column: 4, scope: !10339)
!10341 = !DILocation(line: 548, column: 3, scope: !10339)
!10342 = !DILocation(line: 551, column: 32, scope: !10308)
!10343 = !DILocation(line: 551, column: 37, scope: !10308)
!10344 = !DILocation(line: 551, column: 2, scope: !10308)
!10345 = !DILocation(line: 554, column: 6, scope: !10308)
!10346 = !DILocation(line: 562, column: 1, scope: !10308)
!10347 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1317, file: !1317, line: 410, type: !10348, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10350)
!10348 = !DISubroutineType(types: !10349)
!10349 = !{!103, !1175, !1002}
!10350 = !{!10351, !10352, !10353, !10355}
!10351 = !DILocalVariable(name: "dev", arg: 1, scope: !10347, file: !1317, line: 410, type: !1175)
!10352 = !DILocalVariable(name: "value", arg: 2, scope: !10347, file: !1317, line: 410, type: !1002)
!10353 = !DILocalVariable(name: "cfg", scope: !10347, file: !1317, line: 412, type: !10354)
!10354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!10355 = !DILocalVariable(name: "gpio", scope: !10347, file: !1317, line: 413, type: !1248)
!10356 = !DILocation(line: 0, scope: !10347)
!10357 = !DILocation(line: 412, column: 45, scope: !10347)
!10358 = !DILocation(line: 413, column: 44, scope: !10347)
!10359 = !DILocation(line: 415, column: 11, scope: !10347)
!10360 = !DILocation(line: 415, column: 9, scope: !10347)
!10361 = !DILocation(line: 417, column: 2, scope: !10347)
!10362 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1317, file: !1317, line: 420, type: !1200, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10363)
!10363 = !{!10364, !10365, !10366, !10367, !10368, !10369}
!10364 = !DILocalVariable(name: "dev", arg: 1, scope: !10362, file: !1317, line: 420, type: !1175)
!10365 = !DILocalVariable(name: "mask", arg: 2, scope: !10362, file: !1317, line: 421, type: !1202)
!10366 = !DILocalVariable(name: "value", arg: 3, scope: !10362, file: !1317, line: 422, type: !1197)
!10367 = !DILocalVariable(name: "cfg", scope: !10362, file: !1317, line: 424, type: !10354)
!10368 = !DILocalVariable(name: "gpio", scope: !10362, file: !1317, line: 425, type: !1248)
!10369 = !DILocalVariable(name: "port_value", scope: !10362, file: !1317, line: 426, type: !108)
!10370 = !DILocation(line: 0, scope: !10362)
!10371 = !DILocation(line: 424, column: 45, scope: !10362)
!10372 = !DILocation(line: 425, column: 44, scope: !10362)
!10373 = !DILocation(line: 430, column: 15, scope: !10362)
!10374 = !DILocation(line: 431, column: 46, scope: !10362)
!10375 = !DILocation(line: 431, column: 44, scope: !10362)
!10376 = !DILocation(line: 431, column: 61, scope: !10362)
!10377 = !DILocation(line: 431, column: 53, scope: !10362)
!10378 = !DILocation(line: 431, column: 2, scope: !10362)
!10379 = !DILocation(line: 435, column: 2, scope: !10362)
!10380 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1317, file: !1317, line: 438, type: !1205, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10381)
!10381 = !{!10382, !10383, !10384, !10385}
!10382 = !DILocalVariable(name: "dev", arg: 1, scope: !10380, file: !1317, line: 438, type: !1175)
!10383 = !DILocalVariable(name: "pins", arg: 2, scope: !10380, file: !1317, line: 439, type: !1202)
!10384 = !DILocalVariable(name: "cfg", scope: !10380, file: !1317, line: 441, type: !10354)
!10385 = !DILocalVariable(name: "gpio", scope: !10380, file: !1317, line: 442, type: !1248)
!10386 = !DILocation(line: 0, scope: !10380)
!10387 = !DILocation(line: 441, column: 45, scope: !10380)
!10388 = !DILocation(line: 442, column: 44, scope: !10380)
!10389 = !DILocation(line: 448, column: 2, scope: !10380)
!10390 = !DILocation(line: 450, column: 2, scope: !10380)
!10391 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1317, file: !1317, line: 453, type: !1205, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10392)
!10392 = !{!10393, !10394, !10395, !10396}
!10393 = !DILocalVariable(name: "dev", arg: 1, scope: !10391, file: !1317, line: 453, type: !1175)
!10394 = !DILocalVariable(name: "pins", arg: 2, scope: !10391, file: !1317, line: 454, type: !1202)
!10395 = !DILocalVariable(name: "cfg", scope: !10391, file: !1317, line: 456, type: !10354)
!10396 = !DILocalVariable(name: "gpio", scope: !10391, file: !1317, line: 457, type: !1248)
!10397 = !DILocation(line: 0, scope: !10391)
!10398 = !DILocation(line: 456, column: 45, scope: !10391)
!10399 = !DILocation(line: 457, column: 44, scope: !10391)
!10400 = !DILocation(line: 467, column: 2, scope: !10391)
!10401 = !DILocation(line: 470, column: 2, scope: !10391)
!10402 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1317, file: !1317, line: 473, type: !1205, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10403)
!10403 = !{!10404, !10405, !10406, !10407}
!10404 = !DILocalVariable(name: "dev", arg: 1, scope: !10402, file: !1317, line: 473, type: !1175)
!10405 = !DILocalVariable(name: "pins", arg: 2, scope: !10402, file: !1317, line: 474, type: !1202)
!10406 = !DILocalVariable(name: "cfg", scope: !10402, file: !1317, line: 476, type: !10354)
!10407 = !DILocalVariable(name: "gpio", scope: !10402, file: !1317, line: 477, type: !1248)
!10408 = !DILocation(line: 0, scope: !10402)
!10409 = !DILocation(line: 476, column: 45, scope: !10402)
!10410 = !DILocation(line: 477, column: 44, scope: !10402)
!10411 = !DILocation(line: 484, column: 2, scope: !10402)
!10412 = !DILocation(line: 487, column: 2, scope: !10402)
!10413 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1317, file: !1317, line: 594, type: !1211, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10414)
!10414 = !{!10415, !10416, !10417, !10418, !10419, !10420, !10422, !10423, !10424}
!10415 = !DILocalVariable(name: "dev", arg: 1, scope: !10413, file: !1317, line: 594, type: !1175)
!10416 = !DILocalVariable(name: "pin", arg: 2, scope: !10413, file: !1317, line: 595, type: !1190)
!10417 = !DILocalVariable(name: "mode", arg: 3, scope: !10413, file: !1317, line: 596, type: !1149)
!10418 = !DILocalVariable(name: "trig", arg: 4, scope: !10413, file: !1317, line: 597, type: !1155)
!10419 = !DILocalVariable(name: "cfg", scope: !10413, file: !1317, line: 599, type: !10354)
!10420 = !DILocalVariable(name: "data", scope: !10413, file: !1317, line: 600, type: !10421)
!10421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!10422 = !DILocalVariable(name: "edge", scope: !10413, file: !1317, line: 601, type: !103)
!10423 = !DILocalVariable(name: "err", scope: !10413, file: !1317, line: 602, type: !103)
!10424 = !DILabel(scope: !10413, name: "exit", file: !1317, line: 643)
!10425 = !DILocation(line: 0, scope: !10413)
!10426 = !DILocation(line: 599, column: 45, scope: !10413)
!10427 = !DILocation(line: 604, column: 6, scope: !10413)
!10428 = !DILocation(line: 605, column: 34, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !1317, line: 605, column: 7)
!10430 = distinct !DILexicalBlock(scope: !10431, file: !1317, line: 604, column: 38)
!10431 = distinct !DILexicalBlock(scope: !10413, file: !1317, line: 604, column: 6)
!10432 = !DILocation(line: 605, column: 7, scope: !10429)
!10433 = !DILocation(line: 605, column: 47, scope: !10429)
!10434 = !DILocation(line: 605, column: 39, scope: !10429)
!10435 = !DILocation(line: 605, column: 7, scope: !10430)
!10436 = !DILocation(line: 606, column: 4, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10429, file: !1317, line: 605, column: 53)
!10438 = !DILocation(line: 607, column: 4, scope: !10437)
!10439 = !DILocation(line: 608, column: 4, scope: !10437)
!10440 = !DILocation(line: 609, column: 3, scope: !10437)
!10441 = !DILocation(line: 600, column: 38, scope: !10413)
!10442 = !DILocation(line: 620, column: 30, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10413, file: !1317, line: 620, column: 6)
!10444 = !DILocation(line: 620, column: 6, scope: !10443)
!10445 = !DILocation(line: 620, column: 57, scope: !10443)
!10446 = !DILocation(line: 620, column: 6, scope: !10413)
!10447 = !DILocation(line: 625, column: 29, scope: !10413)
!10448 = !DILocation(line: 625, column: 2, scope: !10413)
!10449 = !DILocation(line: 627, column: 2, scope: !10413)
!10450 = !DILocation(line: 630, column: 3, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10413, file: !1317, line: 627, column: 16)
!10452 = !DILocation(line: 633, column: 3, scope: !10451)
!10453 = !DILocation(line: 636, column: 3, scope: !10451)
!10454 = !DILocation(line: 639, column: 2, scope: !10413)
!10455 = !DILocation(line: 641, column: 2, scope: !10413)
!10456 = !DILocation(line: 643, column: 1, scope: !10413)
!10457 = !DILocation(line: 644, column: 2, scope: !10413)
!10458 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1317, file: !1317, line: 647, type: !1215, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10459)
!10459 = !{!10460, !10461, !10462, !10463}
!10460 = !DILocalVariable(name: "dev", arg: 1, scope: !10458, file: !1317, line: 647, type: !1175)
!10461 = !DILocalVariable(name: "callback", arg: 2, scope: !10458, file: !1317, line: 648, type: !1217)
!10462 = !DILocalVariable(name: "set", arg: 3, scope: !10458, file: !1317, line: 649, type: !131)
!10463 = !DILocalVariable(name: "data", scope: !10458, file: !1317, line: 651, type: !10421)
!10464 = !DILocation(line: 0, scope: !10458)
!10465 = !DILocation(line: 651, column: 38, scope: !10458)
!10466 = !DILocation(line: 653, column: 37, scope: !10458)
!10467 = !DILocation(line: 653, column: 9, scope: !10458)
!10468 = !DILocation(line: 653, column: 2, scope: !10458)
!10469 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10470, file: !10470, line: 38, type: !10471, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10474)
!10470 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10471 = !DISubroutineType(types: !10472)
!10472 = !{!103, !10473, !1217, !131}
!10473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!10474 = !{!10475, !10476, !10477}
!10475 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10469, file: !10470, line: 38, type: !10473)
!10476 = !DILocalVariable(name: "callback", arg: 2, scope: !10469, file: !10470, line: 39, type: !1217)
!10477 = !DILocalVariable(name: "set", arg: 3, scope: !10469, file: !10470, line: 40, type: !131)
!10478 = !DILocation(line: 0, scope: !10469)
!10479 = !DILocation(line: 45, column: 7, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10469, file: !10470, line: 45, column: 6)
!10481 = !DILocation(line: 45, column: 6, scope: !10469)
!10482 = !DILocation(line: 46, column: 56, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !10470, line: 46, column: 7)
!10484 = distinct !DILexicalBlock(scope: !10480, file: !10470, line: 45, column: 38)
!10485 = !DILocation(line: 46, column: 8, scope: !10483)
!10486 = !DILocation(line: 46, column: 7, scope: !10484)
!10487 = !DILocation(line: 51, column: 13, scope: !10480)
!10488 = !DILocation(line: 56, column: 43, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10490, file: !10470, line: 55, column: 11)
!10490 = distinct !DILexicalBlock(scope: !10469, file: !10470, line: 55, column: 6)
!10491 = !DILocation(line: 56, column: 3, scope: !10489)
!10492 = !DILocation(line: 57, column: 2, scope: !10489)
!10493 = !DILocation(line: 60, column: 1, scope: !10469)
!10494 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1222, file: !1222, line: 261, type: !10495, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10497)
!10495 = !DISubroutineType(types: !10496)
!10496 = !{!131, !10473}
!10497 = !{!10498}
!10498 = !DILocalVariable(name: "list", arg: 1, scope: !10494, file: !1222, line: 261, type: !10473)
!10499 = !DILocation(line: 0, scope: !10494)
!10500 = !DILocation(line: 261, column: 1, scope: !10494)
!10501 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1222, file: !1222, line: 417, type: !10502, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10504)
!10502 = !DISubroutineType(types: !10503)
!10503 = !{!131, !10473, !1388}
!10504 = !{!10505, !10506, !10507, !10508}
!10505 = !DILocalVariable(name: "list", arg: 1, scope: !10501, file: !1222, line: 417, type: !10473)
!10506 = !DILocalVariable(name: "node", arg: 2, scope: !10501, file: !1222, line: 417, type: !1388)
!10507 = !DILocalVariable(name: "prev", scope: !10501, file: !1222, line: 417, type: !1388)
!10508 = !DILocalVariable(name: "test", scope: !10501, file: !1222, line: 417, type: !1388)
!10509 = !DILocation(line: 0, scope: !10501)
!10510 = !DILocation(line: 417, column: 1, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10501, file: !1222, line: 417, column: 1)
!10512 = !DILocation(line: 417, column: 1, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10511, file: !1222, line: 417, column: 1)
!10514 = !DILocation(line: 417, column: 1, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !1222, line: 417, column: 1)
!10516 = distinct !DILexicalBlock(scope: !10513, file: !1222, line: 417, column: 1)
!10517 = !DILocation(line: 417, column: 1, scope: !10516)
!10518 = distinct !{!10518, !10510, !10510}
!10519 = !DILocation(line: 417, column: 1, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10515, file: !1222, line: 417, column: 1)
!10521 = !DILocation(line: 417, column: 1, scope: !10501)
!10522 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1222, file: !1222, line: 298, type: !10523, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10525)
!10523 = !DISubroutineType(types: !10524)
!10524 = !{null, !10473, !1388}
!10525 = !{!10526, !10527}
!10526 = !DILocalVariable(name: "list", arg: 1, scope: !10522, file: !1222, line: 298, type: !10473)
!10527 = !DILocalVariable(name: "node", arg: 2, scope: !10522, file: !1222, line: 298, type: !1388)
!10528 = !DILocation(line: 0, scope: !10522)
!10529 = !DILocation(line: 298, column: 1, scope: !10522)
!10530 = !DILocation(line: 298, column: 1, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10522, file: !1222, line: 298, column: 1)
!10532 = !DILocation(line: 298, column: 1, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10531, file: !1222, line: 298, column: 1)
!10534 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1222, file: !1222, line: 231, type: !10535, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!1388, !10473}
!10537 = !{!10538}
!10538 = !DILocalVariable(name: "list", arg: 1, scope: !10534, file: !1222, line: 231, type: !10473)
!10539 = !DILocation(line: 0, scope: !10534)
!10540 = !DILocation(line: 233, column: 15, scope: !10534)
!10541 = !DILocation(line: 233, column: 2, scope: !10534)
!10542 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1222, file: !1222, line: 209, type: !10543, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10545)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{null, !1388, !1388}
!10545 = !{!10546, !10547}
!10546 = !DILocalVariable(name: "parent", arg: 1, scope: !10542, file: !1222, line: 209, type: !1388)
!10547 = !DILocalVariable(name: "child", arg: 2, scope: !10542, file: !1222, line: 209, type: !1388)
!10548 = !DILocation(line: 0, scope: !10542)
!10549 = !DILocation(line: 211, column: 10, scope: !10542)
!10550 = !DILocation(line: 211, column: 15, scope: !10542)
!10551 = !DILocation(line: 212, column: 1, scope: !10542)
!10552 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1222, file: !1222, line: 214, type: !10523, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10553)
!10553 = !{!10554, !10555}
!10554 = !DILocalVariable(name: "list", arg: 1, scope: !10552, file: !1222, line: 214, type: !10473)
!10555 = !DILocalVariable(name: "node", arg: 2, scope: !10552, file: !1222, line: 214, type: !1388)
!10556 = !DILocation(line: 0, scope: !10552)
!10557 = !DILocation(line: 216, column: 8, scope: !10552)
!10558 = !DILocation(line: 216, column: 13, scope: !10552)
!10559 = !DILocation(line: 217, column: 1, scope: !10552)
!10560 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1222, file: !1222, line: 243, type: !10535, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10561)
!10561 = !{!10562}
!10562 = !DILocalVariable(name: "list", arg: 1, scope: !10560, file: !1222, line: 243, type: !10473)
!10563 = !DILocation(line: 0, scope: !10560)
!10564 = !DILocation(line: 245, column: 15, scope: !10560)
!10565 = !DILocation(line: 245, column: 2, scope: !10560)
!10566 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1222, file: !1222, line: 219, type: !10523, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10567)
!10567 = !{!10568, !10569}
!10568 = !DILocalVariable(name: "list", arg: 1, scope: !10566, file: !1222, line: 219, type: !10473)
!10569 = !DILocalVariable(name: "node", arg: 2, scope: !10566, file: !1222, line: 219, type: !1388)
!10570 = !DILocation(line: 0, scope: !10566)
!10571 = !DILocation(line: 221, column: 8, scope: !10566)
!10572 = !DILocation(line: 221, column: 13, scope: !10566)
!10573 = !DILocation(line: 222, column: 1, scope: !10566)
!10574 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1222, file: !1222, line: 401, type: !10575, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10577)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{null, !10473, !1388, !1388}
!10577 = !{!10578, !10579, !10580}
!10578 = !DILocalVariable(name: "list", arg: 1, scope: !10574, file: !1222, line: 401, type: !10473)
!10579 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10574, file: !1222, line: 401, type: !1388)
!10580 = !DILocalVariable(name: "node", arg: 3, scope: !10574, file: !1222, line: 401, type: !1388)
!10581 = !DILocation(line: 0, scope: !10574)
!10582 = !DILocation(line: 401, column: 1, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10574, file: !1222, line: 401, column: 1)
!10584 = !DILocation(line: 0, scope: !10583)
!10585 = !DILocation(line: 401, column: 1, scope: !10574)
!10586 = !DILocation(line: 401, column: 1, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10583, file: !1222, line: 401, column: 1)
!10588 = !DILocation(line: 401, column: 1, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10587, file: !1222, line: 401, column: 1)
!10590 = !DILocation(line: 401, column: 1, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10589, file: !1222, line: 401, column: 1)
!10592 = !DILocation(line: 401, column: 1, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10583, file: !1222, line: 401, column: 1)
!10594 = !DILocation(line: 401, column: 1, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10593, file: !1222, line: 401, column: 1)
!10596 = !DILocation(line: 401, column: 1, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10595, file: !1222, line: 401, column: 1)
!10598 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1222, file: !1222, line: 285, type: !10599, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10601)
!10599 = !DISubroutineType(types: !10600)
!10600 = !{!1388, !1388}
!10601 = !{!10602}
!10602 = !DILocalVariable(name: "node", arg: 1, scope: !10598, file: !1222, line: 285, type: !1388)
!10603 = !DILocation(line: 0, scope: !10598)
!10604 = !DILocation(line: 285, column: 1, scope: !10598)
!10605 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1222, file: !1222, line: 274, type: !10599, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10606)
!10606 = !{!10607}
!10607 = !DILocalVariable(name: "node", arg: 1, scope: !10605, file: !1222, line: 274, type: !1388)
!10608 = !DILocation(line: 0, scope: !10605)
!10609 = !DILocation(line: 274, column: 1, scope: !10605)
!10610 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1222, file: !1222, line: 204, type: !10599, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10611)
!10611 = !{!10612}
!10612 = !DILocalVariable(name: "node", arg: 1, scope: !10610, file: !1222, line: 204, type: !1388)
!10613 = !DILocation(line: 0, scope: !10610)
!10614 = !DILocation(line: 206, column: 15, scope: !10610)
!10615 = !DILocation(line: 206, column: 2, scope: !10610)
!10616 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1317, file: !1317, line: 342, type: !396, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10617)
!10617 = !{!10618, !10619, !10620}
!10618 = !DILocalVariable(name: "pin", arg: 1, scope: !10616, file: !1317, line: 342, type: !103)
!10619 = !DILocalVariable(name: "line", scope: !10616, file: !1317, line: 344, type: !108)
!10620 = !DILocalVariable(name: "port", scope: !10616, file: !1317, line: 345, type: !103)
!10621 = !DILocation(line: 0, scope: !10616)
!10622 = !DILocation(line: 344, column: 18, scope: !10616)
!10623 = !{i32 983040, i32 0}
!10624 = !DILocation(line: 356, column: 9, scope: !10616)
!10625 = !DILocation(line: 370, column: 2, scope: !10616)
!10626 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1317, file: !1317, line: 37, type: !858, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10627)
!10627 = !{!10628, !10629, !10630}
!10628 = !DILocalVariable(name: "line", arg: 1, scope: !10626, file: !1317, line: 37, type: !103)
!10629 = !DILocalVariable(name: "arg", arg: 2, scope: !10626, file: !1317, line: 37, type: !102)
!10630 = !DILocalVariable(name: "data", scope: !10626, file: !1317, line: 39, type: !10421)
!10631 = !DILocation(line: 0, scope: !10626)
!10632 = !DILocation(line: 41, column: 29, scope: !10626)
!10633 = !DILocation(line: 41, column: 39, scope: !10626)
!10634 = !DILocation(line: 41, column: 44, scope: !10626)
!10635 = !DILocation(line: 41, column: 2, scope: !10626)
!10636 = !DILocation(line: 42, column: 1, scope: !10626)
!10637 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1317, file: !1317, line: 376, type: !10638, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10640)
!10638 = !DISubroutineType(types: !10639)
!10639 = !{!103, !103, !103}
!10640 = !{!10641, !10642, !10643, !10645, !10646}
!10641 = !DILocalVariable(name: "port", arg: 1, scope: !10637, file: !1317, line: 376, type: !103)
!10642 = !DILocalVariable(name: "pin", arg: 2, scope: !10637, file: !1317, line: 376, type: !103)
!10643 = !DILocalVariable(name: "clk", scope: !10637, file: !1317, line: 386, type: !10644)
!10644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1175)
!10645 = !DILocalVariable(name: "pclken", scope: !10637, file: !1317, line: 387, type: !1431)
!10646 = !DILocalVariable(name: "ret", scope: !10637, file: !1317, line: 396, type: !103)
!10647 = !DILocation(line: 0, scope: !10637)
!10648 = !DILocation(line: 387, column: 2, scope: !10637)
!10649 = !DILocation(line: 387, column: 22, scope: !10637)
!10650 = !DILocation(line: 399, column: 8, scope: !10637)
!10651 = !DILocation(line: 400, column: 10, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10637, file: !1317, line: 400, column: 6)
!10653 = !DILocation(line: 400, column: 6, scope: !10637)
!10654 = !DILocation(line: 405, column: 2, scope: !10637)
!10655 = !DILocation(line: 407, column: 2, scope: !10637)
!10656 = !DILocation(line: 408, column: 1, scope: !10637)
!10657 = distinct !DISubprogram(name: "clock_control_on", scope: !950, file: !950, line: 123, type: !1282, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10658)
!10658 = !{!10659, !10660, !10661}
!10659 = !DILocalVariable(name: "dev", arg: 1, scope: !10657, file: !950, line: 123, type: !1175)
!10660 = !DILocalVariable(name: "sys", arg: 2, scope: !10657, file: !950, line: 124, type: !1046)
!10661 = !DILocalVariable(name: "api", scope: !10657, file: !950, line: 126, type: !1275)
!10662 = !DILocation(line: 0, scope: !10657)
!10663 = !DILocation(line: 127, column: 49, scope: !10657)
!10664 = !DILocation(line: 129, column: 14, scope: !10657)
!10665 = !DILocation(line: 129, column: 9, scope: !10657)
!10666 = !DILocation(line: 129, column: 2, scope: !10657)
!10667 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1317, file: !1317, line: 311, type: !9785, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10668)
!10668 = !{!10669, !10670, !10671}
!10669 = !DILocalVariable(name: "port", arg: 1, scope: !10667, file: !1317, line: 311, type: !103)
!10670 = !DILocalVariable(name: "pin", arg: 2, scope: !10667, file: !1317, line: 311, type: !103)
!10671 = !DILocalVariable(name: "line", scope: !10667, file: !1317, line: 313, type: !108)
!10672 = !DILocation(line: 0, scope: !10667)
!10673 = !DILocation(line: 313, column: 18, scope: !10667)
!10674 = !DILocation(line: 337, column: 2, scope: !10667)
!10675 = !DILocation(line: 340, column: 1, scope: !10667)
!10676 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1317, file: !1317, line: 295, type: !10677, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10679)
!10677 = !DISubroutineType(types: !10678)
!10678 = !{!108, !103}
!10679 = !{!10680}
!10680 = !DILocalVariable(name: "pin", arg: 1, scope: !10676, file: !1317, line: 295, type: !103)
!10681 = !DILocation(line: 0, scope: !10676)
!10682 = !DILocation(line: 307, column: 46, scope: !10676)
!10683 = !DILocation(line: 307, column: 27, scope: !10676)
!10684 = !DILocation(line: 307, column: 32, scope: !10676)
!10685 = !DILocation(line: 307, column: 14, scope: !10676)
!10686 = !DILocation(line: 307, column: 39, scope: !10676)
!10687 = !DILocation(line: 307, column: 2, scope: !10676)
!10688 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7080, file: !7080, line: 671, type: !10689, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10691)
!10689 = !DISubroutineType(types: !10690)
!10690 = !{null, !108, !108}
!10691 = !{!10692, !10693}
!10692 = !DILocalVariable(name: "Port", arg: 1, scope: !10688, file: !7080, line: 671, type: !108)
!10693 = !DILocalVariable(name: "Line", arg: 2, scope: !10688, file: !7080, line: 671, type: !108)
!10694 = !DILocation(line: 0, scope: !10688)
!10695 = !DILocation(line: 673, column: 3, scope: !10688)
!10696 = !DILocalVariable(name: "value", arg: 1, scope: !10697, file: !7377, line: 373, type: !108)
!10697 = distinct !DISubprogram(name: "__RBIT", scope: !7377, file: !7377, line: 373, type: !8620, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10698)
!10698 = !{!10696, !10699}
!10699 = !DILocalVariable(name: "result", scope: !10697, file: !7377, line: 375, type: !108)
!10700 = !DILocation(line: 0, scope: !10697, inlinedAt: !10701)
!10701 = distinct !DILocation(line: 673, column: 3, scope: !10688)
!10702 = !DILocation(line: 380, column: 4, scope: !10697, inlinedAt: !10701)
!10703 = !{i64 3731929}
!10704 = !DILocalVariable(name: "value", arg: 1, scope: !10705, file: !7377, line: 403, type: !108)
!10705 = distinct !DISubprogram(name: "__CLZ", scope: !7377, file: !7377, line: 403, type: !10706, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10708)
!10706 = !DISubroutineType(types: !10707)
!10707 = !{!185, !108}
!10708 = !{!10704}
!10709 = !DILocation(line: 0, scope: !10705, inlinedAt: !10710)
!10710 = distinct !DILocation(line: 673, column: 3, scope: !10688)
!10711 = !DILocation(line: 414, column: 7, scope: !10705, inlinedAt: !10710)
!10712 = !DILocation(line: 674, column: 1, scope: !10688)
!10713 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10470, file: !10470, line: 69, type: !10714, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10716)
!10714 = !DISubroutineType(types: !10715)
!10715 = !{null, !10473, !1175, !108}
!10716 = !{!10717, !10718, !10719, !10720, !10721}
!10717 = !DILocalVariable(name: "list", arg: 1, scope: !10713, file: !10470, line: 69, type: !10473)
!10718 = !DILocalVariable(name: "port", arg: 2, scope: !10713, file: !10470, line: 70, type: !1175)
!10719 = !DILocalVariable(name: "pins", arg: 3, scope: !10713, file: !10470, line: 71, type: !108)
!10720 = !DILocalVariable(name: "cb", scope: !10713, file: !10470, line: 73, type: !1217)
!10721 = !DILocalVariable(name: "tmp", scope: !10713, file: !10470, line: 73, type: !1217)
!10722 = !DILocation(line: 0, scope: !10713)
!10723 = !DILocation(line: 75, column: 2, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10713, file: !10470, line: 75, column: 2)
!10725 = !DILocation(line: 0, scope: !10724)
!10726 = !DILocation(line: 76, column: 11, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10728, file: !10470, line: 76, column: 7)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !10470, line: 75, column: 57)
!10729 = distinct !DILexicalBlock(scope: !10724, file: !10470, line: 75, column: 2)
!10730 = !DILocation(line: 76, column: 20, scope: !10727)
!10731 = !DILocation(line: 76, column: 7, scope: !10728)
!10732 = !DILocation(line: 78, column: 8, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10727, file: !10470, line: 76, column: 28)
!10734 = !DILocation(line: 78, column: 4, scope: !10733)
!10735 = !DILocation(line: 79, column: 3, scope: !10733)
!10736 = !DILocation(line: 75, column: 2, scope: !10729)
!10737 = !DILocation(line: 81, column: 1, scope: !10713)
!10738 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7080, file: !7080, line: 710, type: !8620, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10739)
!10739 = !{!10740}
!10740 = !DILocalVariable(name: "Line", arg: 1, scope: !10738, file: !7080, line: 710, type: !108)
!10741 = !DILocation(line: 0, scope: !10738)
!10742 = !DILocation(line: 712, column: 21, scope: !10738)
!10743 = !DILocation(line: 0, scope: !10697, inlinedAt: !10744)
!10744 = distinct !DILocation(line: 712, column: 76, scope: !10738)
!10745 = !DILocation(line: 380, column: 4, scope: !10697, inlinedAt: !10744)
!10746 = !DILocation(line: 0, scope: !10705, inlinedAt: !10747)
!10747 = distinct !DILocation(line: 712, column: 76, scope: !10738)
!10748 = !DILocation(line: 414, column: 7, scope: !10705, inlinedAt: !10747)
!10749 = !DILocation(line: 712, column: 73, scope: !10738)
!10750 = !DILocation(line: 712, column: 3, scope: !10738)
!10751 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10752, file: !10752, line: 910, type: !10753, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10755)
!10752 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10753 = !DISubroutineType(types: !10754)
!10754 = !{null, !1248, !108}
!10755 = !{!10756, !10757}
!10756 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10751, file: !10752, line: 910, type: !1248)
!10757 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10751, file: !10752, line: 910, type: !108)
!10758 = !DILocation(line: 0, scope: !10751)
!10759 = !DILocation(line: 912, column: 3, scope: !10751)
!10760 = !DILocation(line: 913, column: 1, scope: !10751)
!10761 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10752, file: !10752, line: 823, type: !10762, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10764)
!10762 = !DISubroutineType(types: !10763)
!10763 = !{!108, !1248}
!10764 = !{!10765}
!10765 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10761, file: !10752, line: 823, type: !1248)
!10766 = !DILocation(line: 0, scope: !10761)
!10767 = !DILocation(line: 825, column: 21, scope: !10761)
!10768 = !DILocation(line: 825, column: 3, scope: !10761)
!10769 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10752, file: !10752, line: 812, type: !10753, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10770)
!10770 = !{!10771, !10772}
!10771 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10769, file: !10752, line: 812, type: !1248)
!10772 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10769, file: !10752, line: 812, type: !108)
!10773 = !DILocation(line: 0, scope: !10769)
!10774 = !DILocation(line: 814, column: 3, scope: !10769)
!10775 = !DILocation(line: 815, column: 1, scope: !10769)
!10776 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10752, file: !10752, line: 771, type: !10762, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10777)
!10777 = !{!10778}
!10778 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10776, file: !10752, line: 771, type: !1248)
!10779 = !DILocation(line: 0, scope: !10776)
!10780 = !DILocation(line: 773, column: 21, scope: !10776)
!10781 = !DILocation(line: 773, column: 3, scope: !10776)
!10782 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1317, file: !1317, line: 47, type: !10783, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10785)
!10783 = !DISubroutineType(types: !10784)
!10784 = !{!103, !1191, !374}
!10785 = !{!10786, !10787}
!10786 = !DILocalVariable(name: "flags", arg: 1, scope: !10782, file: !1317, line: 47, type: !1191)
!10787 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10782, file: !1317, line: 47, type: !374)
!10788 = !DILocation(line: 0, scope: !10782)
!10789 = !DILocation(line: 50, column: 13, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10782, file: !1317, line: 50, column: 6)
!10791 = !DILocation(line: 50, column: 28, scope: !10790)
!10792 = !DILocation(line: 50, column: 6, scope: !10782)
!10793 = !DILocation(line: 53, column: 11, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10790, file: !1317, line: 50, column: 34)
!10795 = !DILocation(line: 55, column: 14, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10794, file: !1317, line: 55, column: 7)
!10797 = !DILocation(line: 55, column: 35, scope: !10796)
!10798 = !DILocation(line: 55, column: 7, scope: !10794)
!10799 = !DILocation(line: 56, column: 14, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10801, file: !1317, line: 56, column: 8)
!10801 = distinct !DILexicalBlock(scope: !10796, file: !1317, line: 55, column: 41)
!10802 = !DILocation(line: 56, column: 8, scope: !10801)
!10803 = !DILocation(line: 0, scope: !10796)
!10804 = !DILocation(line: 66, column: 14, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10794, file: !1317, line: 66, column: 7)
!10806 = !DILocation(line: 66, column: 30, scope: !10805)
!10807 = !DILocation(line: 66, column: 7, scope: !10794)
!10808 = !DILocation(line: 67, column: 12, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10805, file: !1317, line: 66, column: 36)
!10810 = !DILocation(line: 68, column: 3, scope: !10809)
!10811 = !DILocation(line: 68, column: 21, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10805, file: !1317, line: 68, column: 14)
!10813 = !DILocation(line: 68, column: 39, scope: !10812)
!10814 = !DILocation(line: 68, column: 14, scope: !10805)
!10815 = !DILocation(line: 69, column: 12, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10812, file: !1317, line: 68, column: 45)
!10817 = !DILocation(line: 70, column: 3, scope: !10816)
!10818 = !DILocation(line: 72, column: 21, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10790, file: !1317, line: 72, column: 14)
!10820 = !DILocation(line: 72, column: 35, scope: !10819)
!10821 = !DILocation(line: 72, column: 14, scope: !10790)
!10822 = !DILocation(line: 77, column: 14, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10824, file: !1317, line: 77, column: 7)
!10824 = distinct !DILexicalBlock(scope: !10819, file: !1317, line: 72, column: 41)
!10825 = !DILocation(line: 77, column: 30, scope: !10823)
!10826 = !DILocation(line: 77, column: 7, scope: !10824)
!10827 = !DILocation(line: 0, scope: !10790)
!10828 = !DILocation(line: 90, column: 1, scope: !10782)
!10829 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1317, file: !1317, line: 157, type: !10830, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10832)
!10830 = !DISubroutineType(types: !10831)
!10831 = !{null, !1175, !103, !103, !103}
!10832 = !{!10833, !10834, !10835, !10836, !10837, !10838, !10839, !10840, !10841, !10842, !10843}
!10833 = !DILocalVariable(name: "dev", arg: 1, scope: !10829, file: !1317, line: 157, type: !1175)
!10834 = !DILocalVariable(name: "pin", arg: 2, scope: !10829, file: !1317, line: 157, type: !103)
!10835 = !DILocalVariable(name: "conf", arg: 3, scope: !10829, file: !1317, line: 158, type: !103)
!10836 = !DILocalVariable(name: "func", arg: 4, scope: !10829, file: !1317, line: 158, type: !103)
!10837 = !DILocalVariable(name: "cfg", scope: !10829, file: !1317, line: 160, type: !10354)
!10838 = !DILocalVariable(name: "gpio", scope: !10829, file: !1317, line: 161, type: !1248)
!10839 = !DILocalVariable(name: "pin_ll", scope: !10829, file: !1317, line: 163, type: !103)
!10840 = !DILocalVariable(name: "mode", scope: !10829, file: !1317, line: 227, type: !32)
!10841 = !DILocalVariable(name: "otype", scope: !10829, file: !1317, line: 227, type: !32)
!10842 = !DILocalVariable(name: "ospeed", scope: !10829, file: !1317, line: 227, type: !32)
!10843 = !DILocalVariable(name: "pupd", scope: !10829, file: !1317, line: 227, type: !32)
!10844 = !DILocation(line: 0, scope: !10829)
!10845 = !DILocation(line: 160, column: 45, scope: !10829)
!10846 = !DILocation(line: 161, column: 44, scope: !10829)
!10847 = !DILocation(line: 163, column: 15, scope: !10829)
!10848 = !DILocation(line: 229, column: 14, scope: !10829)
!10849 = !DILocation(line: 246, column: 47, scope: !10829)
!10850 = !DILocation(line: 246, column: 2, scope: !10829)
!10851 = !DILocation(line: 248, column: 43, scope: !10829)
!10852 = !DILocation(line: 248, column: 2, scope: !10829)
!10853 = !DILocation(line: 250, column: 40, scope: !10829)
!10854 = !DILocation(line: 250, column: 2, scope: !10829)
!10855 = !DILocation(line: 252, column: 11, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10829, file: !1317, line: 252, column: 6)
!10857 = !DILocation(line: 252, column: 6, scope: !10829)
!10858 = !DILocation(line: 253, column: 11, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10860, file: !1317, line: 253, column: 7)
!10860 = distinct !DILexicalBlock(scope: !10856, file: !1317, line: 252, column: 36)
!10861 = !DILocation(line: 253, column: 7, scope: !10860)
!10862 = !DILocation(line: 254, column: 4, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10859, file: !1317, line: 253, column: 16)
!10864 = !DILocation(line: 255, column: 3, scope: !10863)
!10865 = !DILocation(line: 256, column: 4, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10859, file: !1317, line: 255, column: 10)
!10867 = !DILocation(line: 260, column: 40, scope: !10829)
!10868 = !DILocation(line: 260, column: 2, scope: !10829)
!10869 = !DILocation(line: 265, column: 1, scope: !10829)
!10870 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1317, file: !1317, line: 137, type: !10677, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10871)
!10871 = !{!10872, !10873}
!10872 = !DILocalVariable(name: "pin", arg: 1, scope: !10870, file: !1317, line: 137, type: !103)
!10873 = !DILocalVariable(name: "pinval", scope: !10870, file: !1317, line: 139, type: !108)
!10874 = !DILocation(line: 0, scope: !10870)
!10875 = !DILocation(line: 149, column: 13, scope: !10870)
!10876 = !DILocation(line: 151, column: 2, scope: !10870)
!10877 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10752, file: !10752, line: 342, type: !10878, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10880)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{null, !1248, !108, !108}
!10880 = !{!10881, !10882, !10883}
!10881 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10877, file: !10752, line: 342, type: !1248)
!10882 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10877, file: !10752, line: 342, type: !108)
!10883 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10877, file: !10752, line: 342, type: !108)
!10884 = !DILocation(line: 0, scope: !10877)
!10885 = !DILocation(line: 344, column: 3, scope: !10877)
!10886 = !DILocation(line: 345, column: 1, scope: !10877)
!10887 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10752, file: !10752, line: 413, type: !10878, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10888)
!10888 = !{!10889, !10890, !10891}
!10889 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10887, file: !10752, line: 413, type: !1248)
!10890 = !DILocalVariable(name: "Pin", arg: 2, scope: !10887, file: !10752, line: 413, type: !108)
!10891 = !DILocalVariable(name: "Speed", arg: 3, scope: !10887, file: !10752, line: 413, type: !108)
!10892 = !DILocation(line: 0, scope: !10887)
!10893 = !DILocation(line: 415, column: 3, scope: !10887)
!10894 = !DILocation(line: 0, scope: !10697, inlinedAt: !10895)
!10895 = distinct !DILocation(line: 415, column: 3, scope: !10887)
!10896 = !DILocation(line: 380, column: 4, scope: !10697, inlinedAt: !10895)
!10897 = !DILocation(line: 0, scope: !10705, inlinedAt: !10898)
!10898 = distinct !DILocation(line: 415, column: 3, scope: !10887)
!10899 = !DILocation(line: 414, column: 7, scope: !10705, inlinedAt: !10898)
!10900 = !DILocation(line: 0, scope: !10697, inlinedAt: !10901)
!10901 = distinct !DILocation(line: 415, column: 3, scope: !10887)
!10902 = !DILocation(line: 0, scope: !10705, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 415, column: 3, scope: !10887)
!10904 = !DILocation(line: 417, column: 1, scope: !10887)
!10905 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10752, file: !10752, line: 484, type: !10878, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10906)
!10906 = !{!10907, !10908, !10909}
!10907 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10905, file: !10752, line: 484, type: !1248)
!10908 = !DILocalVariable(name: "Pin", arg: 2, scope: !10905, file: !10752, line: 484, type: !108)
!10909 = !DILocalVariable(name: "Pull", arg: 3, scope: !10905, file: !10752, line: 484, type: !108)
!10910 = !DILocation(line: 0, scope: !10905)
!10911 = !DILocation(line: 486, column: 3, scope: !10905)
!10912 = !DILocation(line: 0, scope: !10697, inlinedAt: !10913)
!10913 = distinct !DILocation(line: 486, column: 3, scope: !10905)
!10914 = !DILocation(line: 380, column: 4, scope: !10697, inlinedAt: !10913)
!10915 = !DILocation(line: 0, scope: !10705, inlinedAt: !10916)
!10916 = distinct !DILocation(line: 486, column: 3, scope: !10905)
!10917 = !DILocation(line: 414, column: 7, scope: !10705, inlinedAt: !10916)
!10918 = !DILocation(line: 0, scope: !10697, inlinedAt: !10919)
!10919 = distinct !DILocation(line: 486, column: 3, scope: !10905)
!10920 = !DILocation(line: 0, scope: !10705, inlinedAt: !10921)
!10921 = distinct !DILocation(line: 486, column: 3, scope: !10905)
!10922 = !DILocation(line: 487, column: 1, scope: !10905)
!10923 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10752, file: !10752, line: 556, type: !10878, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10924)
!10924 = !{!10925, !10926, !10927}
!10925 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10923, file: !10752, line: 556, type: !1248)
!10926 = !DILocalVariable(name: "Pin", arg: 2, scope: !10923, file: !10752, line: 556, type: !108)
!10927 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10923, file: !10752, line: 556, type: !108)
!10928 = !DILocation(line: 0, scope: !10923)
!10929 = !DILocation(line: 558, column: 3, scope: !10923)
!10930 = !DILocation(line: 0, scope: !10697, inlinedAt: !10931)
!10931 = distinct !DILocation(line: 558, column: 3, scope: !10923)
!10932 = !DILocation(line: 380, column: 4, scope: !10697, inlinedAt: !10931)
!10933 = !DILocation(line: 0, scope: !10705, inlinedAt: !10934)
!10934 = distinct !DILocation(line: 558, column: 3, scope: !10923)
!10935 = !DILocation(line: 414, column: 7, scope: !10705, inlinedAt: !10934)
!10936 = !DILocation(line: 0, scope: !10697, inlinedAt: !10937)
!10937 = distinct !DILocation(line: 558, column: 3, scope: !10923)
!10938 = !DILocation(line: 0, scope: !10705, inlinedAt: !10939)
!10939 = distinct !DILocation(line: 558, column: 3, scope: !10923)
!10940 = !DILocation(line: 560, column: 1, scope: !10923)
!10941 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10752, file: !10752, line: 633, type: !10878, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10942)
!10942 = !{!10943, !10944, !10945}
!10943 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10941, file: !10752, line: 633, type: !1248)
!10944 = !DILocalVariable(name: "Pin", arg: 2, scope: !10941, file: !10752, line: 633, type: !108)
!10945 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10941, file: !10752, line: 633, type: !108)
!10946 = !DILocation(line: 0, scope: !10941)
!10947 = !DILocation(line: 635, column: 3, scope: !10941)
!10948 = !DILocation(line: 0, scope: !10697, inlinedAt: !10949)
!10949 = distinct !DILocation(line: 635, column: 3, scope: !10941)
!10950 = !DILocation(line: 380, column: 4, scope: !10697, inlinedAt: !10949)
!10951 = !DILocation(line: 0, scope: !10705, inlinedAt: !10952)
!10952 = distinct !DILocation(line: 635, column: 3, scope: !10941)
!10953 = !DILocation(line: 414, column: 7, scope: !10705, inlinedAt: !10952)
!10954 = !DILocation(line: 0, scope: !10697, inlinedAt: !10955)
!10955 = distinct !DILocation(line: 635, column: 3, scope: !10941)
!10956 = !DILocation(line: 0, scope: !10705, inlinedAt: !10957)
!10957 = distinct !DILocation(line: 635, column: 3, scope: !10941)
!10958 = !DILocation(line: 637, column: 1, scope: !10941)
!10959 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10752, file: !10752, line: 273, type: !10878, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10960)
!10960 = !{!10961, !10962, !10963}
!10961 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10959, file: !10752, line: 273, type: !1248)
!10962 = !DILocalVariable(name: "Pin", arg: 2, scope: !10959, file: !10752, line: 273, type: !108)
!10963 = !DILocalVariable(name: "Mode", arg: 3, scope: !10959, file: !10752, line: 273, type: !108)
!10964 = !DILocation(line: 0, scope: !10959)
!10965 = !DILocation(line: 275, column: 3, scope: !10959)
!10966 = !DILocation(line: 0, scope: !10697, inlinedAt: !10967)
!10967 = distinct !DILocation(line: 275, column: 3, scope: !10959)
!10968 = !DILocation(line: 380, column: 4, scope: !10697, inlinedAt: !10967)
!10969 = !DILocation(line: 0, scope: !10705, inlinedAt: !10970)
!10970 = distinct !DILocation(line: 275, column: 3, scope: !10959)
!10971 = !DILocation(line: 414, column: 7, scope: !10705, inlinedAt: !10970)
!10972 = !DILocation(line: 0, scope: !10697, inlinedAt: !10973)
!10973 = distinct !DILocation(line: 275, column: 3, scope: !10959)
!10974 = !DILocation(line: 0, scope: !10705, inlinedAt: !10975)
!10975 = distinct !DILocation(line: 275, column: 3, scope: !10959)
!10976 = !DILocation(line: 276, column: 1, scope: !10959)
!10977 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1317, file: !1317, line: 698, type: !1330, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10978)
!10978 = !{!10979, !10980, !10981}
!10979 = !DILocalVariable(name: "dev", arg: 1, scope: !10977, file: !1317, line: 698, type: !1175)
!10980 = !DILocalVariable(name: "data", scope: !10977, file: !1317, line: 700, type: !10421)
!10981 = !DILocalVariable(name: "ret", scope: !10977, file: !1317, line: 701, type: !103)
!10982 = !DILocation(line: 0, scope: !10977)
!10983 = !DILocation(line: 700, column: 38, scope: !10977)
!10984 = !DILocation(line: 703, column: 8, scope: !10977)
!10985 = !DILocation(line: 703, column: 12, scope: !10977)
!10986 = !DILocation(line: 705, column: 7, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10977, file: !1317, line: 705, column: 6)
!10988 = !DILocation(line: 705, column: 6, scope: !10977)
!10989 = !DILocation(line: 722, column: 8, scope: !10977)
!10990 = !DILocation(line: 723, column: 10, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10977, file: !1317, line: 723, column: 6)
!10992 = !DILocation(line: 723, column: 6, scope: !10977)
!10993 = !DILocation(line: 731, column: 1, scope: !10977)
!10994 = distinct !DISubprogram(name: "device_is_ready", scope: !10201, file: !10201, line: 47, type: !10995, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !10997)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!131, !1175}
!10997 = !{!10998}
!10998 = !DILocalVariable(name: "dev", arg: 1, scope: !10994, file: !10201, line: 47, type: !1175)
!10999 = !DILocation(line: 0, scope: !10994)
!11000 = !DILocation(line: 55, column: 2, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10994, file: !10201, line: 55, column: 2)
!11002 = !{i64 2155279057}
!11003 = !DILocation(line: 56, column: 9, scope: !10994)
!11004 = !DILocation(line: 56, column: 2, scope: !10994)
!11005 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1317, file: !1317, line: 270, type: !11006, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11008)
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!103, !1175, !131}
!11008 = !{!11009, !11010, !11011, !11012, !11013}
!11009 = !DILocalVariable(name: "dev", arg: 1, scope: !11005, file: !1317, line: 270, type: !1175)
!11010 = !DILocalVariable(name: "on", arg: 2, scope: !11005, file: !1317, line: 270, type: !131)
!11011 = !DILocalVariable(name: "cfg", scope: !11005, file: !1317, line: 272, type: !10354)
!11012 = !DILocalVariable(name: "ret", scope: !11005, file: !1317, line: 273, type: !103)
!11013 = !DILocalVariable(name: "clk", scope: !11005, file: !1317, line: 278, type: !10644)
!11014 = !DILocation(line: 0, scope: !11005)
!11015 = !DILocation(line: 272, column: 45, scope: !11005)
!11016 = !DILocation(line: 282, column: 38, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !1317, line: 280, column: 10)
!11018 = distinct !DILexicalBlock(scope: !11005, file: !1317, line: 280, column: 6)
!11019 = !DILocation(line: 282, column: 6, scope: !11017)
!11020 = !DILocation(line: 281, column: 9, scope: !11017)
!11021 = !DILocation(line: 293, column: 1, scope: !11005)
!11022 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !10995, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11023)
!11023 = !{!11024}
!11024 = !DILocalVariable(name: "dev", arg: 1, scope: !11022, file: !429, line: 730, type: !1175)
!11025 = !DILocation(line: 0, scope: !11022)
!11026 = !DILocation(line: 732, column: 9, scope: !11022)
!11027 = !DILocation(line: 732, column: 2, scope: !11022)
!11028 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1317, file: !1317, line: 496, type: !11029, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !11031)
!11029 = !DISubroutineType(types: !11030)
!11030 = !{!103, !1175, !103, !103, !103}
!11031 = !{!11032, !11033, !11034, !11035, !11036, !11037}
!11032 = !DILocalVariable(name: "dev", arg: 1, scope: !11028, file: !1317, line: 496, type: !1175)
!11033 = !DILocalVariable(name: "pin", arg: 2, scope: !11028, file: !1317, line: 496, type: !103)
!11034 = !DILocalVariable(name: "conf", arg: 3, scope: !11028, file: !1317, line: 496, type: !103)
!11035 = !DILocalVariable(name: "func", arg: 4, scope: !11028, file: !1317, line: 496, type: !103)
!11036 = !DILocalVariable(name: "ret", scope: !11028, file: !1317, line: 498, type: !103)
!11037 = !DILocalVariable(name: "gpio_out", scope: !11038, file: !1317, line: 508, type: !108)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !1317, line: 507, column: 27)
!11039 = distinct !DILexicalBlock(scope: !11028, file: !1317, line: 507, column: 6)
!11040 = !DILocation(line: 0, scope: !11028)
!11041 = !DILocation(line: 505, column: 2, scope: !11028)
!11042 = !DILocation(line: 507, column: 11, scope: !11039)
!11043 = !DILocation(line: 507, column: 6, scope: !11028)
!11044 = !DILocation(line: 508, column: 28, scope: !11038)
!11045 = !DILocation(line: 0, scope: !11038)
!11046 = !DILocation(line: 510, column: 16, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11038, file: !1317, line: 510, column: 7)
!11048 = !DILocation(line: 0, scope: !11047)
!11049 = !DILocation(line: 510, column: 7, scope: !11038)
!11050 = !DILocation(line: 511, column: 4, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11047, file: !1317, line: 510, column: 32)
!11052 = !DILocation(line: 512, column: 3, scope: !11051)
!11053 = !DILocation(line: 513, column: 4, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !1317, line: 512, column: 39)
!11055 = distinct !DILexicalBlock(scope: !11047, file: !1317, line: 512, column: 14)
!11056 = !DILocation(line: 514, column: 3, scope: !11054)
!11057 = !DILocation(line: 518, column: 1, scope: !11028)
!11058 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1588, file: !1588, line: 526, type: !1491, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11059)
!11059 = !{!11060, !11061, !11062}
!11060 = !DILocalVariable(name: "dev", arg: 1, scope: !11058, file: !1588, line: 526, type: !1493)
!11061 = !DILocalVariable(name: "c", arg: 2, scope: !11058, file: !1588, line: 526, type: !1107)
!11062 = !DILocalVariable(name: "config", scope: !11058, file: !1588, line: 528, type: !11063)
!11063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!11064 = !DILocation(line: 0, scope: !11058)
!11065 = !DILocation(line: 528, column: 48, scope: !11058)
!11066 = !DILocation(line: 531, column: 40, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11058, file: !1588, line: 531, column: 6)
!11068 = !DILocation(line: 531, column: 6, scope: !11067)
!11069 = !DILocation(line: 531, column: 6, scope: !11058)
!11070 = !DILocation(line: 532, column: 34, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11067, file: !1588, line: 531, column: 48)
!11072 = !DILocation(line: 532, column: 3, scope: !11071)
!11073 = !DILocation(line: 533, column: 2, scope: !11071)
!11074 = !DILocation(line: 539, column: 42, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11058, file: !1588, line: 539, column: 6)
!11076 = !DILocation(line: 539, column: 7, scope: !11075)
!11077 = !DILocation(line: 539, column: 6, scope: !11058)
!11078 = !DILocation(line: 543, column: 52, scope: !11058)
!11079 = !DILocation(line: 543, column: 22, scope: !11058)
!11080 = !DILocation(line: 543, column: 5, scope: !11058)
!11081 = !DILocation(line: 545, column: 2, scope: !11058)
!11082 = !DILocation(line: 546, column: 1, scope: !11058)
!11083 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1588, file: !1588, line: 548, type: !1510, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11084)
!11084 = !{!11085, !11086, !11087, !11088}
!11085 = !DILocalVariable(name: "dev", arg: 1, scope: !11083, file: !1588, line: 548, type: !1493)
!11086 = !DILocalVariable(name: "c", arg: 2, scope: !11083, file: !1588, line: 549, type: !186)
!11087 = !DILocalVariable(name: "config", scope: !11083, file: !1588, line: 551, type: !11063)
!11088 = !DILocalVariable(name: "key", scope: !11083, file: !1588, line: 555, type: !32)
!11089 = !DILocation(line: 0, scope: !11083)
!11090 = !DILocation(line: 551, column: 48, scope: !11083)
!11091 = !DILocation(line: 562, column: 2, scope: !11083)
!11092 = !DILocation(line: 563, column: 41, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !1588, line: 563, column: 7)
!11094 = distinct !DILexicalBlock(scope: !11083, file: !1588, line: 562, column: 12)
!11095 = !DILocation(line: 563, column: 7, scope: !11093)
!11096 = !DILocation(line: 563, column: 7, scope: !11094)
!11097 = !DILocation(line: 55, column: 2, scope: !11098, inlinedAt: !11102)
!11098 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11099)
!11099 = !{!11100, !11101}
!11100 = !DILocalVariable(name: "key", scope: !11098, file: !7059, line: 44, type: !32)
!11101 = !DILocalVariable(name: "tmp", scope: !11098, file: !7059, line: 53, type: !32)
!11102 = distinct !DILocation(line: 564, column: 10, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11093, file: !1588, line: 563, column: 49)
!11104 = !{i64 2328779}
!11105 = !DILocation(line: 0, scope: !11098, inlinedAt: !11102)
!11106 = !DILocation(line: 565, column: 42, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11103, file: !1588, line: 565, column: 8)
!11108 = !DILocation(line: 565, column: 8, scope: !11107)
!11109 = !DILocation(line: 565, column: 8, scope: !11103)
!11110 = !DILocalVariable(name: "key", arg: 1, scope: !11111, file: !7059, line: 84, type: !32)
!11111 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11112)
!11112 = !{!11110}
!11113 = !DILocation(line: 0, scope: !11111, inlinedAt: !11114)
!11114 = distinct !DILocation(line: 568, column: 4, scope: !11103)
!11115 = !DILocation(line: 95, column: 2, scope: !11111, inlinedAt: !11114)
!11116 = !{i64 2329596}
!11117 = !DILocation(line: 569, column: 3, scope: !11103)
!11118 = distinct !{!11118, !11091, !11119}
!11119 = !DILocation(line: 570, column: 2, scope: !11083)
!11120 = !DILocation(line: 592, column: 33, scope: !11083)
!11121 = !DILocation(line: 592, column: 2, scope: !11083)
!11122 = !DILocation(line: 0, scope: !11111, inlinedAt: !11123)
!11123 = distinct !DILocation(line: 593, column: 2, scope: !11083)
!11124 = !DILocation(line: 95, column: 2, scope: !11111, inlinedAt: !11123)
!11125 = !DILocation(line: 594, column: 1, scope: !11083)
!11126 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1588, file: !1588, line: 596, type: !1514, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11127)
!11127 = !{!11128, !11129, !11130}
!11128 = !DILocalVariable(name: "dev", arg: 1, scope: !11126, file: !1588, line: 596, type: !1493)
!11129 = !DILocalVariable(name: "config", scope: !11126, file: !1588, line: 598, type: !11063)
!11130 = !DILocalVariable(name: "err", scope: !11126, file: !1588, line: 599, type: !108)
!11131 = !DILocation(line: 0, scope: !11126)
!11132 = !DILocation(line: 598, column: 48, scope: !11126)
!11133 = !DILocation(line: 606, column: 40, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 606, column: 6)
!11135 = !DILocation(line: 606, column: 6, scope: !11134)
!11136 = !DILocation(line: 606, column: 6, scope: !11126)
!11137 = !DILocation(line: 610, column: 39, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 610, column: 6)
!11139 = !DILocation(line: 610, column: 6, scope: !11138)
!11140 = !DILocation(line: 610, column: 6, scope: !11126)
!11141 = !DILocation(line: 614, column: 39, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 614, column: 6)
!11143 = !DILocation(line: 614, column: 6, scope: !11142)
!11144 = !DILocation(line: 614, column: 6, scope: !11126)
!11145 = !DILocation(line: 619, column: 40, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 619, column: 6)
!11147 = !DILocation(line: 619, column: 6, scope: !11146)
!11148 = !DILocation(line: 619, column: 6, scope: !11126)
!11149 = !DILocation(line: 623, column: 10, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 623, column: 6)
!11151 = !DILocation(line: 623, column: 6, scope: !11126)
!11152 = !DILocation(line: 624, column: 34, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11150, file: !1588, line: 623, column: 24)
!11154 = !DILocation(line: 624, column: 3, scope: !11153)
!11155 = !DILocation(line: 625, column: 2, scope: !11153)
!11156 = !DILocation(line: 632, column: 10, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 632, column: 6)
!11158 = !DILocation(line: 632, column: 6, scope: !11126)
!11159 = !DILocation(line: 633, column: 34, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11157, file: !1588, line: 632, column: 32)
!11161 = !DILocation(line: 633, column: 3, scope: !11160)
!11162 = !DILocation(line: 634, column: 2, scope: !11160)
!11163 = !DILocation(line: 636, column: 10, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 636, column: 6)
!11165 = !DILocation(line: 636, column: 6, scope: !11126)
!11166 = !DILocation(line: 637, column: 33, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11164, file: !1588, line: 636, column: 31)
!11168 = !DILocation(line: 637, column: 3, scope: !11167)
!11169 = !DILocation(line: 638, column: 2, scope: !11167)
!11170 = !DILocation(line: 640, column: 10, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11126, file: !1588, line: 640, column: 6)
!11172 = !DILocation(line: 640, column: 6, scope: !11126)
!11173 = !DILocation(line: 641, column: 33, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11171, file: !1588, line: 640, column: 32)
!11175 = !DILocation(line: 641, column: 3, scope: !11174)
!11176 = !DILocation(line: 642, column: 2, scope: !11174)
!11177 = !DILocation(line: 646, column: 32, scope: !11126)
!11178 = !DILocation(line: 646, column: 2, scope: !11126)
!11179 = !DILocation(line: 648, column: 2, scope: !11126)
!11180 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1588, file: !1588, line: 419, type: !1518, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11181)
!11181 = !{!11182, !11183, !11184, !11185, !11187, !11188, !11189, !11190}
!11182 = !DILocalVariable(name: "dev", arg: 1, scope: !11180, file: !1588, line: 419, type: !1493)
!11183 = !DILocalVariable(name: "cfg", arg: 2, scope: !11180, file: !1588, line: 420, type: !1520)
!11184 = !DILocalVariable(name: "config", scope: !11180, file: !1588, line: 422, type: !11063)
!11185 = !DILocalVariable(name: "data", scope: !11180, file: !1588, line: 423, type: !11186)
!11186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!11187 = !DILocalVariable(name: "parity", scope: !11180, file: !1588, line: 424, type: !7643)
!11188 = !DILocalVariable(name: "stopbits", scope: !11180, file: !1588, line: 425, type: !7643)
!11189 = !DILocalVariable(name: "databits", scope: !11180, file: !1588, line: 426, type: !7643)
!11190 = !DILocalVariable(name: "flowctrl", scope: !11180, file: !1588, line: 428, type: !7643)
!11191 = !DILocation(line: 0, scope: !11180)
!11192 = !DILocation(line: 422, column: 48, scope: !11180)
!11193 = !DILocation(line: 423, column: 38, scope: !11180)
!11194 = !DILocation(line: 424, column: 56, scope: !11180)
!11195 = !DILocation(line: 424, column: 51, scope: !11180)
!11196 = !DILocation(line: 424, column: 26, scope: !11180)
!11197 = !DILocation(line: 425, column: 60, scope: !11180)
!11198 = !DILocation(line: 425, column: 55, scope: !11180)
!11199 = !DILocation(line: 425, column: 28, scope: !11180)
!11200 = !DILocation(line: 426, column: 60, scope: !11180)
!11201 = !DILocation(line: 426, column: 55, scope: !11180)
!11202 = !DILocation(line: 426, column: 28, scope: !11180)
!11203 = !DILocation(line: 428, column: 58, scope: !11180)
!11204 = !DILocation(line: 428, column: 53, scope: !11180)
!11205 = !DILocation(line: 428, column: 28, scope: !11180)
!11206 = !DILocation(line: 431, column: 44, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 431, column: 6)
!11208 = !DILocation(line: 438, column: 22, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 437, column: 6)
!11210 = !DILocation(line: 437, column: 6, scope: !11180)
!11211 = !DILocation(line: 448, column: 6, scope: !11180)
!11212 = !DILocation(line: 465, column: 47, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 465, column: 6)
!11214 = !DILocation(line: 475, column: 21, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 475, column: 6)
!11216 = !DILocation(line: 475, column: 6, scope: !11180)
!11217 = !DILocation(line: 476, column: 8, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !1588, line: 476, column: 7)
!11219 = distinct !DILexicalBlock(scope: !11215, file: !1588, line: 475, column: 49)
!11220 = !DILocation(line: 477, column: 34, scope: !11218)
!11221 = !DILocation(line: 476, column: 7, scope: !11219)
!11222 = !DILocation(line: 482, column: 27, scope: !11180)
!11223 = !DILocation(line: 482, column: 2, scope: !11180)
!11224 = !DILocation(line: 484, column: 16, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 484, column: 6)
!11226 = !DILocation(line: 484, column: 13, scope: !11225)
!11227 = !DILocation(line: 484, column: 6, scope: !11180)
!11228 = !DILocation(line: 485, column: 3, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11225, file: !1588, line: 484, column: 44)
!11230 = !DILocation(line: 486, column: 2, scope: !11229)
!11231 = !DILocation(line: 488, column: 18, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 488, column: 6)
!11233 = !DILocation(line: 488, column: 15, scope: !11232)
!11234 = !DILocation(line: 488, column: 6, scope: !11180)
!11235 = !DILocation(line: 489, column: 3, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11232, file: !1588, line: 488, column: 48)
!11237 = !DILocation(line: 490, column: 2, scope: !11236)
!11238 = !DILocation(line: 492, column: 18, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 492, column: 6)
!11240 = !DILocation(line: 492, column: 15, scope: !11239)
!11241 = !DILocation(line: 492, column: 6, scope: !11180)
!11242 = !DILocation(line: 493, column: 3, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11239, file: !1588, line: 492, column: 48)
!11244 = !DILocation(line: 494, column: 2, scope: !11243)
!11245 = !DILocation(line: 496, column: 18, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 496, column: 6)
!11247 = !DILocation(line: 496, column: 15, scope: !11246)
!11248 = !DILocation(line: 496, column: 6, scope: !11180)
!11249 = !DILocation(line: 497, column: 3, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11246, file: !1588, line: 496, column: 46)
!11251 = !DILocation(line: 498, column: 2, scope: !11250)
!11252 = !DILocation(line: 500, column: 11, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11180, file: !1588, line: 500, column: 6)
!11254 = !DILocation(line: 500, column: 29, scope: !11253)
!11255 = !DILocation(line: 500, column: 20, scope: !11253)
!11256 = !DILocation(line: 500, column: 6, scope: !11180)
!11257 = !DILocation(line: 501, column: 3, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11253, file: !1588, line: 500, column: 40)
!11259 = !DILocation(line: 502, column: 26, scope: !11258)
!11260 = !DILocation(line: 502, column: 19, scope: !11258)
!11261 = !DILocation(line: 503, column: 2, scope: !11258)
!11262 = !DILocation(line: 505, column: 26, scope: !11180)
!11263 = !DILocation(line: 505, column: 2, scope: !11180)
!11264 = !DILocation(line: 506, column: 2, scope: !11180)
!11265 = !DILocation(line: 507, column: 1, scope: !11180)
!11266 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1588, file: !1588, line: 509, type: !1531, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11267)
!11267 = !{!11268, !11269, !11270}
!11268 = !DILocalVariable(name: "dev", arg: 1, scope: !11266, file: !1588, line: 509, type: !1493)
!11269 = !DILocalVariable(name: "cfg", arg: 2, scope: !11266, file: !1588, line: 510, type: !1533)
!11270 = !DILocalVariable(name: "data", scope: !11266, file: !1588, line: 512, type: !11186)
!11271 = !DILocation(line: 0, scope: !11266)
!11272 = !DILocation(line: 512, column: 38, scope: !11266)
!11273 = !DILocation(line: 514, column: 24, scope: !11266)
!11274 = !DILocation(line: 514, column: 7, scope: !11266)
!11275 = !DILocation(line: 514, column: 16, scope: !11266)
!11276 = !DILocation(line: 515, column: 41, scope: !11266)
!11277 = !{i32 0, i32 1537}
!11278 = !DILocation(line: 515, column: 16, scope: !11266)
!11279 = !DILocation(line: 515, column: 7, scope: !11266)
!11280 = !DILocation(line: 515, column: 14, scope: !11266)
!11281 = !DILocation(line: 517, column: 3, scope: !11266)
!11282 = !{i32 0, i32 12289}
!11283 = !DILocation(line: 516, column: 19, scope: !11266)
!11284 = !DILocation(line: 516, column: 7, scope: !11266)
!11285 = !DILocation(line: 516, column: 17, scope: !11266)
!11286 = !DILocation(line: 519, column: 3, scope: !11266)
!11287 = !DILocation(line: 519, column: 33, scope: !11266)
!11288 = !DILocation(line: 518, column: 19, scope: !11266)
!11289 = !DILocation(line: 518, column: 7, scope: !11266)
!11290 = !DILocation(line: 518, column: 17, scope: !11266)
!11291 = !DILocation(line: 521, column: 3, scope: !11266)
!11292 = !{i32 0, i32 769}
!11293 = !DILocation(line: 520, column: 19, scope: !11266)
!11294 = !DILocation(line: 520, column: 7, scope: !11266)
!11295 = !DILocation(line: 520, column: 17, scope: !11266)
!11296 = !DILocation(line: 522, column: 2, scope: !11266)
!11297 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1588, file: !1588, line: 205, type: !11298, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11300)
!11298 = !DISubroutineType(types: !11299)
!11299 = !{!108, !1493}
!11300 = !{!11301, !11302}
!11301 = !DILocalVariable(name: "dev", arg: 1, scope: !11297, file: !1588, line: 205, type: !1493)
!11302 = !DILocalVariable(name: "config", scope: !11297, file: !1588, line: 207, type: !11063)
!11303 = !DILocation(line: 0, scope: !11297)
!11304 = !DILocation(line: 207, column: 48, scope: !11297)
!11305 = !DILocation(line: 209, column: 36, scope: !11297)
!11306 = !DILocation(line: 209, column: 9, scope: !11297)
!11307 = !DILocation(line: 209, column: 2, scope: !11297)
!11308 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1588, file: !1588, line: 270, type: !11309, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11311)
!11309 = !DISubroutineType(types: !11310)
!11310 = !{!1459, !108}
!11311 = !{!11312}
!11312 = !DILocalVariable(name: "parity", arg: 1, scope: !11308, file: !1588, line: 270, type: !108)
!11313 = !DILocation(line: 0, scope: !11308)
!11314 = !DILocation(line: 272, column: 2, scope: !11308)
!11315 = !DILocation(line: 281, column: 1, scope: !11308)
!11316 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1588, file: !1588, line: 220, type: !11298, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11317)
!11317 = !{!11318, !11319}
!11318 = !DILocalVariable(name: "dev", arg: 1, scope: !11316, file: !1588, line: 220, type: !1493)
!11319 = !DILocalVariable(name: "config", scope: !11316, file: !1588, line: 222, type: !11063)
!11320 = !DILocation(line: 0, scope: !11316)
!11321 = !DILocation(line: 222, column: 48, scope: !11316)
!11322 = !DILocation(line: 224, column: 44, scope: !11316)
!11323 = !DILocation(line: 224, column: 9, scope: !11316)
!11324 = !DILocation(line: 224, column: 2, scope: !11316)
!11325 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1588, file: !1588, line: 304, type: !11326, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11328)
!11326 = !DISubroutineType(types: !11327)
!11327 = !{!1473, !108}
!11328 = !{!11329}
!11329 = !DILocalVariable(name: "sb", arg: 1, scope: !11325, file: !1588, line: 304, type: !108)
!11330 = !DILocation(line: 0, scope: !11325)
!11331 = !DILocation(line: 306, column: 2, scope: !11325)
!11332 = !DILocation(line: 0, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11325, file: !1588, line: 306, column: 14)
!11334 = !DILocation(line: 323, column: 1, scope: !11325)
!11335 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1588, file: !1588, line: 235, type: !11298, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11336)
!11336 = !{!11337, !11338}
!11337 = !DILocalVariable(name: "dev", arg: 1, scope: !11335, file: !1588, line: 235, type: !1493)
!11338 = !DILocalVariable(name: "config", scope: !11335, file: !1588, line: 237, type: !11063)
!11339 = !DILocation(line: 0, scope: !11335)
!11340 = !DILocation(line: 237, column: 48, scope: !11335)
!11341 = !DILocation(line: 239, column: 39, scope: !11335)
!11342 = !DILocation(line: 239, column: 9, scope: !11335)
!11343 = !DILocation(line: 239, column: 2, scope: !11335)
!11344 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1588, file: !1588, line: 355, type: !11345, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11347)
!11345 = !DISubroutineType(types: !11346)
!11346 = !{!1466, !108, !108}
!11347 = !{!11348, !11349}
!11348 = !DILocalVariable(name: "db", arg: 1, scope: !11344, file: !1588, line: 355, type: !108)
!11349 = !DILocalVariable(name: "p", arg: 2, scope: !11344, file: !1588, line: 356, type: !108)
!11350 = !DILocation(line: 0, scope: !11344)
!11351 = !DILocation(line: 358, column: 2, scope: !11344)
!11352 = !DILocation(line: 384, column: 1, scope: !11344)
!11353 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1588, file: !1588, line: 250, type: !11298, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11354)
!11354 = !{!11355, !11356}
!11355 = !DILocalVariable(name: "dev", arg: 1, scope: !11353, file: !1588, line: 250, type: !1493)
!11356 = !DILocalVariable(name: "config", scope: !11353, file: !1588, line: 252, type: !11063)
!11357 = !DILocation(line: 0, scope: !11353)
!11358 = !DILocation(line: 252, column: 48, scope: !11353)
!11359 = !DILocation(line: 254, column: 40, scope: !11353)
!11360 = !DILocation(line: 254, column: 9, scope: !11353)
!11361 = !DILocation(line: 254, column: 2, scope: !11353)
!11362 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1588, file: !1588, line: 409, type: !11363, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11365)
!11363 = !DISubroutineType(types: !11364)
!11364 = !{!1479, !108}
!11365 = !{!11366}
!11366 = !DILocalVariable(name: "fc", arg: 1, scope: !11362, file: !1588, line: 409, type: !108)
!11367 = !DILocation(line: 0, scope: !11362)
!11368 = !DILocation(line: 411, column: 9, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11362, file: !1588, line: 411, column: 6)
!11370 = !DILocation(line: 416, column: 1, scope: !11362)
!11371 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11372, file: !11372, line: 967, type: !11373, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11375)
!11372 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11373 = !DISubroutineType(types: !11374)
!11374 = !{!108, !1534}
!11375 = !{!11376}
!11376 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11371, file: !11372, line: 967, type: !1534)
!11377 = !DILocation(line: 0, scope: !11371)
!11378 = !DILocation(line: 969, column: 21, scope: !11371)
!11379 = !DILocation(line: 969, column: 3, scope: !11371)
!11380 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11372, file: !11372, line: 601, type: !11373, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11381)
!11381 = !{!11382}
!11382 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11380, file: !11372, line: 601, type: !1534)
!11383 = !DILocation(line: 0, scope: !11380)
!11384 = !DILocation(line: 603, column: 21, scope: !11380)
!11385 = !DILocation(line: 603, column: 3, scope: !11380)
!11386 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11372, file: !11372, line: 820, type: !11373, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11387)
!11387 = !{!11388}
!11388 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11386, file: !11372, line: 820, type: !1534)
!11389 = !DILocation(line: 0, scope: !11386)
!11390 = !DILocation(line: 822, column: 21, scope: !11386)
!11391 = !DILocation(line: 822, column: 3, scope: !11386)
!11392 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11372, file: !11372, line: 547, type: !11373, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11393)
!11393 = !{!11394}
!11394 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11392, file: !11372, line: 547, type: !1534)
!11395 = !DILocation(line: 0, scope: !11392)
!11396 = !DILocation(line: 549, column: 21, scope: !11392)
!11397 = !DILocation(line: 549, column: 3, scope: !11392)
!11398 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1588, file: !1588, line: 257, type: !11399, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11401)
!11399 = !DISubroutineType(types: !11400)
!11400 = !{!108, !1459}
!11401 = !{!11402}
!11402 = !DILocalVariable(name: "parity", arg: 1, scope: !11398, file: !1588, line: 257, type: !1459)
!11403 = !DILocation(line: 0, scope: !11398)
!11404 = !DILocation(line: 259, column: 2, scope: !11398)
!11405 = !DILocation(line: 268, column: 1, scope: !11398)
!11406 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1588, file: !1588, line: 283, type: !11407, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11409)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{!108, !1473}
!11409 = !{!11410}
!11410 = !DILocalVariable(name: "sb", arg: 1, scope: !11406, file: !1588, line: 283, type: !1473)
!11411 = !DILocation(line: 0, scope: !11406)
!11412 = !DILocation(line: 285, column: 2, scope: !11406)
!11413 = !DILocation(line: 0, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11406, file: !1588, line: 285, column: 14)
!11415 = !DILocation(line: 302, column: 1, scope: !11406)
!11416 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1588, file: !1588, line: 325, type: !11417, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11419)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{!108, !1466, !1459}
!11419 = !{!11420, !11421}
!11420 = !DILocalVariable(name: "db", arg: 1, scope: !11416, file: !1588, line: 325, type: !1466)
!11421 = !DILocalVariable(name: "p", arg: 2, scope: !11416, file: !1588, line: 326, type: !1459)
!11422 = !DILocation(line: 0, scope: !11416)
!11423 = !DILocation(line: 328, column: 2, scope: !11416)
!11424 = !DILocation(line: 353, column: 1, scope: !11416)
!11425 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1588, file: !1588, line: 393, type: !11426, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11428)
!11426 = !DISubroutineType(types: !11427)
!11427 = !{!108, !1479}
!11428 = !{!11429}
!11429 = !DILocalVariable(name: "fc", arg: 1, scope: !11425, file: !1588, line: 393, type: !1479)
!11430 = !DILocation(line: 0, scope: !11425)
!11431 = !DILocation(line: 395, column: 9, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11425, file: !1588, line: 395, column: 6)
!11433 = !DILocation(line: 400, column: 1, scope: !11425)
!11434 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11372, file: !11372, line: 424, type: !11435, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11437)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{null, !1534}
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11434, file: !11372, line: 424, type: !1534)
!11439 = !DILocation(line: 0, scope: !11434)
!11440 = !DILocation(line: 426, column: 3, scope: !11434)
!11441 = !DILocation(line: 427, column: 1, scope: !11434)
!11442 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1588, file: !1588, line: 197, type: !11443, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11445)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{null, !1493, !108}
!11445 = !{!11446, !11447, !11448}
!11446 = !DILocalVariable(name: "dev", arg: 1, scope: !11442, file: !1588, line: 197, type: !1493)
!11447 = !DILocalVariable(name: "parity", arg: 2, scope: !11442, file: !1588, line: 198, type: !108)
!11448 = !DILocalVariable(name: "config", scope: !11442, file: !1588, line: 200, type: !11063)
!11449 = !DILocation(line: 0, scope: !11442)
!11450 = !DILocation(line: 200, column: 48, scope: !11442)
!11451 = !DILocation(line: 202, column: 29, scope: !11442)
!11452 = !DILocation(line: 202, column: 2, scope: !11442)
!11453 = !DILocation(line: 203, column: 1, scope: !11442)
!11454 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1588, file: !1588, line: 212, type: !11443, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11455)
!11455 = !{!11456, !11457, !11458}
!11456 = !DILocalVariable(name: "dev", arg: 1, scope: !11454, file: !1588, line: 212, type: !1493)
!11457 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11454, file: !1588, line: 213, type: !108)
!11458 = !DILocalVariable(name: "config", scope: !11454, file: !1588, line: 215, type: !11063)
!11459 = !DILocation(line: 0, scope: !11454)
!11460 = !DILocation(line: 215, column: 48, scope: !11454)
!11461 = !DILocation(line: 217, column: 37, scope: !11454)
!11462 = !DILocation(line: 217, column: 2, scope: !11454)
!11463 = !DILocation(line: 218, column: 1, scope: !11454)
!11464 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1588, file: !1588, line: 227, type: !11443, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11465)
!11465 = !{!11466, !11467, !11468}
!11466 = !DILocalVariable(name: "dev", arg: 1, scope: !11464, file: !1588, line: 227, type: !1493)
!11467 = !DILocalVariable(name: "databits", arg: 2, scope: !11464, file: !1588, line: 228, type: !108)
!11468 = !DILocalVariable(name: "config", scope: !11464, file: !1588, line: 230, type: !11063)
!11469 = !DILocation(line: 0, scope: !11464)
!11470 = !DILocation(line: 230, column: 48, scope: !11464)
!11471 = !DILocation(line: 232, column: 32, scope: !11464)
!11472 = !DILocation(line: 232, column: 2, scope: !11464)
!11473 = !DILocation(line: 233, column: 1, scope: !11464)
!11474 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1588, file: !1588, line: 242, type: !11443, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11475)
!11475 = !{!11476, !11477, !11478}
!11476 = !DILocalVariable(name: "dev", arg: 1, scope: !11474, file: !1588, line: 242, type: !1493)
!11477 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11474, file: !1588, line: 243, type: !108)
!11478 = !DILocalVariable(name: "config", scope: !11474, file: !1588, line: 245, type: !11063)
!11479 = !DILocation(line: 0, scope: !11474)
!11480 = !DILocation(line: 245, column: 48, scope: !11474)
!11481 = !DILocation(line: 247, column: 33, scope: !11474)
!11482 = !DILocation(line: 247, column: 2, scope: !11474)
!11483 = !DILocation(line: 248, column: 1, scope: !11474)
!11484 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1588, file: !1588, line: 107, type: !11443, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11485)
!11485 = !{!11486, !11487, !11488, !11489, !11490}
!11486 = !DILocalVariable(name: "dev", arg: 1, scope: !11484, file: !1588, line: 107, type: !1493)
!11487 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11484, file: !1588, line: 107, type: !108)
!11488 = !DILocalVariable(name: "config", scope: !11484, file: !1588, line: 109, type: !11063)
!11489 = !DILocalVariable(name: "data", scope: !11484, file: !1588, line: 110, type: !11186)
!11490 = !DILocalVariable(name: "clock_rate", scope: !11484, file: !1588, line: 112, type: !108)
!11491 = !DILocation(line: 0, scope: !11484)
!11492 = !DILocation(line: 109, column: 48, scope: !11484)
!11493 = !DILocation(line: 110, column: 38, scope: !11484)
!11494 = !DILocation(line: 112, column: 2, scope: !11484)
!11495 = !DILocation(line: 123, column: 36, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11497, file: !1588, line: 123, column: 7)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !1588, line: 122, column: 9)
!11498 = distinct !DILexicalBlock(scope: !11484, file: !1588, line: 115, column: 6)
!11499 = !DILocation(line: 124, column: 42, scope: !11496)
!11500 = !DILocation(line: 123, column: 7, scope: !11496)
!11501 = !DILocation(line: 125, column: 22, scope: !11496)
!11502 = !DILocation(line: 123, column: 7, scope: !11497)
!11503 = !DILocation(line: 126, column: 4, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !1588, line: 126, column: 4)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !1588, line: 126, column: 4)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !1588, line: 126, column: 4)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !1588, line: 126, column: 4)
!11508 = distinct !DILexicalBlock(scope: !11496, file: !1588, line: 125, column: 27)
!11509 = !DILocation(line: 127, column: 4, scope: !11508)
!11510 = !DILocation(line: 176, column: 36, scope: !11484)
!11511 = !DILocation(line: 176, column: 3, scope: !11484)
!11512 = !DILocation(line: 179, column: 32, scope: !11484)
!11513 = !DILocation(line: 180, column: 10, scope: !11484)
!11514 = !DILocation(line: 179, column: 3, scope: !11484)
!11515 = !DILocation(line: 195, column: 1, scope: !11484)
!11516 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11372, file: !11372, line: 410, type: !11435, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11517)
!11517 = !{!11518}
!11518 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11516, file: !11372, line: 410, type: !1534)
!11519 = !DILocation(line: 0, scope: !11516)
!11520 = !DILocation(line: 412, column: 3, scope: !11516)
!11521 = !DILocation(line: 413, column: 1, scope: !11516)
!11522 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !950, file: !950, line: 216, type: !1567, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11523)
!11523 = !{!11524, !11525, !11526, !11527}
!11524 = !DILocalVariable(name: "dev", arg: 1, scope: !11522, file: !950, line: 216, type: !1493)
!11525 = !DILocalVariable(name: "sys", arg: 2, scope: !11522, file: !950, line: 217, type: !1046)
!11526 = !DILocalVariable(name: "rate", arg: 3, scope: !11522, file: !950, line: 218, type: !1002)
!11527 = !DILocalVariable(name: "api", scope: !11522, file: !950, line: 220, type: !1545)
!11528 = !DILocation(line: 0, scope: !11522)
!11529 = !DILocation(line: 221, column: 49, scope: !11522)
!11530 = !DILocation(line: 223, column: 11, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11522, file: !950, line: 223, column: 6)
!11532 = !DILocation(line: 223, column: 20, scope: !11531)
!11533 = !DILocation(line: 223, column: 6, scope: !11522)
!11534 = !DILocation(line: 227, column: 9, scope: !11522)
!11535 = !DILocation(line: 227, column: 2, scope: !11522)
!11536 = !DILocation(line: 228, column: 1, scope: !11522)
!11537 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3646, file: !3646, line: 175, type: !3647, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11538)
!11538 = !{!11539}
!11539 = !DILocalVariable(name: "level", arg: 1, scope: !11537, file: !3646, line: 175, type: !103)
!11540 = !DILocation(line: 0, scope: !11537)
!11541 = !DILocation(line: 177, column: 2, scope: !11537)
!11542 = !DILocation(line: 189, column: 1, scope: !11537)
!11543 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11372, file: !11372, line: 615, type: !11544, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{null, !1534, !108}
!11546 = !{!11547, !11548}
!11547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11543, file: !11372, line: 615, type: !1534)
!11548 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11543, file: !11372, line: 615, type: !108)
!11549 = !DILocation(line: 0, scope: !11543)
!11550 = !DILocation(line: 617, column: 3, scope: !11543)
!11551 = !DILocation(line: 618, column: 1, scope: !11543)
!11552 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11372, file: !11372, line: 1020, type: !11553, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11555)
!11553 = !DISubroutineType(types: !11554)
!11554 = !{null, !1534, !108, !108, !108}
!11555 = !{!11556, !11557, !11558, !11559}
!11556 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11552, file: !11372, line: 1020, type: !1534)
!11557 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11552, file: !11372, line: 1020, type: !108)
!11558 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11552, file: !11372, line: 1020, type: !108)
!11559 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11552, file: !11372, line: 1021, type: !108)
!11560 = !DILocation(line: 0, scope: !11552)
!11561 = !DILocation(line: 1029, column: 30, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11563, file: !11372, line: 1028, column: 3)
!11563 = distinct !DILexicalBlock(scope: !11552, file: !11372, line: 1023, column: 7)
!11564 = !DILocation(line: 1029, column: 19, scope: !11562)
!11565 = !DILocation(line: 1029, column: 13, scope: !11562)
!11566 = !DILocation(line: 1029, column: 17, scope: !11562)
!11567 = !DILocation(line: 1031, column: 1, scope: !11552)
!11568 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11372, file: !11372, line: 949, type: !11544, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11569)
!11569 = !{!11570, !11571}
!11570 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11568, file: !11372, line: 949, type: !1534)
!11571 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11568, file: !11372, line: 949, type: !108)
!11572 = !DILocation(line: 0, scope: !11568)
!11573 = !DILocation(line: 951, column: 3, scope: !11568)
!11574 = !DILocation(line: 952, column: 1, scope: !11568)
!11575 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11372, file: !11372, line: 588, type: !11544, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11576)
!11576 = !{!11577, !11578}
!11577 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11575, file: !11372, line: 588, type: !1534)
!11578 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11575, file: !11372, line: 588, type: !108)
!11579 = !DILocation(line: 0, scope: !11575)
!11580 = !DILocation(line: 590, column: 3, scope: !11575)
!11581 = !DILocation(line: 591, column: 1, scope: !11575)
!11582 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11372, file: !11372, line: 805, type: !11544, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11583)
!11583 = !{!11584, !11585}
!11584 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11582, file: !11372, line: 805, type: !1534)
!11585 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11582, file: !11372, line: 805, type: !108)
!11586 = !DILocation(line: 0, scope: !11582)
!11587 = !DILocation(line: 807, column: 3, scope: !11582)
!11588 = !DILocation(line: 808, column: 1, scope: !11582)
!11589 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11372, file: !11372, line: 532, type: !11544, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11590)
!11590 = !{!11591, !11592}
!11591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11589, file: !11372, line: 532, type: !1534)
!11592 = !DILocalVariable(name: "Parity", arg: 2, scope: !11589, file: !11372, line: 532, type: !108)
!11593 = !DILocation(line: 0, scope: !11589)
!11594 = !DILocation(line: 534, column: 3, scope: !11589)
!11595 = !DILocation(line: 535, column: 1, scope: !11589)
!11596 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11372, file: !11372, line: 1770, type: !11373, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11597)
!11597 = !{!11598}
!11598 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11596, file: !11372, line: 1770, type: !1534)
!11599 = !DILocation(line: 0, scope: !11596)
!11600 = !DILocation(line: 1772, column: 11, scope: !11596)
!11601 = !DILocation(line: 1772, column: 46, scope: !11596)
!11602 = !DILocation(line: 1772, column: 3, scope: !11596)
!11603 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11372, file: !11372, line: 1737, type: !11373, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11604)
!11604 = !{!11605}
!11605 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11603, file: !11372, line: 1737, type: !1534)
!11606 = !DILocation(line: 0, scope: !11603)
!11607 = !DILocation(line: 1739, column: 11, scope: !11603)
!11608 = !DILocation(line: 1739, column: 3, scope: !11603)
!11609 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11372, file: !11372, line: 1748, type: !11373, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11610)
!11610 = !{!11611}
!11611 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11609, file: !11372, line: 1748, type: !1534)
!11612 = !DILocation(line: 0, scope: !11609)
!11613 = !DILocation(line: 1750, column: 11, scope: !11609)
!11614 = !DILocation(line: 1750, column: 45, scope: !11609)
!11615 = !DILocation(line: 1750, column: 3, scope: !11609)
!11616 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11372, file: !11372, line: 1827, type: !11373, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11617)
!11617 = !{!11618}
!11618 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11616, file: !11372, line: 1827, type: !1534)
!11619 = !DILocation(line: 0, scope: !11616)
!11620 = !DILocation(line: 1829, column: 11, scope: !11616)
!11621 = !DILocation(line: 1829, column: 46, scope: !11616)
!11622 = !DILocation(line: 1829, column: 3, scope: !11616)
!11623 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11372, file: !11372, line: 1992, type: !11435, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11624)
!11624 = !{!11625}
!11625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11623, file: !11372, line: 1992, type: !1534)
!11626 = !DILocation(line: 0, scope: !11623)
!11627 = !DILocation(line: 1994, column: 3, scope: !11623)
!11628 = !DILocation(line: 1995, column: 1, scope: !11623)
!11629 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11372, file: !11372, line: 1934, type: !11435, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11630)
!11630 = !{!11631, !11632}
!11631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11629, file: !11372, line: 1934, type: !1534)
!11632 = !DILocalVariable(name: "tmpreg", scope: !11629, file: !11372, line: 1936, type: !409)
!11633 = !DILocation(line: 0, scope: !11629)
!11634 = !DILocation(line: 1936, column: 3, scope: !11629)
!11635 = !DILocation(line: 1936, column: 17, scope: !11629)
!11636 = !DILocation(line: 1937, column: 20, scope: !11629)
!11637 = !DILocation(line: 1937, column: 10, scope: !11629)
!11638 = !DILocation(line: 1938, column: 10, scope: !11629)
!11639 = !DILocation(line: 1939, column: 20, scope: !11629)
!11640 = !DILocation(line: 1939, column: 10, scope: !11629)
!11641 = !DILocation(line: 1940, column: 10, scope: !11629)
!11642 = !DILocation(line: 1941, column: 1, scope: !11629)
!11643 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11372, file: !11372, line: 1877, type: !11435, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11644)
!11644 = !{!11645, !11646}
!11645 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11643, file: !11372, line: 1877, type: !1534)
!11646 = !DILocalVariable(name: "tmpreg", scope: !11643, file: !11372, line: 1879, type: !409)
!11647 = !DILocation(line: 0, scope: !11643)
!11648 = !DILocation(line: 1879, column: 3, scope: !11643)
!11649 = !DILocation(line: 1879, column: 17, scope: !11643)
!11650 = !DILocation(line: 1880, column: 20, scope: !11643)
!11651 = !DILocation(line: 1880, column: 10, scope: !11643)
!11652 = !DILocation(line: 1881, column: 10, scope: !11643)
!11653 = !DILocation(line: 1882, column: 20, scope: !11643)
!11654 = !DILocation(line: 1882, column: 10, scope: !11643)
!11655 = !DILocation(line: 1883, column: 10, scope: !11643)
!11656 = !DILocation(line: 1884, column: 1, scope: !11643)
!11657 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11372, file: !11372, line: 1896, type: !11435, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11658)
!11658 = !{!11659, !11660}
!11659 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11657, file: !11372, line: 1896, type: !1534)
!11660 = !DILocalVariable(name: "tmpreg", scope: !11657, file: !11372, line: 1898, type: !409)
!11661 = !DILocation(line: 0, scope: !11657)
!11662 = !DILocation(line: 1898, column: 3, scope: !11657)
!11663 = !DILocation(line: 1898, column: 17, scope: !11657)
!11664 = !DILocation(line: 1899, column: 20, scope: !11657)
!11665 = !DILocation(line: 1899, column: 10, scope: !11657)
!11666 = !DILocation(line: 1900, column: 10, scope: !11657)
!11667 = !DILocation(line: 1901, column: 20, scope: !11657)
!11668 = !DILocation(line: 1901, column: 10, scope: !11657)
!11669 = !DILocation(line: 1902, column: 10, scope: !11657)
!11670 = !DILocation(line: 1903, column: 1, scope: !11657)
!11671 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11372, file: !11372, line: 1915, type: !11435, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11672)
!11672 = !{!11673, !11674}
!11673 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11671, file: !11372, line: 1915, type: !1534)
!11674 = !DILocalVariable(name: "tmpreg", scope: !11671, file: !11372, line: 1917, type: !409)
!11675 = !DILocation(line: 0, scope: !11671)
!11676 = !DILocation(line: 1917, column: 3, scope: !11671)
!11677 = !DILocation(line: 1917, column: 17, scope: !11671)
!11678 = !DILocation(line: 1918, column: 20, scope: !11671)
!11679 = !DILocation(line: 1918, column: 10, scope: !11671)
!11680 = !DILocation(line: 1919, column: 10, scope: !11671)
!11681 = !DILocation(line: 1920, column: 20, scope: !11671)
!11682 = !DILocation(line: 1920, column: 10, scope: !11671)
!11683 = !DILocation(line: 1921, column: 10, scope: !11671)
!11684 = !DILocation(line: 1922, column: 1, scope: !11671)
!11685 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11372, file: !11372, line: 1814, type: !11373, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11686)
!11686 = !{!11687}
!11687 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11685, file: !11372, line: 1814, type: !1534)
!11688 = !DILocation(line: 0, scope: !11685)
!11689 = !DILocation(line: 1816, column: 11, scope: !11685)
!11690 = !DILocation(line: 1816, column: 46, scope: !11685)
!11691 = !DILocation(line: 1816, column: 3, scope: !11685)
!11692 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11372, file: !11372, line: 2426, type: !11693, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11695)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{null, !1534, !185}
!11695 = !{!11696, !11697}
!11696 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11692, file: !11372, line: 2426, type: !1534)
!11697 = !DILocalVariable(name: "Value", arg: 2, scope: !11692, file: !11372, line: 2426, type: !185)
!11698 = !DILocation(line: 0, scope: !11692)
!11699 = !DILocation(line: 2428, column: 16, scope: !11692)
!11700 = !DILocation(line: 2428, column: 11, scope: !11692)
!11701 = !DILocation(line: 2428, column: 14, scope: !11692)
!11702 = !DILocation(line: 2429, column: 1, scope: !11692)
!11703 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11372, file: !11372, line: 1792, type: !11373, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11704)
!11704 = !{!11705}
!11705 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11703, file: !11372, line: 1792, type: !1534)
!11706 = !DILocation(line: 0, scope: !11703)
!11707 = !DILocation(line: 1794, column: 11, scope: !11703)
!11708 = !DILocation(line: 1794, column: 47, scope: !11703)
!11709 = !DILocation(line: 1794, column: 3, scope: !11703)
!11710 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11372, file: !11372, line: 2403, type: !11711, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11713)
!11711 = !DISubroutineType(types: !11712)
!11712 = !{!185, !1534}
!11713 = !{!11714}
!11714 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11710, file: !11372, line: 2403, type: !1534)
!11715 = !DILocation(line: 0, scope: !11710)
!11716 = !DILocation(line: 2405, column: 20, scope: !11710)
!11717 = !DILocation(line: 2405, column: 10, scope: !11710)
!11718 = !DILocation(line: 2405, column: 3, scope: !11710)
!11719 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1588, file: !1588, line: 1583, type: !1514, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11720)
!11720 = !{!11721, !11722, !11723, !11724, !11725, !11726}
!11721 = !DILocalVariable(name: "dev", arg: 1, scope: !11719, file: !1588, line: 1583, type: !1493)
!11722 = !DILocalVariable(name: "config", scope: !11719, file: !1588, line: 1585, type: !11063)
!11723 = !DILocalVariable(name: "data", scope: !11719, file: !1588, line: 1586, type: !11186)
!11724 = !DILocalVariable(name: "ll_parity", scope: !11719, file: !1588, line: 1587, type: !108)
!11725 = !DILocalVariable(name: "ll_datawidth", scope: !11719, file: !1588, line: 1588, type: !108)
!11726 = !DILocalVariable(name: "err", scope: !11719, file: !1588, line: 1589, type: !103)
!11727 = !DILocation(line: 0, scope: !11719)
!11728 = !DILocation(line: 1585, column: 48, scope: !11719)
!11729 = !DILocation(line: 1586, column: 38, scope: !11719)
!11730 = !DILocation(line: 1591, column: 2, scope: !11719)
!11731 = !DILocation(line: 1593, column: 29, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11719, file: !1588, line: 1593, column: 6)
!11733 = !DILocation(line: 1593, column: 7, scope: !11732)
!11734 = !DILocation(line: 1593, column: 6, scope: !11719)
!11735 = !DILocation(line: 1594, column: 3, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !1588, line: 1594, column: 3)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !1588, line: 1594, column: 3)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !1588, line: 1594, column: 3)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !1588, line: 1594, column: 3)
!11740 = distinct !DILexicalBlock(scope: !11732, file: !1588, line: 1593, column: 37)
!11741 = !DILocation(line: 1595, column: 3, scope: !11740)
!11742 = !DILocation(line: 1599, column: 31, scope: !11719)
!11743 = !DILocation(line: 1599, column: 71, scope: !11719)
!11744 = !DILocation(line: 1599, column: 8, scope: !11719)
!11745 = !DILocation(line: 1600, column: 10, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11719, file: !1588, line: 1600, column: 6)
!11747 = !DILocation(line: 1600, column: 6, scope: !11719)
!11748 = !DILocation(line: 1601, column: 3, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !1588, line: 1601, column: 3)
!11750 = distinct !DILexicalBlock(scope: !11751, file: !1588, line: 1601, column: 3)
!11751 = distinct !DILexicalBlock(scope: !11752, file: !1588, line: 1601, column: 3)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !1588, line: 1601, column: 3)
!11753 = distinct !DILexicalBlock(scope: !11746, file: !1588, line: 1600, column: 16)
!11754 = !DILocation(line: 1602, column: 3, scope: !11753)
!11755 = !DILocation(line: 1616, column: 36, scope: !11719)
!11756 = !DILocation(line: 1616, column: 8, scope: !11719)
!11757 = !DILocation(line: 1617, column: 10, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11719, file: !1588, line: 1617, column: 6)
!11759 = !DILocation(line: 1617, column: 6, scope: !11719)
!11760 = !DILocation(line: 1621, column: 27, scope: !11719)
!11761 = !DILocation(line: 1621, column: 2, scope: !11719)
!11762 = !DILocation(line: 1624, column: 40, scope: !11719)
!11763 = !DILocation(line: 1624, column: 2, scope: !11719)
!11764 = !DILocation(line: 1630, column: 14, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11719, file: !1588, line: 1630, column: 6)
!11766 = !DILocation(line: 1630, column: 6, scope: !11719)
!11767 = !DILocation(line: 1640, column: 4, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11769, file: !1588, line: 1640, column: 4)
!11769 = distinct !DILexicalBlock(scope: !11770, file: !1588, line: 1640, column: 4)
!11770 = distinct !DILexicalBlock(scope: !11771, file: !1588, line: 1640, column: 4)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !1588, line: 1640, column: 4)
!11772 = distinct !DILexicalBlock(scope: !11773, file: !1588, line: 1639, column: 28)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !1588, line: 1639, column: 7)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !1588, line: 1638, column: 9)
!11775 = distinct !DILexicalBlock(scope: !11765, file: !1588, line: 1634, column: 13)
!11776 = !DILocation(line: 0, scope: !11765)
!11777 = !DILocation(line: 1649, column: 35, scope: !11719)
!11778 = !DILocation(line: 1649, column: 2, scope: !11719)
!11779 = !DILocation(line: 1654, column: 14, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11719, file: !1588, line: 1654, column: 6)
!11781 = !DILocation(line: 1654, column: 6, scope: !11719)
!11782 = !DILocation(line: 1655, column: 3, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11780, file: !1588, line: 1654, column: 31)
!11784 = !DILocation(line: 1656, column: 2, scope: !11783)
!11785 = !DILocation(line: 1659, column: 37, scope: !11719)
!11786 = !DILocation(line: 1659, column: 2, scope: !11719)
!11787 = !DILocation(line: 1662, column: 14, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11719, file: !1588, line: 1662, column: 6)
!11789 = !DILocation(line: 1662, column: 6, scope: !11719)
!11790 = !DILocation(line: 1663, column: 37, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11788, file: !1588, line: 1662, column: 27)
!11792 = !DILocation(line: 1663, column: 3, scope: !11791)
!11793 = !DILocation(line: 1664, column: 2, scope: !11791)
!11794 = !DILocation(line: 1684, column: 26, scope: !11719)
!11795 = !DILocation(line: 1684, column: 2, scope: !11719)
!11796 = !DILocation(line: 1722, column: 2, scope: !11719)
!11797 = !DILocation(line: 1724, column: 1, scope: !11719)
!11798 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1588, file: !1588, line: 651, type: !11799, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11801)
!11799 = !DISubroutineType(types: !11800)
!11800 = !{null, !1493}
!11801 = !{!11802, !11803, !11804}
!11802 = !DILocalVariable(name: "dev", arg: 1, scope: !11798, file: !1588, line: 651, type: !1493)
!11803 = !DILocalVariable(name: "data", scope: !11798, file: !1588, line: 653, type: !11186)
!11804 = !DILocalVariable(name: "clk", scope: !11798, file: !1588, line: 654, type: !11805)
!11805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!11806 = !DILocation(line: 0, scope: !11798)
!11807 = !DILocation(line: 653, column: 38, scope: !11798)
!11808 = !DILocation(line: 656, column: 8, scope: !11798)
!11809 = !DILocation(line: 656, column: 14, scope: !11798)
!11810 = !DILocation(line: 657, column: 1, scope: !11798)
!11811 = distinct !DISubprogram(name: "device_is_ready", scope: !10201, file: !10201, line: 47, type: !11812, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11814)
!11812 = !DISubroutineType(types: !11813)
!11813 = !{!131, !1493}
!11814 = !{!11815}
!11815 = !DILocalVariable(name: "dev", arg: 1, scope: !11811, file: !10201, line: 47, type: !1493)
!11816 = !DILocation(line: 0, scope: !11811)
!11817 = !DILocation(line: 55, column: 2, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11811, file: !10201, line: 55, column: 2)
!11819 = !{i64 2155370220}
!11820 = !DILocation(line: 56, column: 9, scope: !11811)
!11821 = !DILocation(line: 56, column: 2, scope: !11811)
!11822 = distinct !DISubprogram(name: "clock_control_on", scope: !950, file: !950, line: 123, type: !1552, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11823)
!11823 = !{!11824, !11825, !11826}
!11824 = !DILocalVariable(name: "dev", arg: 1, scope: !11822, file: !950, line: 123, type: !1493)
!11825 = !DILocalVariable(name: "sys", arg: 2, scope: !11822, file: !950, line: 124, type: !1046)
!11826 = !DILocalVariable(name: "api", scope: !11822, file: !950, line: 126, type: !1545)
!11827 = !DILocation(line: 0, scope: !11822)
!11828 = !DILocation(line: 127, column: 49, scope: !11822)
!11829 = !DILocation(line: 129, column: 14, scope: !11822)
!11830 = !DILocation(line: 129, column: 9, scope: !11822)
!11831 = !DILocation(line: 129, column: 2, scope: !11822)
!11832 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1652, file: !1652, line: 342, type: !11833, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11835)
!11833 = !DISubroutineType(types: !11834)
!11834 = !{!103, !1649, !185}
!11835 = !{!11836, !11837, !11838, !11839}
!11836 = !DILocalVariable(name: "config", arg: 1, scope: !11832, file: !1652, line: 342, type: !1649)
!11837 = !DILocalVariable(name: "id", arg: 2, scope: !11832, file: !1652, line: 343, type: !185)
!11838 = !DILocalVariable(name: "ret", scope: !11832, file: !1652, line: 345, type: !103)
!11839 = !DILocalVariable(name: "state", scope: !11832, file: !1652, line: 346, type: !1655)
!11840 = !DILocation(line: 0, scope: !11832)
!11841 = !DILocation(line: 346, column: 2, scope: !11832)
!11842 = !DILocation(line: 348, column: 8, scope: !11832)
!11843 = !DILocation(line: 349, column: 10, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11832, file: !1652, line: 349, column: 6)
!11845 = !DILocation(line: 349, column: 6, scope: !11832)
!11846 = !DILocation(line: 353, column: 44, scope: !11832)
!11847 = !DILocation(line: 353, column: 9, scope: !11832)
!11848 = !DILocation(line: 353, column: 2, scope: !11832)
!11849 = !DILocation(line: 354, column: 1, scope: !11832)
!11850 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11372, file: !11372, line: 497, type: !11544, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11851)
!11851 = !{!11852, !11853, !11854}
!11852 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11850, file: !11372, line: 497, type: !1534)
!11853 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11850, file: !11372, line: 497, type: !108)
!11854 = !DILocalVariable(name: "val", scope: !11855, file: !11372, line: 499, type: !108)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !11372, line: 499, column: 3)
!11856 = !DILocation(line: 0, scope: !11850)
!11857 = !DILocation(line: 499, column: 3, scope: !11855)
!11858 = !DILocalVariable(name: "addr", arg: 1, scope: !11859, file: !7377, line: 476, type: !1584)
!11859 = distinct !DISubprogram(name: "__LDREXW", scope: !7377, file: !7377, line: 476, type: !11860, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11862)
!11860 = !DISubroutineType(types: !11861)
!11861 = !{!108, !1584}
!11862 = !{!11858, !11863}
!11863 = !DILocalVariable(name: "result", scope: !11859, file: !7377, line: 478, type: !108)
!11864 = !DILocation(line: 0, scope: !11859, inlinedAt: !11865)
!11865 = distinct !DILocation(line: 499, column: 3, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11855, file: !11372, line: 499, column: 3)
!11867 = !DILocation(line: 480, column: 4, scope: !11859, inlinedAt: !11865)
!11868 = !{i64 3759536}
!11869 = !DILocation(line: 499, column: 3, scope: !11866)
!11870 = !DILocation(line: 0, scope: !11855)
!11871 = !DILocalVariable(name: "value", arg: 1, scope: !11872, file: !7377, line: 527, type: !108)
!11872 = distinct !DISubprogram(name: "__STREXW", scope: !7377, file: !7377, line: 527, type: !11873, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11875)
!11873 = !DISubroutineType(types: !11874)
!11874 = !{!108, !108, !1584}
!11875 = !{!11871, !11876, !11877}
!11876 = !DILocalVariable(name: "addr", arg: 2, scope: !11872, file: !7377, line: 527, type: !1584)
!11877 = !DILocalVariable(name: "result", scope: !11872, file: !7377, line: 529, type: !108)
!11878 = !DILocation(line: 0, scope: !11872, inlinedAt: !11879)
!11879 = distinct !DILocation(line: 499, column: 3, scope: !11855)
!11880 = !DILocation(line: 531, column: 4, scope: !11872, inlinedAt: !11879)
!11881 = !{i64 3760972}
!11882 = distinct !{!11882, !11857, !11857}
!11883 = !DILocation(line: 500, column: 1, scope: !11850)
!11884 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11372, file: !11372, line: 850, type: !11553, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11885)
!11885 = !{!11886, !11887, !11888, !11889}
!11886 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11884, file: !11372, line: 850, type: !1534)
!11887 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11884, file: !11372, line: 850, type: !108)
!11888 = !DILocalVariable(name: "Parity", arg: 3, scope: !11884, file: !11372, line: 850, type: !108)
!11889 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11884, file: !11372, line: 851, type: !108)
!11890 = !DILocation(line: 0, scope: !11884)
!11891 = !DILocation(line: 853, column: 3, scope: !11884)
!11892 = !DILocation(line: 854, column: 3, scope: !11884)
!11893 = !DILocation(line: 855, column: 1, scope: !11884)
!11894 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11372, file: !11372, line: 1337, type: !11435, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11895)
!11895 = !{!11896}
!11896 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11894, file: !11372, line: 1337, type: !1534)
!11897 = !DILocation(line: 0, scope: !11894)
!11898 = !DILocation(line: 1339, column: 3, scope: !11894)
!11899 = !DILocation(line: 1340, column: 1, scope: !11894)
!11900 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1652, file: !1652, line: 316, type: !11901, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11903)
!11901 = !DISubroutineType(types: !11902)
!11902 = !{!103, !1649, !1655}
!11903 = !{!11904, !11905, !11906}
!11904 = !DILocalVariable(name: "config", arg: 1, scope: !11900, file: !1652, line: 317, type: !1649)
!11905 = !DILocalVariable(name: "state", arg: 2, scope: !11900, file: !1652, line: 318, type: !1655)
!11906 = !DILocalVariable(name: "reg", scope: !11900, file: !1652, line: 320, type: !22)
!11907 = !DILocation(line: 0, scope: !11900)
!11908 = !DILocation(line: 329, column: 39, scope: !11900)
!11909 = !DILocation(line: 329, column: 52, scope: !11900)
!11910 = !DILocation(line: 329, column: 9, scope: !11900)
!11911 = !DILocation(line: 329, column: 2, scope: !11900)
!11912 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !11812, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1449, retainedNodes: !11913)
!11913 = !{!11914}
!11914 = !DILocalVariable(name: "dev", arg: 1, scope: !11912, file: !429, line: 730, type: !1493)
!11915 = !DILocation(line: 0, scope: !11912)
!11916 = !DILocation(line: 732, column: 9, scope: !11912)
!11917 = !DILocation(line: 732, column: 2, scope: !11912)
!11918 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1811, file: !1811, line: 270, type: !1817, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !11919)
!11919 = !{!11920}
!11920 = !DILocalVariable(name: "dev", arg: 1, scope: !11918, file: !1811, line: 270, type: !1819)
!11921 = !DILocation(line: 0, scope: !11918)
!11922 = !DILocation(line: 274, column: 2, scope: !11918)
!11923 = !DILocation(line: 275, column: 12, scope: !11918)
!11924 = !DILocation(line: 276, column: 15, scope: !11918)
!11925 = !DILocation(line: 277, column: 16, scope: !11918)
!11926 = !DILocation(line: 278, column: 15, scope: !11918)
!11927 = !DILocation(line: 279, column: 16, scope: !11918)
!11928 = !DILocation(line: 282, column: 2, scope: !11918)
!11929 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7411, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !11930)
!11930 = !{!11931, !11932}
!11931 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11929, file: !624, line: 1814, type: !900)
!11932 = !DILocalVariable(name: "priority", arg: 2, scope: !11929, file: !624, line: 1814, type: !108)
!11933 = !DILocation(line: 0, scope: !11929)
!11934 = !DILocation(line: 1822, column: 46, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11936, file: !624, line: 1821, column: 3)
!11936 = distinct !DILexicalBlock(scope: !11929, file: !624, line: 1816, column: 7)
!11937 = !DILocation(line: 1824, column: 1, scope: !11929)
!11938 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1811, file: !1811, line: 118, type: !7314, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !11939)
!11939 = !{!11940, !11941}
!11940 = !DILocalVariable(name: "arg", arg: 1, scope: !11938, file: !1811, line: 118, type: !102)
!11941 = !DILocalVariable(name: "dticks", scope: !11938, file: !1811, line: 121, type: !108)
!11942 = !DILocation(line: 0, scope: !11938)
!11943 = !DILocation(line: 124, column: 2, scope: !11938)
!11944 = !DILocation(line: 129, column: 17, scope: !11938)
!11945 = !DILocation(line: 129, column: 14, scope: !11938)
!11946 = !DILocation(line: 130, column: 15, scope: !11938)
!11947 = !DILocation(line: 145, column: 27, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !1811, line: 132, column: 16)
!11949 = distinct !DILexicalBlock(scope: !11938, file: !1811, line: 132, column: 6)
!11950 = !DILocation(line: 145, column: 25, scope: !11948)
!11951 = !DILocation(line: 145, column: 45, scope: !11948)
!11952 = !DILocation(line: 146, column: 30, scope: !11948)
!11953 = !DILocation(line: 146, column: 20, scope: !11948)
!11954 = !DILocation(line: 147, column: 3, scope: !11948)
!11955 = !DILocation(line: 151, column: 2, scope: !11938)
!11956 = !DILocation(line: 152, column: 1, scope: !11938)
!11957 = distinct !DISubprogram(name: "elapsed", scope: !1811, file: !1811, line: 85, type: !3655, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !11958)
!11958 = !{!11959, !11960, !11961}
!11959 = !DILocalVariable(name: "val1", scope: !11957, file: !1811, line: 87, type: !108)
!11960 = !DILocalVariable(name: "ctrl", scope: !11957, file: !1811, line: 88, type: !108)
!11961 = !DILocalVariable(name: "val2", scope: !11957, file: !1811, line: 89, type: !108)
!11962 = !DILocation(line: 87, column: 27, scope: !11957)
!11963 = !DILocation(line: 0, scope: !11957)
!11964 = !DILocation(line: 88, column: 27, scope: !11957)
!11965 = !DILocation(line: 89, column: 27, scope: !11957)
!11966 = !DILocation(line: 105, column: 12, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11957, file: !1811, line: 105, column: 6)
!11968 = !DILocation(line: 106, column: 6, scope: !11967)
!11969 = !DILocation(line: 107, column: 16, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11967, file: !1811, line: 106, column: 24)
!11971 = !DILocation(line: 111, column: 18, scope: !11970)
!11972 = !DILocation(line: 112, column: 2, scope: !11970)
!11973 = !DILocation(line: 114, column: 20, scope: !11957)
!11974 = !DILocation(line: 114, column: 30, scope: !11957)
!11975 = !DILocation(line: 114, column: 28, scope: !11957)
!11976 = !DILocation(line: 114, column: 2, scope: !11957)
!11977 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1811, file: !1811, line: 154, type: !11978, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !11980)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{null, !331, !131}
!11980 = !{!11981, !11982, !11983, !11984, !11985, !11986, !11987, !11992, !11993}
!11981 = !DILocalVariable(name: "ticks", arg: 1, scope: !11977, file: !1811, line: 154, type: !331)
!11982 = !DILocalVariable(name: "idle", arg: 2, scope: !11977, file: !1811, line: 154, type: !131)
!11983 = !DILocalVariable(name: "delay", scope: !11977, file: !1811, line: 169, type: !108)
!11984 = !DILocalVariable(name: "val1", scope: !11977, file: !1811, line: 170, type: !108)
!11985 = !DILocalVariable(name: "val2", scope: !11977, file: !1811, line: 170, type: !108)
!11986 = !DILocalVariable(name: "last_load_", scope: !11977, file: !1811, line: 171, type: !108)
!11987 = !DILocalVariable(name: "key", scope: !11977, file: !1811, line: 176, type: !11988)
!11988 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !11989)
!11989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !11990)
!11990 = !{!11991}
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11989, file: !250, line: 33, baseType: !103, size: 32)
!11992 = !DILocalVariable(name: "pending", scope: !11977, file: !1811, line: 178, type: !108)
!11993 = !DILocalVariable(name: "unannounced", scope: !11977, file: !1811, line: 185, type: !108)
!11994 = !DILocation(line: 0, scope: !11977)
!11995 = !DILocation(line: 162, column: 49, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11977, file: !1811, line: 162, column: 6)
!11997 = !DILocation(line: 163, column: 17, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11996, file: !1811, line: 162, column: 78)
!11999 = !DILocation(line: 164, column: 13, scope: !11998)
!12000 = !DILocation(line: 165, column: 3, scope: !11998)
!12001 = !DILocation(line: 171, column: 24, scope: !11977)
!12002 = !DILocation(line: 173, column: 10, scope: !11977)
!12003 = !DILocation(line: 174, column: 10, scope: !11977)
!12004 = !DILocalVariable(name: "l", arg: 1, scope: !12005, file: !250, line: 136, type: !12008)
!12005 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !12006, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !12009)
!12006 = !DISubroutineType(types: !12007)
!12007 = !{!11988, !12008}
!12008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 32)
!12009 = !{!12004, !12010}
!12010 = !DILocalVariable(name: "k", scope: !12005, file: !250, line: 139, type: !11988)
!12011 = !DILocation(line: 0, scope: !12005, inlinedAt: !12012)
!12012 = distinct !DILocation(line: 176, column: 25, scope: !11977)
!12013 = !DILocation(line: 55, column: 2, scope: !12014, inlinedAt: !12018)
!12014 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !12015)
!12015 = !{!12016, !12017}
!12016 = !DILocalVariable(name: "key", scope: !12014, file: !7059, line: 44, type: !32)
!12017 = !DILocalVariable(name: "tmp", scope: !12014, file: !7059, line: 53, type: !32)
!12018 = distinct !DILocation(line: 145, column: 10, scope: !12005, inlinedAt: !12012)
!12019 = !{i64 2280388}
!12020 = !DILocation(line: 0, scope: !12014, inlinedAt: !12018)
!12021 = !DILocation(line: 178, column: 21, scope: !11977)
!12022 = !DILocation(line: 180, column: 18, scope: !11977)
!12023 = !DILocation(line: 182, column: 14, scope: !11977)
!12024 = !DILocation(line: 183, column: 15, scope: !11977)
!12025 = !DILocation(line: 185, column: 39, scope: !11977)
!12026 = !DILocation(line: 185, column: 37, scope: !11977)
!12027 = !DILocation(line: 187, column: 27, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !11977, file: !1811, line: 187, column: 6)
!12029 = !DILocation(line: 187, column: 6, scope: !11977)
!12030 = !DILocation(line: 202, column: 27, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12028, file: !1811, line: 195, column: 9)
!12032 = !DILocation(line: 202, column: 48, scope: !12031)
!12033 = !DILocation(line: 203, column: 9, scope: !12031)
!12034 = !DILocation(line: 204, column: 11, scope: !12031)
!12035 = !DILocation(line: 205, column: 13, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12031, file: !1811, line: 205, column: 7)
!12037 = !DILocation(line: 205, column: 7, scope: !12031)
!12038 = !DILocation(line: 0, scope: !12028)
!12039 = !DILocation(line: 212, column: 18, scope: !11977)
!12040 = !DILocation(line: 214, column: 28, scope: !11977)
!12041 = !DILocation(line: 214, column: 16, scope: !11977)
!12042 = !DILocation(line: 215, column: 15, scope: !11977)
!12043 = !DILocation(line: 227, column: 11, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !11977, file: !1811, line: 227, column: 6)
!12045 = !DILocation(line: 227, column: 6, scope: !11977)
!12046 = !DILocation(line: 228, column: 15, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12044, file: !1811, line: 227, column: 19)
!12048 = !DILocation(line: 228, column: 38, scope: !12047)
!12049 = !DILocation(line: 228, column: 24, scope: !12047)
!12050 = !DILocation(line: 229, column: 2, scope: !12047)
!12051 = !DILocation(line: 230, column: 24, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12044, file: !1811, line: 229, column: 9)
!12053 = !DILocation(line: 230, column: 15, scope: !12052)
!12054 = !DILocation(line: 0, scope: !12044)
!12055 = !DILocalVariable(name: "key", arg: 2, scope: !12056, file: !250, line: 190, type: !11988)
!12056 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !12057, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !12059)
!12057 = !DISubroutineType(types: !12058)
!12058 = !{null, !12008, !11988}
!12059 = !{!12060, !12055}
!12060 = !DILocalVariable(name: "l", arg: 1, scope: !12056, file: !250, line: 189, type: !12008)
!12061 = !DILocation(line: 0, scope: !12056, inlinedAt: !12062)
!12062 = distinct !DILocation(line: 232, column: 2, scope: !11977)
!12063 = !DILocalVariable(name: "key", arg: 1, scope: !12064, file: !7059, line: 84, type: !32)
!12064 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !12065)
!12065 = !{!12063}
!12066 = !DILocation(line: 0, scope: !12064, inlinedAt: !12067)
!12067 = distinct !DILocation(line: 215, column: 2, scope: !12056, inlinedAt: !12062)
!12068 = !DILocation(line: 95, column: 2, scope: !12064, inlinedAt: !12067)
!12069 = !{i64 2281205}
!12070 = !DILocation(line: 234, column: 1, scope: !11977)
!12071 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1811, file: !1811, line: 236, type: !3655, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !12072)
!12072 = !{!12073, !12074}
!12073 = !DILocalVariable(name: "key", scope: !12071, file: !1811, line: 242, type: !11988)
!12074 = !DILocalVariable(name: "cyc", scope: !12071, file: !1811, line: 243, type: !108)
!12075 = !DILocation(line: 0, scope: !12005, inlinedAt: !12076)
!12076 = distinct !DILocation(line: 242, column: 25, scope: !12071)
!12077 = !DILocation(line: 55, column: 2, scope: !12014, inlinedAt: !12078)
!12078 = distinct !DILocation(line: 145, column: 10, scope: !12005, inlinedAt: !12076)
!12079 = !DILocation(line: 0, scope: !12014, inlinedAt: !12078)
!12080 = !DILocation(line: 0, scope: !12071)
!12081 = !DILocation(line: 243, column: 17, scope: !12071)
!12082 = !DILocation(line: 243, column: 29, scope: !12071)
!12083 = !DILocation(line: 243, column: 27, scope: !12071)
!12084 = !DILocation(line: 243, column: 43, scope: !12071)
!12085 = !DILocation(line: 243, column: 41, scope: !12071)
!12086 = !DILocation(line: 0, scope: !12056, inlinedAt: !12087)
!12087 = distinct !DILocation(line: 245, column: 2, scope: !12071)
!12088 = !DILocation(line: 0, scope: !12064, inlinedAt: !12089)
!12089 = distinct !DILocation(line: 215, column: 2, scope: !12056, inlinedAt: !12087)
!12090 = !DILocation(line: 95, column: 2, scope: !12064, inlinedAt: !12089)
!12091 = !DILocation(line: 246, column: 13, scope: !12071)
!12092 = !DILocation(line: 246, column: 2, scope: !12071)
!12093 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1811, file: !1811, line: 249, type: !3655, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !12094)
!12094 = !{!12095, !12096}
!12095 = !DILocalVariable(name: "key", scope: !12093, file: !1811, line: 251, type: !11988)
!12096 = !DILocalVariable(name: "ret", scope: !12093, file: !1811, line: 252, type: !108)
!12097 = !DILocation(line: 0, scope: !12005, inlinedAt: !12098)
!12098 = distinct !DILocation(line: 251, column: 25, scope: !12093)
!12099 = !DILocation(line: 55, column: 2, scope: !12014, inlinedAt: !12100)
!12100 = distinct !DILocation(line: 145, column: 10, scope: !12005, inlinedAt: !12098)
!12101 = !DILocation(line: 0, scope: !12014, inlinedAt: !12100)
!12102 = !DILocation(line: 0, scope: !12093)
!12103 = !DILocation(line: 252, column: 17, scope: !12093)
!12104 = !DILocation(line: 252, column: 29, scope: !12093)
!12105 = !DILocation(line: 252, column: 27, scope: !12093)
!12106 = !DILocation(line: 0, scope: !12056, inlinedAt: !12107)
!12107 = distinct !DILocation(line: 254, column: 2, scope: !12093)
!12108 = !DILocation(line: 0, scope: !12064, inlinedAt: !12109)
!12109 = distinct !DILocation(line: 215, column: 2, scope: !12056, inlinedAt: !12107)
!12110 = !DILocation(line: 95, column: 2, scope: !12064, inlinedAt: !12109)
!12111 = !DILocation(line: 255, column: 2, scope: !12093)
!12112 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1811, file: !1811, line: 258, type: !334, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !251)
!12113 = !DILocation(line: 260, column: 6, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12112, file: !1811, line: 260, column: 6)
!12115 = !DILocation(line: 260, column: 16, scope: !12114)
!12116 = !DILocation(line: 260, column: 6, scope: !12112)
!12117 = !DILocation(line: 261, column: 17, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12114, file: !1811, line: 260, column: 34)
!12119 = !DILocation(line: 262, column: 2, scope: !12118)
!12120 = !DILocation(line: 263, column: 1, scope: !12112)
!12121 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1811, file: !1811, line: 265, type: !334, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1733, retainedNodes: !251)
!12122 = !DILocation(line: 267, column: 16, scope: !12121)
!12123 = !DILocation(line: 268, column: 1, scope: !12121)
!12124 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12125, file: !12125, line: 9, type: !12126, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !12149)
!12125 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12126 = !DISubroutineType(types: !12127)
!12127 = !{!103, !12128, !185, !12148}
!12128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12129, size: 32)
!12129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12130)
!12130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1652, line: 60, size: 64, elements: !12131)
!12131 = !{!12132, !12147}
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12130, file: !1652, line: 69, baseType: !12133, size: 32)
!12133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12134, size: 32)
!12134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12135)
!12135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1652, line: 50, size: 64, elements: !12136)
!12136 = !{!12137, !12145, !12146}
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12135, file: !1652, line: 52, baseType: !12138, size: 32)
!12138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12139, size: 32)
!12139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12140)
!12140 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1663, line: 37, baseType: !12141)
!12141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1663, line: 32, size: 64, elements: !12142)
!12142 = !{!12143, !12144}
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12141, file: !1663, line: 34, baseType: !108, size: 32)
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12141, file: !1663, line: 36, baseType: !108, size: 32, offset: 32)
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12135, file: !1652, line: 54, baseType: !185, size: 8, offset: 32)
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12135, file: !1652, line: 56, baseType: !185, size: 8, offset: 40)
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12130, file: !1652, line: 71, baseType: !185, size: 8, offset: 32)
!12148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12133, size: 32)
!12149 = !{!12150, !12151, !12152}
!12150 = !DILocalVariable(name: "config", arg: 1, scope: !12124, file: !12125, line: 9, type: !12128)
!12151 = !DILocalVariable(name: "id", arg: 2, scope: !12124, file: !12125, line: 9, type: !185)
!12152 = !DILocalVariable(name: "state", arg: 3, scope: !12124, file: !12125, line: 10, type: !12148)
!12153 = !DILocation(line: 0, scope: !12124)
!12154 = !DILocation(line: 12, column: 20, scope: !12124)
!12155 = !DILocation(line: 13, column: 27, scope: !12124)
!12156 = !DILocation(line: 13, column: 42, scope: !12124)
!12157 = !DILocation(line: 13, column: 19, scope: !12124)
!12158 = !DILocation(line: 13, column: 16, scope: !12124)
!12159 = !DILocation(line: 13, column: 2, scope: !12124)
!12160 = distinct !{!12160, !12159, !12161}
!12161 = !DILocation(line: 19, column: 2, scope: !12124)
!12162 = !DILocation(line: 14, column: 23, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !12125, line: 14, column: 7)
!12164 = distinct !DILexicalBlock(scope: !12124, file: !12125, line: 13, column: 54)
!12165 = !DILocation(line: 14, column: 10, scope: !12163)
!12166 = !DILocation(line: 18, column: 11, scope: !12164)
!12167 = !DILocation(line: 14, column: 7, scope: !12164)
!12168 = !DILocation(line: 22, column: 1, scope: !12124)
!12169 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1928, file: !1928, line: 193, type: !12170, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1846, retainedNodes: !12179)
!12170 = !DISubroutineType(types: !12171)
!12171 = !{!103, !12172, !185, !22}
!12172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12173, size: 32)
!12173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12174)
!12174 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1663, line: 37, baseType: !12175)
!12175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1663, line: 32, size: 64, elements: !12176)
!12176 = !{!12177, !12178}
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12175, file: !1663, line: 34, baseType: !108, size: 32)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12175, file: !1663, line: 36, baseType: !108, size: 32, offset: 32)
!12179 = !{!12180, !12181, !12182, !12183, !12184, !12185, !12186, !12187, !12189}
!12180 = !DILocalVariable(name: "pins", arg: 1, scope: !12169, file: !1928, line: 193, type: !12172)
!12181 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12169, file: !1928, line: 193, type: !185)
!12182 = !DILocalVariable(name: "reg", arg: 3, scope: !12169, file: !1928, line: 194, type: !22)
!12183 = !DILocalVariable(name: "pin", scope: !12169, file: !1928, line: 196, type: !108)
!12184 = !DILocalVariable(name: "mux", scope: !12169, file: !1928, line: 196, type: !108)
!12185 = !DILocalVariable(name: "pin_cgf", scope: !12169, file: !1928, line: 197, type: !108)
!12186 = !DILocalVariable(name: "ret", scope: !12169, file: !1928, line: 198, type: !103)
!12187 = !DILocalVariable(name: "i", scope: !12188, file: !1928, line: 209, type: !185)
!12188 = distinct !DILexicalBlock(scope: !12169, file: !1928, line: 209, column: 2)
!12189 = !DILocalVariable(name: "gpio_out", scope: !12190, file: !1928, line: 239, type: !108)
!12190 = distinct !DILexicalBlock(scope: !12191, file: !1928, line: 238, column: 55)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !1928, line: 238, column: 14)
!12192 = distinct !DILexicalBlock(scope: !12193, file: !1928, line: 236, column: 14)
!12193 = distinct !DILexicalBlock(scope: !12194, file: !1928, line: 234, column: 7)
!12194 = distinct !DILexicalBlock(scope: !12195, file: !1928, line: 209, column: 41)
!12195 = distinct !DILexicalBlock(scope: !12188, file: !1928, line: 209, column: 2)
!12196 = !DILocation(line: 0, scope: !12169)
!12197 = !DILocation(line: 0, scope: !12188)
!12198 = !DILocation(line: 209, column: 25, scope: !12195)
!12199 = !DILocation(line: 209, column: 2, scope: !12188)
!12200 = distinct !{!12200, !12199, !12201}
!12201 = !DILocation(line: 259, column: 2, scope: !12188)
!12202 = !DILocation(line: 210, column: 17, scope: !12194)
!12203 = !DILocation(line: 234, column: 7, scope: !12193)
!12204 = !DILocation(line: 234, column: 33, scope: !12193)
!12205 = !DILocation(line: 234, column: 7, scope: !12194)
!12206 = !DILocation(line: 235, column: 22, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12193, file: !1928, line: 234, column: 49)
!12208 = !DILocation(line: 235, column: 29, scope: !12207)
!12209 = !DILocation(line: 236, column: 3, scope: !12207)
!12210 = !DILocation(line: 236, column: 14, scope: !12193)
!12211 = !DILocation(line: 239, column: 32, scope: !12190)
!12212 = !DILocation(line: 0, scope: !12190)
!12213 = !DILocation(line: 241, column: 8, scope: !12190)
!12214 = !DILocation(line: 246, column: 3, scope: !12190)
!12215 = !DILocation(line: 252, column: 9, scope: !12194)
!12216 = !DILocation(line: 255, column: 9, scope: !12194)
!12217 = !DILocation(line: 256, column: 11, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12194, file: !1928, line: 256, column: 7)
!12219 = !DILocation(line: 209, column: 37, scope: !12195)
!12220 = !DILocation(line: 256, column: 7, scope: !12194)
!12221 = !DILocation(line: 262, column: 1, scope: !12169)
!12222 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1928, file: !1928, line: 176, type: !12223, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1846, retainedNodes: !12225)
!12223 = !DISubroutineType(types: !12224)
!12224 = !{!103, !108, !108, !108}
!12225 = !{!12226, !12227, !12228, !12229}
!12226 = !DILocalVariable(name: "pin", arg: 1, scope: !12222, file: !1928, line: 176, type: !108)
!12227 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12222, file: !1928, line: 176, type: !108)
!12228 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12222, file: !1928, line: 176, type: !108)
!12229 = !DILocalVariable(name: "port_device", scope: !12222, file: !1928, line: 178, type: !1858)
!12230 = !DILocation(line: 0, scope: !12222)
!12231 = !DILocation(line: 180, column: 22, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12222, file: !1928, line: 180, column: 6)
!12233 = !DILocation(line: 180, column: 6, scope: !12222)
!12234 = !DILocation(line: 180, column: 6, scope: !12232)
!12235 = !DILocation(line: 184, column: 16, scope: !12222)
!12236 = !DILocation(line: 186, column: 19, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12222, file: !1928, line: 186, column: 6)
!12238 = !DILocation(line: 186, column: 28, scope: !12237)
!12239 = !DILocation(line: 186, column: 33, scope: !12237)
!12240 = !DILocation(line: 186, column: 6, scope: !12222)
!12241 = !DILocation(line: 190, column: 43, scope: !12222)
!12242 = !DILocation(line: 190, column: 9, scope: !12222)
!12243 = !DILocation(line: 190, column: 2, scope: !12222)
!12244 = !DILocation(line: 191, column: 1, scope: !12222)
!12245 = distinct !DISubprogram(name: "device_is_ready", scope: !10201, file: !10201, line: 47, type: !12246, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1846, retainedNodes: !12248)
!12246 = !DISubroutineType(types: !12247)
!12247 = !{!131, !1858}
!12248 = !{!12249}
!12249 = !DILocalVariable(name: "dev", arg: 1, scope: !12245, file: !10201, line: 47, type: !1858)
!12250 = !DILocation(line: 0, scope: !12245)
!12251 = !DILocation(line: 55, column: 2, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12245, file: !10201, line: 55, column: 2)
!12253 = !{i64 2149514397}
!12254 = !DILocation(line: 56, column: 9, scope: !12245)
!12255 = !DILocation(line: 56, column: 2, scope: !12245)
!12256 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !429, file: !429, line: 730, type: !12246, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1846, retainedNodes: !12257)
!12257 = !{!12258}
!12258 = !DILocalVariable(name: "dev", arg: 1, scope: !12256, file: !429, line: 730, type: !1858)
!12259 = !DILocation(line: 0, scope: !12256)
!12260 = !DILocation(line: 732, column: 9, scope: !12256)
!12261 = !DILocation(line: 732, column: 2, scope: !12256)
!12262 = distinct !DISubprogram(name: "SystemInit", scope: !1980, file: !1980, line: 167, type: !334, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1936, retainedNodes: !251)
!12263 = !DILocation(line: 182, column: 1, scope: !12262)
!12264 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1980, file: !1980, line: 220, type: !334, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1936, retainedNodes: !12265)
!12265 = !{!12266, !12267, !12268, !12269, !12270}
!12266 = !DILocalVariable(name: "tmp", scope: !12264, file: !1980, line: 222, type: !108)
!12267 = !DILocalVariable(name: "pllvco", scope: !12264, file: !1980, line: 222, type: !108)
!12268 = !DILocalVariable(name: "pllp", scope: !12264, file: !1980, line: 222, type: !108)
!12269 = !DILocalVariable(name: "pllsource", scope: !12264, file: !1980, line: 222, type: !108)
!12270 = !DILocalVariable(name: "pllm", scope: !12264, file: !1980, line: 222, type: !108)
!12271 = !DILocation(line: 0, scope: !12264)
!12272 = !DILocation(line: 225, column: 14, scope: !12264)
!12273 = !DILocation(line: 225, column: 19, scope: !12264)
!12274 = !DILocation(line: 227, column: 3, scope: !12264)
!12275 = !DILocation(line: 240, column: 25, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12264, file: !1980, line: 228, column: 3)
!12277 = !DILocation(line: 241, column: 19, scope: !12276)
!12278 = !DILocation(line: 241, column: 27, scope: !12276)
!12279 = !DILocation(line: 0, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12276, file: !1980, line: 243, column: 11)
!12281 = !DILocation(line: 254, column: 22, scope: !12276)
!12282 = !DILocation(line: 254, column: 62, scope: !12276)
!12283 = !DILocation(line: 255, column: 31, scope: !12276)
!12284 = !DILocation(line: 256, column: 7, scope: !12276)
!12285 = !DILocation(line: 0, scope: !12276)
!12286 = !DILocation(line: 263, column: 30, scope: !12264)
!12287 = !DILocation(line: 263, column: 52, scope: !12264)
!12288 = !DILocation(line: 263, column: 9, scope: !12264)
!12289 = !DILocation(line: 265, column: 19, scope: !12264)
!12290 = !DILocation(line: 266, column: 1, scope: !12264)
!12291 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !12292, file: !12292, line: 87, type: !12293, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12332)
!12292 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12293 = !DISubroutineType(types: !12294)
!12294 = !{!12295, !12296}
!12295 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3147, line: 44, baseType: !3146)
!12296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12297, size: 32)
!12297 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !12298, line: 172, baseType: !12299)
!12298 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12298, line: 121, size: 736, elements: !12300)
!12300 = !{!12301, !12302, !12311, !12319, !12320, !12321, !12322, !12323, !12324, !12325, !12326, !12327, !12328, !12329, !12330, !12331}
!12301 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !12299, file: !12298, line: 123, baseType: !108, size: 32)
!12302 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !12299, file: !12298, line: 126, baseType: !12303, size: 160, offset: 32)
!12303 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !12298, line: 97, baseType: !12304)
!12304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12298, line: 79, size: 160, elements: !12305)
!12305 = !{!12306, !12307, !12308, !12309, !12310}
!12306 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !12304, file: !12298, line: 81, baseType: !108, size: 32)
!12307 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !12304, file: !12298, line: 84, baseType: !108, size: 32, offset: 32)
!12308 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !12304, file: !12298, line: 87, baseType: !108, size: 32, offset: 64)
!12309 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !12304, file: !12298, line: 90, baseType: !108, size: 32, offset: 96)
!12310 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !12304, file: !12298, line: 94, baseType: !108, size: 32, offset: 128)
!12311 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !12299, file: !12298, line: 129, baseType: !12312, size: 128, offset: 192)
!12312 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !12298, line: 116, baseType: !12313)
!12313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12298, line: 102, size: 128, elements: !12314)
!12314 = !{!12315, !12316, !12317, !12318}
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !12313, file: !12298, line: 104, baseType: !108, size: 32)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !12313, file: !12298, line: 107, baseType: !108, size: 32, offset: 32)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !12313, file: !12298, line: 110, baseType: !108, size: 32, offset: 64)
!12318 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !12313, file: !12298, line: 113, baseType: !108, size: 32, offset: 96)
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !12299, file: !12298, line: 132, baseType: !108, size: 32, offset: 320)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !12299, file: !12298, line: 136, baseType: !108, size: 32, offset: 352)
!12321 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !12299, file: !12298, line: 140, baseType: !108, size: 32, offset: 384)
!12322 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !12299, file: !12298, line: 143, baseType: !108, size: 32, offset: 416)
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !12299, file: !12298, line: 146, baseType: !108, size: 32, offset: 448)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !12299, file: !12298, line: 149, baseType: !108, size: 32, offset: 480)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !12299, file: !12298, line: 152, baseType: !108, size: 32, offset: 512)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !12299, file: !12298, line: 155, baseType: !108, size: 32, offset: 544)
!12327 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !12299, file: !12298, line: 158, baseType: !108, size: 32, offset: 576)
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !12299, file: !12298, line: 161, baseType: !108, size: 32, offset: 608)
!12329 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !12299, file: !12298, line: 164, baseType: !108, size: 32, offset: 640)
!12330 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !12299, file: !12298, line: 167, baseType: !108, size: 32, offset: 672)
!12331 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !12299, file: !12298, line: 170, baseType: !185, size: 8, offset: 704)
!12332 = !{!12333, !12334, !12335, !12336, !12337, !12338, !12339, !12340, !12341, !12342, !12343}
!12333 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12291, file: !12292, line: 87, type: !12296)
!12334 = !DILocalVariable(name: "tickstart", scope: !12291, file: !12292, line: 89, type: !108)
!12335 = !DILocalVariable(name: "tmpreg1", scope: !12291, file: !12292, line: 90, type: !108)
!12336 = !DILocalVariable(name: "plli2sp", scope: !12291, file: !12292, line: 91, type: !108)
!12337 = !DILocalVariable(name: "plli2sq", scope: !12291, file: !12292, line: 92, type: !108)
!12338 = !DILocalVariable(name: "plli2sr", scope: !12291, file: !12292, line: 93, type: !108)
!12339 = !DILocalVariable(name: "pllsaip", scope: !12291, file: !12292, line: 94, type: !108)
!12340 = !DILocalVariable(name: "pllsaiq", scope: !12291, file: !12292, line: 95, type: !108)
!12341 = !DILocalVariable(name: "plli2sused", scope: !12291, file: !12292, line: 96, type: !108)
!12342 = !DILocalVariable(name: "pllsaiused", scope: !12291, file: !12292, line: 97, type: !108)
!12343 = !DILocalVariable(name: "tmpreg", scope: !12344, file: !12292, line: 184, type: !409)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !12292, line: 184, column: 5)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !12292, line: 179, column: 3)
!12346 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 178, column: 6)
!12347 = !DILocation(line: 0, scope: !12291)
!12348 = !DILocation(line: 103, column: 23, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 103, column: 6)
!12350 = !DILocation(line: 103, column: 45, scope: !12349)
!12351 = !DILocation(line: 103, column: 71, scope: !12349)
!12352 = !DILocation(line: 103, column: 6, scope: !12291)
!12353 = !DILocation(line: 109, column: 5, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12349, file: !12292, line: 104, column: 3)
!12355 = !DILocation(line: 111, column: 23, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12354, file: !12292, line: 111, column: 8)
!12357 = !DILocation(line: 111, column: 45, scope: !12356)
!12358 = !DILocation(line: 111, column: 8, scope: !12354)
!12359 = !DILocation(line: 119, column: 23, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 119, column: 6)
!12361 = !DILocation(line: 119, column: 45, scope: !12360)
!12362 = !DILocation(line: 119, column: 71, scope: !12360)
!12363 = !DILocation(line: 119, column: 6, scope: !12291)
!12364 = !DILocation(line: 125, column: 5, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12360, file: !12292, line: 120, column: 3)
!12366 = !DILocation(line: 127, column: 23, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12365, file: !12292, line: 127, column: 8)
!12368 = !DILocation(line: 127, column: 45, scope: !12367)
!12369 = !DILocation(line: 127, column: 8, scope: !12365)
!12370 = !DILocation(line: 135, column: 23, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 135, column: 6)
!12372 = !DILocation(line: 135, column: 45, scope: !12371)
!12373 = !DILocation(line: 135, column: 67, scope: !12371)
!12374 = !DILocation(line: 135, column: 6, scope: !12291)
!12375 = !DILocation(line: 141, column: 5, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12371, file: !12292, line: 136, column: 3)
!12377 = !DILocation(line: 143, column: 23, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12376, file: !12292, line: 143, column: 8)
!12379 = !DILocation(line: 143, column: 42, scope: !12378)
!12380 = !DILocation(line: 143, column: 8, scope: !12376)
!12381 = !DILocation(line: 148, column: 42, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12376, file: !12292, line: 148, column: 8)
!12383 = !DILocation(line: 148, column: 8, scope: !12376)
!12384 = !DILocation(line: 156, column: 23, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 156, column: 6)
!12386 = !DILocation(line: 156, column: 45, scope: !12385)
!12387 = !DILocation(line: 156, column: 67, scope: !12385)
!12388 = !DILocation(line: 156, column: 6, scope: !12291)
!12389 = !DILocation(line: 162, column: 5, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12385, file: !12292, line: 157, column: 3)
!12391 = !DILocation(line: 165, column: 23, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12390, file: !12292, line: 165, column: 8)
!12393 = !DILocation(line: 165, column: 42, scope: !12392)
!12394 = !DILocation(line: 165, column: 8, scope: !12390)
!12395 = !DILocation(line: 170, column: 42, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12390, file: !12292, line: 170, column: 8)
!12397 = !DILocation(line: 170, column: 8, scope: !12390)
!12398 = !DILocation(line: 178, column: 23, scope: !12346)
!12399 = !DILocation(line: 178, column: 45, scope: !12346)
!12400 = !DILocation(line: 178, column: 66, scope: !12346)
!12401 = !DILocation(line: 178, column: 6, scope: !12291)
!12402 = !DILocation(line: 184, column: 5, scope: !12344)
!12403 = !DILocation(line: 184, column: 5, scope: !12345)
!12404 = !DILocation(line: 187, column: 13, scope: !12345)
!12405 = !DILocation(line: 190, column: 17, scope: !12345)
!12406 = !DILocation(line: 192, column: 5, scope: !12345)
!12407 = !DILocation(line: 192, column: 17, scope: !12345)
!12408 = !DILocation(line: 192, column: 20, scope: !12345)
!12409 = !DILocation(line: 192, column: 34, scope: !12345)
!12410 = !DILocation(line: 194, column: 11, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !12292, line: 194, column: 10)
!12412 = distinct !DILexicalBlock(scope: !12345, file: !12292, line: 193, column: 5)
!12413 = !DILocation(line: 194, column: 25, scope: !12411)
!12414 = !DILocation(line: 194, column: 39, scope: !12411)
!12415 = !DILocation(line: 194, column: 10, scope: !12412)
!12416 = distinct !{!12416, !12406, !12417}
!12417 = !DILocation(line: 198, column: 5, scope: !12345)
!12418 = !DILocation(line: 200, column: 21, scope: !12345)
!12419 = !DILocation(line: 200, column: 26, scope: !12345)
!12420 = !DILocation(line: 201, column: 17, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12345, file: !12292, line: 201, column: 8)
!12422 = !DILocation(line: 201, column: 33, scope: !12421)
!12423 = !DILocation(line: 201, column: 66, scope: !12421)
!12424 = !DILocation(line: 201, column: 84, scope: !12421)
!12425 = !DILocation(line: 201, column: 47, scope: !12421)
!12426 = !DILocation(line: 201, column: 8, scope: !12345)
!12427 = !DILocation(line: 204, column: 23, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12421, file: !12292, line: 202, column: 5)
!12429 = !DILocation(line: 204, column: 28, scope: !12428)
!12430 = !DILocation(line: 206, column: 7, scope: !12428)
!12431 = !DILocation(line: 207, column: 7, scope: !12428)
!12432 = !DILocation(line: 209, column: 17, scope: !12428)
!12433 = !DILocation(line: 212, column: 10, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12428, file: !12292, line: 212, column: 10)
!12435 = !DILocation(line: 212, column: 10, scope: !12428)
!12436 = !DILocation(line: 215, column: 21, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12434, file: !12292, line: 213, column: 7)
!12438 = !DILocation(line: 218, column: 9, scope: !12437)
!12439 = !DILocation(line: 218, column: 15, scope: !12437)
!12440 = !DILocation(line: 218, column: 51, scope: !12437)
!12441 = !DILocation(line: 220, column: 15, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12443, file: !12292, line: 220, column: 14)
!12443 = distinct !DILexicalBlock(scope: !12437, file: !12292, line: 219, column: 9)
!12444 = !DILocation(line: 220, column: 29, scope: !12442)
!12445 = !DILocation(line: 220, column: 43, scope: !12442)
!12446 = !DILocation(line: 220, column: 14, scope: !12443)
!12447 = distinct !{!12447, !12438, !12448}
!12448 = !DILocation(line: 224, column: 9, scope: !12437)
!12449 = !DILocation(line: 227, column: 5, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12345, file: !12292, line: 227, column: 5)
!12451 = !DILocation(line: 232, column: 23, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 232, column: 6)
!12453 = !DILocation(line: 228, column: 3, scope: !12345)
!12454 = !DILocation(line: 232, column: 45, scope: !12452)
!12455 = !DILocation(line: 232, column: 66, scope: !12452)
!12456 = !DILocation(line: 232, column: 6, scope: !12291)
!12457 = !DILocation(line: 235, column: 5, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12452, file: !12292, line: 233, column: 3)
!12459 = !DILocation(line: 240, column: 23, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 240, column: 6)
!12461 = !DILocation(line: 236, column: 3, scope: !12458)
!12462 = !DILocation(line: 240, column: 45, scope: !12460)
!12463 = !DILocation(line: 240, column: 70, scope: !12460)
!12464 = !DILocation(line: 240, column: 6, scope: !12291)
!12465 = !DILocation(line: 246, column: 5, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12460, file: !12292, line: 241, column: 3)
!12467 = !DILocation(line: 251, column: 23, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 251, column: 6)
!12469 = !DILocation(line: 247, column: 3, scope: !12466)
!12470 = !DILocation(line: 251, column: 45, scope: !12468)
!12471 = !DILocation(line: 251, column: 66, scope: !12468)
!12472 = !DILocation(line: 251, column: 6, scope: !12291)
!12473 = !DILocation(line: 257, column: 5, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12468, file: !12292, line: 252, column: 3)
!12475 = !DILocation(line: 262, column: 23, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 262, column: 6)
!12477 = !DILocation(line: 258, column: 3, scope: !12474)
!12478 = !DILocation(line: 262, column: 45, scope: !12476)
!12479 = !DILocation(line: 262, column: 68, scope: !12476)
!12480 = !DILocation(line: 262, column: 6, scope: !12291)
!12481 = !DILocation(line: 268, column: 5, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12476, file: !12292, line: 263, column: 3)
!12483 = !DILocation(line: 271, column: 23, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12482, file: !12292, line: 271, column: 8)
!12485 = !DILocation(line: 271, column: 43, scope: !12484)
!12486 = !DILocation(line: 271, column: 8, scope: !12482)
!12487 = !DILocation(line: 279, column: 23, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 279, column: 6)
!12489 = !DILocation(line: 279, column: 45, scope: !12488)
!12490 = !DILocation(line: 279, column: 67, scope: !12488)
!12491 = !DILocation(line: 279, column: 6, scope: !12291)
!12492 = !DILocation(line: 285, column: 5, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12488, file: !12292, line: 280, column: 3)
!12494 = !DILocation(line: 290, column: 23, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 290, column: 6)
!12496 = !DILocation(line: 286, column: 3, scope: !12493)
!12497 = !DILocation(line: 290, column: 45, scope: !12495)
!12498 = !DILocation(line: 290, column: 70, scope: !12495)
!12499 = !DILocation(line: 290, column: 6, scope: !12291)
!12500 = !DILocation(line: 296, column: 5, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12495, file: !12292, line: 291, column: 3)
!12502 = !DILocation(line: 298, column: 23, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12501, file: !12292, line: 298, column: 8)
!12504 = !DILocation(line: 298, column: 43, scope: !12503)
!12505 = !DILocation(line: 298, column: 8, scope: !12501)
!12506 = !DILocation(line: 308, column: 44, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 308, column: 6)
!12508 = !DILocation(line: 308, column: 18, scope: !12507)
!12509 = !DILocation(line: 308, column: 25, scope: !12507)
!12510 = !DILocation(line: 308, column: 65, scope: !12507)
!12511 = !DILocation(line: 308, column: 6, scope: !12291)
!12512 = !DILocation(line: 311, column: 5, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12507, file: !12292, line: 309, column: 3)
!12514 = !DILocation(line: 313, column: 17, scope: !12513)
!12515 = !DILocation(line: 315, column: 5, scope: !12513)
!12516 = !DILocation(line: 315, column: 11, scope: !12513)
!12517 = !DILocation(line: 317, column: 11, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !12292, line: 317, column: 10)
!12519 = distinct !DILexicalBlock(scope: !12513, file: !12292, line: 316, column: 5)
!12520 = !DILocation(line: 317, column: 25, scope: !12518)
!12521 = !DILocation(line: 317, column: 39, scope: !12518)
!12522 = !DILocation(line: 317, column: 10, scope: !12519)
!12523 = distinct !{!12523, !12515, !12524}
!12524 = !DILocation(line: 322, column: 5, scope: !12513)
!12525 = !DILocation(line: 329, column: 27, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12513, file: !12292, line: 329, column: 8)
!12527 = !DILocation(line: 329, column: 49, scope: !12526)
!12528 = !DILocation(line: 329, column: 75, scope: !12526)
!12529 = !DILocation(line: 329, column: 102, scope: !12526)
!12530 = !DILocation(line: 329, column: 121, scope: !12526)
!12531 = !DILocation(line: 329, column: 143, scope: !12526)
!12532 = !DILocation(line: 329, column: 176, scope: !12526)
!12533 = !DILocation(line: 330, column: 49, scope: !12526)
!12534 = !DILocation(line: 330, column: 75, scope: !12526)
!12535 = !DILocation(line: 330, column: 102, scope: !12526)
!12536 = !DILocation(line: 330, column: 121, scope: !12526)
!12537 = !DILocation(line: 330, column: 143, scope: !12526)
!12538 = !DILocation(line: 329, column: 8, scope: !12513)
!12539 = !DILocation(line: 336, column: 26, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12526, file: !12292, line: 331, column: 5)
!12541 = !DILocation(line: 336, column: 100, scope: !12540)
!12542 = !DILocation(line: 337, column: 24, scope: !12540)
!12543 = !DILocation(line: 337, column: 61, scope: !12540)
!12544 = !DILocation(line: 341, column: 7, scope: !12540)
!12545 = !DILocation(line: 345, column: 27, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12513, file: !12292, line: 345, column: 8)
!12547 = !DILocation(line: 342, column: 5, scope: !12540)
!12548 = !DILocation(line: 345, column: 49, scope: !12546)
!12549 = !DILocation(line: 345, column: 71, scope: !12546)
!12550 = !DILocation(line: 345, column: 94, scope: !12546)
!12551 = !DILocation(line: 345, column: 113, scope: !12546)
!12552 = !DILocation(line: 345, column: 132, scope: !12546)
!12553 = !DILocation(line: 345, column: 162, scope: !12546)
!12554 = !DILocation(line: 346, column: 49, scope: !12546)
!12555 = !DILocation(line: 346, column: 71, scope: !12546)
!12556 = !DILocation(line: 346, column: 94, scope: !12546)
!12557 = !DILocation(line: 346, column: 113, scope: !12546)
!12558 = !DILocation(line: 346, column: 132, scope: !12546)
!12559 = !DILocation(line: 345, column: 8, scope: !12513)
!12560 = !DILocation(line: 354, column: 26, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12546, file: !12292, line: 347, column: 5)
!12562 = !DILocation(line: 354, column: 100, scope: !12561)
!12563 = !DILocation(line: 355, column: 24, scope: !12561)
!12564 = !DILocation(line: 355, column: 61, scope: !12561)
!12565 = !DILocation(line: 360, column: 7, scope: !12561)
!12566 = !DILocation(line: 363, column: 7, scope: !12561)
!12567 = !DILocation(line: 367, column: 26, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12513, file: !12292, line: 367, column: 8)
!12569 = !DILocation(line: 364, column: 5, scope: !12561)
!12570 = !DILocation(line: 367, column: 48, scope: !12568)
!12571 = !DILocation(line: 367, column: 73, scope: !12568)
!12572 = !DILocation(line: 367, column: 99, scope: !12568)
!12573 = !DILocation(line: 367, column: 118, scope: !12568)
!12574 = !DILocation(line: 367, column: 138, scope: !12568)
!12575 = !DILocation(line: 367, column: 8, scope: !12513)
!12576 = !DILocation(line: 372, column: 26, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12568, file: !12292, line: 368, column: 5)
!12578 = !DILocation(line: 373, column: 24, scope: !12577)
!12579 = !DILocation(line: 373, column: 61, scope: !12577)
!12580 = !DILocation(line: 377, column: 7, scope: !12577)
!12581 = !DILocation(line: 381, column: 24, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12513, file: !12292, line: 381, column: 8)
!12583 = !DILocation(line: 378, column: 5, scope: !12577)
!12584 = !DILocation(line: 381, column: 45, scope: !12582)
!12585 = !DILocation(line: 381, column: 69, scope: !12582)
!12586 = !DILocation(line: 381, column: 8, scope: !12513)
!12587 = !DILocation(line: 390, column: 7, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12582, file: !12292, line: 382, column: 5)
!12589 = !DILocation(line: 391, column: 5, scope: !12588)
!12590 = !DILocation(line: 394, column: 5, scope: !12513)
!12591 = !DILocation(line: 396, column: 17, scope: !12513)
!12592 = !DILocation(line: 398, column: 5, scope: !12513)
!12593 = !DILocation(line: 398, column: 11, scope: !12513)
!12594 = !DILocation(line: 398, column: 51, scope: !12513)
!12595 = !DILocation(line: 400, column: 11, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !12292, line: 400, column: 10)
!12597 = distinct !DILexicalBlock(scope: !12513, file: !12292, line: 399, column: 5)
!12598 = !DILocation(line: 400, column: 25, scope: !12596)
!12599 = !DILocation(line: 400, column: 39, scope: !12596)
!12600 = !DILocation(line: 400, column: 10, scope: !12597)
!12601 = distinct !{!12601, !12592, !12602}
!12602 = !DILocation(line: 405, column: 5, scope: !12513)
!12603 = !DILocation(line: 411, column: 17, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12291, file: !12292, line: 411, column: 6)
!12605 = !DILocation(line: 411, column: 6, scope: !12291)
!12606 = !DILocation(line: 414, column: 5, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12604, file: !12292, line: 412, column: 3)
!12608 = !DILocation(line: 416, column: 17, scope: !12607)
!12609 = !DILocation(line: 418, column: 5, scope: !12607)
!12610 = !DILocation(line: 418, column: 11, scope: !12607)
!12611 = !DILocation(line: 420, column: 11, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12613, file: !12292, line: 420, column: 10)
!12613 = distinct !DILexicalBlock(scope: !12607, file: !12292, line: 419, column: 5)
!12614 = !DILocation(line: 420, column: 25, scope: !12612)
!12615 = !DILocation(line: 420, column: 39, scope: !12612)
!12616 = !DILocation(line: 420, column: 10, scope: !12613)
!12617 = distinct !{!12617, !12609, !12618}
!12618 = !DILocation(line: 425, column: 5, scope: !12607)
!12619 = !DILocation(line: 432, column: 27, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12607, file: !12292, line: 432, column: 8)
!12621 = !DILocation(line: 432, column: 49, scope: !12620)
!12622 = !DILocation(line: 432, column: 71, scope: !12620)
!12623 = !DILocation(line: 432, column: 94, scope: !12620)
!12624 = !DILocation(line: 432, column: 113, scope: !12620)
!12625 = !DILocation(line: 432, column: 132, scope: !12620)
!12626 = !DILocation(line: 432, column: 162, scope: !12620)
!12627 = !DILocation(line: 433, column: 49, scope: !12620)
!12628 = !DILocation(line: 433, column: 71, scope: !12620)
!12629 = !DILocation(line: 433, column: 94, scope: !12620)
!12630 = !DILocation(line: 433, column: 113, scope: !12620)
!12631 = !DILocation(line: 433, column: 132, scope: !12620)
!12632 = !DILocation(line: 432, column: 8, scope: !12607)
!12633 = !DILocation(line: 441, column: 26, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12620, file: !12292, line: 434, column: 5)
!12635 = !DILocation(line: 441, column: 100, scope: !12634)
!12636 = !DILocation(line: 445, column: 7, scope: !12634)
!12637 = !DILocation(line: 448, column: 7, scope: !12634)
!12638 = !DILocation(line: 453, column: 26, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12607, file: !12292, line: 453, column: 8)
!12640 = !DILocation(line: 449, column: 5, scope: !12634)
!12641 = !DILocation(line: 453, column: 48, scope: !12639)
!12642 = !DILocation(line: 453, column: 71, scope: !12639)
!12643 = !DILocation(line: 453, column: 95, scope: !12639)
!12644 = !DILocation(line: 453, column: 114, scope: !12639)
!12645 = !DILocation(line: 453, column: 134, scope: !12639)
!12646 = !DILocation(line: 453, column: 8, scope: !12607)
!12647 = !DILocation(line: 458, column: 24, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12639, file: !12292, line: 454, column: 5)
!12649 = !DILocation(line: 458, column: 61, scope: !12648)
!12650 = !DILocation(line: 462, column: 7, scope: !12648)
!12651 = !DILocation(line: 463, column: 5, scope: !12648)
!12652 = !DILocation(line: 466, column: 5, scope: !12607)
!12653 = !DILocation(line: 468, column: 17, scope: !12607)
!12654 = !DILocation(line: 470, column: 5, scope: !12607)
!12655 = !DILocation(line: 470, column: 11, scope: !12607)
!12656 = !DILocation(line: 470, column: 39, scope: !12607)
!12657 = !DILocation(line: 472, column: 11, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !12292, line: 472, column: 10)
!12659 = distinct !DILexicalBlock(scope: !12607, file: !12292, line: 471, column: 5)
!12660 = !DILocation(line: 472, column: 25, scope: !12658)
!12661 = !DILocation(line: 472, column: 39, scope: !12658)
!12662 = !DILocation(line: 472, column: 10, scope: !12659)
!12663 = distinct !{!12663, !12654, !12664}
!12664 = !DILocation(line: 477, column: 5, scope: !12607)
!12665 = !DILocation(line: 480, column: 1, scope: !12291)
!12666 = !DISubprogram(name: "HAL_GetTick", scope: !12667, file: !12667, line: 234, type: !3655, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!12667 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12668 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !12292, file: !12292, line: 489, type: !12669, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12671)
!12669 = !DISubroutineType(types: !12670)
!12670 = !{null, !12296}
!12671 = !{!12672, !12673}
!12672 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !12668, file: !12292, line: 489, type: !12296)
!12673 = !DILocalVariable(name: "tempreg", scope: !12668, file: !12292, line: 491, type: !108)
!12674 = !DILocation(line: 0, scope: !12668)
!12675 = !DILocation(line: 494, column: 18, scope: !12668)
!12676 = !DILocation(line: 494, column: 39, scope: !12668)
!12677 = !DILocation(line: 502, column: 52, scope: !12668)
!12678 = !DILocation(line: 502, column: 63, scope: !12668)
!12679 = !DILocation(line: 502, column: 25, scope: !12668)
!12680 = !DILocation(line: 502, column: 33, scope: !12668)
!12681 = !DILocation(line: 503, column: 52, scope: !12668)
!12682 = !DILocation(line: 503, column: 89, scope: !12668)
!12683 = !DILocation(line: 503, column: 25, scope: !12668)
!12684 = !DILocation(line: 503, column: 33, scope: !12668)
!12685 = !DILocation(line: 504, column: 54, scope: !12668)
!12686 = !DILocation(line: 504, column: 128, scope: !12668)
!12687 = !DILocation(line: 504, column: 25, scope: !12668)
!12688 = !DILocation(line: 504, column: 33, scope: !12668)
!12689 = !DILocation(line: 505, column: 52, scope: !12668)
!12690 = !DILocation(line: 505, column: 89, scope: !12668)
!12691 = !DILocation(line: 505, column: 25, scope: !12668)
!12692 = !DILocation(line: 505, column: 33, scope: !12668)
!12693 = !DILocation(line: 506, column: 52, scope: !12668)
!12694 = !DILocation(line: 506, column: 89, scope: !12668)
!12695 = !DILocation(line: 506, column: 25, scope: !12668)
!12696 = !DILocation(line: 506, column: 33, scope: !12668)
!12697 = !DILocation(line: 508, column: 52, scope: !12668)
!12698 = !DILocation(line: 508, column: 63, scope: !12668)
!12699 = !DILocation(line: 508, column: 25, scope: !12668)
!12700 = !DILocation(line: 508, column: 33, scope: !12668)
!12701 = !DILocation(line: 509, column: 52, scope: !12668)
!12702 = !DILocation(line: 509, column: 89, scope: !12668)
!12703 = !DILocation(line: 509, column: 25, scope: !12668)
!12704 = !DILocation(line: 509, column: 33, scope: !12668)
!12705 = !DILocation(line: 510, column: 54, scope: !12668)
!12706 = !DILocation(line: 510, column: 128, scope: !12668)
!12707 = !DILocation(line: 510, column: 25, scope: !12668)
!12708 = !DILocation(line: 510, column: 33, scope: !12668)
!12709 = !DILocation(line: 511, column: 52, scope: !12668)
!12710 = !DILocation(line: 511, column: 89, scope: !12668)
!12711 = !DILocation(line: 511, column: 25, scope: !12668)
!12712 = !DILocation(line: 511, column: 33, scope: !12668)
!12713 = !DILocation(line: 513, column: 48, scope: !12668)
!12714 = !DILocation(line: 513, column: 56, scope: !12668)
!12715 = !DILocation(line: 513, column: 18, scope: !12668)
!12716 = !DILocation(line: 513, column: 29, scope: !12668)
!12717 = !DILocation(line: 514, column: 48, scope: !12668)
!12718 = !DILocation(line: 514, column: 82, scope: !12668)
!12719 = !DILocation(line: 514, column: 18, scope: !12668)
!12720 = !DILocation(line: 514, column: 29, scope: !12668)
!12721 = !DILocation(line: 517, column: 39, scope: !12668)
!12722 = !DILocation(line: 517, column: 18, scope: !12668)
!12723 = !DILocation(line: 517, column: 37, scope: !12668)
!12724 = !DILocation(line: 520, column: 39, scope: !12668)
!12725 = !DILocation(line: 520, column: 18, scope: !12668)
!12726 = !DILocation(line: 520, column: 37, scope: !12668)
!12727 = !DILocation(line: 523, column: 42, scope: !12668)
!12728 = !DILocation(line: 523, column: 18, scope: !12668)
!12729 = !DILocation(line: 523, column: 40, scope: !12668)
!12730 = !DILocation(line: 526, column: 42, scope: !12668)
!12731 = !DILocation(line: 526, column: 18, scope: !12668)
!12732 = !DILocation(line: 526, column: 40, scope: !12668)
!12733 = !DILocation(line: 529, column: 19, scope: !12668)
!12734 = !DILocation(line: 529, column: 24, scope: !12668)
!12735 = !DILocation(line: 530, column: 67, scope: !12668)
!12736 = !DILocation(line: 530, column: 72, scope: !12668)
!12737 = !DILocation(line: 530, column: 59, scope: !12668)
!12738 = !DILocation(line: 530, column: 18, scope: !12668)
!12739 = !DILocation(line: 530, column: 36, scope: !12668)
!12740 = !DILocation(line: 533, column: 38, scope: !12668)
!12741 = !DILocation(line: 533, column: 18, scope: !12668)
!12742 = !DILocation(line: 533, column: 36, scope: !12668)
!12743 = !DILocation(line: 536, column: 42, scope: !12668)
!12744 = !DILocation(line: 536, column: 18, scope: !12668)
!12745 = !DILocation(line: 536, column: 40, scope: !12668)
!12746 = !DILocation(line: 539, column: 40, scope: !12668)
!12747 = !DILocation(line: 539, column: 18, scope: !12668)
!12748 = !DILocation(line: 539, column: 38, scope: !12668)
!12749 = !DILocation(line: 542, column: 39, scope: !12668)
!12750 = !DILocation(line: 542, column: 18, scope: !12668)
!12751 = !DILocation(line: 542, column: 37, scope: !12668)
!12752 = !DILocation(line: 545, column: 40, scope: !12668)
!12753 = !DILocation(line: 545, column: 18, scope: !12668)
!12754 = !DILocation(line: 545, column: 38, scope: !12668)
!12755 = !DILocation(line: 548, column: 13, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12668, file: !12292, line: 548, column: 7)
!12757 = !DILocation(line: 548, column: 7, scope: !12668)
!12758 = !DILocation(line: 550, column: 20, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12756, file: !12292, line: 549, column: 3)
!12760 = !DILocation(line: 550, column: 37, scope: !12759)
!12761 = !DILocation(line: 556, column: 1, scope: !12668)
!12762 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !12292, file: !12292, line: 569, type: !8620, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12763)
!12763 = !{!12764, !12765, !12766, !12767, !12768, !12769, !12770}
!12764 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !12762, file: !12292, line: 569, type: !108)
!12765 = !DILocalVariable(name: "tmpreg1", scope: !12762, file: !12292, line: 571, type: !108)
!12766 = !DILocalVariable(name: "frequency", scope: !12762, file: !12292, line: 573, type: !108)
!12767 = !DILocalVariable(name: "vcoinput", scope: !12762, file: !12292, line: 575, type: !108)
!12768 = !DILocalVariable(name: "saiclocksource", scope: !12762, file: !12292, line: 577, type: !108)
!12769 = !DILocalVariable(name: "srcclk", scope: !12762, file: !12292, line: 578, type: !108)
!12770 = !DILocalVariable(name: "vcooutput", scope: !12762, file: !12292, line: 580, type: !108)
!12771 = !DILocation(line: 0, scope: !12762)
!12772 = !DILocation(line: 581, column: 3, scope: !12762)
!12773 = !DILocation(line: 586, column: 29, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12775, file: !12292, line: 585, column: 5)
!12775 = distinct !DILexicalBlock(scope: !12762, file: !12292, line: 582, column: 3)
!12776 = !DILocation(line: 588, column: 7, scope: !12774)
!12777 = !DILocation(line: 594, column: 20, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12779, file: !12292, line: 594, column: 14)
!12779 = distinct !DILexicalBlock(scope: !12780, file: !12292, line: 591, column: 9)
!12780 = distinct !DILexicalBlock(scope: !12774, file: !12292, line: 589, column: 7)
!12781 = !DILocation(line: 0, scope: !12778)
!12782 = !DILocation(line: 606, column: 27, scope: !12779)
!12783 = !DILocation(line: 606, column: 64, scope: !12779)
!12784 = !DILocation(line: 607, column: 42, scope: !12779)
!12785 = !DILocation(line: 607, column: 79, scope: !12779)
!12786 = !DILocation(line: 607, column: 33, scope: !12779)
!12787 = !DILocation(line: 607, column: 86, scope: !12779)
!12788 = !DILocation(line: 610, column: 29, scope: !12779)
!12789 = !DILocation(line: 610, column: 63, scope: !12779)
!12790 = !DILocation(line: 610, column: 70, scope: !12779)
!12791 = !DILocation(line: 611, column: 32, scope: !12779)
!12792 = !DILocation(line: 612, column: 11, scope: !12779)
!12793 = !DILocation(line: 619, column: 20, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12795, file: !12292, line: 619, column: 14)
!12795 = distinct !DILexicalBlock(scope: !12780, file: !12292, line: 616, column: 9)
!12796 = !DILocation(line: 0, scope: !12794)
!12797 = !DILocation(line: 632, column: 27, scope: !12795)
!12798 = !DILocation(line: 632, column: 64, scope: !12795)
!12799 = !DILocation(line: 633, column: 42, scope: !12795)
!12800 = !DILocation(line: 633, column: 79, scope: !12795)
!12801 = !DILocation(line: 633, column: 33, scope: !12795)
!12802 = !DILocation(line: 633, column: 86, scope: !12795)
!12803 = !DILocation(line: 636, column: 28, scope: !12795)
!12804 = !DILocation(line: 636, column: 36, scope: !12795)
!12805 = !DILocation(line: 636, column: 62, scope: !12795)
!12806 = !DILocation(line: 637, column: 32, scope: !12795)
!12807 = !DILocation(line: 638, column: 11, scope: !12795)
!12808 = !DILocation(line: 645, column: 20, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !12292, line: 645, column: 14)
!12810 = distinct !DILexicalBlock(scope: !12780, file: !12292, line: 642, column: 9)
!12811 = !DILocation(line: 0, scope: !12809)
!12812 = !DILocation(line: 658, column: 27, scope: !12810)
!12813 = !DILocation(line: 658, column: 55, scope: !12810)
!12814 = !DILocation(line: 659, column: 42, scope: !12810)
!12815 = !DILocation(line: 659, column: 70, scope: !12810)
!12816 = !DILocation(line: 659, column: 33, scope: !12810)
!12817 = !DILocation(line: 659, column: 77, scope: !12810)
!12818 = !DILocation(line: 660, column: 11, scope: !12810)
!12819 = !DILocation(line: 665, column: 11, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12780, file: !12292, line: 663, column: 9)
!12821 = !DILocation(line: 669, column: 20, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12823, file: !12292, line: 669, column: 14)
!12823 = distinct !DILexicalBlock(scope: !12780, file: !12292, line: 668, column: 9)
!12824 = !DILocation(line: 691, column: 16, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12775, file: !12292, line: 689, column: 5)
!12826 = !DILocation(line: 692, column: 7, scope: !12825)
!12827 = !DILocation(line: 706, column: 20, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !12292, line: 706, column: 14)
!12829 = distinct !DILexicalBlock(scope: !12830, file: !12292, line: 703, column: 9)
!12830 = distinct !DILexicalBlock(scope: !12825, file: !12292, line: 693, column: 7)
!12831 = !DILocation(line: 0, scope: !12828)
!12832 = !DILocation(line: 718, column: 53, scope: !12829)
!12833 = !DILocation(line: 718, column: 90, scope: !12829)
!12834 = !DILocation(line: 718, column: 43, scope: !12829)
!12835 = !DILocation(line: 720, column: 53, scope: !12829)
!12836 = !DILocation(line: 720, column: 90, scope: !12829)
!12837 = !DILocation(line: 720, column: 44, scope: !12829)
!12838 = !DILocation(line: 721, column: 11, scope: !12829)
!12839 = !DILocation(line: 728, column: 20, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !12292, line: 728, column: 14)
!12841 = distinct !DILexicalBlock(scope: !12830, file: !12292, line: 725, column: 9)
!12842 = !DILocation(line: 0, scope: !12840)
!12843 = !DILocation(line: 740, column: 53, scope: !12841)
!12844 = !DILocation(line: 740, column: 81, scope: !12841)
!12845 = !DILocation(line: 740, column: 43, scope: !12841)
!12846 = !DILocation(line: 742, column: 53, scope: !12841)
!12847 = !DILocation(line: 742, column: 81, scope: !12841)
!12848 = !DILocation(line: 742, column: 44, scope: !12841)
!12849 = !DILocation(line: 743, column: 11, scope: !12841)
!12850 = !DILocation(line: 748, column: 20, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12852, file: !12292, line: 748, column: 14)
!12852 = distinct !DILexicalBlock(scope: !12830, file: !12292, line: 747, column: 9)
!12853 = !DILocation(line: 770, column: 16, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12775, file: !12292, line: 768, column: 5)
!12855 = !DILocation(line: 771, column: 7, scope: !12854)
!12856 = !DILocation(line: 785, column: 20, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !12292, line: 785, column: 14)
!12858 = distinct !DILexicalBlock(scope: !12859, file: !12292, line: 782, column: 9)
!12859 = distinct !DILexicalBlock(scope: !12854, file: !12292, line: 772, column: 7)
!12860 = !DILocation(line: 0, scope: !12857)
!12861 = !DILocation(line: 797, column: 53, scope: !12858)
!12862 = !DILocation(line: 797, column: 90, scope: !12858)
!12863 = !DILocation(line: 797, column: 43, scope: !12858)
!12864 = !DILocation(line: 799, column: 53, scope: !12858)
!12865 = !DILocation(line: 799, column: 90, scope: !12858)
!12866 = !DILocation(line: 799, column: 44, scope: !12858)
!12867 = !DILocation(line: 800, column: 11, scope: !12858)
!12868 = !DILocation(line: 807, column: 20, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !12292, line: 807, column: 14)
!12870 = distinct !DILexicalBlock(scope: !12859, file: !12292, line: 804, column: 9)
!12871 = !DILocation(line: 0, scope: !12869)
!12872 = !DILocation(line: 819, column: 53, scope: !12870)
!12873 = !DILocation(line: 819, column: 81, scope: !12870)
!12874 = !DILocation(line: 819, column: 43, scope: !12870)
!12875 = !DILocation(line: 821, column: 53, scope: !12870)
!12876 = !DILocation(line: 821, column: 81, scope: !12870)
!12877 = !DILocation(line: 821, column: 44, scope: !12870)
!12878 = !DILocation(line: 822, column: 11, scope: !12870)
!12879 = !DILocation(line: 827, column: 20, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12881, file: !12292, line: 827, column: 14)
!12881 = distinct !DILexicalBlock(scope: !12859, file: !12292, line: 826, column: 9)
!12882 = !DILocation(line: 847, column: 3, scope: !12762)
!12883 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !12292, file: !12292, line: 2766, type: !12884, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12886)
!12884 = !DISubroutineType(types: !12885)
!12885 = !{null, !185}
!12886 = !{!12887}
!12887 = !DILocalVariable(name: "Mode", arg: 1, scope: !12883, file: !12292, line: 2766, type: !185)
!12888 = !DILocation(line: 0, scope: !12883)
!12889 = !DILocation(line: 2770, column: 11, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12883, file: !12292, line: 2770, column: 6)
!12891 = !DILocation(line: 0, scope: !12890)
!12892 = !DILocation(line: 2770, column: 6, scope: !12883)
!12893 = !DILocation(line: 2778, column: 1, scope: !12883)
!12894 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !12292, file: !12292, line: 2803, type: !12895, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12898)
!12895 = !DISubroutineType(types: !12896)
!12896 = !{!12295, !12897}
!12897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12303, size: 32)
!12898 = !{!12899, !12900}
!12899 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !12894, file: !12292, line: 2803, type: !12897)
!12900 = !DILocalVariable(name: "tickstart", scope: !12894, file: !12292, line: 2805, type: !108)
!12901 = !DILocation(line: 0, scope: !12894)
!12902 = !DILocation(line: 2821, column: 3, scope: !12894)
!12903 = !DILocation(line: 2824, column: 15, scope: !12894)
!12904 = !DILocation(line: 2825, column: 3, scope: !12894)
!12905 = !DILocation(line: 2825, column: 9, scope: !12894)
!12906 = !DILocation(line: 2827, column: 9, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12908, file: !12292, line: 2827, column: 8)
!12908 = distinct !DILexicalBlock(scope: !12894, file: !12292, line: 2826, column: 3)
!12909 = !DILocation(line: 2827, column: 23, scope: !12907)
!12910 = !DILocation(line: 2827, column: 37, scope: !12907)
!12911 = !DILocation(line: 2827, column: 8, scope: !12908)
!12912 = distinct !{!12912, !12904, !12913}
!12913 = !DILocation(line: 2832, column: 3, scope: !12894)
!12914 = !DILocation(line: 2840, column: 3, scope: !12894)
!12915 = !DILocation(line: 2866, column: 3, scope: !12894)
!12916 = !DILocation(line: 2869, column: 15, scope: !12894)
!12917 = !DILocation(line: 2870, column: 3, scope: !12894)
!12918 = !DILocation(line: 2870, column: 9, scope: !12894)
!12919 = !DILocation(line: 2870, column: 48, scope: !12894)
!12920 = !DILocation(line: 2872, column: 9, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !12292, line: 2872, column: 8)
!12922 = distinct !DILexicalBlock(scope: !12894, file: !12292, line: 2871, column: 3)
!12923 = !DILocation(line: 2872, column: 23, scope: !12921)
!12924 = !DILocation(line: 2872, column: 37, scope: !12921)
!12925 = !DILocation(line: 2872, column: 8, scope: !12922)
!12926 = distinct !{!12926, !12917, !12927}
!12927 = !DILocation(line: 2877, column: 3, scope: !12894)
!12928 = !DILocation(line: 2880, column: 1, scope: !12894)
!12929 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !12292, file: !12292, line: 2886, type: !12930, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12932)
!12930 = !DISubroutineType(types: !12931)
!12931 = !{!12295}
!12932 = !{!12933}
!12933 = !DILocalVariable(name: "tickstart", scope: !12929, file: !12292, line: 2888, type: !108)
!12934 = !DILocation(line: 2891, column: 3, scope: !12929)
!12935 = !DILocation(line: 2894, column: 15, scope: !12929)
!12936 = !DILocation(line: 0, scope: !12929)
!12937 = !DILocation(line: 2895, column: 3, scope: !12929)
!12938 = !DILocation(line: 2895, column: 9, scope: !12929)
!12939 = !DILocation(line: 2895, column: 45, scope: !12929)
!12940 = !DILocation(line: 2897, column: 9, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12942, file: !12292, line: 2897, column: 8)
!12942 = distinct !DILexicalBlock(scope: !12929, file: !12292, line: 2896, column: 3)
!12943 = !DILocation(line: 2897, column: 23, scope: !12941)
!12944 = !DILocation(line: 2897, column: 36, scope: !12941)
!12945 = !DILocation(line: 2897, column: 8, scope: !12942)
!12946 = distinct !{!12946, !12937, !12947}
!12947 = !DILocation(line: 2902, column: 3, scope: !12929)
!12948 = !DILocation(line: 2905, column: 1, scope: !12929)
!12949 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !12292, file: !12292, line: 2916, type: !12950, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12953)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!12295, !12952}
!12952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12312, size: 32)
!12953 = !{!12954, !12955}
!12954 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !12949, file: !12292, line: 2916, type: !12952)
!12955 = !DILocalVariable(name: "tickstart", scope: !12949, file: !12292, line: 2918, type: !108)
!12956 = !DILocation(line: 0, scope: !12949)
!12957 = !DILocation(line: 2934, column: 3, scope: !12949)
!12958 = !DILocation(line: 2937, column: 15, scope: !12949)
!12959 = !DILocation(line: 2938, column: 3, scope: !12949)
!12960 = !DILocation(line: 2938, column: 9, scope: !12949)
!12961 = !DILocation(line: 2940, column: 9, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !12292, line: 2940, column: 8)
!12963 = distinct !DILexicalBlock(scope: !12949, file: !12292, line: 2939, column: 3)
!12964 = !DILocation(line: 2940, column: 23, scope: !12962)
!12965 = !DILocation(line: 2940, column: 37, scope: !12962)
!12966 = !DILocation(line: 2940, column: 8, scope: !12963)
!12967 = distinct !{!12967, !12959, !12968}
!12968 = !DILocation(line: 2945, column: 3, scope: !12949)
!12969 = !DILocation(line: 2953, column: 3, scope: !12949)
!12970 = !DILocation(line: 2970, column: 3, scope: !12949)
!12971 = !DILocation(line: 2973, column: 15, scope: !12949)
!12972 = !DILocation(line: 2974, column: 3, scope: !12949)
!12973 = !DILocation(line: 2974, column: 9, scope: !12949)
!12974 = !DILocation(line: 2974, column: 37, scope: !12949)
!12975 = !DILocation(line: 2976, column: 9, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12977, file: !12292, line: 2976, column: 8)
!12977 = distinct !DILexicalBlock(scope: !12949, file: !12292, line: 2975, column: 3)
!12978 = !DILocation(line: 2976, column: 23, scope: !12976)
!12979 = !DILocation(line: 2976, column: 37, scope: !12976)
!12980 = !DILocation(line: 2976, column: 8, scope: !12977)
!12981 = distinct !{!12981, !12972, !12982}
!12982 = !DILocation(line: 2981, column: 3, scope: !12949)
!12983 = !DILocation(line: 2984, column: 1, scope: !12949)
!12984 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !12292, file: !12292, line: 2990, type: !12930, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !12985)
!12985 = !{!12986}
!12986 = !DILocalVariable(name: "tickstart", scope: !12984, file: !12292, line: 2992, type: !108)
!12987 = !DILocation(line: 2995, column: 3, scope: !12984)
!12988 = !DILocation(line: 2998, column: 15, scope: !12984)
!12989 = !DILocation(line: 0, scope: !12984)
!12990 = !DILocation(line: 2999, column: 3, scope: !12984)
!12991 = !DILocation(line: 2999, column: 9, scope: !12984)
!12992 = !DILocation(line: 3001, column: 9, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12994, file: !12292, line: 3001, column: 8)
!12994 = distinct !DILexicalBlock(scope: !12984, file: !12292, line: 3000, column: 3)
!12995 = !DILocation(line: 3001, column: 23, scope: !12993)
!12996 = !DILocation(line: 3001, column: 36, scope: !12993)
!12997 = !DILocation(line: 3001, column: 8, scope: !12994)
!12998 = distinct !{!12998, !12990, !12999}
!12999 = !DILocation(line: 3006, column: 3, scope: !12984)
!13000 = !DILocation(line: 3009, column: 1, scope: !12984)
!13001 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12292, file: !12292, line: 3051, type: !3655, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !13002)
!13002 = !{!13003, !13004, !13005, !13006, !13007}
!13003 = !DILocalVariable(name: "pllm", scope: !13001, file: !12292, line: 3053, type: !108)
!13004 = !DILocalVariable(name: "pllvco", scope: !13001, file: !12292, line: 3054, type: !108)
!13005 = !DILocalVariable(name: "pllp", scope: !13001, file: !12292, line: 3055, type: !108)
!13006 = !DILocalVariable(name: "pllr", scope: !13001, file: !12292, line: 3056, type: !108)
!13007 = !DILocalVariable(name: "sysclockfreq", scope: !13001, file: !12292, line: 3057, type: !108)
!13008 = !DILocation(line: 0, scope: !13001)
!13009 = !DILocation(line: 3060, column: 16, scope: !13001)
!13010 = !DILocation(line: 3060, column: 3, scope: !13001)
!13011 = !DILocation(line: 3076, column: 19, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !12292, line: 3073, column: 5)
!13013 = distinct !DILexicalBlock(scope: !13001, file: !12292, line: 3061, column: 3)
!13014 = !DILocation(line: 3076, column: 27, scope: !13012)
!13015 = !DILocation(line: 3077, column: 10, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13012, file: !12292, line: 3077, column: 10)
!13017 = !DILocation(line: 0, scope: !13016)
!13018 = !DILocation(line: 3087, column: 23, scope: !13012)
!13019 = !DILocation(line: 3087, column: 82, scope: !13012)
!13020 = !DILocation(line: 3089, column: 28, scope: !13012)
!13021 = !DILocation(line: 3090, column: 7, scope: !13012)
!13022 = !DILocation(line: 3096, column: 19, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13013, file: !12292, line: 3093, column: 5)
!13024 = !DILocation(line: 3096, column: 27, scope: !13023)
!13025 = !DILocation(line: 3097, column: 10, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13023, file: !12292, line: 3097, column: 10)
!13027 = !DILocation(line: 0, scope: !13026)
!13028 = !DILocation(line: 3107, column: 21, scope: !13023)
!13029 = !DILocation(line: 3107, column: 49, scope: !13023)
!13030 = !DILocation(line: 3109, column: 28, scope: !13023)
!13031 = !DILocation(line: 3110, column: 7, scope: !13023)
!13032 = !DILocation(line: 0, scope: !13013)
!13033 = !DILocation(line: 3118, column: 3, scope: !13001)
!13034 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12292, file: !12292, line: 3143, type: !12930, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !13035)
!13035 = !{!13036}
!13036 = !DILocalVariable(name: "tickstart", scope: !13034, file: !12292, line: 3145, type: !108)
!13037 = !DILocation(line: 3148, column: 15, scope: !13034)
!13038 = !DILocation(line: 0, scope: !13034)
!13039 = !DILocation(line: 3151, column: 3, scope: !13034)
!13040 = !DILocation(line: 3154, column: 3, scope: !13034)
!13041 = !DILocation(line: 3154, column: 10, scope: !13034)
!13042 = !DILocation(line: 3154, column: 43, scope: !13034)
!13043 = !DILocation(line: 3156, column: 10, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13045, file: !12292, line: 3156, column: 9)
!13045 = distinct !DILexicalBlock(scope: !13034, file: !12292, line: 3155, column: 3)
!13046 = !DILocation(line: 3156, column: 24, scope: !13044)
!13047 = !DILocation(line: 3156, column: 37, scope: !13044)
!13048 = !DILocation(line: 3156, column: 9, scope: !13045)
!13049 = distinct !{!13049, !13040, !13050}
!13050 = !DILocation(line: 3160, column: 3, scope: !13034)
!13051 = !DILocation(line: 3163, column: 3, scope: !13034)
!13052 = !DILocation(line: 3166, column: 15, scope: !13034)
!13053 = !DILocation(line: 3169, column: 3, scope: !13034)
!13054 = !DILocation(line: 3172, column: 3, scope: !13034)
!13055 = !DILocation(line: 3172, column: 10, scope: !13034)
!13056 = !DILocation(line: 3172, column: 44, scope: !13034)
!13057 = !DILocation(line: 3174, column: 24, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13059, file: !12292, line: 3174, column: 9)
!13059 = distinct !DILexicalBlock(scope: !13034, file: !12292, line: 3173, column: 3)
!13060 = !DILocation(line: 3174, column: 37, scope: !13058)
!13061 = !DILocation(line: 3174, column: 9, scope: !13059)
!13062 = distinct !{!13062, !13054, !13063}
!13063 = !DILocation(line: 3178, column: 3, scope: !13034)
!13064 = !DILocation(line: 3184, column: 3, scope: !13034)
!13065 = !DILocation(line: 3187, column: 3, scope: !13034)
!13066 = !DILocation(line: 3187, column: 10, scope: !13034)
!13067 = !DILocation(line: 3187, column: 43, scope: !13034)
!13068 = !DILocation(line: 3189, column: 24, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13070, file: !12292, line: 3189, column: 9)
!13070 = distinct !DILexicalBlock(scope: !13034, file: !12292, line: 3188, column: 3)
!13071 = !DILocation(line: 3189, column: 37, scope: !13069)
!13072 = !DILocation(line: 3189, column: 9, scope: !13070)
!13073 = distinct !{!13073, !13065, !13074}
!13074 = !DILocation(line: 3193, column: 3, scope: !13034)
!13075 = !DILocation(line: 3199, column: 3, scope: !13034)
!13076 = !DILocation(line: 3202, column: 3, scope: !13034)
!13077 = !DILocation(line: 3202, column: 10, scope: !13034)
!13078 = !DILocation(line: 3202, column: 43, scope: !13034)
!13079 = !DILocation(line: 3204, column: 24, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13081, file: !12292, line: 3204, column: 9)
!13081 = distinct !DILexicalBlock(scope: !13034, file: !12292, line: 3203, column: 3)
!13082 = !DILocation(line: 3204, column: 37, scope: !13080)
!13083 = !DILocation(line: 3204, column: 9, scope: !13081)
!13084 = distinct !{!13084, !13076, !13085}
!13085 = !DILocation(line: 3208, column: 3, scope: !13034)
!13086 = !DILocation(line: 3215, column: 3, scope: !13034)
!13087 = !DILocation(line: 3218, column: 3, scope: !13034)
!13088 = !DILocation(line: 3218, column: 10, scope: !13034)
!13089 = !DILocation(line: 3218, column: 46, scope: !13034)
!13090 = !DILocation(line: 3220, column: 24, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13092, file: !12292, line: 3220, column: 9)
!13092 = distinct !DILexicalBlock(scope: !13034, file: !12292, line: 3219, column: 3)
!13093 = !DILocation(line: 3220, column: 37, scope: !13091)
!13094 = !DILocation(line: 3220, column: 9, scope: !13092)
!13095 = distinct !{!13095, !13087, !13096}
!13096 = !DILocation(line: 3224, column: 3, scope: !13034)
!13097 = !DILocation(line: 3232, column: 3, scope: !13034)
!13098 = !DILocation(line: 3235, column: 3, scope: !13034)
!13099 = !DILocation(line: 3235, column: 10, scope: !13034)
!13100 = !DILocation(line: 3235, column: 46, scope: !13034)
!13101 = !DILocation(line: 3237, column: 10, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !12292, line: 3237, column: 9)
!13103 = distinct !DILexicalBlock(scope: !13034, file: !12292, line: 3236, column: 3)
!13104 = !DILocation(line: 3237, column: 24, scope: !13102)
!13105 = !DILocation(line: 3237, column: 37, scope: !13102)
!13106 = !DILocation(line: 3237, column: 9, scope: !13103)
!13107 = distinct !{!13107, !13098, !13108}
!13108 = !DILocation(line: 3241, column: 3, scope: !13034)
!13109 = !DILocation(line: 3247, column: 16, scope: !13034)
!13110 = !DILocation(line: 3257, column: 19, scope: !13034)
!13111 = !DILocation(line: 3270, column: 19, scope: !13034)
!13112 = !DILocation(line: 3274, column: 3, scope: !13034)
!13113 = !DILocation(line: 3277, column: 3, scope: !13034)
!13114 = !DILocation(line: 3281, column: 3, scope: !13034)
!13115 = !DILocation(line: 3285, column: 3, scope: !13034)
!13116 = !DILocation(line: 3288, column: 3, scope: !13034)
!13117 = !DILocation(line: 3292, column: 3, scope: !13034)
!13118 = !DILocation(line: 3296, column: 3, scope: !13034)
!13119 = !DILocation(line: 3299, column: 3, scope: !13034)
!13120 = !DILocation(line: 3302, column: 19, scope: !13034)
!13121 = !DILocation(line: 3305, column: 19, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13034, file: !12292, line: 3305, column: 6)
!13123 = !DILocation(line: 3305, column: 6, scope: !13122)
!13124 = !DILocation(line: 3305, column: 31, scope: !13122)
!13125 = !DILocation(line: 0, scope: !13122)
!13126 = !DILocation(line: 3313, column: 1, scope: !13034)
!13127 = !DISubprogram(name: "HAL_InitTick", scope: !12667, file: !12667, line: 223, type: !13128, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!13128 = !DISubroutineType(types: !13129)
!13129 = !{!12295, !108}
!13130 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12292, file: !12292, line: 3333, type: !13131, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !13155)
!13131 = !DISubroutineType(types: !13132)
!13132 = !{!12295, !13133}
!13133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13134, size: 32)
!13134 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13135, line: 70, baseType: !13136)
!13135 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13135, line: 49, size: 416, elements: !13137)
!13137 = !{!13138, !13139, !13140, !13141, !13142, !13143, !13144}
!13138 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13136, file: !13135, line: 51, baseType: !108, size: 32)
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13136, file: !13135, line: 54, baseType: !108, size: 32, offset: 32)
!13140 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13136, file: !13135, line: 57, baseType: !108, size: 32, offset: 64)
!13141 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13136, file: !13135, line: 60, baseType: !108, size: 32, offset: 96)
!13142 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13136, file: !13135, line: 63, baseType: !108, size: 32, offset: 128)
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13136, file: !13135, line: 66, baseType: !108, size: 32, offset: 160)
!13144 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13136, file: !13135, line: 69, baseType: !13145, size: 224, offset: 192)
!13145 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12298, line: 73, baseType: !13146)
!13146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12298, line: 45, size: 224, elements: !13147)
!13147 = !{!13148, !13149, !13150, !13151, !13152, !13153, !13154}
!13148 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13146, file: !12298, line: 47, baseType: !108, size: 32)
!13149 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13146, file: !12298, line: 50, baseType: !108, size: 32, offset: 32)
!13150 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13146, file: !12298, line: 53, baseType: !108, size: 32, offset: 64)
!13151 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13146, file: !12298, line: 56, baseType: !108, size: 32, offset: 96)
!13152 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13146, file: !12298, line: 60, baseType: !108, size: 32, offset: 128)
!13153 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13146, file: !12298, line: 63, baseType: !108, size: 32, offset: 160)
!13154 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13146, file: !12298, line: 68, baseType: !108, size: 32, offset: 192)
!13155 = !{!13156, !13157, !13158, !13159, !13163}
!13156 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13130, file: !12292, line: 3333, type: !13133)
!13157 = !DILocalVariable(name: "tickstart", scope: !13130, file: !12292, line: 3335, type: !108)
!13158 = !DILocalVariable(name: "pll_config", scope: !13130, file: !12292, line: 3335, type: !108)
!13159 = !DILocalVariable(name: "pwrclkchanged", scope: !13160, file: !12292, line: 3517, type: !13162)
!13160 = distinct !DILexicalBlock(scope: !13161, file: !12292, line: 3516, column: 3)
!13161 = distinct !DILexicalBlock(scope: !13130, file: !12292, line: 3515, column: 6)
!13162 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !945, line: 188, baseType: !3153)
!13163 = !DILocalVariable(name: "tmpreg", scope: !13164, file: !12292, line: 3526, type: !409)
!13164 = distinct !DILexicalBlock(scope: !13165, file: !12292, line: 3526, column: 7)
!13165 = distinct !DILexicalBlock(scope: !13166, file: !12292, line: 3525, column: 5)
!13166 = distinct !DILexicalBlock(scope: !13160, file: !12292, line: 3524, column: 8)
!13167 = !DILocation(line: 0, scope: !13130)
!13168 = !DILocation(line: 3338, column: 24, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13130, file: !12292, line: 3338, column: 6)
!13170 = !DILocation(line: 3338, column: 6, scope: !13130)
!13171 = !DILocation(line: 3346, column: 27, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13130, file: !12292, line: 3346, column: 6)
!13173 = !DILocation(line: 3346, column: 43, scope: !13172)
!13174 = !DILocation(line: 3346, column: 69, scope: !13172)
!13175 = !DILocation(line: 3346, column: 6, scope: !13130)
!13176 = !DILocation(line: 3352, column: 9, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !12292, line: 3352, column: 8)
!13178 = distinct !DILexicalBlock(scope: !13172, file: !12292, line: 3347, column: 3)
!13179 = !DILocation(line: 3352, column: 39, scope: !13177)
!13180 = !DILocation(line: 3352, column: 128, scope: !13177)
!13181 = !DILocation(line: 3353, column: 9, scope: !13177)
!13182 = !DILocation(line: 3353, column: 39, scope: !13177)
!13183 = !DILocation(line: 3353, column: 60, scope: !13177)
!13184 = !DILocation(line: 3353, column: 70, scope: !13177)
!13185 = !DILocation(line: 3353, column: 78, scope: !13177)
!13186 = !DILocation(line: 3353, column: 100, scope: !13177)
!13187 = !DILocation(line: 3353, column: 128, scope: !13177)
!13188 = !DILocation(line: 3354, column: 9, scope: !13177)
!13189 = !DILocation(line: 3354, column: 39, scope: !13177)
!13190 = !DILocation(line: 3354, column: 61, scope: !13177)
!13191 = !DILocation(line: 3354, column: 71, scope: !13177)
!13192 = !DILocation(line: 3354, column: 79, scope: !13177)
!13193 = !DILocation(line: 3354, column: 101, scope: !13177)
!13194 = !DILocation(line: 3352, column: 8, scope: !13178)
!13195 = !DILocation(line: 3360, column: 11, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13197, file: !12292, line: 3360, column: 10)
!13197 = distinct !DILexicalBlock(scope: !13177, file: !12292, line: 3359, column: 5)
!13198 = !DILocation(line: 3360, column: 57, scope: !13196)
!13199 = !DILocation(line: 3360, column: 80, scope: !13196)
!13200 = !DILocation(line: 3360, column: 89, scope: !13196)
!13201 = !DILocation(line: 3360, column: 10, scope: !13197)
!13202 = !DILocation(line: 3368, column: 7, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13204, file: !12292, line: 3368, column: 7)
!13204 = distinct !DILexicalBlock(scope: !13205, file: !12292, line: 3368, column: 7)
!13205 = distinct !DILexicalBlock(scope: !13177, file: !12292, line: 3366, column: 5)
!13206 = !DILocation(line: 3368, column: 7, scope: !13204)
!13207 = !DILocation(line: 3368, column: 7, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13203, file: !12292, line: 3368, column: 7)
!13209 = !DILocation(line: 3368, column: 7, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !12292, line: 3368, column: 7)
!13211 = distinct !DILexicalBlock(scope: !13203, file: !12292, line: 3368, column: 7)
!13212 = !DILocation(line: 3368, column: 7, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13211, file: !12292, line: 3368, column: 7)
!13214 = !DILocation(line: 0, scope: !13203)
!13215 = !DILocation(line: 3371, column: 30, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13205, file: !12292, line: 3371, column: 10)
!13217 = !DILocation(line: 3371, column: 40, scope: !13216)
!13218 = !DILocation(line: 0, scope: !13216)
!13219 = !DILocation(line: 3371, column: 10, scope: !13205)
!13220 = !DILocation(line: 3377, column: 15, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13216, file: !12292, line: 3372, column: 7)
!13222 = !DILocation(line: 3377, column: 51, scope: !13221)
!13223 = !DILocation(line: 3377, column: 9, scope: !13221)
!13224 = !DILocation(line: 3379, column: 15, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13226, file: !12292, line: 3379, column: 14)
!13226 = distinct !DILexicalBlock(scope: !13221, file: !12292, line: 3378, column: 9)
!13227 = !DILocation(line: 3379, column: 29, scope: !13225)
!13228 = !DILocation(line: 3379, column: 43, scope: !13225)
!13229 = !DILocation(line: 3379, column: 14, scope: !13226)
!13230 = distinct !{!13230, !13223, !13231}
!13231 = !DILocation(line: 3383, column: 9, scope: !13221)
!13232 = !DILocation(line: 3391, column: 15, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13216, file: !12292, line: 3386, column: 7)
!13234 = !DILocation(line: 3391, column: 9, scope: !13233)
!13235 = !DILocation(line: 3393, column: 15, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !12292, line: 3393, column: 14)
!13237 = distinct !DILexicalBlock(scope: !13233, file: !12292, line: 3392, column: 9)
!13238 = !DILocation(line: 3393, column: 29, scope: !13236)
!13239 = !DILocation(line: 3393, column: 43, scope: !13236)
!13240 = !DILocation(line: 3393, column: 14, scope: !13237)
!13241 = distinct !{!13241, !13234, !13242}
!13242 = !DILocation(line: 3397, column: 9, scope: !13233)
!13243 = !DILocation(line: 3402, column: 27, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13130, file: !12292, line: 3402, column: 6)
!13245 = !DILocation(line: 3402, column: 43, scope: !13244)
!13246 = !DILocation(line: 3402, column: 69, scope: !13244)
!13247 = !DILocation(line: 3402, column: 6, scope: !13130)
!13248 = !DILocation(line: 3410, column: 9, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13250, file: !12292, line: 3410, column: 8)
!13250 = distinct !DILexicalBlock(scope: !13244, file: !12292, line: 3403, column: 3)
!13251 = !DILocation(line: 3410, column: 39, scope: !13249)
!13252 = !DILocation(line: 3410, column: 128, scope: !13249)
!13253 = !DILocation(line: 3411, column: 9, scope: !13249)
!13254 = !DILocation(line: 3411, column: 39, scope: !13249)
!13255 = !DILocation(line: 3411, column: 60, scope: !13249)
!13256 = !DILocation(line: 3411, column: 70, scope: !13249)
!13257 = !DILocation(line: 3411, column: 78, scope: !13249)
!13258 = !DILocation(line: 3411, column: 100, scope: !13249)
!13259 = !DILocation(line: 3411, column: 128, scope: !13249)
!13260 = !DILocation(line: 3412, column: 9, scope: !13249)
!13261 = !DILocation(line: 3412, column: 39, scope: !13249)
!13262 = !DILocation(line: 3412, column: 61, scope: !13249)
!13263 = !DILocation(line: 3412, column: 71, scope: !13249)
!13264 = !DILocation(line: 3412, column: 79, scope: !13249)
!13265 = !DILocation(line: 3412, column: 101, scope: !13249)
!13266 = !DILocation(line: 3410, column: 8, scope: !13250)
!13267 = !DILocation(line: 3419, column: 11, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13269, file: !12292, line: 3419, column: 10)
!13269 = distinct !DILexicalBlock(scope: !13249, file: !12292, line: 3417, column: 5)
!13270 = !DILocation(line: 3419, column: 57, scope: !13268)
!13271 = !DILocation(line: 3419, column: 80, scope: !13268)
!13272 = !DILocation(line: 3419, column: 89, scope: !13268)
!13273 = !DILocation(line: 3419, column: 10, scope: !13269)
!13274 = !DILocation(line: 3433, column: 30, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13276, file: !12292, line: 3433, column: 10)
!13276 = distinct !DILexicalBlock(scope: !13249, file: !12292, line: 3431, column: 5)
!13277 = !DILocation(line: 3433, column: 39, scope: !13275)
!13278 = !DILocation(line: 3433, column: 10, scope: !13276)
!13279 = !DILocation(line: 3436, column: 9, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13275, file: !12292, line: 3434, column: 7)
!13281 = !DILocation(line: 3439, column: 21, scope: !13280)
!13282 = !DILocation(line: 3442, column: 9, scope: !13280)
!13283 = !DILocation(line: 3442, column: 15, scope: !13280)
!13284 = !DILocation(line: 3442, column: 51, scope: !13280)
!13285 = !DILocation(line: 3444, column: 15, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13287, file: !12292, line: 3444, column: 14)
!13287 = distinct !DILexicalBlock(scope: !13280, file: !12292, line: 3443, column: 9)
!13288 = !DILocation(line: 3444, column: 29, scope: !13286)
!13289 = !DILocation(line: 3444, column: 43, scope: !13286)
!13290 = !DILocation(line: 3444, column: 14, scope: !13287)
!13291 = distinct !{!13291, !13282, !13292}
!13292 = !DILocation(line: 3448, column: 9, scope: !13280)
!13293 = !DILocation(line: 3456, column: 9, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13275, file: !12292, line: 3454, column: 7)
!13295 = !DILocation(line: 3459, column: 21, scope: !13294)
!13296 = !DILocation(line: 3462, column: 9, scope: !13294)
!13297 = !DILocation(line: 3462, column: 15, scope: !13294)
!13298 = !DILocation(line: 3464, column: 15, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13300, file: !12292, line: 3464, column: 14)
!13300 = distinct !DILexicalBlock(scope: !13294, file: !12292, line: 3463, column: 9)
!13301 = !DILocation(line: 3464, column: 29, scope: !13299)
!13302 = !DILocation(line: 3464, column: 43, scope: !13299)
!13303 = !DILocation(line: 3464, column: 14, scope: !13300)
!13304 = distinct !{!13304, !13296, !13305}
!13305 = !DILocation(line: 3468, column: 9, scope: !13294)
!13306 = !DILocation(line: 0, scope: !13249)
!13307 = !DILocation(line: 3473, column: 27, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13130, file: !12292, line: 3473, column: 6)
!13309 = !DILocation(line: 3473, column: 43, scope: !13308)
!13310 = !DILocation(line: 3473, column: 69, scope: !13308)
!13311 = !DILocation(line: 3473, column: 6, scope: !13130)
!13312 = !DILocation(line: 3479, column: 28, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13314, file: !12292, line: 3479, column: 8)
!13314 = distinct !DILexicalBlock(scope: !13308, file: !12292, line: 3474, column: 3)
!13315 = !DILocation(line: 3479, column: 37, scope: !13313)
!13316 = !DILocation(line: 3479, column: 8, scope: !13314)
!13317 = !DILocation(line: 3482, column: 7, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13313, file: !12292, line: 3480, column: 5)
!13319 = !DILocation(line: 3485, column: 19, scope: !13318)
!13320 = !DILocation(line: 3488, column: 7, scope: !13318)
!13321 = !DILocation(line: 3488, column: 13, scope: !13318)
!13322 = !DILocation(line: 3488, column: 49, scope: !13318)
!13323 = !DILocation(line: 3490, column: 13, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13325, file: !12292, line: 3490, column: 12)
!13325 = distinct !DILexicalBlock(scope: !13318, file: !12292, line: 3489, column: 7)
!13326 = !DILocation(line: 3490, column: 27, scope: !13324)
!13327 = !DILocation(line: 3490, column: 41, scope: !13324)
!13328 = !DILocation(line: 3490, column: 12, scope: !13325)
!13329 = distinct !{!13329, !13320, !13330}
!13330 = !DILocation(line: 3494, column: 7, scope: !13318)
!13331 = !DILocation(line: 3499, column: 7, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13313, file: !12292, line: 3497, column: 5)
!13333 = !DILocation(line: 3502, column: 19, scope: !13332)
!13334 = !DILocation(line: 3505, column: 7, scope: !13332)
!13335 = !DILocation(line: 3505, column: 13, scope: !13332)
!13336 = !DILocation(line: 3507, column: 13, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !12292, line: 3507, column: 12)
!13338 = distinct !DILexicalBlock(scope: !13332, file: !12292, line: 3506, column: 7)
!13339 = !DILocation(line: 3507, column: 27, scope: !13337)
!13340 = !DILocation(line: 3507, column: 41, scope: !13337)
!13341 = !DILocation(line: 3507, column: 12, scope: !13338)
!13342 = distinct !{!13342, !13334, !13343}
!13343 = !DILocation(line: 3511, column: 7, scope: !13332)
!13344 = !DILocation(line: 3515, column: 27, scope: !13161)
!13345 = !DILocation(line: 3515, column: 43, scope: !13161)
!13346 = !DILocation(line: 3515, column: 69, scope: !13161)
!13347 = !DILocation(line: 3515, column: 6, scope: !13130)
!13348 = !DILocation(line: 0, scope: !13160)
!13349 = !DILocation(line: 3524, column: 8, scope: !13166)
!13350 = !DILocation(line: 3524, column: 8, scope: !13160)
!13351 = !DILocation(line: 3526, column: 7, scope: !13164)
!13352 = !DILocation(line: 3526, column: 7, scope: !13165)
!13353 = !DILocation(line: 3528, column: 5, scope: !13165)
!13354 = !DILocation(line: 3530, column: 8, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13160, file: !12292, line: 3530, column: 8)
!13356 = !DILocation(line: 3530, column: 8, scope: !13160)
!13357 = !DILocation(line: 3533, column: 7, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13355, file: !12292, line: 3531, column: 5)
!13359 = !DILocation(line: 3536, column: 19, scope: !13358)
!13360 = !DILocation(line: 3538, column: 7, scope: !13358)
!13361 = !DILocation(line: 3538, column: 13, scope: !13358)
!13362 = !DILocation(line: 3540, column: 13, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !12292, line: 3540, column: 12)
!13364 = distinct !DILexicalBlock(scope: !13358, file: !12292, line: 3539, column: 7)
!13365 = !DILocation(line: 3540, column: 27, scope: !13363)
!13366 = !DILocation(line: 3540, column: 40, scope: !13363)
!13367 = !DILocation(line: 3540, column: 12, scope: !13364)
!13368 = distinct !{!13368, !13360, !13369}
!13369 = !DILocation(line: 3544, column: 7, scope: !13358)
!13370 = !DILocation(line: 3548, column: 5, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !12292, line: 3548, column: 5)
!13372 = distinct !DILexicalBlock(scope: !13160, file: !12292, line: 3548, column: 5)
!13373 = !DILocation(line: 3548, column: 5, scope: !13372)
!13374 = !DILocation(line: 3548, column: 5, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13371, file: !12292, line: 3548, column: 5)
!13376 = !DILocation(line: 3548, column: 5, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13378, file: !12292, line: 3548, column: 5)
!13378 = distinct !DILexicalBlock(scope: !13371, file: !12292, line: 3548, column: 5)
!13379 = !DILocation(line: 3548, column: 5, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13378, file: !12292, line: 3548, column: 5)
!13381 = !DILocation(line: 0, scope: !13371)
!13382 = !DILocation(line: 3550, column: 28, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13160, file: !12292, line: 3550, column: 8)
!13384 = !DILocation(line: 3550, column: 38, scope: !13383)
!13385 = !DILocation(line: 0, scope: !13383)
!13386 = !DILocation(line: 3550, column: 8, scope: !13160)
!13387 = !DILocation(line: 3556, column: 13, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13383, file: !12292, line: 3551, column: 5)
!13389 = !DILocation(line: 3556, column: 49, scope: !13388)
!13390 = !DILocation(line: 3556, column: 7, scope: !13388)
!13391 = !DILocation(line: 3558, column: 13, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13393, file: !12292, line: 3558, column: 12)
!13393 = distinct !DILexicalBlock(scope: !13388, file: !12292, line: 3557, column: 7)
!13394 = !DILocation(line: 3558, column: 27, scope: !13392)
!13395 = !DILocation(line: 3558, column: 41, scope: !13392)
!13396 = !DILocation(line: 3558, column: 12, scope: !13393)
!13397 = distinct !{!13397, !13390, !13398}
!13398 = !DILocation(line: 3562, column: 7, scope: !13388)
!13399 = !DILocation(line: 3570, column: 13, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13383, file: !12292, line: 3565, column: 5)
!13401 = !DILocation(line: 3570, column: 7, scope: !13400)
!13402 = !DILocation(line: 3572, column: 13, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13404, file: !12292, line: 3572, column: 12)
!13404 = distinct !DILexicalBlock(scope: !13400, file: !12292, line: 3571, column: 7)
!13405 = !DILocation(line: 3572, column: 27, scope: !13403)
!13406 = !DILocation(line: 3572, column: 41, scope: !13403)
!13407 = !DILocation(line: 3572, column: 12, scope: !13404)
!13408 = distinct !{!13408, !13401, !13409}
!13409 = !DILocation(line: 3576, column: 7, scope: !13400)
!13410 = !DILocation(line: 3580, column: 8, scope: !13160)
!13411 = !DILocation(line: 3582, column: 7, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !12292, line: 3581, column: 5)
!13413 = distinct !DILexicalBlock(scope: !13160, file: !12292, line: 3580, column: 8)
!13414 = !DILocation(line: 3583, column: 5, scope: !13412)
!13415 = !DILocation(line: 3588, column: 31, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13130, file: !12292, line: 3588, column: 7)
!13417 = !DILocation(line: 3588, column: 41, scope: !13416)
!13418 = !DILocation(line: 3588, column: 7, scope: !13130)
!13419 = !DILocation(line: 3591, column: 8, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13421, file: !12292, line: 3591, column: 8)
!13421 = distinct !DILexicalBlock(scope: !13416, file: !12292, line: 3589, column: 3)
!13422 = !DILocation(line: 3591, column: 38, scope: !13420)
!13423 = !DILocation(line: 3591, column: 8, scope: !13421)
!13424 = !DILocation(line: 3593, column: 44, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13426, file: !12292, line: 3593, column: 10)
!13426 = distinct !DILexicalBlock(scope: !13420, file: !12292, line: 3592, column: 5)
!13427 = !DILocation(line: 0, scope: !13425)
!13428 = !DILocation(line: 3593, column: 10, scope: !13426)
!13429 = !DILocation(line: 3610, column: 15, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13425, file: !12292, line: 3594, column: 7)
!13431 = !DILocation(line: 3610, column: 9, scope: !13430)
!13432 = !DILocation(line: 3612, column: 15, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !12292, line: 3612, column: 14)
!13434 = distinct !DILexicalBlock(scope: !13430, file: !12292, line: 3611, column: 9)
!13435 = !DILocation(line: 3612, column: 29, scope: !13433)
!13436 = !DILocation(line: 3612, column: 43, scope: !13433)
!13437 = !DILocation(line: 3612, column: 14, scope: !13434)
!13438 = distinct !{!13438, !13431, !13439}
!13439 = !DILocation(line: 3616, column: 9, scope: !13430)
!13440 = !DILocation(line: 3619, column: 9, scope: !13430)
!13441 = !DILocation(line: 3626, column: 9, scope: !13430)
!13442 = !DILocation(line: 3629, column: 21, scope: !13430)
!13443 = !DILocation(line: 3632, column: 9, scope: !13430)
!13444 = !DILocation(line: 3632, column: 15, scope: !13430)
!13445 = !DILocation(line: 3632, column: 51, scope: !13430)
!13446 = !DILocation(line: 3634, column: 15, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13448, file: !12292, line: 3634, column: 14)
!13448 = distinct !DILexicalBlock(scope: !13430, file: !12292, line: 3633, column: 9)
!13449 = !DILocation(line: 3634, column: 29, scope: !13447)
!13450 = !DILocation(line: 3634, column: 43, scope: !13447)
!13451 = !DILocation(line: 3634, column: 14, scope: !13448)
!13452 = distinct !{!13452, !13443, !13453}
!13453 = !DILocation(line: 3638, column: 9, scope: !13430)
!13454 = !DILocation(line: 3649, column: 15, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13425, file: !12292, line: 3641, column: 7)
!13456 = !DILocation(line: 3649, column: 9, scope: !13455)
!13457 = !DILocation(line: 3651, column: 15, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !12292, line: 3651, column: 14)
!13459 = distinct !DILexicalBlock(scope: !13455, file: !12292, line: 3650, column: 9)
!13460 = !DILocation(line: 3651, column: 29, scope: !13458)
!13461 = !DILocation(line: 3651, column: 43, scope: !13458)
!13462 = !DILocation(line: 3651, column: 14, scope: !13459)
!13463 = distinct !{!13463, !13456, !13464}
!13464 = !DILocation(line: 3655, column: 9, scope: !13455)
!13465 = !DILocation(line: 3661, column: 44, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13467, file: !12292, line: 3661, column: 10)
!13467 = distinct !DILexicalBlock(scope: !13420, file: !12292, line: 3659, column: 5)
!13468 = !DILocation(line: 3661, column: 10, scope: !13467)
!13469 = !DILocation(line: 3668, column: 27, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13466, file: !12292, line: 3666, column: 7)
!13471 = !DILocation(line: 3671, column: 14, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13470, file: !12292, line: 3670, column: 13)
!13473 = !DILocation(line: 3671, column: 81, scope: !13472)
!13474 = !DILocation(line: 3671, column: 55, scope: !13472)
!13475 = !DILocation(line: 3671, column: 92, scope: !13472)
!13476 = !DILocation(line: 3672, column: 14, scope: !13472)
!13477 = !DILocation(line: 3672, column: 80, scope: !13472)
!13478 = !DILocation(line: 3672, column: 53, scope: !13472)
!13479 = !DILocation(line: 3672, column: 111, scope: !13472)
!13480 = !DILocation(line: 3673, column: 14, scope: !13472)
!13481 = !DILocation(line: 3673, column: 80, scope: !13472)
!13482 = !DILocation(line: 3673, column: 86, scope: !13472)
!13483 = !DILocation(line: 3673, column: 53, scope: !13472)
!13484 = !DILocation(line: 3673, column: 111, scope: !13472)
!13485 = !DILocation(line: 3674, column: 14, scope: !13472)
!13486 = !DILocation(line: 3674, column: 82, scope: !13472)
!13487 = !DILocation(line: 3674, column: 101, scope: !13472)
!13488 = !DILocation(line: 3674, column: 53, scope: !13472)
!13489 = !DILocation(line: 3674, column: 126, scope: !13472)
!13490 = !DILocation(line: 3675, column: 14, scope: !13472)
!13491 = !DILocation(line: 3675, column: 80, scope: !13472)
!13492 = !DILocation(line: 3675, column: 85, scope: !13472)
!13493 = !DILocation(line: 3675, column: 53, scope: !13472)
!13494 = !DILocation(line: 3675, column: 111, scope: !13472)
!13495 = !DILocation(line: 3676, column: 14, scope: !13472)
!13496 = !DILocation(line: 3676, column: 80, scope: !13472)
!13497 = !DILocation(line: 3676, column: 85, scope: !13472)
!13498 = !DILocation(line: 3676, column: 53, scope: !13472)
!13499 = !DILocation(line: 3670, column: 13, scope: !13470)
!13500 = !DILocation(line: 3691, column: 3, scope: !13130)
!13501 = !DILocation(line: 3692, column: 1, scope: !13130)
!13502 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12292, file: !12292, line: 3703, type: !13503, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !13505)
!13503 = !DISubroutineType(types: !13504)
!13504 = !{null, !13133}
!13505 = !{!13506}
!13506 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13502, file: !12292, line: 3703, type: !13133)
!13507 = !DILocation(line: 0, scope: !13502)
!13508 = !DILocation(line: 3706, column: 22, scope: !13502)
!13509 = !DILocation(line: 3706, column: 37, scope: !13502)
!13510 = !DILocation(line: 3709, column: 12, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13502, file: !12292, line: 3709, column: 6)
!13512 = !DILocation(line: 3709, column: 15, scope: !13511)
!13513 = !DILocation(line: 3709, column: 31, scope: !13511)
!13514 = !DILocation(line: 3709, column: 6, scope: !13502)
!13515 = !DILocation(line: 3711, column: 24, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13511, file: !12292, line: 3710, column: 3)
!13517 = !DILocation(line: 3711, column: 33, scope: !13516)
!13518 = !DILocation(line: 3712, column: 3, scope: !13516)
!13519 = !DILocation(line: 3713, column: 17, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13511, file: !12292, line: 3713, column: 11)
!13521 = !DILocation(line: 3713, column: 20, scope: !13520)
!13522 = !DILocation(line: 3713, column: 35, scope: !13520)
!13523 = !DILocation(line: 0, scope: !13520)
!13524 = !DILocation(line: 3713, column: 11, scope: !13511)
!13525 = !DILocation(line: 3715, column: 33, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13520, file: !12292, line: 3714, column: 3)
!13527 = !DILocation(line: 3716, column: 3, scope: !13526)
!13528 = !DILocation(line: 3719, column: 33, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13520, file: !12292, line: 3718, column: 3)
!13530 = !DILocation(line: 3723, column: 12, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13502, file: !12292, line: 3723, column: 6)
!13532 = !DILocation(line: 3723, column: 15, scope: !13531)
!13533 = !DILocation(line: 3729, column: 24, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13531, file: !12292, line: 3728, column: 3)
!13535 = !DILocation(line: 3729, column: 33, scope: !13534)
!13536 = !DILocation(line: 3732, column: 61, scope: !13502)
!13537 = !DILocation(line: 3732, column: 81, scope: !13502)
!13538 = !DILocation(line: 3732, column: 22, scope: !13502)
!13539 = !DILocation(line: 3732, column: 42, scope: !13502)
!13540 = !DILocation(line: 3735, column: 12, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13502, file: !12292, line: 3735, column: 6)
!13542 = !DILocation(line: 3735, column: 17, scope: !13541)
!13543 = !DILocation(line: 3735, column: 35, scope: !13541)
!13544 = !DILocation(line: 3735, column: 6, scope: !13502)
!13545 = !DILocation(line: 3737, column: 24, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13541, file: !12292, line: 3736, column: 3)
!13547 = !DILocation(line: 3737, column: 33, scope: !13546)
!13548 = !DILocation(line: 3738, column: 3, scope: !13546)
!13549 = !DILocation(line: 3739, column: 17, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13541, file: !12292, line: 3739, column: 11)
!13551 = !DILocation(line: 3739, column: 22, scope: !13550)
!13552 = !DILocation(line: 3739, column: 39, scope: !13550)
!13553 = !DILocation(line: 0, scope: !13550)
!13554 = !DILocation(line: 3739, column: 11, scope: !13541)
!13555 = !DILocation(line: 3741, column: 33, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13550, file: !12292, line: 3740, column: 3)
!13557 = !DILocation(line: 3742, column: 3, scope: !13556)
!13558 = !DILocation(line: 3745, column: 33, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13550, file: !12292, line: 3744, column: 3)
!13560 = !DILocation(line: 3749, column: 12, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13502, file: !12292, line: 3749, column: 6)
!13562 = !DILocation(line: 3749, column: 16, scope: !13561)
!13563 = !DILocation(line: 3755, column: 24, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13561, file: !12292, line: 3754, column: 3)
!13565 = !DILocation(line: 3755, column: 33, scope: !13564)
!13566 = !DILocation(line: 3759, column: 12, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13502, file: !12292, line: 3759, column: 6)
!13568 = !DILocation(line: 3759, column: 15, scope: !13567)
!13569 = !DILocation(line: 3759, column: 30, scope: !13567)
!13570 = !DILocation(line: 3759, column: 6, scope: !13502)
!13571 = !DILocation(line: 3765, column: 28, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13567, file: !12292, line: 3764, column: 3)
!13573 = !DILocation(line: 3765, column: 37, scope: !13572)
!13574 = !DILocation(line: 3767, column: 54, scope: !13502)
!13575 = !DILocation(line: 3767, column: 62, scope: !13502)
!13576 = !DILocation(line: 3767, column: 26, scope: !13502)
!13577 = !DILocation(line: 3767, column: 36, scope: !13502)
!13578 = !DILocation(line: 3768, column: 49, scope: !13502)
!13579 = !DILocation(line: 3768, column: 57, scope: !13502)
!13580 = !DILocation(line: 3768, column: 26, scope: !13502)
!13581 = !DILocation(line: 3768, column: 31, scope: !13502)
!13582 = !DILocation(line: 3769, column: 50, scope: !13502)
!13583 = !DILocation(line: 3769, column: 78, scope: !13502)
!13584 = !DILocation(line: 3769, column: 26, scope: !13502)
!13585 = !DILocation(line: 3769, column: 31, scope: !13502)
!13586 = !DILocation(line: 3770, column: 52, scope: !13502)
!13587 = !DILocation(line: 3770, column: 102, scope: !13502)
!13588 = !DILocation(line: 3770, column: 109, scope: !13502)
!13589 = !DILocation(line: 3770, column: 26, scope: !13502)
!13590 = !DILocation(line: 3770, column: 31, scope: !13502)
!13591 = !DILocation(line: 3771, column: 50, scope: !13502)
!13592 = !DILocation(line: 3771, column: 78, scope: !13502)
!13593 = !DILocation(line: 3771, column: 26, scope: !13502)
!13594 = !DILocation(line: 3771, column: 31, scope: !13502)
!13595 = !DILocation(line: 3772, column: 50, scope: !13502)
!13596 = !DILocation(line: 3772, column: 78, scope: !13502)
!13597 = !DILocation(line: 3772, column: 26, scope: !13502)
!13598 = !DILocation(line: 3772, column: 31, scope: !13502)
!13599 = !DILocation(line: 3773, column: 1, scope: !13502)
!13600 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13601, file: !13601, line: 257, type: !7466, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13602)
!13601 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13602 = !{!13603}
!13603 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13600, file: !13601, line: 257, type: !108)
!13604 = !DILocation(line: 0, scope: !13600)
!13605 = !DILocation(line: 260, column: 3, scope: !13600)
!13606 = !DILocation(line: 261, column: 1, scope: !13600)
!13607 = distinct !DISubprogram(name: "LL_InitTick", scope: !13608, file: !13608, line: 260, type: !10689, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13609)
!13608 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13609 = !{!13610, !13611}
!13610 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13607, file: !13608, line: 260, type: !108)
!13611 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13607, file: !13608, line: 260, type: !108)
!13612 = !DILocation(line: 0, scope: !13607)
!13613 = !DILocation(line: 263, column: 46, scope: !13607)
!13614 = !DILocation(line: 263, column: 55, scope: !13607)
!13615 = !DILocation(line: 263, column: 18, scope: !13607)
!13616 = !DILocation(line: 264, column: 18, scope: !13607)
!13617 = !DILocation(line: 265, column: 18, scope: !13607)
!13618 = !DILocation(line: 267, column: 1, scope: !13607)
!13619 = distinct !DISubprogram(name: "LL_mDelay", scope: !13601, file: !13601, line: 273, type: !7466, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13620)
!13620 = !{!13621, !13622}
!13621 = !DILocalVariable(name: "Delay", arg: 1, scope: !13619, file: !13601, line: 273, type: !108)
!13622 = !DILocalVariable(name: "tmp", scope: !13619, file: !13601, line: 275, type: !409)
!13623 = !DILocation(line: 0, scope: !13619)
!13624 = !DILocation(line: 275, column: 3, scope: !13619)
!13625 = !DILocation(line: 275, column: 18, scope: !13619)
!13626 = !DILocation(line: 275, column: 33, scope: !13619)
!13627 = !DILocation(line: 277, column: 10, scope: !13619)
!13628 = !DILocation(line: 280, column: 12, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13619, file: !13601, line: 280, column: 6)
!13630 = !DILocation(line: 285, column: 3, scope: !13619)
!13631 = !DILocation(line: 287, column: 18, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13633, file: !13601, line: 287, column: 8)
!13633 = distinct !DILexicalBlock(scope: !13619, file: !13601, line: 286, column: 3)
!13634 = !DILocation(line: 292, column: 1, scope: !13619)
!13635 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13601, file: !13601, line: 323, type: !7466, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13636)
!13636 = !{!13637}
!13637 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13635, file: !13601, line: 323, type: !108)
!13638 = !DILocation(line: 0, scope: !13635)
!13639 = !DILocation(line: 326, column: 19, scope: !13635)
!13640 = !DILocation(line: 327, column: 1, scope: !13635)
!13641 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13601, file: !13601, line: 338, type: !13642, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13645)
!13642 = !DISubroutineType(types: !13643)
!13643 = !{!13644, !108}
!13644 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !945, line: 201, baseType: !944)
!13645 = !{!13646, !13647, !13648, !13649, !13650}
!13646 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13641, file: !13601, line: 338, type: !108)
!13647 = !DILocalVariable(name: "timeout", scope: !13641, file: !13601, line: 340, type: !108)
!13648 = !DILocalVariable(name: "getlatency", scope: !13641, file: !13601, line: 341, type: !108)
!13649 = !DILocalVariable(name: "latency", scope: !13641, file: !13601, line: 342, type: !108)
!13650 = !DILocalVariable(name: "status", scope: !13641, file: !13601, line: 343, type: !13644)
!13651 = !DILocation(line: 0, scope: !13641)
!13652 = !DILocation(line: 347, column: 21, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13641, file: !13601, line: 347, column: 6)
!13654 = !DILocation(line: 347, column: 6, scope: !13641)
!13655 = !DILocation(line: 353, column: 8, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13657, file: !13601, line: 353, column: 8)
!13657 = distinct !DILexicalBlock(scope: !13653, file: !13601, line: 352, column: 3)
!13658 = !DILocation(line: 353, column: 40, scope: !13656)
!13659 = !DILocation(line: 353, column: 8, scope: !13657)
!13660 = !DILocation(line: 356, column: 26, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13662, file: !13601, line: 356, column: 10)
!13662 = distinct !DILexicalBlock(scope: !13656, file: !13601, line: 354, column: 5)
!13663 = !DILocation(line: 356, column: 55, scope: !13661)
!13664 = !DILocation(line: 362, column: 55, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13662, file: !13601, line: 362, column: 10)
!13666 = !DILocation(line: 368, column: 55, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13662, file: !13601, line: 368, column: 10)
!13668 = !DILocation(line: 374, column: 26, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13662, file: !13601, line: 374, column: 10)
!13670 = !DILocation(line: 374, column: 55, scope: !13669)
!13671 = !DILocation(line: 380, column: 28, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13673, file: !13601, line: 380, column: 12)
!13673 = distinct !DILexicalBlock(scope: !13669, file: !13601, line: 379, column: 7)
!13674 = !DILocation(line: 380, column: 57, scope: !13672)
!13675 = !DILocation(line: 387, column: 8, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13657, file: !13601, line: 387, column: 8)
!13677 = !DILocation(line: 387, column: 40, scope: !13676)
!13678 = !DILocation(line: 387, column: 8, scope: !13657)
!13679 = !DILocation(line: 390, column: 26, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13681, file: !13601, line: 390, column: 10)
!13681 = distinct !DILexicalBlock(scope: !13676, file: !13601, line: 388, column: 5)
!13682 = !DILocation(line: 390, column: 55, scope: !13680)
!13683 = !DILocation(line: 396, column: 26, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13681, file: !13601, line: 396, column: 10)
!13685 = !DILocation(line: 396, column: 55, scope: !13684)
!13686 = !DILocation(line: 402, column: 26, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13681, file: !13601, line: 402, column: 10)
!13688 = !DILocation(line: 402, column: 55, scope: !13687)
!13689 = !DILocation(line: 407, column: 26, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13681, file: !13601, line: 407, column: 10)
!13691 = !DILocation(line: 407, column: 55, scope: !13690)
!13692 = !DILocation(line: 413, column: 28, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13694, file: !13601, line: 413, column: 12)
!13694 = distinct !DILexicalBlock(scope: !13690, file: !13601, line: 412, column: 7)
!13695 = !DILocation(line: 413, column: 57, scope: !13693)
!13696 = !DILocation(line: 0, scope: !13657)
!13697 = !DILocation(line: 420, column: 8, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13657, file: !13601, line: 420, column: 8)
!13699 = !DILocation(line: 420, column: 40, scope: !13698)
!13700 = !DILocation(line: 420, column: 8, scope: !13657)
!13701 = !DILocation(line: 423, column: 26, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13703, file: !13601, line: 423, column: 10)
!13703 = distinct !DILexicalBlock(scope: !13698, file: !13601, line: 421, column: 5)
!13704 = !DILocation(line: 423, column: 55, scope: !13702)
!13705 = !DILocation(line: 429, column: 26, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13703, file: !13601, line: 429, column: 10)
!13707 = !DILocation(line: 429, column: 55, scope: !13706)
!13708 = !DILocation(line: 435, column: 28, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13710, file: !13601, line: 435, column: 12)
!13710 = distinct !DILexicalBlock(scope: !13706, file: !13601, line: 434, column: 7)
!13711 = !DILocation(line: 435, column: 57, scope: !13709)
!13712 = !DILocation(line: 444, column: 5, scope: !13657)
!13713 = !DILocation(line: 448, column: 5, scope: !13657)
!13714 = !DILocation(line: 451, column: 18, scope: !13715)
!13715 = distinct !DILexicalBlock(scope: !13657, file: !13601, line: 449, column: 5)
!13716 = !DILocation(line: 452, column: 12, scope: !13715)
!13717 = !DILocation(line: 453, column: 26, scope: !13657)
!13718 = !DILocation(line: 453, column: 38, scope: !13657)
!13719 = !DILocation(line: 453, column: 5, scope: !13715)
!13720 = distinct !{!13720, !13713, !13721}
!13721 = !DILocation(line: 453, column: 54, scope: !13657)
!13722 = !DILocation(line: 0, scope: !13653)
!13723 = !DILocation(line: 464, column: 3, scope: !13641)
!13724 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13725, file: !13725, line: 519, type: !3655, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13725 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13726 = !DILocation(line: 521, column: 21, scope: !13724)
!13727 = !DILocation(line: 521, column: 3, scope: !13724)
!13728 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7080, file: !7080, line: 1543, type: !7466, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13729)
!13729 = !{!13730}
!13730 = !DILocalVariable(name: "Latency", arg: 1, scope: !13728, file: !7080, line: 1543, type: !108)
!13731 = !DILocation(line: 0, scope: !13728)
!13732 = !DILocation(line: 1545, column: 3, scope: !13728)
!13733 = !DILocation(line: 1546, column: 1, scope: !13728)
!13734 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7080, file: !7080, line: 1569, type: !3655, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13735 = !DILocation(line: 1571, column: 21, scope: !13734)
!13736 = !DILocation(line: 1571, column: 3, scope: !13734)
!13737 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13601, file: !13601, line: 483, type: !13738, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13754)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{!13644, !13740, !13747}
!13740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13741, size: 32)
!13741 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13608, line: 114, baseType: !13742)
!13742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13608, line: 94, size: 96, elements: !13743)
!13743 = !{!13744, !13745, !13746}
!13744 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13742, file: !13608, line: 96, baseType: !108, size: 32)
!13745 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13742, file: !13608, line: 102, baseType: !108, size: 32, offset: 32)
!13746 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13742, file: !13608, line: 109, baseType: !108, size: 32, offset: 64)
!13747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13748, size: 32)
!13748 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13608, line: 139, baseType: !13749)
!13749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13608, line: 119, size: 96, elements: !13750)
!13750 = !{!13751, !13752, !13753}
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13749, file: !13608, line: 121, baseType: !108, size: 32)
!13752 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13749, file: !13608, line: 127, baseType: !108, size: 32, offset: 32)
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13749, file: !13608, line: 133, baseType: !108, size: 32, offset: 64)
!13754 = !{!13755, !13756, !13757, !13758}
!13755 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13737, file: !13601, line: 483, type: !13740)
!13756 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13737, file: !13601, line: 484, type: !13747)
!13757 = !DILocalVariable(name: "status", scope: !13737, file: !13601, line: 486, type: !13644)
!13758 = !DILocalVariable(name: "pllfreq", scope: !13737, file: !13601, line: 487, type: !108)
!13759 = !DILocation(line: 0, scope: !13737)
!13760 = !DILocation(line: 490, column: 6, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13737, file: !13601, line: 490, column: 6)
!13762 = !DILocation(line: 490, column: 25, scope: !13761)
!13763 = !DILocation(line: 490, column: 6, scope: !13737)
!13764 = !DILocation(line: 493, column: 15, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13761, file: !13601, line: 491, column: 3)
!13766 = !DILocation(line: 496, column: 8, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13765, file: !13601, line: 496, column: 8)
!13768 = !DILocation(line: 496, column: 29, scope: !13767)
!13769 = !DILocation(line: 496, column: 8, scope: !13765)
!13770 = !DILocation(line: 498, column: 7, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13767, file: !13601, line: 497, column: 5)
!13772 = !DILocation(line: 499, column: 7, scope: !13771)
!13773 = !DILocation(line: 499, column: 14, scope: !13771)
!13774 = !DILocation(line: 499, column: 35, scope: !13771)
!13775 = distinct !{!13775, !13772, !13776}
!13776 = !DILocation(line: 502, column: 7, scope: !13771)
!13777 = !DILocation(line: 506, column: 76, scope: !13765)
!13778 = !DILocation(line: 506, column: 103, scope: !13765)
!13779 = !DILocation(line: 507, column: 54, scope: !13765)
!13780 = !DILocation(line: 506, column: 5, scope: !13765)
!13781 = !DILocation(line: 510, column: 14, scope: !13765)
!13782 = !DILocation(line: 511, column: 3, scope: !13765)
!13783 = !DILocation(line: 0, scope: !13761)
!13784 = !DILocation(line: 518, column: 3, scope: !13737)
!13785 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13601, file: !13601, line: 642, type: !13786, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13788)
!13786 = !DISubroutineType(types: !13787)
!13787 = !{!13644}
!13788 = !{!13789}
!13789 = !DILocalVariable(name: "status", scope: !13785, file: !13601, line: 644, type: !13644)
!13790 = !DILocation(line: 0, scope: !13785)
!13791 = !DILocation(line: 647, column: 6, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13785, file: !13601, line: 647, column: 6)
!13793 = !DILocation(line: 647, column: 27, scope: !13792)
!13794 = !DILocation(line: 655, column: 6, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13785, file: !13601, line: 655, column: 6)
!13796 = !DILocation(line: 655, column: 30, scope: !13795)
!13797 = !DILocation(line: 663, column: 6, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13785, file: !13601, line: 663, column: 6)
!13799 = !DILocation(line: 663, column: 30, scope: !13798)
!13800 = !DILocation(line: 663, column: 6, scope: !13785)
!13801 = !DILocation(line: 669, column: 3, scope: !13785)
!13802 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13601, file: !13601, line: 611, type: !13803, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13805)
!13803 = !DISubroutineType(types: !13804)
!13804 = !{!108, !108, !13740}
!13805 = !{!13806, !13807, !13808}
!13806 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13802, file: !13601, line: 611, type: !108)
!13807 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13802, file: !13601, line: 611, type: !13740)
!13808 = !DILocalVariable(name: "pllfreq", scope: !13802, file: !13601, line: 613, type: !108)
!13809 = !DILocation(line: 0, scope: !13802)
!13810 = !DILocation(line: 622, column: 56, scope: !13802)
!13811 = !DILocation(line: 622, column: 61, scope: !13802)
!13812 = !DILocation(line: 622, column: 32, scope: !13802)
!13813 = !DILocation(line: 626, column: 45, scope: !13802)
!13814 = !DILocation(line: 626, column: 50, scope: !13802)
!13815 = !DILocation(line: 626, column: 21, scope: !13802)
!13816 = !DILocation(line: 630, column: 47, scope: !13802)
!13817 = !DILocation(line: 630, column: 82, scope: !13802)
!13818 = !DILocation(line: 630, column: 21, scope: !13802)
!13819 = !DILocation(line: 633, column: 3, scope: !13802)
!13820 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10028, file: !10028, line: 3007, type: !3655, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13821 = !DILocation(line: 3009, column: 11, scope: !13820)
!13822 = !DILocation(line: 3009, column: 44, scope: !13820)
!13823 = !DILocation(line: 3009, column: 3, scope: !13820)
!13824 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10028, file: !10028, line: 2987, type: !334, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13825 = !DILocation(line: 2989, column: 3, scope: !13824)
!13826 = !DILocation(line: 2990, column: 1, scope: !13824)
!13827 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10028, file: !10028, line: 4304, type: !10162, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13828)
!13828 = !{!13829, !13830, !13831, !13832}
!13829 = !DILocalVariable(name: "Source", arg: 1, scope: !13827, file: !10028, line: 4304, type: !108)
!13830 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13827, file: !10028, line: 4304, type: !108)
!13831 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13827, file: !10028, line: 4304, type: !108)
!13832 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13827, file: !10028, line: 4304, type: !108)
!13833 = !DILocation(line: 0, scope: !13827)
!13834 = !DILocation(line: 4306, column: 3, scope: !13827)
!13835 = !DILocation(line: 4308, column: 3, scope: !13827)
!13836 = !DILocation(line: 4310, column: 3, scope: !13827)
!13837 = !DILocation(line: 4312, column: 1, scope: !13827)
!13838 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13601, file: !13601, line: 681, type: !13839, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{!13644, !108, !13747}
!13841 = !{!13842, !13843, !13844, !13845}
!13842 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13838, file: !13601, line: 681, type: !108)
!13843 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13838, file: !13601, line: 681, type: !13747)
!13844 = !DILocalVariable(name: "status", scope: !13838, file: !13601, line: 683, type: !13644)
!13845 = !DILocalVariable(name: "hclk_frequency", scope: !13838, file: !13601, line: 684, type: !108)
!13846 = !DILocation(line: 0, scope: !13838)
!13847 = !DILocation(line: 691, column: 20, scope: !13838)
!13848 = !DILocation(line: 694, column: 6, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13838, file: !13601, line: 694, column: 6)
!13850 = !DILocation(line: 694, column: 22, scope: !13849)
!13851 = !DILocation(line: 694, column: 6, scope: !13838)
!13852 = !DILocation(line: 697, column: 14, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13849, file: !13601, line: 695, column: 3)
!13854 = !DILocation(line: 701, column: 13, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13838, file: !13601, line: 701, column: 6)
!13856 = !DILocation(line: 701, column: 6, scope: !13838)
!13857 = !DILocation(line: 704, column: 5, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13855, file: !13601, line: 702, column: 3)
!13859 = !DILocation(line: 705, column: 5, scope: !13858)
!13860 = !DILocation(line: 705, column: 12, scope: !13858)
!13861 = !DILocation(line: 705, column: 33, scope: !13858)
!13862 = distinct !{!13862, !13859, !13863}
!13863 = !DILocation(line: 708, column: 5, scope: !13858)
!13864 = !DILocation(line: 711, column: 49, scope: !13858)
!13865 = !DILocation(line: 711, column: 5, scope: !13858)
!13866 = !DILocation(line: 712, column: 5, scope: !13858)
!13867 = !DILocation(line: 713, column: 5, scope: !13858)
!13868 = !DILocation(line: 713, column: 12, scope: !13858)
!13869 = !DILocation(line: 713, column: 37, scope: !13858)
!13870 = distinct !{!13870, !13867, !13871}
!13871 = !DILocation(line: 716, column: 5, scope: !13858)
!13872 = !DILocation(line: 719, column: 50, scope: !13858)
!13873 = !DILocation(line: 719, column: 5, scope: !13858)
!13874 = !DILocation(line: 720, column: 50, scope: !13858)
!13875 = !DILocation(line: 720, column: 5, scope: !13858)
!13876 = !DILocation(line: 721, column: 3, scope: !13858)
!13877 = !DILocation(line: 724, column: 6, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13838, file: !13601, line: 724, column: 6)
!13879 = !DILocation(line: 724, column: 22, scope: !13878)
!13880 = !DILocation(line: 724, column: 6, scope: !13838)
!13881 = !DILocation(line: 727, column: 14, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13878, file: !13601, line: 725, column: 3)
!13883 = !DILocation(line: 728, column: 3, scope: !13882)
!13884 = !DILocation(line: 731, column: 13, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13838, file: !13601, line: 731, column: 6)
!13886 = !DILocation(line: 731, column: 6, scope: !13838)
!13887 = !DILocation(line: 733, column: 5, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13885, file: !13601, line: 732, column: 3)
!13889 = !DILocation(line: 734, column: 3, scope: !13888)
!13890 = !DILocation(line: 736, column: 3, scope: !13838)
!13891 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10028, file: !10028, line: 4184, type: !334, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13892 = !DILocation(line: 4186, column: 3, scope: !13891)
!13893 = !DILocation(line: 4187, column: 1, scope: !13891)
!13894 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10028, file: !10028, line: 4205, type: !3655, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13895 = !DILocation(line: 4207, column: 11, scope: !13894)
!13896 = !DILocation(line: 4207, column: 44, scope: !13894)
!13897 = !DILocation(line: 4207, column: 3, scope: !13894)
!13898 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10028, file: !10028, line: 3224, type: !7466, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13899)
!13899 = !{!13900}
!13900 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13898, file: !10028, line: 3224, type: !108)
!13901 = !DILocation(line: 0, scope: !13898)
!13902 = !DILocation(line: 3226, column: 3, scope: !13898)
!13903 = !DILocation(line: 3227, column: 1, scope: !13898)
!13904 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10028, file: !10028, line: 3188, type: !7466, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13905)
!13905 = !{!13906}
!13906 = !DILocalVariable(name: "Source", arg: 1, scope: !13904, file: !10028, line: 3188, type: !108)
!13907 = !DILocation(line: 0, scope: !13904)
!13908 = !DILocation(line: 3190, column: 3, scope: !13904)
!13909 = !DILocation(line: 3191, column: 1, scope: !13904)
!13910 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10028, file: !10028, line: 3204, type: !3655, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13911 = !DILocation(line: 3206, column: 21, scope: !13910)
!13912 = !DILocation(line: 3206, column: 3, scope: !13910)
!13913 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10028, file: !10028, line: 3240, type: !7466, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13914)
!13914 = !{!13915}
!13915 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13913, file: !10028, line: 3240, type: !108)
!13916 = !DILocation(line: 0, scope: !13913)
!13917 = !DILocation(line: 3242, column: 3, scope: !13913)
!13918 = !DILocation(line: 3243, column: 1, scope: !13913)
!13919 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10028, file: !10028, line: 3256, type: !7466, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13920)
!13920 = !{!13921}
!13921 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13919, file: !10028, line: 3256, type: !108)
!13922 = !DILocation(line: 0, scope: !13919)
!13923 = !DILocation(line: 3258, column: 3, scope: !13919)
!13924 = !DILocation(line: 3259, column: 1, scope: !13919)
!13925 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !10028, file: !10028, line: 5969, type: !3655, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13926 = !DILocation(line: 5971, column: 11, scope: !13925)
!13927 = !DILocation(line: 5971, column: 47, scope: !13925)
!13928 = !DILocation(line: 5971, column: 3, scope: !13925)
!13929 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10028, file: !10028, line: 5153, type: !3655, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13930 = !DILocation(line: 5155, column: 11, scope: !13929)
!13931 = !DILocation(line: 5155, column: 47, scope: !13929)
!13932 = !DILocation(line: 5155, column: 3, scope: !13929)
!13933 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13601, file: !13601, line: 540, type: !13934, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !13936)
!13934 = !DISubroutineType(types: !13935)
!13935 = !{!13644, !108, !108, !13740, !13747}
!13936 = !{!13937, !13938, !13939, !13940, !13941, !13942}
!13937 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13933, file: !13601, line: 540, type: !108)
!13938 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13933, file: !13601, line: 540, type: !108)
!13939 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13933, file: !13601, line: 541, type: !13740)
!13940 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13933, file: !13601, line: 541, type: !13747)
!13941 = !DILocalVariable(name: "status", scope: !13933, file: !13601, line: 543, type: !13644)
!13942 = !DILocalVariable(name: "pllfreq", scope: !13933, file: !13601, line: 544, type: !108)
!13943 = !DILocation(line: 0, scope: !13933)
!13944 = !DILocation(line: 551, column: 6, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13933, file: !13601, line: 551, column: 6)
!13946 = !DILocation(line: 551, column: 25, scope: !13945)
!13947 = !DILocation(line: 551, column: 6, scope: !13933)
!13948 = !DILocation(line: 554, column: 15, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13945, file: !13601, line: 552, column: 3)
!13950 = !DILocation(line: 557, column: 8, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13949, file: !13601, line: 557, column: 8)
!13952 = !DILocation(line: 557, column: 29, scope: !13951)
!13953 = !DILocation(line: 557, column: 8, scope: !13949)
!13954 = !DILocation(line: 560, column: 20, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !13601, line: 560, column: 10)
!13956 = distinct !DILexicalBlock(scope: !13951, file: !13601, line: 558, column: 5)
!13957 = !DILocation(line: 560, column: 10, scope: !13956)
!13958 = !DILocation(line: 562, column: 9, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13955, file: !13601, line: 561, column: 7)
!13960 = !DILocation(line: 563, column: 7, scope: !13959)
!13961 = !DILocation(line: 566, column: 9, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13955, file: !13601, line: 565, column: 7)
!13963 = !DILocation(line: 570, column: 7, scope: !13956)
!13964 = !DILocation(line: 571, column: 7, scope: !13956)
!13965 = !DILocation(line: 571, column: 14, scope: !13956)
!13966 = !DILocation(line: 571, column: 35, scope: !13956)
!13967 = distinct !{!13967, !13964, !13968}
!13968 = !DILocation(line: 574, column: 7, scope: !13956)
!13969 = !DILocation(line: 578, column: 76, scope: !13949)
!13970 = !DILocation(line: 578, column: 103, scope: !13949)
!13971 = !DILocation(line: 579, column: 54, scope: !13949)
!13972 = !DILocation(line: 578, column: 5, scope: !13949)
!13973 = !DILocation(line: 582, column: 14, scope: !13949)
!13974 = !DILocation(line: 583, column: 3, scope: !13949)
!13975 = !DILocation(line: 0, scope: !13945)
!13976 = !DILocation(line: 590, column: 3, scope: !13933)
!13977 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10028, file: !10028, line: 2969, type: !3655, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13978 = !DILocation(line: 2971, column: 11, scope: !13977)
!13979 = !DILocation(line: 2971, column: 44, scope: !13977)
!13980 = !DILocation(line: 2971, column: 3, scope: !13977)
!13981 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10028, file: !10028, line: 2929, type: !334, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13982 = !DILocation(line: 2931, column: 3, scope: !13981)
!13983 = !DILocation(line: 2932, column: 1, scope: !13981)
!13984 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10028, file: !10028, line: 2939, type: !334, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13985 = !DILocation(line: 2941, column: 3, scope: !13984)
!13986 = !DILocation(line: 2942, column: 1, scope: !13984)
!13987 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10028, file: !10028, line: 2949, type: !334, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3206, retainedNodes: !251)
!13988 = !DILocation(line: 2951, column: 3, scope: !13987)
!13989 = !DILocation(line: 2952, column: 1, scope: !13987)
!13990 = distinct !DISubprogram(name: "z_device_state_init", scope: !13991, file: !13991, line: 23, type: !334, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !13992)
!13991 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13992 = !{!13993}
!13993 = !DILocalVariable(name: "dev", scope: !13990, file: !13991, line: 25, type: !13994)
!13994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13995, size: 32)
!13995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13996)
!13996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !429, line: 378, size: 192, elements: !13997)
!13997 = !{!13998, !13999, !14000, !14001, !14007, !14008}
!13998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13996, file: !429, line: 380, baseType: !337, size: 32)
!13999 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13996, file: !429, line: 382, baseType: !13, size: 32, offset: 32)
!14000 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13996, file: !429, line: 384, baseType: !13, size: 32, offset: 64)
!14001 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13996, file: !429, line: 386, baseType: !14002, size: 32, offset: 96)
!14002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14003, size: 32)
!14003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !429, line: 351, size: 16, elements: !14004)
!14004 = !{!14005, !14006}
!14005 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14003, file: !429, line: 359, baseType: !185, size: 8)
!14006 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14003, file: !429, line: 364, baseType: !131, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14007 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13996, file: !429, line: 388, baseType: !102, size: 32, offset: 128)
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13996, file: !429, line: 396, baseType: !442, size: 32, offset: 160)
!14009 = !DILocation(line: 0, scope: !13990)
!14010 = !DILocation(line: 31, column: 1, scope: !13990)
!14011 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13991, file: !13991, line: 33, type: !14012, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14014)
!14012 = !DISubroutineType(types: !14013)
!14013 = !{!13994, !337}
!14014 = !{!14015, !14016}
!14015 = !DILocalVariable(name: "name", arg: 1, scope: !14011, file: !13991, line: 33, type: !337)
!14016 = !DILocalVariable(name: "dev", scope: !14011, file: !13991, line: 35, type: !13994)
!14017 = !DILocation(line: 0, scope: !14011)
!14018 = !DILocation(line: 40, column: 12, scope: !14019)
!14019 = distinct !DILexicalBlock(scope: !14011, file: !13991, line: 40, column: 6)
!14020 = !DILocation(line: 40, column: 21, scope: !14019)
!14021 = !DILocation(line: 40, column: 25, scope: !14019)
!14022 = !DILocation(line: 40, column: 33, scope: !14019)
!14023 = !DILocation(line: 40, column: 6, scope: !14011)
!14024 = !DILocation(line: 55, column: 2, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14011, file: !13991, line: 55, column: 2)
!14026 = !DILocation(line: 50, column: 7, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14028, file: !13991, line: 50, column: 7)
!14028 = distinct !DILexicalBlock(scope: !14029, file: !13991, line: 49, column: 57)
!14029 = distinct !DILexicalBlock(scope: !14030, file: !13991, line: 49, column: 2)
!14030 = distinct !DILexicalBlock(scope: !14011, file: !13991, line: 49, column: 2)
!14031 = !DILocation(line: 50, column: 30, scope: !14027)
!14032 = !DILocation(line: 50, column: 39, scope: !14027)
!14033 = !DILocation(line: 50, column: 44, scope: !14027)
!14034 = !DILocation(line: 50, column: 7, scope: !14028)
!14035 = !DILocation(line: 49, column: 53, scope: !14029)
!14036 = !DILocation(line: 49, column: 33, scope: !14029)
!14037 = !DILocation(line: 49, column: 2, scope: !14030)
!14038 = distinct !{!14038, !14037, !14039}
!14039 = !DILocation(line: 53, column: 2, scope: !14030)
!14040 = !DILocation(line: 56, column: 7, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !13991, line: 56, column: 7)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !13991, line: 55, column: 57)
!14043 = distinct !DILexicalBlock(scope: !14025, file: !13991, line: 55, column: 2)
!14044 = !DILocation(line: 56, column: 30, scope: !14041)
!14045 = !DILocation(line: 56, column: 52, scope: !14041)
!14046 = !DILocation(line: 56, column: 34, scope: !14041)
!14047 = !DILocation(line: 56, column: 58, scope: !14041)
!14048 = !DILocation(line: 56, column: 7, scope: !14042)
!14049 = !DILocation(line: 55, column: 53, scope: !14043)
!14050 = !DILocation(line: 55, column: 33, scope: !14043)
!14051 = distinct !{!14051, !14024, !14052}
!14052 = !DILocation(line: 59, column: 2, scope: !14025)
!14053 = !DILocation(line: 62, column: 1, scope: !14011)
!14054 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13991, file: !13991, line: 93, type: !14055, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14057)
!14055 = !DISubroutineType(types: !14056)
!14056 = !{!131, !13994}
!14057 = !{!14058}
!14058 = !DILocalVariable(name: "dev", arg: 1, scope: !14054, file: !13991, line: 93, type: !13994)
!14059 = !DILocation(line: 0, scope: !14054)
!14060 = !DILocation(line: 99, column: 10, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14054, file: !13991, line: 99, column: 6)
!14062 = !DILocation(line: 99, column: 6, scope: !14054)
!14063 = !DILocation(line: 103, column: 14, scope: !14054)
!14064 = !DILocation(line: 103, column: 21, scope: !14054)
!14065 = !DILocation(line: 103, column: 33, scope: !14054)
!14066 = !DILocation(line: 103, column: 49, scope: !14054)
!14067 = !DILocation(line: 103, column: 58, scope: !14054)
!14068 = !DILocation(line: 104, column: 1, scope: !14054)
!14069 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13991, file: !13991, line: 87, type: !14070, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14073)
!14070 = !DISubroutineType(types: !14071)
!14071 = !{!132, !14072}
!14072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13994, size: 32)
!14073 = !{!14074}
!14074 = !DILocalVariable(name: "devices", arg: 1, scope: !14069, file: !13991, line: 87, type: !14072)
!14075 = !DILocation(line: 0, scope: !14069)
!14076 = !DILocation(line: 89, column: 11, scope: !14069)
!14077 = !DILocation(line: 90, column: 2, scope: !14069)
!14078 = distinct !DISubprogram(name: "device_required_foreach", scope: !13991, file: !13991, line: 125, type: !14079, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14085)
!14079 = !DISubroutineType(types: !14080)
!14080 = !{!103, !13994, !14081, !102}
!14081 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !429, line: 471, baseType: !14082)
!14082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14083, size: 32)
!14083 = !DISubroutineType(types: !14084)
!14084 = !{!103, !13994, !102}
!14085 = !{!14086, !14087, !14088, !14089, !14090}
!14086 = !DILocalVariable(name: "dev", arg: 1, scope: !14078, file: !13991, line: 125, type: !13994)
!14087 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14078, file: !13991, line: 126, type: !14081)
!14088 = !DILocalVariable(name: "context", arg: 3, scope: !14078, file: !13991, line: 127, type: !102)
!14089 = !DILocalVariable(name: "handle_count", scope: !14078, file: !13991, line: 129, type: !132)
!14090 = !DILocalVariable(name: "handles", scope: !14078, file: !13991, line: 130, type: !442)
!14091 = !DILocation(line: 0, scope: !14078)
!14092 = !DILocation(line: 129, column: 2, scope: !14078)
!14093 = !DILocation(line: 129, column: 9, scope: !14078)
!14094 = !DILocation(line: 130, column: 35, scope: !14078)
!14095 = !DILocation(line: 132, column: 33, scope: !14078)
!14096 = !DILocation(line: 132, column: 9, scope: !14078)
!14097 = !DILocation(line: 133, column: 1, scope: !14078)
!14098 = !DILocation(line: 132, column: 2, scope: !14078)
!14099 = distinct !DISubprogram(name: "device_required_handles_get", scope: !429, file: !429, line: 493, type: !14100, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14102)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{!442, !13994, !2785}
!14102 = !{!14103, !14104, !14105, !14106}
!14103 = !DILocalVariable(name: "dev", arg: 1, scope: !14099, file: !429, line: 493, type: !13994)
!14104 = !DILocalVariable(name: "count", arg: 2, scope: !14099, file: !429, line: 493, type: !2785)
!14105 = !DILocalVariable(name: "rv", scope: !14099, file: !429, line: 495, type: !442)
!14106 = !DILocalVariable(name: "i", scope: !14107, file: !429, line: 498, type: !132)
!14107 = distinct !DILexicalBlock(scope: !14108, file: !429, line: 497, column: 18)
!14108 = distinct !DILexicalBlock(scope: !14099, file: !429, line: 497, column: 6)
!14109 = !DILocation(line: 0, scope: !14099)
!14110 = !DILocation(line: 495, column: 35, scope: !14099)
!14111 = !DILocation(line: 497, column: 9, scope: !14108)
!14112 = !DILocation(line: 497, column: 6, scope: !14099)
!14113 = !DILocation(line: 0, scope: !14107)
!14114 = !DILocation(line: 500, column: 11, scope: !14107)
!14115 = !DILocation(line: 500, column: 40, scope: !14107)
!14116 = !DILocation(line: 502, column: 4, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14107, file: !429, line: 501, column: 40)
!14118 = distinct !{!14118, !14119, !14120}
!14119 = !DILocation(line: 500, column: 3, scope: !14107)
!14120 = !DILocation(line: 503, column: 3, scope: !14107)
!14121 = !DILocation(line: 504, column: 10, scope: !14107)
!14122 = !DILocation(line: 505, column: 2, scope: !14107)
!14123 = !DILocation(line: 507, column: 2, scope: !14099)
!14124 = distinct !DISubprogram(name: "device_visitor", scope: !13991, file: !13991, line: 106, type: !14125, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14127)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!103, !442, !132, !14081, !102}
!14127 = !{!14128, !14129, !14130, !14131, !14132, !14134, !14137, !14138}
!14128 = !DILocalVariable(name: "handles", arg: 1, scope: !14124, file: !13991, line: 106, type: !442)
!14129 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14124, file: !13991, line: 107, type: !132)
!14130 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14124, file: !13991, line: 108, type: !14081)
!14131 = !DILocalVariable(name: "context", arg: 4, scope: !14124, file: !13991, line: 109, type: !102)
!14132 = !DILocalVariable(name: "i", scope: !14133, file: !13991, line: 112, type: !132)
!14133 = distinct !DILexicalBlock(scope: !14124, file: !13991, line: 112, column: 2)
!14134 = !DILocalVariable(name: "dh", scope: !14135, file: !13991, line: 113, type: !444)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !13991, line: 112, column: 44)
!14136 = distinct !DILexicalBlock(scope: !14133, file: !13991, line: 112, column: 2)
!14137 = !DILocalVariable(name: "rdev", scope: !14135, file: !13991, line: 114, type: !13994)
!14138 = !DILocalVariable(name: "rc", scope: !14135, file: !13991, line: 115, type: !103)
!14139 = !DILocation(line: 0, scope: !14124)
!14140 = !DILocation(line: 0, scope: !14133)
!14141 = !DILocation(line: 112, column: 23, scope: !14136)
!14142 = !DILocation(line: 112, column: 2, scope: !14133)
!14143 = distinct !{!14143, !14142, !14144}
!14144 = !DILocation(line: 120, column: 2, scope: !14133)
!14145 = !DILocation(line: 113, column: 24, scope: !14135)
!14146 = !DILocation(line: 0, scope: !14135)
!14147 = !DILocation(line: 114, column: 31, scope: !14135)
!14148 = !DILocation(line: 115, column: 12, scope: !14135)
!14149 = !DILocation(line: 117, column: 10, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14135, file: !13991, line: 117, column: 7)
!14151 = !DILocation(line: 112, column: 39, scope: !14136)
!14152 = !DILocation(line: 123, column: 1, scope: !14124)
!14153 = distinct !DISubprogram(name: "device_from_handle", scope: !429, file: !429, line: 439, type: !14154, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14156)
!14154 = !DISubroutineType(types: !14155)
!14155 = !{!13994, !444}
!14156 = !{!14157, !14158, !14159}
!14157 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14153, file: !429, line: 439, type: !444)
!14158 = !DILocalVariable(name: "dev", scope: !14153, file: !429, line: 443, type: !13994)
!14159 = !DILocalVariable(name: "numdev", scope: !14153, file: !429, line: 444, type: !132)
!14160 = !DILocation(line: 0, scope: !14153)
!14161 = !DILocation(line: 446, column: 7, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14153, file: !429, line: 446, column: 6)
!14163 = !DILocation(line: 446, column: 18, scope: !14162)
!14164 = !DILocation(line: 446, column: 23, scope: !14162)
!14165 = !DILocation(line: 450, column: 2, scope: !14153)
!14166 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13991, file: !13991, line: 135, type: !14079, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14167)
!14167 = !{!14168, !14169, !14170, !14171, !14172}
!14168 = !DILocalVariable(name: "dev", arg: 1, scope: !14166, file: !13991, line: 135, type: !13994)
!14169 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14166, file: !13991, line: 136, type: !14081)
!14170 = !DILocalVariable(name: "context", arg: 3, scope: !14166, file: !13991, line: 137, type: !102)
!14171 = !DILocalVariable(name: "handle_count", scope: !14166, file: !13991, line: 139, type: !132)
!14172 = !DILocalVariable(name: "handles", scope: !14166, file: !13991, line: 140, type: !442)
!14173 = !DILocation(line: 0, scope: !14166)
!14174 = !DILocation(line: 139, column: 2, scope: !14166)
!14175 = !DILocation(line: 139, column: 9, scope: !14166)
!14176 = !DILocation(line: 140, column: 35, scope: !14166)
!14177 = !DILocation(line: 142, column: 33, scope: !14166)
!14178 = !DILocation(line: 142, column: 9, scope: !14166)
!14179 = !DILocation(line: 143, column: 1, scope: !14166)
!14180 = !DILocation(line: 142, column: 2, scope: !14166)
!14181 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !429, file: !429, line: 573, type: !14100, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !14182)
!14182 = !{!14183, !14184, !14185, !14186, !14187}
!14183 = !DILocalVariable(name: "dev", arg: 1, scope: !14181, file: !429, line: 573, type: !13994)
!14184 = !DILocalVariable(name: "count", arg: 2, scope: !14181, file: !429, line: 573, type: !2785)
!14185 = !DILocalVariable(name: "rv", scope: !14181, file: !429, line: 575, type: !442)
!14186 = !DILocalVariable(name: "region", scope: !14181, file: !429, line: 576, type: !132)
!14187 = !DILocalVariable(name: "i", scope: !14181, file: !429, line: 577, type: !132)
!14188 = !DILocation(line: 0, scope: !14181)
!14189 = !DILocation(line: 575, column: 35, scope: !14181)
!14190 = !DILocation(line: 579, column: 9, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14181, file: !429, line: 579, column: 6)
!14192 = !DILocation(line: 579, column: 6, scope: !14181)
!14193 = !DILocation(line: 582, column: 8, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14195, file: !429, line: 582, column: 8)
!14195 = distinct !DILexicalBlock(scope: !14196, file: !429, line: 581, column: 23)
!14196 = distinct !DILexicalBlock(scope: !14191, file: !429, line: 579, column: 18)
!14197 = !DILocation(line: 582, column: 12, scope: !14194)
!14198 = !DILocation(line: 585, column: 6, scope: !14195)
!14199 = !DILocation(line: 0, scope: !14196)
!14200 = !DILocation(line: 581, column: 17, scope: !14196)
!14201 = !DILocation(line: 581, column: 3, scope: !14196)
!14202 = !DILocation(line: 588, column: 10, scope: !14196)
!14203 = !DILocation(line: 588, column: 16, scope: !14196)
!14204 = !DILocation(line: 589, column: 4, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14196, file: !429, line: 588, column: 39)
!14206 = !DILocation(line: 588, column: 3, scope: !14196)
!14207 = distinct !{!14207, !14206, !14208}
!14208 = !DILocation(line: 590, column: 3, scope: !14196)
!14209 = !DILocation(line: 591, column: 10, scope: !14196)
!14210 = !DILocation(line: 592, column: 2, scope: !14196)
!14211 = !DILocation(line: 575, column: 25, scope: !14181)
!14212 = !DILocation(line: 594, column: 2, scope: !14181)
!14213 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1993, file: !1993, line: 49, type: !14214, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1990, retainedNodes: !251)
!14214 = !DISubroutineType(types: !14215)
!14215 = !{!374}
!14216 = !DILocation(line: 51, column: 10, scope: !14213)
!14217 = !DILocation(line: 51, column: 20, scope: !14213)
!14218 = !DILocation(line: 51, column: 2, scope: !14213)
!14219 = distinct !DISubprogram(name: "coredump", scope: !3280, file: !3280, line: 209, type: !14220, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14366)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{null, !32, !14222, !14266}
!14222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14223, size: 32)
!14223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14224)
!14224 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2913, line: 141, baseType: !14225)
!14225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2913, line: 97, size: 256, elements: !14226)
!14226 = !{!14227}
!14227 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14225, file: !2913, line: 107, baseType: !14228, size: 256)
!14228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2913, line: 98, size: 256, elements: !14229)
!14229 = !{!14230, !14235, !14240, !14245, !14250, !14255, !14260, !14265}
!14230 = !DIDerivedType(tag: DW_TAG_member, scope: !14228, file: !2913, line: 99, baseType: !14231, size: 32)
!14231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14228, file: !2913, line: 99, size: 32, elements: !14232)
!14232 = !{!14233, !14234}
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14231, file: !2913, line: 99, baseType: !108, size: 32)
!14234 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14231, file: !2913, line: 99, baseType: !108, size: 32)
!14235 = !DIDerivedType(tag: DW_TAG_member, scope: !14228, file: !2913, line: 100, baseType: !14236, size: 32, offset: 32)
!14236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14228, file: !2913, line: 100, size: 32, elements: !14237)
!14237 = !{!14238, !14239}
!14238 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14236, file: !2913, line: 100, baseType: !108, size: 32)
!14239 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14236, file: !2913, line: 100, baseType: !108, size: 32)
!14240 = !DIDerivedType(tag: DW_TAG_member, scope: !14228, file: !2913, line: 101, baseType: !14241, size: 32, offset: 64)
!14241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14228, file: !2913, line: 101, size: 32, elements: !14242)
!14242 = !{!14243, !14244}
!14243 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14241, file: !2913, line: 101, baseType: !108, size: 32)
!14244 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14241, file: !2913, line: 101, baseType: !108, size: 32)
!14245 = !DIDerivedType(tag: DW_TAG_member, scope: !14228, file: !2913, line: 102, baseType: !14246, size: 32, offset: 96)
!14246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14228, file: !2913, line: 102, size: 32, elements: !14247)
!14247 = !{!14248, !14249}
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14246, file: !2913, line: 102, baseType: !108, size: 32)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14246, file: !2913, line: 102, baseType: !108, size: 32)
!14250 = !DIDerivedType(tag: DW_TAG_member, scope: !14228, file: !2913, line: 103, baseType: !14251, size: 32, offset: 128)
!14251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14228, file: !2913, line: 103, size: 32, elements: !14252)
!14252 = !{!14253, !14254}
!14253 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14251, file: !2913, line: 103, baseType: !108, size: 32)
!14254 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14251, file: !2913, line: 103, baseType: !108, size: 32)
!14255 = !DIDerivedType(tag: DW_TAG_member, scope: !14228, file: !2913, line: 104, baseType: !14256, size: 32, offset: 160)
!14256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14228, file: !2913, line: 104, size: 32, elements: !14257)
!14257 = !{!14258, !14259}
!14258 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14256, file: !2913, line: 104, baseType: !108, size: 32)
!14259 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14256, file: !2913, line: 104, baseType: !108, size: 32)
!14260 = !DIDerivedType(tag: DW_TAG_member, scope: !14228, file: !2913, line: 105, baseType: !14261, size: 32, offset: 192)
!14261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14228, file: !2913, line: 105, size: 32, elements: !14262)
!14262 = !{!14263, !14264}
!14263 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14261, file: !2913, line: 105, baseType: !108, size: 32)
!14264 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14261, file: !2913, line: 105, baseType: !108, size: 32)
!14265 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14228, file: !2913, line: 106, baseType: !108, size: 32, offset: 224)
!14266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14267, size: 32)
!14267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !14268)
!14268 = !{!14269, !14327, !14339, !14340, !14341, !14342, !14348, !14361}
!14269 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14267, file: !163, line: 247, baseType: !14270, size: 384)
!14270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !14271)
!14271 = !{!14272, !14296, !14303, !14304, !14305, !14314, !14315, !14316}
!14272 = !DIDerivedType(tag: DW_TAG_member, scope: !14270, file: !163, line: 60, baseType: !14273, size: 64)
!14273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14270, file: !163, line: 60, size: 64, elements: !14274)
!14274 = !{!14275, !14290}
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14273, file: !163, line: 61, baseType: !14276, size: 64)
!14276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !14277)
!14277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !146, line: 37, size: 64, elements: !14278)
!14278 = !{!14279, !14285}
!14279 = !DIDerivedType(tag: DW_TAG_member, scope: !14277, file: !146, line: 38, baseType: !14280, size: 32)
!14280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14277, file: !146, line: 38, size: 32, elements: !14281)
!14281 = !{!14282, !14284}
!14282 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14280, file: !146, line: 39, baseType: !14283, size: 32)
!14283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14277, size: 32)
!14284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14280, file: !146, line: 40, baseType: !14283, size: 32)
!14285 = !DIDerivedType(tag: DW_TAG_member, scope: !14277, file: !146, line: 42, baseType: !14286, size: 32, offset: 32)
!14286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14277, file: !146, line: 42, size: 32, elements: !14287)
!14287 = !{!14288, !14289}
!14288 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14286, file: !146, line: 43, baseType: !14283, size: 32)
!14289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14286, file: !146, line: 44, baseType: !14283, size: 32)
!14290 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14273, file: !163, line: 62, baseType: !14291, size: 64)
!14291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !14292)
!14292 = !{!14293}
!14293 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14291, file: !175, line: 50, baseType: !14294, size: 64)
!14294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14295, size: 64, elements: !180)
!14295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14291, size: 32)
!14296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14270, file: !163, line: 68, baseType: !14297, size: 32, offset: 64)
!14297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14298, size: 32)
!14298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !14299)
!14299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !14300)
!14300 = !{!14301}
!14301 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14299, file: !141, line: 232, baseType: !14302, size: 64)
!14302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !14277)
!14303 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14270, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!14304 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14270, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!14305 = !DIDerivedType(tag: DW_TAG_member, scope: !14270, file: !163, line: 90, baseType: !14306, size: 16, offset: 112)
!14306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14270, file: !163, line: 90, size: 16, elements: !14307)
!14307 = !{!14308, !14313}
!14308 = !DIDerivedType(tag: DW_TAG_member, scope: !14306, file: !163, line: 91, baseType: !14309, size: 16)
!14309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14306, file: !163, line: 91, size: 16, elements: !14310)
!14310 = !{!14311, !14312}
!14311 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14309, file: !163, line: 96, baseType: !195, size: 8)
!14312 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14309, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!14313 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14306, file: !163, line: 100, baseType: !121, size: 16)
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14270, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!14315 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14270, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!14316 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14270, file: !163, line: 131, baseType: !14317, size: 192, offset: 192)
!14317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !14318)
!14318 = !{!14319, !14320, !14326}
!14319 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14317, file: !141, line: 245, baseType: !14276, size: 64)
!14320 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14317, file: !141, line: 246, baseType: !14321, size: 32, offset: 64)
!14321 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !14322)
!14322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14323, size: 32)
!14323 = !DISubroutineType(types: !14324)
!14324 = !{null, !14325}
!14325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14317, size: 32)
!14326 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14317, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!14327 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14267, file: !163, line: 250, baseType: !14328, size: 288, offset: 384)
!14328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !14329)
!14329 = !{!14330, !14331, !14332, !14333, !14334, !14335, !14336, !14337, !14338}
!14330 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14328, file: !214, line: 26, baseType: !108, size: 32)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14328, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!14332 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14328, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!14333 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14328, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14328, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!14335 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14328, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!14336 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14328, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!14337 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14328, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!14338 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14328, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14267, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!14340 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14267, file: !163, line: 256, baseType: !14298, size: 64, offset: 704)
!14341 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14267, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!14342 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14267, file: !163, line: 300, baseType: !14343, size: 96, offset: 800)
!14343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !14344)
!14344 = !{!14345, !14346, !14347}
!14345 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14343, file: !163, line: 153, baseType: !22, size: 32)
!14346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14343, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!14347 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14343, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!14348 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14267, file: !163, line: 325, baseType: !14349, size: 32, offset: 896)
!14349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14350, size: 32)
!14350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !14351)
!14351 = !{!14352, !14358, !14359}
!14352 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14350, file: !137, line: 5074, baseType: !14353, size: 96)
!14353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !14354)
!14354 = !{!14355, !14356, !14357}
!14355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14353, file: !240, line: 57, baseType: !243, size: 32)
!14356 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14353, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!14357 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14353, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!14358 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14350, file: !137, line: 5075, baseType: !14298, size: 64, offset: 96)
!14359 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14350, file: !137, line: 5076, baseType: !14360, offset: 160)
!14360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!14361 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14267, file: !163, line: 343, baseType: !14362, size: 64, offset: 928)
!14362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !14363)
!14363 = !{!14364, !14365}
!14364 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14362, file: !214, line: 63, baseType: !108, size: 32)
!14365 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14362, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!14366 = !{!14367, !14368, !14369}
!14367 = !DILocalVariable(name: "reason", arg: 1, scope: !14219, file: !3280, line: 209, type: !32)
!14368 = !DILocalVariable(name: "esf", arg: 2, scope: !14219, file: !3280, line: 209, type: !14222)
!14369 = !DILocalVariable(name: "thread", arg: 3, scope: !14219, file: !3280, line: 210, type: !14266)
!14370 = !DILocation(line: 0, scope: !14219)
!14371 = !DILocation(line: 212, column: 1, scope: !14219)
!14372 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3280, file: !3280, line: 214, type: !14373, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14375)
!14373 = !DISubroutineType(types: !14374)
!14374 = !{null, !22, !22}
!14375 = !{!14376, !14377}
!14376 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14372, file: !3280, line: 214, type: !22)
!14377 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14372, file: !3280, line: 214, type: !22)
!14378 = !DILocation(line: 0, scope: !14372)
!14379 = !DILocation(line: 216, column: 1, scope: !14372)
!14380 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3280, file: !3280, line: 218, type: !14381, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14383)
!14381 = !DISubroutineType(types: !14382)
!14382 = !{null, !379, !132}
!14383 = !{!14384, !14385}
!14384 = !DILocalVariable(name: "buf", arg: 1, scope: !14380, file: !3280, line: 218, type: !379)
!14385 = !DILocalVariable(name: "buflen", arg: 2, scope: !14380, file: !3280, line: 218, type: !132)
!14386 = !DILocation(line: 0, scope: !14380)
!14387 = !DILocation(line: 220, column: 1, scope: !14380)
!14388 = distinct !DISubprogram(name: "coredump_query", scope: !3280, file: !3280, line: 222, type: !14389, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14391)
!14389 = !DISubroutineType(types: !14390)
!14390 = !{!103, !3279, !102}
!14391 = !{!14392, !14393}
!14392 = !DILocalVariable(name: "query_id", arg: 1, scope: !14388, file: !3280, line: 222, type: !3279)
!14393 = !DILocalVariable(name: "arg", arg: 2, scope: !14388, file: !3280, line: 222, type: !102)
!14394 = !DILocation(line: 0, scope: !14388)
!14395 = !DILocation(line: 224, column: 2, scope: !14388)
!14396 = distinct !DISubprogram(name: "coredump_cmd", scope: !3280, file: !3280, line: 227, type: !14397, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14399)
!14397 = !DISubroutineType(types: !14398)
!14398 = !{!103, !3286, !102}
!14399 = !{!14400, !14401}
!14400 = !DILocalVariable(name: "query_id", arg: 1, scope: !14396, file: !3280, line: 227, type: !3286)
!14401 = !DILocalVariable(name: "arg", arg: 2, scope: !14396, file: !3280, line: 227, type: !102)
!14402 = !DILocation(line: 0, scope: !14396)
!14403 = !DILocation(line: 229, column: 2, scope: !14396)
!14404 = distinct !DISubprogram(name: "arch_system_halt", scope: !14405, file: !14405, line: 23, type: !7070, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14406)
!14405 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14406 = !{!14407}
!14407 = !DILocalVariable(name: "reason", arg: 1, scope: !14404, file: !14405, line: 23, type: !32)
!14408 = !DILocation(line: 0, scope: !14404)
!14409 = !DILocation(line: 55, column: 2, scope: !14410, inlinedAt: !14414)
!14410 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14411)
!14411 = !{!14412, !14413}
!14412 = !DILocalVariable(name: "key", scope: !14410, file: !7059, line: 44, type: !32)
!14413 = !DILocalVariable(name: "tmp", scope: !14410, file: !7059, line: 53, type: !32)
!14414 = distinct !DILocation(line: 31, column: 8, scope: !14404)
!14415 = !{i64 2281339}
!14416 = !DILocation(line: 0, scope: !14410, inlinedAt: !14414)
!14417 = !DILocation(line: 32, column: 2, scope: !14404)
!14418 = !DILocation(line: 32, column: 2, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14420, file: !14405, line: 32, column: 2)
!14420 = distinct !DILexicalBlock(scope: !14404, file: !14405, line: 32, column: 2)
!14421 = distinct !{!14421, !14422, !14423}
!14422 = !DILocation(line: 32, column: 2, scope: !14420)
!14423 = !DILocation(line: 34, column: 2, scope: !14420)
!14424 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14405, file: !14405, line: 39, type: !14425, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14427)
!14425 = !DISubroutineType(types: !14426)
!14426 = !{null, !32, !14222}
!14427 = !{!14428, !14429}
!14428 = !DILocalVariable(name: "reason", arg: 1, scope: !14424, file: !14405, line: 39, type: !32)
!14429 = !DILocalVariable(name: "esf", arg: 2, scope: !14424, file: !14405, line: 40, type: !14222)
!14430 = !DILocation(line: 0, scope: !14424)
!14431 = !DILocation(line: 45, column: 2, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14433, file: !14405, line: 45, column: 2)
!14433 = distinct !DILexicalBlock(scope: !14434, file: !14405, line: 45, column: 2)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !14405, line: 45, column: 2)
!14435 = distinct !DILexicalBlock(scope: !14424, file: !14405, line: 45, column: 2)
!14436 = !DILocation(line: 46, column: 2, scope: !14424)
!14437 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14405, file: !14405, line: 81, type: !7070, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14438)
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "reason", arg: 1, scope: !14437, file: !14405, line: 81, type: !32)
!14440 = !DILocation(line: 0, scope: !14437)
!14441 = !DILocation(line: 83, column: 2, scope: !14437)
!14442 = distinct !DISubprogram(name: "z_fatal_error", scope: !14405, file: !14405, line: 96, type: !14425, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14443)
!14443 = !{!14444, !14445, !14446, !14447}
!14444 = !DILocalVariable(name: "reason", arg: 1, scope: !14442, file: !14405, line: 96, type: !32)
!14445 = !DILocalVariable(name: "esf", arg: 2, scope: !14442, file: !14405, line: 96, type: !14222)
!14446 = !DILocalVariable(name: "key", scope: !14442, file: !14405, line: 102, type: !32)
!14447 = !DILocalVariable(name: "thread", scope: !14442, file: !14405, line: 103, type: !14266)
!14448 = !DILocation(line: 0, scope: !14442)
!14449 = !DILocation(line: 55, column: 2, scope: !14410, inlinedAt: !14450)
!14450 = distinct !DILocation(line: 102, column: 21, scope: !14442)
!14451 = !DILocation(line: 0, scope: !14410, inlinedAt: !14450)
!14452 = !DILocation(line: 104, column: 4, scope: !14442)
!14453 = !DILocation(line: 109, column: 2, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14455, file: !14405, line: 109, column: 2)
!14455 = distinct !DILexicalBlock(scope: !14456, file: !14405, line: 109, column: 2)
!14456 = distinct !DILexicalBlock(scope: !14457, file: !14405, line: 109, column: 2)
!14457 = distinct !DILexicalBlock(scope: !14442, file: !14405, line: 109, column: 2)
!14458 = !DILocation(line: 119, column: 11, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14442, file: !14405, line: 119, column: 6)
!14460 = !DILocation(line: 119, column: 20, scope: !14459)
!14461 = !DILocalVariable(name: "esf", arg: 1, scope: !14462, file: !8393, line: 71, type: !14222)
!14462 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8393, file: !8393, line: 71, type: !14463, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14465)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{!131, !14222}
!14465 = !{!14461}
!14466 = !DILocation(line: 0, scope: !14462, inlinedAt: !14467)
!14467 = distinct !DILocation(line: 119, column: 23, scope: !14459)
!14468 = !DILocation(line: 73, column: 21, scope: !14462, inlinedAt: !14467)
!14469 = !DILocation(line: 73, column: 26, scope: !14462, inlinedAt: !14467)
!14470 = !DILocation(line: 73, column: 9, scope: !14462, inlinedAt: !14467)
!14471 = !DILocation(line: 119, column: 6, scope: !14442)
!14472 = !DILocation(line: 120, column: 3, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14474, file: !14405, line: 120, column: 3)
!14474 = distinct !DILexicalBlock(scope: !14475, file: !14405, line: 120, column: 3)
!14475 = distinct !DILexicalBlock(scope: !14476, file: !14405, line: 120, column: 3)
!14476 = distinct !DILexicalBlock(scope: !14477, file: !14405, line: 120, column: 3)
!14477 = distinct !DILexicalBlock(scope: !14459, file: !14405, line: 119, column: 57)
!14478 = !DILocation(line: 121, column: 2, scope: !14477)
!14479 = !DILocation(line: 124, column: 2, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14481, file: !14405, line: 124, column: 2)
!14481 = distinct !DILexicalBlock(scope: !14482, file: !14405, line: 124, column: 2)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !14405, line: 124, column: 2)
!14483 = distinct !DILexicalBlock(scope: !14442, file: !14405, line: 124, column: 2)
!14484 = !DILocation(line: 131, column: 2, scope: !14442)
!14485 = !DILocation(line: 0, scope: !14462, inlinedAt: !14486)
!14486 = distinct !DILocation(line: 151, column: 24, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14488, file: !14405, line: 151, column: 7)
!14488 = distinct !DILexicalBlock(scope: !14489, file: !14405, line: 146, column: 32)
!14489 = distinct !DILexicalBlock(scope: !14442, file: !14405, line: 146, column: 6)
!14490 = !DILocation(line: 151, column: 7, scope: !14488)
!14491 = !DILocation(line: 151, column: 21, scope: !14487)
!14492 = !DILocalVariable(name: "key", arg: 1, scope: !14493, file: !7059, line: 84, type: !32)
!14493 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14494)
!14494 = !{!14492}
!14495 = !DILocation(line: 0, scope: !14493, inlinedAt: !14496)
!14496 = distinct !DILocation(line: 186, column: 2, scope: !14442)
!14497 = !DILocation(line: 95, column: 2, scope: !14493, inlinedAt: !14496)
!14498 = !{i64 2282156}
!14499 = !DILocation(line: 189, column: 3, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14501, file: !14405, line: 188, column: 41)
!14501 = distinct !DILexicalBlock(scope: !14442, file: !14405, line: 188, column: 6)
!14502 = !DILocation(line: 191, column: 1, scope: !14442)
!14503 = distinct !DISubprogram(name: "k_current_get", scope: !137, file: !137, line: 530, type: !14504, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !251)
!14504 = !DISubroutineType(types: !14505)
!14505 = !{!14506}
!14506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !14266)
!14507 = !DILocation(line: 535, column: 9, scope: !14503)
!14508 = !DILocation(line: 535, column: 2, scope: !14503)
!14509 = distinct !DISubprogram(name: "reason_to_str", scope: !14405, file: !14405, line: 62, type: !14510, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14512)
!14510 = !DISubroutineType(types: !14511)
!14511 = !{!337, !32}
!14512 = !{!14513}
!14513 = !DILocalVariable(name: "reason", arg: 1, scope: !14509, file: !14405, line: 62, type: !32)
!14514 = !DILocation(line: 0, scope: !14509)
!14515 = !DILocation(line: 64, column: 2, scope: !14509)
!14516 = !DILocation(line: 0, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14509, file: !14405, line: 64, column: 18)
!14518 = !DILocation(line: 78, column: 1, scope: !14509)
!14519 = distinct !DISubprogram(name: "thread_name_get", scope: !14405, file: !14405, line: 51, type: !14520, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{!337, !14266}
!14522 = !{!14523, !14524}
!14523 = !DILocalVariable(name: "thread", arg: 1, scope: !14519, file: !14405, line: 51, type: !14266)
!14524 = !DILocalVariable(name: "thread_name", scope: !14519, file: !14405, line: 53, type: !337)
!14525 = !DILocation(line: 0, scope: !14519)
!14526 = !DILocation(line: 53, column: 36, scope: !14519)
!14527 = !DILocation(line: 53, column: 28, scope: !14519)
!14528 = !DILocation(line: 53, column: 47, scope: !14519)
!14529 = !DILocation(line: 55, column: 19, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14519, file: !14405, line: 55, column: 6)
!14531 = !DILocation(line: 55, column: 28, scope: !14530)
!14532 = !DILocation(line: 55, column: 32, scope: !14530)
!14533 = !DILocation(line: 55, column: 47, scope: !14530)
!14534 = !DILocation(line: 55, column: 6, scope: !14519)
!14535 = !DILocation(line: 57, column: 2, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14530, file: !14405, line: 55, column: 57)
!14537 = !DILocation(line: 59, column: 2, scope: !14519)
!14538 = distinct !DISubprogram(name: "k_thread_abort", scope: !3675, file: !3675, line: 188, type: !14539, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !14541)
!14539 = !DISubroutineType(types: !14540)
!14540 = !{null, !14506}
!14541 = !{!14542}
!14542 = !DILocalVariable(name: "thread", arg: 1, scope: !14538, file: !3675, line: 188, type: !14506)
!14543 = !DILocation(line: 0, scope: !14538)
!14544 = !DILocation(line: 197, column: 2, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14538, file: !3675, line: 197, column: 2)
!14546 = !{i64 2155062913}
!14547 = !DILocation(line: 198, column: 2, scope: !14538)
!14548 = !DILocation(line: 199, column: 1, scope: !14538)
!14549 = distinct !DISubprogram(name: "z_current_get", scope: !3675, file: !3675, line: 173, type: !14504, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !251)
!14550 = !DILocation(line: 180, column: 2, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14549, file: !3675, line: 180, column: 2)
!14552 = !{i64 2155062845}
!14553 = !DILocation(line: 181, column: 9, scope: !14549)
!14554 = !DILocation(line: 181, column: 2, scope: !14549)
!14555 = distinct !DISubprogram(name: "z_early_memset", scope: !2001, file: !2001, line: 108, type: !14556, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14558)
!14556 = !DISubroutineType(types: !14557)
!14557 = !{null, !102, !103, !132}
!14558 = !{!14559, !14560, !14561}
!14559 = !DILocalVariable(name: "dst", arg: 1, scope: !14555, file: !2001, line: 108, type: !102)
!14560 = !DILocalVariable(name: "c", arg: 2, scope: !14555, file: !2001, line: 108, type: !103)
!14561 = !DILocalVariable(name: "n", arg: 3, scope: !14555, file: !2001, line: 108, type: !132)
!14562 = !DILocation(line: 0, scope: !14555)
!14563 = !DILocation(line: 110, column: 9, scope: !14555)
!14564 = !DILocation(line: 111, column: 1, scope: !14555)
!14565 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2001, file: !2001, line: 121, type: !14566, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14568)
!14566 = !DISubroutineType(types: !14567)
!14567 = !{null, !102, !13, !132}
!14568 = !{!14569, !14570, !14571}
!14569 = !DILocalVariable(name: "dst", arg: 1, scope: !14565, file: !2001, line: 121, type: !102)
!14570 = !DILocalVariable(name: "src", arg: 2, scope: !14565, file: !2001, line: 121, type: !13)
!14571 = !DILocalVariable(name: "n", arg: 3, scope: !14565, file: !2001, line: 121, type: !132)
!14572 = !DILocation(line: 0, scope: !14565)
!14573 = !DILocation(line: 123, column: 9, scope: !14565)
!14574 = !DILocation(line: 124, column: 1, scope: !14565)
!14575 = distinct !DISubprogram(name: "z_bss_zero", scope: !2001, file: !2001, line: 132, type: !334, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !251)
!14576 = !DILocation(line: 143, column: 2, scope: !14575)
!14577 = !DILocation(line: 168, column: 1, scope: !14575)
!14578 = distinct !DISubprogram(name: "z_init_cpu", scope: !2001, file: !2001, line: 372, type: !9636, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14579)
!14579 = !{!14580}
!14580 = !DILocalVariable(name: "id", arg: 1, scope: !14578, file: !2001, line: 372, type: !103)
!14581 = !DILocation(line: 0, scope: !14578)
!14582 = !DILocation(line: 374, column: 2, scope: !14578)
!14583 = !DILocation(line: 375, column: 34, scope: !14578)
!14584 = !DILocation(line: 375, column: 19, scope: !14578)
!14585 = !DILocation(line: 375, column: 31, scope: !14578)
!14586 = !DILocation(line: 376, column: 24, scope: !14578)
!14587 = !DILocation(line: 376, column: 19, scope: !14578)
!14588 = !DILocation(line: 376, column: 22, scope: !14578)
!14589 = !DILocation(line: 378, column: 26, scope: !14578)
!14590 = !DILocation(line: 378, column: 4, scope: !14578)
!14591 = !DILocation(line: 378, column: 50, scope: !14578)
!14592 = !DILocation(line: 377, column: 19, scope: !14578)
!14593 = !DILocation(line: 377, column: 29, scope: !14578)
!14594 = !DILocation(line: 384, column: 1, scope: !14578)
!14595 = distinct !DISubprogram(name: "init_idle_thread", scope: !2001, file: !2001, line: 343, type: !9636, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14596)
!14596 = !{!14597, !14598, !14599, !14602}
!14597 = !DILocalVariable(name: "i", arg: 1, scope: !14595, file: !2001, line: 343, type: !103)
!14598 = !DILocalVariable(name: "thread", scope: !14595, file: !2001, line: 345, type: !2093)
!14599 = !DILocalVariable(name: "stack", scope: !14595, file: !2001, line: 346, type: !14600)
!14600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14601, size: 32)
!14601 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !2207)
!14602 = !DILocalVariable(name: "tname", scope: !14595, file: !2001, line: 358, type: !277)
!14603 = !DILocation(line: 0, scope: !14595)
!14604 = !DILocation(line: 345, column: 29, scope: !14595)
!14605 = !DILocation(line: 346, column: 28, scope: !14595)
!14606 = !DILocation(line: 362, column: 37, scope: !14595)
!14607 = !DILocation(line: 362, column: 36, scope: !14595)
!14608 = !DILocation(line: 361, column: 2, scope: !14595)
!14609 = !DILocation(line: 365, column: 2, scope: !14595)
!14610 = !DILocation(line: 370, column: 1, scope: !14595)
!14611 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !14612, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14614)
!14612 = !DISubroutineType(types: !14613)
!14613 = !{!277, !14600}
!14614 = !{!14615}
!14615 = !DILocalVariable(name: "sym", arg: 1, scope: !14611, file: !316, line: 331, type: !14600)
!14616 = !DILocation(line: 0, scope: !14611)
!14617 = !DILocation(line: 333, column: 21, scope: !14611)
!14618 = !DILocation(line: 333, column: 2, scope: !14611)
!14619 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14620, file: !14620, line: 155, type: !14621, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14623)
!14620 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14621 = !DISubroutineType(types: !14622)
!14622 = !{null, !2093}
!14623 = !{!14624}
!14624 = !DILocalVariable(name: "thread", arg: 1, scope: !14619, file: !14620, line: 155, type: !2093)
!14625 = !DILocation(line: 0, scope: !14619)
!14626 = !DILocation(line: 157, column: 15, scope: !14619)
!14627 = !DILocation(line: 157, column: 28, scope: !14619)
!14628 = !DILocation(line: 158, column: 1, scope: !14619)
!14629 = distinct !DISubprogram(name: "z_cstart", scope: !2001, file: !2001, line: 501, type: !334, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14630)
!14630 = !{!14631}
!14631 = !DILocalVariable(name: "dummy_thread", scope: !14629, file: !2001, line: 518, type: !2094)
!14632 = !DILocation(line: 507, column: 2, scope: !14629)
!14633 = !DILocation(line: 43, column: 14, scope: !14634, inlinedAt: !14638)
!14634 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14635, file: !14635, line: 40, type: !334, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14636)
!14635 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14636 = !{!14637}
!14637 = !DILocalVariable(name: "msp", scope: !14634, file: !14635, line: 42, type: !108)
!14638 = distinct !DILocation(line: 44, column: 2, scope: !14639, inlinedAt: !14641)
!14639 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14640, file: !14640, line: 42, type: !334, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !251)
!14640 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14641 = distinct !DILocation(line: 510, column: 2, scope: !14629)
!14642 = !DILocation(line: 43, column: 3, scope: !14634, inlinedAt: !14638)
!14643 = !DILocation(line: 43, column: 60, scope: !14634, inlinedAt: !14638)
!14644 = !DILocation(line: 0, scope: !14634, inlinedAt: !14638)
!14645 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14646, file: !7377, line: 1153, type: !108)
!14646 = distinct !DISubprogram(name: "__set_MSP", scope: !7377, file: !7377, line: 1153, type: !7466, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14647)
!14647 = !{!14645}
!14648 = !DILocation(line: 0, scope: !14646, inlinedAt: !14649)
!14649 = distinct !DILocation(line: 46, column: 2, scope: !14634, inlinedAt: !14638)
!14650 = !DILocation(line: 1155, column: 3, scope: !14646, inlinedAt: !14649)
!14651 = !{i64 3747278}
!14652 = !DILocation(line: 62, column: 11, scope: !14634, inlinedAt: !14638)
!14653 = !DILocation(line: 102, column: 2, scope: !14654, inlinedAt: !14655)
!14654 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8393, file: !8393, line: 97, type: !334, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !251)
!14655 = distinct !DILocation(line: 45, column: 2, scope: !14639, inlinedAt: !14641)
!14656 = !DILocation(line: 108, column: 2, scope: !14654, inlinedAt: !14655)
!14657 = !DILocation(line: 112, column: 2, scope: !14654, inlinedAt: !14655)
!14658 = !DILocation(line: 113, column: 2, scope: !14654, inlinedAt: !14655)
!14659 = !DILocation(line: 114, column: 2, scope: !14654, inlinedAt: !14655)
!14660 = !DILocation(line: 116, column: 2, scope: !14654, inlinedAt: !14655)
!14661 = !DILocation(line: 123, column: 13, scope: !14654, inlinedAt: !14655)
!14662 = !DILocation(line: 46, column: 2, scope: !14639, inlinedAt: !14641)
!14663 = !DILocation(line: 47, column: 2, scope: !14639, inlinedAt: !14641)
!14664 = !DILocation(line: 174, column: 12, scope: !14665, inlinedAt: !14666)
!14665 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8393, file: !8393, line: 169, type: !334, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !251)
!14666 = distinct !DILocation(line: 48, column: 2, scope: !14639, inlinedAt: !14641)
!14667 = !DILocation(line: 179, column: 12, scope: !14665, inlinedAt: !14666)
!14668 = !DILocation(line: 50, column: 2, scope: !14639, inlinedAt: !14641)
!14669 = !DILocation(line: 57, column: 2, scope: !14639, inlinedAt: !14641)
!14670 = !DILocation(line: 518, column: 2, scope: !14629)
!14671 = !DILocation(line: 518, column: 18, scope: !14629)
!14672 = !DILocation(line: 520, column: 2, scope: !14629)
!14673 = !DILocation(line: 523, column: 2, scope: !14629)
!14674 = !DILocation(line: 526, column: 2, scope: !14629)
!14675 = !DILocation(line: 527, column: 2, scope: !14629)
!14676 = !DILocation(line: 543, column: 24, scope: !14629)
!14677 = !DILocation(line: 543, column: 2, scope: !14629)
!14678 = !DILocation(line: 0, scope: !2229)
!14679 = !DILocation(line: 246, column: 15, scope: !2247)
!14680 = !DILocation(line: 246, column: 36, scope: !2246)
!14681 = !DILocation(line: 246, column: 2, scope: !2247)
!14682 = !DILocation(line: 247, column: 37, scope: !2245)
!14683 = !DILocation(line: 0, scope: !2245)
!14684 = !DILocation(line: 248, column: 19, scope: !2245)
!14685 = !DILocation(line: 248, column: 12, scope: !2245)
!14686 = !DILocation(line: 250, column: 11, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !2245, file: !2001, line: 250, column: 7)
!14688 = !DILocation(line: 250, column: 7, scope: !2245)
!14689 = !DILocation(line: 254, column: 11, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14691, file: !2001, line: 254, column: 8)
!14691 = distinct !DILexicalBlock(scope: !14687, file: !2001, line: 250, column: 20)
!14692 = !DILocation(line: 254, column: 8, scope: !14691)
!14693 = !DILocation(line: 255, column: 9, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14690, file: !2001, line: 254, column: 17)
!14695 = !DILocation(line: 258, column: 9, scope: !14694)
!14696 = !DILocation(line: 261, column: 28, scope: !14694)
!14697 = !DILocation(line: 261, column: 10, scope: !14694)
!14698 = !DILocation(line: 261, column: 17, scope: !14694)
!14699 = !DILocation(line: 261, column: 26, scope: !14694)
!14700 = !DILocation(line: 262, column: 4, scope: !14694)
!14701 = !DILocation(line: 263, column: 9, scope: !14691)
!14702 = !DILocation(line: 263, column: 16, scope: !14691)
!14703 = !DILocation(line: 263, column: 28, scope: !14691)
!14704 = !DILocation(line: 264, column: 3, scope: !14691)
!14705 = !DILocation(line: 246, column: 60, scope: !2246)
!14706 = distinct !{!14706, !14681, !14707}
!14707 = !DILocation(line: 265, column: 2, scope: !2247)
!14708 = !DILocation(line: 266, column: 1, scope: !2229)
!14709 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !624, file: !624, line: 1814, type: !7411, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14710)
!14710 = !{!14711, !14712}
!14711 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14709, file: !624, line: 1814, type: !900)
!14712 = !DILocalVariable(name: "priority", arg: 2, scope: !14709, file: !624, line: 1814, type: !108)
!14713 = !DILocation(line: 0, scope: !14709)
!14714 = !DILocation(line: 1822, column: 48, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14716, file: !624, line: 1821, column: 3)
!14716 = distinct !DILexicalBlock(scope: !14709, file: !624, line: 1816, column: 7)
!14717 = !DILocation(line: 1822, column: 32, scope: !14715)
!14718 = !DILocation(line: 1822, column: 40, scope: !14715)
!14719 = !DILocation(line: 1822, column: 5, scope: !14715)
!14720 = !DILocation(line: 1822, column: 46, scope: !14715)
!14721 = !DILocation(line: 1824, column: 1, scope: !14709)
!14722 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14640, file: !14640, line: 32, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!14723 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14724, file: !14724, line: 215, type: !14621, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14725)
!14724 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14725 = !{!14726}
!14726 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14723, file: !14724, line: 215, type: !2093)
!14727 = !DILocation(line: 0, scope: !14723)
!14728 = !DILocation(line: 217, column: 21, scope: !14723)
!14729 = !DILocation(line: 217, column: 34, scope: !14723)
!14730 = !DILocation(line: 221, column: 21, scope: !14723)
!14731 = !DILocation(line: 221, column: 34, scope: !14723)
!14732 = !DILocation(line: 223, column: 27, scope: !14723)
!14733 = !DILocation(line: 223, column: 33, scope: !14723)
!14734 = !DILocation(line: 224, column: 27, scope: !14723)
!14735 = !DILocation(line: 224, column: 32, scope: !14723)
!14736 = !DILocation(line: 230, column: 2, scope: !14723)
!14737 = !DILocation(line: 239, column: 24, scope: !14723)
!14738 = !DILocation(line: 240, column: 1, scope: !14723)
!14739 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2001, file: !2001, line: 399, type: !14740, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14742)
!14740 = !DISubroutineType(types: !14741)
!14741 = !{!277}
!14742 = !{!14743}
!14743 = !DILocalVariable(name: "stack_ptr", scope: !14739, file: !2001, line: 401, type: !277)
!14744 = !DILocation(line: 404, column: 2, scope: !14739)
!14745 = !DILocation(line: 416, column: 24, scope: !14739)
!14746 = !DILocation(line: 418, column: 14, scope: !14739)
!14747 = !DILocation(line: 0, scope: !14739)
!14748 = !DILocation(line: 423, column: 2, scope: !14739)
!14749 = !DILocation(line: 424, column: 2, scope: !14739)
!14750 = !DILocation(line: 426, column: 2, scope: !14739)
!14751 = !DILocation(line: 428, column: 2, scope: !14739)
!14752 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2001, file: !2001, line: 432, type: !14753, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14755)
!14753 = !DISubroutineType(types: !14754)
!14754 = !{null, !277}
!14755 = !{!14756}
!14756 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14752, file: !2001, line: 432, type: !277)
!14757 = !DILocation(line: 0, scope: !14752)
!14758 = !DILocation(line: 435, column: 2, scope: !14752)
!14759 = !DILocation(line: 445, column: 2, scope: !14752)
!14760 = distinct !DISubprogram(name: "bg_thread_main", scope: !2001, file: !2001, line: 277, type: !323, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1997, retainedNodes: !14761)
!14761 = !{!14762, !14763, !14764}
!14762 = !DILocalVariable(name: "unused1", arg: 1, scope: !14760, file: !2001, line: 277, type: !102)
!14763 = !DILocalVariable(name: "unused2", arg: 2, scope: !14760, file: !2001, line: 277, type: !102)
!14764 = !DILocalVariable(name: "unused3", arg: 3, scope: !14760, file: !2001, line: 277, type: !102)
!14765 = !DILocation(line: 0, scope: !14760)
!14766 = !DILocation(line: 291, column: 20, scope: !14760)
!14767 = !DILocation(line: 293, column: 2, scope: !14760)
!14768 = !DILocation(line: 297, column: 2, scope: !14760)
!14769 = !DILocation(line: 305, column: 2, scope: !14760)
!14770 = !DILocation(line: 307, column: 2, scope: !14760)
!14771 = !DILocation(line: 330, column: 8, scope: !14760)
!14772 = !DILocation(line: 333, column: 34, scope: !14760)
!14773 = !DILocation(line: 339, column: 1, scope: !14760)
!14774 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2260, file: !2260, line: 45, type: !14775, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14783)
!14775 = !DISubroutineType(types: !14776)
!14776 = !{null, !14777, !102}
!14777 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !137, line: 103, baseType: !14778)
!14778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14779, size: 32)
!14779 = !DISubroutineType(types: !14780)
!14780 = !{null, !14781, !102}
!14781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14782, size: 32)
!14782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2265)
!14783 = !{!14784, !14785}
!14784 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14774, file: !2260, line: 45, type: !14777)
!14785 = !DILocalVariable(name: "user_data", arg: 2, scope: !14774, file: !2260, line: 45, type: !102)
!14786 = !DILocation(line: 0, scope: !14774)
!14787 = !DILocation(line: 71, column: 1, scope: !14774)
!14788 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2260, file: !2260, line: 73, type: !14775, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14789)
!14789 = !{!14790, !14791}
!14790 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14788, file: !2260, line: 73, type: !14777)
!14791 = !DILocalVariable(name: "user_data", arg: 2, scope: !14788, file: !2260, line: 73, type: !102)
!14792 = !DILocation(line: 0, scope: !14788)
!14793 = !DILocation(line: 95, column: 1, scope: !14788)
!14794 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2260, file: !2260, line: 97, type: !8394, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !251)
!14795 = !DILocation(line: 1031, column: 3, scope: !14796, inlinedAt: !14799)
!14796 = distinct !DISubprogram(name: "__get_IPSR", scope: !7377, file: !7377, line: 1027, type: !3655, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14797)
!14797 = !{!14798}
!14798 = !DILocalVariable(name: "result", scope: !14796, file: !7377, line: 1029, type: !108)
!14799 = distinct !DILocation(line: 48, column: 10, scope: !14800, inlinedAt: !14801)
!14800 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8393, file: !8393, line: 46, type: !8394, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !251)
!14801 = distinct !DILocation(line: 99, column: 9, scope: !14794)
!14802 = !{i64 3752929}
!14803 = !DILocation(line: 0, scope: !14796, inlinedAt: !14799)
!14804 = !DILocation(line: 48, column: 9, scope: !14800, inlinedAt: !14801)
!14805 = !DILocation(line: 99, column: 2, scope: !14794)
!14806 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2260, file: !2260, line: 106, type: !334, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !251)
!14807 = !DILocation(line: 108, column: 2, scope: !14806)
!14808 = !DILocation(line: 108, column: 17, scope: !14806)
!14809 = !DILocation(line: 108, column: 30, scope: !14806)
!14810 = !DILocation(line: 109, column: 1, scope: !14806)
!14811 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2260, file: !2260, line: 116, type: !334, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !251)
!14812 = !DILocation(line: 118, column: 2, scope: !14811)
!14813 = !DILocation(line: 118, column: 17, scope: !14811)
!14814 = !DILocation(line: 118, column: 30, scope: !14811)
!14815 = !DILocation(line: 119, column: 1, scope: !14811)
!14816 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2260, file: !2260, line: 126, type: !8394, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !251)
!14817 = !DILocation(line: 128, column: 10, scope: !14816)
!14818 = !DILocation(line: 128, column: 25, scope: !14816)
!14819 = !DILocation(line: 128, column: 38, scope: !14816)
!14820 = !DILocation(line: 128, column: 53, scope: !14816)
!14821 = !DILocation(line: 128, column: 2, scope: !14816)
!14822 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2260, file: !2260, line: 187, type: !14823, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14825)
!14823 = !DISubroutineType(types: !14824)
!14824 = !{!103, !2264, !337}
!14825 = !{!14826, !14827}
!14826 = !DILocalVariable(name: "thread", arg: 1, scope: !14822, file: !2260, line: 187, type: !2264)
!14827 = !DILocalVariable(name: "value", arg: 2, scope: !14822, file: !2260, line: 187, type: !337)
!14828 = !DILocation(line: 0, scope: !14822)
!14829 = !DILocation(line: 206, column: 2, scope: !14822)
!14830 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2260, file: !2260, line: 238, type: !14831, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14833)
!14831 = !DISubroutineType(types: !14832)
!14832 = !{!337, !2264}
!14833 = !{!14834}
!14834 = !DILocalVariable(name: "thread", arg: 1, scope: !14830, file: !2260, line: 238, type: !2264)
!14835 = !DILocation(line: 0, scope: !14830)
!14836 = !DILocation(line: 244, column: 2, scope: !14830)
!14837 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2260, file: !2260, line: 248, type: !14838, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14840)
!14838 = !DISubroutineType(types: !14839)
!14839 = !{!103, !2263, !277, !132}
!14840 = !{!14841, !14842, !14843}
!14841 = !DILocalVariable(name: "thread", arg: 1, scope: !14837, file: !2260, line: 248, type: !2263)
!14842 = !DILocalVariable(name: "buf", arg: 2, scope: !14837, file: !2260, line: 248, type: !277)
!14843 = !DILocalVariable(name: "size", arg: 3, scope: !14837, file: !2260, line: 248, type: !132)
!14844 = !DILocation(line: 0, scope: !14837)
!14845 = !DILocation(line: 257, column: 2, scope: !14837)
!14846 = !DILocation(line: 0, scope: !2259)
!14847 = !DILocation(line: 281, column: 11, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !2259, file: !2260, line: 281, column: 6)
!14849 = !DILocation(line: 281, column: 20, scope: !14848)
!14850 = !DILocation(line: 275, column: 45, scope: !2259)
!14851 = !DILocation(line: 285, column: 10, scope: !2259)
!14852 = !DILocation(line: 0, scope: !2380)
!14853 = !DILocation(line: 293, column: 39, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !2380, file: !2260, line: 293, column: 2)
!14855 = !DILocation(line: 293, column: 2, scope: !2380)
!14856 = !DILocation(line: 273, column: 14, scope: !2259)
!14857 = !DILocation(line: 309, column: 2, scope: !2259)
!14858 = !DILocation(line: 309, column: 11, scope: !2259)
!14859 = !DILocation(line: 311, column: 2, scope: !2259)
!14860 = !DILocation(line: 293, column: 26, scope: !14854)
!14861 = !DILocation(line: 294, column: 9, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14854, file: !2260, line: 293, column: 54)
!14863 = !DILocation(line: 295, column: 21, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14862, file: !2260, line: 295, column: 7)
!14865 = !DILocation(line: 295, column: 28, scope: !14864)
!14866 = !DILocation(line: 295, column: 7, scope: !14862)
!14867 = !DILocation(line: 299, column: 25, scope: !14862)
!14868 = !DILocation(line: 299, column: 41, scope: !14862)
!14869 = !DILocation(line: 300, column: 7, scope: !14862)
!14870 = !DILocation(line: 300, column: 26, scope: !14862)
!14871 = !DILocation(line: 299, column: 10, scope: !14862)
!14872 = !DILocation(line: 299, column: 7, scope: !14862)
!14873 = !DILocation(line: 302, column: 16, scope: !14862)
!14874 = !DILocation(line: 304, column: 20, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14862, file: !2260, line: 304, column: 7)
!14876 = !DILocation(line: 304, column: 7, scope: !14862)
!14877 = !DILocation(line: 305, column: 26, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14875, file: !2260, line: 304, column: 26)
!14879 = !DILocation(line: 305, column: 42, scope: !14878)
!14880 = !DILocation(line: 305, column: 11, scope: !14878)
!14881 = !DILocation(line: 305, column: 8, scope: !14878)
!14882 = !DILocation(line: 306, column: 3, scope: !14878)
!14883 = !DILocation(line: 293, column: 50, scope: !14854)
!14884 = !DILocation(line: 312, column: 1, scope: !2259)
!14885 = distinct !DISubprogram(name: "copy_bytes", scope: !2260, file: !2260, line: 261, type: !14886, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14888)
!14886 = !DISubroutineType(types: !14887)
!14887 = !{!132, !277, !132, !337, !132}
!14888 = !{!14889, !14890, !14891, !14892, !14893}
!14889 = !DILocalVariable(name: "dest", arg: 1, scope: !14885, file: !2260, line: 261, type: !277)
!14890 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14885, file: !2260, line: 261, type: !132)
!14891 = !DILocalVariable(name: "src", arg: 3, scope: !14885, file: !2260, line: 261, type: !337)
!14892 = !DILocalVariable(name: "src_size", arg: 4, scope: !14885, file: !2260, line: 261, type: !132)
!14893 = !DILocalVariable(name: "bytes_to_copy", scope: !14885, file: !2260, line: 263, type: !132)
!14894 = !DILocation(line: 0, scope: !14885)
!14895 = !DILocation(line: 265, column: 18, scope: !14885)
!14896 = !DILocation(line: 266, column: 2, scope: !14885)
!14897 = !DILocation(line: 268, column: 2, scope: !14885)
!14898 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2260, file: !2260, line: 383, type: !14899, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14901)
!14899 = !DISubroutineType(types: !14900)
!14900 = !{null, !2264}
!14901 = !{!14902}
!14902 = !DILocalVariable(name: "thread", arg: 1, scope: !14898, file: !2260, line: 383, type: !2264)
!14903 = !DILocation(line: 0, scope: !14898)
!14904 = !DILocation(line: 387, column: 2, scope: !14898)
!14905 = !DILocation(line: 388, column: 1, scope: !14898)
!14906 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2260, file: !2260, line: 528, type: !14907, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14914)
!14907 = !DISubroutineType(types: !14908)
!14908 = !{!277, !2264, !14909, !132, !321, !102, !102, !102, !103, !108, !337}
!14909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14910, size: 32)
!14910 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !314, line: 44, baseType: !14911)
!14911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !316, line: 47, size: 8, elements: !14912)
!14912 = !{!14913}
!14913 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14911, file: !316, line: 48, baseType: !278, size: 8)
!14914 = !{!14915, !14916, !14917, !14918, !14919, !14920, !14921, !14922, !14923, !14924, !14925}
!14915 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14906, file: !2260, line: 528, type: !2264)
!14916 = !DILocalVariable(name: "stack", arg: 2, scope: !14906, file: !2260, line: 529, type: !14909)
!14917 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14906, file: !2260, line: 529, type: !132)
!14918 = !DILocalVariable(name: "entry", arg: 4, scope: !14906, file: !2260, line: 530, type: !321)
!14919 = !DILocalVariable(name: "p1", arg: 5, scope: !14906, file: !2260, line: 531, type: !102)
!14920 = !DILocalVariable(name: "p2", arg: 6, scope: !14906, file: !2260, line: 531, type: !102)
!14921 = !DILocalVariable(name: "p3", arg: 7, scope: !14906, file: !2260, line: 531, type: !102)
!14922 = !DILocalVariable(name: "prio", arg: 8, scope: !14906, file: !2260, line: 532, type: !103)
!14923 = !DILocalVariable(name: "options", arg: 9, scope: !14906, file: !2260, line: 532, type: !108)
!14924 = !DILocalVariable(name: "name", arg: 10, scope: !14906, file: !2260, line: 532, type: !337)
!14925 = !DILocalVariable(name: "stack_ptr", scope: !14906, file: !2260, line: 534, type: !277)
!14926 = !DILocation(line: 0, scope: !14906)
!14927 = !DILocation(line: 550, column: 28, scope: !14906)
!14928 = !DILocation(line: 550, column: 2, scope: !14906)
!14929 = !DILocation(line: 553, column: 34, scope: !14906)
!14930 = !DILocation(line: 553, column: 2, scope: !14906)
!14931 = !DILocation(line: 554, column: 14, scope: !14906)
!14932 = !DILocation(line: 564, column: 2, scope: !14906)
!14933 = !DILocation(line: 567, column: 14, scope: !14906)
!14934 = !DILocation(line: 567, column: 24, scope: !14906)
!14935 = !DILocation(line: 612, column: 7, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14906, file: !2260, line: 612, column: 6)
!14937 = !DILocation(line: 612, column: 6, scope: !14906)
!14938 = !DILocation(line: 627, column: 40, scope: !14906)
!14939 = !DILocation(line: 637, column: 2, scope: !14906)
!14940 = !DILocation(line: 613, column: 15, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14936, file: !2260, line: 612, column: 17)
!14942 = !DILocation(line: 613, column: 29, scope: !14941)
!14943 = !DILocation(line: 638, column: 1, scope: !14906)
!14944 = distinct !DISubprogram(name: "z_waitq_init", scope: !14945, file: !14945, line: 47, type: !14946, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14948)
!14945 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14946 = !DISubroutineType(types: !14947)
!14947 = !{null, !2295}
!14948 = !{!14949}
!14949 = !DILocalVariable(name: "w", arg: 1, scope: !14944, file: !14945, line: 47, type: !2295)
!14950 = !DILocation(line: 0, scope: !14944)
!14951 = !DILocation(line: 49, column: 21, scope: !14944)
!14952 = !DILocation(line: 49, column: 2, scope: !14944)
!14953 = !DILocation(line: 50, column: 1, scope: !14944)
!14954 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2260, file: !2260, line: 791, type: !14955, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14958)
!14955 = !DISubroutineType(types: !14956)
!14956 = !{null, !14957, !103, !108, !32}
!14957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!14958 = !{!14959, !14960, !14961, !14962}
!14959 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14954, file: !2260, line: 791, type: !14957)
!14960 = !DILocalVariable(name: "priority", arg: 2, scope: !14954, file: !2260, line: 791, type: !103)
!14961 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14954, file: !2260, line: 792, type: !108)
!14962 = !DILocalVariable(name: "options", arg: 4, scope: !14954, file: !2260, line: 792, type: !32)
!14963 = !DILocation(line: 0, scope: !14954)
!14964 = !DILocation(line: 795, column: 15, scope: !14954)
!14965 = !DILocation(line: 795, column: 25, scope: !14954)
!14966 = !DILocation(line: 796, column: 30, scope: !14954)
!14967 = !DILocation(line: 796, column: 15, scope: !14954)
!14968 = !DILocation(line: 796, column: 28, scope: !14954)
!14969 = !DILocation(line: 797, column: 30, scope: !14954)
!14970 = !DILocation(line: 797, column: 15, scope: !14954)
!14971 = !DILocation(line: 797, column: 28, scope: !14954)
!14972 = !DILocation(line: 799, column: 22, scope: !14954)
!14973 = !DILocation(line: 799, column: 15, scope: !14954)
!14974 = !DILocation(line: 799, column: 20, scope: !14954)
!14975 = !DILocation(line: 801, column: 15, scope: !14954)
!14976 = !DILocation(line: 801, column: 28, scope: !14954)
!14977 = !DILocation(line: 814, column: 2, scope: !14954)
!14978 = !DILocation(line: 815, column: 1, scope: !14954)
!14979 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2260, file: !2260, line: 449, type: !14980, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !14982)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!277, !2264, !14909, !132}
!14982 = !{!14983, !14984, !14985, !14986, !14987, !14988, !14989, !14990}
!14983 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14979, file: !2260, line: 449, type: !2264)
!14984 = !DILocalVariable(name: "stack", arg: 2, scope: !14979, file: !2260, line: 450, type: !14909)
!14985 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14979, file: !2260, line: 450, type: !132)
!14986 = !DILocalVariable(name: "stack_obj_size", scope: !14979, file: !2260, line: 452, type: !132)
!14987 = !DILocalVariable(name: "stack_buf_size", scope: !14979, file: !2260, line: 452, type: !132)
!14988 = !DILocalVariable(name: "stack_ptr", scope: !14979, file: !2260, line: 453, type: !277)
!14989 = !DILocalVariable(name: "stack_buf_start", scope: !14979, file: !2260, line: 453, type: !277)
!14990 = !DILocalVariable(name: "delta", scope: !14979, file: !2260, line: 454, type: !132)
!14991 = !DILocation(line: 0, scope: !14979)
!14992 = !DILocation(line: 465, column: 20, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14979, file: !2260, line: 463, column: 2)
!14994 = !DILocation(line: 466, column: 21, scope: !14993)
!14995 = !DILocation(line: 473, column: 28, scope: !14979)
!14996 = !DILocation(line: 514, column: 33, scope: !14979)
!14997 = !DILocation(line: 514, column: 25, scope: !14979)
!14998 = !DILocation(line: 514, column: 31, scope: !14979)
!14999 = !DILocation(line: 515, column: 25, scope: !14979)
!15000 = !DILocation(line: 515, column: 30, scope: !14979)
!15001 = !DILocation(line: 516, column: 25, scope: !14979)
!15002 = !DILocation(line: 516, column: 31, scope: !14979)
!15003 = !DILocation(line: 520, column: 2, scope: !14979)
!15004 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !316, file: !316, line: 331, type: !15005, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15007)
!15005 = !DISubroutineType(types: !15006)
!15006 = !{!277, !14909}
!15007 = !{!15008}
!15008 = !DILocalVariable(name: "sym", arg: 1, scope: !15004, file: !316, line: 331, type: !14909)
!15009 = !DILocation(line: 0, scope: !15004)
!15010 = !DILocation(line: 333, column: 21, scope: !15004)
!15011 = !DILocation(line: 333, column: 2, scope: !15004)
!15012 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15013, file: !15013, line: 40, type: !15014, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15016)
!15013 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15014 = !DISubroutineType(types: !15015)
!15015 = !{null, !14957}
!15016 = !{!15017}
!15017 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15012, file: !15013, line: 40, type: !14957)
!15018 = !DILocation(line: 0, scope: !15012)
!15019 = !DILocation(line: 42, column: 31, scope: !15012)
!15020 = !DILocation(line: 42, column: 2, scope: !15012)
!15021 = !DILocation(line: 43, column: 1, scope: !15012)
!15022 = distinct !DISubprogram(name: "z_init_timeout", scope: !15013, file: !15013, line: 25, type: !2321, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15023)
!15023 = !{!15024}
!15024 = !DILocalVariable(name: "to", arg: 1, scope: !15022, file: !15013, line: 25, type: !2323)
!15025 = !DILocation(line: 0, scope: !15022)
!15026 = !DILocation(line: 27, column: 22, scope: !15022)
!15027 = !DILocation(line: 27, column: 2, scope: !15022)
!15028 = !DILocation(line: 28, column: 1, scope: !15022)
!15029 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !15030, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15032)
!15030 = !DISubroutineType(types: !15031)
!15031 = !{null, !2367}
!15032 = !{!15033}
!15033 = !DILocalVariable(name: "node", arg: 1, scope: !15029, file: !146, line: 211, type: !2367)
!15034 = !DILocation(line: 0, scope: !15029)
!15035 = !DILocation(line: 213, column: 8, scope: !15029)
!15036 = !DILocation(line: 213, column: 13, scope: !15029)
!15037 = !DILocation(line: 214, column: 8, scope: !15029)
!15038 = !DILocation(line: 214, column: 13, scope: !15029)
!15039 = !DILocation(line: 215, column: 1, scope: !15029)
!15040 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15041, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15044)
!15041 = !DISubroutineType(types: !15042)
!15042 = !{null, !15043}
!15043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!15044 = !{!15045}
!15045 = !DILocalVariable(name: "list", arg: 1, scope: !15040, file: !146, line: 197, type: !15043)
!15046 = !DILocation(line: 0, scope: !15040)
!15047 = !DILocation(line: 199, column: 8, scope: !15040)
!15048 = !DILocation(line: 199, column: 13, scope: !15040)
!15049 = !DILocation(line: 200, column: 8, scope: !15040)
!15050 = !DILocation(line: 200, column: 13, scope: !15040)
!15051 = !DILocation(line: 201, column: 1, scope: !15040)
!15052 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2260, file: !2260, line: 641, type: !15053, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15059)
!15053 = !DISubroutineType(types: !15054)
!15054 = !{!2263, !2264, !14909, !132, !321, !102, !102, !102, !103, !108, !15055}
!15055 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15056)
!15056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15057)
!15057 = !{!15058}
!15058 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15056, file: !105, line: 66, baseType: !104, size: 64)
!15059 = !{!15060, !15061, !15062, !15063, !15064, !15065, !15066, !15067, !15068, !15069}
!15060 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15052, file: !2260, line: 641, type: !2264)
!15061 = !DILocalVariable(name: "stack", arg: 2, scope: !15052, file: !2260, line: 642, type: !14909)
!15062 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15052, file: !2260, line: 643, type: !132)
!15063 = !DILocalVariable(name: "entry", arg: 4, scope: !15052, file: !2260, line: 643, type: !321)
!15064 = !DILocalVariable(name: "p1", arg: 5, scope: !15052, file: !2260, line: 644, type: !102)
!15065 = !DILocalVariable(name: "p2", arg: 6, scope: !15052, file: !2260, line: 644, type: !102)
!15066 = !DILocalVariable(name: "p3", arg: 7, scope: !15052, file: !2260, line: 644, type: !102)
!15067 = !DILocalVariable(name: "prio", arg: 8, scope: !15052, file: !2260, line: 645, type: !103)
!15068 = !DILocalVariable(name: "options", arg: 9, scope: !15052, file: !2260, line: 645, type: !108)
!15069 = !DILocalVariable(name: "delay", arg: 10, scope: !15052, file: !2260, line: 645, type: !15055)
!15070 = !DILocation(line: 0, scope: !15052)
!15071 = !DILocation(line: 649, column: 2, scope: !15052)
!15072 = !DILocation(line: 652, column: 7, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15052, file: !2260, line: 652, column: 6)
!15074 = !DILocation(line: 652, column: 6, scope: !15052)
!15075 = !DILocation(line: 653, column: 3, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15073, file: !2260, line: 652, column: 39)
!15077 = !DILocation(line: 654, column: 2, scope: !15076)
!15078 = !DILocation(line: 656, column: 2, scope: !15052)
!15079 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2260, file: !2260, line: 401, type: !15080, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15082)
!15080 = !DISubroutineType(types: !15081)
!15081 = !{null, !2264, !15055}
!15082 = !{!15083, !15084}
!15083 = !DILocalVariable(name: "thread", arg: 1, scope: !15079, file: !2260, line: 401, type: !2264)
!15084 = !DILocalVariable(name: "delay", arg: 2, scope: !15079, file: !2260, line: 401, type: !15055)
!15085 = !DILocation(line: 0, scope: !15079)
!15086 = !DILocation(line: 404, column: 6, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15079, file: !2260, line: 404, column: 6)
!15088 = !DILocation(line: 404, column: 6, scope: !15079)
!15089 = !DILocation(line: 405, column: 3, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15087, file: !2260, line: 404, column: 38)
!15091 = !DILocation(line: 406, column: 2, scope: !15090)
!15092 = !DILocation(line: 407, column: 3, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15087, file: !2260, line: 406, column: 9)
!15094 = !DILocation(line: 413, column: 1, scope: !15079)
!15095 = distinct !DISubprogram(name: "k_thread_start", scope: !3675, file: !3675, line: 205, type: !15096, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15098)
!15096 = !DISubroutineType(types: !15097)
!15097 = !{null, !2263}
!15098 = !{!15099}
!15099 = !DILocalVariable(name: "thread", arg: 1, scope: !15095, file: !3675, line: 205, type: !2263)
!15100 = !DILocation(line: 0, scope: !15095)
!15101 = !DILocation(line: 214, column: 2, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15095, file: !3675, line: 214, column: 2)
!15103 = !{i64 2155088137}
!15104 = !DILocation(line: 215, column: 2, scope: !15095)
!15105 = !DILocation(line: 216, column: 1, scope: !15095)
!15106 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15013, file: !15013, line: 47, type: !15080, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15107)
!15107 = !{!15108, !15109}
!15108 = !DILocalVariable(name: "thread", arg: 1, scope: !15106, file: !15013, line: 47, type: !2264)
!15109 = !DILocalVariable(name: "ticks", arg: 2, scope: !15106, file: !15013, line: 47, type: !15055)
!15110 = !DILocation(line: 0, scope: !15106)
!15111 = !DILocation(line: 49, column: 30, scope: !15106)
!15112 = !DILocation(line: 49, column: 2, scope: !15106)
!15113 = !DILocation(line: 50, column: 1, scope: !15106)
!15114 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2260, file: !2260, line: 748, type: !334, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15115)
!15115 = !{!15116, !15133}
!15116 = !DILocalVariable(name: "thread_data", scope: !15117, file: !2260, line: 750, type: !15118)
!15117 = distinct !DILexicalBlock(scope: !15114, file: !2260, line: 750, column: 2)
!15118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15119, size: 32)
!15119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !137, line: 620, size: 384, elements: !15120)
!15120 = !{!15121, !15122, !15123, !15124, !15125, !15126, !15127, !15128, !15129, !15130, !15131, !15132}
!15121 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15119, file: !137, line: 621, baseType: !2264, size: 32)
!15122 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15119, file: !137, line: 622, baseType: !14909, size: 32, offset: 32)
!15123 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15119, file: !137, line: 623, baseType: !32, size: 32, offset: 64)
!15124 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15119, file: !137, line: 624, baseType: !321, size: 32, offset: 96)
!15125 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15119, file: !137, line: 625, baseType: !102, size: 32, offset: 128)
!15126 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15119, file: !137, line: 626, baseType: !102, size: 32, offset: 160)
!15127 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15119, file: !137, line: 627, baseType: !102, size: 32, offset: 192)
!15128 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15119, file: !137, line: 628, baseType: !103, size: 32, offset: 224)
!15129 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15119, file: !137, line: 629, baseType: !108, size: 32, offset: 256)
!15130 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15119, file: !137, line: 630, baseType: !331, size: 32, offset: 288)
!15131 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15119, file: !137, line: 631, baseType: !333, size: 32, offset: 320)
!15132 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15119, file: !137, line: 632, baseType: !337, size: 32, offset: 352)
!15133 = !DILocalVariable(name: "thread_data", scope: !15134, file: !2260, line: 781, type: !15118)
!15134 = distinct !DILexicalBlock(scope: !15114, file: !2260, line: 781, column: 2)
!15135 = !DILocation(line: 0, scope: !15117)
!15136 = !DILocation(line: 750, column: 2, scope: !15117)
!15137 = !DILocation(line: 780, column: 2, scope: !15114)
!15138 = !DILocation(line: 0, scope: !15134)
!15139 = !DILocation(line: 781, column: 2, scope: !15134)
!15140 = !DILocation(line: 752, column: 17, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15142, file: !2260, line: 750, column: 38)
!15142 = distinct !DILexicalBlock(scope: !15117, file: !2260, line: 750, column: 2)
!15143 = !DILocation(line: 753, column: 17, scope: !15141)
!15144 = !DILocation(line: 754, column: 17, scope: !15141)
!15145 = !DILocation(line: 755, column: 17, scope: !15141)
!15146 = !DILocation(line: 756, column: 17, scope: !15141)
!15147 = !DILocation(line: 757, column: 17, scope: !15141)
!15148 = !DILocation(line: 758, column: 17, scope: !15141)
!15149 = !DILocation(line: 759, column: 17, scope: !15141)
!15150 = !DILocation(line: 760, column: 17, scope: !15141)
!15151 = !DILocation(line: 751, column: 3, scope: !15141)
!15152 = !DILocation(line: 763, column: 16, scope: !15141)
!15153 = !DILocation(line: 763, column: 29, scope: !15141)
!15154 = !DILocation(line: 763, column: 39, scope: !15141)
!15155 = !DILocation(line: 750, column: 2, scope: !15142)
!15156 = !DILocation(line: 750, column: 2, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15142, file: !2260, line: 750, column: 2)
!15158 = distinct !{!15158, !15136, !15159}
!15159 = !DILocation(line: 764, column: 2, scope: !15117)
!15160 = !DILocation(line: 787, column: 2, scope: !15114)
!15161 = !DILocation(line: 788, column: 1, scope: !15114)
!15162 = !DILocation(line: 782, column: 20, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15164, file: !2260, line: 782, column: 7)
!15164 = distinct !DILexicalBlock(scope: !15165, file: !2260, line: 781, column: 38)
!15165 = distinct !DILexicalBlock(scope: !15134, file: !2260, line: 781, column: 2)
!15166 = !DILocation(line: 782, column: 31, scope: !15163)
!15167 = !DILocation(line: 782, column: 7, scope: !15164)
!15168 = !DILocation(line: 783, column: 37, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15163, file: !2260, line: 782, column: 51)
!15170 = !DILocation(line: 784, column: 10, scope: !15169)
!15171 = !DILocation(line: 783, column: 4, scope: !15169)
!15172 = !DILocation(line: 785, column: 3, scope: !15169)
!15173 = !DILocation(line: 781, column: 2, scope: !15165)
!15174 = !DILocation(line: 781, column: 2, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15165, file: !2260, line: 781, column: 2)
!15176 = distinct !{!15176, !15139, !15177}
!15177 = !DILocation(line: 786, column: 2, scope: !15134)
!15178 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3661, file: !3661, line: 403, type: !3662, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15179)
!15179 = !{!15180}
!15180 = !DILocalVariable(name: "t", arg: 1, scope: !15178, file: !3661, line: 403, type: !109)
!15181 = !DILocation(line: 0, scope: !15178)
!15182 = !DILocalVariable(name: "t", arg: 1, scope: !15183, file: !3661, line: 102, type: !109)
!15183 = distinct !DISubprogram(name: "z_tmcvt", scope: !3661, file: !3661, line: 102, type: !3687, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15184)
!15184 = !{!15182, !15185, !15186, !15187, !15188, !15189, !15190, !15191, !15192, !15193, !15194}
!15185 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15183, file: !3661, line: 102, type: !108)
!15186 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15183, file: !3661, line: 103, type: !108)
!15187 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15183, file: !3661, line: 103, type: !131)
!15188 = !DILocalVariable(name: "result32", arg: 5, scope: !15183, file: !3661, line: 104, type: !131)
!15189 = !DILocalVariable(name: "round_up", arg: 6, scope: !15183, file: !3661, line: 104, type: !131)
!15190 = !DILocalVariable(name: "round_off", arg: 7, scope: !15183, file: !3661, line: 105, type: !131)
!15191 = !DILocalVariable(name: "mul_ratio", scope: !15183, file: !3661, line: 107, type: !131)
!15192 = !DILocalVariable(name: "div_ratio", scope: !15183, file: !3661, line: 109, type: !131)
!15193 = !DILocalVariable(name: "off", scope: !15183, file: !3661, line: 116, type: !109)
!15194 = !DILocalVariable(name: "rdivisor", scope: !15195, file: !3661, line: 119, type: !108)
!15195 = distinct !DILexicalBlock(scope: !15196, file: !3661, line: 118, column: 18)
!15196 = distinct !DILexicalBlock(scope: !15183, file: !3661, line: 118, column: 6)
!15197 = !DILocation(line: 0, scope: !15183, inlinedAt: !15198)
!15198 = distinct !DILocation(line: 406, column: 9, scope: !15178)
!15199 = !DILocation(line: 145, column: 13, scope: !15200, inlinedAt: !15198)
!15200 = distinct !DILexicalBlock(scope: !15201, file: !3661, line: 144, column: 10)
!15201 = distinct !DILexicalBlock(scope: !15202, file: !3661, line: 142, column: 7)
!15202 = distinct !DILexicalBlock(scope: !15203, file: !3661, line: 141, column: 24)
!15203 = distinct !DILexicalBlock(scope: !15204, file: !3661, line: 141, column: 13)
!15204 = distinct !DILexicalBlock(scope: !15183, file: !3661, line: 134, column: 6)
!15205 = !DILocation(line: 406, column: 2, scope: !15178)
!15206 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2260, file: !2260, line: 817, type: !4741, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15207)
!15207 = !{!15208, !15209, !15210, !15211}
!15208 = !DILocalVariable(name: "entry", arg: 1, scope: !15206, file: !2260, line: 817, type: !321)
!15209 = !DILocalVariable(name: "p1", arg: 2, scope: !15206, file: !2260, line: 818, type: !102)
!15210 = !DILocalVariable(name: "p2", arg: 3, scope: !15206, file: !2260, line: 818, type: !102)
!15211 = !DILocalVariable(name: "p3", arg: 4, scope: !15206, file: !2260, line: 818, type: !102)
!15212 = !DILocation(line: 0, scope: !15206)
!15213 = !DILocation(line: 822, column: 2, scope: !15206)
!15214 = !DILocation(line: 822, column: 17, scope: !15206)
!15215 = !DILocation(line: 822, column: 30, scope: !15206)
!15216 = !DILocation(line: 823, column: 2, scope: !15206)
!15217 = !DILocation(line: 845, column: 2, scope: !15206)
!15218 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2260, file: !2260, line: 888, type: !15219, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15221)
!15219 = !DISubroutineType(types: !15220)
!15220 = !{!103, !2264}
!15221 = !{!15222}
!15222 = !DILocalVariable(name: "thread", arg: 1, scope: !15218, file: !2260, line: 888, type: !2264)
!15223 = !DILocation(line: 0, scope: !15218)
!15224 = !DILocation(line: 893, column: 2, scope: !15218)
!15225 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2260, file: !2260, line: 897, type: !15226, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15228)
!15226 = !DISubroutineType(types: !15227)
!15227 = !{!103, !2264, !32}
!15228 = !{!15229, !15230}
!15229 = !DILocalVariable(name: "thread", arg: 1, scope: !15225, file: !2260, line: 897, type: !2264)
!15230 = !DILocalVariable(name: "options", arg: 2, scope: !15225, file: !2260, line: 897, type: !32)
!15231 = !DILocation(line: 0, scope: !15225)
!15232 = !DILocation(line: 902, column: 2, scope: !15225)
!15233 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2260, file: !2260, line: 1072, type: !15234, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15239)
!15234 = !DISubroutineType(types: !15235)
!15235 = !{!103, !2263, !15236}
!15236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15237, size: 32)
!15237 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !163, line: 234, baseType: !15238)
!15238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !163, line: 192, elements: !251)
!15239 = !{!15240, !15241}
!15240 = !DILocalVariable(name: "thread", arg: 1, scope: !15233, file: !2260, line: 1072, type: !2263)
!15241 = !DILocalVariable(name: "stats", arg: 2, scope: !15233, file: !2260, line: 1073, type: !15236)
!15242 = !DILocation(line: 0, scope: !15233)
!15243 = !DILocation(line: 1075, column: 14, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15233, file: !2260, line: 1075, column: 6)
!15245 = !DILocation(line: 1075, column: 23, scope: !15244)
!15246 = !DILocation(line: 1086, column: 1, scope: !15233)
!15247 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2260, file: !2260, line: 1088, type: !15248, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2364, retainedNodes: !15250)
!15248 = !DISubroutineType(types: !15249)
!15249 = !{!103, !15236}
!15250 = !{!15251}
!15251 = !DILocalVariable(name: "stats", arg: 1, scope: !15247, file: !2260, line: 1088, type: !15236)
!15252 = !DILocation(line: 0, scope: !15247)
!15253 = !DILocation(line: 1094, column: 12, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15247, file: !2260, line: 1094, column: 6)
!15255 = !DILocation(line: 1120, column: 1, scope: !15247)
!15256 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15257, file: !15257, line: 20, type: !334, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3294, retainedNodes: !251)
!15257 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15258 = !DILocation(line: 30, column: 2, scope: !15256)
!15259 = !DILocation(line: 31, column: 1, scope: !15256)
!15260 = distinct !DISubprogram(name: "idle", scope: !15257, file: !15257, line: 33, type: !323, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3294, retainedNodes: !15261)
!15261 = !{!15262, !15263, !15264}
!15262 = !DILocalVariable(name: "unused1", arg: 1, scope: !15260, file: !15257, line: 33, type: !102)
!15263 = !DILocalVariable(name: "unused2", arg: 2, scope: !15260, file: !15257, line: 33, type: !102)
!15264 = !DILocalVariable(name: "unused3", arg: 3, scope: !15260, file: !15257, line: 33, type: !102)
!15265 = !DILocation(line: 0, scope: !15260)
!15266 = !DILocation(line: 41, column: 2, scope: !15260)
!15267 = !DILocation(line: 55, column: 2, scope: !15268, inlinedAt: !15272)
!15268 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3294, retainedNodes: !15269)
!15269 = !{!15270, !15271}
!15270 = !DILocalVariable(name: "key", scope: !15268, file: !7059, line: 44, type: !32)
!15271 = !DILocalVariable(name: "tmp", scope: !15268, file: !7059, line: 53, type: !32)
!15272 = distinct !DILocation(line: 62, column: 10, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15260, file: !15257, line: 41, column: 15)
!15274 = !{i64 2279681}
!15275 = !DILocation(line: 0, scope: !15268, inlinedAt: !15272)
!15276 = !DILocation(line: 86, column: 3, scope: !15273)
!15277 = distinct !{!15277, !15266, !15278}
!15278 = !DILocation(line: 105, column: 2, scope: !15260)
!15279 = distinct !DISubprogram(name: "k_cpu_idle", scope: !137, file: !137, line: 5627, type: !334, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3294, retainedNodes: !251)
!15280 = !DILocation(line: 5629, column: 2, scope: !15279)
!15281 = !DILocation(line: 5630, column: 1, scope: !15279)
!15282 = !DISubprogram(name: "arch_cpu_idle", scope: !314, file: !314, line: 167, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!15283 = distinct !DISubprogram(name: "k_msgq_init", scope: !15284, file: !15284, line: 35, type: !15285, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15300)
!15284 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15285 = !DISubroutineType(types: !15286)
!15286 = !{null, !15287, !277, !132, !108}
!15287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15288, size: 32)
!15288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !137, line: 4204, size: 320, elements: !15289)
!15289 = !{!15290, !15291, !15292, !15293, !15294, !15295, !15296, !15297, !15298, !15299}
!15290 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15288, file: !137, line: 4206, baseType: !3332, size: 64)
!15291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15288, file: !137, line: 4208, baseType: !3394, offset: 64)
!15292 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15288, file: !137, line: 4210, baseType: !132, size: 32, offset: 64)
!15293 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15288, file: !137, line: 4212, baseType: !108, size: 32, offset: 96)
!15294 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !15288, file: !137, line: 4214, baseType: !277, size: 32, offset: 128)
!15295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !15288, file: !137, line: 4216, baseType: !277, size: 32, offset: 160)
!15296 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !15288, file: !137, line: 4218, baseType: !277, size: 32, offset: 192)
!15297 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !15288, file: !137, line: 4220, baseType: !277, size: 32, offset: 224)
!15298 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15288, file: !137, line: 4222, baseType: !108, size: 32, offset: 256)
!15299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15288, file: !137, line: 4227, baseType: !185, size: 8, offset: 288)
!15300 = !{!15301, !15302, !15303, !15304}
!15301 = !DILocalVariable(name: "msgq", arg: 1, scope: !15283, file: !15284, line: 35, type: !15287)
!15302 = !DILocalVariable(name: "buffer", arg: 2, scope: !15283, file: !15284, line: 35, type: !277)
!15303 = !DILocalVariable(name: "msg_size", arg: 3, scope: !15283, file: !15284, line: 35, type: !132)
!15304 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !15283, file: !15284, line: 36, type: !108)
!15305 = !DILocation(line: 0, scope: !15283)
!15306 = !DILocation(line: 38, column: 8, scope: !15283)
!15307 = !DILocation(line: 38, column: 17, scope: !15283)
!15308 = !DILocation(line: 39, column: 8, scope: !15283)
!15309 = !DILocation(line: 39, column: 17, scope: !15283)
!15310 = !DILocation(line: 40, column: 8, scope: !15283)
!15311 = !DILocation(line: 40, column: 21, scope: !15283)
!15312 = !DILocation(line: 41, column: 40, scope: !15283)
!15313 = !DILocation(line: 41, column: 28, scope: !15283)
!15314 = !DILocation(line: 41, column: 8, scope: !15283)
!15315 = !DILocation(line: 41, column: 19, scope: !15283)
!15316 = !DILocation(line: 42, column: 8, scope: !15283)
!15317 = !DILocation(line: 42, column: 17, scope: !15283)
!15318 = !DILocation(line: 43, column: 8, scope: !15283)
!15319 = !DILocation(line: 43, column: 18, scope: !15283)
!15320 = !DILocation(line: 44, column: 8, scope: !15283)
!15321 = !DILocation(line: 44, column: 18, scope: !15283)
!15322 = !DILocation(line: 45, column: 8, scope: !15283)
!15323 = !DILocation(line: 45, column: 14, scope: !15283)
!15324 = !DILocation(line: 46, column: 22, scope: !15283)
!15325 = !DILocation(line: 46, column: 2, scope: !15283)
!15326 = !DILocation(line: 55, column: 1, scope: !15283)
!15327 = distinct !DISubprogram(name: "z_waitq_init", scope: !14945, file: !14945, line: 47, type: !15328, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15330)
!15328 = !DISubroutineType(types: !15329)
!15329 = !{null, !3331}
!15330 = !{!15331}
!15331 = !DILocalVariable(name: "w", arg: 1, scope: !15327, file: !14945, line: 47, type: !3331)
!15332 = !DILocation(line: 0, scope: !15327)
!15333 = !DILocation(line: 49, column: 21, scope: !15327)
!15334 = !DILocation(line: 49, column: 2, scope: !15327)
!15335 = !DILocation(line: 50, column: 1, scope: !15327)
!15336 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15337, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15340)
!15337 = !DISubroutineType(types: !15338)
!15338 = !{null, !15339}
!15339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 32)
!15340 = !{!15341}
!15341 = !DILocalVariable(name: "list", arg: 1, scope: !15336, file: !146, line: 197, type: !15339)
!15342 = !DILocation(line: 0, scope: !15336)
!15343 = !DILocation(line: 199, column: 8, scope: !15336)
!15344 = !DILocation(line: 199, column: 13, scope: !15336)
!15345 = !DILocation(line: 200, column: 8, scope: !15336)
!15346 = !DILocation(line: 200, column: 13, scope: !15336)
!15347 = !DILocation(line: 201, column: 1, scope: !15336)
!15348 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !15284, file: !15284, line: 57, type: !15349, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15351)
!15349 = !DISubroutineType(types: !15350)
!15350 = !{!103, !15287, !132, !108}
!15351 = !{!15352, !15353, !15354, !15355, !15356, !15357}
!15352 = !DILocalVariable(name: "msgq", arg: 1, scope: !15348, file: !15284, line: 57, type: !15287)
!15353 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15348, file: !15284, line: 57, type: !132)
!15354 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15348, file: !15284, line: 58, type: !108)
!15355 = !DILocalVariable(name: "buffer", scope: !15348, file: !15284, line: 60, type: !102)
!15356 = !DILocalVariable(name: "ret", scope: !15348, file: !15284, line: 61, type: !103)
!15357 = !DILocalVariable(name: "total_size", scope: !15348, file: !15284, line: 62, type: !132)
!15358 = !DILocation(line: 0, scope: !15348)
!15359 = !DILocation(line: 62, column: 2, scope: !15348)
!15360 = !DILocation(line: 66, column: 6, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15348, file: !15284, line: 66, column: 6)
!15362 = !DILocation(line: 66, column: 6, scope: !15348)
!15363 = !DILocation(line: 69, column: 28, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15361, file: !15284, line: 68, column: 9)
!15365 = !DILocation(line: 69, column: 12, scope: !15364)
!15366 = !DILocation(line: 70, column: 14, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15364, file: !15284, line: 70, column: 7)
!15368 = !DILocation(line: 70, column: 7, scope: !15364)
!15369 = !DILocation(line: 71, column: 4, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15367, file: !15284, line: 70, column: 23)
!15371 = !DILocation(line: 72, column: 10, scope: !15370)
!15372 = !DILocation(line: 72, column: 16, scope: !15370)
!15373 = !DILocation(line: 74, column: 3, scope: !15370)
!15374 = !DILocation(line: 0, scope: !15361)
!15375 = !DILocation(line: 82, column: 1, scope: !15348)
!15376 = !DILocation(line: 81, column: 2, scope: !15348)
!15377 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15378, file: !15378, line: 105, type: !15379, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15381)
!15378 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15379 = !DISubroutineType(types: !15380)
!15380 = !{!131, !132, !132, !2785}
!15381 = !{!15382, !15383, !15384}
!15382 = !DILocalVariable(name: "a", arg: 1, scope: !15377, file: !15378, line: 105, type: !132)
!15383 = !DILocalVariable(name: "b", arg: 2, scope: !15377, file: !15378, line: 105, type: !132)
!15384 = !DILocalVariable(name: "result", arg: 3, scope: !15377, file: !15378, line: 105, type: !2785)
!15385 = !DILocation(line: 0, scope: !15377)
!15386 = !DILocation(line: 107, column: 9, scope: !15377)
!15387 = !DILocation(line: 107, column: 2, scope: !15377)
!15388 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15389, file: !15389, line: 102, type: !15390, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15391)
!15389 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15390 = !DISubroutineType(types: !3275)
!15391 = !{!15392}
!15392 = !DILocalVariable(name: "size", arg: 1, scope: !15388, file: !15389, line: 102, type: !132)
!15393 = !DILocation(line: 0, scope: !15388)
!15394 = !DILocation(line: 104, column: 9, scope: !15388)
!15395 = !DILocation(line: 104, column: 2, scope: !15388)
!15396 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !15284, file: !15284, line: 95, type: !15397, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15399)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{!103, !15287}
!15399 = !{!15400}
!15400 = !DILocalVariable(name: "msgq", arg: 1, scope: !15396, file: !15284, line: 95, type: !15287)
!15401 = !DILocation(line: 0, scope: !15396)
!15402 = !DILocation(line: 99, column: 2, scope: !15403)
!15403 = distinct !DILexicalBlock(scope: !15396, file: !15284, line: 99, column: 2)
!15404 = !DILocation(line: 99, column: 2, scope: !15396)
!15405 = !DILocation(line: 105, column: 13, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15396, file: !15284, line: 105, column: 6)
!15407 = !DILocation(line: 105, column: 19, scope: !15406)
!15408 = !DILocation(line: 105, column: 40, scope: !15406)
!15409 = !DILocation(line: 105, column: 6, scope: !15396)
!15410 = !DILocation(line: 106, column: 16, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15406, file: !15284, line: 105, column: 47)
!15412 = !DILocation(line: 106, column: 3, scope: !15411)
!15413 = !DILocation(line: 107, column: 15, scope: !15411)
!15414 = !DILocation(line: 108, column: 2, scope: !15411)
!15415 = !DILocation(line: 113, column: 1, scope: !15396)
!15416 = distinct !DISubprogram(name: "z_waitq_head", scope: !14945, file: !14945, line: 52, type: !15417, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15419)
!15417 = !DISubroutineType(types: !15418)
!15418 = !{!3314, !3331}
!15419 = !{!15420}
!15420 = !DILocalVariable(name: "w", arg: 1, scope: !15416, file: !14945, line: 52, type: !3331)
!15421 = !DILocation(line: 0, scope: !15416)
!15422 = !DILocation(line: 54, column: 52, scope: !15416)
!15423 = !DILocation(line: 54, column: 28, scope: !15416)
!15424 = !DILocation(line: 54, column: 9, scope: !15416)
!15425 = !DILocation(line: 54, column: 2, scope: !15416)
!15426 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15427, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15429)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{!3299, !15339}
!15429 = !{!15430}
!15430 = !DILocalVariable(name: "list", arg: 1, scope: !15426, file: !146, line: 294, type: !15339)
!15431 = !DILocation(line: 0, scope: !15426)
!15432 = !DILocation(line: 296, column: 9, scope: !15426)
!15433 = !DILocation(line: 296, column: 49, scope: !15426)
!15434 = !DILocation(line: 296, column: 2, scope: !15426)
!15435 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15436, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15438)
!15436 = !DISubroutineType(types: !15437)
!15437 = !{!131, !15339}
!15438 = !{!15439}
!15439 = !DILocalVariable(name: "list", arg: 1, scope: !15435, file: !146, line: 266, type: !15339)
!15440 = !DILocation(line: 0, scope: !15435)
!15441 = !DILocation(line: 268, column: 15, scope: !15435)
!15442 = !DILocation(line: 268, column: 20, scope: !15435)
!15443 = !DILocation(line: 268, column: 2, scope: !15435)
!15444 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !15284, file: !15284, line: 116, type: !15445, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15451)
!15445 = !DISubroutineType(types: !15446)
!15446 = !{!103, !15287, !13, !15447}
!15447 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15448)
!15448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15449)
!15449 = !{!15450}
!15450 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15448, file: !105, line: 66, baseType: !104, size: 64)
!15451 = !{!15452, !15453, !15454, !15455, !15456, !15461}
!15452 = !DILocalVariable(name: "msgq", arg: 1, scope: !15444, file: !15284, line: 116, type: !15287)
!15453 = !DILocalVariable(name: "data", arg: 2, scope: !15444, file: !15284, line: 116, type: !13)
!15454 = !DILocalVariable(name: "timeout", arg: 3, scope: !15444, file: !15284, line: 116, type: !15447)
!15455 = !DILocalVariable(name: "pending_thread", scope: !15444, file: !15284, line: 120, type: !3314)
!15456 = !DILocalVariable(name: "key", scope: !15444, file: !15284, line: 121, type: !15457)
!15457 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15458)
!15458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15459)
!15459 = !{!15460}
!15460 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15458, file: !250, line: 33, baseType: !103, size: 32)
!15461 = !DILocalVariable(name: "result", scope: !15444, file: !15284, line: 122, type: !103)
!15462 = !DILocation(line: 0, scope: !15444)
!15463 = !DILocation(line: 124, column: 27, scope: !15444)
!15464 = !DILocalVariable(name: "l", arg: 1, scope: !15465, file: !250, line: 136, type: !15468)
!15465 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15466, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15469)
!15466 = !DISubroutineType(types: !15467)
!15467 = !{!15457, !15468}
!15468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 32)
!15469 = !{!15464, !15470}
!15470 = !DILocalVariable(name: "k", scope: !15465, file: !250, line: 139, type: !15457)
!15471 = !DILocation(line: 0, scope: !15465, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 124, column: 8, scope: !15444)
!15473 = !DILocation(line: 55, column: 2, scope: !15474, inlinedAt: !15478)
!15474 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15475)
!15475 = !{!15476, !15477}
!15476 = !DILocalVariable(name: "key", scope: !15474, file: !7059, line: 44, type: !32)
!15477 = !DILocalVariable(name: "tmp", scope: !15474, file: !7059, line: 53, type: !32)
!15478 = distinct !DILocation(line: 145, column: 10, scope: !15465, inlinedAt: !15472)
!15479 = !{i64 2285818}
!15480 = !DILocation(line: 0, scope: !15474, inlinedAt: !15478)
!15481 = !DILocation(line: 128, column: 12, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15444, file: !15284, line: 128, column: 6)
!15483 = !DILocation(line: 128, column: 30, scope: !15482)
!15484 = !DILocation(line: 128, column: 22, scope: !15482)
!15485 = !DILocation(line: 128, column: 6, scope: !15444)
!15486 = !DILocation(line: 130, column: 49, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15482, file: !15284, line: 128, column: 40)
!15488 = !DILocation(line: 130, column: 20, scope: !15487)
!15489 = !DILocation(line: 131, column: 22, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15487, file: !15284, line: 131, column: 7)
!15491 = !DILocation(line: 131, column: 7, scope: !15487)
!15492 = !DILocation(line: 135, column: 38, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15490, file: !15284, line: 131, column: 31)
!15494 = !DILocation(line: 136, column: 17, scope: !15493)
!15495 = !DILocation(line: 135, column: 10, scope: !15493)
!15496 = !DILocalVariable(name: "thread", arg: 1, scope: !15497, file: !14640, line: 65, type: !3314)
!15497 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14640, file: !14640, line: 65, type: !15498, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15500)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{null, !3314, !32}
!15500 = !{!15496, !15501}
!15501 = !DILocalVariable(name: "value", arg: 2, scope: !15497, file: !14640, line: 65, type: !32)
!15502 = !DILocation(line: 0, scope: !15497, inlinedAt: !15503)
!15503 = distinct !DILocation(line: 138, column: 4, scope: !15493)
!15504 = !DILocation(line: 67, column: 15, scope: !15497, inlinedAt: !15503)
!15505 = !DILocation(line: 67, column: 33, scope: !15497, inlinedAt: !15503)
!15506 = !DILocation(line: 139, column: 4, scope: !15493)
!15507 = !DILocation(line: 140, column: 4, scope: !15493)
!15508 = !DILocation(line: 141, column: 4, scope: !15493)
!15509 = !DILocation(line: 144, column: 23, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15490, file: !15284, line: 142, column: 10)
!15511 = !DILocation(line: 144, column: 46, scope: !15510)
!15512 = !DILocation(line: 144, column: 10, scope: !15510)
!15513 = !DILocation(line: 145, column: 29, scope: !15510)
!15514 = !DILocation(line: 145, column: 20, scope: !15510)
!15515 = !DILocation(line: 146, column: 33, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15510, file: !15284, line: 146, column: 8)
!15517 = !DILocation(line: 146, column: 24, scope: !15516)
!15518 = !DILocation(line: 146, column: 8, scope: !15510)
!15519 = !DILocation(line: 147, column: 29, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15516, file: !15284, line: 146, column: 45)
!15521 = !DILocation(line: 147, column: 21, scope: !15520)
!15522 = !DILocation(line: 148, column: 4, scope: !15520)
!15523 = !DILocation(line: 149, column: 19, scope: !15510)
!15524 = !DILocation(line: 155, column: 2, scope: !15487)
!15525 = !DILocation(line: 155, column: 13, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15482, file: !15284, line: 155, column: 13)
!15527 = !DILocation(line: 155, column: 13, scope: !15482)
!15528 = !DILocation(line: 162, column: 3, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15526, file: !15284, line: 158, column: 9)
!15530 = !DILocation(line: 162, column: 18, scope: !15529)
!15531 = !DILocation(line: 162, column: 28, scope: !15529)
!15532 = !DILocation(line: 164, column: 49, scope: !15529)
!15533 = !DILocation(line: 164, column: 12, scope: !15529)
!15534 = !DILocation(line: 166, column: 3, scope: !15529)
!15535 = !DILocation(line: 0, scope: !15482)
!15536 = !DILocalVariable(name: "key", arg: 2, scope: !15537, file: !250, line: 190, type: !15457)
!15537 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15538, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15540)
!15538 = !DISubroutineType(types: !15539)
!15539 = !{null, !15468, !15457}
!15540 = !{!15541, !15536}
!15541 = !DILocalVariable(name: "l", arg: 1, scope: !15537, file: !250, line: 189, type: !15468)
!15542 = !DILocation(line: 0, scope: !15537, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 171, column: 2, scope: !15444)
!15544 = !DILocalVariable(name: "key", arg: 1, scope: !15545, file: !7059, line: 84, type: !32)
!15545 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15546)
!15546 = !{!15544}
!15547 = !DILocation(line: 0, scope: !15545, inlinedAt: !15548)
!15548 = distinct !DILocation(line: 215, column: 2, scope: !15537, inlinedAt: !15543)
!15549 = !DILocation(line: 95, column: 2, scope: !15545, inlinedAt: !15548)
!15550 = !{i64 2286635}
!15551 = !DILocation(line: 173, column: 2, scope: !15444)
!15552 = !DILocation(line: 174, column: 1, scope: !15444)
!15553 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !15284, file: !15284, line: 188, type: !15554, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15562)
!15554 = !DISubroutineType(types: !15555)
!15555 = !{null, !15287, !15556}
!15556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15557, size: 32)
!15557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !137, line: 4259, size: 96, elements: !15558)
!15558 = !{!15559, !15560, !15561}
!15559 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15557, file: !137, line: 4261, baseType: !132, size: 32)
!15560 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15557, file: !137, line: 4263, baseType: !108, size: 32, offset: 32)
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15557, file: !137, line: 4265, baseType: !108, size: 32, offset: 64)
!15562 = !{!15563, !15564}
!15563 = !DILocalVariable(name: "msgq", arg: 1, scope: !15553, file: !15284, line: 188, type: !15287)
!15564 = !DILocalVariable(name: "attrs", arg: 2, scope: !15553, file: !15284, line: 188, type: !15556)
!15565 = !DILocation(line: 0, scope: !15553)
!15566 = !DILocation(line: 190, column: 26, scope: !15553)
!15567 = !DILocation(line: 190, column: 9, scope: !15553)
!15568 = !DILocation(line: 190, column: 18, scope: !15553)
!15569 = !DILocation(line: 191, column: 26, scope: !15553)
!15570 = !DILocation(line: 191, column: 9, scope: !15553)
!15571 = !DILocation(line: 191, column: 18, scope: !15553)
!15572 = !DILocation(line: 192, column: 27, scope: !15553)
!15573 = !DILocation(line: 192, column: 9, scope: !15553)
!15574 = !DILocation(line: 192, column: 19, scope: !15553)
!15575 = !DILocation(line: 193, column: 1, scope: !15553)
!15576 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !15284, file: !15284, line: 206, type: !15577, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15579)
!15577 = !DISubroutineType(types: !15578)
!15578 = !{!103, !15287, !102, !15447}
!15579 = !{!15580, !15581, !15582, !15583, !15584, !15585}
!15580 = !DILocalVariable(name: "msgq", arg: 1, scope: !15576, file: !15284, line: 206, type: !15287)
!15581 = !DILocalVariable(name: "data", arg: 2, scope: !15576, file: !15284, line: 206, type: !102)
!15582 = !DILocalVariable(name: "timeout", arg: 3, scope: !15576, file: !15284, line: 206, type: !15447)
!15583 = !DILocalVariable(name: "key", scope: !15576, file: !15284, line: 210, type: !15457)
!15584 = !DILocalVariable(name: "pending_thread", scope: !15576, file: !15284, line: 211, type: !3314)
!15585 = !DILocalVariable(name: "result", scope: !15576, file: !15284, line: 212, type: !103)
!15586 = !DILocation(line: 0, scope: !15576)
!15587 = !DILocation(line: 214, column: 27, scope: !15576)
!15588 = !DILocation(line: 0, scope: !15465, inlinedAt: !15589)
!15589 = distinct !DILocation(line: 214, column: 8, scope: !15576)
!15590 = !DILocation(line: 55, column: 2, scope: !15474, inlinedAt: !15591)
!15591 = distinct !DILocation(line: 145, column: 10, scope: !15465, inlinedAt: !15589)
!15592 = !DILocation(line: 0, scope: !15474, inlinedAt: !15591)
!15593 = !DILocation(line: 218, column: 12, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15576, file: !15284, line: 218, column: 6)
!15595 = !DILocation(line: 218, column: 22, scope: !15594)
!15596 = !DILocation(line: 218, column: 6, scope: !15576)
!15597 = !DILocation(line: 220, column: 28, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15594, file: !15284, line: 218, column: 28)
!15599 = !DILocation(line: 220, column: 44, scope: !15598)
!15600 = !DILocation(line: 220, column: 9, scope: !15598)
!15601 = !DILocation(line: 221, column: 27, scope: !15598)
!15602 = !DILocation(line: 221, column: 18, scope: !15598)
!15603 = !DILocation(line: 222, column: 31, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15598, file: !15284, line: 222, column: 7)
!15605 = !DILocation(line: 222, column: 22, scope: !15604)
!15606 = !DILocation(line: 222, column: 7, scope: !15598)
!15607 = !DILocation(line: 223, column: 27, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15604, file: !15284, line: 222, column: 43)
!15609 = !DILocation(line: 223, column: 19, scope: !15608)
!15610 = !DILocation(line: 224, column: 3, scope: !15608)
!15611 = !DILocation(line: 225, column: 18, scope: !15598)
!15612 = !DILocation(line: 228, column: 49, scope: !15598)
!15613 = !DILocation(line: 228, column: 20, scope: !15598)
!15614 = !DILocation(line: 229, column: 22, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15598, file: !15284, line: 229, column: 7)
!15616 = !DILocation(line: 229, column: 7, scope: !15598)
!15617 = !DILocation(line: 233, column: 23, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15615, file: !15284, line: 229, column: 31)
!15619 = !DILocation(line: 233, column: 55, scope: !15618)
!15620 = !DILocation(line: 234, column: 17, scope: !15618)
!15621 = !DILocation(line: 233, column: 10, scope: !15618)
!15622 = !DILocation(line: 235, column: 29, scope: !15618)
!15623 = !DILocation(line: 235, column: 20, scope: !15618)
!15624 = !DILocation(line: 236, column: 33, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15618, file: !15284, line: 236, column: 8)
!15626 = !DILocation(line: 236, column: 24, scope: !15625)
!15627 = !DILocation(line: 236, column: 8, scope: !15618)
!15628 = !DILocation(line: 237, column: 29, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15625, file: !15284, line: 236, column: 45)
!15630 = !DILocation(line: 237, column: 21, scope: !15629)
!15631 = !DILocation(line: 238, column: 4, scope: !15629)
!15632 = !DILocation(line: 239, column: 19, scope: !15618)
!15633 = !DILocation(line: 0, scope: !15497, inlinedAt: !15634)
!15634 = distinct !DILocation(line: 242, column: 4, scope: !15618)
!15635 = !DILocation(line: 67, column: 15, scope: !15497, inlinedAt: !15634)
!15636 = !DILocation(line: 67, column: 33, scope: !15497, inlinedAt: !15634)
!15637 = !DILocation(line: 243, column: 4, scope: !15618)
!15638 = !DILocation(line: 244, column: 4, scope: !15618)
!15639 = !DILocation(line: 248, column: 4, scope: !15618)
!15640 = !DILocation(line: 251, column: 13, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15594, file: !15284, line: 251, column: 13)
!15642 = !DILocation(line: 251, column: 13, scope: !15594)
!15643 = !DILocation(line: 258, column: 3, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15641, file: !15284, line: 254, column: 9)
!15645 = !DILocation(line: 258, column: 18, scope: !15644)
!15646 = !DILocation(line: 258, column: 28, scope: !15644)
!15647 = !DILocation(line: 260, column: 49, scope: !15644)
!15648 = !DILocation(line: 260, column: 12, scope: !15644)
!15649 = !DILocation(line: 262, column: 3, scope: !15644)
!15650 = !DILocation(line: 0, scope: !15594)
!15651 = !DILocation(line: 0, scope: !15537, inlinedAt: !15652)
!15652 = distinct !DILocation(line: 267, column: 2, scope: !15576)
!15653 = !DILocation(line: 0, scope: !15545, inlinedAt: !15654)
!15654 = distinct !DILocation(line: 215, column: 2, scope: !15537, inlinedAt: !15652)
!15655 = !DILocation(line: 95, column: 2, scope: !15545, inlinedAt: !15654)
!15656 = !DILocation(line: 269, column: 2, scope: !15576)
!15657 = !DILocation(line: 270, column: 1, scope: !15576)
!15658 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !15284, file: !15284, line: 284, type: !15659, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15661)
!15659 = !DISubroutineType(types: !15660)
!15660 = !{!103, !15287, !102}
!15661 = !{!15662, !15663, !15664, !15665}
!15662 = !DILocalVariable(name: "msgq", arg: 1, scope: !15658, file: !15284, line: 284, type: !15287)
!15663 = !DILocalVariable(name: "data", arg: 2, scope: !15658, file: !15284, line: 284, type: !102)
!15664 = !DILocalVariable(name: "key", scope: !15658, file: !15284, line: 286, type: !15457)
!15665 = !DILocalVariable(name: "result", scope: !15658, file: !15284, line: 287, type: !103)
!15666 = !DILocation(line: 0, scope: !15658)
!15667 = !DILocation(line: 0, scope: !15465, inlinedAt: !15668)
!15668 = distinct !DILocation(line: 289, column: 8, scope: !15658)
!15669 = !DILocation(line: 55, column: 2, scope: !15474, inlinedAt: !15670)
!15670 = distinct !DILocation(line: 145, column: 10, scope: !15465, inlinedAt: !15668)
!15671 = !DILocation(line: 0, scope: !15474, inlinedAt: !15670)
!15672 = !DILocation(line: 291, column: 12, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15658, file: !15284, line: 291, column: 6)
!15674 = !DILocation(line: 291, column: 22, scope: !15673)
!15675 = !DILocation(line: 291, column: 6, scope: !15658)
!15676 = !DILocation(line: 293, column: 28, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15673, file: !15284, line: 291, column: 28)
!15678 = !DILocation(line: 293, column: 44, scope: !15677)
!15679 = !DILocation(line: 293, column: 9, scope: !15677)
!15680 = !DILocation(line: 295, column: 2, scope: !15677)
!15681 = !DILocation(line: 0, scope: !15673)
!15682 = !DILocation(line: 0, scope: !15537, inlinedAt: !15683)
!15683 = distinct !DILocation(line: 302, column: 2, scope: !15658)
!15684 = !DILocation(line: 0, scope: !15545, inlinedAt: !15685)
!15685 = distinct !DILocation(line: 215, column: 2, scope: !15537, inlinedAt: !15683)
!15686 = !DILocation(line: 95, column: 2, scope: !15545, inlinedAt: !15685)
!15687 = !DILocation(line: 304, column: 2, scope: !15658)
!15688 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !15284, file: !15284, line: 318, type: !15689, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3296, retainedNodes: !15691)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{null, !15287}
!15691 = !{!15692, !15693, !15694}
!15692 = !DILocalVariable(name: "msgq", arg: 1, scope: !15688, file: !15284, line: 318, type: !15287)
!15693 = !DILocalVariable(name: "key", scope: !15688, file: !15284, line: 320, type: !15457)
!15694 = !DILocalVariable(name: "pending_thread", scope: !15688, file: !15284, line: 321, type: !3314)
!15695 = !DILocation(line: 0, scope: !15688)
!15696 = !DILocation(line: 0, scope: !15465, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 323, column: 8, scope: !15688)
!15698 = !DILocation(line: 55, column: 2, scope: !15474, inlinedAt: !15699)
!15699 = distinct !DILocation(line: 145, column: 10, scope: !15465, inlinedAt: !15697)
!15700 = !DILocation(line: 0, scope: !15474, inlinedAt: !15699)
!15701 = !DILocation(line: 328, column: 27, scope: !15688)
!15702 = !DILocation(line: 328, column: 65, scope: !15688)
!15703 = !DILocation(line: 328, column: 2, scope: !15688)
!15704 = !DILocation(line: 0, scope: !15497, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 329, column: 3, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15688, file: !15284, line: 328, column: 74)
!15707 = !DILocation(line: 67, column: 15, scope: !15497, inlinedAt: !15705)
!15708 = !DILocation(line: 67, column: 33, scope: !15497, inlinedAt: !15705)
!15709 = !DILocation(line: 330, column: 3, scope: !15706)
!15710 = distinct !{!15710, !15703, !15711}
!15711 = !DILocation(line: 331, column: 2, scope: !15688)
!15712 = !DILocation(line: 323, column: 27, scope: !15688)
!15713 = !DILocation(line: 333, column: 8, scope: !15688)
!15714 = !DILocation(line: 333, column: 18, scope: !15688)
!15715 = !DILocation(line: 334, column: 25, scope: !15688)
!15716 = !DILocation(line: 334, column: 8, scope: !15688)
!15717 = !DILocation(line: 334, column: 17, scope: !15688)
!15718 = !DILocation(line: 336, column: 2, scope: !15688)
!15719 = !DILocation(line: 337, column: 1, scope: !15688)
!15720 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2489, file: !2489, line: 49, type: !15721, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15730)
!15721 = !DISubroutineType(types: !15722)
!15722 = !{!103, !15723}
!15723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15724, size: 32)
!15724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !137, line: 2720, size: 160, elements: !15725)
!15725 = !{!15726, !15727, !15728, !15729}
!15726 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15724, file: !137, line: 2722, baseType: !2420, size: 64)
!15727 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !15724, file: !137, line: 2724, baseType: !2402, size: 32, offset: 64)
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !15724, file: !137, line: 2727, baseType: !108, size: 32, offset: 96)
!15729 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !15724, file: !137, line: 2730, baseType: !103, size: 32, offset: 128)
!15730 = !{!15731}
!15731 = !DILocalVariable(name: "mutex", arg: 1, scope: !15720, file: !2489, line: 49, type: !15723)
!15732 = !DILocation(line: 0, scope: !15720)
!15733 = !DILocation(line: 51, column: 9, scope: !15720)
!15734 = !DILocation(line: 51, column: 15, scope: !15720)
!15735 = !DILocation(line: 52, column: 9, scope: !15720)
!15736 = !DILocation(line: 52, column: 20, scope: !15720)
!15737 = !DILocation(line: 54, column: 23, scope: !15720)
!15738 = !DILocation(line: 54, column: 2, scope: !15720)
!15739 = !DILocation(line: 60, column: 2, scope: !15720)
!15740 = distinct !DISubprogram(name: "z_waitq_init", scope: !14945, file: !14945, line: 47, type: !15741, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15743)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{null, !2419}
!15743 = !{!15744}
!15744 = !DILocalVariable(name: "w", arg: 1, scope: !15740, file: !14945, line: 47, type: !2419)
!15745 = !DILocation(line: 0, scope: !15740)
!15746 = !DILocation(line: 49, column: 21, scope: !15740)
!15747 = !DILocation(line: 49, column: 2, scope: !15740)
!15748 = !DILocation(line: 50, column: 1, scope: !15740)
!15749 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !15750, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15753)
!15750 = !DISubroutineType(types: !15751)
!15751 = !{null, !15752}
!15752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!15753 = !{!15754}
!15754 = !DILocalVariable(name: "list", arg: 1, scope: !15749, file: !146, line: 197, type: !15752)
!15755 = !DILocation(line: 0, scope: !15749)
!15756 = !DILocation(line: 199, column: 8, scope: !15749)
!15757 = !DILocation(line: 199, column: 13, scope: !15749)
!15758 = !DILocation(line: 200, column: 8, scope: !15749)
!15759 = !DILocation(line: 200, column: 13, scope: !15749)
!15760 = !DILocation(line: 201, column: 1, scope: !15749)
!15761 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2489, file: !2489, line: 95, type: !15762, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15768)
!15762 = !DISubroutineType(types: !15763)
!15763 = !{!103, !15723, !15764}
!15764 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15765)
!15765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15766)
!15766 = !{!15767}
!15767 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15765, file: !105, line: 66, baseType: !104, size: 64)
!15768 = !{!15769, !15770, !15771, !15772, !15777, !15778, !15779}
!15769 = !DILocalVariable(name: "mutex", arg: 1, scope: !15761, file: !2489, line: 95, type: !15723)
!15770 = !DILocalVariable(name: "timeout", arg: 2, scope: !15761, file: !2489, line: 95, type: !15764)
!15771 = !DILocalVariable(name: "new_prio", scope: !15761, file: !2489, line: 97, type: !103)
!15772 = !DILocalVariable(name: "key", scope: !15761, file: !2489, line: 98, type: !15773)
!15773 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !15774)
!15774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !15775)
!15775 = !{!15776}
!15776 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15774, file: !250, line: 33, baseType: !103, size: 32)
!15777 = !DILocalVariable(name: "resched", scope: !15761, file: !2489, line: 99, type: !131)
!15778 = !DILocalVariable(name: "got_mutex", scope: !15761, file: !2489, line: 146, type: !103)
!15779 = !DILocalVariable(name: "waiter", scope: !15780, file: !2489, line: 169, type: !2402)
!15780 = distinct !DILexicalBlock(scope: !15781, file: !2489, line: 168, column: 36)
!15781 = distinct !DILexicalBlock(scope: !15761, file: !2489, line: 168, column: 6)
!15782 = !DILocation(line: 0, scope: !15761)
!15783 = !DILocalVariable(name: "l", arg: 1, scope: !15784, file: !250, line: 136, type: !15787)
!15784 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !15785, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15788)
!15785 = !DISubroutineType(types: !15786)
!15786 = !{!15773, !15787}
!15787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!15788 = !{!15783, !15789}
!15789 = !DILocalVariable(name: "k", scope: !15784, file: !250, line: 139, type: !15773)
!15790 = !DILocation(line: 0, scope: !15784, inlinedAt: !15791)
!15791 = distinct !DILocation(line: 105, column: 8, scope: !15761)
!15792 = !DILocation(line: 55, column: 2, scope: !15793, inlinedAt: !15797)
!15793 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15794)
!15794 = !{!15795, !15796}
!15795 = !DILocalVariable(name: "key", scope: !15793, file: !7059, line: 44, type: !32)
!15796 = !DILocalVariable(name: "tmp", scope: !15793, file: !7059, line: 53, type: !32)
!15797 = distinct !DILocation(line: 145, column: 10, scope: !15784, inlinedAt: !15791)
!15798 = !{i64 2284089}
!15799 = !DILocation(line: 0, scope: !15793, inlinedAt: !15797)
!15800 = !DILocation(line: 107, column: 6, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15761, file: !2489, line: 107, column: 6)
!15802 = !DILocation(line: 107, column: 6, scope: !15761)
!15803 = !{!"branch_weights", i32 2000, i32 1}
!15804 = !DILocation(line: 110, column: 6, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15801, file: !2489, line: 107, column: 71)
!15806 = !DILocation(line: 110, column: 21, scope: !15805)
!15807 = !DILocation(line: 109, column: 28, scope: !15805)
!15808 = !DILocation(line: 111, column: 13, scope: !15805)
!15809 = !DILocation(line: 114, column: 18, scope: !15805)
!15810 = !DILocation(line: 109, column: 10, scope: !15805)
!15811 = !DILocation(line: 109, column: 26, scope: !15805)
!15812 = !DILocation(line: 113, column: 20, scope: !15805)
!15813 = !DILocation(line: 114, column: 10, scope: !15805)
!15814 = !DILocation(line: 114, column: 16, scope: !15805)
!15815 = !DILocalVariable(name: "key", arg: 2, scope: !15816, file: !250, line: 190, type: !15773)
!15816 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !15817, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15819)
!15817 = !DISubroutineType(types: !15818)
!15818 = !{null, !15787, !15773}
!15819 = !{!15820, !15815}
!15820 = !DILocalVariable(name: "l", arg: 1, scope: !15816, file: !250, line: 189, type: !15787)
!15821 = !DILocation(line: 0, scope: !15816, inlinedAt: !15822)
!15822 = distinct !DILocation(line: 120, column: 3, scope: !15805)
!15823 = !DILocalVariable(name: "key", arg: 1, scope: !15824, file: !7059, line: 84, type: !32)
!15824 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15825)
!15825 = !{!15823}
!15826 = !DILocation(line: 0, scope: !15824, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 215, column: 2, scope: !15816, inlinedAt: !15822)
!15828 = !DILocation(line: 95, column: 2, scope: !15824, inlinedAt: !15827)
!15829 = !{i64 2284906}
!15830 = !DILocation(line: 124, column: 3, scope: !15805)
!15831 = !DILocation(line: 127, column: 6, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15761, file: !2489, line: 127, column: 6)
!15833 = !DILocation(line: 127, column: 6, scope: !15761)
!15834 = !{!"branch_weights", i32 1, i32 2000}
!15835 = !DILocation(line: 0, scope: !15816, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 128, column: 3, scope: !15837)
!15837 = distinct !DILexicalBlock(scope: !15832, file: !2489, line: 127, column: 50)
!15838 = !DILocation(line: 0, scope: !15824, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 215, column: 2, scope: !15816, inlinedAt: !15836)
!15840 = !DILocation(line: 95, column: 2, scope: !15824, inlinedAt: !15839)
!15841 = !DILocation(line: 132, column: 3, scope: !15837)
!15842 = !DILocation(line: 137, column: 53, scope: !15761)
!15843 = !DILocation(line: 137, column: 38, scope: !15761)
!15844 = !DILocation(line: 138, column: 29, scope: !15761)
!15845 = !DILocation(line: 138, column: 10, scope: !15761)
!15846 = !DILocation(line: 137, column: 13, scope: !15761)
!15847 = !DILocation(line: 142, column: 6, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15761, file: !2489, line: 142, column: 6)
!15849 = !DILocation(line: 142, column: 6, scope: !15761)
!15850 = !DILocation(line: 143, column: 13, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15848, file: !2489, line: 142, column: 59)
!15852 = !DILocation(line: 144, column: 2, scope: !15851)
!15853 = !DILocation(line: 146, column: 50, scope: !15761)
!15854 = !DILocation(line: 146, column: 18, scope: !15761)
!15855 = !DILocation(line: 153, column: 16, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15761, file: !2489, line: 153, column: 6)
!15857 = !DILocation(line: 153, column: 6, scope: !15761)
!15858 = !DILocation(line: 0, scope: !15784, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 162, column: 8, scope: !15761)
!15860 = !DILocation(line: 55, column: 2, scope: !15793, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 145, column: 10, scope: !15784, inlinedAt: !15859)
!15862 = !DILocation(line: 0, scope: !15793, inlinedAt: !15861)
!15863 = !DILocation(line: 168, column: 6, scope: !15781)
!15864 = !DILocation(line: 168, column: 6, scope: !15761)
!15865 = !DILocation(line: 169, column: 29, scope: !15780)
!15866 = !DILocation(line: 0, scope: !15780)
!15867 = !DILocation(line: 171, column: 22, scope: !15780)
!15868 = !DILocation(line: 171, column: 14, scope: !15780)
!15869 = !DILocation(line: 172, column: 42, scope: !15780)
!15870 = !DILocation(line: 172, column: 29, scope: !15780)
!15871 = !DILocation(line: 172, column: 55, scope: !15780)
!15872 = !DILocation(line: 172, column: 4, scope: !15780)
!15873 = !DILocation(line: 173, column: 11, scope: !15780)
!15874 = !DILocation(line: 177, column: 13, scope: !15780)
!15875 = !DILocation(line: 177, column: 48, scope: !15780)
!15876 = !DILocation(line: 180, column: 6, scope: !15761)
!15877 = !DILocation(line: 181, column: 3, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15879, file: !2489, line: 180, column: 15)
!15879 = distinct !DILexicalBlock(scope: !15761, file: !2489, line: 180, column: 6)
!15880 = !DILocation(line: 182, column: 2, scope: !15878)
!15881 = !DILocation(line: 0, scope: !15816, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 183, column: 3, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15879, file: !2489, line: 182, column: 9)
!15884 = !DILocation(line: 0, scope: !15824, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 215, column: 2, scope: !15816, inlinedAt: !15882)
!15886 = !DILocation(line: 95, column: 2, scope: !15824, inlinedAt: !15885)
!15887 = !DILocation(line: 189, column: 1, scope: !15761)
!15888 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2489, file: !2489, line: 72, type: !15889, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15891)
!15889 = !DISubroutineType(types: !15890)
!15890 = !{!331, !331, !331}
!15891 = !{!15892, !15893, !15894}
!15892 = !DILocalVariable(name: "target", arg: 1, scope: !15888, file: !2489, line: 72, type: !331)
!15893 = !DILocalVariable(name: "limit", arg: 2, scope: !15888, file: !2489, line: 72, type: !331)
!15894 = !DILocalVariable(name: "new_prio", scope: !15888, file: !2489, line: 74, type: !103)
!15895 = !DILocation(line: 0, scope: !15888)
!15896 = !DILocation(line: 74, column: 17, scope: !15888)
!15897 = !DILocation(line: 76, column: 13, scope: !15888)
!15898 = !DILocation(line: 78, column: 2, scope: !15888)
!15899 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14620, file: !14620, line: 211, type: !15900, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15902)
!15900 = !DISubroutineType(types: !15901)
!15901 = !{!131, !103, !103}
!15902 = !{!15903, !15904}
!15903 = !DILocalVariable(name: "prio", arg: 1, scope: !15899, file: !14620, line: 211, type: !103)
!15904 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15899, file: !14620, line: 211, type: !103)
!15905 = !DILocation(line: 0, scope: !15899)
!15906 = !DILocation(line: 213, column: 9, scope: !15899)
!15907 = !DILocation(line: 213, column: 2, scope: !15899)
!15908 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2489, file: !2489, line: 81, type: !15909, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15911)
!15909 = !DISubroutineType(types: !15910)
!15910 = !{!131, !15723, !331}
!15911 = !{!15912, !15913}
!15912 = !DILocalVariable(name: "mutex", arg: 1, scope: !15908, file: !2489, line: 81, type: !15723)
!15913 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15908, file: !2489, line: 81, type: !331)
!15914 = !DILocation(line: 0, scope: !15908)
!15915 = !DILocation(line: 83, column: 13, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15908, file: !2489, line: 83, column: 6)
!15917 = !DILocation(line: 83, column: 25, scope: !15916)
!15918 = !DILocation(line: 83, column: 6, scope: !15916)
!15919 = !DILocation(line: 83, column: 30, scope: !15916)
!15920 = !DILocation(line: 83, column: 6, scope: !15908)
!15921 = !DILocation(line: 90, column: 10, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15916, file: !2489, line: 83, column: 43)
!15923 = !DILocation(line: 90, column: 3, scope: !15922)
!15924 = !DILocation(line: 93, column: 1, scope: !15908)
!15925 = distinct !DISubprogram(name: "z_waitq_head", scope: !14945, file: !14945, line: 52, type: !15926, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15928)
!15926 = !DISubroutineType(types: !15927)
!15927 = !{!2402, !2419}
!15928 = !{!15929}
!15929 = !DILocalVariable(name: "w", arg: 1, scope: !15925, file: !14945, line: 52, type: !2419)
!15930 = !DILocation(line: 0, scope: !15925)
!15931 = !DILocation(line: 54, column: 52, scope: !15925)
!15932 = !DILocation(line: 54, column: 28, scope: !15925)
!15933 = !DILocation(line: 54, column: 9, scope: !15925)
!15934 = !DILocation(line: 54, column: 2, scope: !15925)
!15935 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !15936, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15938)
!15936 = !DISubroutineType(types: !15937)
!15937 = !{!2387, !15752}
!15938 = !{!15939}
!15939 = !DILocalVariable(name: "list", arg: 1, scope: !15935, file: !146, line: 294, type: !15752)
!15940 = !DILocation(line: 0, scope: !15935)
!15941 = !DILocation(line: 296, column: 9, scope: !15935)
!15942 = !DILocation(line: 296, column: 49, scope: !15935)
!15943 = !DILocation(line: 296, column: 2, scope: !15935)
!15944 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !15945, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15947)
!15945 = !DISubroutineType(types: !15946)
!15946 = !{!131, !15752}
!15947 = !{!15948}
!15948 = !DILocalVariable(name: "list", arg: 1, scope: !15944, file: !146, line: 266, type: !15752)
!15949 = !DILocation(line: 0, scope: !15944)
!15950 = !DILocation(line: 268, column: 15, scope: !15944)
!15951 = !DILocation(line: 268, column: 20, scope: !15944)
!15952 = !DILocation(line: 268, column: 2, scope: !15944)
!15953 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14620, file: !14620, line: 206, type: !15900, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15954)
!15954 = !{!15955, !15956}
!15955 = !DILocalVariable(name: "prio1", arg: 1, scope: !15953, file: !14620, line: 206, type: !103)
!15956 = !DILocalVariable(name: "prio2", arg: 2, scope: !15953, file: !14620, line: 206, type: !103)
!15957 = !DILocation(line: 0, scope: !15953)
!15958 = !DILocation(line: 208, column: 15, scope: !15953)
!15959 = !DILocation(line: 208, column: 2, scope: !15953)
!15960 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !14620, file: !14620, line: 186, type: !396, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15961)
!15961 = !{!15962}
!15962 = !DILocalVariable(name: "prio", arg: 1, scope: !15960, file: !14620, line: 186, type: !103)
!15963 = !DILocation(line: 0, scope: !15960)
!15964 = !DILocation(line: 188, column: 9, scope: !15960)
!15965 = !DILocation(line: 188, column: 2, scope: !15960)
!15966 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !14620, file: !14620, line: 181, type: !15967, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15969)
!15967 = !DISubroutineType(types: !15968)
!15968 = !{!131, !103}
!15969 = !{!15970}
!15970 = !DILocalVariable(name: "prio", arg: 1, scope: !15966, file: !14620, line: 181, type: !103)
!15971 = !DILocation(line: 0, scope: !15966)
!15972 = !DILocation(line: 183, column: 14, scope: !15966)
!15973 = !DILocation(line: 183, column: 2, scope: !15966)
!15974 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2489, file: !2489, line: 201, type: !15721, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !15975)
!15975 = !{!15976, !15977, !15978, !15979}
!15976 = !DILocalVariable(name: "mutex", arg: 1, scope: !15974, file: !2489, line: 201, type: !15723)
!15977 = !DILocalVariable(name: "new_owner", scope: !15974, file: !2489, line: 203, type: !2402)
!15978 = !DILocalVariable(name: "key", scope: !15974, file: !2489, line: 242, type: !15773)
!15979 = !DILabel(scope: !15974, name: "k_mutex_unlock_return", file: !2489, line: 270)
!15980 = !DILocation(line: 0, scope: !15974)
!15981 = !DILocation(line: 209, column: 2, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15974, file: !2489, line: 209, column: 2)
!15983 = !DILocation(line: 209, column: 2, scope: !15974)
!15984 = !DILocation(line: 217, column: 2, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15974, file: !2489, line: 217, column: 2)
!15986 = !DILocation(line: 217, column: 2, scope: !15974)
!15987 = !DILocation(line: 237, column: 13, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15974, file: !2489, line: 237, column: 6)
!15989 = !DILocation(line: 237, column: 24, scope: !15988)
!15990 = !DILocation(line: 237, column: 6, scope: !15974)
!15991 = !DILocation(line: 238, column: 20, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15988, file: !2489, line: 237, column: 30)
!15993 = !DILocation(line: 239, column: 3, scope: !15992)
!15994 = !DILocation(line: 0, scope: !15784, inlinedAt: !15995)
!15995 = distinct !DILocation(line: 242, column: 25, scope: !15974)
!15996 = !DILocation(line: 55, column: 2, scope: !15793, inlinedAt: !15997)
!15997 = distinct !DILocation(line: 145, column: 10, scope: !15784, inlinedAt: !15995)
!15998 = !DILocation(line: 0, scope: !15793, inlinedAt: !15997)
!15999 = !DILocation(line: 244, column: 34, scope: !15974)
!16000 = !DILocation(line: 244, column: 2, scope: !15974)
!16001 = !DILocation(line: 247, column: 44, scope: !15974)
!16002 = !DILocation(line: 247, column: 14, scope: !15974)
!16003 = !DILocation(line: 249, column: 15, scope: !15974)
!16004 = !DILocation(line: 254, column: 16, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15974, file: !2489, line: 254, column: 6)
!16006 = !DILocation(line: 254, column: 6, scope: !15974)
!16007 = !DILocation(line: 260, column: 44, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16005, file: !2489, line: 254, column: 25)
!16009 = !DILocation(line: 260, column: 28, scope: !16008)
!16010 = !DILocation(line: 260, column: 26, scope: !16008)
!16011 = !DILocalVariable(name: "thread", arg: 1, scope: !16012, file: !14640, line: 65, type: !2402)
!16012 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14640, file: !14640, line: 65, type: !16013, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2384, retainedNodes: !16015)
!16013 = !DISubroutineType(types: !16014)
!16014 = !{null, !2402, !32}
!16015 = !{!16011, !16016}
!16016 = !DILocalVariable(name: "value", arg: 2, scope: !16012, file: !14640, line: 65, type: !32)
!16017 = !DILocation(line: 0, scope: !16012, inlinedAt: !16018)
!16018 = distinct !DILocation(line: 261, column: 3, scope: !16008)
!16019 = !DILocation(line: 67, column: 15, scope: !16012, inlinedAt: !16018)
!16020 = !DILocation(line: 67, column: 33, scope: !16012, inlinedAt: !16018)
!16021 = !DILocation(line: 262, column: 3, scope: !16008)
!16022 = !DILocation(line: 263, column: 3, scope: !16008)
!16023 = !DILocation(line: 264, column: 2, scope: !16008)
!16024 = !DILocation(line: 265, column: 21, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !16005, file: !2489, line: 264, column: 9)
!16026 = !DILocation(line: 0, scope: !15816, inlinedAt: !16027)
!16027 = distinct !DILocation(line: 266, column: 3, scope: !16025)
!16028 = !DILocation(line: 0, scope: !15824, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 215, column: 2, scope: !15816, inlinedAt: !16027)
!16030 = !DILocation(line: 95, column: 2, scope: !15824, inlinedAt: !16029)
!16031 = !DILocation(line: 274, column: 1, scope: !15974)
!16032 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2600, file: !2600, line: 93, type: !16033, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16035)
!16033 = !DISubroutineType(types: !16034)
!16034 = !{!331, !2495, !2495}
!16035 = !{!16036, !16037, !16038, !16039}
!16036 = !DILocalVariable(name: "thread_1", arg: 1, scope: !16032, file: !2600, line: 93, type: !2495)
!16037 = !DILocalVariable(name: "thread_2", arg: 2, scope: !16032, file: !2600, line: 94, type: !2495)
!16038 = !DILocalVariable(name: "b1", scope: !16032, file: !2600, line: 97, type: !331)
!16039 = !DILocalVariable(name: "b2", scope: !16032, file: !2600, line: 98, type: !331)
!16040 = !DILocation(line: 0, scope: !16032)
!16041 = !DILocation(line: 97, column: 30, scope: !16032)
!16042 = !DILocation(line: 98, column: 30, scope: !16032)
!16043 = !DILocation(line: 100, column: 9, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16032, file: !2600, line: 100, column: 6)
!16045 = !DILocation(line: 100, column: 6, scope: !16032)
!16046 = !DILocation(line: 125, column: 1, scope: !16032)
!16047 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2600, file: !2600, line: 428, type: !16048, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16050)
!16048 = !DISubroutineType(types: !16049)
!16049 = !{null, !2495}
!16050 = !{!16051}
!16051 = !DILocalVariable(name: "curr", arg: 1, scope: !16047, file: !2600, line: 428, type: !2495)
!16052 = !DILocation(line: 0, scope: !16047)
!16053 = !DILocation(line: 434, column: 6, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16047, file: !2600, line: 434, column: 6)
!16055 = !DILocation(line: 434, column: 23, scope: !16054)
!16056 = !DILocation(line: 434, column: 6, scope: !16047)
!16057 = !DILocation(line: 435, column: 50, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16054, file: !2600, line: 434, column: 29)
!16059 = !DILocation(line: 435, column: 48, scope: !16058)
!16060 = !DILocation(line: 435, column: 29, scope: !16058)
!16061 = !DILocation(line: 436, column: 24, scope: !16058)
!16062 = !DILocation(line: 436, column: 3, scope: !16058)
!16063 = !DILocation(line: 437, column: 2, scope: !16058)
!16064 = !DILocation(line: 438, column: 1, scope: !16047)
!16065 = distinct !DISubprogram(name: "slice_time", scope: !2600, file: !2600, line: 407, type: !16066, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16068)
!16066 = !DISubroutineType(types: !16067)
!16067 = !{!103, !2495}
!16068 = !{!16069, !16070}
!16069 = !DILocalVariable(name: "curr", arg: 1, scope: !16065, file: !2600, line: 407, type: !2495)
!16070 = !DILocalVariable(name: "ret", scope: !16065, file: !2600, line: 409, type: !103)
!16071 = !DILocation(line: 0, scope: !16065)
!16072 = !DILocation(line: 409, column: 12, scope: !16065)
!16073 = !DILocation(line: 416, column: 2, scope: !16065)
!16074 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2600, file: !2600, line: 440, type: !16075, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16077)
!16075 = !DISubroutineType(types: !16076)
!16076 = !{null, !331, !103}
!16077 = !{!16078, !16079, !16080, !16086}
!16078 = !DILocalVariable(name: "slice", arg: 1, scope: !16074, file: !2600, line: 440, type: !331)
!16079 = !DILocalVariable(name: "prio", arg: 2, scope: !16074, file: !2600, line: 440, type: !103)
!16080 = !DILocalVariable(name: "__i", scope: !16081, file: !2600, line: 442, type: !16082)
!16081 = distinct !DILexicalBlock(scope: !16074, file: !2600, line: 442, column: 2)
!16082 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !16083)
!16083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !16084)
!16084 = !{!16085}
!16085 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16083, file: !250, line: 33, baseType: !103, size: 32)
!16086 = !DILocalVariable(name: "__key", scope: !16081, file: !2600, line: 442, type: !16082)
!16087 = !DILocation(line: 0, scope: !16074)
!16088 = !DILocation(line: 0, scope: !16081)
!16089 = !DILocalVariable(name: "l", arg: 1, scope: !16090, file: !250, line: 136, type: !16093)
!16090 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !16091, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16094)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{!16082, !16093}
!16093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!16094 = !{!16089, !16095}
!16095 = !DILocalVariable(name: "k", scope: !16090, file: !250, line: 139, type: !16082)
!16096 = !DILocation(line: 0, scope: !16090, inlinedAt: !16097)
!16097 = distinct !DILocation(line: 442, column: 2, scope: !16081)
!16098 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16103)
!16099 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16100)
!16100 = !{!16101, !16102}
!16101 = !DILocalVariable(name: "key", scope: !16099, file: !7059, line: 44, type: !32)
!16102 = !DILocalVariable(name: "tmp", scope: !16099, file: !7059, line: 53, type: !32)
!16103 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16097)
!16104 = !{i64 2323652}
!16105 = !DILocation(line: 0, scope: !16099, inlinedAt: !16103)
!16106 = !DILocation(line: 443, column: 29, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16108, file: !2600, line: 442, column: 26)
!16108 = distinct !DILexicalBlock(scope: !16081, file: !2600, line: 442, column: 2)
!16109 = !DILocation(line: 444, column: 17, scope: !16107)
!16110 = !DILocation(line: 445, column: 51, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16107, file: !2600, line: 445, column: 7)
!16112 = !DILocation(line: 445, column: 7, scope: !16107)
!16113 = !DILocation(line: 0, scope: !16107)
!16114 = !DILocation(line: 451, column: 18, scope: !16107)
!16115 = !DILocation(line: 452, column: 3, scope: !16107)
!16116 = !DILocalVariable(name: "key", arg: 2, scope: !16117, file: !250, line: 190, type: !16082)
!16117 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !16118, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16120)
!16118 = !DISubroutineType(types: !16119)
!16119 = !{null, !16093, !16082}
!16120 = !{!16121, !16116}
!16121 = !DILocalVariable(name: "l", arg: 1, scope: !16117, file: !250, line: 189, type: !16093)
!16122 = !DILocation(line: 0, scope: !16117, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 442, column: 2, scope: !16108)
!16124 = !DILocalVariable(name: "key", arg: 1, scope: !16125, file: !7059, line: 84, type: !32)
!16125 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16126)
!16126 = !{!16124}
!16127 = !DILocation(line: 0, scope: !16125, inlinedAt: !16128)
!16128 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16123)
!16129 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16128)
!16130 = !{i64 2324469}
!16131 = !DILocation(line: 454, column: 1, scope: !16074)
!16132 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3661, file: !3661, line: 389, type: !8620, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16133)
!16133 = !{!16134}
!16134 = !DILocalVariable(name: "t", arg: 1, scope: !16132, file: !3661, line: 389, type: !108)
!16135 = !DILocation(line: 0, scope: !16132)
!16136 = !DILocalVariable(name: "t", arg: 1, scope: !16137, file: !3661, line: 102, type: !109)
!16137 = distinct !DISubprogram(name: "z_tmcvt", scope: !3661, file: !3661, line: 102, type: !3687, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16138)
!16138 = !{!16136, !16139, !16140, !16141, !16142, !16143, !16144, !16145, !16146, !16147, !16148}
!16139 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16137, file: !3661, line: 102, type: !108)
!16140 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16137, file: !3661, line: 103, type: !108)
!16141 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16137, file: !3661, line: 103, type: !131)
!16142 = !DILocalVariable(name: "result32", arg: 5, scope: !16137, file: !3661, line: 104, type: !131)
!16143 = !DILocalVariable(name: "round_up", arg: 6, scope: !16137, file: !3661, line: 104, type: !131)
!16144 = !DILocalVariable(name: "round_off", arg: 7, scope: !16137, file: !3661, line: 105, type: !131)
!16145 = !DILocalVariable(name: "mul_ratio", scope: !16137, file: !3661, line: 107, type: !131)
!16146 = !DILocalVariable(name: "div_ratio", scope: !16137, file: !3661, line: 109, type: !131)
!16147 = !DILocalVariable(name: "off", scope: !16137, file: !3661, line: 116, type: !109)
!16148 = !DILocalVariable(name: "rdivisor", scope: !16149, file: !3661, line: 119, type: !108)
!16149 = distinct !DILexicalBlock(scope: !16150, file: !3661, line: 118, column: 18)
!16150 = distinct !DILexicalBlock(scope: !16137, file: !3661, line: 118, column: 6)
!16151 = !DILocation(line: 0, scope: !16137, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 392, column: 9, scope: !16132)
!16153 = !DILocation(line: 143, column: 25, scope: !16154, inlinedAt: !16152)
!16154 = distinct !DILexicalBlock(scope: !16155, file: !3661, line: 142, column: 17)
!16155 = distinct !DILexicalBlock(scope: !16156, file: !3661, line: 142, column: 7)
!16156 = distinct !DILexicalBlock(scope: !16157, file: !3661, line: 141, column: 24)
!16157 = distinct !DILexicalBlock(scope: !16158, file: !3661, line: 141, column: 13)
!16158 = distinct !DILexicalBlock(scope: !16137, file: !3661, line: 134, column: 6)
!16159 = !DILocation(line: 392, column: 2, scope: !16132)
!16160 = distinct !DISubprogram(name: "z_time_slice", scope: !2600, file: !2600, line: 502, type: !9636, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16161)
!16161 = !{!16162, !16163}
!16162 = !DILocalVariable(name: "ticks", arg: 1, scope: !16160, file: !2600, line: 502, type: !103)
!16163 = !DILocalVariable(name: "key", scope: !16160, file: !2600, line: 511, type: !16082)
!16164 = !DILocation(line: 0, scope: !16160)
!16165 = !DILocation(line: 0, scope: !16090, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 511, column: 25, scope: !16160)
!16167 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16168)
!16168 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16166)
!16169 = !DILocation(line: 0, scope: !16099, inlinedAt: !16168)
!16170 = !DILocation(line: 514, column: 6, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16160, file: !2600, line: 514, column: 6)
!16172 = !DILocation(line: 514, column: 25, scope: !16171)
!16173 = !DILocation(line: 514, column: 22, scope: !16171)
!16174 = !DILocation(line: 514, column: 6, scope: !16160)
!16175 = !DILocation(line: 515, column: 3, scope: !16176)
!16176 = distinct !DILexicalBlock(scope: !16171, file: !2600, line: 514, column: 35)
!16177 = !DILocation(line: 0, scope: !16117, inlinedAt: !16178)
!16178 = distinct !DILocation(line: 516, column: 3, scope: !16176)
!16179 = !DILocation(line: 0, scope: !16125, inlinedAt: !16180)
!16180 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16178)
!16181 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16180)
!16182 = !DILocation(line: 517, column: 3, scope: !16176)
!16183 = !DILocation(line: 519, column: 18, scope: !16160)
!16184 = !DILocation(line: 522, column: 6, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16160, file: !2600, line: 522, column: 6)
!16186 = !DILocation(line: 522, column: 27, scope: !16185)
!16187 = !DILocation(line: 522, column: 30, scope: !16185)
!16188 = !DILocation(line: 522, column: 6, scope: !16160)
!16189 = !DILocation(line: 523, column: 30, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16191, file: !2600, line: 523, column: 7)
!16191 = distinct !DILexicalBlock(scope: !16185, file: !2600, line: 522, column: 51)
!16192 = !DILocation(line: 523, column: 13, scope: !16190)
!16193 = !DILocation(line: 523, column: 7, scope: !16191)
!16194 = !DILocation(line: 530, column: 10, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16190, file: !2600, line: 523, column: 43)
!16196 = !DILocation(line: 531, column: 3, scope: !16195)
!16197 = !DILocation(line: 532, column: 30, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16190, file: !2600, line: 531, column: 10)
!16199 = !DILocation(line: 535, column: 29, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16185, file: !2600, line: 534, column: 9)
!16201 = !DILocation(line: 0, scope: !16117, inlinedAt: !16202)
!16202 = distinct !DILocation(line: 537, column: 2, scope: !16160)
!16203 = !DILocation(line: 0, scope: !16125, inlinedAt: !16204)
!16204 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16202)
!16205 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16204)
!16206 = !DILocation(line: 538, column: 1, scope: !16160)
!16207 = distinct !DISubprogram(name: "sliceable", scope: !2600, file: !2600, line: 468, type: !16208, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16210)
!16208 = !DISubroutineType(types: !16209)
!16209 = !{!131, !2495}
!16210 = !{!16211, !16212}
!16211 = !DILocalVariable(name: "thread", arg: 1, scope: !16207, file: !2600, line: 468, type: !2495)
!16212 = !DILocalVariable(name: "ret", scope: !16207, file: !2600, line: 470, type: !131)
!16213 = !DILocation(line: 0, scope: !16207)
!16214 = !DILocation(line: 470, column: 13, scope: !16207)
!16215 = !DILocation(line: 471, column: 3, scope: !16207)
!16216 = !DILocation(line: 471, column: 7, scope: !16207)
!16217 = !DILocation(line: 472, column: 3, scope: !16207)
!16218 = !DILocation(line: 472, column: 37, scope: !16207)
!16219 = !DILocation(line: 472, column: 24, scope: !16207)
!16220 = !DILocation(line: 472, column: 43, scope: !16207)
!16221 = !DILocation(line: 472, column: 7, scope: !16207)
!16222 = !DILocation(line: 473, column: 3, scope: !16207)
!16223 = !DILocation(line: 473, column: 7, scope: !16207)
!16224 = !DILocation(line: 473, column: 6, scope: !16207)
!16225 = !DILocation(line: 479, column: 2, scope: !16207)
!16226 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2600, file: !2600, line: 482, type: !16227, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16229)
!16227 = !DISubroutineType(types: !16228)
!16228 = !{!16082, !16082}
!16229 = !{!16230, !16231}
!16230 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16226, file: !2600, line: 482, type: !16082)
!16231 = !DILocalVariable(name: "curr", scope: !16226, file: !2600, line: 484, type: !2495)
!16232 = !DILocation(line: 0, scope: !16226)
!16233 = !DILocation(line: 484, column: 26, scope: !16226)
!16234 = !DILocation(line: 493, column: 7, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16226, file: !2600, line: 493, column: 6)
!16236 = !DILocation(line: 493, column: 6, scope: !16226)
!16237 = !DILocation(line: 494, column: 3, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16235, file: !2600, line: 493, column: 49)
!16239 = !DILocation(line: 495, column: 2, scope: !16238)
!16240 = !DILocation(line: 496, column: 2, scope: !16226)
!16241 = !DILocation(line: 499, column: 1, scope: !16226)
!16242 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14620, file: !14620, line: 106, type: !16208, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16243)
!16243 = !{!16244, !16245}
!16244 = !DILocalVariable(name: "thread", arg: 1, scope: !16242, file: !14620, line: 106, type: !2495)
!16245 = !DILocalVariable(name: "state", scope: !16242, file: !14620, line: 108, type: !185)
!16246 = !DILocation(line: 0, scope: !16242)
!16247 = !DILocation(line: 108, column: 31, scope: !16242)
!16248 = !DILocation(line: 110, column: 16, scope: !16242)
!16249 = !DILocation(line: 111, column: 41, scope: !16242)
!16250 = !DILocation(line: 110, column: 2, scope: !16242)
!16251 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2600, file: !2600, line: 393, type: !16048, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16252)
!16252 = !{!16253}
!16253 = !DILocalVariable(name: "thread", arg: 1, scope: !16251, file: !2600, line: 393, type: !2495)
!16254 = !DILocation(line: 0, scope: !16251)
!16255 = !DILocation(line: 395, column: 6, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16251, file: !2600, line: 395, column: 6)
!16257 = !DILocation(line: 395, column: 6, scope: !16251)
!16258 = !DILocalVariable(name: "thread", arg: 1, scope: !16259, file: !2600, line: 264, type: !2495)
!16259 = distinct !DISubprogram(name: "dequeue_thread", scope: !2600, file: !2600, line: 264, type: !16048, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16260)
!16260 = !{!16258}
!16261 = !DILocation(line: 0, scope: !16259, inlinedAt: !16262)
!16262 = distinct !DILocation(line: 396, column: 3, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16256, file: !2600, line: 395, column: 34)
!16264 = !DILocation(line: 266, column: 15, scope: !16259, inlinedAt: !16262)
!16265 = !DILocation(line: 266, column: 28, scope: !16259, inlinedAt: !16262)
!16266 = !DILocalVariable(name: "thread", arg: 1, scope: !16267, file: !2600, line: 232, type: !2495)
!16267 = distinct !DISubprogram(name: "runq_remove", scope: !2600, file: !2600, line: 232, type: !16048, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16268)
!16268 = !{!16266}
!16269 = !DILocation(line: 0, scope: !16267, inlinedAt: !16270)
!16270 = distinct !DILocation(line: 268, column: 3, scope: !16271, inlinedAt: !16262)
!16271 = distinct !DILexicalBlock(scope: !16272, file: !2600, line: 267, column: 35)
!16272 = distinct !DILexicalBlock(scope: !16259, file: !2600, line: 267, column: 6)
!16273 = !DILocation(line: 234, column: 2, scope: !16267, inlinedAt: !16270)
!16274 = !DILocation(line: 397, column: 2, scope: !16263)
!16275 = !DILocalVariable(name: "thread", arg: 1, scope: !16276, file: !2600, line: 250, type: !2495)
!16276 = distinct !DISubprogram(name: "queue_thread", scope: !2600, file: !2600, line: 250, type: !16048, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16277)
!16277 = !{!16275}
!16278 = !DILocation(line: 0, scope: !16276, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 398, column: 2, scope: !16251)
!16280 = !DILocation(line: 252, column: 15, scope: !16276, inlinedAt: !16279)
!16281 = !DILocation(line: 252, column: 28, scope: !16276, inlinedAt: !16279)
!16282 = !DILocalVariable(name: "thread", arg: 1, scope: !16283, file: !2600, line: 227, type: !2495)
!16283 = distinct !DISubprogram(name: "runq_add", scope: !2600, file: !2600, line: 227, type: !16048, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16284)
!16284 = !{!16282}
!16285 = !DILocation(line: 0, scope: !16283, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 254, column: 3, scope: !16287, inlinedAt: !16279)
!16287 = distinct !DILexicalBlock(scope: !16288, file: !2600, line: 253, column: 35)
!16288 = distinct !DILexicalBlock(scope: !16276, file: !2600, line: 253, column: 6)
!16289 = !DILocalVariable(name: "pq", arg: 1, scope: !16290, file: !2600, line: 181, type: !16293)
!16290 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2600, file: !2600, line: 181, type: !16291, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16294)
!16291 = !DISubroutineType(types: !16292)
!16292 = !{null, !16293, !2495}
!16293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!16294 = !{!16289, !16295, !16296}
!16295 = !DILocalVariable(name: "thread", arg: 2, scope: !16290, file: !2600, line: 182, type: !2495)
!16296 = !DILocalVariable(name: "t", scope: !16290, file: !2600, line: 184, type: !2495)
!16297 = !DILocation(line: 0, scope: !16290, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 229, column: 2, scope: !16283, inlinedAt: !16286)
!16299 = !DILocation(line: 188, column: 2, scope: !16300, inlinedAt: !16298)
!16300 = distinct !DILexicalBlock(scope: !16290, file: !2600, line: 188, column: 2)
!16301 = !DILocation(line: 188, column: 2, scope: !16302, inlinedAt: !16298)
!16302 = distinct !DILexicalBlock(scope: !16300, file: !2600, line: 188, column: 2)
!16303 = !DILocation(line: 0, scope: !16300, inlinedAt: !16298)
!16304 = !DILocation(line: 189, column: 7, scope: !16305, inlinedAt: !16298)
!16305 = distinct !DILexicalBlock(scope: !16306, file: !2600, line: 189, column: 7)
!16306 = distinct !DILexicalBlock(scope: !16302, file: !2600, line: 188, column: 56)
!16307 = !DILocation(line: 189, column: 35, scope: !16305, inlinedAt: !16298)
!16308 = !DILocation(line: 189, column: 7, scope: !16306, inlinedAt: !16298)
!16309 = !DILocation(line: 191, column: 21, scope: !16310, inlinedAt: !16298)
!16310 = distinct !DILexicalBlock(scope: !16305, file: !2600, line: 189, column: 40)
!16311 = !DILocation(line: 190, column: 4, scope: !16310, inlinedAt: !16298)
!16312 = !DILocation(line: 192, column: 4, scope: !16310, inlinedAt: !16298)
!16313 = distinct !{!16313, !16299, !16314}
!16314 = !DILocation(line: 194, column: 2, scope: !16300, inlinedAt: !16298)
!16315 = !DILocation(line: 196, column: 37, scope: !16290, inlinedAt: !16298)
!16316 = !DILocation(line: 196, column: 2, scope: !16290, inlinedAt: !16298)
!16317 = !DILocation(line: 197, column: 1, scope: !16290, inlinedAt: !16298)
!16318 = !DILocation(line: 399, column: 25, scope: !16251)
!16319 = !DILocation(line: 399, column: 22, scope: !16251)
!16320 = !DILocation(line: 399, column: 2, scope: !16251)
!16321 = !DILocation(line: 400, column: 1, scope: !16251)
!16322 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14620, file: !14620, line: 136, type: !16208, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16323)
!16323 = !{!16324}
!16324 = !DILocalVariable(name: "thread", arg: 1, scope: !16322, file: !14620, line: 136, type: !2495)
!16325 = !DILocation(line: 0, scope: !16322)
!16326 = !DILocation(line: 138, column: 9, scope: !16322)
!16327 = !DILocation(line: 138, column: 2, scope: !16322)
!16328 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2600, file: !2600, line: 1137, type: !16291, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16329)
!16329 = !{!16330, !16331}
!16330 = !DILocalVariable(name: "pq", arg: 1, scope: !16328, file: !2600, line: 1137, type: !16293)
!16331 = !DILocalVariable(name: "thread", arg: 2, scope: !16328, file: !2600, line: 1137, type: !2495)
!16332 = !DILocation(line: 0, scope: !16328)
!16333 = !DILocation(line: 1141, column: 33, scope: !16328)
!16334 = !DILocation(line: 1141, column: 2, scope: !16328)
!16335 = !DILocation(line: 1142, column: 1, scope: !16328)
!16336 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !16337, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16339)
!16337 = !DISubroutineType(types: !16338)
!16338 = !{!2596, !16293}
!16339 = !{!16340}
!16340 = !DILocalVariable(name: "list", arg: 1, scope: !16336, file: !146, line: 294, type: !16293)
!16341 = !DILocation(line: 0, scope: !16336)
!16342 = !DILocation(line: 296, column: 9, scope: !16336)
!16343 = !DILocation(line: 296, column: 49, scope: !16336)
!16344 = !DILocation(line: 296, column: 2, scope: !16336)
!16345 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !16346, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16348)
!16346 = !DISubroutineType(types: !16347)
!16347 = !{null, !2596, !2596}
!16348 = !{!16349, !16350, !16351}
!16349 = !DILocalVariable(name: "successor", arg: 1, scope: !16345, file: !146, line: 443, type: !2596)
!16350 = !DILocalVariable(name: "node", arg: 2, scope: !16345, file: !146, line: 443, type: !2596)
!16351 = !DILocalVariable(name: "prev", scope: !16345, file: !146, line: 445, type: !16352)
!16352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2596)
!16353 = !DILocation(line: 0, scope: !16345)
!16354 = !DILocation(line: 445, column: 39, scope: !16345)
!16355 = !DILocation(line: 447, column: 8, scope: !16345)
!16356 = !DILocation(line: 447, column: 13, scope: !16345)
!16357 = !DILocation(line: 448, column: 8, scope: !16345)
!16358 = !DILocation(line: 448, column: 13, scope: !16345)
!16359 = !DILocation(line: 449, column: 8, scope: !16345)
!16360 = !DILocation(line: 449, column: 13, scope: !16345)
!16361 = !DILocation(line: 450, column: 18, scope: !16345)
!16362 = !DILocation(line: 451, column: 1, scope: !16345)
!16363 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !16364, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16366)
!16364 = !DISubroutineType(types: !16365)
!16365 = !{!2596, !16293, !2596}
!16366 = !{!16367, !16368}
!16367 = !DILocalVariable(name: "list", arg: 1, scope: !16363, file: !146, line: 341, type: !16293)
!16368 = !DILocalVariable(name: "node", arg: 2, scope: !16363, file: !146, line: 342, type: !2596)
!16369 = !DILocation(line: 0, scope: !16363)
!16370 = !DILocation(line: 344, column: 15, scope: !16363)
!16371 = !DILocation(line: 344, column: 9, scope: !16363)
!16372 = !DILocation(line: 344, column: 26, scope: !16363)
!16373 = !DILocation(line: 344, column: 2, scope: !16363)
!16374 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !16375, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16377)
!16375 = !DISubroutineType(types: !16376)
!16376 = !{null, !16293, !2596}
!16377 = !{!16378, !16379, !16380}
!16378 = !DILocalVariable(name: "list", arg: 1, scope: !16374, file: !146, line: 404, type: !16293)
!16379 = !DILocalVariable(name: "node", arg: 2, scope: !16374, file: !146, line: 404, type: !2596)
!16380 = !DILocalVariable(name: "tail", scope: !16374, file: !146, line: 406, type: !16352)
!16381 = !DILocation(line: 0, scope: !16374)
!16382 = !DILocation(line: 406, column: 34, scope: !16374)
!16383 = !DILocation(line: 408, column: 8, scope: !16374)
!16384 = !DILocation(line: 408, column: 13, scope: !16374)
!16385 = !DILocation(line: 409, column: 8, scope: !16374)
!16386 = !DILocation(line: 409, column: 13, scope: !16374)
!16387 = !DILocation(line: 411, column: 8, scope: !16374)
!16388 = !DILocation(line: 411, column: 13, scope: !16374)
!16389 = !DILocation(line: 412, column: 13, scope: !16374)
!16390 = !DILocation(line: 413, column: 1, scope: !16374)
!16391 = distinct !DISubprogram(name: "update_cache", scope: !2600, file: !2600, line: 559, type: !9636, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16392)
!16392 = !{!16393, !16394}
!16393 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16391, file: !2600, line: 559, type: !103)
!16394 = !DILocalVariable(name: "thread", scope: !16391, file: !2600, line: 562, type: !2495)
!16395 = !DILocation(line: 0, scope: !16391)
!16396 = !DILocation(line: 239, column: 9, scope: !16397, inlinedAt: !16400)
!16397 = distinct !DISubprogram(name: "runq_best", scope: !2600, file: !2600, line: 237, type: !16398, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!16398 = !DISubroutineType(types: !16399)
!16399 = !{!2495}
!16400 = distinct !DILocation(line: 314, column: 28, scope: !16401, inlinedAt: !16404)
!16401 = distinct !DISubprogram(name: "next_up", scope: !2600, file: !2600, line: 312, type: !16398, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16402)
!16402 = !{!16403}
!16403 = !DILocalVariable(name: "thread", scope: !16401, file: !2600, line: 314, type: !2495)
!16404 = distinct !DILocation(line: 562, column: 28, scope: !16391)
!16405 = !DILocation(line: 0, scope: !16401, inlinedAt: !16404)
!16406 = !DILocation(line: 340, column: 17, scope: !16401, inlinedAt: !16404)
!16407 = !DILocation(line: 340, column: 9, scope: !16401, inlinedAt: !16404)
!16408 = !DILocalVariable(name: "thread", arg: 1, scope: !16409, file: !2600, line: 127, type: !2495)
!16409 = distinct !DISubprogram(name: "should_preempt", scope: !2600, file: !2600, line: 127, type: !16410, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16412)
!16410 = !DISubroutineType(types: !16411)
!16411 = !{!131, !2495, !103}
!16412 = !{!16408, !16413}
!16413 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16409, file: !2600, line: 128, type: !103)
!16414 = !DILocation(line: 0, scope: !16409, inlinedAt: !16415)
!16415 = distinct !DILocation(line: 564, column: 6, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16391, file: !2600, line: 564, column: 6)
!16417 = !DILocation(line: 133, column: 17, scope: !16418, inlinedAt: !16415)
!16418 = distinct !DILexicalBlock(scope: !16409, file: !2600, line: 133, column: 6)
!16419 = !DILocation(line: 0, scope: !16416)
!16420 = !DILocation(line: 133, column: 6, scope: !16409, inlinedAt: !16415)
!16421 = !DILocation(line: 140, column: 6, scope: !16422, inlinedAt: !16415)
!16422 = distinct !DILexicalBlock(scope: !16409, file: !2600, line: 140, column: 6)
!16423 = !DILocation(line: 140, column: 6, scope: !16409, inlinedAt: !16415)
!16424 = !DILocation(line: 150, column: 9, scope: !16425, inlinedAt: !16415)
!16425 = distinct !DILexicalBlock(scope: !16409, file: !2600, line: 149, column: 6)
!16426 = !DILocation(line: 149, column: 6, scope: !16409, inlinedAt: !16415)
!16427 = !DILocation(line: 157, column: 6, scope: !16428, inlinedAt: !16415)
!16428 = distinct !DILexicalBlock(scope: !16409, file: !2600, line: 157, column: 6)
!16429 = !DILocation(line: 564, column: 6, scope: !16391)
!16430 = !DILocation(line: 566, column: 14, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16432, file: !2600, line: 566, column: 7)
!16432 = distinct !DILexicalBlock(scope: !16416, file: !2600, line: 564, column: 42)
!16433 = !DILocation(line: 566, column: 7, scope: !16432)
!16434 = !DILocation(line: 567, column: 4, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16431, file: !2600, line: 566, column: 27)
!16436 = !DILocation(line: 568, column: 3, scope: !16435)
!16437 = !DILocation(line: 585, column: 1, scope: !16391)
!16438 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2600, file: !2600, line: 1144, type: !16439, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16441)
!16439 = !DISubroutineType(types: !16440)
!16440 = !{!2495, !16293}
!16441 = !{!16442, !16443, !16444}
!16442 = !DILocalVariable(name: "pq", arg: 1, scope: !16438, file: !2600, line: 1144, type: !16293)
!16443 = !DILocalVariable(name: "thread", scope: !16438, file: !2600, line: 1146, type: !2495)
!16444 = !DILocalVariable(name: "n", scope: !16438, file: !2600, line: 1147, type: !2596)
!16445 = !DILocation(line: 0, scope: !16438)
!16446 = !DILocation(line: 1147, column: 19, scope: !16438)
!16447 = !DILocation(line: 1152, column: 2, scope: !16438)
!16448 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14620, file: !14620, line: 115, type: !16208, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16449)
!16449 = !{!16450}
!16450 = !DILocalVariable(name: "thread", arg: 1, scope: !16448, file: !14620, line: 115, type: !2495)
!16451 = !DILocation(line: 0, scope: !16448)
!16452 = !DILocation(line: 117, column: 46, scope: !16448)
!16453 = !DILocation(line: 117, column: 10, scope: !16448)
!16454 = !DILocation(line: 117, column: 9, scope: !16448)
!16455 = !DILocation(line: 117, column: 2, scope: !16448)
!16456 = distinct !DISubprogram(name: "is_preempt", scope: !2600, file: !2600, line: 62, type: !16066, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16457)
!16457 = !{!16458}
!16458 = !DILocalVariable(name: "thread", arg: 1, scope: !16456, file: !2600, line: 62, type: !2495)
!16459 = !DILocation(line: 0, scope: !16456)
!16460 = !DILocation(line: 65, column: 22, scope: !16456)
!16461 = !DILocation(line: 65, column: 30, scope: !16456)
!16462 = !DILocation(line: 65, column: 2, scope: !16456)
!16463 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15013, file: !15013, line: 35, type: !16464, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16468)
!16464 = !DISubroutineType(types: !16465)
!16465 = !{!131, !16466}
!16466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16467, size: 32)
!16467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2546)
!16468 = !{!16469}
!16469 = !DILocalVariable(name: "to", arg: 1, scope: !16463, file: !15013, line: 35, type: !16466)
!16470 = !DILocation(line: 0, scope: !16463)
!16471 = !DILocation(line: 37, column: 35, scope: !16463)
!16472 = !DILocation(line: 37, column: 10, scope: !16463)
!16473 = !DILocation(line: 37, column: 9, scope: !16463)
!16474 = !DILocation(line: 37, column: 2, scope: !16463)
!16475 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !16476, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16480)
!16476 = !DISubroutineType(types: !16477)
!16477 = !{!131, !16478}
!16478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16479, size: 32)
!16479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2505)
!16480 = !{!16481}
!16481 = !DILocalVariable(name: "node", arg: 1, scope: !16475, file: !146, line: 225, type: !16478)
!16482 = !DILocation(line: 0, scope: !16475)
!16483 = !DILocation(line: 227, column: 15, scope: !16475)
!16484 = !DILocation(line: 227, column: 20, scope: !16475)
!16485 = !DILocation(line: 227, column: 2, scope: !16475)
!16486 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !16364, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16487)
!16487 = !{!16488, !16489}
!16488 = !DILocalVariable(name: "list", arg: 1, scope: !16486, file: !146, line: 325, type: !16293)
!16489 = !DILocalVariable(name: "node", arg: 2, scope: !16486, file: !146, line: 326, type: !2596)
!16490 = !DILocation(line: 0, scope: !16486)
!16491 = !DILocation(line: 328, column: 24, scope: !16486)
!16492 = !DILocation(line: 328, column: 15, scope: !16486)
!16493 = !DILocation(line: 328, column: 9, scope: !16486)
!16494 = !DILocation(line: 328, column: 45, scope: !16486)
!16495 = !DILocation(line: 328, column: 2, scope: !16486)
!16496 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !16497, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16499)
!16497 = !DISubroutineType(types: !16498)
!16498 = !{!131, !16293}
!16499 = !{!16500}
!16500 = !DILocalVariable(name: "list", arg: 1, scope: !16496, file: !146, line: 266, type: !16293)
!16501 = !DILocation(line: 0, scope: !16496)
!16502 = !DILocation(line: 268, column: 15, scope: !16496)
!16503 = !DILocation(line: 268, column: 20, scope: !16496)
!16504 = !DILocation(line: 268, column: 2, scope: !16496)
!16505 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !16506, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16508)
!16506 = !DISubroutineType(types: !16507)
!16507 = !{null, !2596}
!16508 = !{!16509, !16510, !16511}
!16509 = !DILocalVariable(name: "node", arg: 1, scope: !16505, file: !146, line: 496, type: !2596)
!16510 = !DILocalVariable(name: "prev", scope: !16505, file: !146, line: 498, type: !16352)
!16511 = !DILocalVariable(name: "next", scope: !16505, file: !146, line: 499, type: !16352)
!16512 = !DILocation(line: 0, scope: !16505)
!16513 = !DILocation(line: 498, column: 34, scope: !16505)
!16514 = !DILocation(line: 499, column: 34, scope: !16505)
!16515 = !DILocation(line: 501, column: 8, scope: !16505)
!16516 = !DILocation(line: 501, column: 13, scope: !16505)
!16517 = !DILocation(line: 502, column: 8, scope: !16505)
!16518 = !DILocation(line: 502, column: 13, scope: !16505)
!16519 = !DILocation(line: 503, column: 2, scope: !16505)
!16520 = !DILocation(line: 504, column: 1, scope: !16505)
!16521 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !16506, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16522)
!16522 = !{!16523}
!16523 = !DILocalVariable(name: "node", arg: 1, scope: !16521, file: !146, line: 211, type: !2596)
!16524 = !DILocation(line: 0, scope: !16521)
!16525 = !DILocation(line: 213, column: 8, scope: !16521)
!16526 = !DILocation(line: 213, column: 13, scope: !16521)
!16527 = !DILocation(line: 214, column: 8, scope: !16521)
!16528 = !DILocation(line: 214, column: 13, scope: !16521)
!16529 = !DILocation(line: 215, column: 1, scope: !16521)
!16530 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14620, file: !14620, line: 131, type: !16531, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16533)
!16531 = !DISubroutineType(types: !16532)
!16532 = !{!131, !2495, !108}
!16533 = !{!16534, !16535}
!16534 = !DILocalVariable(name: "thread", arg: 1, scope: !16530, file: !14620, line: 131, type: !2495)
!16535 = !DILocalVariable(name: "state", arg: 2, scope: !16530, file: !14620, line: 131, type: !108)
!16536 = !DILocation(line: 0, scope: !16530)
!16537 = !DILocation(line: 133, column: 23, scope: !16530)
!16538 = !DILocation(line: 133, column: 45, scope: !16530)
!16539 = !DILocation(line: 133, column: 2, scope: !16530)
!16540 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14620, file: !14620, line: 211, type: !15900, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16541)
!16541 = !{!16542, !16543}
!16542 = !DILocalVariable(name: "prio", arg: 1, scope: !16540, file: !14620, line: 211, type: !103)
!16543 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16540, file: !14620, line: 211, type: !103)
!16544 = !DILocation(line: 0, scope: !16540)
!16545 = !DILocation(line: 213, column: 9, scope: !16540)
!16546 = !DILocation(line: 213, column: 2, scope: !16540)
!16547 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14620, file: !14620, line: 83, type: !16208, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16548)
!16548 = !{!16549}
!16549 = !DILocalVariable(name: "thread", arg: 1, scope: !16547, file: !14620, line: 83, type: !2495)
!16550 = !DILocation(line: 0, scope: !16547)
!16551 = !DILocation(line: 89, column: 16, scope: !16547)
!16552 = !DILocation(line: 89, column: 2, scope: !16547)
!16553 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14620, file: !14620, line: 206, type: !15900, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16554)
!16554 = !{!16555, !16556}
!16555 = !DILocalVariable(name: "prio1", arg: 1, scope: !16553, file: !14620, line: 206, type: !103)
!16556 = !DILocalVariable(name: "prio2", arg: 2, scope: !16553, file: !14620, line: 206, type: !103)
!16557 = !DILocation(line: 0, scope: !16553)
!16558 = !DILocation(line: 208, column: 15, scope: !16553)
!16559 = !DILocation(line: 208, column: 2, scope: !16553)
!16560 = distinct !DISubprogram(name: "z_ready_thread", scope: !2600, file: !2600, line: 635, type: !16048, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16561)
!16561 = !{!16562, !16563, !16565}
!16562 = !DILocalVariable(name: "thread", arg: 1, scope: !16560, file: !2600, line: 635, type: !2495)
!16563 = !DILocalVariable(name: "__i", scope: !16564, file: !2600, line: 637, type: !16082)
!16564 = distinct !DILexicalBlock(scope: !16560, file: !2600, line: 637, column: 2)
!16565 = !DILocalVariable(name: "__key", scope: !16564, file: !2600, line: 637, type: !16082)
!16566 = !DILocation(line: 0, scope: !16560)
!16567 = !DILocation(line: 0, scope: !16564)
!16568 = !DILocation(line: 0, scope: !16090, inlinedAt: !16569)
!16569 = distinct !DILocation(line: 637, column: 2, scope: !16564)
!16570 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16569)
!16572 = !DILocation(line: 0, scope: !16099, inlinedAt: !16571)
!16573 = !DILocation(line: 639, column: 4, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !2600, line: 638, column: 41)
!16575 = distinct !DILexicalBlock(scope: !16576, file: !2600, line: 638, column: 7)
!16576 = distinct !DILexicalBlock(scope: !16577, file: !2600, line: 637, column: 26)
!16577 = distinct !DILexicalBlock(scope: !16564, file: !2600, line: 637, column: 2)
!16578 = !DILocation(line: 0, scope: !16117, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 637, column: 2, scope: !16577)
!16580 = !DILocation(line: 0, scope: !16125, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16579)
!16582 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16581)
!16583 = !DILocation(line: 642, column: 1, scope: !16560)
!16584 = distinct !DISubprogram(name: "ready_thread", scope: !2600, file: !2600, line: 617, type: !16048, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16585)
!16585 = !{!16586}
!16586 = !DILocalVariable(name: "thread", arg: 1, scope: !16584, file: !2600, line: 617, type: !2495)
!16587 = !DILocation(line: 0, scope: !16584)
!16588 = !DILocation(line: 626, column: 7, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16584, file: !2600, line: 626, column: 6)
!16590 = !DILocation(line: 626, column: 34, scope: !16589)
!16591 = !DILocation(line: 626, column: 37, scope: !16589)
!16592 = !DILocation(line: 626, column: 6, scope: !16584)
!16593 = !DILocation(line: 0, scope: !16276, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 629, column: 3, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16589, file: !2600, line: 626, column: 64)
!16596 = !DILocation(line: 252, column: 15, scope: !16276, inlinedAt: !16594)
!16597 = !DILocation(line: 252, column: 28, scope: !16276, inlinedAt: !16594)
!16598 = !DILocation(line: 0, scope: !16283, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 254, column: 3, scope: !16287, inlinedAt: !16594)
!16600 = !DILocation(line: 0, scope: !16290, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 229, column: 2, scope: !16283, inlinedAt: !16599)
!16602 = !DILocation(line: 188, column: 2, scope: !16300, inlinedAt: !16601)
!16603 = !DILocation(line: 188, column: 2, scope: !16302, inlinedAt: !16601)
!16604 = !DILocation(line: 0, scope: !16300, inlinedAt: !16601)
!16605 = !DILocation(line: 189, column: 7, scope: !16305, inlinedAt: !16601)
!16606 = !DILocation(line: 189, column: 35, scope: !16305, inlinedAt: !16601)
!16607 = !DILocation(line: 189, column: 7, scope: !16306, inlinedAt: !16601)
!16608 = !DILocation(line: 191, column: 21, scope: !16310, inlinedAt: !16601)
!16609 = !DILocation(line: 190, column: 4, scope: !16310, inlinedAt: !16601)
!16610 = !DILocation(line: 192, column: 4, scope: !16310, inlinedAt: !16601)
!16611 = distinct !{!16611, !16602, !16612}
!16612 = !DILocation(line: 194, column: 2, scope: !16300, inlinedAt: !16601)
!16613 = !DILocation(line: 196, column: 37, scope: !16290, inlinedAt: !16601)
!16614 = !DILocation(line: 196, column: 2, scope: !16290, inlinedAt: !16601)
!16615 = !DILocation(line: 197, column: 1, scope: !16290, inlinedAt: !16601)
!16616 = !DILocation(line: 630, column: 3, scope: !16595)
!16617 = !DILocation(line: 632, column: 2, scope: !16595)
!16618 = !DILocation(line: 633, column: 1, scope: !16584)
!16619 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14620, file: !14620, line: 120, type: !16208, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16620)
!16620 = !{!16621}
!16621 = !DILocalVariable(name: "thread", arg: 1, scope: !16619, file: !14620, line: 120, type: !2495)
!16622 = !DILocation(line: 0, scope: !16619)
!16623 = !DILocation(line: 122, column: 12, scope: !16619)
!16624 = !DILocation(line: 122, column: 62, scope: !16619)
!16625 = !DILocation(line: 123, column: 4, scope: !16619)
!16626 = !DILocation(line: 122, column: 2, scope: !16619)
!16627 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2600, file: !2600, line: 644, type: !16048, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16628)
!16628 = !{!16629, !16630, !16632}
!16629 = !DILocalVariable(name: "thread", arg: 1, scope: !16627, file: !2600, line: 644, type: !2495)
!16630 = !DILocalVariable(name: "__i", scope: !16631, file: !2600, line: 646, type: !16082)
!16631 = distinct !DILexicalBlock(scope: !16627, file: !2600, line: 646, column: 2)
!16632 = !DILocalVariable(name: "__key", scope: !16631, file: !2600, line: 646, type: !16082)
!16633 = !DILocation(line: 0, scope: !16627)
!16634 = !DILocation(line: 0, scope: !16631)
!16635 = !DILocation(line: 0, scope: !16090, inlinedAt: !16636)
!16636 = distinct !DILocation(line: 646, column: 2, scope: !16631)
!16637 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16638)
!16638 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16636)
!16639 = !DILocation(line: 0, scope: !16099, inlinedAt: !16638)
!16640 = !DILocation(line: 647, column: 3, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16642, file: !2600, line: 646, column: 26)
!16642 = distinct !DILexicalBlock(scope: !16631, file: !2600, line: 646, column: 2)
!16643 = !DILocation(line: 0, scope: !16117, inlinedAt: !16644)
!16644 = distinct !DILocation(line: 646, column: 2, scope: !16642)
!16645 = !DILocation(line: 0, scope: !16125, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16644)
!16647 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16646)
!16648 = !DILocation(line: 649, column: 1, scope: !16627)
!16649 = distinct !DISubprogram(name: "z_sched_start", scope: !2600, file: !2600, line: 651, type: !16048, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16650)
!16650 = !{!16651, !16652}
!16651 = !DILocalVariable(name: "thread", arg: 1, scope: !16649, file: !2600, line: 651, type: !2495)
!16652 = !DILocalVariable(name: "key", scope: !16649, file: !2600, line: 653, type: !16082)
!16653 = !DILocation(line: 0, scope: !16649)
!16654 = !DILocation(line: 0, scope: !16090, inlinedAt: !16655)
!16655 = distinct !DILocation(line: 653, column: 25, scope: !16649)
!16656 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16655)
!16658 = !DILocation(line: 0, scope: !16099, inlinedAt: !16657)
!16659 = !DILocation(line: 655, column: 6, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16649, file: !2600, line: 655, column: 6)
!16661 = !DILocation(line: 655, column: 6, scope: !16649)
!16662 = !DILocation(line: 0, scope: !16117, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 656, column: 3, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16660, file: !2600, line: 655, column: 36)
!16665 = !DILocation(line: 0, scope: !16125, inlinedAt: !16666)
!16666 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16663)
!16667 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16666)
!16668 = !DILocation(line: 657, column: 3, scope: !16664)
!16669 = !DILocation(line: 660, column: 2, scope: !16649)
!16670 = !DILocation(line: 661, column: 2, scope: !16649)
!16671 = !DILocation(line: 662, column: 2, scope: !16649)
!16672 = !DILocation(line: 663, column: 1, scope: !16649)
!16673 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14620, file: !14620, line: 126, type: !16208, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16674)
!16674 = !{!16675}
!16675 = !DILocalVariable(name: "thread", arg: 1, scope: !16673, file: !14620, line: 126, type: !2495)
!16676 = !DILocation(line: 0, scope: !16673)
!16677 = !DILocation(line: 128, column: 23, scope: !16673)
!16678 = !DILocation(line: 128, column: 36, scope: !16673)
!16679 = !DILocation(line: 128, column: 56, scope: !16673)
!16680 = !DILocation(line: 128, column: 2, scope: !16673)
!16681 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14620, file: !14620, line: 155, type: !16048, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16682)
!16682 = !{!16683}
!16683 = !DILocalVariable(name: "thread", arg: 1, scope: !16681, file: !14620, line: 155, type: !2495)
!16684 = !DILocation(line: 0, scope: !16681)
!16685 = !DILocation(line: 157, column: 15, scope: !16681)
!16686 = !DILocation(line: 157, column: 28, scope: !16681)
!16687 = !DILocation(line: 158, column: 1, scope: !16681)
!16688 = distinct !DISubprogram(name: "z_reschedule", scope: !2600, file: !2600, line: 967, type: !16118, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16689)
!16689 = !{!16690, !16691}
!16690 = !DILocalVariable(name: "lock", arg: 1, scope: !16688, file: !2600, line: 967, type: !16093)
!16691 = !DILocalVariable(name: "key", arg: 2, scope: !16688, file: !2600, line: 967, type: !16082)
!16692 = !DILocation(line: 0, scope: !16688)
!16693 = !DILocation(line: 969, column: 6, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16688, file: !2600, line: 969, column: 6)
!16695 = !DILocation(line: 969, column: 23, scope: !16694)
!16696 = !DILocation(line: 969, column: 26, scope: !16694)
!16697 = !DILocation(line: 969, column: 6, scope: !16688)
!16698 = !DILocalVariable(name: "key", arg: 2, scope: !16699, file: !14724, line: 193, type: !16082)
!16699 = distinct !DISubprogram(name: "z_swap", scope: !14724, file: !14724, line: 193, type: !16700, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16702)
!16700 = !DISubroutineType(types: !16701)
!16701 = !{!103, !16093, !16082}
!16702 = !{!16703, !16698}
!16703 = !DILocalVariable(name: "lock", arg: 1, scope: !16699, file: !14724, line: 193, type: !16093)
!16704 = !DILocation(line: 0, scope: !16699, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 970, column: 3, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16694, file: !2600, line: 969, column: 39)
!16707 = !DILocation(line: 196, column: 9, scope: !16699, inlinedAt: !16705)
!16708 = !DILocation(line: 971, column: 2, scope: !16706)
!16709 = !DILocation(line: 0, scope: !16117, inlinedAt: !16710)
!16710 = distinct !DILocation(line: 972, column: 3, scope: !16711)
!16711 = distinct !DILexicalBlock(scope: !16694, file: !2600, line: 971, column: 9)
!16712 = !DILocation(line: 0, scope: !16125, inlinedAt: !16713)
!16713 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16710)
!16714 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16713)
!16715 = !DILocation(line: 975, column: 1, scope: !16688)
!16716 = distinct !DISubprogram(name: "resched", scope: !2600, file: !2600, line: 940, type: !16717, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16719)
!16717 = !DISubroutineType(types: !16718)
!16718 = !{!131, !108}
!16719 = !{!16720}
!16720 = !DILocalVariable(name: "key", arg: 1, scope: !16716, file: !2600, line: 940, type: !108)
!16721 = !DILocation(line: 0, scope: !16716)
!16722 = !DILocalVariable(name: "key", arg: 1, scope: !16723, file: !7059, line: 112, type: !32)
!16723 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7059, file: !7059, line: 112, type: !16724, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16726)
!16724 = !DISubroutineType(types: !16725)
!16725 = !{!131, !32}
!16726 = !{!16722}
!16727 = !DILocation(line: 0, scope: !16723, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 946, column: 9, scope: !16716)
!16729 = !DILocation(line: 115, column: 13, scope: !16723, inlinedAt: !16728)
!16730 = !DILocation(line: 946, column: 32, scope: !16716)
!16731 = !DILocation(line: 1031, column: 3, scope: !16732, inlinedAt: !16735)
!16732 = distinct !DISubprogram(name: "__get_IPSR", scope: !7377, file: !7377, line: 1027, type: !3655, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16733)
!16733 = !{!16734}
!16734 = !DILocalVariable(name: "result", scope: !16732, file: !7377, line: 1029, type: !108)
!16735 = distinct !DILocation(line: 48, column: 10, scope: !16736, inlinedAt: !16737)
!16736 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8393, file: !8393, line: 46, type: !8394, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!16737 = distinct !DILocation(line: 946, column: 36, scope: !16716)
!16738 = !{i64 3770086}
!16739 = !DILocation(line: 0, scope: !16732, inlinedAt: !16735)
!16740 = !DILocation(line: 48, column: 9, scope: !16736, inlinedAt: !16737)
!16741 = !DILocation(line: 946, column: 2, scope: !16716)
!16742 = distinct !DISubprogram(name: "need_swap", scope: !2600, file: !2600, line: 953, type: !8394, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16743)
!16743 = !{!16744}
!16744 = !DILocalVariable(name: "new_thread", scope: !16742, file: !2600, line: 959, type: !2495)
!16745 = !DILocation(line: 962, column: 31, scope: !16742)
!16746 = !DILocation(line: 0, scope: !16742)
!16747 = !DILocation(line: 963, column: 23, scope: !16742)
!16748 = !DILocation(line: 963, column: 20, scope: !16742)
!16749 = !DILocation(line: 963, column: 2, scope: !16742)
!16750 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14724, file: !14724, line: 181, type: !7387, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16751)
!16751 = !{!16752, !16753}
!16752 = !DILocalVariable(name: "key", arg: 1, scope: !16750, file: !14724, line: 181, type: !32)
!16753 = !DILocalVariable(name: "ret", scope: !16750, file: !14724, line: 183, type: !103)
!16754 = !DILocation(line: 0, scope: !16750)
!16755 = !DILocation(line: 185, column: 8, scope: !16750)
!16756 = !DILocation(line: 186, column: 2, scope: !16750)
!16757 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2600, file: !2600, line: 665, type: !16048, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16758)
!16758 = !{!16759, !16760, !16762}
!16759 = !DILocalVariable(name: "thread", arg: 1, scope: !16757, file: !2600, line: 665, type: !2495)
!16760 = !DILocalVariable(name: "__i", scope: !16761, file: !2600, line: 671, type: !16082)
!16761 = distinct !DILexicalBlock(scope: !16757, file: !2600, line: 671, column: 2)
!16762 = !DILocalVariable(name: "__key", scope: !16761, file: !2600, line: 671, type: !16082)
!16763 = !DILocation(line: 0, scope: !16757)
!16764 = !DILocation(line: 669, column: 8, scope: !16757)
!16765 = !DILocation(line: 0, scope: !16761)
!16766 = !DILocation(line: 0, scope: !16090, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 671, column: 2, scope: !16761)
!16768 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16767)
!16770 = !DILocation(line: 0, scope: !16099, inlinedAt: !16769)
!16771 = !DILocation(line: 672, column: 7, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16773, file: !2600, line: 672, column: 7)
!16773 = distinct !DILexicalBlock(scope: !16774, file: !2600, line: 671, column: 26)
!16774 = distinct !DILexicalBlock(scope: !16761, file: !2600, line: 671, column: 2)
!16775 = !DILocation(line: 672, column: 7, scope: !16773)
!16776 = !DILocation(line: 0, scope: !16259, inlinedAt: !16777)
!16777 = distinct !DILocation(line: 673, column: 4, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16772, file: !2600, line: 672, column: 35)
!16779 = !DILocation(line: 266, column: 15, scope: !16259, inlinedAt: !16777)
!16780 = !DILocation(line: 266, column: 28, scope: !16259, inlinedAt: !16777)
!16781 = !DILocation(line: 0, scope: !16267, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 268, column: 3, scope: !16271, inlinedAt: !16777)
!16783 = !DILocation(line: 234, column: 2, scope: !16267, inlinedAt: !16782)
!16784 = !DILocation(line: 674, column: 3, scope: !16778)
!16785 = !DILocation(line: 675, column: 3, scope: !16773)
!16786 = !DILocation(line: 676, column: 26, scope: !16773)
!16787 = !DILocation(line: 676, column: 23, scope: !16773)
!16788 = !DILocation(line: 676, column: 3, scope: !16773)
!16789 = !DILocation(line: 0, scope: !16117, inlinedAt: !16790)
!16790 = distinct !DILocation(line: 671, column: 2, scope: !16774)
!16791 = !DILocation(line: 0, scope: !16125, inlinedAt: !16792)
!16792 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16790)
!16793 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16792)
!16794 = !DILocation(line: 679, column: 16, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16757, file: !2600, line: 679, column: 6)
!16796 = !DILocation(line: 679, column: 13, scope: !16795)
!16797 = !DILocation(line: 679, column: 6, scope: !16757)
!16798 = !DILocation(line: 680, column: 3, scope: !16799)
!16799 = distinct !DILexicalBlock(scope: !16795, file: !2600, line: 679, column: 26)
!16800 = !DILocation(line: 681, column: 2, scope: !16799)
!16801 = !DILocation(line: 684, column: 1, scope: !16757)
!16802 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15013, file: !15013, line: 52, type: !16066, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16803)
!16803 = !{!16804}
!16804 = !DILocalVariable(name: "thread", arg: 1, scope: !16802, file: !15013, line: 52, type: !2495)
!16805 = !DILocation(line: 0, scope: !16802)
!16806 = !DILocation(line: 54, column: 39, scope: !16802)
!16807 = !DILocation(line: 54, column: 9, scope: !16802)
!16808 = !DILocation(line: 54, column: 2, scope: !16802)
!16809 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14620, file: !14620, line: 141, type: !16048, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16810)
!16810 = !{!16811}
!16811 = !DILocalVariable(name: "thread", arg: 1, scope: !16809, file: !14620, line: 141, type: !2495)
!16812 = !DILocation(line: 0, scope: !16809)
!16813 = !DILocation(line: 143, column: 15, scope: !16809)
!16814 = !DILocation(line: 143, column: 28, scope: !16809)
!16815 = !DILocation(line: 146, column: 1, scope: !16809)
!16816 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14620, file: !14620, line: 73, type: !334, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!16817 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16818)
!16818 = distinct !DILocation(line: 75, column: 30, scope: !16816)
!16819 = !DILocation(line: 0, scope: !16099, inlinedAt: !16818)
!16820 = !DILocation(line: 75, column: 9, scope: !16816)
!16821 = !DILocation(line: 76, column: 1, scope: !16816)
!16822 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2600, file: !2600, line: 977, type: !7466, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16823)
!16823 = !{!16824}
!16824 = !DILocalVariable(name: "key", arg: 1, scope: !16822, file: !2600, line: 977, type: !108)
!16825 = !DILocation(line: 0, scope: !16822)
!16826 = !DILocation(line: 979, column: 6, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16822, file: !2600, line: 979, column: 6)
!16828 = !DILocation(line: 979, column: 6, scope: !16822)
!16829 = !DILocation(line: 980, column: 3, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16827, file: !2600, line: 979, column: 20)
!16831 = !DILocation(line: 981, column: 2, scope: !16830)
!16832 = !DILocation(line: 0, scope: !16125, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 982, column: 3, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16827, file: !2600, line: 981, column: 9)
!16835 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16833)
!16836 = !DILocation(line: 985, column: 1, scope: !16822)
!16837 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2600, file: !2600, line: 695, type: !16048, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16838)
!16838 = !{!16839, !16840}
!16839 = !DILocalVariable(name: "thread", arg: 1, scope: !16837, file: !2600, line: 695, type: !2495)
!16840 = !DILocalVariable(name: "key", scope: !16837, file: !2600, line: 699, type: !16082)
!16841 = !DILocation(line: 0, scope: !16837)
!16842 = !DILocation(line: 0, scope: !16090, inlinedAt: !16843)
!16843 = distinct !DILocation(line: 699, column: 25, scope: !16837)
!16844 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16843)
!16846 = !DILocation(line: 0, scope: !16099, inlinedAt: !16845)
!16847 = !DILocation(line: 702, column: 7, scope: !16848)
!16848 = distinct !DILexicalBlock(scope: !16837, file: !2600, line: 702, column: 6)
!16849 = !DILocation(line: 702, column: 6, scope: !16837)
!16850 = !DILocation(line: 0, scope: !16117, inlinedAt: !16851)
!16851 = distinct !DILocation(line: 703, column: 3, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16848, file: !2600, line: 702, column: 38)
!16853 = !DILocation(line: 0, scope: !16125, inlinedAt: !16854)
!16854 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16851)
!16855 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16854)
!16856 = !DILocation(line: 704, column: 3, scope: !16852)
!16857 = !DILocation(line: 707, column: 2, scope: !16837)
!16858 = !DILocation(line: 708, column: 2, scope: !16837)
!16859 = !DILocation(line: 710, column: 2, scope: !16837)
!16860 = !DILocation(line: 713, column: 1, scope: !16837)
!16861 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14620, file: !14620, line: 96, type: !16208, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16862)
!16862 = !{!16863}
!16863 = !DILocalVariable(name: "thread", arg: 1, scope: !16861, file: !14620, line: 96, type: !2495)
!16864 = !DILocation(line: 0, scope: !16861)
!16865 = !DILocation(line: 98, column: 23, scope: !16861)
!16866 = !DILocation(line: 98, column: 36, scope: !16861)
!16867 = !DILocation(line: 98, column: 57, scope: !16861)
!16868 = !DILocation(line: 98, column: 2, scope: !16861)
!16869 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14620, file: !14620, line: 148, type: !16048, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16870)
!16870 = !{!16871}
!16871 = !DILocalVariable(name: "thread", arg: 1, scope: !16869, file: !14620, line: 148, type: !2495)
!16872 = !DILocation(line: 0, scope: !16869)
!16873 = !DILocation(line: 150, column: 15, scope: !16869)
!16874 = !DILocation(line: 150, column: 28, scope: !16869)
!16875 = !DILocation(line: 153, column: 1, scope: !16869)
!16876 = distinct !DISubprogram(name: "z_pend_thread", scope: !2600, file: !2600, line: 770, type: !16877, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16883)
!16877 = !DISubroutineType(types: !16878)
!16878 = !{null, !2495, !2526, !16879}
!16879 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16880)
!16880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16881)
!16881 = !{!16882}
!16882 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16880, file: !105, line: 66, baseType: !104, size: 64)
!16883 = !{!16884, !16885, !16886, !16887, !16889}
!16884 = !DILocalVariable(name: "thread", arg: 1, scope: !16876, file: !2600, line: 770, type: !2495)
!16885 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16876, file: !2600, line: 770, type: !2526)
!16886 = !DILocalVariable(name: "timeout", arg: 3, scope: !16876, file: !2600, line: 771, type: !16879)
!16887 = !DILocalVariable(name: "__i", scope: !16888, file: !2600, line: 774, type: !16082)
!16888 = distinct !DILexicalBlock(scope: !16876, file: !2600, line: 774, column: 2)
!16889 = !DILocalVariable(name: "__key", scope: !16888, file: !2600, line: 774, type: !16082)
!16890 = !DILocation(line: 0, scope: !16876)
!16891 = !DILocation(line: 0, scope: !16888)
!16892 = !DILocation(line: 0, scope: !16090, inlinedAt: !16893)
!16893 = distinct !DILocation(line: 774, column: 2, scope: !16888)
!16894 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16895)
!16895 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16893)
!16896 = !DILocation(line: 0, scope: !16099, inlinedAt: !16895)
!16897 = !DILocation(line: 775, column: 3, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16899, file: !2600, line: 774, column: 26)
!16899 = distinct !DILexicalBlock(scope: !16888, file: !2600, line: 774, column: 2)
!16900 = !DILocation(line: 0, scope: !16117, inlinedAt: !16901)
!16901 = distinct !DILocation(line: 774, column: 2, scope: !16899)
!16902 = !DILocation(line: 0, scope: !16125, inlinedAt: !16903)
!16903 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !16901)
!16904 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !16903)
!16905 = !DILocation(line: 777, column: 1, scope: !16876)
!16906 = distinct !DISubprogram(name: "pend_locked", scope: !2600, file: !2600, line: 760, type: !16877, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16907)
!16907 = !{!16908, !16909, !16910}
!16908 = !DILocalVariable(name: "thread", arg: 1, scope: !16906, file: !2600, line: 760, type: !2495)
!16909 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16906, file: !2600, line: 760, type: !2526)
!16910 = !DILocalVariable(name: "timeout", arg: 3, scope: !16906, file: !2600, line: 761, type: !16879)
!16911 = !DILocation(line: 0, scope: !16906)
!16912 = !DILocation(line: 766, column: 2, scope: !16906)
!16913 = !DILocation(line: 767, column: 2, scope: !16906)
!16914 = !DILocation(line: 768, column: 1, scope: !16906)
!16915 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2600, file: !2600, line: 740, type: !16916, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16918)
!16916 = !DISubroutineType(types: !16917)
!16917 = !{null, !2495, !2526}
!16918 = !{!16919, !16920}
!16919 = !DILocalVariable(name: "thread", arg: 1, scope: !16915, file: !2600, line: 740, type: !2495)
!16920 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16915, file: !2600, line: 740, type: !2526)
!16921 = !DILocation(line: 0, scope: !16915)
!16922 = !DILocation(line: 742, column: 2, scope: !16915)
!16923 = !DILocation(line: 743, column: 2, scope: !16915)
!16924 = !DILocation(line: 747, column: 13, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16915, file: !2600, line: 747, column: 6)
!16926 = !DILocation(line: 747, column: 6, scope: !16915)
!16927 = !DILocation(line: 748, column: 16, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16925, file: !2600, line: 747, column: 22)
!16929 = !DILocation(line: 748, column: 26, scope: !16928)
!16930 = !DILocation(line: 749, column: 28, scope: !16928)
!16931 = !DILocation(line: 0, scope: !16290, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 749, column: 3, scope: !16928)
!16933 = !DILocation(line: 188, column: 2, scope: !16300, inlinedAt: !16932)
!16934 = !DILocation(line: 188, column: 2, scope: !16302, inlinedAt: !16932)
!16935 = !DILocation(line: 0, scope: !16300, inlinedAt: !16932)
!16936 = !DILocation(line: 189, column: 7, scope: !16305, inlinedAt: !16932)
!16937 = !DILocation(line: 189, column: 35, scope: !16305, inlinedAt: !16932)
!16938 = !DILocation(line: 189, column: 7, scope: !16306, inlinedAt: !16932)
!16939 = !DILocation(line: 191, column: 21, scope: !16310, inlinedAt: !16932)
!16940 = !DILocation(line: 190, column: 4, scope: !16310, inlinedAt: !16932)
!16941 = !DILocation(line: 192, column: 4, scope: !16310, inlinedAt: !16932)
!16942 = distinct !{!16942, !16933, !16943}
!16943 = !DILocation(line: 194, column: 2, scope: !16300, inlinedAt: !16932)
!16944 = !DILocation(line: 196, column: 37, scope: !16290, inlinedAt: !16932)
!16945 = !DILocation(line: 196, column: 2, scope: !16290, inlinedAt: !16932)
!16946 = !DILocation(line: 197, column: 1, scope: !16290, inlinedAt: !16932)
!16947 = !DILocation(line: 751, column: 1, scope: !16915)
!16948 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2600, file: !2600, line: 753, type: !16949, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16951)
!16949 = !DISubroutineType(types: !16950)
!16950 = !{null, !2495, !16879}
!16951 = !{!16952, !16953}
!16952 = !DILocalVariable(name: "thread", arg: 1, scope: !16948, file: !2600, line: 753, type: !2495)
!16953 = !DILocalVariable(name: "timeout", arg: 2, scope: !16948, file: !2600, line: 753, type: !16879)
!16954 = !DILocation(line: 0, scope: !16948)
!16955 = !DILocation(line: 755, column: 7, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16948, file: !2600, line: 755, column: 6)
!16957 = !DILocation(line: 755, column: 6, scope: !16948)
!16958 = !DILocation(line: 756, column: 3, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16956, file: !2600, line: 755, column: 41)
!16960 = !DILocation(line: 757, column: 2, scope: !16959)
!16961 = !DILocation(line: 758, column: 1, scope: !16948)
!16962 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15013, file: !15013, line: 47, type: !16949, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16963)
!16963 = !{!16964, !16965}
!16964 = !DILocalVariable(name: "thread", arg: 1, scope: !16962, file: !15013, line: 47, type: !2495)
!16965 = !DILocalVariable(name: "ticks", arg: 2, scope: !16962, file: !15013, line: 47, type: !16879)
!16966 = !DILocation(line: 0, scope: !16962)
!16967 = !DILocation(line: 49, column: 30, scope: !16962)
!16968 = !DILocation(line: 49, column: 2, scope: !16962)
!16969 = !DILocation(line: 50, column: 1, scope: !16962)
!16970 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2600, file: !2600, line: 795, type: !2552, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !16971)
!16971 = !{!16972, !16973, !16974, !16976, !16977}
!16972 = !DILocalVariable(name: "timeout", arg: 1, scope: !16970, file: !2600, line: 795, type: !2554)
!16973 = !DILocalVariable(name: "thread", scope: !16970, file: !2600, line: 797, type: !2495)
!16974 = !DILocalVariable(name: "__i", scope: !16975, file: !2600, line: 800, type: !16082)
!16975 = distinct !DILexicalBlock(scope: !16970, file: !2600, line: 800, column: 2)
!16976 = !DILocalVariable(name: "__key", scope: !16975, file: !2600, line: 800, type: !16082)
!16977 = !DILocalVariable(name: "killed", scope: !16978, file: !2600, line: 801, type: !131)
!16978 = distinct !DILexicalBlock(scope: !16979, file: !2600, line: 800, column: 26)
!16979 = distinct !DILexicalBlock(scope: !16975, file: !2600, line: 800, column: 2)
!16980 = !DILocation(line: 0, scope: !16970)
!16981 = !DILocation(line: 797, column: 28, scope: !16970)
!16982 = !DILocation(line: 0, scope: !16975)
!16983 = !DILocation(line: 0, scope: !16090, inlinedAt: !16984)
!16984 = distinct !DILocation(line: 800, column: 2, scope: !16975)
!16985 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !16986)
!16986 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !16984)
!16987 = !DILocation(line: 0, scope: !16099, inlinedAt: !16986)
!16988 = !DILocation(line: 801, column: 27, scope: !16978)
!16989 = !DILocation(line: 801, column: 32, scope: !16978)
!16990 = !DILocation(line: 801, column: 61, scope: !16978)
!16991 = !DILocation(line: 0, scope: !16978)
!16992 = !DILocation(line: 804, column: 7, scope: !16978)
!16993 = !DILocation(line: 805, column: 21, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16995, file: !2600, line: 805, column: 8)
!16995 = distinct !DILexicalBlock(scope: !16996, file: !2600, line: 804, column: 16)
!16996 = distinct !DILexicalBlock(scope: !16978, file: !2600, line: 804, column: 7)
!16997 = !DILocation(line: 805, column: 31, scope: !16994)
!16998 = !DILocation(line: 805, column: 8, scope: !16995)
!16999 = !DILocation(line: 806, column: 5, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !16994, file: !2600, line: 805, column: 40)
!17001 = !DILocation(line: 807, column: 4, scope: !17000)
!17002 = !DILocation(line: 808, column: 4, scope: !16995)
!17003 = !DILocation(line: 809, column: 4, scope: !16995)
!17004 = !DILocation(line: 810, column: 4, scope: !16995)
!17005 = !DILocation(line: 811, column: 3, scope: !16995)
!17006 = !DILocation(line: 0, scope: !16117, inlinedAt: !17007)
!17007 = distinct !DILocation(line: 800, column: 2, scope: !16979)
!17008 = !DILocation(line: 0, scope: !16125, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17007)
!17010 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17009)
!17011 = !DILocation(line: 813, column: 1, scope: !16970)
!17012 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2600, file: !2600, line: 779, type: !16048, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17013)
!17013 = !{!17014}
!17014 = !DILocalVariable(name: "thread", arg: 1, scope: !17012, file: !2600, line: 779, type: !2495)
!17015 = !DILocation(line: 0, scope: !17012)
!17016 = !DILocation(line: 781, column: 2, scope: !17012)
!17017 = !DILocation(line: 782, column: 2, scope: !17012)
!17018 = !DILocation(line: 783, column: 15, scope: !17012)
!17019 = !DILocation(line: 783, column: 25, scope: !17012)
!17020 = !DILocation(line: 784, column: 1, scope: !17012)
!17021 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14620, file: !14620, line: 165, type: !16048, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17022)
!17022 = !{!17023}
!17023 = !DILocalVariable(name: "thread", arg: 1, scope: !17021, file: !14620, line: 165, type: !2495)
!17024 = !DILocation(line: 0, scope: !17021)
!17025 = !DILocation(line: 167, column: 15, scope: !17021)
!17026 = !DILocation(line: 167, column: 28, scope: !17021)
!17027 = !DILocation(line: 168, column: 1, scope: !17021)
!17028 = distinct !DISubprogram(name: "unready_thread", scope: !2600, file: !2600, line: 731, type: !16048, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17029)
!17029 = !{!17030}
!17030 = !DILocalVariable(name: "thread", arg: 1, scope: !17028, file: !2600, line: 731, type: !2495)
!17031 = !DILocation(line: 0, scope: !17028)
!17032 = !DILocation(line: 733, column: 6, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17028, file: !2600, line: 733, column: 6)
!17034 = !DILocation(line: 733, column: 6, scope: !17028)
!17035 = !DILocation(line: 0, scope: !16259, inlinedAt: !17036)
!17036 = distinct !DILocation(line: 734, column: 3, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17033, file: !2600, line: 733, column: 34)
!17038 = !DILocation(line: 266, column: 15, scope: !16259, inlinedAt: !17036)
!17039 = !DILocation(line: 266, column: 28, scope: !16259, inlinedAt: !17036)
!17040 = !DILocation(line: 0, scope: !16267, inlinedAt: !17041)
!17041 = distinct !DILocation(line: 268, column: 3, scope: !16271, inlinedAt: !17036)
!17042 = !DILocation(line: 234, column: 2, scope: !16267, inlinedAt: !17041)
!17043 = !DILocation(line: 735, column: 2, scope: !17037)
!17044 = !DILocation(line: 736, column: 25, scope: !17028)
!17045 = !DILocation(line: 736, column: 22, scope: !17028)
!17046 = !DILocation(line: 736, column: 2, scope: !17028)
!17047 = !DILocation(line: 737, column: 1, scope: !17028)
!17048 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14620, file: !14620, line: 160, type: !16048, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17049)
!17049 = !{!17050}
!17050 = !DILocalVariable(name: "thread", arg: 1, scope: !17048, file: !14620, line: 160, type: !2495)
!17051 = !DILocation(line: 0, scope: !17048)
!17052 = !DILocation(line: 162, column: 15, scope: !17048)
!17053 = !DILocation(line: 162, column: 28, scope: !17048)
!17054 = !DILocation(line: 163, column: 1, scope: !17048)
!17055 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2600, file: !2600, line: 786, type: !16048, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17056)
!17056 = !{!17057, !17058, !17060}
!17057 = !DILocalVariable(name: "thread", arg: 1, scope: !17055, file: !2600, line: 786, type: !2495)
!17058 = !DILocalVariable(name: "__i", scope: !17059, file: !2600, line: 788, type: !16082)
!17059 = distinct !DILexicalBlock(scope: !17055, file: !2600, line: 788, column: 2)
!17060 = !DILocalVariable(name: "__key", scope: !17059, file: !2600, line: 788, type: !16082)
!17061 = !DILocation(line: 0, scope: !17055)
!17062 = !DILocation(line: 0, scope: !17059)
!17063 = !DILocation(line: 0, scope: !16090, inlinedAt: !17064)
!17064 = distinct !DILocation(line: 788, column: 2, scope: !17059)
!17065 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17066)
!17066 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17064)
!17067 = !DILocation(line: 0, scope: !16099, inlinedAt: !17066)
!17068 = !DILocation(line: 789, column: 3, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17070, file: !2600, line: 788, column: 26)
!17070 = distinct !DILexicalBlock(scope: !17059, file: !2600, line: 788, column: 2)
!17071 = !DILocation(line: 0, scope: !16117, inlinedAt: !17072)
!17072 = distinct !DILocation(line: 788, column: 2, scope: !17070)
!17073 = !DILocation(line: 0, scope: !16125, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17072)
!17075 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17074)
!17076 = !DILocation(line: 791, column: 1, scope: !17055)
!17077 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2600, file: !2600, line: 816, type: !17078, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17080)
!17078 = !DISubroutineType(types: !17079)
!17079 = !{!103, !108, !2526, !16879}
!17080 = !{!17081, !17082, !17083, !17084, !17085, !17087}
!17081 = !DILocalVariable(name: "key", arg: 1, scope: !17077, file: !2600, line: 816, type: !108)
!17082 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17077, file: !2600, line: 816, type: !2526)
!17083 = !DILocalVariable(name: "timeout", arg: 3, scope: !17077, file: !2600, line: 816, type: !16879)
!17084 = !DILocalVariable(name: "ret", scope: !17077, file: !2600, line: 828, type: !103)
!17085 = !DILocalVariable(name: "__i", scope: !17086, file: !2600, line: 829, type: !16082)
!17086 = distinct !DILexicalBlock(scope: !17077, file: !2600, line: 829, column: 2)
!17087 = !DILocalVariable(name: "__key", scope: !17086, file: !2600, line: 829, type: !16082)
!17088 = !DILocation(line: 0, scope: !17077)
!17089 = !DILocation(line: 823, column: 14, scope: !17077)
!17090 = !DILocation(line: 823, column: 2, scope: !17077)
!17091 = !DILocation(line: 826, column: 20, scope: !17077)
!17092 = !DILocation(line: 826, column: 18, scope: !17077)
!17093 = !DILocation(line: 828, column: 12, scope: !17077)
!17094 = !DILocation(line: 0, scope: !17086)
!17095 = !DILocation(line: 0, scope: !16090, inlinedAt: !17096)
!17096 = distinct !DILocation(line: 829, column: 2, scope: !17086)
!17097 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17098)
!17098 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17096)
!17099 = !DILocation(line: 0, scope: !16099, inlinedAt: !17098)
!17100 = !DILocation(line: 830, column: 7, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17102, file: !2600, line: 830, column: 7)
!17102 = distinct !DILexicalBlock(scope: !17103, file: !2600, line: 829, column: 26)
!17103 = distinct !DILexicalBlock(scope: !17086, file: !2600, line: 829, column: 2)
!17104 = !DILocation(line: 830, column: 26, scope: !17101)
!17105 = !DILocation(line: 830, column: 23, scope: !17101)
!17106 = !DILocation(line: 830, column: 7, scope: !17102)
!17107 = !DILocation(line: 831, column: 20, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17101, file: !2600, line: 830, column: 36)
!17109 = !DILocation(line: 832, column: 3, scope: !17108)
!17110 = !DILocation(line: 0, scope: !16117, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 829, column: 2, scope: !17103)
!17112 = !DILocation(line: 0, scope: !16125, inlinedAt: !17113)
!17113 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17111)
!17114 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17113)
!17115 = !DILocation(line: 834, column: 2, scope: !17077)
!17116 = distinct !DISubprogram(name: "z_pend_curr", scope: !2600, file: !2600, line: 840, type: !17117, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17119)
!17117 = !DISubroutineType(types: !17118)
!17118 = !{!103, !16093, !16082, !2526, !16879}
!17119 = !{!17120, !17121, !17122, !17123}
!17120 = !DILocalVariable(name: "lock", arg: 1, scope: !17116, file: !2600, line: 840, type: !16093)
!17121 = !DILocalVariable(name: "key", arg: 2, scope: !17116, file: !2600, line: 840, type: !16082)
!17122 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17116, file: !2600, line: 841, type: !2526)
!17123 = !DILocalVariable(name: "timeout", arg: 4, scope: !17116, file: !2600, line: 841, type: !16879)
!17124 = !DILocation(line: 0, scope: !17116)
!17125 = !DILocation(line: 844, column: 20, scope: !17116)
!17126 = !DILocation(line: 844, column: 18, scope: !17116)
!17127 = !DILocation(line: 0, scope: !16090, inlinedAt: !17128)
!17128 = distinct !DILocation(line: 856, column: 9, scope: !17116)
!17129 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17130)
!17130 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17128)
!17131 = !DILocation(line: 0, scope: !16099, inlinedAt: !17130)
!17132 = !DILocation(line: 857, column: 14, scope: !17116)
!17133 = !DILocation(line: 857, column: 2, scope: !17116)
!17134 = !DILocation(line: 0, scope: !16699, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 859, column: 9, scope: !17116)
!17136 = !DILocation(line: 196, column: 9, scope: !16699, inlinedAt: !17135)
!17137 = !DILocation(line: 859, column: 2, scope: !17116)
!17138 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2600, file: !2600, line: 862, type: !17139, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17141)
!17139 = !DISubroutineType(types: !17140)
!17140 = !{!2495, !2526}
!17141 = !{!17142, !17143, !17144, !17146}
!17142 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17138, file: !2600, line: 862, type: !2526)
!17143 = !DILocalVariable(name: "thread", scope: !17138, file: !2600, line: 864, type: !2495)
!17144 = !DILocalVariable(name: "__i", scope: !17145, file: !2600, line: 866, type: !16082)
!17145 = distinct !DILexicalBlock(scope: !17138, file: !2600, line: 866, column: 2)
!17146 = !DILocalVariable(name: "__key", scope: !17145, file: !2600, line: 866, type: !16082)
!17147 = !DILocation(line: 0, scope: !17138)
!17148 = !DILocation(line: 0, scope: !17145)
!17149 = !DILocation(line: 0, scope: !16090, inlinedAt: !17150)
!17150 = distinct !DILocation(line: 866, column: 2, scope: !17145)
!17151 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17152)
!17152 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17150)
!17153 = !DILocation(line: 0, scope: !16099, inlinedAt: !17152)
!17154 = !DILocation(line: 867, column: 12, scope: !17155)
!17155 = distinct !DILexicalBlock(scope: !17156, file: !2600, line: 866, column: 26)
!17156 = distinct !DILexicalBlock(scope: !17145, file: !2600, line: 866, column: 2)
!17157 = !DILocation(line: 869, column: 14, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17155, file: !2600, line: 869, column: 7)
!17159 = !DILocation(line: 869, column: 7, scope: !17155)
!17160 = !DILocation(line: 870, column: 4, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17158, file: !2600, line: 869, column: 23)
!17162 = !DILocation(line: 871, column: 3, scope: !17161)
!17163 = !DILocation(line: 0, scope: !16117, inlinedAt: !17164)
!17164 = distinct !DILocation(line: 866, column: 2, scope: !17156)
!17165 = !DILocation(line: 0, scope: !16125, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17164)
!17167 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17166)
!17168 = !DILocation(line: 874, column: 2, scope: !17138)
!17169 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2600, file: !2600, line: 877, type: !17139, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17170)
!17170 = !{!17171, !17172, !17173, !17175}
!17171 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17169, file: !2600, line: 877, type: !2526)
!17172 = !DILocalVariable(name: "thread", scope: !17169, file: !2600, line: 879, type: !2495)
!17173 = !DILocalVariable(name: "__i", scope: !17174, file: !2600, line: 881, type: !16082)
!17174 = distinct !DILexicalBlock(scope: !17169, file: !2600, line: 881, column: 2)
!17175 = !DILocalVariable(name: "__key", scope: !17174, file: !2600, line: 881, type: !16082)
!17176 = !DILocation(line: 0, scope: !17169)
!17177 = !DILocation(line: 0, scope: !17174)
!17178 = !DILocation(line: 0, scope: !16090, inlinedAt: !17179)
!17179 = distinct !DILocation(line: 881, column: 2, scope: !17174)
!17180 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17179)
!17182 = !DILocation(line: 0, scope: !16099, inlinedAt: !17181)
!17183 = !DILocation(line: 882, column: 12, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17185, file: !2600, line: 881, column: 26)
!17185 = distinct !DILexicalBlock(scope: !17174, file: !2600, line: 881, column: 2)
!17186 = !DILocation(line: 884, column: 14, scope: !17187)
!17187 = distinct !DILexicalBlock(scope: !17184, file: !2600, line: 884, column: 7)
!17188 = !DILocation(line: 884, column: 7, scope: !17184)
!17189 = !DILocation(line: 885, column: 4, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17187, file: !2600, line: 884, column: 23)
!17191 = !DILocation(line: 886, column: 10, scope: !17190)
!17192 = !DILocation(line: 887, column: 3, scope: !17190)
!17193 = !DILocation(line: 0, scope: !16117, inlinedAt: !17194)
!17194 = distinct !DILocation(line: 881, column: 2, scope: !17185)
!17195 = !DILocation(line: 0, scope: !16125, inlinedAt: !17196)
!17196 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17194)
!17197 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17196)
!17198 = !DILocation(line: 890, column: 2, scope: !17169)
!17199 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2600, file: !2600, line: 893, type: !16048, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17200)
!17200 = !{!17201}
!17201 = !DILocalVariable(name: "thread", arg: 1, scope: !17199, file: !2600, line: 893, type: !2495)
!17202 = !DILocation(line: 0, scope: !17199)
!17203 = !DILocation(line: 0, scope: !17055, inlinedAt: !17204)
!17204 = distinct !DILocation(line: 895, column: 2, scope: !17199)
!17205 = !DILocation(line: 0, scope: !17059, inlinedAt: !17204)
!17206 = !DILocation(line: 0, scope: !16090, inlinedAt: !17207)
!17207 = distinct !DILocation(line: 788, column: 2, scope: !17059, inlinedAt: !17204)
!17208 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17209)
!17209 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17207)
!17210 = !DILocation(line: 0, scope: !16099, inlinedAt: !17209)
!17211 = !DILocation(line: 789, column: 3, scope: !17069, inlinedAt: !17204)
!17212 = !DILocation(line: 0, scope: !16117, inlinedAt: !17213)
!17213 = distinct !DILocation(line: 788, column: 2, scope: !17070, inlinedAt: !17204)
!17214 = !DILocation(line: 0, scope: !16125, inlinedAt: !17215)
!17215 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17213)
!17216 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17215)
!17217 = !DILocation(line: 896, column: 8, scope: !17199)
!17218 = !DILocation(line: 897, column: 1, scope: !17199)
!17219 = distinct !DISubprogram(name: "z_set_prio", scope: !2600, file: !2600, line: 902, type: !16410, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17220)
!17220 = !{!17221, !17222, !17223, !17224, !17226}
!17221 = !DILocalVariable(name: "thread", arg: 1, scope: !17219, file: !2600, line: 902, type: !2495)
!17222 = !DILocalVariable(name: "prio", arg: 2, scope: !17219, file: !2600, line: 902, type: !103)
!17223 = !DILocalVariable(name: "need_sched", scope: !17219, file: !2600, line: 904, type: !131)
!17224 = !DILocalVariable(name: "__i", scope: !17225, file: !2600, line: 906, type: !16082)
!17225 = distinct !DILexicalBlock(scope: !17219, file: !2600, line: 906, column: 2)
!17226 = !DILocalVariable(name: "__key", scope: !17225, file: !2600, line: 906, type: !16082)
!17227 = !DILocation(line: 0, scope: !17219)
!17228 = !DILocation(line: 0, scope: !17225)
!17229 = !DILocation(line: 0, scope: !16090, inlinedAt: !17230)
!17230 = distinct !DILocation(line: 906, column: 2, scope: !17225)
!17231 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17232)
!17232 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17230)
!17233 = !DILocation(line: 0, scope: !16099, inlinedAt: !17232)
!17234 = !DILocation(line: 907, column: 16, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17236, file: !2600, line: 906, column: 26)
!17236 = distinct !DILexicalBlock(scope: !17225, file: !2600, line: 906, column: 2)
!17237 = !DILocation(line: 909, column: 7, scope: !17235)
!17238 = !DILocation(line: 0, scope: !16259, inlinedAt: !17239)
!17239 = distinct !DILocation(line: 912, column: 5, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17241, file: !2600, line: 911, column: 63)
!17241 = distinct !DILexicalBlock(scope: !17242, file: !2600, line: 911, column: 8)
!17242 = distinct !DILexicalBlock(scope: !17243, file: !2600, line: 909, column: 19)
!17243 = distinct !DILexicalBlock(scope: !17235, file: !2600, line: 909, column: 7)
!17244 = !DILocation(line: 266, column: 28, scope: !16259, inlinedAt: !17239)
!17245 = !DILocation(line: 0, scope: !16267, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 268, column: 3, scope: !16271, inlinedAt: !17239)
!17247 = !DILocation(line: 234, column: 2, scope: !16267, inlinedAt: !17246)
!17248 = !DILocation(line: 913, column: 23, scope: !17240)
!17249 = !DILocation(line: 0, scope: !16276, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 914, column: 5, scope: !17240)
!17251 = !DILocation(line: 252, column: 28, scope: !16276, inlinedAt: !17250)
!17252 = !DILocation(line: 0, scope: !16283, inlinedAt: !17253)
!17253 = distinct !DILocation(line: 254, column: 3, scope: !16287, inlinedAt: !17250)
!17254 = !DILocation(line: 0, scope: !16290, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 229, column: 2, scope: !16283, inlinedAt: !17253)
!17256 = !DILocation(line: 188, column: 2, scope: !16300, inlinedAt: !17255)
!17257 = !DILocation(line: 188, column: 2, scope: !16302, inlinedAt: !17255)
!17258 = !DILocation(line: 0, scope: !16300, inlinedAt: !17255)
!17259 = !DILocation(line: 189, column: 7, scope: !16305, inlinedAt: !17255)
!17260 = !DILocation(line: 189, column: 35, scope: !16305, inlinedAt: !17255)
!17261 = !DILocation(line: 189, column: 7, scope: !16306, inlinedAt: !17255)
!17262 = !DILocation(line: 190, column: 4, scope: !16310, inlinedAt: !17255)
!17263 = !DILocation(line: 192, column: 4, scope: !16310, inlinedAt: !17255)
!17264 = distinct !{!17264, !17256, !17265}
!17265 = !DILocation(line: 194, column: 2, scope: !16300, inlinedAt: !17255)
!17266 = !DILocation(line: 196, column: 2, scope: !16290, inlinedAt: !17255)
!17267 = !DILocation(line: 197, column: 1, scope: !16290, inlinedAt: !17255)
!17268 = !DILocation(line: 918, column: 4, scope: !17242)
!17269 = !DILocation(line: 919, column: 3, scope: !17242)
!17270 = !DILocation(line: 920, column: 22, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17243, file: !2600, line: 919, column: 10)
!17272 = !DILocation(line: 0, scope: !16117, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 906, column: 2, scope: !17236)
!17274 = !DILocation(line: 0, scope: !16125, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17273)
!17276 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17275)
!17277 = !DILocation(line: 926, column: 2, scope: !17219)
!17278 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2600, file: !2600, line: 929, type: !17279, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17281)
!17279 = !DISubroutineType(types: !17280)
!17280 = !{null, !2495, !103}
!17281 = !{!17282, !17283, !17284}
!17282 = !DILocalVariable(name: "thread", arg: 1, scope: !17278, file: !2600, line: 929, type: !2495)
!17283 = !DILocalVariable(name: "prio", arg: 2, scope: !17278, file: !2600, line: 929, type: !103)
!17284 = !DILocalVariable(name: "need_sched", scope: !17278, file: !2600, line: 931, type: !131)
!17285 = !DILocation(line: 0, scope: !17278)
!17286 = !DILocation(line: 931, column: 20, scope: !17278)
!17287 = !DILocation(line: 935, column: 17, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17278, file: !2600, line: 935, column: 6)
!17289 = !DILocation(line: 935, column: 20, scope: !17288)
!17290 = !DILocation(line: 935, column: 35, scope: !17288)
!17291 = !DILocation(line: 935, column: 48, scope: !17288)
!17292 = !DILocation(line: 935, column: 6, scope: !17278)
!17293 = !DILocation(line: 936, column: 3, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17288, file: !2600, line: 935, column: 55)
!17295 = !DILocation(line: 937, column: 2, scope: !17294)
!17296 = !DILocation(line: 938, column: 1, scope: !17278)
!17297 = distinct !DISubprogram(name: "k_sched_lock", scope: !2600, file: !2600, line: 987, type: !334, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17298)
!17298 = !{!17299, !17301}
!17299 = !DILocalVariable(name: "__i", scope: !17300, file: !2600, line: 989, type: !16082)
!17300 = distinct !DILexicalBlock(scope: !17297, file: !2600, line: 989, column: 2)
!17301 = !DILocalVariable(name: "__key", scope: !17300, file: !2600, line: 989, type: !16082)
!17302 = !DILocation(line: 0, scope: !17300)
!17303 = !DILocation(line: 0, scope: !16090, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 989, column: 2, scope: !17300)
!17305 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17304)
!17307 = !DILocation(line: 0, scope: !16099, inlinedAt: !17306)
!17308 = !DILocation(line: 992, column: 3, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17310, file: !2600, line: 989, column: 26)
!17310 = distinct !DILexicalBlock(scope: !17300, file: !2600, line: 989, column: 2)
!17311 = !DILocation(line: 0, scope: !16117, inlinedAt: !17312)
!17312 = distinct !DILocation(line: 989, column: 2, scope: !17310)
!17313 = !DILocation(line: 0, scope: !16125, inlinedAt: !17314)
!17314 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17312)
!17315 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17314)
!17316 = !DILocation(line: 994, column: 1, scope: !17297)
!17317 = distinct !DISubprogram(name: "z_sched_lock", scope: !14620, file: !14620, line: 251, type: !334, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!17318 = !DILocation(line: 256, column: 4, scope: !17317)
!17319 = !DILocation(line: 256, column: 19, scope: !17317)
!17320 = !DILocation(line: 256, column: 2, scope: !17317)
!17321 = !DILocation(line: 258, column: 2, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17317, file: !14620, line: 258, column: 2)
!17323 = !{i64 2155187313}
!17324 = !DILocation(line: 259, column: 1, scope: !17317)
!17325 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2600, file: !2600, line: 996, type: !334, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17326)
!17326 = !{!17327, !17329}
!17327 = !DILocalVariable(name: "__i", scope: !17328, file: !2600, line: 998, type: !16082)
!17328 = distinct !DILexicalBlock(scope: !17325, file: !2600, line: 998, column: 2)
!17329 = !DILocalVariable(name: "__key", scope: !17328, file: !2600, line: 998, type: !16082)
!17330 = !DILocation(line: 0, scope: !17328)
!17331 = !DILocation(line: 0, scope: !16090, inlinedAt: !17332)
!17332 = distinct !DILocation(line: 998, column: 2, scope: !17328)
!17333 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17334)
!17334 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17332)
!17335 = !DILocation(line: 0, scope: !16099, inlinedAt: !17334)
!17336 = !DILocation(line: 1002, column: 5, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17338, file: !2600, line: 998, column: 26)
!17338 = distinct !DILexicalBlock(scope: !17328, file: !2600, line: 998, column: 2)
!17339 = !DILocation(line: 1002, column: 20, scope: !17337)
!17340 = !DILocation(line: 1002, column: 3, scope: !17337)
!17341 = !DILocation(line: 1003, column: 3, scope: !17337)
!17342 = !DILocation(line: 0, scope: !16117, inlinedAt: !17343)
!17343 = distinct !DILocation(line: 998, column: 2, scope: !17338)
!17344 = !DILocation(line: 0, scope: !16125, inlinedAt: !17345)
!17345 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17343)
!17346 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17345)
!17347 = !DILocation(line: 1011, column: 2, scope: !17325)
!17348 = !DILocation(line: 1012, column: 1, scope: !17325)
!17349 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2600, file: !2600, line: 1014, type: !16398, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!17350 = !DILocation(line: 1028, column: 25, scope: !17349)
!17351 = !DILocation(line: 1028, column: 2, scope: !17349)
!17352 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2600, file: !2600, line: 1155, type: !17353, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17355)
!17353 = !DISubroutineType(types: !17354)
!17354 = !{!131, !2524, !2524}
!17355 = !{!17356, !17357, !17358, !17359, !17360}
!17356 = !DILocalVariable(name: "a", arg: 1, scope: !17352, file: !2600, line: 1155, type: !2524)
!17357 = !DILocalVariable(name: "b", arg: 2, scope: !17352, file: !2600, line: 1155, type: !2524)
!17358 = !DILocalVariable(name: "thread_a", scope: !17352, file: !2600, line: 1157, type: !2495)
!17359 = !DILocalVariable(name: "thread_b", scope: !17352, file: !2600, line: 1157, type: !2495)
!17360 = !DILocalVariable(name: "cmp", scope: !17352, file: !2600, line: 1158, type: !331)
!17361 = !DILocation(line: 0, scope: !17352)
!17362 = !DILocation(line: 1160, column: 13, scope: !17352)
!17363 = !DILocation(line: 1161, column: 13, scope: !17352)
!17364 = !DILocation(line: 1163, column: 8, scope: !17352)
!17365 = !DILocation(line: 1165, column: 10, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17352, file: !2600, line: 1165, column: 6)
!17367 = !DILocation(line: 1165, column: 6, scope: !17352)
!17368 = !DILocation(line: 1167, column: 17, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17366, file: !2600, line: 1167, column: 13)
!17370 = !DILocation(line: 1167, column: 13, scope: !17366)
!17371 = !DILocation(line: 1170, column: 25, scope: !17372)
!17372 = distinct !DILexicalBlock(scope: !17369, file: !2600, line: 1169, column: 9)
!17373 = !DILocation(line: 1170, column: 52, scope: !17372)
!17374 = !DILocation(line: 1170, column: 35, scope: !17372)
!17375 = !DILocation(line: 1170, column: 3, scope: !17372)
!17376 = !DILocation(line: 0, scope: !17366)
!17377 = !DILocation(line: 1173, column: 1, scope: !17352)
!17378 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2600, file: !2600, line: 1175, type: !17379, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17394)
!17379 = !DISubroutineType(types: !17380)
!17380 = !{null, !17381, !2495}
!17381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17382, size: 32)
!17382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17383, line: 37, size: 128, elements: !17384)
!17383 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17384 = !{!17385, !17393}
!17385 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17382, file: !17383, line: 38, baseType: !17386, size: 96)
!17386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !175, line: 83, size: 96, elements: !17387)
!17387 = !{!17388, !17389, !17392}
!17388 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17386, file: !175, line: 84, baseType: !2524, size: 32)
!17389 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17386, file: !175, line: 85, baseType: !17390, size: 32, offset: 32)
!17390 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !175, line: 81, baseType: !17391)
!17391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17353, size: 32)
!17392 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17386, file: !175, line: 86, baseType: !103, size: 32, offset: 64)
!17393 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17382, file: !17383, line: 39, baseType: !103, size: 32, offset: 96)
!17394 = !{!17395, !17396, !17397, !17398, !17407}
!17395 = !DILocalVariable(name: "pq", arg: 1, scope: !17378, file: !2600, line: 1175, type: !17381)
!17396 = !DILocalVariable(name: "thread", arg: 2, scope: !17378, file: !2600, line: 1175, type: !2495)
!17397 = !DILocalVariable(name: "t", scope: !17378, file: !2600, line: 1177, type: !2495)
!17398 = !DILocalVariable(name: "__f", scope: !17399, file: !2600, line: 1190, type: !17402)
!17399 = distinct !DILexicalBlock(scope: !17400, file: !2600, line: 1190, column: 3)
!17400 = distinct !DILexicalBlock(scope: !17401, file: !2600, line: 1189, column: 27)
!17401 = distinct !DILexicalBlock(scope: !17378, file: !2600, line: 1189, column: 6)
!17402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !175, line: 155, size: 96, elements: !17403)
!17403 = !{!17404, !17405, !17406}
!17404 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17402, file: !175, line: 156, baseType: !2595, size: 32)
!17405 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17402, file: !175, line: 157, baseType: !379, size: 32, offset: 32)
!17406 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17402, file: !175, line: 158, baseType: !331, size: 32, offset: 64)
!17407 = !DILocalVariable(name: "n", scope: !17408, file: !2600, line: 1190, type: !2524)
!17408 = distinct !DILexicalBlock(scope: !17409, file: !2600, line: 1190, column: 3)
!17409 = distinct !DILexicalBlock(scope: !17399, file: !2600, line: 1190, column: 3)
!17410 = !DILocation(line: 0, scope: !17378)
!17411 = !DILocation(line: 1181, column: 31, scope: !17378)
!17412 = !DILocation(line: 1181, column: 45, scope: !17378)
!17413 = !DILocation(line: 1181, column: 15, scope: !17378)
!17414 = !DILocation(line: 1181, column: 25, scope: !17378)
!17415 = !DILocation(line: 1189, column: 11, scope: !17401)
!17416 = !DILocation(line: 1189, column: 7, scope: !17401)
!17417 = !DILocation(line: 1189, column: 6, scope: !17378)
!17418 = !DILocation(line: 1190, column: 3, scope: !17399)
!17419 = !DILocation(line: 1190, column: 3, scope: !17408)
!17420 = !DILocation(line: 0, scope: !17408)
!17421 = !DILocation(line: 1190, column: 3, scope: !17409)
!17422 = !DILocation(line: 1193, column: 2, scope: !17400)
!17423 = !DILocation(line: 1191, column: 42, scope: !17424)
!17424 = distinct !DILexicalBlock(scope: !17409, file: !2600, line: 1190, column: 54)
!17425 = !DILocation(line: 1191, column: 12, scope: !17424)
!17426 = !DILocation(line: 1191, column: 22, scope: !17424)
!17427 = distinct !{!17427, !17418, !17428}
!17428 = !DILocation(line: 1192, column: 3, scope: !17399)
!17429 = !DILocation(line: 1195, column: 17, scope: !17378)
!17430 = !DILocation(line: 1195, column: 37, scope: !17378)
!17431 = !DILocation(line: 1195, column: 2, scope: !17378)
!17432 = !DILocation(line: 1196, column: 1, scope: !17378)
!17433 = !DISubprogram(name: "z_rb_foreach_next", scope: !175, file: !175, line: 176, type: !17434, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!17434 = !DISubroutineType(types: !17435)
!17435 = !{!2524, !17436, !17437}
!17436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17386, size: 32)
!17437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17402, size: 32)
!17438 = !DISubprogram(name: "rb_insert", scope: !175, file: !175, line: 105, type: !17439, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!17439 = !DISubroutineType(types: !17440)
!17440 = !{null, !17436, !2524}
!17441 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2600, file: !2600, line: 1198, type: !17379, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17442)
!17442 = !{!17443, !17444}
!17443 = !DILocalVariable(name: "pq", arg: 1, scope: !17441, file: !2600, line: 1198, type: !17381)
!17444 = !DILocalVariable(name: "thread", arg: 2, scope: !17441, file: !2600, line: 1198, type: !2495)
!17445 = !DILocation(line: 0, scope: !17441)
!17446 = !DILocation(line: 1202, column: 17, scope: !17441)
!17447 = !DILocation(line: 1202, column: 37, scope: !17441)
!17448 = !DILocation(line: 1202, column: 2, scope: !17441)
!17449 = !DILocation(line: 1204, column: 16, scope: !17450)
!17450 = distinct !DILexicalBlock(scope: !17441, file: !2600, line: 1204, column: 6)
!17451 = !DILocation(line: 1204, column: 7, scope: !17450)
!17452 = !DILocation(line: 1204, column: 6, scope: !17441)
!17453 = !DILocation(line: 1205, column: 7, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17450, file: !2600, line: 1204, column: 22)
!17455 = !DILocation(line: 1205, column: 22, scope: !17454)
!17456 = !DILocation(line: 1206, column: 2, scope: !17454)
!17457 = !DILocation(line: 1207, column: 1, scope: !17441)
!17458 = !DISubprogram(name: "rb_remove", scope: !175, file: !175, line: 110, type: !17439, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!17459 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2600, file: !2600, line: 1209, type: !17460, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17462)
!17460 = !DISubroutineType(types: !17461)
!17461 = !{!2495, !17381}
!17462 = !{!17463, !17464, !17465}
!17463 = !DILocalVariable(name: "pq", arg: 1, scope: !17459, file: !2600, line: 1209, type: !17381)
!17464 = !DILocalVariable(name: "thread", scope: !17459, file: !2600, line: 1211, type: !2495)
!17465 = !DILocalVariable(name: "n", scope: !17459, file: !2600, line: 1212, type: !2524)
!17466 = !DILocation(line: 0, scope: !17459)
!17467 = !DILocation(line: 1212, column: 37, scope: !17459)
!17468 = !DILocation(line: 1212, column: 21, scope: !17459)
!17469 = !DILocation(line: 1217, column: 2, scope: !17459)
!17470 = distinct !DISubprogram(name: "rb_get_min", scope: !175, file: !175, line: 115, type: !17471, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17473)
!17471 = !DISubroutineType(types: !17472)
!17472 = !{!2524, !17436}
!17473 = !{!17474}
!17474 = !DILocalVariable(name: "tree", arg: 1, scope: !17470, file: !175, line: 115, type: !17436)
!17475 = !DILocation(line: 0, scope: !17470)
!17476 = !DILocation(line: 117, column: 9, scope: !17470)
!17477 = !DILocation(line: 117, column: 2, scope: !17470)
!17478 = !DISubprogram(name: "z_rb_get_minmax", scope: !175, file: !175, line: 100, type: !17479, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !251)
!17479 = !DISubroutineType(types: !17480)
!17480 = !{!2524, !17436, !185}
!17481 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2600, file: !2600, line: 1246, type: !17482, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17492)
!17482 = !DISubroutineType(types: !17483)
!17483 = !{!2495, !17484}
!17484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17485, size: 32)
!17485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17383, line: 53, size: 2080, elements: !17486)
!17486 = !{!17487, !17491}
!17487 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17485, file: !17383, line: 54, baseType: !17488, size: 2048)
!17488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 2048, elements: !17489)
!17489 = !{!17490}
!17490 = !DISubrange(count: 32)
!17491 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17485, file: !17383, line: 55, baseType: !32, size: 32, offset: 2048)
!17492 = !{!17493, !17494, !17495, !17496}
!17493 = !DILocalVariable(name: "pq", arg: 1, scope: !17481, file: !2600, line: 1246, type: !17484)
!17494 = !DILocalVariable(name: "thread", scope: !17481, file: !2600, line: 1252, type: !2495)
!17495 = !DILocalVariable(name: "l", scope: !17481, file: !2600, line: 1253, type: !16293)
!17496 = !DILocalVariable(name: "n", scope: !17481, file: !2600, line: 1254, type: !2596)
!17497 = !DILocation(line: 0, scope: !17481)
!17498 = !DILocation(line: 1248, column: 11, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17481, file: !2600, line: 1248, column: 6)
!17500 = !DILocation(line: 1248, column: 7, scope: !17499)
!17501 = !DILocation(line: 1248, column: 6, scope: !17481)
!17502 = !DILocation(line: 1253, column: 31, scope: !17481)
!17503 = !DILocation(line: 1253, column: 20, scope: !17481)
!17504 = !DILocation(line: 1254, column: 19, scope: !17481)
!17505 = !DILocation(line: 1260, column: 1, scope: !17481)
!17506 = distinct !DISubprogram(name: "z_unpend_all", scope: !2600, file: !2600, line: 1262, type: !17507, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17509)
!17507 = !DISubroutineType(types: !17508)
!17508 = !{!103, !2526}
!17509 = !{!17510, !17511, !17512}
!17510 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17506, file: !2600, line: 1262, type: !2526)
!17511 = !DILocalVariable(name: "need_sched", scope: !17506, file: !2600, line: 1264, type: !103)
!17512 = !DILocalVariable(name: "thread", scope: !17506, file: !2600, line: 1265, type: !2495)
!17513 = !DILocation(line: 0, scope: !17506)
!17514 = !DILocation(line: 1267, column: 19, scope: !17506)
!17515 = !DILocation(line: 1267, column: 41, scope: !17506)
!17516 = !DILocation(line: 1267, column: 2, scope: !17506)
!17517 = !DILocation(line: 1268, column: 3, scope: !17518)
!17518 = distinct !DILexicalBlock(scope: !17506, file: !2600, line: 1267, column: 50)
!17519 = !DILocation(line: 1269, column: 3, scope: !17518)
!17520 = distinct !{!17520, !17516, !17521}
!17521 = !DILocation(line: 1271, column: 2, scope: !17506)
!17522 = !DILocation(line: 1273, column: 2, scope: !17506)
!17523 = distinct !DISubprogram(name: "z_waitq_head", scope: !14945, file: !14945, line: 52, type: !17139, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17524)
!17524 = !{!17525}
!17525 = !DILocalVariable(name: "w", arg: 1, scope: !17523, file: !14945, line: 52, type: !2526)
!17526 = !DILocation(line: 0, scope: !17523)
!17527 = !DILocation(line: 54, column: 52, scope: !17523)
!17528 = !DILocation(line: 54, column: 28, scope: !17523)
!17529 = !DILocation(line: 54, column: 9, scope: !17523)
!17530 = !DILocation(line: 54, column: 2, scope: !17523)
!17531 = distinct !DISubprogram(name: "init_ready_q", scope: !2600, file: !2600, line: 1276, type: !17532, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17539)
!17532 = !DISubroutineType(types: !17533)
!17533 = !{null, !17534}
!17534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17535, size: 32)
!17535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !141, line: 83, size: 96, elements: !17536)
!17536 = !{!17537, !17538}
!17537 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17535, file: !141, line: 86, baseType: !2495, size: 32)
!17538 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17535, file: !141, line: 90, baseType: !2531, size: 64, offset: 32)
!17539 = !{!17540}
!17540 = !DILocalVariable(name: "rq", arg: 1, scope: !17531, file: !2600, line: 1276, type: !17534)
!17541 = !DILocation(line: 0, scope: !17531)
!17542 = !DILocation(line: 1289, column: 22, scope: !17531)
!17543 = !DILocation(line: 1289, column: 2, scope: !17531)
!17544 = !DILocation(line: 1291, column: 1, scope: !17531)
!17545 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !17546, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17548)
!17546 = !DISubroutineType(types: !17547)
!17547 = !{null, !16293}
!17548 = !{!17549}
!17549 = !DILocalVariable(name: "list", arg: 1, scope: !17545, file: !146, line: 197, type: !16293)
!17550 = !DILocation(line: 0, scope: !17545)
!17551 = !DILocation(line: 199, column: 8, scope: !17545)
!17552 = !DILocation(line: 199, column: 13, scope: !17545)
!17553 = !DILocation(line: 200, column: 8, scope: !17545)
!17554 = !DILocation(line: 200, column: 13, scope: !17545)
!17555 = !DILocation(line: 201, column: 1, scope: !17545)
!17556 = distinct !DISubprogram(name: "z_sched_init", scope: !2600, file: !2600, line: 1293, type: !334, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!17557 = !DILocation(line: 1302, column: 2, scope: !17556)
!17558 = !DILocation(line: 1306, column: 2, scope: !17556)
!17559 = !DILocation(line: 1309, column: 1, scope: !17556)
!17560 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2600, file: !2600, line: 1311, type: !17561, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17564)
!17561 = !DISubroutineType(types: !17562)
!17562 = !{!103, !17563}
!17563 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !163, line: 347, baseType: !2495)
!17564 = !{!17565}
!17565 = !DILocalVariable(name: "thread", arg: 1, scope: !17560, file: !2600, line: 1311, type: !17563)
!17566 = !DILocation(line: 0, scope: !17560)
!17567 = !DILocation(line: 1313, column: 22, scope: !17560)
!17568 = !DILocation(line: 1313, column: 9, scope: !17560)
!17569 = !DILocation(line: 1313, column: 2, scope: !17560)
!17570 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2600, file: !2600, line: 1325, type: !17571, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17573)
!17571 = !DISubroutineType(types: !17572)
!17572 = !{null, !17563, !103}
!17573 = !{!17574, !17575, !17576}
!17574 = !DILocalVariable(name: "thread", arg: 1, scope: !17570, file: !2600, line: 1325, type: !17563)
!17575 = !DILocalVariable(name: "prio", arg: 2, scope: !17570, file: !2600, line: 1325, type: !103)
!17576 = !DILocalVariable(name: "th", scope: !17570, file: !2600, line: 1334, type: !2495)
!17577 = !DILocation(line: 0, scope: !17570)
!17578 = !DILocation(line: 1336, column: 2, scope: !17570)
!17579 = !DILocation(line: 1337, column: 1, scope: !17570)
!17580 = distinct !DISubprogram(name: "k_can_yield", scope: !2600, file: !2600, line: 1384, type: !8394, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!17581 = !DILocation(line: 1386, column: 11, scope: !17580)
!17582 = !DILocation(line: 1386, column: 29, scope: !17580)
!17583 = !DILocation(line: 1386, column: 32, scope: !17580)
!17584 = !DILocation(line: 1386, column: 46, scope: !17580)
!17585 = !DILocation(line: 1387, column: 28, scope: !17580)
!17586 = !DILocation(line: 1387, column: 4, scope: !17580)
!17587 = !DILocation(line: 1386, column: 2, scope: !17580)
!17588 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !137, file: !137, line: 989, type: !8394, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!17589 = !DILocation(line: 993, column: 10, scope: !17588)
!17590 = !DILocation(line: 993, column: 2, scope: !17588)
!17591 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2600, file: !2600, line: 1390, type: !334, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17592)
!17592 = !{!17593}
!17593 = !DILocalVariable(name: "key", scope: !17591, file: !2600, line: 1396, type: !16082)
!17594 = !DILocation(line: 0, scope: !16090, inlinedAt: !17595)
!17595 = distinct !DILocation(line: 1396, column: 25, scope: !17591)
!17596 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17597)
!17597 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17595)
!17598 = !DILocation(line: 0, scope: !16099, inlinedAt: !17597)
!17599 = !DILocation(line: 0, scope: !17591)
!17600 = !DILocation(line: 1400, column: 18, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17602, file: !2600, line: 1399, column: 36)
!17602 = distinct !DILexicalBlock(scope: !17591, file: !2600, line: 1398, column: 6)
!17603 = !DILocation(line: 0, scope: !16259, inlinedAt: !17604)
!17604 = distinct !DILocation(line: 1400, column: 3, scope: !17601)
!17605 = !DILocation(line: 266, column: 15, scope: !16259, inlinedAt: !17604)
!17606 = !DILocation(line: 266, column: 28, scope: !16259, inlinedAt: !17604)
!17607 = !DILocation(line: 0, scope: !16267, inlinedAt: !17608)
!17608 = distinct !DILocation(line: 268, column: 3, scope: !16271, inlinedAt: !17604)
!17609 = !DILocation(line: 234, column: 2, scope: !16267, inlinedAt: !17608)
!17610 = !DILocation(line: 1402, column: 15, scope: !17591)
!17611 = !DILocation(line: 0, scope: !16276, inlinedAt: !17612)
!17612 = distinct !DILocation(line: 1402, column: 2, scope: !17591)
!17613 = !DILocation(line: 252, column: 15, scope: !16276, inlinedAt: !17612)
!17614 = !DILocation(line: 252, column: 28, scope: !16276, inlinedAt: !17612)
!17615 = !DILocation(line: 0, scope: !16283, inlinedAt: !17616)
!17616 = distinct !DILocation(line: 254, column: 3, scope: !16287, inlinedAt: !17612)
!17617 = !DILocation(line: 0, scope: !16290, inlinedAt: !17618)
!17618 = distinct !DILocation(line: 229, column: 2, scope: !16283, inlinedAt: !17616)
!17619 = !DILocation(line: 188, column: 2, scope: !16300, inlinedAt: !17618)
!17620 = !DILocation(line: 188, column: 2, scope: !16302, inlinedAt: !17618)
!17621 = !DILocation(line: 0, scope: !16300, inlinedAt: !17618)
!17622 = !DILocation(line: 189, column: 7, scope: !16305, inlinedAt: !17618)
!17623 = !DILocation(line: 189, column: 35, scope: !16305, inlinedAt: !17618)
!17624 = !DILocation(line: 189, column: 7, scope: !16306, inlinedAt: !17618)
!17625 = !DILocation(line: 191, column: 21, scope: !16310, inlinedAt: !17618)
!17626 = !DILocation(line: 190, column: 4, scope: !16310, inlinedAt: !17618)
!17627 = !DILocation(line: 192, column: 4, scope: !16310, inlinedAt: !17618)
!17628 = distinct !{!17628, !17619, !17629}
!17629 = !DILocation(line: 194, column: 2, scope: !16300, inlinedAt: !17618)
!17630 = !DILocation(line: 196, column: 37, scope: !16290, inlinedAt: !17618)
!17631 = !DILocation(line: 196, column: 2, scope: !16290, inlinedAt: !17618)
!17632 = !DILocation(line: 197, column: 1, scope: !16290, inlinedAt: !17618)
!17633 = !DILocation(line: 1403, column: 2, scope: !17591)
!17634 = !DILocation(line: 0, scope: !16699, inlinedAt: !17635)
!17635 = distinct !DILocation(line: 1404, column: 2, scope: !17591)
!17636 = !DILocation(line: 196, column: 9, scope: !16699, inlinedAt: !17635)
!17637 = !DILocation(line: 1405, column: 1, scope: !17591)
!17638 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2600, file: !2600, line: 1459, type: !17639, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17641)
!17639 = !DISubroutineType(types: !17640)
!17640 = !{!331, !16879}
!17641 = !{!17642, !17643, !17644}
!17642 = !DILocalVariable(name: "timeout", arg: 1, scope: !17638, file: !2600, line: 1459, type: !16879)
!17643 = !DILocalVariable(name: "ticks", scope: !17638, file: !2600, line: 1461, type: !104)
!17644 = !DILocalVariable(name: "ret", scope: !17638, file: !2600, line: 1480, type: !331)
!17645 = !DILocation(line: 0, scope: !17638)
!17646 = !DILocation(line: 1468, column: 6, scope: !17647)
!17647 = distinct !DILexicalBlock(scope: !17638, file: !2600, line: 1468, column: 6)
!17648 = !DILocation(line: 1468, column: 6, scope: !17638)
!17649 = !DILocation(line: 1469, column: 20, scope: !17650)
!17650 = distinct !DILexicalBlock(scope: !17647, file: !2600, line: 1468, column: 40)
!17651 = !DILocation(line: 1469, column: 3, scope: !17650)
!17652 = !DILocation(line: 1473, column: 3, scope: !17650)
!17653 = !DILocation(line: 1478, column: 10, scope: !17638)
!17654 = !DILocation(line: 1480, column: 16, scope: !17638)
!17655 = !DILocation(line: 1485, column: 1, scope: !17638)
!17656 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3675, file: !3675, line: 310, type: !17657, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17659)
!17657 = !DISubroutineType(types: !17658)
!17658 = !{null, !17563}
!17659 = !{!17660}
!17660 = !DILocalVariable(name: "thread", arg: 1, scope: !17656, file: !3675, line: 310, type: !17563)
!17661 = !DILocation(line: 0, scope: !17656)
!17662 = !DILocation(line: 319, column: 2, scope: !17663)
!17663 = distinct !DILexicalBlock(scope: !17656, file: !3675, line: 319, column: 2)
!17664 = !{i64 2155105702}
!17665 = !DILocation(line: 320, column: 2, scope: !17656)
!17666 = !DILocation(line: 321, column: 1, scope: !17656)
!17667 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2600, file: !2600, line: 1415, type: !17668, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17670)
!17668 = !DISubroutineType(types: !17669)
!17669 = !{!331, !104}
!17670 = !{!17671, !17672, !17673, !17674}
!17671 = !DILocalVariable(name: "ticks", arg: 1, scope: !17667, file: !2600, line: 1415, type: !104)
!17672 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17667, file: !2600, line: 1418, type: !108)
!17673 = !DILocalVariable(name: "timeout", scope: !17667, file: !2600, line: 1430, type: !16879)
!17674 = !DILocalVariable(name: "key", scope: !17667, file: !2600, line: 1437, type: !16082)
!17675 = !DILocation(line: 0, scope: !17667)
!17676 = !DILocation(line: 1425, column: 12, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17667, file: !2600, line: 1425, column: 6)
!17678 = !DILocation(line: 1425, column: 6, scope: !17667)
!17679 = !DILocation(line: 1426, column: 3, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17677, file: !2600, line: 1425, column: 18)
!17681 = !DILocation(line: 1427, column: 3, scope: !17680)
!17682 = !DILocation(line: 1431, column: 24, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17667, file: !2600, line: 1431, column: 6)
!17684 = !DILocation(line: 1431, column: 6, scope: !17667)
!17685 = !DILocation(line: 1432, column: 35, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17683, file: !2600, line: 1431, column: 30)
!17687 = !DILocation(line: 1432, column: 27, scope: !17686)
!17688 = !DILocation(line: 1433, column: 2, scope: !17686)
!17689 = !DILocation(line: 1434, column: 27, scope: !17690)
!17690 = distinct !DILexicalBlock(scope: !17683, file: !2600, line: 1433, column: 9)
!17691 = !DILocation(line: 0, scope: !17683)
!17692 = !DILocation(line: 0, scope: !16090, inlinedAt: !17693)
!17693 = distinct !DILocation(line: 1437, column: 25, scope: !17667)
!17694 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17695)
!17695 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17693)
!17696 = !DILocation(line: 0, scope: !16099, inlinedAt: !17695)
!17697 = !DILocation(line: 1440, column: 20, scope: !17667)
!17698 = !DILocation(line: 1440, column: 18, scope: !17667)
!17699 = !DILocation(line: 1442, column: 2, scope: !17667)
!17700 = !DILocation(line: 1443, column: 23, scope: !17667)
!17701 = !DILocation(line: 1443, column: 2, scope: !17667)
!17702 = !DILocation(line: 1444, column: 29, scope: !17667)
!17703 = !DILocation(line: 1444, column: 2, scope: !17667)
!17704 = !DILocation(line: 0, scope: !16699, inlinedAt: !17705)
!17705 = distinct !DILocation(line: 1446, column: 8, scope: !17667)
!17706 = !DILocation(line: 196, column: 9, scope: !16699, inlinedAt: !17705)
!17707 = !DILocation(line: 1450, column: 10, scope: !17667)
!17708 = !DILocation(line: 1450, column: 45, scope: !17667)
!17709 = !DILocation(line: 1450, column: 43, scope: !17667)
!17710 = !DILocation(line: 1451, column: 6, scope: !17667)
!17711 = !DILocation(line: 1457, column: 1, scope: !17667)
!17712 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3661, file: !3661, line: 1103, type: !3662, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17713)
!17713 = !{!17714}
!17714 = !DILocalVariable(name: "t", arg: 1, scope: !17712, file: !3661, line: 1103, type: !109)
!17715 = !DILocation(line: 0, scope: !17712)
!17716 = !DILocation(line: 0, scope: !16137, inlinedAt: !17717)
!17717 = distinct !DILocation(line: 1106, column: 9, scope: !17712)
!17718 = !DILocation(line: 139, column: 13, scope: !17719, inlinedAt: !17717)
!17719 = distinct !DILexicalBlock(scope: !17720, file: !3661, line: 138, column: 10)
!17720 = distinct !DILexicalBlock(scope: !17721, file: !3661, line: 136, column: 7)
!17721 = distinct !DILexicalBlock(scope: !16158, file: !3661, line: 134, column: 17)
!17722 = !DILocation(line: 1106, column: 2, scope: !17712)
!17723 = distinct !DISubprogram(name: "k_yield", scope: !3675, file: !3675, line: 140, type: !334, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!17724 = !DILocation(line: 148, column: 2, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17723, file: !3675, line: 148, column: 2)
!17726 = !{i64 2155105022}
!17727 = !DILocation(line: 149, column: 2, scope: !17723)
!17728 = !DILocation(line: 150, column: 1, scope: !17723)
!17729 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2600, file: !2600, line: 1495, type: !17730, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17732)
!17730 = !DISubroutineType(types: !17731)
!17731 = !{!331, !103}
!17732 = !{!17733, !17734}
!17733 = !DILocalVariable(name: "us", arg: 1, scope: !17729, file: !2600, line: 1495, type: !103)
!17734 = !DILocalVariable(name: "ticks", scope: !17729, file: !2600, line: 1497, type: !331)
!17735 = !DILocation(line: 0, scope: !17729)
!17736 = !DILocation(line: 1501, column: 31, scope: !17729)
!17737 = !DILocation(line: 1501, column: 10, scope: !17729)
!17738 = !DILocation(line: 1502, column: 23, scope: !17729)
!17739 = !DILocation(line: 1502, column: 10, scope: !17729)
!17740 = !DILocation(line: 1506, column: 31, scope: !17729)
!17741 = !DILocation(line: 1506, column: 9, scope: !17729)
!17742 = !DILocation(line: 1506, column: 2, scope: !17729)
!17743 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3661, file: !3661, line: 571, type: !3662, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17744)
!17744 = !{!17745}
!17745 = !DILocalVariable(name: "t", arg: 1, scope: !17743, file: !3661, line: 571, type: !109)
!17746 = !DILocation(line: 0, scope: !17743)
!17747 = !DILocation(line: 0, scope: !16137, inlinedAt: !17748)
!17748 = distinct !DILocation(line: 574, column: 9, scope: !17743)
!17749 = !DILocation(line: 135, column: 5, scope: !17721, inlinedAt: !17748)
!17750 = !DILocation(line: 139, column: 13, scope: !17719, inlinedAt: !17748)
!17751 = !DILocation(line: 574, column: 2, scope: !17743)
!17752 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3661, file: !3661, line: 1187, type: !3662, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17753)
!17753 = !{!17754}
!17754 = !DILocalVariable(name: "t", arg: 1, scope: !17752, file: !3661, line: 1187, type: !109)
!17755 = !DILocation(line: 0, scope: !17752)
!17756 = !DILocation(line: 0, scope: !16137, inlinedAt: !17757)
!17757 = distinct !DILocation(line: 1190, column: 9, scope: !17752)
!17758 = !DILocation(line: 145, column: 13, scope: !17759, inlinedAt: !17757)
!17759 = distinct !DILexicalBlock(scope: !16155, file: !3661, line: 144, column: 10)
!17760 = !DILocation(line: 1190, column: 2, scope: !17752)
!17761 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2600, file: !2600, line: 1517, type: !17657, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17762)
!17762 = !{!17763}
!17763 = !DILocalVariable(name: "thread", arg: 1, scope: !17761, file: !2600, line: 1517, type: !17563)
!17764 = !DILocation(line: 0, scope: !17761)
!17765 = !DILocation(line: 1521, column: 6, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17761, file: !2600, line: 1521, column: 6)
!17767 = !DILocation(line: 1521, column: 6, scope: !17761)
!17768 = !DILocation(line: 1525, column: 6, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17761, file: !2600, line: 1525, column: 6)
!17770 = !DILocation(line: 1525, column: 37, scope: !17769)
!17771 = !DILocation(line: 1525, column: 6, scope: !17761)
!17772 = !DILocation(line: 1527, column: 20, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17774, file: !2600, line: 1527, column: 7)
!17774 = distinct !DILexicalBlock(scope: !17769, file: !2600, line: 1525, column: 42)
!17775 = !DILocation(line: 1527, column: 33, scope: !17773)
!17776 = !DILocation(line: 1527, column: 7, scope: !17774)
!17777 = !DILocation(line: 1532, column: 2, scope: !17761)
!17778 = !DILocation(line: 1533, column: 2, scope: !17761)
!17779 = !DILocation(line: 1031, column: 3, scope: !16732, inlinedAt: !17780)
!17780 = distinct !DILocation(line: 48, column: 10, scope: !16736, inlinedAt: !17781)
!17781 = distinct !DILocation(line: 1537, column: 7, scope: !17782)
!17782 = distinct !DILexicalBlock(scope: !17761, file: !2600, line: 1537, column: 6)
!17783 = !DILocation(line: 0, scope: !16732, inlinedAt: !17780)
!17784 = !DILocation(line: 48, column: 9, scope: !16736, inlinedAt: !17781)
!17785 = !DILocation(line: 1537, column: 6, scope: !17761)
!17786 = !DILocation(line: 1538, column: 3, scope: !17787)
!17787 = distinct !DILexicalBlock(scope: !17782, file: !2600, line: 1537, column: 25)
!17788 = !DILocation(line: 1539, column: 2, scope: !17787)
!17789 = !DILocation(line: 1540, column: 1, scope: !17761)
!17790 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14620, file: !14620, line: 101, type: !16208, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17791)
!17791 = !{!17792}
!17792 = !DILocalVariable(name: "thread", arg: 1, scope: !17790, file: !14620, line: 101, type: !2495)
!17793 = !DILocation(line: 0, scope: !17790)
!17794 = !DILocation(line: 103, column: 23, scope: !17790)
!17795 = !DILocation(line: 103, column: 36, scope: !17790)
!17796 = !DILocation(line: 103, column: 55, scope: !17790)
!17797 = !DILocation(line: 103, column: 2, scope: !17790)
!17798 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2600, file: !2600, line: 1567, type: !17799, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17801)
!17799 = !DISubroutineType(types: !17800)
!17800 = !{!17563}
!17801 = !{!17802}
!17802 = !DILocalVariable(name: "ret", scope: !17798, file: !2600, line: 1577, type: !17563)
!17803 = !DILocation(line: 1577, column: 30, scope: !17798)
!17804 = !DILocation(line: 0, scope: !17798)
!17805 = !DILocation(line: 1582, column: 2, scope: !17798)
!17806 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2600, file: !2600, line: 1593, type: !8682, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !251)
!17807 = !DILocation(line: 1031, column: 3, scope: !16732, inlinedAt: !17808)
!17808 = distinct !DILocation(line: 48, column: 10, scope: !16736, inlinedAt: !17809)
!17809 = distinct !DILocation(line: 1595, column: 10, scope: !17806)
!17810 = !DILocation(line: 0, scope: !16732, inlinedAt: !17808)
!17811 = !DILocation(line: 48, column: 9, scope: !16736, inlinedAt: !17809)
!17812 = !DILocation(line: 1595, column: 27, scope: !17806)
!17813 = !DILocation(line: 1595, column: 41, scope: !17806)
!17814 = !DILocation(line: 1595, column: 30, scope: !17806)
!17815 = !DILocation(line: 1595, column: 2, scope: !17806)
!17816 = distinct !DISubprogram(name: "z_thread_abort", scope: !2600, file: !2600, line: 1725, type: !16048, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17817)
!17817 = !{!17818, !17819}
!17818 = !DILocalVariable(name: "thread", arg: 1, scope: !17816, file: !2600, line: 1725, type: !2495)
!17819 = !DILocalVariable(name: "key", scope: !17816, file: !2600, line: 1727, type: !16082)
!17820 = !DILocation(line: 0, scope: !17816)
!17821 = !DILocation(line: 0, scope: !16090, inlinedAt: !17822)
!17822 = distinct !DILocation(line: 1727, column: 25, scope: !17816)
!17823 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17824)
!17824 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17822)
!17825 = !DILocation(line: 0, scope: !16099, inlinedAt: !17824)
!17826 = !DILocation(line: 1729, column: 20, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17816, file: !2600, line: 1729, column: 6)
!17828 = !DILocation(line: 1729, column: 33, scope: !17827)
!17829 = !DILocation(line: 1729, column: 48, scope: !17827)
!17830 = !DILocation(line: 1729, column: 6, scope: !17816)
!17831 = !DILocation(line: 0, scope: !16117, inlinedAt: !17832)
!17832 = distinct !DILocation(line: 1730, column: 3, scope: !17833)
!17833 = distinct !DILexicalBlock(scope: !17827, file: !2600, line: 1729, column: 54)
!17834 = !DILocation(line: 0, scope: !16125, inlinedAt: !17835)
!17835 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17832)
!17836 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17835)
!17837 = !DILocation(line: 1732, column: 3, scope: !17838)
!17838 = distinct !DILexicalBlock(scope: !17833, file: !2600, line: 1732, column: 3)
!17839 = !{i64 2155841018, i64 2155841034, i64 2155841060, i64 2155841088, i64 2155841108}
!17840 = !DILocation(line: 1733, column: 3, scope: !17833)
!17841 = !DILocation(line: 1736, column: 20, scope: !17842)
!17842 = distinct !DILexicalBlock(scope: !17816, file: !2600, line: 1736, column: 6)
!17843 = !DILocation(line: 1736, column: 33, scope: !17842)
!17844 = !DILocation(line: 1736, column: 49, scope: !17842)
!17845 = !DILocation(line: 1736, column: 6, scope: !17816)
!17846 = !DILocation(line: 0, scope: !16117, inlinedAt: !17847)
!17847 = distinct !DILocation(line: 1737, column: 3, scope: !17848)
!17848 = distinct !DILexicalBlock(scope: !17842, file: !2600, line: 1736, column: 56)
!17849 = !DILocation(line: 0, scope: !16125, inlinedAt: !17850)
!17850 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17847)
!17851 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17850)
!17852 = !DILocation(line: 1738, column: 3, scope: !17848)
!17853 = !DILocation(line: 1775, column: 2, scope: !17816)
!17854 = !DILocation(line: 1776, column: 16, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17816, file: !2600, line: 1776, column: 6)
!17856 = !DILocation(line: 1776, column: 13, scope: !17855)
!17857 = !DILocation(line: 1776, column: 25, scope: !17855)
!17858 = !DILocation(line: 1031, column: 3, scope: !16732, inlinedAt: !17859)
!17859 = distinct !DILocation(line: 48, column: 10, scope: !16736, inlinedAt: !17860)
!17860 = distinct !DILocation(line: 1776, column: 29, scope: !17855)
!17861 = !DILocation(line: 0, scope: !16732, inlinedAt: !17859)
!17862 = !DILocation(line: 48, column: 9, scope: !16736, inlinedAt: !17860)
!17863 = !DILocation(line: 1776, column: 6, scope: !17816)
!17864 = !DILocation(line: 0, scope: !16699, inlinedAt: !17865)
!17865 = distinct !DILocation(line: 1777, column: 3, scope: !17866)
!17866 = distinct !DILexicalBlock(scope: !17855, file: !2600, line: 1776, column: 47)
!17867 = !DILocation(line: 196, column: 9, scope: !16699, inlinedAt: !17865)
!17868 = !DILocation(line: 1779, column: 2, scope: !17866)
!17869 = !DILocation(line: 0, scope: !16117, inlinedAt: !17870)
!17870 = distinct !DILocation(line: 1780, column: 2, scope: !17816)
!17871 = !DILocation(line: 0, scope: !16125, inlinedAt: !17872)
!17872 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17870)
!17873 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17872)
!17874 = !DILocation(line: 1781, column: 1, scope: !17816)
!17875 = distinct !DISubprogram(name: "end_thread", scope: !2600, file: !2600, line: 1690, type: !16048, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17876)
!17876 = !{!17877}
!17877 = !DILocalVariable(name: "thread", arg: 1, scope: !17875, file: !2600, line: 1690, type: !2495)
!17878 = !DILocation(line: 0, scope: !17875)
!17879 = !DILocation(line: 1695, column: 20, scope: !17880)
!17880 = distinct !DILexicalBlock(scope: !17875, file: !2600, line: 1695, column: 6)
!17881 = !DILocation(line: 1695, column: 33, scope: !17880)
!17882 = !DILocation(line: 1695, column: 49, scope: !17880)
!17883 = !DILocation(line: 1695, column: 6, scope: !17875)
!17884 = !DILocation(line: 1697, column: 29, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17880, file: !2600, line: 1695, column: 56)
!17886 = !DILocation(line: 1698, column: 7, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17885, file: !2600, line: 1698, column: 7)
!17888 = !DILocation(line: 1698, column: 7, scope: !17885)
!17889 = !DILocation(line: 0, scope: !16259, inlinedAt: !17890)
!17890 = distinct !DILocation(line: 1699, column: 4, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17887, file: !2600, line: 1698, column: 35)
!17892 = !DILocation(line: 266, column: 28, scope: !16259, inlinedAt: !17890)
!17893 = !DILocation(line: 0, scope: !16267, inlinedAt: !17894)
!17894 = distinct !DILocation(line: 268, column: 3, scope: !16271, inlinedAt: !17890)
!17895 = !DILocation(line: 234, column: 2, scope: !16267, inlinedAt: !17894)
!17896 = !DILocation(line: 1700, column: 3, scope: !17891)
!17897 = !DILocation(line: 1701, column: 20, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17885, file: !2600, line: 1701, column: 7)
!17899 = !DILocation(line: 1701, column: 30, scope: !17898)
!17900 = !DILocation(line: 1701, column: 7, scope: !17885)
!17901 = !DILocation(line: 1702, column: 4, scope: !17902)
!17902 = distinct !DILexicalBlock(scope: !17898, file: !2600, line: 1701, column: 39)
!17903 = !DILocation(line: 1703, column: 3, scope: !17902)
!17904 = !DILocation(line: 1704, column: 9, scope: !17885)
!17905 = !DILocation(line: 1705, column: 23, scope: !17885)
!17906 = !DILocation(line: 1705, column: 3, scope: !17885)
!17907 = !DILocation(line: 1706, column: 3, scope: !17885)
!17908 = !DILocation(line: 1722, column: 2, scope: !17885)
!17909 = !DILocation(line: 1723, column: 1, scope: !17875)
!17910 = distinct !DISubprogram(name: "unpend_all", scope: !2600, file: !2600, line: 1674, type: !17911, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17913)
!17911 = !DISubroutineType(types: !17912)
!17912 = !{null, !2526}
!17913 = !{!17914, !17915}
!17914 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17910, file: !2600, line: 1674, type: !2526)
!17915 = !DILocalVariable(name: "thread", scope: !17910, file: !2600, line: 1676, type: !2495)
!17916 = !DILocation(line: 0, scope: !17910)
!17917 = !DILocation(line: 1678, column: 19, scope: !17910)
!17918 = !DILocation(line: 1678, column: 41, scope: !17910)
!17919 = !DILocation(line: 1678, column: 2, scope: !17910)
!17920 = !DILocation(line: 1679, column: 3, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17910, file: !2600, line: 1678, column: 50)
!17922 = !DILocation(line: 1680, column: 9, scope: !17921)
!17923 = !DILocalVariable(name: "thread", arg: 1, scope: !17924, file: !14640, line: 65, type: !2495)
!17924 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14640, file: !14640, line: 65, type: !17925, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17927)
!17925 = !DISubroutineType(types: !17926)
!17926 = !{null, !2495, !32}
!17927 = !{!17923, !17928}
!17928 = !DILocalVariable(name: "value", arg: 2, scope: !17924, file: !14640, line: 65, type: !32)
!17929 = !DILocation(line: 0, scope: !17924, inlinedAt: !17930)
!17930 = distinct !DILocation(line: 1681, column: 3, scope: !17921)
!17931 = !DILocation(line: 67, column: 15, scope: !17924, inlinedAt: !17930)
!17932 = !DILocation(line: 67, column: 33, scope: !17924, inlinedAt: !17930)
!17933 = !DILocation(line: 1682, column: 3, scope: !17921)
!17934 = distinct !{!17934, !17919, !17935}
!17935 = !DILocation(line: 1683, column: 2, scope: !17910)
!17936 = !DILocation(line: 1684, column: 1, scope: !17910)
!17937 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2600, file: !2600, line: 1794, type: !17938, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17940)
!17938 = !DISubroutineType(types: !17939)
!17939 = !{!103, !2495, !16879}
!17940 = !{!17941, !17942, !17943, !17944}
!17941 = !DILocalVariable(name: "thread", arg: 1, scope: !17937, file: !2600, line: 1794, type: !2495)
!17942 = !DILocalVariable(name: "timeout", arg: 2, scope: !17937, file: !2600, line: 1794, type: !16879)
!17943 = !DILocalVariable(name: "key", scope: !17937, file: !2600, line: 1796, type: !16082)
!17944 = !DILocalVariable(name: "ret", scope: !17937, file: !2600, line: 1797, type: !103)
!17945 = !DILocation(line: 0, scope: !17937)
!17946 = !DILocation(line: 0, scope: !16090, inlinedAt: !17947)
!17947 = distinct !DILocation(line: 1796, column: 25, scope: !17937)
!17948 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !17949)
!17949 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17947)
!17950 = !DILocation(line: 0, scope: !16099, inlinedAt: !17949)
!17951 = !DILocation(line: 1801, column: 20, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !17937, file: !2600, line: 1801, column: 6)
!17953 = !DILocation(line: 1801, column: 33, scope: !17952)
!17954 = !DILocation(line: 1801, column: 49, scope: !17952)
!17955 = !DILocation(line: 1801, column: 6, scope: !17937)
!17956 = !DILocation(line: 1803, column: 13, scope: !17957)
!17957 = distinct !DILexicalBlock(scope: !17952, file: !2600, line: 1803, column: 13)
!17958 = !DILocation(line: 1803, column: 13, scope: !17952)
!17959 = !DILocation(line: 1805, column: 24, scope: !17960)
!17960 = distinct !DILexicalBlock(scope: !17957, file: !2600, line: 1805, column: 13)
!17961 = !DILocation(line: 1805, column: 21, scope: !17960)
!17962 = !DILocation(line: 1805, column: 34, scope: !17960)
!17963 = !DILocation(line: 1806, column: 20, scope: !17960)
!17964 = !DILocation(line: 1806, column: 44, scope: !17960)
!17965 = !DILocation(line: 1806, column: 30, scope: !17960)
!17966 = !DILocation(line: 1805, column: 13, scope: !17957)
!17967 = !DILocation(line: 1810, column: 42, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17960, file: !2600, line: 1808, column: 9)
!17969 = !DILocation(line: 1810, column: 3, scope: !17968)
!17970 = !DILocation(line: 1811, column: 22, scope: !17968)
!17971 = !DILocation(line: 1811, column: 3, scope: !17968)
!17972 = !DILocation(line: 0, scope: !16699, inlinedAt: !17973)
!17973 = distinct !DILocation(line: 1814, column: 9, scope: !17968)
!17974 = !DILocation(line: 196, column: 9, scope: !16699, inlinedAt: !17973)
!17975 = !DILocation(line: 1817, column: 3, scope: !17968)
!17976 = !DILocation(line: 0, scope: !17952)
!17977 = !DILocation(line: 0, scope: !16117, inlinedAt: !17978)
!17978 = distinct !DILocation(line: 1822, column: 2, scope: !17937)
!17979 = !DILocation(line: 0, scope: !16125, inlinedAt: !17980)
!17980 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !17978)
!17981 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !17980)
!17982 = !DILocation(line: 1823, column: 2, scope: !17937)
!17983 = !DILocation(line: 1824, column: 1, scope: !17937)
!17984 = distinct !DISubprogram(name: "z_sched_wake", scope: !2600, file: !2600, line: 1882, type: !17985, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !17987)
!17985 = !DISubroutineType(types: !17986)
!17986 = !{!131, !2526, !103, !102}
!17987 = !{!17988, !17989, !17990, !17991, !17992, !17993, !17995}
!17988 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17984, file: !2600, line: 1882, type: !2526)
!17989 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17984, file: !2600, line: 1882, type: !103)
!17990 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17984, file: !2600, line: 1882, type: !102)
!17991 = !DILocalVariable(name: "thread", scope: !17984, file: !2600, line: 1884, type: !2495)
!17992 = !DILocalVariable(name: "ret", scope: !17984, file: !2600, line: 1885, type: !131)
!17993 = !DILocalVariable(name: "__i", scope: !17994, file: !2600, line: 1887, type: !16082)
!17994 = distinct !DILexicalBlock(scope: !17984, file: !2600, line: 1887, column: 2)
!17995 = !DILocalVariable(name: "__key", scope: !17994, file: !2600, line: 1887, type: !16082)
!17996 = !DILocation(line: 0, scope: !17984)
!17997 = !DILocation(line: 0, scope: !17994)
!17998 = !DILocation(line: 0, scope: !16090, inlinedAt: !17999)
!17999 = distinct !DILocation(line: 1887, column: 2, scope: !17994)
!18000 = !DILocation(line: 55, column: 2, scope: !16099, inlinedAt: !18001)
!18001 = distinct !DILocation(line: 145, column: 10, scope: !16090, inlinedAt: !17999)
!18002 = !DILocation(line: 0, scope: !16099, inlinedAt: !18001)
!18003 = !DILocation(line: 1888, column: 12, scope: !18004)
!18004 = distinct !DILexicalBlock(scope: !18005, file: !2600, line: 1887, column: 26)
!18005 = distinct !DILexicalBlock(scope: !17994, file: !2600, line: 1887, column: 2)
!18006 = !DILocation(line: 1890, column: 14, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !18004, file: !2600, line: 1890, column: 7)
!18008 = !DILocation(line: 1890, column: 7, scope: !18004)
!18009 = !DILocalVariable(name: "thread", arg: 1, scope: !18010, file: !15389, line: 134, type: !2495)
!18010 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15389, file: !15389, line: 134, type: !18011, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !18013)
!18011 = !DISubroutineType(types: !18012)
!18012 = !{null, !2495, !32, !102}
!18013 = !{!18009, !18014, !18015}
!18014 = !DILocalVariable(name: "value", arg: 2, scope: !18010, file: !15389, line: 135, type: !32)
!18015 = !DILocalVariable(name: "data", arg: 3, scope: !18010, file: !15389, line: 136, type: !102)
!18016 = !DILocation(line: 0, scope: !18010, inlinedAt: !18017)
!18017 = distinct !DILocation(line: 1891, column: 4, scope: !18018)
!18018 = distinct !DILexicalBlock(scope: !18007, file: !2600, line: 1890, column: 23)
!18019 = !DILocation(line: 0, scope: !17924, inlinedAt: !18020)
!18020 = distinct !DILocation(line: 138, column: 2, scope: !18010, inlinedAt: !18017)
!18021 = !DILocation(line: 67, column: 15, scope: !17924, inlinedAt: !18020)
!18022 = !DILocation(line: 67, column: 33, scope: !17924, inlinedAt: !18020)
!18023 = !DILocation(line: 139, column: 15, scope: !18010, inlinedAt: !18017)
!18024 = !DILocation(line: 139, column: 25, scope: !18010, inlinedAt: !18017)
!18025 = !DILocation(line: 1894, column: 4, scope: !18018)
!18026 = !DILocation(line: 1895, column: 10, scope: !18018)
!18027 = !DILocation(line: 1896, column: 4, scope: !18018)
!18028 = !DILocation(line: 1898, column: 3, scope: !18018)
!18029 = !DILocation(line: 0, scope: !16117, inlinedAt: !18030)
!18030 = distinct !DILocation(line: 1887, column: 2, scope: !18005)
!18031 = !DILocation(line: 0, scope: !16125, inlinedAt: !18032)
!18032 = distinct !DILocation(line: 215, column: 2, scope: !16117, inlinedAt: !18030)
!18033 = !DILocation(line: 95, column: 2, scope: !16125, inlinedAt: !18032)
!18034 = !DILocation(line: 1901, column: 2, scope: !17984)
!18035 = distinct !DISubprogram(name: "z_sched_wait", scope: !2600, file: !2600, line: 1904, type: !18036, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !18039)
!18036 = !DISubroutineType(types: !18037)
!18037 = !{!103, !16093, !16082, !2526, !16879, !18038}
!18038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!18039 = !{!18040, !18041, !18042, !18043, !18044, !18045}
!18040 = !DILocalVariable(name: "lock", arg: 1, scope: !18035, file: !2600, line: 1904, type: !16093)
!18041 = !DILocalVariable(name: "key", arg: 2, scope: !18035, file: !2600, line: 1904, type: !16082)
!18042 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18035, file: !2600, line: 1905, type: !2526)
!18043 = !DILocalVariable(name: "timeout", arg: 4, scope: !18035, file: !2600, line: 1905, type: !16879)
!18044 = !DILocalVariable(name: "data", arg: 5, scope: !18035, file: !2600, line: 1905, type: !18038)
!18045 = !DILocalVariable(name: "ret", scope: !18035, file: !2600, line: 1907, type: !103)
!18046 = !DILocation(line: 0, scope: !18035)
!18047 = !DILocation(line: 1907, column: 12, scope: !18035)
!18048 = !DILocation(line: 1909, column: 11, scope: !18049)
!18049 = distinct !DILexicalBlock(scope: !18035, file: !2600, line: 1909, column: 6)
!18050 = !DILocation(line: 1909, column: 6, scope: !18035)
!18051 = !DILocation(line: 1910, column: 11, scope: !18052)
!18052 = distinct !DILexicalBlock(scope: !18049, file: !2600, line: 1909, column: 20)
!18053 = !DILocation(line: 1910, column: 26, scope: !18052)
!18054 = !DILocation(line: 1910, column: 9, scope: !18052)
!18055 = !DILocation(line: 1911, column: 2, scope: !18052)
!18056 = !DILocation(line: 1912, column: 2, scope: !18035)
!18057 = distinct !DISubprogram(name: "z_data_copy", scope: !18058, file: !18058, line: 22, type: !334, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3400, retainedNodes: !251)
!18058 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18059 = !DILocation(line: 24, column: 2, scope: !18057)
!18060 = !DILocation(line: 27, column: 2, scope: !18057)
!18061 = !DILocation(line: 71, column: 1, scope: !18057)
!18062 = distinct !DISubprogram(name: "z_add_timeout", scope: !2637, file: !2637, line: 88, type: !18063, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18069)
!18063 = !DISubroutineType(types: !18064)
!18064 = !{null, !2610, !2629, !18065}
!18065 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18066)
!18066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18067)
!18067 = !{!18068}
!18068 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18066, file: !105, line: 66, baseType: !104, size: 64)
!18069 = !{!18070, !18071, !18072, !18073, !18079, !18080, !18083, !18086}
!18070 = !DILocalVariable(name: "to", arg: 1, scope: !18062, file: !2637, line: 88, type: !2610)
!18071 = !DILocalVariable(name: "fn", arg: 2, scope: !18062, file: !2637, line: 88, type: !2629)
!18072 = !DILocalVariable(name: "timeout", arg: 3, scope: !18062, file: !2637, line: 89, type: !18065)
!18073 = !DILocalVariable(name: "__i", scope: !18074, file: !2637, line: 102, type: !18075)
!18074 = distinct !DILexicalBlock(scope: !18062, file: !2637, line: 102, column: 2)
!18075 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !18076)
!18076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !18077)
!18077 = !{!18078}
!18078 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18076, file: !250, line: 33, baseType: !103, size: 32)
!18079 = !DILocalVariable(name: "__key", scope: !18074, file: !2637, line: 102, type: !18075)
!18080 = !DILocalVariable(name: "t", scope: !18081, file: !2637, line: 103, type: !2610)
!18081 = distinct !DILexicalBlock(scope: !18082, file: !2637, line: 102, column: 24)
!18082 = distinct !DILexicalBlock(scope: !18074, file: !2637, line: 102, column: 2)
!18083 = !DILocalVariable(name: "ticks", scope: !18084, file: !2637, line: 107, type: !104)
!18084 = distinct !DILexicalBlock(scope: !18085, file: !2637, line: 106, column: 39)
!18085 = distinct !DILexicalBlock(scope: !18081, file: !2637, line: 105, column: 7)
!18086 = !DILocalVariable(name: "next_time", scope: !18087, file: !2637, line: 137, type: !331)
!18087 = distinct !DILexicalBlock(scope: !18088, file: !2637, line: 127, column: 22)
!18088 = distinct !DILexicalBlock(scope: !18081, file: !2637, line: 127, column: 7)
!18089 = !DILocation(line: 0, scope: !18062)
!18090 = !DILocation(line: 91, column: 6, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18062, file: !2637, line: 91, column: 6)
!18092 = !DILocation(line: 91, column: 6, scope: !18062)
!18093 = !DILocation(line: 100, column: 6, scope: !18062)
!18094 = !DILocation(line: 100, column: 9, scope: !18062)
!18095 = !DILocation(line: 0, scope: !18074)
!18096 = !DILocalVariable(name: "l", arg: 1, scope: !18097, file: !250, line: 136, type: !18100)
!18097 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !18098, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18101)
!18098 = !DISubroutineType(types: !18099)
!18099 = !{!18075, !18100}
!18100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!18101 = !{!18096, !18102}
!18102 = !DILocalVariable(name: "k", scope: !18097, file: !250, line: 139, type: !18075)
!18103 = !DILocation(line: 0, scope: !18097, inlinedAt: !18104)
!18104 = distinct !DILocation(line: 102, column: 2, scope: !18074)
!18105 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18110)
!18106 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18107)
!18107 = !{!18108, !18109}
!18108 = !DILocalVariable(name: "key", scope: !18106, file: !7059, line: 44, type: !32)
!18109 = !DILocalVariable(name: "tmp", scope: !18106, file: !7059, line: 53, type: !32)
!18110 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18104)
!18111 = !{i64 2285194}
!18112 = !DILocation(line: 0, scope: !18106, inlinedAt: !18110)
!18113 = !DILocation(line: 106, column: 33, scope: !18085)
!18114 = !DILocation(line: 105, column: 7, scope: !18081)
!18115 = !DILocation(line: 107, column: 50, scope: !18084)
!18116 = !DILocation(line: 107, column: 48, scope: !18084)
!18117 = !DILocation(line: 0, scope: !18084)
!18118 = !DILocation(line: 109, column: 17, scope: !18084)
!18119 = !DILocation(line: 110, column: 3, scope: !18084)
!18120 = !DILocation(line: 111, column: 31, scope: !18121)
!18121 = distinct !DILexicalBlock(scope: !18085, file: !2637, line: 110, column: 10)
!18122 = !DILocation(line: 111, column: 37, scope: !18121)
!18123 = !DILocation(line: 111, column: 35, scope: !18121)
!18124 = !DILocation(line: 0, scope: !18085)
!18125 = !DILocation(line: 109, column: 8, scope: !18084)
!18126 = !DILocation(line: 109, column: 15, scope: !18084)
!18127 = !DILocation(line: 114, column: 12, scope: !18128)
!18128 = distinct !DILexicalBlock(scope: !18081, file: !2637, line: 114, column: 3)
!18129 = !DILocation(line: 0, scope: !18081)
!18130 = !DILocation(line: 114, column: 3, scope: !18128)
!18131 = !DILocation(line: 115, column: 24, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18133, file: !2637, line: 115, column: 8)
!18133 = distinct !DILexicalBlock(scope: !18134, file: !2637, line: 114, column: 45)
!18134 = distinct !DILexicalBlock(scope: !18128, file: !2637, line: 114, column: 3)
!18135 = !DILocation(line: 115, column: 11, scope: !18132)
!18136 = !DILocation(line: 115, column: 18, scope: !18132)
!18137 = !DILocation(line: 115, column: 8, scope: !18133)
!18138 = !DILocation(line: 116, column: 15, scope: !18139)
!18139 = distinct !DILexicalBlock(scope: !18132, file: !2637, line: 115, column: 32)
!18140 = !DILocation(line: 117, column: 26, scope: !18139)
!18141 = !DILocation(line: 117, column: 37, scope: !18139)
!18142 = !DILocation(line: 117, column: 5, scope: !18139)
!18143 = !DILocation(line: 123, column: 7, scope: !18081)
!18144 = !DILocation(line: 120, column: 15, scope: !18133)
!18145 = !DILocation(line: 114, column: 36, scope: !18134)
!18146 = distinct !{!18146, !18130, !18147}
!18147 = !DILocation(line: 121, column: 3, scope: !18128)
!18148 = !DILocation(line: 124, column: 41, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !18150, file: !2637, line: 123, column: 18)
!18150 = distinct !DILexicalBlock(scope: !18081, file: !2637, line: 123, column: 7)
!18151 = !DILocation(line: 124, column: 4, scope: !18149)
!18152 = !DILocation(line: 125, column: 3, scope: !18149)
!18153 = !DILocation(line: 127, column: 13, scope: !18088)
!18154 = !DILocation(line: 127, column: 10, scope: !18088)
!18155 = !DILocation(line: 127, column: 7, scope: !18081)
!18156 = !DILocation(line: 137, column: 24, scope: !18087)
!18157 = !DILocation(line: 0, scope: !18087)
!18158 = !DILocation(line: 139, column: 18, scope: !18159)
!18159 = distinct !DILexicalBlock(scope: !18087, file: !2637, line: 139, column: 8)
!18160 = !DILocation(line: 139, column: 23, scope: !18159)
!18161 = !DILocation(line: 141, column: 5, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18159, file: !2637, line: 140, column: 48)
!18163 = !DILocation(line: 142, column: 4, scope: !18162)
!18164 = !DILocalVariable(name: "key", arg: 2, scope: !18165, file: !250, line: 190, type: !18075)
!18165 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !18166, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18168)
!18166 = !DISubroutineType(types: !18167)
!18167 = !{null, !18100, !18075}
!18168 = !{!18169, !18164}
!18169 = !DILocalVariable(name: "l", arg: 1, scope: !18165, file: !250, line: 189, type: !18100)
!18170 = !DILocation(line: 0, scope: !18165, inlinedAt: !18171)
!18171 = distinct !DILocation(line: 102, column: 2, scope: !18082)
!18172 = !DILocalVariable(name: "key", arg: 1, scope: !18173, file: !7059, line: 84, type: !32)
!18173 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18174)
!18174 = !{!18172}
!18175 = !DILocation(line: 0, scope: !18173, inlinedAt: !18176)
!18176 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18171)
!18177 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18176)
!18178 = !{i64 2286011}
!18179 = !DILocation(line: 148, column: 1, scope: !18062)
!18180 = distinct !DISubprogram(name: "elapsed", scope: !2637, file: !2637, line: 62, type: !18181, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !251)
!18181 = !DISubroutineType(types: !18182)
!18182 = !{!331}
!18183 = !DILocation(line: 64, column: 9, scope: !18180)
!18184 = !DILocation(line: 64, column: 28, scope: !18180)
!18185 = !DILocation(line: 64, column: 35, scope: !18180)
!18186 = !DILocation(line: 64, column: 2, scope: !18180)
!18187 = distinct !DISubprogram(name: "first", scope: !2637, file: !2637, line: 39, type: !18188, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18190)
!18188 = !DISubroutineType(types: !18189)
!18189 = !{!2610}
!18190 = !{!18191}
!18191 = !DILocalVariable(name: "t", scope: !18187, file: !2637, line: 41, type: !18192)
!18192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!18193 = !DILocation(line: 41, column: 19, scope: !18187)
!18194 = !DILocation(line: 0, scope: !18187)
!18195 = !DILocation(line: 43, column: 9, scope: !18187)
!18196 = !DILocation(line: 43, column: 2, scope: !18187)
!18197 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !146, file: !146, line: 443, type: !18198, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18200)
!18198 = !DISubroutineType(types: !18199)
!18199 = !{null, !18192, !18192}
!18200 = !{!18201, !18202, !18203}
!18201 = !DILocalVariable(name: "successor", arg: 1, scope: !18197, file: !146, line: 443, type: !18192)
!18202 = !DILocalVariable(name: "node", arg: 2, scope: !18197, file: !146, line: 443, type: !18192)
!18203 = !DILocalVariable(name: "prev", scope: !18197, file: !146, line: 445, type: !18204)
!18204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18192)
!18205 = !DILocation(line: 0, scope: !18197)
!18206 = !DILocation(line: 445, column: 39, scope: !18197)
!18207 = !DILocation(line: 447, column: 8, scope: !18197)
!18208 = !DILocation(line: 447, column: 13, scope: !18197)
!18209 = !DILocation(line: 448, column: 8, scope: !18197)
!18210 = !DILocation(line: 448, column: 13, scope: !18197)
!18211 = !DILocation(line: 449, column: 8, scope: !18197)
!18212 = !DILocation(line: 449, column: 13, scope: !18197)
!18213 = !DILocation(line: 450, column: 18, scope: !18197)
!18214 = !DILocation(line: 451, column: 1, scope: !18197)
!18215 = distinct !DISubprogram(name: "next", scope: !2637, file: !2637, line: 46, type: !18216, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18218)
!18216 = !DISubroutineType(types: !18217)
!18217 = !{!2610, !2610}
!18218 = !{!18219, !18220}
!18219 = !DILocalVariable(name: "t", arg: 1, scope: !18215, file: !2637, line: 46, type: !2610)
!18220 = !DILocalVariable(name: "n", scope: !18215, file: !2637, line: 48, type: !18192)
!18221 = !DILocation(line: 0, scope: !18215)
!18222 = !DILocation(line: 48, column: 58, scope: !18215)
!18223 = !DILocation(line: 48, column: 19, scope: !18215)
!18224 = !DILocation(line: 50, column: 9, scope: !18215)
!18225 = !DILocation(line: 50, column: 2, scope: !18215)
!18226 = distinct !DISubprogram(name: "sys_dlist_append", scope: !146, file: !146, line: 404, type: !18227, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18230)
!18227 = !DISubroutineType(types: !18228)
!18228 = !{null, !18229, !18192}
!18229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!18230 = !{!18231, !18232, !18233}
!18231 = !DILocalVariable(name: "list", arg: 1, scope: !18226, file: !146, line: 404, type: !18229)
!18232 = !DILocalVariable(name: "node", arg: 2, scope: !18226, file: !146, line: 404, type: !18192)
!18233 = !DILocalVariable(name: "tail", scope: !18226, file: !146, line: 406, type: !18204)
!18234 = !DILocation(line: 0, scope: !18226)
!18235 = !DILocation(line: 406, column: 34, scope: !18226)
!18236 = !DILocation(line: 408, column: 8, scope: !18226)
!18237 = !DILocation(line: 408, column: 13, scope: !18226)
!18238 = !DILocation(line: 409, column: 8, scope: !18226)
!18239 = !DILocation(line: 409, column: 13, scope: !18226)
!18240 = !DILocation(line: 411, column: 8, scope: !18226)
!18241 = !DILocation(line: 411, column: 13, scope: !18226)
!18242 = !DILocation(line: 412, column: 13, scope: !18226)
!18243 = !DILocation(line: 413, column: 1, scope: !18226)
!18244 = distinct !DISubprogram(name: "next_timeout", scope: !2637, file: !2637, line: 67, type: !18181, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18245)
!18245 = !{!18246, !18247, !18248}
!18246 = !DILocalVariable(name: "to", scope: !18244, file: !2637, line: 69, type: !2610)
!18247 = !DILocalVariable(name: "ticks_elapsed", scope: !18244, file: !2637, line: 70, type: !331)
!18248 = !DILocalVariable(name: "ret", scope: !18244, file: !2637, line: 71, type: !331)
!18249 = !DILocation(line: 69, column: 24, scope: !18244)
!18250 = !DILocation(line: 0, scope: !18244)
!18251 = !DILocation(line: 70, column: 26, scope: !18244)
!18252 = !DILocation(line: 73, column: 10, scope: !18253)
!18253 = distinct !DILexicalBlock(scope: !18244, file: !2637, line: 73, column: 6)
!18254 = !DILocation(line: 73, column: 19, scope: !18253)
!18255 = !DILocation(line: 74, column: 21, scope: !18253)
!18256 = !DILocation(line: 74, column: 30, scope: !18253)
!18257 = !DILocation(line: 74, column: 28, scope: !18253)
!18258 = !DILocation(line: 74, column: 45, scope: !18253)
!18259 = !DILocation(line: 73, column: 6, scope: !18244)
!18260 = !DILocation(line: 77, column: 9, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18253, file: !2637, line: 76, column: 9)
!18262 = !DILocation(line: 0, scope: !18253)
!18263 = !DILocation(line: 81, column: 20, scope: !18264)
!18264 = distinct !DILexicalBlock(scope: !18244, file: !2637, line: 81, column: 6)
!18265 = !DILocation(line: 81, column: 6, scope: !18264)
!18266 = !DILocation(line: 81, column: 32, scope: !18264)
!18267 = !DILocation(line: 85, column: 2, scope: !18244)
!18268 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !146, file: !146, line: 341, type: !18269, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18271)
!18269 = !DISubroutineType(types: !18270)
!18270 = !{!18192, !18229, !18192}
!18271 = !{!18272, !18273}
!18272 = !DILocalVariable(name: "list", arg: 1, scope: !18268, file: !146, line: 341, type: !18229)
!18273 = !DILocalVariable(name: "node", arg: 2, scope: !18268, file: !146, line: 342, type: !18192)
!18274 = !DILocation(line: 0, scope: !18268)
!18275 = !DILocation(line: 344, column: 15, scope: !18268)
!18276 = !DILocation(line: 344, column: 9, scope: !18268)
!18277 = !DILocation(line: 344, column: 26, scope: !18268)
!18278 = !DILocation(line: 344, column: 2, scope: !18268)
!18279 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !146, file: !146, line: 325, type: !18269, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18280)
!18280 = !{!18281, !18282}
!18281 = !DILocalVariable(name: "list", arg: 1, scope: !18279, file: !146, line: 325, type: !18229)
!18282 = !DILocalVariable(name: "node", arg: 2, scope: !18279, file: !146, line: 326, type: !18192)
!18283 = !DILocation(line: 0, scope: !18279)
!18284 = !DILocation(line: 328, column: 24, scope: !18279)
!18285 = !DILocation(line: 328, column: 15, scope: !18279)
!18286 = !DILocation(line: 328, column: 9, scope: !18279)
!18287 = !DILocation(line: 328, column: 45, scope: !18279)
!18288 = !DILocation(line: 328, column: 2, scope: !18279)
!18289 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !146, file: !146, line: 294, type: !18290, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18292)
!18290 = !DISubroutineType(types: !18291)
!18291 = !{!18192, !18229}
!18292 = !{!18293}
!18293 = !DILocalVariable(name: "list", arg: 1, scope: !18289, file: !146, line: 294, type: !18229)
!18294 = !DILocation(line: 0, scope: !18289)
!18295 = !DILocation(line: 296, column: 9, scope: !18289)
!18296 = !DILocation(line: 296, column: 2, scope: !18289)
!18297 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !146, file: !146, line: 266, type: !18298, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18300)
!18298 = !DISubroutineType(types: !18299)
!18299 = !{!131, !18229}
!18300 = !{!18301}
!18301 = !DILocalVariable(name: "list", arg: 1, scope: !18297, file: !146, line: 266, type: !18229)
!18302 = !DILocation(line: 0, scope: !18297)
!18303 = !DILocation(line: 268, column: 15, scope: !18297)
!18304 = !DILocation(line: 268, column: 20, scope: !18297)
!18305 = !DILocation(line: 268, column: 2, scope: !18297)
!18306 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2637, file: !2637, line: 150, type: !18307, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18309)
!18307 = !DISubroutineType(types: !18308)
!18308 = !{!103, !2610}
!18309 = !{!18310, !18311, !18312, !18314}
!18310 = !DILocalVariable(name: "to", arg: 1, scope: !18306, file: !2637, line: 150, type: !2610)
!18311 = !DILocalVariable(name: "ret", scope: !18306, file: !2637, line: 152, type: !103)
!18312 = !DILocalVariable(name: "__i", scope: !18313, file: !2637, line: 154, type: !18075)
!18313 = distinct !DILexicalBlock(scope: !18306, file: !2637, line: 154, column: 2)
!18314 = !DILocalVariable(name: "__key", scope: !18313, file: !2637, line: 154, type: !18075)
!18315 = !DILocation(line: 0, scope: !18306)
!18316 = !DILocation(line: 0, scope: !18313)
!18317 = !DILocation(line: 0, scope: !18097, inlinedAt: !18318)
!18318 = distinct !DILocation(line: 154, column: 2, scope: !18313)
!18319 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18320)
!18320 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18318)
!18321 = !DILocation(line: 0, scope: !18106, inlinedAt: !18320)
!18322 = !DILocation(line: 155, column: 7, scope: !18323)
!18323 = distinct !DILexicalBlock(scope: !18324, file: !2637, line: 155, column: 7)
!18324 = distinct !DILexicalBlock(scope: !18325, file: !2637, line: 154, column: 24)
!18325 = distinct !DILexicalBlock(scope: !18313, file: !2637, line: 154, column: 2)
!18326 = !DILocation(line: 155, column: 7, scope: !18324)
!18327 = !DILocation(line: 156, column: 4, scope: !18328)
!18328 = distinct !DILexicalBlock(scope: !18323, file: !2637, line: 155, column: 39)
!18329 = !DILocation(line: 158, column: 3, scope: !18328)
!18330 = !DILocation(line: 0, scope: !18165, inlinedAt: !18331)
!18331 = distinct !DILocation(line: 154, column: 2, scope: !18325)
!18332 = !DILocation(line: 0, scope: !18173, inlinedAt: !18333)
!18333 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18331)
!18334 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18333)
!18335 = !DILocation(line: 161, column: 2, scope: !18306)
!18336 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !146, file: !146, line: 225, type: !18337, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18341)
!18337 = !DISubroutineType(types: !18338)
!18338 = !{!131, !18339}
!18339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18340, size: 32)
!18340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2614)
!18341 = !{!18342}
!18342 = !DILocalVariable(name: "node", arg: 1, scope: !18336, file: !146, line: 225, type: !18339)
!18343 = !DILocation(line: 0, scope: !18336)
!18344 = !DILocation(line: 227, column: 15, scope: !18336)
!18345 = !DILocation(line: 227, column: 20, scope: !18336)
!18346 = !DILocation(line: 227, column: 2, scope: !18336)
!18347 = distinct !DISubprogram(name: "remove_timeout", scope: !2637, file: !2637, line: 53, type: !2631, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18348)
!18348 = !{!18349}
!18349 = !DILocalVariable(name: "t", arg: 1, scope: !18347, file: !2637, line: 53, type: !2610)
!18350 = !DILocation(line: 0, scope: !18347)
!18351 = !DILocation(line: 55, column: 6, scope: !18352)
!18352 = distinct !DILexicalBlock(scope: !18347, file: !2637, line: 55, column: 6)
!18353 = !DILocation(line: 55, column: 14, scope: !18352)
!18354 = !DILocation(line: 55, column: 6, scope: !18347)
!18355 = !DILocation(line: 56, column: 25, scope: !18356)
!18356 = distinct !DILexicalBlock(scope: !18352, file: !2637, line: 55, column: 23)
!18357 = !DILocation(line: 56, column: 12, scope: !18356)
!18358 = !DILocation(line: 56, column: 19, scope: !18356)
!18359 = !DILocation(line: 57, column: 2, scope: !18356)
!18360 = !DILocation(line: 59, column: 23, scope: !18347)
!18361 = !DILocation(line: 59, column: 2, scope: !18347)
!18362 = !DILocation(line: 60, column: 1, scope: !18347)
!18363 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !146, file: !146, line: 496, type: !18364, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18366)
!18364 = !DISubroutineType(types: !18365)
!18365 = !{null, !18192}
!18366 = !{!18367, !18368, !18369}
!18367 = !DILocalVariable(name: "node", arg: 1, scope: !18363, file: !146, line: 496, type: !18192)
!18368 = !DILocalVariable(name: "prev", scope: !18363, file: !146, line: 498, type: !18204)
!18369 = !DILocalVariable(name: "next", scope: !18363, file: !146, line: 499, type: !18204)
!18370 = !DILocation(line: 0, scope: !18363)
!18371 = !DILocation(line: 498, column: 34, scope: !18363)
!18372 = !DILocation(line: 499, column: 34, scope: !18363)
!18373 = !DILocation(line: 501, column: 8, scope: !18363)
!18374 = !DILocation(line: 501, column: 13, scope: !18363)
!18375 = !DILocation(line: 502, column: 8, scope: !18363)
!18376 = !DILocation(line: 502, column: 13, scope: !18363)
!18377 = !DILocation(line: 503, column: 2, scope: !18363)
!18378 = !DILocation(line: 504, column: 1, scope: !18363)
!18379 = distinct !DISubprogram(name: "sys_dnode_init", scope: !146, file: !146, line: 211, type: !18364, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18380)
!18380 = !{!18381}
!18381 = !DILocalVariable(name: "node", arg: 1, scope: !18379, file: !146, line: 211, type: !18192)
!18382 = !DILocation(line: 0, scope: !18379)
!18383 = !DILocation(line: 213, column: 8, scope: !18379)
!18384 = !DILocation(line: 213, column: 13, scope: !18379)
!18385 = !DILocation(line: 214, column: 8, scope: !18379)
!18386 = !DILocation(line: 214, column: 13, scope: !18379)
!18387 = !DILocation(line: 215, column: 1, scope: !18379)
!18388 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2637, file: !2637, line: 183, type: !18389, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18393)
!18389 = !DISubroutineType(types: !18390)
!18390 = !{!104, !18391}
!18391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18392, size: 32)
!18392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2611)
!18393 = !{!18394, !18395, !18396, !18398}
!18394 = !DILocalVariable(name: "timeout", arg: 1, scope: !18388, file: !2637, line: 183, type: !18391)
!18395 = !DILocalVariable(name: "ticks", scope: !18388, file: !2637, line: 185, type: !104)
!18396 = !DILocalVariable(name: "__i", scope: !18397, file: !2637, line: 187, type: !18075)
!18397 = distinct !DILexicalBlock(scope: !18388, file: !2637, line: 187, column: 2)
!18398 = !DILocalVariable(name: "__key", scope: !18397, file: !2637, line: 187, type: !18075)
!18399 = !DILocation(line: 0, scope: !18388)
!18400 = !DILocation(line: 0, scope: !18397)
!18401 = !DILocation(line: 0, scope: !18097, inlinedAt: !18402)
!18402 = distinct !DILocation(line: 187, column: 2, scope: !18397)
!18403 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18404)
!18404 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18402)
!18405 = !DILocation(line: 0, scope: !18106, inlinedAt: !18404)
!18406 = !DILocation(line: 188, column: 11, scope: !18407)
!18407 = distinct !DILexicalBlock(scope: !18408, file: !2637, line: 187, column: 24)
!18408 = distinct !DILexicalBlock(scope: !18397, file: !2637, line: 187, column: 2)
!18409 = !DILocation(line: 0, scope: !18165, inlinedAt: !18410)
!18410 = distinct !DILocation(line: 187, column: 2, scope: !18408)
!18411 = !DILocation(line: 0, scope: !18173, inlinedAt: !18412)
!18412 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18410)
!18413 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18412)
!18414 = !DILocation(line: 191, column: 2, scope: !18388)
!18415 = distinct !DISubprogram(name: "timeout_rem", scope: !2637, file: !2637, line: 165, type: !18389, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18416)
!18416 = !{!18417, !18418, !18419}
!18417 = !DILocalVariable(name: "timeout", arg: 1, scope: !18415, file: !2637, line: 165, type: !18391)
!18418 = !DILocalVariable(name: "ticks", scope: !18415, file: !2637, line: 167, type: !104)
!18419 = !DILocalVariable(name: "t", scope: !18420, file: !2637, line: 173, type: !2610)
!18420 = distinct !DILexicalBlock(scope: !18415, file: !2637, line: 173, column: 2)
!18421 = !DILocation(line: 0, scope: !18415)
!18422 = !DILocation(line: 169, column: 6, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18415, file: !2637, line: 169, column: 6)
!18424 = !DILocation(line: 169, column: 6, scope: !18415)
!18425 = !DILocation(line: 173, column: 28, scope: !18420)
!18426 = !DILocation(line: 0, scope: !18420)
!18427 = !DILocation(line: 173, column: 39, scope: !18428)
!18428 = distinct !DILexicalBlock(scope: !18420, file: !2637, line: 173, column: 2)
!18429 = !DILocation(line: 173, column: 2, scope: !18420)
!18430 = !DILocation(line: 174, column: 15, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18428, file: !2637, line: 173, column: 61)
!18432 = !DILocation(line: 174, column: 9, scope: !18431)
!18433 = !DILocation(line: 175, column: 15, scope: !18434)
!18434 = distinct !DILexicalBlock(scope: !18431, file: !2637, line: 175, column: 7)
!18435 = !DILocation(line: 175, column: 7, scope: !18431)
!18436 = !DILocation(line: 173, column: 52, scope: !18428)
!18437 = distinct !{!18437, !18429, !18438}
!18438 = !DILocation(line: 178, column: 2, scope: !18420)
!18439 = !DILocation(line: 180, column: 17, scope: !18415)
!18440 = !DILocation(line: 180, column: 15, scope: !18415)
!18441 = !DILocation(line: 180, column: 2, scope: !18415)
!18442 = !DILocation(line: 181, column: 1, scope: !18415)
!18443 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15013, file: !15013, line: 35, type: !18444, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18446)
!18444 = !DISubroutineType(types: !18445)
!18445 = !{!131, !18391}
!18446 = !{!18447}
!18447 = !DILocalVariable(name: "to", arg: 1, scope: !18443, file: !15013, line: 35, type: !18391)
!18448 = !DILocation(line: 0, scope: !18443)
!18449 = !DILocation(line: 37, column: 35, scope: !18443)
!18450 = !DILocation(line: 37, column: 10, scope: !18443)
!18451 = !DILocation(line: 37, column: 9, scope: !18443)
!18452 = !DILocation(line: 37, column: 2, scope: !18443)
!18453 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2637, file: !2637, line: 194, type: !18389, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18454)
!18454 = !{!18455, !18456, !18457, !18459}
!18455 = !DILocalVariable(name: "timeout", arg: 1, scope: !18453, file: !2637, line: 194, type: !18391)
!18456 = !DILocalVariable(name: "ticks", scope: !18453, file: !2637, line: 196, type: !104)
!18457 = !DILocalVariable(name: "__i", scope: !18458, file: !2637, line: 198, type: !18075)
!18458 = distinct !DILexicalBlock(scope: !18453, file: !2637, line: 198, column: 2)
!18459 = !DILocalVariable(name: "__key", scope: !18458, file: !2637, line: 198, type: !18075)
!18460 = !DILocation(line: 0, scope: !18453)
!18461 = !DILocation(line: 0, scope: !18458)
!18462 = !DILocation(line: 0, scope: !18097, inlinedAt: !18463)
!18463 = distinct !DILocation(line: 198, column: 2, scope: !18458)
!18464 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18465)
!18465 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18463)
!18466 = !DILocation(line: 0, scope: !18106, inlinedAt: !18465)
!18467 = !DILocation(line: 199, column: 11, scope: !18468)
!18468 = distinct !DILexicalBlock(scope: !18469, file: !2637, line: 198, column: 24)
!18469 = distinct !DILexicalBlock(scope: !18458, file: !2637, line: 198, column: 2)
!18470 = !DILocation(line: 199, column: 23, scope: !18468)
!18471 = !DILocation(line: 0, scope: !18165, inlinedAt: !18472)
!18472 = distinct !DILocation(line: 198, column: 2, scope: !18469)
!18473 = !DILocation(line: 0, scope: !18173, inlinedAt: !18474)
!18474 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18472)
!18475 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18474)
!18476 = !DILocation(line: 199, column: 21, scope: !18468)
!18477 = !DILocation(line: 202, column: 2, scope: !18453)
!18478 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2637, file: !2637, line: 205, type: !18181, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18479)
!18479 = !{!18480, !18481, !18483}
!18480 = !DILocalVariable(name: "ret", scope: !18478, file: !2637, line: 207, type: !331)
!18481 = !DILocalVariable(name: "__i", scope: !18482, file: !2637, line: 209, type: !18075)
!18482 = distinct !DILexicalBlock(scope: !18478, file: !2637, line: 209, column: 2)
!18483 = !DILocalVariable(name: "__key", scope: !18482, file: !2637, line: 209, type: !18075)
!18484 = !DILocation(line: 0, scope: !18478)
!18485 = !DILocation(line: 0, scope: !18482)
!18486 = !DILocation(line: 0, scope: !18097, inlinedAt: !18487)
!18487 = distinct !DILocation(line: 209, column: 2, scope: !18482)
!18488 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18489)
!18489 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18487)
!18490 = !DILocation(line: 0, scope: !18106, inlinedAt: !18489)
!18491 = !DILocation(line: 210, column: 9, scope: !18492)
!18492 = distinct !DILexicalBlock(scope: !18493, file: !2637, line: 209, column: 24)
!18493 = distinct !DILexicalBlock(scope: !18482, file: !2637, line: 209, column: 2)
!18494 = !DILocation(line: 0, scope: !18165, inlinedAt: !18495)
!18495 = distinct !DILocation(line: 209, column: 2, scope: !18493)
!18496 = !DILocation(line: 0, scope: !18173, inlinedAt: !18497)
!18497 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18495)
!18498 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18497)
!18499 = !DILocation(line: 212, column: 2, scope: !18478)
!18500 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2637, file: !2637, line: 215, type: !11978, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18501)
!18501 = !{!18502, !18503, !18504, !18506, !18507, !18510, !18511}
!18502 = !DILocalVariable(name: "ticks", arg: 1, scope: !18500, file: !2637, line: 215, type: !331)
!18503 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18500, file: !2637, line: 215, type: !131)
!18504 = !DILocalVariable(name: "__i", scope: !18505, file: !2637, line: 217, type: !18075)
!18505 = distinct !DILexicalBlock(scope: !18500, file: !2637, line: 217, column: 2)
!18506 = !DILocalVariable(name: "__key", scope: !18505, file: !2637, line: 217, type: !18075)
!18507 = !DILocalVariable(name: "next_to", scope: !18508, file: !2637, line: 218, type: !103)
!18508 = distinct !DILexicalBlock(scope: !18509, file: !2637, line: 217, column: 24)
!18509 = distinct !DILexicalBlock(scope: !18505, file: !2637, line: 217, column: 2)
!18510 = !DILocalVariable(name: "sooner", scope: !18508, file: !2637, line: 219, type: !131)
!18511 = !DILocalVariable(name: "imminent", scope: !18508, file: !2637, line: 221, type: !131)
!18512 = !DILocation(line: 0, scope: !18500)
!18513 = !DILocation(line: 0, scope: !18505)
!18514 = !DILocation(line: 0, scope: !18097, inlinedAt: !18515)
!18515 = distinct !DILocation(line: 217, column: 2, scope: !18505)
!18516 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18517)
!18517 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18515)
!18518 = !DILocation(line: 0, scope: !18106, inlinedAt: !18517)
!18519 = !DILocation(line: 218, column: 17, scope: !18508)
!18520 = !DILocation(line: 0, scope: !18508)
!18521 = !DILocation(line: 221, column: 27, scope: !18508)
!18522 = !DILocation(line: 233, column: 17, scope: !18523)
!18523 = distinct !DILexicalBlock(scope: !18508, file: !2637, line: 233, column: 7)
!18524 = !DILocation(line: 234, column: 26, scope: !18525)
!18525 = distinct !DILexicalBlock(scope: !18523, file: !2637, line: 233, column: 56)
!18526 = !DILocation(line: 234, column: 4, scope: !18525)
!18527 = !DILocation(line: 235, column: 3, scope: !18525)
!18528 = !DILocation(line: 0, scope: !18165, inlinedAt: !18529)
!18529 = distinct !DILocation(line: 217, column: 2, scope: !18509)
!18530 = !DILocation(line: 0, scope: !18173, inlinedAt: !18531)
!18531 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18529)
!18532 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18531)
!18533 = !DILocation(line: 237, column: 1, scope: !18500)
!18534 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2637, file: !2637, line: 239, type: !18535, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18537)
!18535 = !DISubroutineType(types: !18536)
!18536 = !{null, !331}
!18537 = !{!18538, !18539, !18540, !18542}
!18538 = !DILocalVariable(name: "ticks", arg: 1, scope: !18534, file: !2637, line: 239, type: !331)
!18539 = !DILocalVariable(name: "key", scope: !18534, file: !2637, line: 245, type: !18075)
!18540 = !DILocalVariable(name: "t", scope: !18541, file: !2637, line: 262, type: !2610)
!18541 = distinct !DILexicalBlock(scope: !18534, file: !2637, line: 261, column: 67)
!18542 = !DILocalVariable(name: "dt", scope: !18541, file: !2637, line: 263, type: !103)
!18543 = !DILocation(line: 0, scope: !18534)
!18544 = !DILocation(line: 242, column: 2, scope: !18534)
!18545 = !DILocation(line: 0, scope: !18097, inlinedAt: !18546)
!18546 = distinct !DILocation(line: 245, column: 25, scope: !18534)
!18547 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18548)
!18548 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18546)
!18549 = !DILocation(line: 0, scope: !18106, inlinedAt: !18548)
!18550 = !DILocation(line: 261, column: 9, scope: !18534)
!18551 = !DILocation(line: 261, column: 17, scope: !18534)
!18552 = !DILocation(line: 261, column: 25, scope: !18534)
!18553 = !DILocation(line: 261, column: 37, scope: !18534)
!18554 = !DILocation(line: 261, column: 47, scope: !18534)
!18555 = !DILocation(line: 261, column: 44, scope: !18534)
!18556 = !DILocation(line: 261, column: 2, scope: !18534)
!18557 = !DILocation(line: 0, scope: !18541)
!18558 = !DILocation(line: 263, column: 12, scope: !18541)
!18559 = !DILocation(line: 265, column: 16, scope: !18541)
!18560 = !DILocation(line: 265, column: 13, scope: !18541)
!18561 = !DILocation(line: 266, column: 13, scope: !18541)
!18562 = !DILocation(line: 267, column: 3, scope: !18541)
!18563 = !DILocation(line: 0, scope: !18165, inlinedAt: !18564)
!18564 = distinct !DILocation(line: 269, column: 3, scope: !18541)
!18565 = !DILocation(line: 0, scope: !18173, inlinedAt: !18566)
!18566 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18564)
!18567 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18566)
!18568 = !DILocation(line: 270, column: 6, scope: !18541)
!18569 = !DILocation(line: 270, column: 3, scope: !18541)
!18570 = !DILocation(line: 0, scope: !18097, inlinedAt: !18571)
!18571 = distinct !DILocation(line: 271, column: 9, scope: !18541)
!18572 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18573)
!18573 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18571)
!18574 = !DILocation(line: 0, scope: !18106, inlinedAt: !18573)
!18575 = !DILocation(line: 272, column: 22, scope: !18541)
!18576 = distinct !{!18576, !18556, !18577}
!18577 = !DILocation(line: 273, column: 2, scope: !18534)
!18578 = !DILocation(line: 276, column: 19, scope: !18579)
!18579 = distinct !DILexicalBlock(scope: !18580, file: !2637, line: 275, column: 23)
!18580 = distinct !DILexicalBlock(scope: !18534, file: !2637, line: 275, column: 6)
!18581 = !DILocation(line: 277, column: 2, scope: !18579)
!18582 = !DILocation(line: 279, column: 15, scope: !18534)
!18583 = !DILocation(line: 279, column: 12, scope: !18534)
!18584 = !DILocation(line: 280, column: 21, scope: !18534)
!18585 = !DILocation(line: 282, column: 24, scope: !18534)
!18586 = !DILocation(line: 282, column: 2, scope: !18534)
!18587 = !DILocation(line: 0, scope: !18165, inlinedAt: !18588)
!18588 = distinct !DILocation(line: 284, column: 2, scope: !18534)
!18589 = !DILocation(line: 0, scope: !18173, inlinedAt: !18590)
!18590 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18588)
!18591 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18590)
!18592 = !DILocation(line: 285, column: 1, scope: !18534)
!18593 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2637, file: !2637, line: 287, type: !3669, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18594)
!18594 = !{!18595, !18596, !18598}
!18595 = !DILocalVariable(name: "t", scope: !18593, file: !2637, line: 289, type: !109)
!18596 = !DILocalVariable(name: "__i", scope: !18597, file: !2637, line: 291, type: !18075)
!18597 = distinct !DILexicalBlock(scope: !18593, file: !2637, line: 291, column: 2)
!18598 = !DILocalVariable(name: "__key", scope: !18597, file: !2637, line: 291, type: !18075)
!18599 = !DILocation(line: 0, scope: !18593)
!18600 = !DILocation(line: 0, scope: !18597)
!18601 = !DILocation(line: 0, scope: !18097, inlinedAt: !18602)
!18602 = distinct !DILocation(line: 291, column: 2, scope: !18597)
!18603 = !DILocation(line: 55, column: 2, scope: !18106, inlinedAt: !18604)
!18604 = distinct !DILocation(line: 145, column: 10, scope: !18097, inlinedAt: !18602)
!18605 = !DILocation(line: 0, scope: !18106, inlinedAt: !18604)
!18606 = !DILocation(line: 292, column: 7, scope: !18607)
!18607 = distinct !DILexicalBlock(scope: !18608, file: !2637, line: 291, column: 24)
!18608 = distinct !DILexicalBlock(scope: !18597, file: !2637, line: 291, column: 2)
!18609 = !DILocation(line: 292, column: 19, scope: !18607)
!18610 = !DILocation(line: 0, scope: !18165, inlinedAt: !18611)
!18611 = distinct !DILocation(line: 291, column: 2, scope: !18608)
!18612 = !DILocation(line: 0, scope: !18173, inlinedAt: !18613)
!18613 = distinct !DILocation(line: 215, column: 2, scope: !18165, inlinedAt: !18611)
!18614 = !DILocation(line: 95, column: 2, scope: !18173, inlinedAt: !18613)
!18615 = !DILocation(line: 292, column: 17, scope: !18607)
!18616 = !DILocation(line: 294, column: 2, scope: !18593)
!18617 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2637, file: !2637, line: 297, type: !3655, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !251)
!18618 = !DILocation(line: 300, column: 19, scope: !18617)
!18619 = !DILocation(line: 300, column: 9, scope: !18617)
!18620 = !DILocation(line: 300, column: 2, scope: !18617)
!18621 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2637, file: !2637, line: 306, type: !3669, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !251)
!18622 = !DILocation(line: 308, column: 9, scope: !18621)
!18623 = !DILocation(line: 308, column: 2, scope: !18621)
!18624 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2637, file: !2637, line: 319, type: !7466, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18625)
!18625 = !{!18626, !18627, !18628, !18629}
!18626 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18624, file: !2637, line: 319, type: !108)
!18627 = !DILocalVariable(name: "start_cycles", scope: !18624, file: !2637, line: 328, type: !108)
!18628 = !DILocalVariable(name: "cycles_to_wait", scope: !18624, file: !2637, line: 331, type: !108)
!18629 = !DILocalVariable(name: "current_cycles", scope: !18630, file: !2637, line: 338, type: !108)
!18630 = distinct !DILexicalBlock(scope: !18631, file: !2637, line: 337, column: 11)
!18631 = distinct !DILexicalBlock(scope: !18632, file: !2637, line: 337, column: 2)
!18632 = distinct !DILexicalBlock(scope: !18624, file: !2637, line: 337, column: 2)
!18633 = !DILocation(line: 0, scope: !18624)
!18634 = !DILocation(line: 322, column: 19, scope: !18635)
!18635 = distinct !DILexicalBlock(scope: !18624, file: !2637, line: 322, column: 6)
!18636 = !DILocation(line: 322, column: 6, scope: !18624)
!18637 = !DILocation(line: 328, column: 26, scope: !18624)
!18638 = !DILocation(line: 333, column: 43, scope: !18624)
!18639 = !DILocation(line: 337, column: 2, scope: !18624)
!18640 = !DILocation(line: 338, column: 29, scope: !18630)
!18641 = !DILocation(line: 0, scope: !18630)
!18642 = !DILocation(line: 341, column: 23, scope: !18643)
!18643 = distinct !DILexicalBlock(scope: !18630, file: !2637, line: 341, column: 7)
!18644 = !DILocation(line: 341, column: 39, scope: !18643)
!18645 = !DILocation(line: 349, column: 1, scope: !18624)
!18646 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !137, file: !137, line: 1675, type: !3655, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !251)
!18647 = !DILocation(line: 1677, column: 9, scope: !18646)
!18648 = !DILocation(line: 1677, column: 2, scope: !18646)
!18649 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18650, file: !18650, line: 24, type: !3655, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !251)
!18650 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18651 = !DILocation(line: 26, column: 9, scope: !18649)
!18652 = !DILocation(line: 26, column: 2, scope: !18649)
!18653 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2637, file: !2637, line: 364, type: !18654, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !18656)
!18654 = !DISubroutineType(types: !18655)
!18655 = !{!109, !18065}
!18656 = !{!18657, !18658}
!18657 = !DILocalVariable(name: "timeout", arg: 1, scope: !18653, file: !2637, line: 364, type: !18065)
!18658 = !DILocalVariable(name: "dt", scope: !18653, file: !2637, line: 366, type: !104)
!18659 = !DILocation(line: 0, scope: !18653)
!18660 = !DILocation(line: 368, column: 6, scope: !18653)
!18661 = !DILocation(line: 371, column: 10, scope: !18662)
!18662 = distinct !DILexicalBlock(scope: !18663, file: !2637, line: 370, column: 47)
!18663 = distinct !DILexicalBlock(scope: !18664, file: !2637, line: 370, column: 13)
!18664 = distinct !DILexicalBlock(scope: !18653, file: !2637, line: 368, column: 6)
!18665 = !DILocation(line: 371, column: 3, scope: !18662)
!18666 = !DILocation(line: 376, column: 58, scope: !18667)
!18667 = distinct !DILexicalBlock(scope: !18668, file: !2637, line: 376, column: 7)
!18668 = distinct !DILexicalBlock(scope: !18663, file: !2637, line: 372, column: 9)
!18669 = !DILocation(line: 376, column: 7, scope: !18668)
!18670 = !DILocation(line: 376, column: 43, scope: !18667)
!18671 = !DILocation(line: 377, column: 4, scope: !18672)
!18672 = distinct !DILexicalBlock(scope: !18667, file: !2637, line: 376, column: 64)
!18673 = !DILocation(line: 379, column: 10, scope: !18668)
!18674 = !DILocation(line: 379, column: 33, scope: !18668)
!18675 = !DILocation(line: 379, column: 31, scope: !18668)
!18676 = !DILocation(line: 379, column: 3, scope: !18668)
!18677 = !DILocation(line: 0, scope: !18664)
!18678 = !DILocation(line: 381, column: 1, scope: !18653)
!18679 = distinct !DISubprogram(name: "k_free", scope: !2651, file: !2651, line: 43, type: !7314, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18680)
!18680 = !{!18681, !18682}
!18681 = !DILocalVariable(name: "ptr", arg: 1, scope: !18679, file: !2651, line: 43, type: !102)
!18682 = !DILocalVariable(name: "heap_ref", scope: !18679, file: !2651, line: 45, type: !18683)
!18683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18684, size: 32)
!18684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!18685 = !DILocation(line: 0, scope: !18679)
!18686 = !DILocation(line: 47, column: 10, scope: !18687)
!18687 = distinct !DILexicalBlock(scope: !18679, file: !2651, line: 47, column: 6)
!18688 = !DILocation(line: 47, column: 6, scope: !18679)
!18689 = !DILocation(line: 49, column: 9, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18687, file: !2651, line: 47, column: 19)
!18691 = !DILocation(line: 53, column: 15, scope: !18690)
!18692 = !DILocation(line: 53, column: 3, scope: !18690)
!18693 = !DILocation(line: 56, column: 2, scope: !18690)
!18694 = !DILocation(line: 57, column: 1, scope: !18679)
!18695 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2651, file: !2651, line: 64, type: !18696, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18698)
!18696 = !DISubroutineType(types: !18697)
!18697 = !{!102, !132, !132}
!18698 = !{!18699, !18700, !18701}
!18699 = !DILocalVariable(name: "align", arg: 1, scope: !18695, file: !2651, line: 64, type: !132)
!18700 = !DILocalVariable(name: "size", arg: 2, scope: !18695, file: !2651, line: 64, type: !132)
!18701 = !DILocalVariable(name: "ret", scope: !18695, file: !2651, line: 75, type: !102)
!18702 = !DILocation(line: 0, scope: !18695)
!18703 = !DILocation(line: 75, column: 14, scope: !18695)
!18704 = !DILocation(line: 79, column: 2, scope: !18695)
!18705 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2651, file: !2651, line: 12, type: !18706, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18708)
!18706 = !DISubroutineType(types: !18707)
!18707 = !{!102, !18684, !132, !132}
!18708 = !{!18709, !18710, !18711, !18712, !18713, !18714}
!18709 = !DILocalVariable(name: "heap", arg: 1, scope: !18705, file: !2651, line: 12, type: !18684)
!18710 = !DILocalVariable(name: "align", arg: 2, scope: !18705, file: !2651, line: 12, type: !132)
!18711 = !DILocalVariable(name: "size", arg: 3, scope: !18705, file: !2651, line: 12, type: !132)
!18712 = !DILocalVariable(name: "mem", scope: !18705, file: !2651, line: 14, type: !102)
!18713 = !DILocalVariable(name: "heap_ref", scope: !18705, file: !2651, line: 15, type: !18683)
!18714 = !DILocalVariable(name: "__align", scope: !18705, file: !2651, line: 16, type: !132)
!18715 = !DILocation(line: 0, scope: !18705)
!18716 = !DILocation(line: 24, column: 6, scope: !18717)
!18717 = distinct !DILexicalBlock(scope: !18705, file: !2651, line: 24, column: 6)
!18718 = !DILocation(line: 24, column: 6, scope: !18705)
!18719 = !DILocation(line: 27, column: 18, scope: !18705)
!18720 = !DILocation(line: 29, column: 44, scope: !18705)
!18721 = !DILocation(line: 29, column: 8, scope: !18705)
!18722 = !DILocation(line: 30, column: 10, scope: !18723)
!18723 = distinct !DILexicalBlock(scope: !18705, file: !2651, line: 30, column: 6)
!18724 = !DILocation(line: 30, column: 6, scope: !18705)
!18725 = !DILocation(line: 34, column: 13, scope: !18705)
!18726 = !DILocation(line: 35, column: 12, scope: !18705)
!18727 = !DILocation(line: 36, column: 8, scope: !18705)
!18728 = !DILocation(line: 40, column: 2, scope: !18705)
!18729 = !DILocation(line: 41, column: 1, scope: !18705)
!18730 = distinct !DISubprogram(name: "size_add_overflow", scope: !15378, file: !15378, line: 47, type: !15379, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18731)
!18731 = !{!18732, !18733, !18734}
!18732 = !DILocalVariable(name: "a", arg: 1, scope: !18730, file: !15378, line: 47, type: !132)
!18733 = !DILocalVariable(name: "b", arg: 2, scope: !18730, file: !15378, line: 47, type: !132)
!18734 = !DILocalVariable(name: "result", arg: 3, scope: !18730, file: !15378, line: 47, type: !2785)
!18735 = !DILocation(line: 0, scope: !18730)
!18736 = !DILocation(line: 49, column: 9, scope: !18730)
!18737 = !DILocation(line: 49, column: 2, scope: !18730)
!18738 = distinct !DISubprogram(name: "k_malloc", scope: !2651, file: !2651, line: 82, type: !15390, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18739)
!18739 = !{!18740, !18741}
!18740 = !DILocalVariable(name: "size", arg: 1, scope: !18738, file: !2651, line: 82, type: !132)
!18741 = !DILocalVariable(name: "ret", scope: !18738, file: !2651, line: 86, type: !102)
!18742 = !DILocation(line: 0, scope: !18738)
!18743 = !DILocation(line: 86, column: 14, scope: !18738)
!18744 = !DILocation(line: 90, column: 2, scope: !18738)
!18745 = distinct !DISubprogram(name: "k_calloc", scope: !2651, file: !2651, line: 93, type: !18696, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18746)
!18746 = !{!18747, !18748, !18749, !18750}
!18747 = !DILocalVariable(name: "nmemb", arg: 1, scope: !18745, file: !2651, line: 93, type: !132)
!18748 = !DILocalVariable(name: "size", arg: 2, scope: !18745, file: !2651, line: 93, type: !132)
!18749 = !DILocalVariable(name: "ret", scope: !18745, file: !2651, line: 95, type: !102)
!18750 = !DILocalVariable(name: "bounds", scope: !18745, file: !2651, line: 96, type: !132)
!18751 = !DILocation(line: 0, scope: !18745)
!18752 = !DILocation(line: 96, column: 2, scope: !18745)
!18753 = !DILocation(line: 100, column: 6, scope: !18754)
!18754 = distinct !DILexicalBlock(scope: !18745, file: !2651, line: 100, column: 6)
!18755 = !DILocation(line: 100, column: 6, scope: !18745)
!18756 = !DILocation(line: 106, column: 17, scope: !18745)
!18757 = !DILocation(line: 106, column: 8, scope: !18745)
!18758 = !DILocation(line: 107, column: 10, scope: !18759)
!18759 = distinct !DILexicalBlock(scope: !18745, file: !2651, line: 107, column: 6)
!18760 = !DILocation(line: 107, column: 6, scope: !18745)
!18761 = !DILocation(line: 108, column: 9, scope: !18762)
!18762 = distinct !DILexicalBlock(scope: !18759, file: !2651, line: 107, column: 19)
!18763 = !DILocation(line: 109, column: 2, scope: !18762)
!18764 = !DILocation(line: 114, column: 1, scope: !18745)
!18765 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15378, file: !15378, line: 105, type: !15379, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18766)
!18766 = !{!18767, !18768, !18769}
!18767 = !DILocalVariable(name: "a", arg: 1, scope: !18765, file: !15378, line: 105, type: !132)
!18768 = !DILocalVariable(name: "b", arg: 2, scope: !18765, file: !15378, line: 105, type: !132)
!18769 = !DILocalVariable(name: "result", arg: 3, scope: !18765, file: !15378, line: 105, type: !2785)
!18770 = !DILocation(line: 0, scope: !18765)
!18771 = !DILocation(line: 107, column: 9, scope: !18765)
!18772 = !DILocation(line: 107, column: 2, scope: !18765)
!18773 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2651, file: !2651, line: 116, type: !18774, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18846)
!18774 = !DISubroutineType(types: !18775)
!18775 = !{null, !18776}
!18776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18777, size: 32)
!18777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !163, line: 245, size: 1024, elements: !18778)
!18778 = !{!18779, !18819, !18831, !18832, !18833, !18834, !18840, !18841}
!18779 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !18777, file: !163, line: 247, baseType: !18780, size: 384)
!18780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !163, line: 57, size: 384, elements: !18781)
!18781 = !{!18782, !18793, !18795, !18796, !18797, !18806, !18807, !18808}
!18782 = !DIDerivedType(tag: DW_TAG_member, scope: !18780, file: !163, line: 60, baseType: !18783, size: 64)
!18783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18780, file: !163, line: 60, size: 64, elements: !18784)
!18784 = !{!18785, !18787}
!18785 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !18783, file: !163, line: 61, baseType: !18786, size: 64)
!18786 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !146, line: 49, baseType: !2666)
!18787 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !18783, file: !163, line: 62, baseType: !18788, size: 64)
!18788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !175, line: 49, size: 64, elements: !18789)
!18789 = !{!18790}
!18790 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !18788, file: !175, line: 50, baseType: !18791, size: 64)
!18791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18792, size: 64, elements: !180)
!18792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18788, size: 32)
!18793 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !18780, file: !163, line: 68, baseType: !18794, size: 32, offset: 64)
!18794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!18795 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !18780, file: !163, line: 71, baseType: !185, size: 8, offset: 96)
!18796 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !18780, file: !163, line: 74, baseType: !185, size: 8, offset: 104)
!18797 = !DIDerivedType(tag: DW_TAG_member, scope: !18780, file: !163, line: 90, baseType: !18798, size: 16, offset: 112)
!18798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !18780, file: !163, line: 90, size: 16, elements: !18799)
!18799 = !{!18800, !18805}
!18800 = !DIDerivedType(tag: DW_TAG_member, scope: !18798, file: !163, line: 91, baseType: !18801, size: 16)
!18801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18798, file: !163, line: 91, size: 16, elements: !18802)
!18802 = !{!18803, !18804}
!18803 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18801, file: !163, line: 96, baseType: !195, size: 8)
!18804 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !18801, file: !163, line: 97, baseType: !185, size: 8, offset: 8)
!18805 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !18798, file: !163, line: 100, baseType: !121, size: 16)
!18806 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !18780, file: !163, line: 107, baseType: !108, size: 32, offset: 128)
!18807 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !18780, file: !163, line: 127, baseType: !102, size: 32, offset: 160)
!18808 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !18780, file: !163, line: 131, baseType: !18809, size: 192, offset: 192)
!18809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !141, line: 244, size: 192, elements: !18810)
!18810 = !{!18811, !18812, !18818}
!18811 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !18809, file: !141, line: 245, baseType: !18786, size: 64)
!18812 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !18809, file: !141, line: 246, baseType: !18813, size: 32, offset: 64)
!18813 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !141, line: 242, baseType: !18814)
!18814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18815, size: 32)
!18815 = !DISubroutineType(types: !18816)
!18816 = !{null, !18817}
!18817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18809, size: 32)
!18818 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !18809, file: !141, line: 249, baseType: !106, size: 64, offset: 128)
!18819 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !18777, file: !163, line: 250, baseType: !18820, size: 288, offset: 384)
!18820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !214, line: 25, size: 288, elements: !18821)
!18821 = !{!18822, !18823, !18824, !18825, !18826, !18827, !18828, !18829, !18830}
!18822 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !18820, file: !214, line: 26, baseType: !108, size: 32)
!18823 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !18820, file: !214, line: 27, baseType: !108, size: 32, offset: 32)
!18824 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !18820, file: !214, line: 28, baseType: !108, size: 32, offset: 64)
!18825 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !18820, file: !214, line: 29, baseType: !108, size: 32, offset: 96)
!18826 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !18820, file: !214, line: 30, baseType: !108, size: 32, offset: 128)
!18827 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !18820, file: !214, line: 31, baseType: !108, size: 32, offset: 160)
!18828 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !18820, file: !214, line: 32, baseType: !108, size: 32, offset: 192)
!18829 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !18820, file: !214, line: 33, baseType: !108, size: 32, offset: 224)
!18830 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !18820, file: !214, line: 34, baseType: !108, size: 32, offset: 256)
!18831 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !18777, file: !163, line: 253, baseType: !102, size: 32, offset: 672)
!18832 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !18777, file: !163, line: 256, baseType: !2661, size: 64, offset: 704)
!18833 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !18777, file: !163, line: 294, baseType: !103, size: 32, offset: 768)
!18834 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !18777, file: !163, line: 300, baseType: !18835, size: 96, offset: 800)
!18835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !163, line: 149, size: 96, elements: !18836)
!18836 = !{!18837, !18838, !18839}
!18837 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !18835, file: !163, line: 153, baseType: !22, size: 32)
!18838 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !18835, file: !163, line: 162, baseType: !132, size: 32, offset: 32)
!18839 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !18835, file: !163, line: 168, baseType: !132, size: 32, offset: 64)
!18840 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !18777, file: !163, line: 325, baseType: !18684, size: 32, offset: 896)
!18841 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !18777, file: !163, line: 343, baseType: !18842, size: 64, offset: 928)
!18842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !214, line: 60, size: 64, elements: !18843)
!18843 = !{!18844, !18845}
!18844 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !18842, file: !214, line: 63, baseType: !108, size: 32)
!18845 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !18842, file: !214, line: 66, baseType: !108, size: 32, offset: 32)
!18846 = !{!18847}
!18847 = !DILocalVariable(name: "thread", arg: 1, scope: !18773, file: !2651, line: 116, type: !18776)
!18848 = !DILocation(line: 0, scope: !18773)
!18849 = !DILocation(line: 118, column: 10, scope: !18773)
!18850 = !DILocation(line: 118, column: 24, scope: !18773)
!18851 = !DILocation(line: 119, column: 1, scope: !18773)
!18852 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2651, file: !2651, line: 124, type: !18696, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18853)
!18853 = !{!18854, !18855, !18856, !18857}
!18854 = !DILocalVariable(name: "align", arg: 1, scope: !18852, file: !2651, line: 124, type: !132)
!18855 = !DILocalVariable(name: "size", arg: 2, scope: !18852, file: !2651, line: 124, type: !132)
!18856 = !DILocalVariable(name: "ret", scope: !18852, file: !2651, line: 126, type: !102)
!18857 = !DILocalVariable(name: "heap", scope: !18852, file: !2651, line: 127, type: !18684)
!18858 = !DILocation(line: 0, scope: !18852)
!18859 = !DILocation(line: 129, column: 6, scope: !18860)
!18860 = distinct !DILexicalBlock(scope: !18852, file: !2651, line: 129, column: 6)
!18861 = !DILocation(line: 129, column: 6, scope: !18852)
!18862 = !DILocation(line: 132, column: 10, scope: !18863)
!18863 = distinct !DILexicalBlock(scope: !18860, file: !2651, line: 131, column: 9)
!18864 = !DILocation(line: 132, column: 20, scope: !18863)
!18865 = !DILocation(line: 135, column: 11, scope: !18866)
!18866 = distinct !DILexicalBlock(scope: !18852, file: !2651, line: 135, column: 6)
!18867 = !DILocation(line: 135, column: 6, scope: !18852)
!18868 = !DILocation(line: 136, column: 9, scope: !18869)
!18869 = distinct !DILexicalBlock(scope: !18866, file: !2651, line: 135, column: 20)
!18870 = !DILocation(line: 137, column: 2, scope: !18869)
!18871 = !DILocation(line: 0, scope: !18866)
!18872 = !DILocation(line: 141, column: 2, scope: !18852)
!18873 = distinct !DISubprogram(name: "main", scope: !18874, file: !18874, line: 27, type: !334, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !251)
!18874 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18875 = !DILocation(line: 38, column: 2, scope: !18876, inlinedAt: !18877)
!18876 = distinct !DISubprogram(name: "arch_nop", scope: !18650, file: !18650, line: 36, type: !334, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3403, retainedNodes: !251)
!18877 = distinct !DILocation(line: 31, column: 2, scope: !18873)
!18878 = !{i64 2281105}
!18879 = !DILocation(line: 36, column: 1, scope: !18873)
!18880 = distinct !DISubprogram(name: "boot_banner", scope: !18881, file: !18881, line: 26, type: !334, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3405, retainedNodes: !251)
!18881 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18882 = !DILocation(line: 34, column: 2, scope: !18880)
!18883 = !DILocation(line: 36, column: 1, scope: !18880)
!18884 = distinct !DISubprogram(name: "statics_init", scope: !2705, file: !2705, line: 21, type: !2711, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !18885)
!18885 = !{!18886, !18887}
!18886 = !DILocalVariable(name: "unused", arg: 1, scope: !18884, file: !2705, line: 21, type: !2713)
!18887 = !DILocalVariable(name: "h", scope: !18888, file: !2705, line: 24, type: !18889)
!18888 = distinct !DILexicalBlock(scope: !18884, file: !2705, line: 24, column: 2)
!18889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18890, size: 32)
!18890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !137, line: 5073, size: 160, elements: !18891)
!18891 = !{!18892, !18898, !18904}
!18892 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18890, file: !137, line: 5074, baseType: !18893, size: 96)
!18893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !240, line: 56, size: 96, elements: !18894)
!18894 = !{!18895, !18896, !18897}
!18895 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18893, file: !240, line: 57, baseType: !243, size: 32)
!18896 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18893, file: !240, line: 58, baseType: !102, size: 32, offset: 32)
!18897 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18893, file: !240, line: 59, baseType: !132, size: 32, offset: 64)
!18898 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18890, file: !137, line: 5075, baseType: !18899, size: 64, offset: 96)
!18899 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !141, line: 233, baseType: !18900)
!18900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !141, line: 231, size: 64, elements: !18901)
!18901 = !{!18902}
!18902 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18900, file: !141, line: 232, baseType: !18903, size: 64)
!18903 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !146, line: 48, baseType: !2691)
!18904 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18890, file: !137, line: 5076, baseType: !18905, offset: 160)
!18905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !250, line: 43, elements: !251)
!18906 = !DILocation(line: 0, scope: !18884)
!18907 = !DILocation(line: 0, scope: !18888)
!18908 = !DILocation(line: 24, column: 2, scope: !18888)
!18909 = !DILocation(line: 52, column: 2, scope: !18884)
!18910 = !DILocation(line: 49, column: 27, scope: !18911)
!18911 = distinct !DILexicalBlock(scope: !18912, file: !2705, line: 48, column: 3)
!18912 = distinct !DILexicalBlock(scope: !18913, file: !2705, line: 24, column: 36)
!18913 = distinct !DILexicalBlock(scope: !18888, file: !2705, line: 24, column: 2)
!18914 = !DILocation(line: 49, column: 45, scope: !18911)
!18915 = !DILocation(line: 49, column: 4, scope: !18911)
!18916 = !DILocation(line: 24, column: 2, scope: !18913)
!18917 = !DILocation(line: 24, column: 2, scope: !18918)
!18918 = distinct !DILexicalBlock(scope: !18913, file: !2705, line: 24, column: 2)
!18919 = distinct !{!18919, !18908, !18920}
!18920 = !DILocation(line: 51, column: 2, scope: !18888)
!18921 = distinct !DISubprogram(name: "k_heap_init", scope: !2705, file: !2705, line: 13, type: !18922, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !18924)
!18922 = !DISubroutineType(types: !18923)
!18923 = !{null, !18889, !102, !132}
!18924 = !{!18925, !18926, !18927}
!18925 = !DILocalVariable(name: "h", arg: 1, scope: !18921, file: !2705, line: 13, type: !18889)
!18926 = !DILocalVariable(name: "mem", arg: 2, scope: !18921, file: !2705, line: 13, type: !102)
!18927 = !DILocalVariable(name: "bytes", arg: 3, scope: !18921, file: !2705, line: 13, type: !132)
!18928 = !DILocation(line: 0, scope: !18921)
!18929 = !DILocation(line: 15, column: 19, scope: !18921)
!18930 = !DILocation(line: 15, column: 2, scope: !18921)
!18931 = !DILocation(line: 16, column: 20, scope: !18921)
!18932 = !DILocation(line: 16, column: 2, scope: !18921)
!18933 = !DILocation(line: 19, column: 1, scope: !18921)
!18934 = distinct !DISubprogram(name: "z_waitq_init", scope: !14945, file: !14945, line: 47, type: !18935, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !18938)
!18935 = !DISubroutineType(types: !18936)
!18936 = !{null, !18937}
!18937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18899, size: 32)
!18938 = !{!18939}
!18939 = !DILocalVariable(name: "w", arg: 1, scope: !18934, file: !14945, line: 47, type: !18937)
!18940 = !DILocation(line: 0, scope: !18934)
!18941 = !DILocation(line: 49, column: 21, scope: !18934)
!18942 = !DILocation(line: 49, column: 2, scope: !18934)
!18943 = !DILocation(line: 50, column: 1, scope: !18934)
!18944 = distinct !DISubprogram(name: "sys_dlist_init", scope: !146, file: !146, line: 197, type: !18945, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !18948)
!18945 = !DISubroutineType(types: !18946)
!18946 = !{null, !18947}
!18947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18903, size: 32)
!18948 = !{!18949}
!18949 = !DILocalVariable(name: "list", arg: 1, scope: !18944, file: !146, line: 197, type: !18947)
!18950 = !DILocation(line: 0, scope: !18944)
!18951 = !DILocation(line: 199, column: 8, scope: !18944)
!18952 = !DILocation(line: 199, column: 13, scope: !18944)
!18953 = !DILocation(line: 200, column: 8, scope: !18944)
!18954 = !DILocation(line: 200, column: 13, scope: !18944)
!18955 = !DILocation(line: 201, column: 1, scope: !18944)
!18956 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2705, file: !2705, line: 64, type: !18957, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !18963)
!18957 = !DISubroutineType(types: !18958)
!18958 = !{!102, !18889, !132, !132, !18959}
!18959 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18960)
!18960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18961)
!18961 = !{!18962}
!18962 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18960, file: !105, line: 66, baseType: !104, size: 64)
!18963 = !{!18964, !18965, !18966, !18967, !18968, !18969, !18970, !18971, !18976}
!18964 = !DILocalVariable(name: "h", arg: 1, scope: !18956, file: !2705, line: 64, type: !18889)
!18965 = !DILocalVariable(name: "align", arg: 2, scope: !18956, file: !2705, line: 64, type: !132)
!18966 = !DILocalVariable(name: "bytes", arg: 3, scope: !18956, file: !2705, line: 64, type: !132)
!18967 = !DILocalVariable(name: "timeout", arg: 4, scope: !18956, file: !2705, line: 65, type: !18959)
!18968 = !DILocalVariable(name: "now", scope: !18956, file: !2705, line: 67, type: !106)
!18969 = !DILocalVariable(name: "end", scope: !18956, file: !2705, line: 67, type: !106)
!18970 = !DILocalVariable(name: "ret", scope: !18956, file: !2705, line: 68, type: !102)
!18971 = !DILocalVariable(name: "key", scope: !18956, file: !2705, line: 72, type: !18972)
!18972 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !250, line: 106, baseType: !18973)
!18973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !250, line: 32, size: 32, elements: !18974)
!18974 = !{!18975}
!18975 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18973, file: !250, line: 33, baseType: !103, size: 32)
!18976 = !DILocalVariable(name: "blocked_alloc", scope: !18956, file: !2705, line: 78, type: !131)
!18977 = !DILocation(line: 0, scope: !18956)
!18978 = !DILocation(line: 67, column: 21, scope: !18956)
!18979 = !DILocation(line: 70, column: 8, scope: !18956)
!18980 = !DILocation(line: 72, column: 41, scope: !18956)
!18981 = !DILocalVariable(name: "l", arg: 1, scope: !18982, file: !250, line: 136, type: !18985)
!18982 = distinct !DISubprogram(name: "k_spin_lock", scope: !250, file: !250, line: 136, type: !18983, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !18986)
!18983 = !DISubroutineType(types: !18984)
!18984 = !{!18972, !18985}
!18985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18905, size: 32)
!18986 = !{!18981, !18987}
!18987 = !DILocalVariable(name: "k", scope: !18982, file: !250, line: 139, type: !18972)
!18988 = !DILocation(line: 0, scope: !18982, inlinedAt: !18989)
!18989 = distinct !DILocation(line: 72, column: 25, scope: !18956)
!18990 = !DILocation(line: 55, column: 2, scope: !18991, inlinedAt: !18995)
!18991 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7059, file: !7059, line: 42, type: !7060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !18992)
!18992 = !{!18993, !18994}
!18993 = !DILocalVariable(name: "key", scope: !18991, file: !7059, line: 44, type: !32)
!18994 = !DILocalVariable(name: "tmp", scope: !18991, file: !7059, line: 53, type: !32)
!18995 = distinct !DILocation(line: 145, column: 10, scope: !18982, inlinedAt: !18989)
!18996 = !{i64 2280248}
!18997 = !DILocation(line: 0, scope: !18991, inlinedAt: !18995)
!18998 = !DILocation(line: 81, column: 9, scope: !18999)
!18999 = distinct !DILexicalBlock(scope: !18956, file: !2705, line: 80, column: 22)
!19000 = !DILocation(line: 83, column: 9, scope: !18999)
!19001 = !DILocation(line: 85, column: 12, scope: !19002)
!19002 = distinct !DILexicalBlock(scope: !18999, file: !2705, line: 84, column: 7)
!19003 = !DILocation(line: 85, column: 21, scope: !19002)
!19004 = !DILocation(line: 85, column: 30, scope: !19002)
!19005 = !DILocation(line: 85, column: 37, scope: !19002)
!19006 = !DILocation(line: 84, column: 7, scope: !18999)
!19007 = !DILocation(line: 99, column: 10, scope: !18999)
!19008 = !DILocation(line: 0, scope: !18982, inlinedAt: !19009)
!19009 = distinct !DILocation(line: 101, column: 9, scope: !18999)
!19010 = !DILocation(line: 55, column: 2, scope: !18991, inlinedAt: !19011)
!19011 = distinct !DILocation(line: 145, column: 10, scope: !18982, inlinedAt: !19009)
!19012 = !DILocation(line: 0, scope: !18991, inlinedAt: !19011)
!19013 = distinct !{!19013, !19014, !19015}
!19014 = !DILocation(line: 80, column: 2, scope: !18956)
!19015 = !DILocation(line: 102, column: 2, scope: !18956)
!19016 = !DILocalVariable(name: "key", arg: 2, scope: !19017, file: !250, line: 190, type: !18972)
!19017 = distinct !DISubprogram(name: "k_spin_unlock", scope: !250, file: !250, line: 189, type: !19018, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !19020)
!19018 = !DISubroutineType(types: !19019)
!19019 = !{null, !18985, !18972}
!19020 = !{!19021, !19016}
!19021 = !DILocalVariable(name: "l", arg: 1, scope: !19017, file: !250, line: 189, type: !18985)
!19022 = !DILocation(line: 0, scope: !19017, inlinedAt: !19023)
!19023 = distinct !DILocation(line: 106, column: 2, scope: !18956)
!19024 = !DILocalVariable(name: "key", arg: 1, scope: !19025, file: !7059, line: 84, type: !32)
!19025 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7059, file: !7059, line: 84, type: !7070, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !19026)
!19026 = !{!19024}
!19027 = !DILocation(line: 0, scope: !19025, inlinedAt: !19028)
!19028 = distinct !DILocation(line: 215, column: 2, scope: !19017, inlinedAt: !19023)
!19029 = !DILocation(line: 95, column: 2, scope: !19025, inlinedAt: !19028)
!19030 = !{i64 2281065}
!19031 = !DILocation(line: 107, column: 2, scope: !18956)
!19032 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2705, file: !2705, line: 110, type: !19033, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !19035)
!19033 = !DISubroutineType(types: !19034)
!19034 = !{!102, !18889, !132, !18959}
!19035 = !{!19036, !19037, !19038, !19039}
!19036 = !DILocalVariable(name: "h", arg: 1, scope: !19032, file: !2705, line: 110, type: !18889)
!19037 = !DILocalVariable(name: "bytes", arg: 2, scope: !19032, file: !2705, line: 110, type: !132)
!19038 = !DILocalVariable(name: "timeout", arg: 3, scope: !19032, file: !2705, line: 110, type: !18959)
!19039 = !DILocalVariable(name: "ret", scope: !19032, file: !2705, line: 114, type: !102)
!19040 = !DILocation(line: 0, scope: !19032)
!19041 = !DILocation(line: 114, column: 14, scope: !19032)
!19042 = !DILocation(line: 118, column: 2, scope: !19032)
!19043 = distinct !DISubprogram(name: "k_heap_free", scope: !2705, file: !2705, line: 121, type: !19044, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2686, retainedNodes: !19046)
!19044 = !DISubroutineType(types: !19045)
!19045 = !{null, !18889, !102}
!19046 = !{!19047, !19048, !19049}
!19047 = !DILocalVariable(name: "h", arg: 1, scope: !19043, file: !2705, line: 121, type: !18889)
!19048 = !DILocalVariable(name: "mem", arg: 2, scope: !19043, file: !2705, line: 121, type: !102)
!19049 = !DILocalVariable(name: "key", scope: !19043, file: !2705, line: 123, type: !18972)
!19050 = !DILocation(line: 0, scope: !19043)
!19051 = !DILocation(line: 0, scope: !18982, inlinedAt: !19052)
!19052 = distinct !DILocation(line: 123, column: 25, scope: !19043)
!19053 = !DILocation(line: 55, column: 2, scope: !18991, inlinedAt: !19054)
!19054 = distinct !DILocation(line: 145, column: 10, scope: !18982, inlinedAt: !19052)
!19055 = !DILocation(line: 0, scope: !18991, inlinedAt: !19054)
!19056 = !DILocation(line: 125, column: 20, scope: !19043)
!19057 = !DILocation(line: 125, column: 2, scope: !19043)
!19058 = !DILocation(line: 128, column: 60, scope: !19059)
!19059 = distinct !DILexicalBlock(scope: !19043, file: !2705, line: 128, column: 6)
!19060 = !DILocation(line: 128, column: 43, scope: !19059)
!19061 = !DILocation(line: 128, column: 68, scope: !19059)
!19062 = !DILocation(line: 128, column: 6, scope: !19043)
!19063 = !DILocation(line: 123, column: 41, scope: !19043)
!19064 = !DILocation(line: 129, column: 3, scope: !19065)
!19065 = distinct !DILexicalBlock(scope: !19059, file: !2705, line: 128, column: 74)
!19066 = !DILocation(line: 130, column: 2, scope: !19065)
!19067 = !DILocation(line: 0, scope: !19017, inlinedAt: !19068)
!19068 = distinct !DILocation(line: 131, column: 3, scope: !19069)
!19069 = distinct !DILexicalBlock(scope: !19059, file: !2705, line: 130, column: 9)
!19070 = !DILocation(line: 0, scope: !19025, inlinedAt: !19071)
!19071 = distinct !DILocation(line: 215, column: 2, scope: !19017, inlinedAt: !19068)
!19072 = !DILocation(line: 95, column: 2, scope: !19025, inlinedAt: !19071)
!19073 = !DILocation(line: 133, column: 1, scope: !19043)
