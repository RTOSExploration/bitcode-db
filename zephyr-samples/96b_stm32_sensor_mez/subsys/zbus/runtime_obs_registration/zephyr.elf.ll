; ModuleID = 'build/96b_stm32_sensor_mez/runtime_obs_registration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct._slist*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._snode = type { %struct._snode* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.zbus_observer.19 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.18*)* }
%struct.zbus_channel.18 = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct._slist*, %struct.zbus_observer.19** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.k_mem_slab = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i32 }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.zbus_observer_node = type { %struct._snode, %struct.zbus_observer.19* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238859 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238839 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238829 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238929 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238919 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238909 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238899 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238889 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238879 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238869 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134240384 to i8*), void (i8*)* inttoptr (i32 134238849 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [64 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_consumer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_consumer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub, i32 0, i32 0), i8* bitcast (%struct.k_mutex* @_zbus_mutex_processed_data_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_state_change_sub to i8*), i8* getelementptr inbounds (%struct.zbus_observer.19, %struct.zbus_observer.19* @filter_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel.18* @processed_data_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer.19, %struct.zbus_observer.19* @state_change_sub, i32 0, i32 0), i8* bitcast (%struct._static_thread_data* @_k_thread_data_produce_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_raw_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_state_chan to i8*), i8* bitcast (%struct.zbus_channel.18* @raw_data_chan to i8*), i8* bitcast (%struct.zbus_channel.18* @state_chan to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.k_mem_slab* @_zbus_runtime_obs_pool to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_init_mem_slab_module to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_consumer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_consumer_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_consumer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.0", align 4, !dbg !342
@_k_thread_obj_consumer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !352
@_k_thread_stack_consumer_thread_id = dso_local global [576 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.1", align 64, !dbg !347
@.str = private unnamed_addr constant [19 x i8] c"consumer_thread_id\00", align 1
@_k_thread_data_consumer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_consumer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([576 x %struct.z_thread_stack_element], [576 x %struct.z_thread_stack_element]* @_k_thread_stack_consumer_thread_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @consumer_subscriber_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_consumer_thread_id", align 4, !dbg !305
@consumer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_consumer_thread_id, align 4, !dbg !338
@.str.1 = private unnamed_addr constant [47 x i8] c"%c:  --> Consuming data: Acc x=%d, y=%d, z=%d\0A\00", align 1
@_zbus_mutex_processed_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_processed_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_processed_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_processed_data_chan", align 4, !dbg !354
@_zbus_message_processed_data_chan = internal global %struct._thread_stack_info zeroinitializer, align 4, !dbg !535
@_runtime_observers_processed_data_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !528
@_zbus_observers_processed_data_chan = internal constant [2 x %struct.zbus_observer.19*] [%struct.zbus_observer.19* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), %struct.zbus_observer.19* null], align 4, !dbg !543
@processed_data_chan = dso_local constant %struct.zbus_channel.18 { i16 12, i8* null, i8* bitcast (%struct._thread_stack_info* @_zbus_message_processed_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_processed_data_chan, %struct._slist* @_runtime_observers_processed_data_chan, %struct.zbus_observer.19** getelementptr inbounds ([2 x %struct.zbus_observer.19*], [2 x %struct.zbus_observer.19*]* @_zbus_observers_processed_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.processed_data_chan", align 4, !dbg !360
@filter_lis = dso_local global %struct.zbus_observer.19 { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel.18*)* @filter_callback }, section "._zbus_observer.static.filter_lis", align 4, !dbg !522
@_zbus_observer_queue_state_change_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i64 1, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_state_change_sub", align 4, !dbg !524
@_k_fifo_buf__zbus_observer_queue_state_change_sub = internal global [20 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !530
@.str.2 = private unnamed_addr constant [20 x i8] c"%c: System started\0A\00", align 1
@.str.1.3 = private unnamed_addr constant [23 x i8] c"%c: Activating filter\0A\00", align 1
@.str.2.4 = private unnamed_addr constant [25 x i8] c"%c: Deactivating filter\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"%c: Bypass filter\0A\00", align 1
@consumer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.consumer_sub", align 4, !dbg !112
@.str.4 = private unnamed_addr constant [27 x i8] c"%c: Disable bypass filter\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"%c:  -|- Filtering data\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@_zbus_mutex_raw_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_raw_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_raw_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_raw_data_chan", align 4, !dbg !546
@_zbus_message_raw_data_chan = internal global %struct._thread_stack_info zeroinitializer, align 4, !dbg !751
@_runtime_observers_raw_data_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !742
@_zbus_observers_raw_data_chan = internal constant [1 x %struct.zbus_observer.19*] zeroinitializer, align 4, !dbg !758
@raw_data_chan = dso_local constant %struct.zbus_channel.18 { i16 12, i8* null, i8* bitcast (%struct._thread_stack_info* @_zbus_message_raw_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_raw_data_chan, %struct._slist* @_runtime_observers_raw_data_chan, %struct.zbus_observer.19** getelementptr inbounds ([1 x %struct.zbus_observer.19*], [1 x %struct.zbus_observer.19*]* @_zbus_observers_raw_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.raw_data_chan", align 4, !dbg !551
@_zbus_mutex_state_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_state_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_state_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_state_chan", align 4, !dbg !713
@_zbus_message_state_chan = internal global i8 0, align 1, !dbg !763
@_runtime_observers_state_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !744
@_zbus_observers_state_chan = internal constant [2 x %struct.zbus_observer.19*] [%struct.zbus_observer.19* @state_change_sub, %struct.zbus_observer.19* null], align 4, !dbg !765
@state_chan = dso_local constant %struct.zbus_channel.18 { i16 1, i8* null, i8* @_zbus_message_state_chan, i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_state_chan, %struct._slist* @_runtime_observers_state_chan, %struct.zbus_observer.19** getelementptr inbounds ([2 x %struct.zbus_observer.19*], [2 x %struct.zbus_observer.19*]* @_zbus_observers_state_chan, i32 0, i32 0) }, section "._zbus_channel.static.state_chan", align 4, !dbg !715
@_k_thread_obj_produce_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !749
@_k_thread_stack_produce_thread_id = dso_local global [576 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.0", align 64, !dbg !746
@.str.10 = private unnamed_addr constant [18 x i8] c"produce_thread_id\00", align 1
@_k_thread_data_produce_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_produce_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([576 x %struct.z_thread_stack_element], [576 x %struct.z_thread_stack_element]* @_k_thread_stack_produce_thread_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_produce_thread_id", align 4, !dbg !717
@produce_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_produce_thread_id, align 4, !dbg !738
@state_change_sub = dso_local global %struct.zbus_observer.19 { i8 1, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, void (%struct.zbus_channel.18*)* null }, section "._zbus_observer.static.state_change_sub", align 4, !dbg !526
@.str.1.11 = private unnamed_addr constant [27 x i8] c"%c:  >-- Raw data fetched\0A\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !768
@.str.1.15 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.16 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.17 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.18 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.19 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.20 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.21 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.22 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.23 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.24 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !792
@.str.25 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.26 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.27 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.28 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.29 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.30 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.31 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.32 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.33 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.34 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.35 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.36 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.37 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.38 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !802
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !852
@.str.50 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.52 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.53 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.51 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.55 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.56 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.54 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.57 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.58 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.59 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.60 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.61 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.62 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.63 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.64 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.69 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.70 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.81 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.73 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.74 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.75 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.76 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.77 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.78 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.79 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.80 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.72 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.71 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.87, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !881
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !1012
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !887
@.str.93 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.94 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.95 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.96 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.102 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !1021
@.str.6.103 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.104 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.97 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.98 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1057
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.114, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !1067
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !1072
@.str.113 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.114 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !1092
@.str.1.119 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.120 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.121 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.122 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.123 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.124 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.125 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.126 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.135 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.136 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.127 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.128 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.129 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.17.130 = private unnamed_addr constant [63 x i8] c"\09could not deliver notification to observer %s. Error code %d\0A\00", align 1
@_zbus_runtime_obs_pool = internal global %struct.k_mem_slab { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @_zbus_runtime_obs_pool, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @_zbus_runtime_obs_pool, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 2, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_mem_slab_buf__zbus_runtime_obs_pool, i32 0, i32 0), i8* null, i32 0 }, section "._k_mem_slab.static._zbus_runtime_obs_pool", align 4, !dbg !1268
@_k_mem_slab_buf__zbus_runtime_obs_pool = internal global [16 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/zbus/zbus_runtime_observers.c\22.k_mem_slab_buf__zbus_runtime_obs_pool", align 4, !dbg !1439
@.str.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.141 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.2.142 = private unnamed_addr constant [49 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus_runtime_observers.c\00", align 1
@.str.3.143 = private unnamed_addr constant [14 x i8] c"\09ISR blocked\0A\00", align 1
@.str.4.144 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.5.145 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.6.146 = private unnamed_addr constant [19 x i8] c"obs != ((void *)0)\00", align 1
@.str.7.147 = private unnamed_addr constant [18 x i8] c"\09obs is required\0A\00", align 1
@.str.8.152 = private unnamed_addr constant [58 x i8] c"%c: Could not allocate memory on runtime observers pool\0A\0A\00", align 1
@.str.159 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.160 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.161 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !1451
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1652
@.str.4.157 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1614
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1597
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.157, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1570
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1586
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1616
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1629
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1631
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1633
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1635
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1637
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1639
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1641
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1643
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1645
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1647
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1657
@.str.162 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1690
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1788
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1777
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1829
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1677
@.str.171 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1895
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !2172
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2142
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2128
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2073
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1675
@.str.1.188 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !2174
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2146
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2144
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2087
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1673
@.str.2.189 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !2187
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2150
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2148
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2093
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1671
@.str.3.190 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !2189
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2154
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2152
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2102
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1669
@.str.4.191 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !2191
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2158
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2156
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2108
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1667
@.str.5.192 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !2193
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2162
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2160
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2114
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1665
@.str.6.193 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !2195
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2166
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2164
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2120
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1663
@.str.7.194 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !2197
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2170
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !2168
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !2126
@.str.8.172 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.187 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.174 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.177 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.173 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.175 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.176 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.198 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.198, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !2199
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1685
@.str.1.199 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !2379
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !2434
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2371
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2436
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.199, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2344
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2346
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1683
@.str.2.206 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !2442
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2373
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2452
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.206, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2355
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2357
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1681
@.str.3.207 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !2454
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2375
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2464
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.207, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2361
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2363
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1679
@.str.4.210 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !2466
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2377
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2476
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.210, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2367
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2369
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !2423
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !2426
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2428
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !2431
@.str.5.201 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.202 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.203 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.204 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.205 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.213 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.215 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.216 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.162, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1761
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !2444
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !2446
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2448
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !2450
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !2456
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !2458
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2460
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !2462
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !2468
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !2470
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2472
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !2474
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !2483
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2594
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2596
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2592
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2587
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2561
@.str.220 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.221 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.222 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.223 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.224 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.225 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2598
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2071
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.188, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2085
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.189, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2091
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.190, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2100
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.191, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2106
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.192, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2112
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.193, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2118
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.194, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !2124
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2688
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2732
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2735
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2740
@.str.257 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.261 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.262 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.263 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.264 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.265 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.266 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.267 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.271 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.272 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.273 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.274 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.275 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.270 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.269 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.271, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.272, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.273, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.274, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.275, i32 0, i32 0)], align 4
@.str.277 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.277, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2747
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2972
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2959
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2967
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2979
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2984
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.286 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@__init_init_mem_slab_module = internal constant %struct.init_entry { i32 (%struct.device*)* @init_mem_slab_module, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !3014
@_k_mem_slab_list_start = external dso_local global [0 x %struct.k_mem_slab], align 4
@_k_mem_slab_list_end = external dso_local global [0 x %struct.k_mem_slab], align 4
@.str.288 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.289 = private unnamed_addr constant [29 x i8] c"slab <= _k_mem_slab_list_end\00", align 1
@.str.2.290 = private unnamed_addr constant [30 x i8] c"ZEPHYR_BASE/kernel/mem_slab.c\00", align 1
@.str.3.291 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.4.294 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.295 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.296 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.297 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.298 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.309, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.310, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.311, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.312, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.306, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.313, i32 0, i32 0)], align 4, !dbg !3048
@.str.307 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.308 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.309 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.310 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.311 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.312 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.306 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.313 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !3162
@.str.8.305 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.316 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.317 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.318 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.319 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.323 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.324 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.327 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.328 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.338 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.339 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.340 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.345 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.346 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.347 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.348 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.349 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.350 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.351 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.352 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.353 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.360 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.361 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.362 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.363 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.364 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !3175
@.str.4.375 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.365 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.366 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.367 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.368 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.369 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !3285
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !3395
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !3398
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !3400
@.str.376 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.398 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.383 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.405 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.417 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.386 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.412 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.382 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.422 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.423 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.431 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.432 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.433 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.434 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.377 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.378 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.379 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.380 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.381 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.385 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.402 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.413 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.414 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2969
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2977
@.str.23.426 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.440 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.441 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.442 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.443 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !3402
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !3432
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !3437
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2834
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !3435
@.str.4.444 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.445 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.446 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.450 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.451 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !3443
@.str.474 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.483 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.476 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.484 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.475 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.477 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.480 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.481 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.482 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.485 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.486 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !4172 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !4174, !srcloc !4175
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !4176, !srcloc !4177
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !4178, !srcloc !4179
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !4180, !srcloc !4181
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !4182, !srcloc !4183
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !4184, !srcloc !4185
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !4186, !srcloc !4187
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !4188, !srcloc !4189
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !4190, !srcloc !4191
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !4192, !srcloc !4193
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !4194, !srcloc !4195
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !4196, !srcloc !4197
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !4198, !srcloc !4199
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !4200, !srcloc !4201
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !4202, !srcloc !4203
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !4204, !srcloc !4205
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !4206, !srcloc !4207
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !4208, !srcloc !4209
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !4210, !srcloc !4211
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !4212, !srcloc !4213
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !4214, !srcloc !4215
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !4216, !srcloc !4217
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !4218, !srcloc !4219
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !4220, !srcloc !4221
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !4222, !srcloc !4223
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !4224, !srcloc !4225
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !4226, !srcloc !4227
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !4228, !srcloc !4231
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !4232, !srcloc !4233
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !4234, !srcloc !4235
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !4236, !srcloc !4237
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !4238, !srcloc !4239
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !4240, !srcloc !4241
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !4242, !srcloc !4243
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !4244, !srcloc !4245
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !4246, !srcloc !4247
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !4248, !srcloc !4249
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !4250, !srcloc !4251
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !4252, !srcloc !4253
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !4254, !srcloc !4255
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !4256, !srcloc !4257
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !4258, !srcloc !4259
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !4260, !srcloc !4261
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !4262, !srcloc !4263
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !4264, !srcloc !4265
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !4266, !srcloc !4267
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !4268, !srcloc !4269
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !4270, !srcloc !4271
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !4272, !srcloc !4273
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !4274, !srcloc !4275
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !4276, !srcloc !4277
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !4278, !srcloc !4279
  ret void, !dbg !4280
}

; Function Attrs: noinline nounwind optsize
define internal void @consumer_subscriber_thread() #1 !dbg !4283 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct._thread_stack_info, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !4293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4293
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !4285, metadata !DIExpression(DW_OP_deref)), !dbg !4294
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.19*, %struct.zbus_channel.18**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4295
  %5 = icmp eq i32 %4, 0, !dbg !4296
  br i1 %5, label %6, label %19, !dbg !4297

6:                                                ; preds = %0
  %7 = bitcast %struct._thread_stack_info* %2 to i8*
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2
  br label %11, !dbg !4297

11:                                               ; preds = %6, %11
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #25, !dbg !4298
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !4286, metadata !DIExpression()), !dbg !4299
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !4300
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !4285, metadata !DIExpression()), !dbg !4294
  %13 = call i32 bitcast (i32 (%struct.zbus_channel.18*, i8*, [1 x i64])* @zbus_chan_read to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef %12, i8* noundef nonnull %7, [1 x i64] [i64 5000]) #26, !dbg !4301
  %14 = load i32, i32* %8, align 4, !dbg !4302
  %15 = load i32, i32* %9, align 4, !dbg !4302
  %16 = load i32, i32* %10, align 4, !dbg !4302
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i32 0, i32 0), i32 noundef 73, i32 noundef %14, i32 noundef %15, i32 noundef %16) #26, !dbg !4302
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #25, !dbg !4307
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !4285, metadata !DIExpression(DW_OP_deref)), !dbg !4294
  %17 = call i32 bitcast (i32 (%struct.zbus_observer.19*, %struct.zbus_channel.18**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4295
  %18 = icmp eq i32 %17, 0, !dbg !4296
  br i1 %18, label %11, label %19, !dbg !4297, !llvm.loop !4308

19:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !4309
  ret void, !dbg !4309
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define internal void @filter_callback(%struct.zbus_channel.18* noundef %0) #1 !dbg !4310 {
  %2 = alloca %struct._thread_stack_info, align 4
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !4312, metadata !DIExpression()), !dbg !4317
  %3 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.18* noundef %0) #27, !dbg !4318
  call void @llvm.dbg.value(metadata i8* %3, metadata !4313, metadata !DIExpression()), !dbg !4317
  %4 = bitcast %struct._thread_stack_info* %2 to i8*, !dbg !4319
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !4319
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %2, metadata !4316, metadata !DIExpression()), !dbg !4320
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %4, i8 0, i32 12, i1 false), !dbg !4320
  %5 = bitcast i8* %3 to i32*, !dbg !4321
  %6 = load i32, i32* %5, align 4, !dbg !4321
  %7 = and i32 %6, 1, !dbg !4323
  %8 = icmp eq i32 %7, 0, !dbg !4323
  br i1 %8, label %9, label %11, !dbg !4324

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !4325
  store i32 %6, i32* %10, align 4, !dbg !4327
  br label %11, !dbg !4328

11:                                               ; preds = %9, %1
  %12 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4329
  %13 = bitcast i8* %12 to i32*, !dbg !4329
  %14 = load i32, i32* %13, align 4, !dbg !4329
  %15 = and i32 %14, 1, !dbg !4331
  %16 = icmp eq i32 %15, 0, !dbg !4331
  br i1 %16, label %17, label %19, !dbg !4332

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !4333
  store i32 %14, i32* %18, align 4, !dbg !4335
  br label %19, !dbg !4336

19:                                               ; preds = %17, %11
  %20 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4337
  %21 = bitcast i8* %20 to i32*, !dbg !4337
  %22 = load i32, i32* %21, align 4, !dbg !4337
  %23 = and i32 %22, 1, !dbg !4339
  %24 = icmp eq i32 %23, 0, !dbg !4339
  br i1 %24, label %25, label %27, !dbg !4340

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !4341
  store i32 %22, i32* %26, align 4, !dbg !4343
  br label %27, !dbg !4344

27:                                               ; preds = %25, %19
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i32 noundef 73) #26, !dbg !4345
  %28 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @processed_data_chan, i8* noundef nonnull %4, [1 x i64] [i64 2000]) #26, !dbg !4350
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !4351
  ret void, !dbg !4351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.18* noundef readonly %0) unnamed_addr #1 !dbg !4352 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !4356, metadata !DIExpression()), !dbg !4357
  %2 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !4358
  br i1 %2, label %3, label %4, !dbg !4361

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !4362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0)) #26, !dbg !4362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !4362
  unreachable, !dbg !4362

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !4364
  %6 = load i8*, i8** %5, align 4, !dbg !4364
  ret i8* %6, !dbg !4365
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #5 !dbg !4366 {
  %1 = alloca %struct.zbus_channel.18*, align 4
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0), i32 noundef 73) #26, !dbg !4369
  %2 = bitcast %struct.zbus_channel.18** %1 to i8*, !dbg !4374
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #25, !dbg !4374
  br label %3, !dbg !4375

3:                                                ; preds = %3, %0
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.3, i32 0, i32 0), i32 noundef 73) #26, !dbg !4376
  %4 = call i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull @filter_lis, [1 x i64] [i64 2000]) #26, !dbg !4382
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %1, metadata !4368, metadata !DIExpression(DW_OP_deref)), !dbg !4383
  %5 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4384
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.4, i32 0, i32 0), i32 noundef 73) #26, !dbg !4385
  %6 = call i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull @filter_lis, [1 x i64] [i64 2000]) #26, !dbg !4390
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 noundef 73) #26, !dbg !4391
  %7 = call i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), [1 x i64] [i64 2000]) #26, !dbg !4396
  %8 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4397
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i32 0, i32 0), i32 noundef 73) #26, !dbg !4398
  %9 = call i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), [1 x i64] [i64 2000]) #26, !dbg !4403
  %10 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4404
  br label %3, !dbg !4375, !llvm.loop !4405
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @producer_thread() #5 !dbg !4407 {
  %1 = alloca %struct._thread_stack_info, align 4
  %2 = alloca i8, align 1
  %3 = bitcast %struct._thread_stack_info* %1 to i8*, !dbg !4415
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #25, !dbg !4415
  call void @llvm.dbg.declare(metadata %struct._thread_stack_info* %1, metadata !4409, metadata !DIExpression()), !dbg !4416
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %3, i8 0, i32 12, i1 false), !dbg !4416
  call void @llvm.dbg.value(metadata i32 0, metadata !4410, metadata !DIExpression()), !dbg !4417
  %4 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1
  %6 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2
  br label %7, !dbg !4418

7:                                                ; preds = %14, %0
  %8 = phi i32 [ 0, %0 ], [ %25, %14 ], !dbg !4417
  call void @llvm.dbg.value(metadata i32 %8, metadata !4410, metadata !DIExpression()), !dbg !4417
  %9 = icmp eq i32 %8, 5, !dbg !4419
  br i1 %9, label %10, label %14, !dbg !4420

10:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !4421
  call void @llvm.dbg.value(metadata i8 1, metadata !4411, metadata !DIExpression()), !dbg !4422
  store i8 1, i8* %2, align 1, !dbg !4423
  %11 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #27, !dbg !4424
  %12 = insertvalue [1 x i64] poison, i64 %11, 0, !dbg !4425
  call void @llvm.dbg.value(metadata i8* %2, metadata !4411, metadata !DIExpression(DW_OP_deref)), !dbg !4422
  %13 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @state_chan, i8* noundef nonnull %2, [1 x i64] %12) #26, !dbg !4425
  call void @llvm.dbg.value(metadata i32 0, metadata !4410, metadata !DIExpression()), !dbg !4417
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !4426
  br label %14, !dbg !4427

14:                                               ; preds = %7, %10
  %15 = phi i32 [ 0, %10 ], [ %8, %7 ], !dbg !4417
  call void @llvm.dbg.value(metadata i32 %15, metadata !4410, metadata !DIExpression()), !dbg !4417
  %16 = load i32, i32* %4, align 4, !dbg !4428
  %17 = add nsw i32 %16, 1, !dbg !4428
  store i32 %17, i32* %4, align 4, !dbg !4428
  %18 = load i32, i32* %5, align 4, !dbg !4429
  %19 = add nsw i32 %18, 1, !dbg !4429
  store i32 %19, i32* %5, align 4, !dbg !4429
  %20 = load i32, i32* %6, align 4, !dbg !4430
  %21 = add nsw i32 %20, 1, !dbg !4430
  store i32 %21, i32* %6, align 4, !dbg !4430
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.11, i32 0, i32 0), i32 noundef 73) #26, !dbg !4431
  %22 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #27, !dbg !4436
  %23 = insertvalue [1 x i64] poison, i64 %22, 0, !dbg !4437
  %24 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, i8* noundef nonnull %3, [1 x i64] %23) #26, !dbg !4437
  call fastcc void @k_msleep() #27, !dbg !4438
  %25 = add i32 %15, 1, !dbg !4439
  call void @llvm.dbg.value(metadata i32 %25, metadata !4410, metadata !DIExpression()), !dbg !4417
  br label %7, !dbg !4418, !llvm.loop !4440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !4442 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4447, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i64 %0, metadata !4449, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i32 1000, metadata !4454, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i32 10000, metadata !4455, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8 1, metadata !4456, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8 0, metadata !4457, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8 1, metadata !4458, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8 0, metadata !4459, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8 1, metadata !4460, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i8 0, metadata !4461, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i64 0, metadata !4462, metadata !DIExpression()), !dbg !4466
  call void @llvm.dbg.value(metadata i64 0, metadata !4462, metadata !DIExpression()), !dbg !4466
  %2 = mul i64 %0, 10, !dbg !4468
  ret i64 %2, !dbg !4474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !4475 {
  call void @llvm.dbg.value(metadata i32 500, metadata !4479, metadata !DIExpression()), !dbg !4480
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #27, !dbg !4481
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !4482
  tail call fastcc void @k_sleep([1 x i64] %2) #27, !dbg !4482
  ret void, !dbg !4483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !4484 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4493, metadata !DIExpression()), !dbg !4494
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4495, !srcloc !4497
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #26, !dbg !4498
  ret void, !dbg !4499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4500 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %0, metadata !4511, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %1, metadata !4512, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %2, metadata !4513, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %3, metadata !4514, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %0, metadata !4516, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %0, metadata !4517, metadata !DIExpression()), !dbg !4578
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4579
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4579
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4520, metadata !DIExpression()), !dbg !4580
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4581
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4581
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4522, metadata !DIExpression()), !dbg !4582
  call void @llvm.dbg.value(metadata i32 0, metadata !4523, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 0, metadata !4524, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 0, metadata !4525, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 -1, metadata !4526, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 0, metadata !4529, metadata !DIExpression()), !dbg !4578
  %12 = and i32 %2, 4, !dbg !4583
  %13 = icmp eq i32 %12, 0, !dbg !4584
  call void @llvm.dbg.value(metadata i1 %13, metadata !4530, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4578
  %14 = lshr i32 %2, 3, !dbg !4585
  %15 = and i32 %14, 7, !dbg !4585
  %16 = add nuw nsw i32 %15, 1, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %16, metadata !4531, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 0, metadata !4532, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %0, metadata !4533, metadata !DIExpression()), !dbg !4578
  %17 = ptrtoint i8* %0 to i32, !dbg !4587
  %18 = and i32 %17, 3, !dbg !4589
  %19 = icmp eq i32 %18, 0, !dbg !4589
  br i1 %19, label %20, label %320, !dbg !4590

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %21, metadata !4517, metadata !DIExpression()), !dbg !4578
  %22 = icmp eq i8* %0, null, !dbg !4592
  %23 = and i32 %1, 7, !dbg !4594
  %24 = sub nuw nsw i32 8, %23, !dbg !4594
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4594
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4594
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %27, metadata !4512, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %26, metadata !4517, metadata !DIExpression()), !dbg !4578
  br i1 %22, label %33, label %28, !dbg !4595

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4597
  %30 = sub i32 4, %17, !dbg !4597
  %31 = add i32 %30, %29, !dbg !4598
  %32 = icmp ugt i32 %31, %27, !dbg !4599
  br i1 %32, label %320, label %33, !dbg !4600

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4601
  call void @llvm.dbg.value(metadata i8* %34, metadata !4514, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %3, metadata !4528, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 4, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 4, metadata !4518, metadata !DIExpression()), !dbg !4578
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4602

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %42, metadata !4514, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %43, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %44, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %45, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %72, metadata !4526, metadata !DIExpression()), !dbg !4578
  br i1 %46, label %73, label %47, !dbg !4603

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4604
  %49 = zext i1 %48 to i32, !dbg !4608
  %50 = add nsw i32 %72, %49, !dbg !4608
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4608
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4608
  call void @llvm.dbg.value(metadata i32 %52, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %51, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %50, metadata !4526, metadata !DIExpression()), !dbg !4578
  br label %53, !dbg !4609

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %40, metadata !4514, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %58, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %57, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %56, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %54, metadata !4526, metadata !DIExpression()), !dbg !4578
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %60, metadata !4514, metadata !DIExpression()), !dbg !4578
  %61 = load i8, i8* %60, align 1, !dbg !4612
  %62 = icmp eq i8 %61, 0, !dbg !4613
  br i1 %62, label %226, label %63, !dbg !4614, !llvm.loop !4615

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4603

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4618

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4529, metadata !DIExpression()), !dbg !4578
  %75 = add nsw i32 %72, -1, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %75, metadata !4526, metadata !DIExpression()), !dbg !4578
  br label %53, !dbg !4620

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4621

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 4, metadata !4518, metadata !DIExpression()), !dbg !4578
  br label %53, !dbg !4622

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 4, metadata !4518, metadata !DIExpression()), !dbg !4578
  br label %53, !dbg !4623

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4624
  %81 = icmp eq i8 %80, 108, !dbg !4626
  br i1 %81, label %82, label %109, !dbg !4627

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4628
  %84 = load i8, i8* %83, align 1, !dbg !4628
  %85 = icmp eq i8 %84, 108, !dbg !4631
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4632
  %89 = add i32 %88, 7, !dbg !4632
  %90 = and i32 %89, -8, !dbg !4632
  %91 = inttoptr i32 %90 to i8*, !dbg !4632
  %92 = inttoptr i32 %90 to double*, !dbg !4632
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4632
  %94 = load double, double* %92, align 8, !dbg !4632
  call void @llvm.dbg.value(metadata i8* %93, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 8, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 8, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata double %94, metadata !4546, metadata !DIExpression()), !dbg !4634
  %95 = ptrtoint i8* %43 to i32, !dbg !4635
  %96 = add i32 %95, 7, !dbg !4635
  %97 = and i32 %96, -8, !dbg !4635
  %98 = inttoptr i32 %97 to i8*, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %98, metadata !4517, metadata !DIExpression()), !dbg !4578
  br i1 %22, label %104, label %99, !dbg !4637

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4638
  %101 = icmp ugt i32 %100, %196, !dbg !4642
  br i1 %101, label %320, label %102, !dbg !4643

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4644
  store double %94, double* %103, align 8, !dbg !4644
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %105, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4578
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4529, metadata !DIExpression()), !dbg !4578
  br label %53, !dbg !4648

107:                                              ; preds = %73, %73
  br label %109, !dbg !4649

108:                                              ; preds = %73
  br label %109, !dbg !4649

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4578
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4578
  call void @llvm.dbg.value(metadata i32 %113, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %112, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4532, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4578
  %114 = ptrtoint i8* %43 to i32, !dbg !4649
  %115 = add i32 %114, -1, !dbg !4649
  %116 = add i32 %115, %112, !dbg !4649
  %117 = sub i32 0, %112, !dbg !4649
  %118 = and i32 %116, %117, !dbg !4649
  %119 = inttoptr i32 %118 to i8*, !dbg !4650
  call void @llvm.dbg.value(metadata i8* %119, metadata !4517, metadata !DIExpression()), !dbg !4578
  br i1 %22, label %124, label %120, !dbg !4651

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4653
  %122 = add i32 %121, %118, !dbg !4654
  %123 = icmp ugt i32 %122, %196, !dbg !4655
  br i1 %123, label %320, label %124, !dbg !4656

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4657

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4650
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4658
  call void @llvm.dbg.value(metadata i8* %127, metadata !4515, metadata !DIExpression()), !dbg !4578
  %128 = bitcast i8* %41 to i8**, !dbg !4658
  %129 = load i8*, i8** %128, align 4, !dbg !4658
  call void @llvm.dbg.value(metadata i8* %129, metadata !4528, metadata !DIExpression()), !dbg !4578
  br label %130, !dbg !4659

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4578
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4660
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4578
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4661
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4578
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4578
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4578
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4578
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4578
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4578
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4662
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %142, metadata !4512, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %141, metadata !4514, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %140, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %139, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %138, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %137, metadata !4523, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %136, metadata !4531, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %135, metadata !4524, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %133, metadata !4528, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %132, metadata !4526, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %131, metadata !4525, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.label(metadata !4577), !dbg !4664
  br i1 %22, label %146, label %144, !dbg !4665

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4666
  store i8* %133, i8** %145, align 4, !dbg !4669
  br label %146, !dbg !4670

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4671
  call void @llvm.dbg.value(metadata i32 %147, metadata !4531, metadata !DIExpression()), !dbg !4578
  %148 = icmp sgt i32 %136, 0, !dbg !4672
  br i1 %148, label %152, label %149, !dbg !4673

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !4674
  %151 = zext i1 %150 to i32, !dbg !4674
  br label %152, !dbg !4673

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4673
  %154 = icmp eq i32 %153, 0, !dbg !4673
  call void @llvm.dbg.value(metadata i1 %154, metadata !4555, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  call void @llvm.dbg.value(metadata i1 %36, metadata !4558, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4675
  %155 = or i1 %36, %154, !dbg !4676
  br i1 %155, label %156, label %192, !dbg !4676

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4677
  %158 = sub i32 %157, %17, !dbg !4677
  %159 = lshr i32 %158, 2, !dbg !4678
  call void @llvm.dbg.value(metadata i32 %159, metadata !4559, metadata !DIExpression()), !dbg !4679
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4680
  br i1 %161, label %162, label %163, !dbg !4680

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 635) #26, !dbg !4682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.18, i32 0, i32 0)) #26, !dbg !4682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 635) #26, !dbg !4682
  unreachable, !dbg !4682

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4687
  br i1 %164, label %165, label %166, !dbg !4689

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 640) #26, !dbg !4690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.19, i32 0, i32 0)) #26, !dbg !4690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 640) #26, !dbg !4690
  unreachable, !dbg !4690

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4695

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4696
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4699
  store i8 %168, i8* %169, align 1, !dbg !4700
  %170 = trunc i32 %132 to i8, !dbg !4701
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4702
  store i8 %170, i8* %171, align 1, !dbg !4703
  br i1 %154, label %175, label %172, !dbg !4704

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4705
  store i8 %173, i8* %169, align 1, !dbg !4705
  %174 = add i32 %131, 1, !dbg !4708
  call void @llvm.dbg.value(metadata i32 %174, metadata !4525, metadata !DIExpression()), !dbg !4578
  br label %187, !dbg !4709

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %176, metadata !4524, metadata !DIExpression()), !dbg !4578
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4712

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %179, metadata !4512, metadata !DIExpression()), !dbg !4578
  br label %187, !dbg !4716

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4717

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %182, metadata !4512, metadata !DIExpression()), !dbg !4578
  br label %187, !dbg !4721

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #26, !dbg !4722
  %185 = add i32 %142, 2, !dbg !4724
  %186 = add i32 %185, %184, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %186, metadata !4512, metadata !DIExpression()), !dbg !4578
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4578
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4578
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4578
  call void @llvm.dbg.value(metadata i32 %190, metadata !4512, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %189, metadata !4524, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %188, metadata !4525, metadata !DIExpression()), !dbg !4578
  %191 = add nuw nsw i32 %137, 1, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %191, metadata !4523, metadata !DIExpression()), !dbg !4578
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4578
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4661
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4578
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4662
  call void @llvm.dbg.value(metadata i32 %196, metadata !4512, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %195, metadata !4523, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %194, metadata !4524, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %193, metadata !4525, metadata !DIExpression()), !dbg !4578
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %197, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %143, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %141, metadata !4514, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %139, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %138, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4532, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %132, metadata !4526, metadata !DIExpression()), !dbg !4578
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %198, metadata !4514, metadata !DIExpression()), !dbg !4578
  %199 = load i8, i8* %198, align 1, !dbg !4612
  %200 = icmp eq i8 %199, 0, !dbg !4613
  br i1 %200, label %226, label %63, !dbg !4614

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4728

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %203, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 undef, metadata !4562, metadata !DIExpression()), !dbg !4730
  br i1 %22, label %219, label %204, !dbg !4731

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4729
  %206 = load i32, i32* %205, align 4, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %206, metadata !4562, metadata !DIExpression()), !dbg !4730
  %207 = inttoptr i32 %118 to i32*, !dbg !4732
  store i32 %206, i32* %207, align 4, !dbg !4735
  br label %219, !dbg !4736

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4737
  %210 = add i32 %209, 7, !dbg !4737
  %211 = and i32 %210, -8, !dbg !4737
  %212 = inttoptr i32 %211 to i8*, !dbg !4737
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4737
  call void @llvm.dbg.value(metadata i8* %213, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i64 undef, metadata !4568, metadata !DIExpression()), !dbg !4738
  br i1 %22, label %219, label %214, !dbg !4739

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4737
  %216 = load i64, i64* %215, align 8, !dbg !4737
  call void @llvm.dbg.value(metadata i64 %216, metadata !4568, metadata !DIExpression()), !dbg !4738
  %217 = inttoptr i32 %118 to i64*, !dbg !4740
  store i64 %216, i64* %217, align 8, !dbg !4745
  br label %219, !dbg !4746

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 709) #26, !dbg !4747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.20, i32 0, i32 0), i32 noundef %113) #26, !dbg !4747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 709) #26, !dbg !4747
  unreachable, !dbg !4747

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4752
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %221, metadata !4515, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %40, metadata !4514, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %222, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %113, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %112, metadata !4519, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4532, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8 poison, metadata !4529, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %72, metadata !4526, metadata !DIExpression()), !dbg !4578
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %223, metadata !4514, metadata !DIExpression()), !dbg !4578
  %224 = load i8, i8* %223, align 1, !dbg !4612
  %225 = icmp eq i8 %224, 0, !dbg !4613
  br i1 %225, label %226, label %38, !dbg !4614

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4753
  %228 = ptrtoint i8* %227 to i32, !dbg !4754
  %229 = sub i32 %228, %17, !dbg !4754
  %230 = lshr i32 %229, 2, !dbg !4756
  %231 = icmp ugt i32 %229, 1023, !dbg !4757
  br i1 %231, label %232, label %233, !dbg !4758

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 721) #26, !dbg !4759
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.21, i32 0, i32 0)) #26, !dbg !4759
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 721) #26, !dbg !4759
  unreachable, !dbg !4759

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4764

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4765
  %236 = add i32 %235, %229, !dbg !4768
  br label %320, !dbg !4769

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4770
  store i8 %238, i8* %0, align 1, !dbg !4771
  %239 = trunc i32 %194 to i8, !dbg !4772
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4774
  store i8 %240, i8* %242, align 1, !dbg !4776
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4777
  store i8 %241, i8* %243, align 1, !dbg !4778
  %244 = trunc i32 %193 to i8, !dbg !4779
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4780
  store i8 %244, i8* %245, align 1, !dbg !4781
  %246 = icmp eq i32 %193, 0, !dbg !4782
  %247 = xor i1 %246, true, !dbg !4783
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %227, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 0, metadata !4527, metadata !DIExpression()), !dbg !4578
  br i1 %249, label %250, label %269, !dbg !4783

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4784

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %254, metadata !4527, metadata !DIExpression()), !dbg !4578
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4785
  %256 = load i8, i8* %255, align 1, !dbg !4785
  %257 = icmp sgt i8 %256, -1, !dbg !4787
  br i1 %257, label %265, label %258, !dbg !4788

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4571, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4789
  %259 = ptrtoint i8* %253 to i32, !dbg !4790
  %260 = add i32 %251, %259, !dbg !4792
  %261 = icmp ugt i32 %260, %196, !dbg !4793
  br i1 %261, label %320, label %262, !dbg !4794

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4795
  call void @llvm.dbg.value(metadata i8 %263, metadata !4571, metadata !DIExpression()), !dbg !4789
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %264, metadata !4517, metadata !DIExpression()), !dbg !4578
  store i8 %263, i8* %253, align 1, !dbg !4797
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4727
  call void @llvm.dbg.value(metadata i8* %266, metadata !4517, metadata !DIExpression()), !dbg !4578
  %267 = add nuw i32 %254, 1, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %267, metadata !4527, metadata !DIExpression()), !dbg !4578
  %268 = icmp eq i32 %267, %195, !dbg !4799
  br i1 %268, label %269, label %252, !dbg !4784, !llvm.loop !4800

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4727
  call void @llvm.dbg.value(metadata i8* %270, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 0, metadata !4527, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %133, metadata !4528, metadata !DIExpression()), !dbg !4578
  %271 = icmp eq i32 %195, 0, !dbg !4802
  br i1 %271, label %316, label %272, !dbg !4805

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4805

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %276, metadata !4528, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %277, metadata !4527, metadata !DIExpression()), !dbg !4578
  br i1 %246, label %282, label %278, !dbg !4806

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4809
  %280 = load i8, i8* %279, align 1, !dbg !4809
  %281 = icmp sgt i8 %280, -1, !dbg !4810
  br i1 %281, label %282, label %311, !dbg !4811

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4812

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4518, metadata !DIExpression()), !dbg !4578
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4813
  %285 = load i8, i8* %284, align 1, !dbg !4813
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4816
  call void @llvm.dbg.value(metadata i8* %286, metadata !4517, metadata !DIExpression()), !dbg !4578
  store i8 %285, i8* %275, align 1, !dbg !4817
  br label %297, !dbg !4818

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4819
  %289 = load i8, i8* %288, align 1, !dbg !4819
  %290 = zext i8 %289 to i32, !dbg !4819
  %291 = shl nuw nsw i32 %290, 2, !dbg !4821
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4822
  %293 = bitcast i8* %292 to i8**, !dbg !4823
  %294 = load i8*, i8** %293, align 4, !dbg !4823
  call void @llvm.dbg.value(metadata i8* %294, metadata !4528, metadata !DIExpression()), !dbg !4578
  store i8* null, i8** %293, align 4, !dbg !4824
  %295 = tail call i32 @strlen(i8* noundef %294) #26, !dbg !4825
  %296 = add i32 %295, 1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %296, metadata !4518, metadata !DIExpression()), !dbg !4578
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4578
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4827
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4578
  call void @llvm.dbg.value(metadata i8* %300, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %299, metadata !4518, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %298, metadata !4528, metadata !DIExpression()), !dbg !4578
  %301 = ptrtoint i8* %300 to i32, !dbg !4828
  %302 = add i32 %273, %299, !dbg !4830
  %303 = add i32 %302, %301, !dbg !4831
  %304 = icmp ugt i32 %303, %196, !dbg !4832
  br i1 %304, label %320, label %305, !dbg !4833

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4834
  %307 = load i8, i8* %306, align 1, !dbg !4834
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %308, metadata !4517, metadata !DIExpression()), !dbg !4578
  store i8 %307, i8* %300, align 1, !dbg !4836
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #26, !dbg !4837
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %310, metadata !4517, metadata !DIExpression()), !dbg !4578
  br label %311, !dbg !4839

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4840
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4578
  call void @llvm.dbg.value(metadata i8* %313, metadata !4517, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i8* %312, metadata !4528, metadata !DIExpression()), !dbg !4578
  %314 = add nuw i32 %277, 1, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %314, metadata !4527, metadata !DIExpression()), !dbg !4578
  %315 = icmp eq i32 %314, %195, !dbg !4802
  br i1 %315, label %316, label %274, !dbg !4805, !llvm.loop !4842

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4727
  %318 = ptrtoint i8* %317 to i32, !dbg !4844
  %319 = sub i32 %318, %17, !dbg !4844
  br label %320, !dbg !4845

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4846
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4846
  ret i32 %321, !dbg !4846
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4847 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4851, metadata !DIExpression()), !dbg !4852
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4853
  ret i1 %2, !dbg !4854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4860, metadata !DIExpression()), !dbg !4861
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4862
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4863
  %4 = and i1 %2, %3, !dbg !4863
  ret i1 %4, !dbg !4864
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4865 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4869, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.value(metadata i32 %1, metadata !4870, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.value(metadata i32 %2, metadata !4871, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.value(metadata i8* %3, metadata !4872, metadata !DIExpression()), !dbg !4875
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4876
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4876
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4873, metadata !DIExpression()), !dbg !4877
  call void @llvm.va_start(i8* nonnull %6), !dbg !4878
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4879
  %8 = load i32, i32* %7, align 4, !dbg !4879
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4879
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %10, metadata !4874, metadata !DIExpression()), !dbg !4875
  call void @llvm.va_end(i8* nonnull %6), !dbg !4880
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4881
  ret i32 %10, !dbg !4882
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4883 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4895, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4896, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* %2, metadata !4897, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* %3, metadata !4898, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* %3, metadata !4899, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8* %3, metadata !4900, metadata !DIExpression()), !dbg !4914
  %5 = icmp eq i8* %3, null, !dbg !4915
  br i1 %5, label %45, label %6, !dbg !4917

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4909, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4914
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4918
  %8 = load i8, i8* %7, align 1, !dbg !4918
  %9 = zext i8 %8 to i32, !dbg !4919
  call void @llvm.dbg.value(metadata i32 %9, metadata !4910, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i8 undef, metadata !4911, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4914
  call void @llvm.dbg.value(metadata i8 undef, metadata !4912, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  call void @llvm.dbg.value(metadata i32 0, metadata !4908, metadata !DIExpression()), !dbg !4914
  %10 = icmp eq i8 %8, 0, !dbg !4920
  br i1 %10, label %39, label %11, !dbg !4923

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4924
  call void @llvm.dbg.value(metadata i8 %12, metadata !4909, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %13 = zext i8 %12 to i32, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %13, metadata !4909, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %14 = shl nuw nsw i32 %13, 2, !dbg !4926
  call void @llvm.dbg.value(metadata i32 %14, metadata !4909, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4927
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4928
  %17 = load i8, i8* %16, align 1, !dbg !4928
  call void @llvm.dbg.value(metadata i8 %17, metadata !4911, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %18 = zext i8 %17 to i32, !dbg !4929
  call void @llvm.dbg.value(metadata i32 %18, metadata !4911, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4930
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4931
  %21 = load i8, i8* %20, align 1, !dbg !4931
  call void @llvm.dbg.value(metadata i8 %21, metadata !4912, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %22 = zext i8 %21 to i32, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %22, metadata !4912, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %23 = shl nuw nsw i32 %22, 1, !dbg !4933
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4906, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4914
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4934
  call void @llvm.dbg.value(metadata i8* %24, metadata !4906, metadata !DIExpression()), !dbg !4914
  br label %25, !dbg !4923

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4906, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i32 %27, metadata !4908, metadata !DIExpression()), !dbg !4914
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4935
  call void @llvm.dbg.value(metadata i8* %28, metadata !4906, metadata !DIExpression()), !dbg !4914
  %29 = load i8, i8* %26, align 1, !dbg !4937
  %30 = zext i8 %29 to i32, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %30, metadata !4913, metadata !DIExpression()), !dbg !4914
  %31 = shl nuw nsw i32 %30, 2, !dbg !4938
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4939
  %33 = bitcast i8* %32 to i8**, !dbg !4940
  call void @llvm.dbg.value(metadata i8** %33, metadata !4907, metadata !DIExpression()), !dbg !4914
  store i8* %28, i8** %33, align 4, !dbg !4941
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #26, !dbg !4942
  %35 = add i32 %34, 1, !dbg !4943
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4944
  call void @llvm.dbg.value(metadata i8* %36, metadata !4906, metadata !DIExpression()), !dbg !4914
  %37 = add nuw nsw i32 %27, 1, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %37, metadata !4908, metadata !DIExpression()), !dbg !4914
  %38 = icmp eq i32 %37, %9, !dbg !4920
  br i1 %38, label %39, label %25, !dbg !4923, !llvm.loop !4946

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %40, metadata !4899, metadata !DIExpression()), !dbg !4914
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4949
  %42 = bitcast i8* %41 to i8**, !dbg !4949
  %43 = load i8*, i8** %42, align 1, !dbg !4949
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4950
  br label %45, !dbg !4951

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4914
  ret i32 %46, !dbg !4952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4953 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4957, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4958, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i8* %2, metadata !4959, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i8* %3, metadata !4960, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i8* %4, metadata !4961, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i8* %4, metadata !4962, metadata !DIExpression()), !dbg !4967
  %6 = ptrtoint i8* %4 to i32, !dbg !4968
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4968
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #26, !dbg !4968
  ret i32 %8, !dbg !4969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4974, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i32 %1, metadata !4975, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8 0, metadata !4977, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i32 0, metadata !4978, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8 poison, metadata !4977, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8* %0, metadata !4974, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4979
  %3 = load i8, i8* %0, align 1, !dbg !4980
  call void @llvm.dbg.value(metadata i8 %3, metadata !4976, metadata !DIExpression()), !dbg !4979
  %4 = icmp eq i8 %3, 0, !dbg !4981
  br i1 %4, label %29, label %5, !dbg !4982

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %8, metadata !4978, metadata !DIExpression()), !dbg !4979
  br i1 %9, label %11, label %22, !dbg !4984

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4986
  br i1 %12, label %13, label %17, !dbg !4990

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4991
  br i1 %14, label %29, label %15, !dbg !4994

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4995
  br i1 %16, label %29, label %22, !dbg !4997

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4998
  %19 = xor i1 %18, true, !dbg !5000
  %20 = zext i1 %18 to i32, !dbg !5000
  %21 = add nsw i32 %8, %20, !dbg !5000
  br label %22, !dbg !5000

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4979
  call void @llvm.dbg.value(metadata i32 %24, metadata !4978, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8 poison, metadata !4977, metadata !DIExpression()), !dbg !4979
  %25 = icmp eq i8 %6, 37, !dbg !5001
  %26 = xor i1 %25, %23, !dbg !5003
  call void @llvm.dbg.value(metadata i8* %10, metadata !4974, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i8* %10, metadata !4974, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4979
  %27 = load i8, i8* %10, align 1, !dbg !4980
  call void @llvm.dbg.value(metadata i8 %27, metadata !4976, metadata !DIExpression()), !dbg !4979
  %28 = icmp eq i8 %27, 0, !dbg !4981
  br i1 %28, label %29, label %5, !dbg !4982, !llvm.loop !5004

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4979
  ret i1 %30, !dbg !5006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !5007 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5011, metadata !DIExpression()), !dbg !5012
  %2 = add i8 %0, -64, !dbg !5013
  %3 = icmp ult i8 %2, 59, !dbg !5013
  ret i1 %3, !dbg !5014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !5015 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5023, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %1, metadata !5024, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !5025, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %3, metadata !5026, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %4, metadata !5027, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i16* %5, metadata !5028, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %6, metadata !5029, metadata !DIExpression()), !dbg !5092
  %11 = icmp eq i8* %0, null, !dbg !5093
  br i1 %11, label %12, label %13, !dbg !5096

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 916) #26, !dbg !5097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 916) #26, !dbg !5097
  unreachable, !dbg !5097

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !5030, metadata !DIExpression()), !dbg !5092
  %14 = bitcast i8* %0 to i32*, !dbg !5099
  call void @llvm.dbg.value(metadata i32* %14, metadata !5031, metadata !DIExpression()), !dbg !5092
  %15 = and i32 %4, 8, !dbg !5100
  %16 = icmp eq i32 %15, 0, !dbg !5101
  call void @llvm.dbg.value(metadata i1 %16, metadata !5035, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %0, metadata !5038, metadata !DIExpression()), !dbg !5092
  %17 = icmp eq i32 %1, 0, !dbg !5102
  br i1 %17, label %18, label %20, !dbg !5103

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #27, !dbg !5104
  br label %20, !dbg !5103

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !5103
  call void @llvm.dbg.value(metadata i32 %21, metadata !5024, metadata !DIExpression()), !dbg !5092
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5105
  %23 = load i8, i8* %22, align 1, !dbg !5105
  %24 = zext i8 %23 to i32, !dbg !5106
  call void @llvm.dbg.value(metadata i32 %24, metadata !5033, metadata !DIExpression()), !dbg !5092
  %25 = icmp ne i8 %23, 0, !dbg !5107
  %26 = and i32 %4, 1, !dbg !5108
  %27 = icmp ne i32 %26, 0, !dbg !5108
  %28 = and i1 %27, %25, !dbg !5108
  call void @llvm.dbg.value(metadata i1 %28, metadata !5037, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5092
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !5109
  %30 = load i8, i8* %29, align 1, !dbg !5109
  %31 = zext i8 %30 to i32, !dbg !5110
  call void @llvm.dbg.value(metadata i32 %31, metadata !5034, metadata !DIExpression()), !dbg !5092
  %32 = icmp ne i8 %30, 0, !dbg !5111
  %33 = and i32 %4, 2, !dbg !5112
  %34 = icmp ne i32 %33, 0, !dbg !5112
  %35 = and i1 %34, %32, !dbg !5112
  call void @llvm.dbg.value(metadata i1 %35, metadata !5036, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5092
  %36 = select i1 %35, i1 true, i1 %28, !dbg !5113
  br i1 %36, label %41, label %37, !dbg !5113

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !5115
  br i1 %38, label %287, label %39, !dbg !5118

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #26, !dbg !5119
  br label %287, !dbg !5121

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !5122
  %43 = zext i8 %42 to i32, !dbg !5123
  %44 = shl nuw nsw i32 %43, 2, !dbg !5124
  call void @llvm.dbg.value(metadata i32 %44, metadata !5032, metadata !DIExpression()), !dbg !5092
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !5125
  %46 = bitcast i8* %45 to i8**, !dbg !5126
  %47 = load i8*, i8** %46, align 4, !dbg !5126
  call void @llvm.dbg.value(metadata i8* %47, metadata !5041, metadata !DIExpression()), !dbg !5092
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !5127
  call void @llvm.dbg.value(metadata i8* %48, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 0, metadata !5043, metadata !DIExpression()), !dbg !5092
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !5128
  br i1 %49, label %50, label %135, !dbg !5129

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !5040, metadata !DIExpression()), !dbg !5092
  br i1 %28, label %51, label %76, !dbg !5130

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %48, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 0, metadata !5043, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 0, metadata !5044, metadata !DIExpression()), !dbg !5131
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !5132

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %55, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %56, metadata !5043, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %57, metadata !5044, metadata !DIExpression()), !dbg !5131
  %58 = load i8, i8* %55, align 1, !dbg !5133
  %59 = zext i8 %58 to i32, !dbg !5134
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !5134
  %61 = bitcast i32* %60 to i8**, !dbg !5135
  %62 = load i8*, i8** %61, align 4, !dbg !5135
  call void @llvm.dbg.value(metadata i8* %62, metadata !5050, metadata !DIExpression()), !dbg !5136
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #27, !dbg !5137
  call void @llvm.dbg.value(metadata i32 %63, metadata !5053, metadata !DIExpression()), !dbg !5136
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !5138
  br i1 %65, label %66, label %70, !dbg !5138

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !5140
  %68 = add nuw i32 %56, 1, !dbg !5142
  call void @llvm.dbg.value(metadata i32 %68, metadata !5043, metadata !DIExpression()), !dbg !5092
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !5143
  store i16 %67, i16* %69, align 2, !dbg !5144
  br label %70, !dbg !5145

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !5092
  call void @llvm.dbg.value(metadata i32 %71, metadata !5043, metadata !DIExpression()), !dbg !5092
  %72 = add nsw i32 %63, %54, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %72, metadata !5040, metadata !DIExpression()), !dbg !5092
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !5147
  call void @llvm.dbg.value(metadata i8* %73, metadata !5042, metadata !DIExpression()), !dbg !5092
  %74 = add nuw nsw i32 %57, 1, !dbg !5148
  call void @llvm.dbg.value(metadata i32 %74, metadata !5044, metadata !DIExpression()), !dbg !5131
  %75 = icmp eq i32 %74, %24, !dbg !5149
  br i1 %75, label %82, label %53, !dbg !5132, !llvm.loop !5150

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !5152
  %80 = select i1 %79, i32 %24, i32 0, !dbg !5152
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !5152
  br label %82, !dbg !5152

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !5155
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !5092
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !5156
  call void @llvm.dbg.value(metadata i1 undef, metadata !5054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5157
  call void @llvm.dbg.value(metadata i32 0, metadata !5055, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.value(metadata i32 %85, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %84, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %83, metadata !5043, metadata !DIExpression()), !dbg !5092
  %86 = icmp eq i8 %30, 0, !dbg !5159
  br i1 %86, label %287, label %87, !dbg !5160

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !5161
  %89 = icmp eq i32 %88, 0, !dbg !5162
  call void @llvm.dbg.value(metadata i1 %89, metadata !5054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5157
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !5160

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %96, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %97, metadata !5043, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %98, metadata !5055, metadata !DIExpression()), !dbg !5158
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !5163
  call void @llvm.dbg.value(metadata i8* %99, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 undef, metadata !5057, metadata !DIExpression()), !dbg !5164
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %100, metadata !5042, metadata !DIExpression()), !dbg !5092
  %101 = load i8, i8* %99, align 1, !dbg !5166
  call void @llvm.dbg.value(metadata i8 %101, metadata !5060, metadata !DIExpression()), !dbg !5164
  %102 = zext i8 %101 to i32, !dbg !5167
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !5167
  %104 = bitcast i32* %103 to i8**, !dbg !5168
  %105 = load i8*, i8** %104, align 4, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %105, metadata !5061, metadata !DIExpression()), !dbg !5164
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #27, !dbg !5169
  call void @llvm.dbg.value(metadata i1 %106, metadata !5062, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5164
  br i1 %16, label %113, label %107, !dbg !5170

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !5172
  call void @llvm.dbg.value(metadata i8 %108, metadata !5057, metadata !DIExpression()), !dbg !5164
  %109 = zext i8 %108 to i32, !dbg !5173
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #27, !dbg !5174
  br i1 %110, label %111, label %113, !dbg !5175

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.23, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #26, !dbg !5176
  %112 = add nsw i32 %95, -2, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %112, metadata !5040, metadata !DIExpression()), !dbg !5092
  br label %130, !dbg !5183

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !5184

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !5185

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %116, metadata !5040, metadata !DIExpression()), !dbg !5092
  br label %130, !dbg !5190

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !5191

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !5088), !dbg !5192
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #27, !dbg !5193
  call void @llvm.dbg.value(metadata i32 %119, metadata !5063, metadata !DIExpression()), !dbg !5164
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !5194
  br i1 %121, label %122, label %126, !dbg !5194

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !5196
  %124 = add nuw i32 %97, 1, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %124, metadata !5043, metadata !DIExpression()), !dbg !5092
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !5199
  store i16 %123, i16* %125, align 2, !dbg !5200
  br label %126, !dbg !5201

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !5092
  call void @llvm.dbg.value(metadata i32 %127, metadata !5043, metadata !DIExpression()), !dbg !5092
  %128 = add i32 %95, -1, !dbg !5202
  %129 = add i32 %128, %119, !dbg !5203
  call void @llvm.dbg.value(metadata i32 %129, metadata !5040, metadata !DIExpression()), !dbg !5092
  br label %130, !dbg !5204

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !5092
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !5164
  call void @llvm.dbg.value(metadata i32 %132, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %131, metadata !5043, metadata !DIExpression()), !dbg !5092
  %133 = add nuw nsw i32 %98, 1, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %100, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %133, metadata !5055, metadata !DIExpression()), !dbg !5158
  %134 = icmp eq i32 %133, %31, !dbg !5159
  br i1 %134, label %287, label %94, !dbg !5160, !llvm.loop !5206

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !5065, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !5066, metadata !DIExpression()), !dbg !5209
  br i1 %28, label %136, label %138, !dbg !5210

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !5067, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 0, metadata !5068, metadata !DIExpression()), !dbg !5092
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !5211
  call void @llvm.dbg.value(metadata i8* %137, metadata !5069, metadata !DIExpression()), !dbg !5092
  br label %143, !dbg !5214

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !5215
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !5215

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !5069, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 undef, metadata !5068, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 0, metadata !5067, metadata !DIExpression()), !dbg !5092
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #26, !dbg !5217
  br label %148, !dbg !5220

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !5221
  call void @llvm.dbg.value(metadata i8* %151, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 0, metadata !5071, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i8 %149, metadata !5068, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 %150, metadata !5067, metadata !DIExpression()), !dbg !5092
  %152 = icmp eq i8 %30, 0, !dbg !5223
  br i1 %152, label %153, label %155, !dbg !5224

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !5225
  br label %160, !dbg !5224

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !5224

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !5225
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !5226
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !5227
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !5092
  call void @llvm.dbg.value(metadata i8 undef, metadata !5064, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !5092
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5228
  %166 = load i8, i8* %165, align 1, !dbg !5228
  %167 = zext i8 %162 to i32, !dbg !5229
  %168 = add i8 %166, %162, !dbg !5230
  call void @llvm.dbg.value(metadata i8 %168, metadata !5064, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !5092
  %169 = icmp eq i32 %33, 0, !dbg !5231
  %170 = lshr i8 %163, 1, !dbg !5232
  %171 = select i1 %169, i8 %170, i8 0, !dbg !5232
  call void @llvm.dbg.value(metadata i8 %171, metadata !5064, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !5092
  %172 = icmp eq i32 %26, 0, !dbg !5233
  %173 = icmp eq i32 %161, 0, !dbg !5225
  %174 = select i1 %173, i8 0, i8 %163, !dbg !5225
  %175 = select i1 %172, i8 %174, i8 0, !dbg !5225
  call void @llvm.dbg.value(metadata i8 %175, metadata !5064, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !5092
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !5079, metadata !DIExpression()), !dbg !5234
  %176 = load i32, i32* %14, align 1, !dbg !5235
  store i8 %168, i8* %165, align 1, !dbg !5236
  store i8 %175, i8* %22, align 1, !dbg !5236
  store i8 %171, i8* %29, align 1, !dbg !5236
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #26, !dbg !5237
  call void @llvm.dbg.value(metadata i32 %177, metadata !5070, metadata !DIExpression()), !dbg !5092
  %178 = icmp slt i32 %177, 0, !dbg !5238
  br i1 %178, label %287, label %240, !dbg !5240

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %181, metadata !5071, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i8 %182, metadata !5068, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 %183, metadata !5067, metadata !DIExpression()), !dbg !5092
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !5241
  call void @llvm.dbg.value(metadata i8* %184, metadata !5042, metadata !DIExpression()), !dbg !5092
  %185 = load i8, i8* %180, align 1, !dbg !5242
  call void @llvm.dbg.value(metadata i8 %185, metadata !5073, metadata !DIExpression()), !dbg !5243
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !5244
  call void @llvm.dbg.value(metadata i8* %186, metadata !5042, metadata !DIExpression()), !dbg !5092
  %187 = load i8, i8* %184, align 1, !dbg !5245
  call void @llvm.dbg.value(metadata i8 %187, metadata !5076, metadata !DIExpression()), !dbg !5243
  %188 = zext i8 %187 to i32, !dbg !5246
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !5246
  %190 = bitcast i32* %189 to i8**, !dbg !5247
  %191 = load i8*, i8** %190, align 4, !dbg !5247
  call void @llvm.dbg.value(metadata i8* %191, metadata !5077, metadata !DIExpression()), !dbg !5243
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #27, !dbg !5248
  call void @llvm.dbg.value(metadata i1 %192, metadata !5078, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5243
  br i1 %16, label %196, label %193, !dbg !5249

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !5251
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #27, !dbg !5252
  br i1 %195, label %235, label %196, !dbg !5253

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !5254

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !5255

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !5258
  br i1 %199, label %201, label %200, !dbg !5263

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1086) #26, !dbg !5264
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1086) #26, !dbg !5264
  unreachable, !dbg !5264

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !5258
  %203 = add nuw nsw i8 %183, 1, !dbg !5266
  call void @llvm.dbg.value(metadata i8 %203, metadata !5067, metadata !DIExpression()), !dbg !5092
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !5267
  br label %231, !dbg !5268

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !5269

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !5270
  br i1 %207, label %209, label %208, !dbg !5275

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1089) #26, !dbg !5276
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1089) #26, !dbg !5276
  unreachable, !dbg !5276

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !5270
  %211 = add nuw nsw i8 %182, 1, !dbg !5278
  call void @llvm.dbg.value(metadata i8 %211, metadata !5068, metadata !DIExpression()), !dbg !5092
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !5279
  br label %231, !dbg !5280

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !5281

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !5283
  br i1 %215, label %217, label %216, !dbg !5288

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1096) #26, !dbg !5289
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1096) #26, !dbg !5289
  unreachable, !dbg !5289

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !5283
  %219 = add nuw nsw i8 %183, 1, !dbg !5291
  call void @llvm.dbg.value(metadata i8 %219, metadata !5067, metadata !DIExpression()), !dbg !5092
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !5292
  br label %231, !dbg !5293

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !5294
  br i1 %222, label %224, label %223, !dbg !5298

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1099) #26, !dbg !5299
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1099) #26, !dbg !5299
  unreachable, !dbg !5299

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !5294
  %226 = add nuw nsw i8 %182, 1, !dbg !5301
  call void @llvm.dbg.value(metadata i8 %226, metadata !5068, metadata !DIExpression()), !dbg !5092
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !5302
  store i8 %185, i8* %227, align 1, !dbg !5303
  %228 = add nuw nsw i8 %182, 2, !dbg !5304
  call void @llvm.dbg.value(metadata i8 %228, metadata !5068, metadata !DIExpression()), !dbg !5092
  %229 = zext i8 %226 to i32, !dbg !5305
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !5305
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !5306
  br label %235, !dbg !5307

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !5092
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !5227
  call void @llvm.dbg.value(metadata i8 %237, metadata !5068, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8 %236, metadata !5067, metadata !DIExpression()), !dbg !5092
  %238 = add nuw nsw i32 %181, 1, !dbg !5307
  call void @llvm.dbg.value(metadata i8* %186, metadata !5042, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 %238, metadata !5071, metadata !DIExpression()), !dbg !5222
  %239 = icmp eq i32 %238, %31, !dbg !5223
  br i1 %239, label %160, label %179, !dbg !5224, !llvm.loop !5308

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !5232
  call void @llvm.dbg.value(metadata i32 %177, metadata !5040, metadata !DIExpression()), !dbg !5092
  store i32 %176, i32* %14, align 1, !dbg !5310
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !5311
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #26, !dbg !5312
  call void @llvm.dbg.value(metadata i32 %243, metadata !5070, metadata !DIExpression()), !dbg !5092
  %244 = icmp slt i32 %243, 0, !dbg !5313
  br i1 %244, label %287, label %245, !dbg !5315

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !5040, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5092
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !5316
  %248 = add nuw nsw i32 %44, %24, !dbg !5316
  %249 = sub i32 %247, %248, !dbg !5316
  call void @llvm.dbg.value(metadata i32 %249, metadata !5080, metadata !DIExpression()), !dbg !5092
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #26, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %250, metadata !5070, metadata !DIExpression()), !dbg !5092
  %251 = icmp slt i32 %250, 0, !dbg !5318
  br i1 %251, label %287, label %252, !dbg !5320

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !5321
  call void @llvm.dbg.value(metadata i32 %253, metadata !5040, metadata !DIExpression()), !dbg !5092
  %254 = add nuw nsw i32 %253, %250, !dbg !5322
  call void @llvm.dbg.value(metadata i32 %254, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i32 0, metadata !5081, metadata !DIExpression()), !dbg !5323
  %255 = icmp eq i8 %162, 0, !dbg !5324
  br i1 %255, label %284, label %256, !dbg !5325

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !5325

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !5081, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.value(metadata i32 %260, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5326
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !5327
  %262 = load i8, i8* %261, align 1, !dbg !5327
  call void @llvm.dbg.value(metadata i8 %262, metadata !5083, metadata !DIExpression()), !dbg !5328
  store i8 %262, i8* %10, align 1, !dbg !5329
  %263 = zext i8 %262 to i32, !dbg !5330
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !5330
  %265 = bitcast i32* %264 to i8**, !dbg !5331
  %266 = load i8*, i8** %265, align 4, !dbg !5331
  call void @llvm.dbg.value(metadata i8* %266, metadata !5086, metadata !DIExpression()), !dbg !5328
  br i1 %257, label %270, label %267, !dbg !5332

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !5333
  %269 = load i16, i16* %268, align 2, !dbg !5333
  br label %270, !dbg !5332

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !5332
  call void @llvm.dbg.value(metadata i32 undef, metadata !5087, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5328
  call void @llvm.dbg.value(metadata i8* %10, metadata !5083, metadata !DIExpression(DW_OP_deref)), !dbg !5328
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #26, !dbg !5334
  call void @llvm.dbg.value(metadata i32 %272, metadata !5070, metadata !DIExpression()), !dbg !5092
  %273 = icmp slt i32 %272, 0, !dbg !5335
  br i1 %273, label %277, label %274, !dbg !5337

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !5087, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !5040, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5092
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #27, !dbg !5338
  call void @llvm.dbg.value(metadata i32 %275, metadata !5070, metadata !DIExpression()), !dbg !5092
  %276 = icmp slt i32 %275, 0, !dbg !5339
  br i1 %276, label %277, label %279, !dbg !5341

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5342
  call void @llvm.dbg.value(metadata i32 undef, metadata !5040, metadata !DIExpression()), !dbg !5092
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !5343
  call void @llvm.dbg.value(metadata i32 %280, metadata !5040, metadata !DIExpression()), !dbg !5092
  %281 = add nsw i32 %280, %275, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %281, metadata !5040, metadata !DIExpression()), !dbg !5092
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !5342
  %282 = add nuw nsw i32 %259, 1, !dbg !5345
  call void @llvm.dbg.value(metadata i32 %282, metadata !5081, metadata !DIExpression()), !dbg !5323
  %283 = icmp eq i32 %282, %167, !dbg !5324
  br i1 %283, label %284, label %258, !dbg !5325, !llvm.loop !5346

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !5322
  call void @llvm.dbg.value(metadata i32 %285, metadata !5040, metadata !DIExpression()), !dbg !5092
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #26, !dbg !5348
  br label %287, !dbg !5349

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !5092
  ret i32 %288, !dbg !5350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5351 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5355, metadata !DIExpression()), !dbg !5363
  %2 = icmp eq i8* %0, null, !dbg !5364
  br i1 %2, label %3, label %4, !dbg !5367

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 198) #26, !dbg !5368
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 198) #26, !dbg !5368
  unreachable, !dbg !5368

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5356, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.value(metadata i8* %0, metadata !5357, metadata !DIExpression()), !dbg !5363
  %5 = load i8, i8* %0, align 1, !dbg !5370
  %6 = zext i8 %5 to i32, !dbg !5370
  %7 = shl nuw nsw i32 %6, 2, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %7, metadata !5358, metadata !DIExpression()), !dbg !5363
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5372
  %9 = load i8, i8* %8, align 1, !dbg !5372
  %10 = zext i8 %9 to i32, !dbg !5372
  call void @llvm.dbg.value(metadata i32 %10, metadata !5359, metadata !DIExpression()), !dbg !5363
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5373
  %12 = load i8, i8* %11, align 1, !dbg !5373
  %13 = zext i8 %12 to i32, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %13, metadata !5360, metadata !DIExpression()), !dbg !5363
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !5374
  call void @llvm.dbg.value(metadata i8* %14, metadata !5356, metadata !DIExpression()), !dbg !5363
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !5375
  call void @llvm.dbg.value(metadata i8* %15, metadata !5356, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.value(metadata i32 0, metadata !5361, metadata !DIExpression()), !dbg !5376
  %16 = icmp eq i8 %9, 0, !dbg !5377
  br i1 %16, label %17, label %22, !dbg !5379

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !5363
  %19 = ptrtoint i8* %18 to i32, !dbg !5380
  %20 = ptrtoint i8* %0 to i32, !dbg !5380
  %21 = sub i32 %19, %20, !dbg !5380
  ret i32 %21, !dbg !5381

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !5361, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i8* %24, metadata !5356, metadata !DIExpression()), !dbg !5363
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !5382
  call void @llvm.dbg.value(metadata i8* %25, metadata !5356, metadata !DIExpression()), !dbg !5363
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #26, !dbg !5384
  %27 = add i32 %26, 1, !dbg !5385
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !5386
  call void @llvm.dbg.value(metadata i8* %28, metadata !5356, metadata !DIExpression()), !dbg !5363
  %29 = add nuw nsw i32 %23, 1, !dbg !5387
  call void @llvm.dbg.value(metadata i32 %29, metadata !5361, metadata !DIExpression()), !dbg !5376
  %30 = icmp eq i32 %29, %10, !dbg !5377
  br i1 %30, label %17, label %22, !dbg !5379, !llvm.loop !5388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5390 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5394, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i8* %1, metadata !5395, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i8* %2, metadata !5396, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i16 %3, metadata !5397, metadata !DIExpression()), !dbg !5398
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5399
  br i1 %5, label %6, label %9, !dbg !5401

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5402
  %8 = add i32 %7, 1, !dbg !5404
  br label %20, !dbg !5405

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5406
  br i1 %10, label %13, label %11, !dbg !5407

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5407
  br label %16, !dbg !5407

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !5408
  %15 = add i32 %14, 1, !dbg !5409
  br label %16, !dbg !5407

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5407
  %18 = and i32 %17, 65535, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %17, metadata !5397, metadata !DIExpression()), !dbg !5398
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #26, !dbg !5411
  br label %20, !dbg !5412

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5398
  ret i32 %21, !dbg !5413
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5416, metadata !DIExpression()), !dbg !5417
  ret i32 0, !dbg !5418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5419 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5423, metadata !DIExpression()), !dbg !5424
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5425
  ret void, !dbg !5426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5427 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5430
  ret i8* %1, !dbg !5431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5432 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5443, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i8* %0, metadata !5442, metadata !DIExpression()), !dbg !5452
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !5453
  ret void, !dbg !5455
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5460, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.value(metadata i8* %1, metadata !5461, metadata !DIExpression()), !dbg !5462
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5463
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !5463
  ret i32 %4, !dbg !5464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5465 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5472, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5469, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.value(metadata i8* %1, metadata !5470, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.value(metadata i8* %2, metadata !5471, metadata !DIExpression()), !dbg !5473
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !5474
  ret void, !dbg !5475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5476 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5480, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.value(metadata i32 %1, metadata !5481, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.value(metadata i32 0, metadata !5482, metadata !DIExpression()), !dbg !5483
  %3 = icmp eq i32 %1, 0, !dbg !5484
  br i1 %3, label %13, label %4, !dbg !5487

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5482, metadata !DIExpression()), !dbg !5483
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5488
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5490
  %8 = load i8, i8* %7, align 1, !dbg !5490
  %9 = zext i8 %8 to i32, !dbg !5490
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !5488
  %11 = add nuw i32 %5, 1, !dbg !5491
  call void @llvm.dbg.value(metadata i32 %11, metadata !5482, metadata !DIExpression()), !dbg !5483
  %12 = icmp eq i32 %11, %1, !dbg !5484
  br i1 %12, label %13, label %4, !dbg !5487, !llvm.loop !5492

13:                                               ; preds = %4, %2
  ret void, !dbg !5494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5495 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5499, metadata !DIExpression()), !dbg !5501
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5502
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5502
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5500, metadata !DIExpression()), !dbg !5503
  call void @llvm.va_start(i8* nonnull %3), !dbg !5504
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5505
  %5 = load i32, i32* %4, align 4, !dbg !5505
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5505
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5505
  call void @llvm.va_end(i8* nonnull %3), !dbg !5506
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5507
  ret void, !dbg !5507
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5508 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5512, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i32 %1, metadata !5513, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.value(metadata i8* %2, metadata !5514, metadata !DIExpression()), !dbg !5517
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5518
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5518
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5515, metadata !DIExpression()), !dbg !5519
  call void @llvm.va_start(i8* nonnull %5), !dbg !5520
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5521
  %7 = load i32, i32* %6, align 4, !dbg !5521
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5521
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %9, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.va_end(i8* nonnull %5), !dbg !5522
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5523
  ret i32 %9, !dbg !5524
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5525 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5532, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8* %0, metadata !5529, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i32 %1, metadata !5530, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8* %2, metadata !5531, metadata !DIExpression()), !dbg !5539
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5540
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5540
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5533, metadata !DIExpression()), !dbg !5541
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5542
  store i8* %0, i8** %7, align 4, !dbg !5542
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5542
  store i32 %1, i32* %8, align 4, !dbg !5542
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5542
  store i32 0, i32* %9, align 4, !dbg !5542
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !5543
  %10 = load i32, i32* %9, align 4, !dbg !5544
  %11 = load i32, i32* %8, align 4, !dbg !5546
  %12 = icmp slt i32 %10, %11, !dbg !5547
  br i1 %12, label %13, label %15, !dbg !5548

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5549
  store i8 0, i8* %14, align 1, !dbg !5551
  br label %15, !dbg !5552

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5553
  ret i32 %10, !dbg !5554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5560, metadata !DIExpression()), !dbg !5562
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5561, metadata !DIExpression()), !dbg !5562
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5563
  %4 = load i8*, i8** %3, align 4, !dbg !5563
  %5 = icmp eq i8* %4, null, !dbg !5565
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5566
  br i1 %5, label %12, label %8, !dbg !5567

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5568
  %10 = load i32, i32* %9, align 4, !dbg !5568
  %11 = icmp slt i32 %7, %10, !dbg !5569
  br i1 %11, label %15, label %12, !dbg !5570

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5571
  %14 = add nsw i32 %7, 1, !dbg !5573
  store i32 %14, i32* %13, align 4, !dbg !5573
  br label %25, !dbg !5574

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5575
  %17 = icmp eq i32 %7, %16, !dbg !5577
  br i1 %17, label %18, label %21, !dbg !5578

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5579
  store i32 %19, i32* %6, align 4, !dbg !5579
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5581
  store i8 0, i8* %20, align 1, !dbg !5582
  br label %25, !dbg !5583

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5584
  %23 = add nsw i32 %7, 1, !dbg !5586
  store i32 %23, i32* %6, align 4, !dbg !5586
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5587
  store i8 %22, i8* %24, align 1, !dbg !5588
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5589
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !5590 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5595, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %1, metadata !5596, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %2, metadata !5597, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i8* %3, metadata !5598, metadata !DIExpression()), !dbg !5599
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !5600
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5601
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !5602
  unreachable, !dbg !5603
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5604 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5710
  ret %struct.k_thread* %1, !dbg !5711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5716, metadata !DIExpression()), !dbg !5717
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5718, !srcloc !5720
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !5721
  ret void, !dbg !5722
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5723 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5724, !srcloc !5726
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !5727
  ret %struct.k_thread* %1, !dbg !5728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5729 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5740, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i8* %1, metadata !5741, metadata !DIExpression()), !dbg !5744
  %3 = icmp eq i8* %1, null, !dbg !5745
  br i1 %3, label %16, label %4, !dbg !5747

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5748
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5748
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5742, metadata !DIExpression()), !dbg !5744
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5749, !range !5750
  call void @llvm.dbg.value(metadata i32 %7, metadata !5743, metadata !DIExpression()), !dbg !5744
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5751
  br i1 %8, label %10, label %9, !dbg !5754

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 176) #26, !dbg !5755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.28, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 176) #26, !dbg !5755
  unreachable, !dbg !5755

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5757
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #27, !dbg !5757
  %13 = icmp eq i32 %12, %7, !dbg !5757
  br i1 %13, label %15, label %14, !dbg !5760

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 185) #26, !dbg !5761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.30, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 185) #26, !dbg !5761
  unreachable, !dbg !5761

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !5763
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5764
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #6 !dbg !5766 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5770, metadata !DIExpression()), !dbg !5774
  call void @llvm.dbg.value(metadata i8* %1, metadata !5771, metadata !DIExpression()), !dbg !5774
  call void @llvm.dbg.value(metadata i8* %1, metadata !5772, metadata !DIExpression()), !dbg !5774
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5775
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5773, metadata !DIExpression()), !dbg !5774
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5776
  %5 = ptrtoint i8* %4 to i32, !dbg !5777
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5777
  %7 = sub i32 %5, %6, !dbg !5777
  %8 = lshr i32 %7, 3, !dbg !5778
  ret i32 %8, !dbg !5779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5780 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5784, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata i32 %1, metadata !5785, metadata !DIExpression()), !dbg !5786
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5787
  %4 = and i32 %3, 1, !dbg !5788
  %5 = icmp ne i32 %4, 0, !dbg !5787
  ret i1 %5, !dbg !5789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5790 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5794, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 %1, metadata !5795, metadata !DIExpression()), !dbg !5796
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5797
  %4 = add i32 %3, %1, !dbg !5798
  ret i32 %4, !dbg !5799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5800 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5802, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i32 %1, metadata !5803, metadata !DIExpression()), !dbg !5804
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5805
  %4 = sub i32 %1, %3, !dbg !5806
  ret i32 %4, !dbg !5807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !5808 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5812, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %1, metadata !5813, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i1 %2, metadata !5814, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5817
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5818
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5815, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5816, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5817
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5819
  %6 = bitcast i8* %5 to i16*, !dbg !5819
  %7 = load i16, i16* %6, align 2, !dbg !5819
  %8 = and i16 %7, -2, !dbg !5823
  %9 = zext i1 %2 to i16, !dbg !5823
  %10 = or i16 %8, %9, !dbg !5823
  store i16 %10, i16* %6, align 2, !dbg !5819
  ret void, !dbg !5824
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5825 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5829, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.value(metadata i32 %1, metadata !5830, metadata !DIExpression()), !dbg !5831
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5832
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5834
  br i1 %4, label %7, label %5, !dbg !5835

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5836
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5838
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5839
  br label %7, !dbg !5840

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5841
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5843
  br i1 %9, label %13, label %10, !dbg !5844

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5845
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5847
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !5848
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %12, metadata !5830, metadata !DIExpression()), !dbg !5831
  br label %13, !dbg !5850

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5830, metadata !DIExpression()), !dbg !5831
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !5851
  ret void, !dbg !5852
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5853 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5855, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.value(metadata i32 %1, metadata !5856, metadata !DIExpression()), !dbg !5860
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5861, !range !5862
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5863
  call void @llvm.dbg.value(metadata i32 %4, metadata !5857, metadata !DIExpression()), !dbg !5864
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5865
  ret void, !dbg !5866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5867 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5871, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.value(metadata i32 %1, metadata !5872, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.value(metadata i32 %2, metadata !5873, metadata !DIExpression()), !dbg !5876
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5877
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5878
  %6 = add i32 %5, %4, !dbg !5879
  call void @llvm.dbg.value(metadata i32 %6, metadata !5874, metadata !DIExpression()), !dbg !5876
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5880
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5881
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5882
  ret void, !dbg !5883
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5884 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5886, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i32 %1, metadata !5887, metadata !DIExpression()), !dbg !5891
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5892, !range !5862
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %4, metadata !5888, metadata !DIExpression()), !dbg !5894
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5895
  ret void, !dbg !5896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5897 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5901, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.value(metadata i32 %1, metadata !5902, metadata !DIExpression()), !dbg !5903
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5904
  %4 = lshr i32 %3, 1, !dbg !5905
  ret i32 %4, !dbg !5906
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #12 !dbg !5907 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5911, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %1, metadata !5912, metadata !DIExpression()), !dbg !5914
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5915
  %4 = add i32 %1, 1, !dbg !5916
  %5 = sub i32 %4, %3, !dbg !5917
  call void @llvm.dbg.value(metadata i32 %5, metadata !5913, metadata !DIExpression()), !dbg !5914
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5918, !range !5919
  %7 = sub nsw i32 31, %6, !dbg !5920
  ret i32 %7, !dbg !5921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5922 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5926, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata i32 %1, metadata !5927, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata i32 %2, metadata !5928, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5929, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5935
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5936
  %5 = load i32, i32* %4, align 4, !dbg !5936
  %6 = icmp eq i32 %5, 0, !dbg !5937
  br i1 %6, label %7, label %12, !dbg !5938

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5939
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5941
  %10 = load i32, i32* %9, align 4, !dbg !5942
  %11 = or i32 %10, %8, !dbg !5942
  store i32 %11, i32* %9, align 4, !dbg !5942
  store i32 %1, i32* %4, align 4, !dbg !5943
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5944
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5945
  br label %14, !dbg !5946

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5931, metadata !DIExpression()), !dbg !5947
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5948, !range !5949
  call void @llvm.dbg.value(metadata i32 %13, metadata !5934, metadata !DIExpression()), !dbg !5947
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5950
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5951
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5952
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5953
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5955 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5957, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.value(metadata i32 %1, metadata !5958, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.value(metadata i32 %2, metadata !5959, metadata !DIExpression()), !dbg !5960
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5961
  ret void, !dbg !5962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5963 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5965, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %1, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.value(metadata i32 %2, metadata !5967, metadata !DIExpression()), !dbg !5968
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5969
  ret void, !dbg !5970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !5971 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5973, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i32 %1, metadata !5974, metadata !DIExpression()), !dbg !5975
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5976
  ret i32 %3, !dbg !5977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5978 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5982, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata i32 %1, metadata !5983, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata i32 %2, metadata !5984, metadata !DIExpression()), !dbg !5987
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5988
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5985, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5987
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5987
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5989
  call void @llvm.dbg.value(metadata i8* %5, metadata !5986, metadata !DIExpression()), !dbg !5987
  %6 = bitcast i8* %5 to i16*, !dbg !5990
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5993
  %8 = load i16, i16* %7, align 2, !dbg !5993
  %9 = zext i16 %8 to i32, !dbg !5993
  ret i32 %9, !dbg !5994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #6 !dbg !5995 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5999, metadata !DIExpression()), !dbg !6000
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !6001
  ret %struct.chunk_unit_t* %2, !dbg !6002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !6003 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6007, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i32 %1, metadata !6008, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i32 %2, metadata !6009, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata i32 %3, metadata !6010, metadata !DIExpression()), !dbg !6013
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !6014
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !6011, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !6012, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6013
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !6015
  call void @llvm.dbg.value(metadata i8* %6, metadata !6012, metadata !DIExpression()), !dbg !6013
  %7 = trunc i32 %3 to i16, !dbg !6016
  %8 = bitcast i8* %6 to i16*, !dbg !6019
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !6020
  store i16 %7, i16* %9, align 2, !dbg !6021
  ret void, !dbg !6022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #6 !dbg !6023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6027, metadata !DIExpression()), !dbg !6028
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !6029
  ret i32 %2, !dbg !6030
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !6031 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6035, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.value(metadata i32 %1, metadata !6036, metadata !DIExpression()), !dbg !6037
  %3 = add i32 %1, 4, !dbg !6038
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !6039
  ret i32 %4, !dbg !6040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #6 !dbg !6041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6045, metadata !DIExpression()), !dbg !6046
  %2 = add i32 %0, 7, !dbg !6047
  %3 = lshr i32 %2, 3, !dbg !6048
  ret i32 %3, !dbg !6049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !6050 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6054, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata i32 %1, metadata !6055, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.value(metadata i32 %2, metadata !6056, metadata !DIExpression()), !dbg !6057
  %4 = shl i32 %2, 1, !dbg !6058
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !6059
  ret void, !dbg !6060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !6061 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6063, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %1, metadata !6064, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.value(metadata i32 %2, metadata !6065, metadata !DIExpression()), !dbg !6066
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !6067
  ret void, !dbg !6068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !6069 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6071, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata i32 %1, metadata !6072, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.value(metadata i32 %2, metadata !6073, metadata !DIExpression()), !dbg !6079
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !6080
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !6074, metadata !DIExpression()), !dbg !6079
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !6081
  %6 = icmp eq i32 %5, %1, !dbg !6082
  br i1 %6, label %7, label %14, !dbg !6083

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !6084
  %9 = xor i32 %8, -1, !dbg !6086
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !6087
  %11 = load i32, i32* %10, align 4, !dbg !6088
  %12 = and i32 %11, %9, !dbg !6088
  store i32 %12, i32* %10, align 4, !dbg !6088
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !6089
  store i32 0, i32* %13, align 4, !dbg !6090
  br label %17, !dbg !6091

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !6092
  call void @llvm.dbg.value(metadata i32 %15, metadata !6075, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.value(metadata i32 %5, metadata !6078, metadata !DIExpression()), !dbg !6093
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !6094
  store i32 %5, i32* %16, align 4, !dbg !6095
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !6096
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !6097
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !6098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !6099 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6101, metadata !DIExpression()), !dbg !6103
  call void @llvm.dbg.value(metadata i32 %1, metadata !6102, metadata !DIExpression()), !dbg !6103
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !6104
  ret i32 %3, !dbg !6105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !6106 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6110, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i8* %1, metadata !6111, metadata !DIExpression()), !dbg !6117
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6118
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !6118
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !6112, metadata !DIExpression()), !dbg !6117
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !6119
  call void @llvm.dbg.value(metadata i32 %5, metadata !6113, metadata !DIExpression()), !dbg !6117
  %6 = ptrtoint i8* %1 to i32, !dbg !6120
  call void @llvm.dbg.value(metadata i32 %6, metadata !6114, metadata !DIExpression()), !dbg !6117
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !6121
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !6121
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !6122
  call void @llvm.dbg.value(metadata i32 %9, metadata !6115, metadata !DIExpression()), !dbg !6117
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !6123
  %11 = shl i32 %10, 3, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %11, metadata !6116, metadata !DIExpression()), !dbg !6117
  %12 = sub i32 %9, %6, !dbg !6125
  %13 = add i32 %12, %11, !dbg !6126
  ret i32 %13, !dbg !6127
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #14 !dbg !6128 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6132, metadata !DIExpression()), !dbg !6138
  call void @llvm.dbg.value(metadata i32 %1, metadata !6133, metadata !DIExpression()), !dbg !6138
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6139
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !6139
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !6134, metadata !DIExpression()), !dbg !6138
  %5 = icmp eq i32 %1, 0, !dbg !6140
  br i1 %5, label %19, label %6, !dbg !6142

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !6143
  br i1 %7, label %19, label %8, !dbg !6144

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !6145, !range !5750
  call void @llvm.dbg.value(metadata i32 %9, metadata !6136, metadata !DIExpression()), !dbg !6138
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %10, metadata !6137, metadata !DIExpression()), !dbg !6138
  %11 = icmp eq i32 %10, 0, !dbg !6147
  br i1 %11, label %19, label %12, !dbg !6149

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !6150
  %14 = icmp ugt i32 %13, %9, !dbg !6152
  br i1 %14, label %15, label %17, !dbg !6153

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !6154
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !6156
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !6157
  br label %17, !dbg !6158

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !6159
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !6160
  call void @llvm.dbg.value(metadata i8* %18, metadata !6135, metadata !DIExpression()), !dbg !6138
  br label %19, !dbg !6161

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !6138
  ret i8* %20, !dbg !6162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !6163 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6167, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.value(metadata i32 %1, metadata !6168, metadata !DIExpression()), !dbg !6169
  %3 = lshr i32 %1, 3, !dbg !6170
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !6171
  %5 = load i32, i32* %4, align 4, !dbg !6171
  %6 = icmp uge i32 %3, %5, !dbg !6172
  ret i1 %6, !dbg !6173
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6174 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6178, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata i32 %1, metadata !6179, metadata !DIExpression()), !dbg !6193
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !6194
  call void @llvm.dbg.value(metadata i32 %3, metadata !6180, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !6181, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !6193
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !6195
  %5 = load i32, i32* %4, align 4, !dbg !6195
  %6 = icmp eq i32 %5, 0, !dbg !6196
  br i1 %6, label %19, label %7, !dbg !6197

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !6198
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !6199
  call void @llvm.dbg.value(metadata i32 %9, metadata !6185, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata i32 %8, metadata !6186, metadata !DIExpression()), !dbg !6200
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !6201
  %11 = icmp ult i32 %10, %1, !dbg !6203
  br i1 %11, label %13, label %12, !dbg !6204

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !6205
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !6207
  store i32 %14, i32* %4, align 4, !dbg !6208
  %15 = add nsw i32 %9, -1, !dbg !6209
  call void @llvm.dbg.value(metadata i32 %15, metadata !6185, metadata !DIExpression()), !dbg !6199
  %16 = icmp eq i32 %15, 0, !dbg !6209
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !6210
  br i1 %18, label %19, label %7, !dbg !6210, !llvm.loop !6211

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !6214
  %21 = load i32, i32* %20, align 4, !dbg !6214
  %22 = add nsw i32 %3, 1, !dbg !6215
  %23 = shl nsw i32 -1, %22, !dbg !6215
  %24 = and i32 %21, %23, !dbg !6216
  call void @llvm.dbg.value(metadata i32 %24, metadata !6188, metadata !DIExpression()), !dbg !6193
  %25 = icmp eq i32 %24, 0, !dbg !6217
  br i1 %25, label %30, label %26, !dbg !6218

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !6219, !range !5919
  call void @llvm.dbg.value(metadata i32 %27, metadata !6189, metadata !DIExpression()), !dbg !6220
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !6221
  %29 = load i32, i32* %28, align 4, !dbg !6221
  call void @llvm.dbg.value(metadata i32 %29, metadata !6192, metadata !DIExpression()), !dbg !6220
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !6222
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !6193
  ret i32 %31, !dbg !6223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !6224 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6226, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %1, metadata !6227, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %2, metadata !6228, metadata !DIExpression()), !dbg !6232
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !6233
  call void @llvm.dbg.value(metadata i32 %4, metadata !6229, metadata !DIExpression()), !dbg !6232
  %5 = sub i32 %2, %1, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %5, metadata !6230, metadata !DIExpression()), !dbg !6232
  %6 = sub i32 %4, %5, !dbg !6235
  call void @llvm.dbg.value(metadata i32 %6, metadata !6231, metadata !DIExpression()), !dbg !6232
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !6236
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !6237
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !6238
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !6239
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !6240
  ret void, !dbg !6241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !6242 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6246, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.value(metadata i32 %1, metadata !6247, metadata !DIExpression()), !dbg !6250
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !6251
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !6248, metadata !DIExpression()), !dbg !6250
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !6252
  call void @llvm.dbg.value(metadata i8* %4, metadata !6249, metadata !DIExpression()), !dbg !6250
  ret i8* %4, !dbg !6253
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6254 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6258, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32 %1, metadata !6259, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32 %2, metadata !6260, metadata !DIExpression()), !dbg !6270
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6271
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !6271
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !6261, metadata !DIExpression()), !dbg !6270
  %6 = sub i32 0, %1, !dbg !6272
  %7 = and i32 %6, %1, !dbg !6273
  call void @llvm.dbg.value(metadata i32 %7, metadata !6263, metadata !DIExpression()), !dbg !6270
  %8 = icmp eq i32 %7, %1, !dbg !6274
  br i1 %8, label %13, label %9, !dbg !6276

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !6277
  call void @llvm.dbg.value(metadata i32 %10, metadata !6259, metadata !DIExpression()), !dbg !6270
  %11 = icmp ult i32 %7, 4, !dbg !6279
  %12 = select i1 %11, i32 %7, i32 4, !dbg !6279
  br label %17, !dbg !6279

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !6280
  br i1 %14, label %15, label %17, !dbg !6283

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !6284
  br label %61, !dbg !6286

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !6270
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !6287
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !6259, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32 %19, metadata !6262, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32 %18, metadata !6263, metadata !DIExpression()), !dbg !6270
  %21 = add i32 %20, -1, !dbg !6288
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !6288, !range !5919
  %23 = icmp ult i32 %22, 2, !dbg !6288
  br i1 %23, label %25, label %24, !dbg !6291

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 324) #26, !dbg !6292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.32, i32 0, i32 0)) #26, !dbg !6292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 324) #26, !dbg !6292
  unreachable, !dbg !6292

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !6294
  br i1 %26, label %61, label %27, !dbg !6296

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !6297
  br i1 %28, label %61, label %29, !dbg !6298

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !6299
  %31 = add i32 %30, %20, !dbg !6300
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #27, !dbg !6301, !range !5750
  call void @llvm.dbg.value(metadata i32 %32, metadata !6264, metadata !DIExpression()), !dbg !6270
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #27, !dbg !6302
  call void @llvm.dbg.value(metadata i32 %33, metadata !6265, metadata !DIExpression()), !dbg !6270
  %34 = icmp eq i32 %33, 0, !dbg !6303
  br i1 %34, label %61, label %35, !dbg !6305

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !6306
  call void @llvm.dbg.value(metadata i8* %36, metadata !6266, metadata !DIExpression()), !dbg !6270
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !6307
  %38 = ptrtoint i8* %37 to i32, !dbg !6307
  %39 = add i32 %21, %38, !dbg !6307
  %40 = sub i32 0, %20, !dbg !6307
  %41 = and i32 %39, %40, !dbg !6307
  %42 = inttoptr i32 %41 to i8*, !dbg !6308
  %43 = sub i32 0, %18, !dbg !6309
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !6309
  call void @llvm.dbg.value(metadata i8* %44, metadata !6266, metadata !DIExpression()), !dbg !6270
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !6310
  %46 = ptrtoint i8* %45 to i32, !dbg !6310
  %47 = add i32 %46, 7, !dbg !6310
  %48 = and i32 %47, -8, !dbg !6310
  call void @llvm.dbg.value(metadata i32 %48, metadata !6267, metadata !DIExpression()), !dbg !6270
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #27, !dbg !6311
  call void @llvm.dbg.value(metadata i32 %49, metadata !6268, metadata !DIExpression()), !dbg !6270
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !6312
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !6313
  %52 = sub i32 %48, %51, !dbg !6313
  %53 = ashr exact i32 %52, 3, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %53, metadata !6269, metadata !DIExpression()), !dbg !6270
  %54 = icmp ugt i32 %49, %33, !dbg !6314
  br i1 %54, label %55, label %56, !dbg !6316

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #27, !dbg !6317
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !6319
  br label %56, !dbg !6320

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !6321
  %58 = icmp ugt i32 %57, %53, !dbg !6323
  br i1 %58, label %59, label %60, !dbg !6324

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #27, !dbg !6325
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #27, !dbg !6327
  br label %60, !dbg !6328

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #27, !dbg !6329
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !6270
  ret i8* %62, !dbg !6330
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6331 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6335, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata i8* %1, metadata !6336, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata i32 %2, metadata !6337, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata i32 %3, metadata !6338, metadata !DIExpression()), !dbg !6354
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6355
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !6355
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !6339, metadata !DIExpression()), !dbg !6354
  %7 = icmp eq i8* %1, null, !dbg !6356
  br i1 %7, label %8, label %10, !dbg !6358

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !6359
  br label %63, !dbg !6361

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !6362
  br i1 %11, label %12, label %13, !dbg !6364

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !6365
  br label %63, !dbg !6367

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !6368
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !6368, !range !5919
  %16 = icmp ult i32 %15, 2, !dbg !6368
  br i1 %16, label %18, label %17, !dbg !6371

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 393) #26, !dbg !6372
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.32, i32 0, i32 0)) #26, !dbg !6372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 393) #26, !dbg !6372
  unreachable, !dbg !6372

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !6374
  br i1 %19, label %63, label %20, !dbg !6376

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !6377, !range !5750
  call void @llvm.dbg.value(metadata i32 %21, metadata !6340, metadata !DIExpression()), !dbg !6354
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6378
  call void @llvm.dbg.value(metadata i32 %22, metadata !6341, metadata !DIExpression()), !dbg !6354
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6379
  %24 = ptrtoint i8* %1 to i32, !dbg !6380
  %25 = ptrtoint i8* %23 to i32, !dbg !6380
  %26 = sub i32 %24, %25, !dbg !6380
  call void @llvm.dbg.value(metadata i32 %26, metadata !6342, metadata !DIExpression()), !dbg !6354
  %27 = add i32 %26, %3, !dbg !6381
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #27, !dbg !6382
  call void @llvm.dbg.value(metadata i32 %28, metadata !6343, metadata !DIExpression()), !dbg !6354
  %29 = icmp eq i32 %2, 0, !dbg !6383
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !6384
  br i1 %32, label %33, label %53, !dbg !6384

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6385
  %35 = icmp eq i32 %28, %34, !dbg !6386
  br i1 %35, label %63, label %36, !dbg !6387

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !6388
  br i1 %37, label %38, label %40, !dbg !6389

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !6390
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #27, !dbg !6392
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !6393
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #27, !dbg !6394
  br label %63, !dbg !6395

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6396
  br i1 %41, label %53, label %42, !dbg !6397

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6398
  %44 = add i32 %43, %34, !dbg !6399
  %45 = icmp ult i32 %44, %28, !dbg !6400
  br i1 %45, label %53, label %46, !dbg !6401

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !6402
  call void @llvm.dbg.value(metadata i32 %47, metadata !6344, metadata !DIExpression()), !dbg !6403
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6404
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !6405
  %49 = icmp ult i32 %47, %48, !dbg !6407
  br i1 %49, label %50, label %52, !dbg !6408

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !6409
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #27, !dbg !6411
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #27, !dbg !6412
  br label %52, !dbg !6413

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #27, !dbg !6414
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !6415
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !6416
  call void @llvm.dbg.value(metadata i8* %54, metadata !6350, metadata !DIExpression()), !dbg !6354
  %55 = icmp eq i8* %54, null, !dbg !6417
  br i1 %55, label %63, label %56, !dbg !6418

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !6419, !range !5862
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #27, !dbg !6420
  %59 = sub i32 %58, %26, !dbg !6421
  call void @llvm.dbg.value(metadata i32 %59, metadata !6351, metadata !DIExpression()), !dbg !6422
  %60 = icmp ult i32 %59, %3, !dbg !6423
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !6423
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #26, !dbg !6424
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !6425
  br label %63, !dbg !6426

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !6354
  ret i8* %64, !dbg !6427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !6428 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6432, metadata !DIExpression()), !dbg !6434
  call void @llvm.dbg.value(metadata i32 %1, metadata !6433, metadata !DIExpression()), !dbg !6434
  %3 = shl i32 %1, 3, !dbg !6435
  %4 = add i32 %3, -4, !dbg !6436
  ret i32 %4, !dbg !6437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6438 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6442, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i8* %1, metadata !6443, metadata !DIExpression()), !dbg !6453
  call void @llvm.dbg.value(metadata i32 %2, metadata !6444, metadata !DIExpression()), !dbg !6453
  %4 = icmp ult i32 %2, 262144, !dbg !6454
  br i1 %4, label %6, label %5, !dbg !6459

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 491) #26, !dbg !6460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.34, i32 0, i32 0)) #26, !dbg !6460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 491) #26, !dbg !6460
  unreachable, !dbg !6460

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !6462
  br i1 %7, label %9, label %8, !dbg !6465

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.35, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 498) #26, !dbg !6466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #26, !dbg !6466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 498) #26, !dbg !6466
  unreachable, !dbg !6466

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %10, metadata !6444, metadata !DIExpression()), !dbg !6453
  %11 = ptrtoint i8* %1 to i32, !dbg !6469
  %12 = add i32 %11, 7, !dbg !6469
  %13 = and i32 %12, -8, !dbg !6469
  call void @llvm.dbg.value(metadata i32 %13, metadata !6445, metadata !DIExpression()), !dbg !6453
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6470
  %15 = ptrtoint i8* %14 to i32, !dbg !6470
  %16 = and i32 %15, -8, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %16, metadata !6446, metadata !DIExpression()), !dbg !6453
  %17 = sub i32 %16, %13, !dbg !6471
  %18 = lshr exact i32 %17, 3, !dbg !6472
  call void @llvm.dbg.value(metadata i32 %18, metadata !6447, metadata !DIExpression()), !dbg !6453
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #27, !dbg !6473
  %20 = icmp ugt i32 %18, %19, !dbg !6473
  br i1 %20, label %22, label %21, !dbg !6476

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 507) #26, !dbg !6477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #26, !dbg !6477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 507) #26, !dbg !6477
  unreachable, !dbg !6477

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6479
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !6448, metadata !DIExpression()), !dbg !6453
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6480
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6481
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6482
  store i32 %18, i32* %25, align 8, !dbg !6483
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6484
  store i32 0, i32* %26, align 4, !dbg !6485
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #27, !dbg !6486
  call void @llvm.dbg.value(metadata i32 %27, metadata !6449, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6453
  %28 = shl i32 %27, 2, !dbg !6487
  %29 = add i32 %28, 20, !dbg !6488
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #27, !dbg !6489
  call void @llvm.dbg.value(metadata i32 %30, metadata !6450, metadata !DIExpression()), !dbg !6453
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #27, !dbg !6490
  %32 = add i32 %31, %30, !dbg !6490
  %33 = icmp ugt i32 %32, %18, !dbg !6490
  br i1 %33, label %36, label %34, !dbg !6493

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !6451, metadata !DIExpression()), !dbg !6494
  %35 = icmp slt i32 %27, 0, !dbg !6495
  br i1 %35, label %37, label %39, !dbg !6497

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 524) #26, !dbg !6498
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #26, !dbg !6498
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 524) #26, !dbg !6498
  unreachable, !dbg !6498

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #27, !dbg !6500
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #27, !dbg !6501
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !6502
  %38 = sub i32 %18, %30, !dbg !6503
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #27, !dbg !6504
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #27, !dbg !6505
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #27, !dbg !6506
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #27, !dbg !6507
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #27, !dbg !6508
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #27, !dbg !6509
  ret void, !dbg !6510

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !6451, metadata !DIExpression()), !dbg !6494
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6511
  store i32 0, i32* %41, align 4, !dbg !6513
  %42 = add nuw i32 %40, 1, !dbg !6514
  call void @llvm.dbg.value(metadata i32 %42, metadata !6451, metadata !DIExpression()), !dbg !6494
  %43 = icmp eq i32 %40, %27, !dbg !6495
  br i1 %43, label %37, label %39, !dbg !6497, !llvm.loop !6515
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6517 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6530, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6527, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8* %1, metadata !6528, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8* %2, metadata !6529, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %4, metadata !6531, metadata !DIExpression()), !dbg !6656
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6657
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6657
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6532, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.value(metadata i32 0, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i1 undef, metadata !6538, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6656
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6659

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6659

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6660
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6530, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8* %30, metadata !6529, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %29, metadata !6536, metadata !DIExpression()), !dbg !6656
  %31 = load i8, i8* %30, align 1, !dbg !6661
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6659

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6661
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6662
  call void @llvm.dbg.value(metadata i8* %34, metadata !6529, metadata !DIExpression()), !dbg !6656
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !6662
  call void @llvm.dbg.value(metadata i32 %35, metadata !6540, metadata !DIExpression()), !dbg !6663
  %36 = icmp slt i32 %35, 0, !dbg !6664
  %37 = add i32 %29, 1, !dbg !6662
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %36, label %365, label %28, !llvm.loop !6666

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6668
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6545, metadata !DIExpression()), !dbg !6669
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6669
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6588, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6591, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8* %30, metadata !6594, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i32 -1, metadata !6595, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i32 -1, metadata !6596, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8* null, metadata !6597, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8* %14, metadata !6598, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8 0, metadata !6599, metadata !DIExpression()), !dbg !6670
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !6671
  call void @llvm.dbg.value(metadata i8* %39, metadata !6529, metadata !DIExpression()), !dbg !6656
  %40 = load i24, i24* %15, align 8, !dbg !6672
  %41 = and i24 %40, 256, !dbg !6672
  %42 = icmp eq i24 %41, 0, !dbg !6672
  br i1 %42, label %51, label %43, !dbg !6674

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6675
  call void @llvm.dbg.value(metadata i8* %44, metadata !6530, metadata !DIExpression()), !dbg !6656
  %45 = bitcast i8* %27 to i32*, !dbg !6675
  %46 = load i32, i32* %45, align 4, !dbg !6675
  call void @llvm.dbg.value(metadata i32 %46, metadata !6595, metadata !DIExpression()), !dbg !6670
  %47 = icmp slt i32 %46, 0, !dbg !6677
  br i1 %47, label %48, label %56, !dbg !6679

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6680
  store i24 %49, i24* %15, align 8, !dbg !6680
  %50 = sub nsw i32 0, %46, !dbg !6682
  call void @llvm.dbg.value(metadata i32 %50, metadata !6595, metadata !DIExpression()), !dbg !6670
  br label %56, !dbg !6683

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6684
  %53 = icmp eq i24 %52, 0, !dbg !6684
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6686
  br label %56, !dbg !6686

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6687
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6670
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6530, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %58, metadata !6595, metadata !DIExpression()), !dbg !6670
  %60 = and i24 %57, 1024, !dbg !6687
  %61 = icmp eq i24 %60, 0, !dbg !6687
  br i1 %61, label %69, label %62, !dbg !6688

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6689
  call void @llvm.dbg.value(metadata i8* %63, metadata !6530, metadata !DIExpression()), !dbg !6656
  %64 = bitcast i8* %59 to i32*, !dbg !6689
  %65 = load i32, i32* %64, align 4, !dbg !6689
  call void @llvm.dbg.value(metadata i32 %65, metadata !6600, metadata !DIExpression()), !dbg !6690
  %66 = icmp slt i32 %65, 0, !dbg !6691
  br i1 %66, label %67, label %74, !dbg !6693

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6694
  store i24 %68, i24* %15, align 8, !dbg !6694
  br label %74, !dbg !6696

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6697
  %71 = icmp eq i24 %70, 0, !dbg !6697
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6699
  br label %74, !dbg !6699

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6700
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6670
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6670
  call void @llvm.dbg.value(metadata i8* %77, metadata !6530, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %76, metadata !6596, metadata !DIExpression()), !dbg !6670
  store i32 0, i32* %16, align 4, !dbg !6701
  store i32 0, i32* %17, align 8, !dbg !6702
  %78 = lshr i24 %75, 16, !dbg !6700
  call void @llvm.dbg.value(metadata i24 %78, metadata !6603, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6670
  %79 = lshr i24 %75, 11, !dbg !6703
  %80 = and i24 %79, 15, !dbg !6703
  %81 = zext i24 %80 to i32, !dbg !6703
  call void @llvm.dbg.value(metadata i32 %81, metadata !6604, metadata !DIExpression()), !dbg !6670
  %82 = trunc i24 %78 to i3, !dbg !6704
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6704

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6705

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6708
  call void @llvm.dbg.value(metadata i8* %85, metadata !6530, metadata !DIExpression()), !dbg !6656
  %86 = bitcast i8* %77 to i32*, !dbg !6708
  %87 = load i32, i32* %86, align 4, !dbg !6708
  %88 = sext i32 %87 to i64, !dbg !6708
  store i64 %88, i64* %20, align 8, !dbg !6710
  br label %115, !dbg !6711

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6712
  call void @llvm.dbg.value(metadata i8* %90, metadata !6530, metadata !DIExpression()), !dbg !6656
  %91 = bitcast i8* %77 to i32*, !dbg !6712
  %92 = load i32, i32* %91, align 4, !dbg !6712
  %93 = sext i32 %92 to i64, !dbg !6712
  store i64 %93, i64* %20, align 8, !dbg !6715
  br label %115, !dbg !6716

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6717
  %96 = add i32 %95, 7, !dbg !6717
  %97 = and i32 %96, -8, !dbg !6717
  %98 = inttoptr i32 %97 to i8*, !dbg !6717
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6717
  call void @llvm.dbg.value(metadata i8* %99, metadata !6530, metadata !DIExpression()), !dbg !6656
  %100 = inttoptr i32 %97 to i64*, !dbg !6717
  %101 = load i64, i64* %100, align 8, !dbg !6717
  store i64 %101, i64* %20, align 8, !dbg !6718
  br label %115, !dbg !6719

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6720
  %104 = add i32 %103, 7, !dbg !6720
  %105 = and i32 %104, -8, !dbg !6720
  %106 = inttoptr i32 %105 to i8*, !dbg !6720
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6720
  call void @llvm.dbg.value(metadata i8* %107, metadata !6530, metadata !DIExpression()), !dbg !6656
  %108 = inttoptr i32 %105 to i64*, !dbg !6720
  %109 = load i64, i64* %108, align 8, !dbg !6720
  store i64 %109, i64* %20, align 8, !dbg !6721
  br label %115, !dbg !6722

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6723
  call void @llvm.dbg.value(metadata i8* %111, metadata !6530, metadata !DIExpression()), !dbg !6656
  %112 = bitcast i8* %77 to i32*, !dbg !6723
  %113 = load i32, i32* %112, align 4, !dbg !6723
  %114 = sext i32 %113 to i64, !dbg !6724
  store i64 %114, i64* %20, align 8, !dbg !6725
  br label %115, !dbg !6726

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6727
  call void @llvm.dbg.value(metadata i8* %117, metadata !6530, metadata !DIExpression()), !dbg !6656
  %118 = trunc i24 %79 to i4, !dbg !6728
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6728

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6729
  %121 = ashr exact i64 %120, 56, !dbg !6729
  store i64 %121, i64* %20, align 8, !dbg !6732
  br label %177, !dbg !6733

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6734
  %124 = ashr exact i64 %123, 48, !dbg !6734
  store i64 %124, i64* %20, align 8, !dbg !6737
  br label %177, !dbg !6738

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6739

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6742
  call void @llvm.dbg.value(metadata i8* %127, metadata !6530, metadata !DIExpression()), !dbg !6656
  %128 = bitcast i8* %77 to i32*, !dbg !6742
  %129 = load i32, i32* %128, align 4, !dbg !6742
  %130 = zext i32 %129 to i64, !dbg !6742
  store i64 %130, i64* %20, align 8, !dbg !6744
  br label %157, !dbg !6745

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6746
  call void @llvm.dbg.value(metadata i8* %132, metadata !6530, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8* %132, metadata !6530, metadata !DIExpression()), !dbg !6656
  %133 = bitcast i8* %77 to i32*, !dbg !6746
  %134 = load i32, i32* %133, align 4, !dbg !6746
  %135 = zext i32 %134 to i64, !dbg !6746
  store i64 %135, i64* %20, align 8, !dbg !6746
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6748
  %138 = add i32 %137, 7, !dbg !6748
  %139 = and i32 %138, -8, !dbg !6748
  %140 = inttoptr i32 %139 to i8*, !dbg !6748
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6748
  call void @llvm.dbg.value(metadata i8* %141, metadata !6530, metadata !DIExpression()), !dbg !6656
  %142 = inttoptr i32 %139 to i64*, !dbg !6748
  %143 = load i64, i64* %142, align 8, !dbg !6748
  store i64 %143, i64* %20, align 8, !dbg !6749
  br label %157, !dbg !6750

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6751
  %146 = add i32 %145, 7, !dbg !6751
  %147 = and i32 %146, -8, !dbg !6751
  %148 = inttoptr i32 %147 to i8*, !dbg !6751
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6751
  call void @llvm.dbg.value(metadata i8* %149, metadata !6530, metadata !DIExpression()), !dbg !6656
  %150 = inttoptr i32 %147 to i64*, !dbg !6751
  %151 = load i64, i64* %150, align 8, !dbg !6751
  store i64 %151, i64* %20, align 8, !dbg !6752
  br label %157, !dbg !6753

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6754
  call void @llvm.dbg.value(metadata i8* %153, metadata !6530, metadata !DIExpression()), !dbg !6656
  %154 = bitcast i8* %77 to i32*, !dbg !6754
  %155 = load i32, i32* %154, align 4, !dbg !6754
  %156 = zext i32 %155 to i64, !dbg !6755
  store i64 %156, i64* %20, align 8, !dbg !6756
  br label %157, !dbg !6757

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6758
  call void @llvm.dbg.value(metadata i8* %159, metadata !6530, metadata !DIExpression()), !dbg !6656
  %160 = trunc i24 %79 to i4, !dbg !6759
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6759

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6760
  store i64 %162, i64* %20, align 8, !dbg !6763
  br label %177, !dbg !6764

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6765
  store i64 %164, i64* %20, align 8, !dbg !6768
  br label %177, !dbg !6769

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6770
  %167 = add i32 %166, 7, !dbg !6770
  %168 = and i32 %167, -8, !dbg !6770
  %169 = inttoptr i32 %168 to i8*, !dbg !6770
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6770
  call void @llvm.dbg.value(metadata i8* %170, metadata !6530, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8* %170, metadata !6530, metadata !DIExpression()), !dbg !6656
  %171 = inttoptr i32 %168 to double*, !dbg !6770
  %172 = load double, double* %171, align 8, !dbg !6770
  store double %172, double* %19, align 8, !dbg !6770
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6774
  call void @llvm.dbg.value(metadata i8* %174, metadata !6530, metadata !DIExpression()), !dbg !6656
  %175 = bitcast i8* %77 to i8**, !dbg !6774
  %176 = load i8*, i8** %175, align 4, !dbg !6774
  store i8* %176, i8** %18, align 8, !dbg !6777
  br label %177, !dbg !6778

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6670
  call void @llvm.dbg.value(metadata i8* %178, metadata !6530, metadata !DIExpression()), !dbg !6656
  %179 = and i24 %75, 3, !dbg !6779
  %180 = icmp eq i24 %179, 0, !dbg !6779
  br i1 %180, label %185, label %181, !dbg !6779

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !6780
  call void @llvm.dbg.value(metadata i32 %182, metadata !6605, metadata !DIExpression()), !dbg !6781
  %183 = icmp slt i32 %182, 0, !dbg !6782
  %184 = add i32 %182, %29, !dbg !6780
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6784
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6785

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !6786
  call void @llvm.dbg.value(metadata i32 %188, metadata !6609, metadata !DIExpression()), !dbg !6787
  %189 = icmp slt i32 %188, 0, !dbg !6788
  %190 = add i32 %29, 1, !dbg !6786
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6790
  call void @llvm.dbg.value(metadata i8* %192, metadata !6597, metadata !DIExpression()), !dbg !6670
  %193 = icmp sgt i32 %76, -1, !dbg !6791
  br i1 %193, label %194, label %196, !dbg !6793

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !6794
  call void @llvm.dbg.value(metadata i32 %195, metadata !6612, metadata !DIExpression()), !dbg !6796
  br label %241, !dbg !6797

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !6798
  call void @llvm.dbg.value(metadata i32 %197, metadata !6612, metadata !DIExpression()), !dbg !6796
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6597, metadata !DIExpression()), !dbg !6670
  %199 = load i64, i64* %20, align 8, !dbg !6800
  %200 = trunc i64 %199 to i8, !dbg !6801
  store i8 %200, i8* %10, align 1, !dbg !6802
  call void @llvm.dbg.value(metadata i8* %23, metadata !6598, metadata !DIExpression()), !dbg !6670
  br label %245, !dbg !6803

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6804
  %203 = icmp eq i24 %202, 0, !dbg !6804
  %204 = trunc i24 %75 to i8, !dbg !6806
  %205 = shl i8 %204, 1, !dbg !6806
  %206 = and i8 %205, 32, !dbg !6806
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6806
  call void @llvm.dbg.value(metadata i8 %207, metadata !6599, metadata !DIExpression()), !dbg !6670
  %208 = load i64, i64* %20, align 8, !dbg !6807
  call void @llvm.dbg.value(metadata i64 %208, metadata !6537, metadata !DIExpression()), !dbg !6656
  %209 = icmp slt i64 %208, 0, !dbg !6808
  br i1 %209, label %210, label %212, !dbg !6810

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6599, metadata !DIExpression()), !dbg !6670
  %211 = sub nsw i64 0, %208, !dbg !6811
  store i64 %211, i64* %20, align 8, !dbg !6813
  br label %212, !dbg !6814

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6670
  call void @llvm.dbg.value(metadata i8 %213, metadata !6599, metadata !DIExpression()), !dbg !6670
  %214 = load i64, i64* %20, align 8, !dbg !6815
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6816
  call void @llvm.dbg.value(metadata i8* %215, metadata !6597, metadata !DIExpression()), !dbg !6670
  br label %216, !dbg !6817

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6818
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6819
  call void @llvm.dbg.value(metadata i8* %218, metadata !6597, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8 %217, metadata !6599, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.label(metadata !6655), !dbg !6820
  %219 = icmp sgt i32 %76, -1, !dbg !6821
  br i1 %219, label %222, label %220, !dbg !6822

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6823
  br label %245, !dbg !6822

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6825
  %224 = sub i32 %22, %223, !dbg !6825
  call void @llvm.dbg.value(metadata i32 %224, metadata !6614, metadata !DIExpression()), !dbg !6826
  %225 = load i24, i24* %15, align 8, !dbg !6827
  %226 = and i24 %225, -65, !dbg !6827
  store i24 %226, i24* %15, align 8, !dbg !6827
  %227 = icmp ugt i32 %76, %224, !dbg !6828
  br i1 %227, label %228, label %245, !dbg !6830

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6831
  store i32 %229, i32* %16, align 4, !dbg !6833
  br label %245, !dbg !6834

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6835
  %232 = icmp eq i8* %231, null, !dbg !6837
  br i1 %232, label %245, label %233, !dbg !6838

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6839
  %235 = zext i32 %234 to i64, !dbg !6839
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6841
  call void @llvm.dbg.value(metadata i8* %236, metadata !6597, metadata !DIExpression()), !dbg !6670
  %237 = load i24, i24* %15, align 8, !dbg !6842
  %238 = or i24 %237, 1048576, !dbg !6842
  store i24 %238, i24* %15, align 8, !dbg !6842
  store i8 120, i8* %21, align 1, !dbg !6843
  br label %216, !dbg !6844

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6845
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !6848
  br label %363, !dbg !6849

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6850
  call void @llvm.dbg.value(metadata i32 %242, metadata !6612, metadata !DIExpression()), !dbg !6796
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6851
  call void @llvm.dbg.value(metadata i32 -1, metadata !6596, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i32 %29, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8* %192, metadata !6597, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8* %243, metadata !6598, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8 0, metadata !6599, metadata !DIExpression()), !dbg !6670
  %244 = icmp eq i8* %192, null, !dbg !6852
  br i1 %244, label %363, label %245, !dbg !6854, !llvm.loop !6666

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6823
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6670
  call void @llvm.dbg.value(metadata i32 0, metadata !6618, metadata !DIExpression()), !dbg !6670
  %250 = zext i8 %249 to i32, !dbg !6855
  %251 = icmp eq i8 %249, 0, !dbg !6857
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  call void @llvm.dbg.value(metadata i32 undef, metadata !6617, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  call void @llvm.dbg.value(metadata i32 undef, metadata !6617, metadata !DIExpression()), !dbg !6670
  %252 = icmp sgt i32 %58, 0, !dbg !6858
  br i1 %252, label %253, label %302, !dbg !6859

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6823
  %255 = icmp eq i24 %254, 0, !dbg !6823
  %256 = ptrtoint i8* %248 to i32, !dbg !6860
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  %257 = ptrtoint i8* %247 to i32, !dbg !6860
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  %258 = xor i1 %251, true, !dbg !6861
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  %259 = sext i1 %258 to i32, !dbg !6861
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  %260 = lshr i24 %246, 19, !dbg !6862
  %261 = and i24 %260, 1, !dbg !6862
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6862
  %263 = zext i24 %262 to i32, !dbg !6862
  %264 = add i32 %257, %259, !dbg !6862
  %265 = add i32 %256, %263, !dbg !6862
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  %266 = and i24 %246, 4194304, !dbg !6863
  %267 = icmp eq i24 %266, 0, !dbg !6863
  %268 = load i32, i32* %16, align 4, !dbg !6865
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6670
  call void @llvm.dbg.value(metadata i32 undef, metadata !6617, metadata !DIExpression()), !dbg !6670
  %269 = load i32, i32* %17, align 8, !dbg !6866
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6866
  call void @llvm.dbg.value(metadata i32 undef, metadata !6617, metadata !DIExpression()), !dbg !6670
  %271 = add i32 %264, %58, !dbg !6866
  %272 = add i32 %265, %268, !dbg !6866
  %273 = add i32 %272, %270, !dbg !6867
  %274 = sub i32 %271, %273, !dbg !6867
  call void @llvm.dbg.value(metadata i32 %274, metadata !6595, metadata !DIExpression()), !dbg !6670
  %275 = and i24 %246, 4, !dbg !6868
  %276 = icmp eq i24 %275, 0, !dbg !6868
  br i1 %276, label %277, label %302, !dbg !6869

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6619, metadata !DIExpression()), !dbg !6870
  %278 = and i24 %246, 64, !dbg !6871
  %279 = icmp eq i24 %278, 0, !dbg !6871
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6872
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6872
  %282 = select i1 %279, i32 32, i32 48, !dbg !6872
  br i1 %280, label %287, label %283, !dbg !6872

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !6873
  call void @llvm.dbg.value(metadata i32 %284, metadata !6624, metadata !DIExpression()), !dbg !6874
  %285 = icmp slt i32 %284, 0, !dbg !6875
  %286 = add i32 %29, 1, !dbg !6873
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6670
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %290, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i8 undef, metadata !6619, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i8 %288, metadata !6599, metadata !DIExpression()), !dbg !6670
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6877
  %292 = add i32 %291, -1, !dbg !6877
  br label %293, !dbg !6877

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6878
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %295, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %294, metadata !6595, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i32 %294, metadata !6595, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6670
  %296 = icmp sgt i32 %294, 0, !dbg !6879
  br i1 %296, label %297, label %302, !dbg !6877

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6880
  call void @llvm.dbg.value(metadata i32 %298, metadata !6595, metadata !DIExpression()), !dbg !6670
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !6881
  call void @llvm.dbg.value(metadata i32 %299, metadata !6630, metadata !DIExpression()), !dbg !6882
  %300 = icmp slt i32 %299, 0, !dbg !6883
  %301 = add i32 %295, 1, !dbg !6881
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %300, label %361, label %293, !llvm.loop !6885

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6670
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6670
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %305, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %304, metadata !6595, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i8 %303, metadata !6599, metadata !DIExpression()), !dbg !6670
  %306 = icmp eq i8 %303, 0, !dbg !6887
  br i1 %306, label %312, label %307, !dbg !6888

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6889
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !6890
  call void @llvm.dbg.value(metadata i32 %309, metadata !6633, metadata !DIExpression()), !dbg !6891
  %310 = icmp slt i32 %309, 0, !dbg !6892
  %311 = add i32 %305, 1, !dbg !6890
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %313, metadata !6536, metadata !DIExpression()), !dbg !6656
  %314 = lshr i24 %246, 20, !dbg !6894
  %315 = lshr i24 %246, 19, !dbg !6895
  %316 = or i24 %314, %315, !dbg !6896
  %317 = and i24 %316, 1, !dbg !6896
  %318 = icmp eq i24 %317, 0, !dbg !6896
  br i1 %318, label %323, label %319, !dbg !6897

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6898
  call void @llvm.dbg.value(metadata i32 %320, metadata !6637, metadata !DIExpression()), !dbg !6899
  %321 = icmp slt i32 %320, 0, !dbg !6900
  %322 = add i32 %313, 1, !dbg !6898
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %324, metadata !6536, metadata !DIExpression()), !dbg !6656
  %325 = and i24 %246, 1048576, !dbg !6902
  %326 = icmp eq i24 %325, 0, !dbg !6902
  br i1 %326, label %333, label %327, !dbg !6903

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6904
  %329 = zext i8 %328 to i32, !dbg !6904
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !6904
  call void @llvm.dbg.value(metadata i32 %330, metadata !6643, metadata !DIExpression()), !dbg !6905
  %331 = icmp slt i32 %330, 0, !dbg !6906
  %332 = add i32 %324, 1, !dbg !6904
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %334, metadata !6536, metadata !DIExpression()), !dbg !6656
  %335 = load i32, i32* %16, align 4, !dbg !6908
  call void @llvm.dbg.value(metadata i32 %335, metadata !6618, metadata !DIExpression()), !dbg !6670
  br label %336, !dbg !6909

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6910
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %338, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %337, metadata !6618, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6670
  %339 = icmp sgt i32 %337, 0, !dbg !6911
  br i1 %339, label %340, label %345, !dbg !6909

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6912
  call void @llvm.dbg.value(metadata i32 %341, metadata !6618, metadata !DIExpression()), !dbg !6670
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6913
  call void @llvm.dbg.value(metadata i32 %342, metadata !6647, metadata !DIExpression()), !dbg !6914
  %343 = icmp slt i32 %342, 0, !dbg !6915
  %344 = add i32 %338, 1, !dbg !6913
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %343, label %361, label %336, !llvm.loop !6917

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6919
  call void @llvm.dbg.value(metadata i32 %346, metadata !6650, metadata !DIExpression()), !dbg !6920
  %347 = icmp slt i32 %346, 0, !dbg !6921
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6919
  call void @llvm.dbg.value(metadata i32 %349, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %304, metadata !6595, metadata !DIExpression()), !dbg !6670
  %350 = icmp sgt i32 %304, 0, !dbg !6923
  br i1 %350, label %351, label %363, !dbg !6924

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6924
  %353 = add i32 %352, %338, !dbg !6924
  br label %354, !dbg !6924

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %355, metadata !6595, metadata !DIExpression()), !dbg !6670
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !6925
  call void @llvm.dbg.value(metadata i32 %356, metadata !6652, metadata !DIExpression()), !dbg !6926
  %357 = icmp slt i32 %356, 0, !dbg !6927
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6929
  call void @llvm.dbg.value(metadata i32 undef, metadata !6536, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6656
  call void @llvm.dbg.value(metadata i32 %359, metadata !6595, metadata !DIExpression()), !dbg !6670
  %360 = icmp sgt i32 %355, 1, !dbg !6923
  br i1 %360, label %354, label %363, !dbg !6924, !llvm.loop !6930

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6667
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6660
  call void @llvm.dbg.value(metadata i32 %364, metadata !6536, metadata !DIExpression()), !dbg !6656
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6667
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6656
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6932
  ret i32 %366, !dbg !6932
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6933 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6937, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.value(metadata i8* %1, metadata !6938, metadata !DIExpression()), !dbg !6939
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6940
  store i24 0, i24* %3, align 4, !dbg !6940
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6940
  store i8 0, i8* %4, align 1, !dbg !6940
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6940
  store i32 0, i32* %5, align 4, !dbg !6940
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6940
  store i32 0, i32* %6, align 4, !dbg !6940
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6941
  call void @llvm.dbg.value(metadata i8* %7, metadata !6938, metadata !DIExpression()), !dbg !6939
  %8 = load i8, i8* %7, align 1, !dbg !6942
  %9 = icmp eq i8 %8, 37, !dbg !6944
  br i1 %9, label %10, label %12, !dbg !6945

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6946
  call void @llvm.dbg.value(metadata i8* %11, metadata !6938, metadata !DIExpression()), !dbg !6939
  store i8 37, i8* %4, align 1, !dbg !6948
  br label %18, !dbg !6949

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6950
  call void @llvm.dbg.value(metadata i8* %13, metadata !6938, metadata !DIExpression()), !dbg !6939
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6951
  call void @llvm.dbg.value(metadata i8* %14, metadata !6938, metadata !DIExpression()), !dbg !6939
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6952
  call void @llvm.dbg.value(metadata i8* %15, metadata !6938, metadata !DIExpression()), !dbg !6939
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6953
  call void @llvm.dbg.value(metadata i8* %16, metadata !6938, metadata !DIExpression()), !dbg !6939
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6954
  call void @llvm.dbg.value(metadata i8* %17, metadata !6938, metadata !DIExpression()), !dbg !6939
  br label %18, !dbg !6955

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6939
  ret i8* %19, !dbg !6956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6957 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6961, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i8* %1, metadata !6962, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i8* %2, metadata !6963, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i8* %3, metadata !6964, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 0, metadata !6965, metadata !DIExpression()), !dbg !6968
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6969

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6970
  call void @llvm.dbg.value(metadata i32 %9, metadata !6965, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i8* %8, metadata !6963, metadata !DIExpression()), !dbg !6968
  %10 = icmp ult i8* %8, %3, !dbg !6971
  br i1 %10, label %11, label %13, !dbg !6972

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6973
  br label %17, !dbg !6972

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6974

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6975
  %16 = icmp eq i8 %15, 0, !dbg !6974
  br i1 %16, label %24, label %17, !dbg !6969

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6973
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6976
  call void @llvm.dbg.value(metadata i8* %19, metadata !6963, metadata !DIExpression()), !dbg !6968
  %20 = zext i8 %18 to i32, !dbg !6977
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %21, metadata !6966, metadata !DIExpression()), !dbg !6979
  %22 = icmp slt i32 %21, 0, !dbg !6980
  %23 = add i32 %9, 1, !dbg !6982
  call void @llvm.dbg.value(metadata i32 undef, metadata !6965, metadata !DIExpression()), !dbg !6968
  br i1 %22, label %24, label %7, !llvm.loop !6983

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6968
  ret i32 %25, !dbg !6985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6986 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6990, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6991, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8* %2, metadata !6992, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8* %3, metadata !6993, metadata !DIExpression()), !dbg !7000
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !7001
  %6 = load i8, i8* %5, align 1, !dbg !7001
  %7 = zext i8 %6 to i32, !dbg !7002
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !7003
  %9 = icmp eq i32 %8, 0, !dbg !7003
  call void @llvm.dbg.value(metadata i1 %9, metadata !6994, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7000
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !7004
  call void @llvm.dbg.value(metadata i32 %10, metadata !6995, metadata !DIExpression()), !dbg !7000
  %11 = ptrtoint i8* %3 to i32, !dbg !7005
  %12 = ptrtoint i8* %2 to i32, !dbg !7005
  %13 = sub i32 %11, %12, !dbg !7005
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !7006
  call void @llvm.dbg.value(metadata i8* %14, metadata !6997, metadata !DIExpression()), !dbg !7000
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !7007

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !7000
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6990, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i8* %18, metadata !6997, metadata !DIExpression()), !dbg !7000
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !7008
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !7009
  call void @llvm.dbg.value(metadata i32 %25, metadata !6998, metadata !DIExpression()), !dbg !7010
  %26 = icmp ult i32 %25, 10, !dbg !7011
  %27 = select i1 %26, i32 48, i32 %16, !dbg !7012
  %28 = add i32 %27, %25, !dbg !7010
  %29 = trunc i32 %28 to i8, !dbg !7012
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !7013
  call void @llvm.dbg.value(metadata i8* %30, metadata !6997, metadata !DIExpression()), !dbg !7000
  store i8 %29, i8* %30, align 1, !dbg !7014
  call void @llvm.dbg.value(metadata i64 %22, metadata !6990, metadata !DIExpression()), !dbg !7000
  %31 = icmp uge i64 %19, %15, !dbg !7015
  %32 = icmp ugt i8* %30, %2, !dbg !7016
  %33 = and i1 %31, %32, !dbg !7016
  br i1 %33, label %17, label %34, !dbg !7017, !llvm.loop !7018

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !7020
  %36 = load i24, i24* %35, align 4, !dbg !7020
  %37 = and i24 %36, 32, !dbg !7020
  %38 = icmp eq i24 %37, 0, !dbg !7020
  br i1 %38, label %44, label %39, !dbg !7022

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !7023

40:                                               ; preds = %39
  br label %41, !dbg !7025

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !7029
  store i24 %43, i24* %35, align 4, !dbg !7029
  br label %44, !dbg !7030

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !7030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !7031 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7037, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i8* %1, metadata !7038, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i32 %2, metadata !7039, metadata !DIExpression()), !dbg !7040
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !7041
  %5 = load i24, i24* %4, align 4, !dbg !7041
  %6 = lshr i24 %5, 11, !dbg !7041
  %7 = and i24 %6, 15, !dbg !7041
  %8 = zext i24 %7 to i32, !dbg !7041
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !7042

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !7043
  store i32 %2, i32* %10, align 4, !dbg !7045
  br label %28, !dbg !7046

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !7047
  store i8 %12, i8* %1, align 1, !dbg !7048
  br label %28, !dbg !7049

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !7050
  %15 = bitcast i8* %1 to i16*, !dbg !7051
  store i16 %14, i16* %15, align 2, !dbg !7052
  br label %28, !dbg !7053

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !7054
  store i32 %2, i32* %17, align 4, !dbg !7055
  br label %28, !dbg !7056

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !7057
  %20 = bitcast i8* %1 to i64*, !dbg !7058
  store i64 %19, i64* %20, align 8, !dbg !7059
  br label %28, !dbg !7060

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !7061
  %23 = bitcast i8* %1 to i64*, !dbg !7062
  store i64 %22, i64* %23, align 8, !dbg !7063
  br label %28, !dbg !7064

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !7065
  store i32 %2, i32* %25, align 4, !dbg !7066
  br label %28, !dbg !7067

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !7068
  store i32 %2, i32* %27, align 4, !dbg !7069
  br label %28, !dbg !7070

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !7071
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !7072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7075, metadata !DIExpression()), !dbg !7076
  %2 = add i32 %0, -65, !dbg !7077
  %3 = icmp ult i32 %2, 26, !dbg !7078
  %4 = zext i1 %3 to i32, !dbg !7078
  ret i32 %4, !dbg !7079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !7080 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7084, metadata !DIExpression()), !dbg !7085
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !7086

2:                                                ; preds = %1
  br label %4, !dbg !7087

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !7089

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !7090
  ret i32 %5, !dbg !7091
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !7092 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7094, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.value(metadata i8* %1, metadata !7095, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.value(metadata i8 1, metadata !7096, metadata !DIExpression()), !dbg !7097
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !7098

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !7096, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.value(metadata i8* %5, metadata !7095, metadata !DIExpression()), !dbg !7097
  %6 = load i8, i8* %5, align 1, !dbg !7099
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !7101

7:                                                ; preds = %4
  br label %11, !dbg !7102

8:                                                ; preds = %4
  br label %11, !dbg !7104

9:                                                ; preds = %4
  br label %11, !dbg !7105

10:                                               ; preds = %4
  br label %11, !dbg !7106

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !7107
  %14 = or i24 %13, %12, !dbg !7107
  store i24 %14, i24* %3, align 4, !dbg !7107
  call void @llvm.dbg.value(metadata i8 poison, metadata !7096, metadata !DIExpression()), !dbg !7097
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !7095, metadata !DIExpression()), !dbg !7097
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !7096, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.value(metadata i8* %15, metadata !7095, metadata !DIExpression()), !dbg !7097
  %17 = load i24, i24* %3, align 4, !dbg !7108
  %18 = and i24 %17, 68, !dbg !7110
  %19 = icmp eq i24 %18, 68, !dbg !7110
  br i1 %19, label %20, label %22, !dbg !7110

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !7111
  store i24 %21, i24* %3, align 4, !dbg !7111
  br label %22, !dbg !7113

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !7114
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !7115 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7117, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i8* %1, metadata !7118, metadata !DIExpression()), !dbg !7121
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !7122
  %5 = load i24, i24* %4, align 4, !dbg !7123
  %6 = or i24 %5, 128, !dbg !7123
  store i24 %6, i24* %4, align 4, !dbg !7123
  call void @llvm.dbg.value(metadata i8* %1, metadata !7118, metadata !DIExpression()), !dbg !7121
  %7 = load i8, i8* %1, align 1, !dbg !7124
  %8 = icmp eq i8 %7, 42, !dbg !7126
  br i1 %8, label %9, label %12, !dbg !7127

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !7128
  store i24 %10, i24* %4, align 4, !dbg !7128
  call void @llvm.dbg.value(metadata i8* %1, metadata !7118, metadata !DIExpression()), !dbg !7121
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7130
  call void @llvm.dbg.value(metadata i8* %11, metadata !7118, metadata !DIExpression()), !dbg !7121
  store i8* %11, i8** %3, align 4, !dbg !7130
  br label %29, !dbg !7131

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !7119, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i8** %3, metadata !7118, metadata !DIExpression(DW_OP_deref)), !dbg !7121
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !7132
  call void @llvm.dbg.value(metadata i32 %13, metadata !7120, metadata !DIExpression()), !dbg !7121
  %14 = load i8*, i8** %3, align 4, !dbg !7133
  call void @llvm.dbg.value(metadata i8* %14, metadata !7118, metadata !DIExpression()), !dbg !7121
  %15 = icmp eq i8* %14, %1, !dbg !7135
  br i1 %15, label %29, label %16, !dbg !7136

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !7137
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !7139
  store i32 %13, i32* %18, align 4, !dbg !7140
  %19 = lshr i32 %13, 31, !dbg !7141
  %20 = lshr i24 %17, 1, !dbg !7142
  %21 = and i24 %20, 1, !dbg !7142
  %22 = zext i24 %21 to i32, !dbg !7142
  %23 = or i32 %19, %22, !dbg !7142
  %24 = trunc i32 %23 to i24, !dbg !7142
  %25 = shl nuw nsw i24 %24, 1, !dbg !7142
  %26 = and i24 %17, -131, !dbg !7142
  %27 = or i24 %26, 128, !dbg !7142
  %28 = or i24 %25, %27, !dbg !7142
  store i24 %28, i24* %4, align 4, !dbg !7142
  br label %29, !dbg !7143

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !7121
  ret i8* %30, !dbg !7144
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !7145 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7147, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.value(metadata i8* %1, metadata !7148, metadata !DIExpression()), !dbg !7150
  %4 = load i8, i8* %1, align 1, !dbg !7151
  %5 = icmp eq i8 %4, 46, !dbg !7152
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !7153
  %7 = load i24, i24* %6, align 4, !dbg !7154
  %8 = select i1 %5, i24 512, i24 0, !dbg !7154
  %9 = and i24 %7, -513, !dbg !7154
  %10 = or i24 %9, %8, !dbg !7154
  store i24 %10, i24* %6, align 4, !dbg !7154
  br i1 %5, label %11, label %32, !dbg !7155

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !7148, metadata !DIExpression()), !dbg !7150
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7156
  call void @llvm.dbg.value(metadata i8* %12, metadata !7148, metadata !DIExpression()), !dbg !7150
  store i8* %12, i8** %3, align 4, !dbg !7156
  %13 = load i8, i8* %12, align 1, !dbg !7157
  %14 = icmp eq i8 %13, 42, !dbg !7159
  br i1 %14, label %15, label %18, !dbg !7160

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !7161
  store i24 %16, i24* %6, align 4, !dbg !7161
  call void @llvm.dbg.value(metadata i8* %12, metadata !7148, metadata !DIExpression()), !dbg !7150
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7163
  call void @llvm.dbg.value(metadata i8* %17, metadata !7148, metadata !DIExpression()), !dbg !7150
  store i8* %17, i8** %3, align 4, !dbg !7163
  br label %32, !dbg !7164

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !7148, metadata !DIExpression(DW_OP_deref)), !dbg !7150
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !7165
  call void @llvm.dbg.value(metadata i32 %19, metadata !7149, metadata !DIExpression()), !dbg !7150
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !7166
  store i32 %19, i32* %20, align 4, !dbg !7167
  %21 = lshr i32 %19, 31, !dbg !7168
  %22 = load i24, i24* %6, align 4, !dbg !7169
  %23 = lshr i24 %22, 1, !dbg !7169
  %24 = and i24 %23, 1, !dbg !7169
  %25 = zext i24 %24 to i32, !dbg !7169
  %26 = or i32 %21, %25, !dbg !7169
  %27 = trunc i32 %26 to i24, !dbg !7169
  %28 = shl nuw nsw i24 %27, 1, !dbg !7169
  %29 = and i24 %22, -3, !dbg !7169
  %30 = or i24 %28, %29, !dbg !7169
  store i24 %30, i24* %6, align 4, !dbg !7169
  %31 = load i8*, i8** %3, align 4, !dbg !7170
  call void @llvm.dbg.value(metadata i8* %31, metadata !7148, metadata !DIExpression()), !dbg !7150
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !7150
  ret i8* %33, !dbg !7171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !7172 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7174, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.value(metadata i8* %1, metadata !7175, metadata !DIExpression()), !dbg !7176
  %3 = load i8, i8* %1, align 1, !dbg !7177
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !7178

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7179
  call void @llvm.dbg.value(metadata i8* %5, metadata !7175, metadata !DIExpression()), !dbg !7176
  %6 = load i8, i8* %5, align 1, !dbg !7182
  %7 = icmp eq i8 %6, 104, !dbg !7183
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !7184
  %9 = load i24, i24* %8, align 4, !dbg !7184
  %10 = and i24 %9, -30721, !dbg !7184
  br i1 %7, label %11, label %14, !dbg !7185

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !7186
  store i24 %12, i24* %8, align 4, !dbg !7186
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7188
  call void @llvm.dbg.value(metadata i8* %13, metadata !7175, metadata !DIExpression()), !dbg !7176
  br label %56, !dbg !7189

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !7190
  store i24 %15, i24* %8, align 4, !dbg !7190
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7192
  call void @llvm.dbg.value(metadata i8* %17, metadata !7175, metadata !DIExpression()), !dbg !7176
  %18 = load i8, i8* %17, align 1, !dbg !7194
  %19 = icmp eq i8 %18, 108, !dbg !7195
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !7196
  %21 = load i24, i24* %20, align 4, !dbg !7196
  %22 = and i24 %21, -30721, !dbg !7196
  br i1 %19, label %23, label %26, !dbg !7197

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !7198
  store i24 %24, i24* %20, align 4, !dbg !7198
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7200
  call void @llvm.dbg.value(metadata i8* %25, metadata !7175, metadata !DIExpression()), !dbg !7176
  br label %56, !dbg !7201

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !7202
  store i24 %27, i24* %20, align 4, !dbg !7202
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !7204
  %30 = load i24, i24* %29, align 4, !dbg !7205
  %31 = and i24 %30, -30721, !dbg !7205
  %32 = or i24 %31, 10240, !dbg !7205
  store i24 %32, i24* %29, align 4, !dbg !7205
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7206
  call void @llvm.dbg.value(metadata i8* %33, metadata !7175, metadata !DIExpression()), !dbg !7176
  br label %56, !dbg !7207

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !7208
  %36 = load i24, i24* %35, align 4, !dbg !7209
  %37 = and i24 %36, -30721, !dbg !7209
  %38 = or i24 %37, 12288, !dbg !7209
  store i24 %38, i24* %35, align 4, !dbg !7209
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7210
  call void @llvm.dbg.value(metadata i8* %39, metadata !7175, metadata !DIExpression()), !dbg !7176
  br label %56, !dbg !7211

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !7212
  %42 = load i24, i24* %41, align 4, !dbg !7213
  %43 = and i24 %42, -30721, !dbg !7213
  %44 = or i24 %43, 14336, !dbg !7213
  store i24 %44, i24* %41, align 4, !dbg !7213
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7214
  call void @llvm.dbg.value(metadata i8* %45, metadata !7175, metadata !DIExpression()), !dbg !7176
  br label %56, !dbg !7215

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !7216
  %48 = load i24, i24* %47, align 4, !dbg !7217
  %49 = and i24 %48, -30723, !dbg !7217
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7218
  call void @llvm.dbg.value(metadata i8* %50, metadata !7175, metadata !DIExpression()), !dbg !7176
  %51 = or i24 %49, 16386, !dbg !7219
  store i24 %51, i24* %47, align 4, !dbg !7219
  br label %56, !dbg !7220

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !7221
  %54 = load i24, i24* %53, align 4, !dbg !7222
  %55 = and i24 %54, -30721, !dbg !7222
  store i24 %55, i24* %53, align 4, !dbg !7222
  br label %56, !dbg !7223

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !7175, metadata !DIExpression()), !dbg !7176
  ret i8* %57, !dbg !7224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !7225 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !7227, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %1, metadata !7228, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8 0, metadata !7229, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8* %1, metadata !7228, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7232
  %3 = load i8, i8* %1, align 1, !dbg !7233
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !7234
  store i8 %3, i8* %4, align 1, !dbg !7235
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !7236

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !7237

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !7238
  %9 = load i24, i24* %8, align 4, !dbg !7238
  %10 = and i24 %9, -458753, !dbg !7238
  %11 = or i24 %10, %7, !dbg !7238
  call void @llvm.dbg.label(metadata !7230), !dbg !7239
  %12 = and i24 %9, 30720, !dbg !7240
  %13 = icmp eq i24 %12, 16384, !dbg !7240
  %14 = zext i1 %13 to i24, !dbg !7242
  %15 = or i24 %11, %14, !dbg !7242
  %16 = icmp eq i8 %3, 99, !dbg !7243
  br i1 %16, label %17, label %43, !dbg !7245

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !7246
  %19 = icmp ne i24 %18, 0, !dbg !7246
  call void @llvm.dbg.value(metadata i1 %19, metadata !7229, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7232
  br label %43, !dbg !7248

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !7249
  %22 = load i24, i24* %21, align 4, !dbg !7250
  %23 = and i24 %22, -458753, !dbg !7250
  %24 = or i24 %23, 262144, !dbg !7250
  call void @llvm.dbg.value(metadata i8 1, metadata !7229, metadata !DIExpression()), !dbg !7232
  br label %43, !dbg !7251

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !7254
  %27 = load i24, i24* %26, align 4, !dbg !7255
  %28 = and i24 %27, -458753, !dbg !7255
  %29 = or i24 %28, 196608, !dbg !7255
  %30 = and i24 %27, 30720, !dbg !7256
  %31 = icmp eq i24 %30, 16384, !dbg !7256
  br label %43, !dbg !7258

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !7259
  %34 = load i24, i24* %33, align 4, !dbg !7260
  %35 = and i24 %34, -458753, !dbg !7260
  %36 = or i24 %35, 196608, !dbg !7260
  %37 = and i24 %34, 30720, !dbg !7261
  %38 = icmp ne i24 %37, 0, !dbg !7261
  br label %43, !dbg !7263

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !7264
  %41 = load i24, i24* %40, align 4, !dbg !7265
  %42 = or i24 %41, 1, !dbg !7265
  br label %43, !dbg !7266

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !7267
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !7268
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7269
  call void @llvm.dbg.value(metadata i8* %48, metadata !7228, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata i8 poison, metadata !7229, metadata !DIExpression()), !dbg !7232
  %49 = lshr i24 %44, 1, !dbg !7267
  %50 = and i24 %49, 1, !dbg !7267
  %51 = zext i24 %50 to i32, !dbg !7267
  %52 = or i32 %51, %47, !dbg !7267
  %53 = trunc i32 %52 to i24, !dbg !7267
  %54 = shl nuw nsw i24 %53, 1, !dbg !7267
  %55 = and i24 %44, -3, !dbg !7267
  %56 = or i24 %54, %55, !dbg !7267
  store i24 %56, i24* %46, align 4, !dbg !7267
  ret i8* %48, !dbg !7270
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !7271 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !7275, metadata !DIExpression()), !dbg !7278
  %2 = load i8*, i8** %0, align 4, !dbg !7279
  call void @llvm.dbg.value(metadata i8* %2, metadata !7276, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.value(metadata i32 0, metadata !7277, metadata !DIExpression()), !dbg !7278
  %3 = load i8, i8* %2, align 1, !dbg !7280
  %4 = zext i8 %3 to i32, !dbg !7281
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !7282
  %6 = icmp eq i32 %5, 0, !dbg !7283
  br i1 %6, label %19, label %7, !dbg !7283

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7277, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.value(metadata i8* %10, metadata !7276, metadata !DIExpression()), !dbg !7278
  %11 = mul i32 %9, 10, !dbg !7284
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7286
  call void @llvm.dbg.value(metadata i8* %12, metadata !7276, metadata !DIExpression()), !dbg !7278
  %13 = add i32 %11, -48, !dbg !7287
  %14 = add i32 %13, %8, !dbg !7288
  call void @llvm.dbg.value(metadata i32 %14, metadata !7277, metadata !DIExpression()), !dbg !7278
  %15 = load i8, i8* %12, align 1, !dbg !7280
  %16 = zext i8 %15 to i32, !dbg !7281
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !7282
  %18 = icmp eq i32 %17, 0, !dbg !7283
  br i1 %18, label %19, label %7, !dbg !7283, !llvm.loop !7289

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !7278
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !7278
  store i8* %20, i8** %0, align 4, !dbg !7291
  ret i32 %21, !dbg !7292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !7293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7295, metadata !DIExpression()), !dbg !7296
  %2 = add i32 %0, -48, !dbg !7297
  %3 = icmp ult i32 %2, 10, !dbg !7298
  %4 = zext i1 %3 to i32, !dbg !7298
  ret i32 %4, !dbg !7299
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !7300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7305, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 %1, metadata !7306, metadata !DIExpression()), !dbg !7307
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !7308, !srcloc !7310
  ret void, !dbg !7311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7312 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7314, metadata !DIExpression()), !dbg !7322
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7323
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7323
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7315, metadata !DIExpression()), !dbg !7324
  call void @llvm.va_start(i8* nonnull %3), !dbg !7325
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7326
  %5 = load i32, i32* %4, align 4, !dbg !7326
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7326
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !7326
  call void @llvm.va_end(i8* nonnull %3), !dbg !7327
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7328
  ret void, !dbg !7328
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !7329 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #25, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !7411, !srcloc !7412
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !7413, !srcloc !7414
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !7415, !srcloc !7416
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !7417, !srcloc !7418
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !7419, !srcloc !7420
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !7421, !srcloc !7422
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !7423, !srcloc !7424
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !7425, !srcloc !7426
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !7427, !srcloc !7428
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !7429, !srcloc !7430
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !7431, !srcloc !7432
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !7433, !srcloc !7434
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !7435, !srcloc !7436
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !7437, !srcloc !7438
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !7439, !srcloc !7440
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !7441, !srcloc !7442
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !7443, !srcloc !7444
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !7445, !srcloc !7446
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !7447, !srcloc !7448
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !7449, !srcloc !7450
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !7451, !srcloc !7452
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !7453, !srcloc !7454
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !7455, !srcloc !7456
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !7457, !srcloc !7458
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !7459, !srcloc !7460
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !7461, !srcloc !7462
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !7463, !srcloc !7464
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !7465, !srcloc !7466
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !7467, !srcloc !7468
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !7469, !srcloc !7470
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !7471, !srcloc !7472
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !7473, !srcloc !7474
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !7475, !srcloc !7476
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !7477, !srcloc !7478
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !7479, !srcloc !7480
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !7481, !srcloc !7482
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !7483, !srcloc !7484
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !7485, !srcloc !7486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !7487, !srcloc !7488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !7489, !srcloc !7490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !7491, !srcloc !7492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !7493, !srcloc !7494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !7495, !srcloc !7496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !7497, !srcloc !7498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !7499, !srcloc !7500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !7501, !srcloc !7502
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !7503, !srcloc !7504
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !7505, !srcloc !7506
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !7507, !srcloc !7508
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !7509, !srcloc !7510
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !7511, !srcloc !7512
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #25, !dbg !7513, !srcloc !7514
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !7515, !srcloc !7516
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !7517, !srcloc !7518
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !7519, !srcloc !7520
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !7521, !srcloc !7522
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !7523, !srcloc !7524
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #25, !dbg !7525, !srcloc !7526
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7527, !srcloc !7528
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !7529, !srcloc !7530
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !7531, !srcloc !7532
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !7533, !srcloc !7534
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !7535, !srcloc !7536
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !7537, !srcloc !7538
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !7539, !srcloc !7540
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !7541, !srcloc !7542
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !7543, !srcloc !7544
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !7545, !srcloc !7546
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !7547, !srcloc !7548
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !7549, !srcloc !7550
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !7551, !srcloc !7552
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !7553, !srcloc !7554
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !7555, !srcloc !7556
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !7557, !srcloc !7558
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !7559, !srcloc !7560
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !7561, !srcloc !7562
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !7563, !srcloc !7564
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !7565, !srcloc !7566
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !7567, !srcloc !7568
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !7569, !srcloc !7570
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !7571, !srcloc !7572
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !7573, !srcloc !7574
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !7575, !srcloc !7576
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !7577, !srcloc !7578
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !7579, !srcloc !7580
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !7581, !srcloc !7582
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !7583, !srcloc !7584
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !7585, !srcloc !7586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !7587, !srcloc !7588
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !7589, !srcloc !7590
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !7591, !srcloc !7592
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !7593, !srcloc !7594
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !7595, !srcloc !7596
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !7597, !srcloc !7598
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !7599, !srcloc !7600
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !7601, !srcloc !7602
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !7603, !srcloc !7604
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !7605, !srcloc !7606
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !7607, !srcloc !7608
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !7609, !srcloc !7610
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !7611, !srcloc !7612
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !7613, !srcloc !7614
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !7615, !srcloc !7616
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !7617, !srcloc !7618
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !7619, !srcloc !7620
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !7621, !srcloc !7622
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !7623, !srcloc !7624
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !7625, !srcloc !7626
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !7627, !srcloc !7628
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !7629, !srcloc !7630
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !7631, !srcloc !7632
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !7633, !srcloc !7634
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !7635, !srcloc !7636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !7637, !srcloc !7638
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7639, !srcloc !7640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !7641, !srcloc !7642
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !7643, !srcloc !7644
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !7645, !srcloc !7646
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !7647, !srcloc !7648
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !7649, !srcloc !7650
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !7651, !srcloc !7652
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !7653, !srcloc !7654
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !7655, !srcloc !7656
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !7657, !srcloc !7658
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !7659, !srcloc !7660
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !7661, !srcloc !7662
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7663, !srcloc !7664
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !7665, !srcloc !7666
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !7667, !srcloc !7668
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !7669, !srcloc !7670
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !7671, !srcloc !7672
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !7673, !srcloc !7674
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !7675, !srcloc !7676
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !7677, !srcloc !7678
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !7679, !srcloc !7680
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !7681, !srcloc !7682
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !7683, !srcloc !7684
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !7685, !srcloc !7686
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !7687, !srcloc !7688
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !7689, !srcloc !7690
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !7691, !srcloc !7692
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !7693, !srcloc !7694
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !7695, !srcloc !7696
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !7697, !srcloc !7698
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !7699, !srcloc !7700
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !7701, !srcloc !7702
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !7703, !srcloc !7704
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !7705, !srcloc !7706
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !7707, !srcloc !7708
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !7709, !srcloc !7710
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !7711, !srcloc !7712
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !7713, !srcloc !7714
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !7715, !srcloc !7716
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !7717, !srcloc !7718
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !7719, !srcloc !7720
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !7721, !srcloc !7722
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !7723, !srcloc !7724
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !7725, !srcloc !7726
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !7727, !srcloc !7728
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !7729, !srcloc !7730
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !7731, !srcloc !7732
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !7733, !srcloc !7734
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !7735, !srcloc !7736
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7737, !srcloc !7738
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !7739, !srcloc !7740
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !7741, !srcloc !7742
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !7743, !srcloc !7744
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !7745, !srcloc !7746
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !7747, !srcloc !7748
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7749, !srcloc !7750
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !7751, !srcloc !7752
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !7753, !srcloc !7754
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !7755, !srcloc !7756
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !7757, !srcloc !7758
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !7759, !srcloc !7760
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !7761, !srcloc !7762
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !7763, !srcloc !7764
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !7765, !srcloc !7766
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !7767, !srcloc !7768
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !7769, !srcloc !7770
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !7771, !srcloc !7772
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7773, !srcloc !7774
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !7775, !srcloc !7776
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !7777, !srcloc !7778
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !7779, !srcloc !7780
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !7781, !srcloc !7782
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !7783, !srcloc !7784
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !7785, !srcloc !7786
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !7787, !srcloc !7788
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !7789, !srcloc !7790
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !7791, !srcloc !7792
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !7793, !srcloc !7794
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !7795, !srcloc !7796
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !7797, !srcloc !7798
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !7799, !srcloc !7800
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !7801, !srcloc !7802
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !7803, !srcloc !7804
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !7805, !srcloc !7806
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !7807, !srcloc !7808
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !7809, !srcloc !7810
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !7811, !srcloc !7812
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !7813, !srcloc !7814
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !7815, !srcloc !7816
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !7817, !srcloc !7818
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7819, !srcloc !7820
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !7821, !srcloc !7822
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !7823, !srcloc !7824
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !7825, !srcloc !7826
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !7827, !srcloc !7828
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7829, !srcloc !7830
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !7831, !srcloc !7832
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !7833, !srcloc !7834
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !7835, !srcloc !7836
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7837, !srcloc !7838
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !7839, !srcloc !7840
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !7841, !srcloc !7842
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !7843, !srcloc !7844
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !7845, !srcloc !7846
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !7847, !srcloc !7848
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !7849, !srcloc !7850
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !7851, !srcloc !7852
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !7853, !srcloc !7854
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !7855, !srcloc !7856
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !7857, !srcloc !7858
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !7859, !srcloc !7860
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !7861, !srcloc !7862
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !7863, !srcloc !7864
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !7865, !srcloc !7866
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !7867, !srcloc !7868
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !7869, !srcloc !7870
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !7871, !srcloc !7872
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !7873, !srcloc !7874
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7875, !srcloc !7876
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !7877, !srcloc !7878
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !7879, !srcloc !7880
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !7881, !srcloc !7882
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !7883, !srcloc !7884
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !7885, !srcloc !7886
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !7887, !srcloc !7888
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !7889, !srcloc !7890
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !7891, !srcloc !7892
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !7893, !srcloc !7894
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !7895, !srcloc !7896
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !7897, !srcloc !7898
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !7899, !srcloc !7900
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !7901, !srcloc !7902
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !7903, !srcloc !7904
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !7905, !srcloc !7906
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !7907, !srcloc !7908
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !7909, !srcloc !7910
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !7911, !srcloc !7912
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !7913, !srcloc !7914
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,2\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !7915, !srcloc !7916
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #25, !dbg !7917, !srcloc !7918
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !7919, !srcloc !7920
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !7921, !srcloc !7922
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7923, !srcloc !7924
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !7925, !srcloc !7926
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7927, !srcloc !7928
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7929, !srcloc !7930
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !7931, !srcloc !7932
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !7933, !srcloc !7934
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !7935, !srcloc !7936
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !7937, !srcloc !7938
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !7939, !srcloc !7940
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !7941, !srcloc !7942
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !7943, !srcloc !7944
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !7945, !srcloc !7946
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !7947, !srcloc !7948
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !7949, !srcloc !7950
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !7951, !srcloc !7952
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !7953, !srcloc !7954
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !7955, !srcloc !7956
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !7957, !srcloc !7958
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !7959, !srcloc !7960
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !7961, !srcloc !7962
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !7963, !srcloc !7964
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !7965, !srcloc !7966
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !7967, !srcloc !7968
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !7969, !srcloc !7970
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !7971, !srcloc !7972
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !7973, !srcloc !7974
  ret void, !dbg !7975
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7978, metadata !DIExpression()), !dbg !7980
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !7981
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !7982
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !7983, !srcloc !7992
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7983
  call void @llvm.dbg.value(metadata i32 %3, metadata !7989, metadata !DIExpression()) #25, !dbg !7993
  call void @llvm.dbg.value(metadata i32 undef, metadata !7990, metadata !DIExpression()) #25, !dbg !7993
  call void @llvm.dbg.value(metadata i32 %3, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.value(metadata i32 %3, metadata !7994, metadata !DIExpression()) #25, !dbg !7999
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !8001, !srcloc !8002
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !8003
  ret i32 0, !dbg !8004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #16 !dbg !8005 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8007
  %2 = or i32 %1, 512, !dbg !8007
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8007
  ret void, !dbg !8008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #16 !dbg !8009 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8010
  %2 = or i32 %1, 1024, !dbg !8010
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8010
  ret void, !dbg !8011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !8012 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8014, metadata !DIExpression()), !dbg !8015
  ret i32 0, !dbg !8016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !8017 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8020, metadata !DIExpression()), !dbg !8028
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !8029
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !8029
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !8021, metadata !DIExpression()), !dbg !8030
  call void @llvm.va_start(i8* nonnull %3), !dbg !8031
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !8032
  %5 = load i32, i32* %4, align 4, !dbg !8032
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !8032
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !8032
  call void @llvm.va_end(i8* nonnull %3), !dbg !8033
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !8034
  ret void, !dbg !8034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !8035 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8040, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i8* %0, metadata !8039, metadata !DIExpression()), !dbg !8041
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #26, !dbg !8042
  ret void, !dbg !8043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8048, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %1, metadata !8049, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %2, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %1, metadata !8051, metadata !DIExpression()), !dbg !8052
  %4 = icmp eq i32 %2, 0, !dbg !8053
  br i1 %4, label %14, label %5, !dbg !8054

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !8052
  %7 = zext i8 %6 to i32
  br label %8, !dbg !8054

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 %10, metadata !8050, metadata !DIExpression()), !dbg !8052
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i32 noundef %7) #26, !dbg !8055
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !8057
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !8058
  call void @llvm.dbg.value(metadata i32 %11, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8* %12, metadata !8051, metadata !DIExpression()), !dbg !8052
  br i1 %13, label %14, label %8, !dbg !8058, !llvm.loop !8059

14:                                               ; preds = %8, %3
  ret void, !dbg !8061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !8062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8067, metadata !DIExpression()), !dbg !8068
  %2 = add i32 %0, -1, !dbg !8069
  %3 = icmp ult i32 %2, 4, !dbg !8069
  %4 = shl i32 %2, 3, !dbg !8069
  %5 = lshr i32 1145657157, %4, !dbg !8069
  %6 = trunc i32 %5 to i8, !dbg !8069
  %7 = select i1 %3, i8 %6, i8 63, !dbg !8069
  ret i8 %7, !dbg !8070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8075, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 %1, metadata !8076, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i32 0, metadata !8077, metadata !DIExpression()), !dbg !8087
  br label %4, !dbg !8088

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.51, i32 0, i32 0)) #26, !dbg !8089
  call void @llvm.dbg.value(metadata i32 0, metadata !8079, metadata !DIExpression()), !dbg !8090
  br label %16, !dbg !8091

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8077, metadata !DIExpression()), !dbg !8087
  %6 = icmp ult i32 %5, %1, !dbg !8092
  br i1 %6, label %7, label %11, !dbg !8096

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !8097
  %9 = load i8, i8* %8, align 1, !dbg !8097
  %10 = zext i8 %9 to i32, !dbg !8099
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef %10) #26, !dbg !8100
  br label %12, !dbg !8101

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.53, i32 0, i32 0)) #26, !dbg !8102
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %13, metadata !8077, metadata !DIExpression()), !dbg !8087
  %14 = icmp eq i32 %13, 8, !dbg !8105
  br i1 %14, label %3, label %4, !dbg !8088, !llvm.loop !8106

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.54, i32 0, i32 0)) #26, !dbg !8108
  ret void, !dbg !8109

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !8079, metadata !DIExpression()), !dbg !8090
  %18 = icmp ult i32 %17, %1, !dbg !8110
  br i1 %18, label %19, label %26, !dbg !8111

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !8112
  %21 = load i8, i8* %20, align 1, !dbg !8112
  call void @llvm.dbg.value(metadata i8 %21, metadata !8081, metadata !DIExpression()), !dbg !8113
  %22 = zext i8 %21 to i32, !dbg !8114
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !8115
  %24 = icmp eq i32 %23, 0, !dbg !8116
  %25 = select i1 %24, i32 46, i32 %22, !dbg !8115
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef %25) #26, !dbg !8117
  br label %27, !dbg !8118

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.56, i32 0, i32 0)) #26, !dbg !8119
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !8121
  call void @llvm.dbg.value(metadata i32 %28, metadata !8079, metadata !DIExpression()), !dbg !8090
  %29 = icmp eq i32 %28, 8, !dbg !8122
  br i1 %29, label %15, label %16, !dbg !8091, !llvm.loop !8123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !8125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8127, metadata !DIExpression()), !dbg !8128
  %2 = add i32 %0, -32, !dbg !8129
  %3 = icmp ult i32 %2, 95, !dbg !8129
  %4 = zext i1 %3 to i32, !dbg !8129
  ret i32 %4, !dbg !8130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8180, metadata !DIExpression()), !dbg !8182
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8181, metadata !DIExpression()), !dbg !8182
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8183
  br i1 %3, label %5, label %4, !dbg !8185

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !8186
  br label %5, !dbg !8188

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !8189
  ret void, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8191 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8195, metadata !DIExpression()), !dbg !8196
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8197
  %3 = load i32, i32* %2, align 4, !dbg !8197
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8197
  %5 = load i32, i32* %4, align 4, !dbg !8197
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8197
  %7 = load i32, i32* %6, align 4, !dbg !8197
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.57, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #26, !dbg !8197
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8202
  %9 = load i32, i32* %8, align 4, !dbg !8202
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8202
  %11 = load i32, i32* %10, align 4, !dbg !8202
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8202
  %13 = load i32, i32* %12, align 4, !dbg !8202
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.58, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #26, !dbg !8202
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8207
  %15 = load i32, i32* %14, align 4, !dbg !8207
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.59, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #26, !dbg !8207
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8212
  %17 = load i32, i32* %16, align 4, !dbg !8212
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.60, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !8212
  ret void, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8218 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8235, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8236, metadata !DIExpression()), !dbg !8238
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8239
  %4 = load i32, i32* %3, align 4, !dbg !8239
  call void @llvm.dbg.value(metadata i32 %4, metadata !8237, metadata !DIExpression()), !dbg !8238
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !8240
  ret void, !dbg !8241
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !8242 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8246, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i8* %0, metadata !8247, metadata !DIExpression()), !dbg !8249
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8250
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8250
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8248, metadata !DIExpression()), !dbg !8251
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8251
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8252
  %5 = bitcast i8* %4 to i32*, !dbg !8252
  %6 = load i32, i32* %5, align 4, !dbg !8252
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8253
  store i32 %6, i32* %7, align 4, !dbg !8254
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !8255
  unreachable, !dbg !8256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8260, metadata !DIExpression()), !dbg !8261
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !8262
  ret void, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8268, metadata !DIExpression()), !dbg !8269
  %2 = icmp sgt i32 %0, -1, !dbg !8270
  br i1 %2, label %3, label %8, !dbg !8272

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8273, !srcloc !8275
  %4 = and i32 %0, 31, !dbg !8276
  %5 = shl nuw i32 1, %4, !dbg !8277
  %6 = lshr i32 %0, 5, !dbg !8278
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8279
  store volatile i32 %5, i32* %7, align 4, !dbg !8280
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8281, !srcloc !8282
  br label %8, !dbg !8283

8:                                                ; preds = %3, %1
  ret void, !dbg !8284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8287, metadata !DIExpression()), !dbg !8288
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !8289
  ret void, !dbg !8290
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8293, metadata !DIExpression()), !dbg !8294
  %2 = icmp sgt i32 %0, -1, !dbg !8295
  br i1 %2, label %3, label %8, !dbg !8297

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8298
  %5 = shl nuw i32 1, %4, !dbg !8300
  %6 = lshr i32 %0, 5, !dbg !8301
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8302
  store volatile i32 %5, i32* %7, align 4, !dbg !8303
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8304, !srcloc !8308
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8309, !srcloc !8312
  br label %8, !dbg !8313

8:                                                ; preds = %3, %1
  ret void, !dbg !8314
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8319, metadata !DIExpression()), !dbg !8320
  %2 = lshr i32 %0, 5, !dbg !8321
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8322
  %4 = load volatile i32, i32* %3, align 4, !dbg !8322
  %5 = and i32 %0, 31, !dbg !8323
  %6 = shl nuw i32 1, %5, !dbg !8323
  %7 = and i32 %4, %6, !dbg !8324
  ret i32 %7, !dbg !8325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8330, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %1, metadata !8331, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %2, metadata !8332, metadata !DIExpression()), !dbg !8333
  %4 = add i32 %1, 1, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %4, metadata !8331, metadata !DIExpression()), !dbg !8333
  %5 = icmp ult i32 %4, 16, !dbg !8337
  br i1 %5, label %7, label %6, !dbg !8340

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.63, i32 0, i32 0), i32 noundef 94) #26, !dbg !8341
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.64, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !8341
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.63, i32 0, i32 0), i32 noundef 94) #26, !dbg !8341
  unreachable, !dbg !8341

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !8343
  ret void, !dbg !8344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !8345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8349, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %1, metadata !8350, metadata !DIExpression()), !dbg !8351
  %3 = trunc i32 %1 to i8, !dbg !8352
  %4 = shl i8 %3, 4, !dbg !8352
  %5 = and i32 %0, 15, !dbg !8354
  %6 = add nsw i32 %5, -4, !dbg !8354
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8354
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8354
  %9 = icmp slt i32 %0, 0, !dbg !8354
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8354
  store volatile i8 %4, i8* %10, align 1, !dbg !8352
  ret void, !dbg !8355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8356 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8358, metadata !DIExpression()), !dbg !8359
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !8360
  ret void, !dbg !8361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8362 {
  tail call void @z_SysNmiOnReset() #26, !dbg !8364
  tail call void @z_arm_int_exit() #26, !dbg !8365
  ret void, !dbg !8366
}

; Function Attrs: optsize
declare !dbg !8367 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8368 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !8370 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !8372
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !8373
  tail call void @z_bss_zero() #26, !dbg !8374
  tail call void @z_data_copy() #26, !dbg !8375
  tail call void @z_arm_interrupt_init() #26, !dbg !8376
  tail call void @z_cstart() #29, !dbg !8377
  unreachable, !dbg !8377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8378 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8379
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8380, !srcloc !8383
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8384, !srcloc !8387
  ret void, !dbg !8388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8389 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8390
  %2 = and i32 %1, -15728641, !dbg !8390
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8390
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8391, !srcloc !8398
  call void @llvm.dbg.value(metadata i32 %3, metadata !8396, metadata !DIExpression()) #25, !dbg !8399
  %4 = and i32 %3, -5, !dbg !8400
  call void @llvm.dbg.value(metadata i32 %4, metadata !8401, metadata !DIExpression()) #25, !dbg !8406
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8408, !srcloc !8409
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8410, !srcloc !8387
  ret void, !dbg !8412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8416, metadata !DIExpression()), !dbg !8417
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8418
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8419
  store i32 %0, i32* %3, align 4, !dbg !8420
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8421
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8422
  store i32 %4, i32* %5, align 4, !dbg !8423
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8424
  %7 = or i32 %6, 268435456, !dbg !8424
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8424
  call void @llvm.dbg.value(metadata i32 0, metadata !8425, metadata !DIExpression()) #25, !dbg !8428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8430, !srcloc !8431
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8432
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8433
  %10 = load i32, i32* %9, align 4, !dbg !8433
  ret i32 %10, !dbg !8434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8547, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8548, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i8* %2, metadata !8549, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8550, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i8* %4, metadata !8551, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i8* %5, metadata !8552, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i8* %6, metadata !8553, metadata !DIExpression()), !dbg !8555
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8556
  call void @llvm.dbg.value(metadata i8* %8, metadata !8554, metadata !DIExpression()), !dbg !8555
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8557
  %10 = bitcast i8* %9 to i32*, !dbg !8557
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8558
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8559
  %12 = bitcast i8* %8 to i32*, !dbg !8560
  store i32 %11, i32* %12, align 4, !dbg !8561
  %13 = ptrtoint i8* %4 to i32, !dbg !8562
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8563
  %15 = bitcast i8* %14 to i32*, !dbg !8563
  store i32 %13, i32* %15, align 4, !dbg !8564
  %16 = ptrtoint i8* %5 to i32, !dbg !8565
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8566
  %18 = bitcast i8* %17 to i32*, !dbg !8566
  store i32 %16, i32* %18, align 4, !dbg !8567
  %19 = ptrtoint i8* %6 to i32, !dbg !8568
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8569
  %21 = bitcast i8* %20 to i32*, !dbg !8569
  store i32 %19, i32* %21, align 4, !dbg !8570
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8571
  %23 = bitcast i8* %22 to i32*, !dbg !8571
  store i32 16777216, i32* %23, align 4, !dbg !8572
  %24 = ptrtoint i8* %8 to i32, !dbg !8573
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8574
  store i32 %24, i32* %25, align 8, !dbg !8575
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8576
  store i32 0, i32* %26, align 4, !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8584, metadata !DIExpression()), !dbg !8590
  call void @llvm.dbg.value(metadata i32 %1, metadata !8585, metadata !DIExpression()), !dbg !8590
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8591
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8586, metadata !DIExpression()), !dbg !8590
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8592
  br i1 %4, label %19, label %5, !dbg !8594

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8589, metadata !DIExpression()), !dbg !8590
  %6 = icmp eq i32 %0, -22, !dbg !8595
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8595
  %8 = load i32, i32* %7, align 4, !dbg !8595
  br i1 %6, label %16, label %9, !dbg !8597

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8595
  %11 = icmp ule i32 %10, %0, !dbg !8595
  %12 = icmp ugt i32 %8, %0, !dbg !8595
  %13 = and i1 %12, %11, !dbg !8595
  %14 = icmp ugt i32 %8, %1, !dbg !8595
  %15 = and i1 %14, %13, !dbg !8595
  br i1 %15, label %18, label %19, !dbg !8595

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8595
  br i1 %17, label %18, label %19, !dbg !8597

18:                                               ; preds = %9, %16
  br label %19, !dbg !8598

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8590
  ret i32 %20, !dbg !8600
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !8601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8605, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata i8* %1, metadata !8606, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8607, metadata !DIExpression()), !dbg !8608
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8609
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !8610
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8611, !srcloc !8612
  unreachable, !dbg !8613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8614 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8632, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 %1, metadata !8633, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 %2, metadata !8634, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8635, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 0, metadata !8636, metadata !DIExpression()), !dbg !8642
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8643
  call void @llvm.dbg.value(metadata i32 %8, metadata !8637, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8642
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8644
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8644
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8645
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8645
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8641, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i32 0, metadata !8647, metadata !DIExpression()) #25, !dbg !8650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8652, !srcloc !8653
  call void @llvm.dbg.value(metadata i8* %6, metadata !8639, metadata !DIExpression(DW_OP_deref)), !dbg !8642
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !8654
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8640, metadata !DIExpression()), !dbg !8642
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8655
  br i1 %11, label %12, label %13, !dbg !8658

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8659
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.70, i32 0, i32 0)) #26, !dbg !8659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8659
  unreachable, !dbg !8659

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %14, metadata !8637, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i8* %5, metadata !8638, metadata !DIExpression(DW_OP_deref)), !dbg !8642
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #27, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %15, metadata !8636, metadata !DIExpression()), !dbg !8642
  %16 = load i8, i8* %5, align 1, !dbg !8663, !range !8665
  call void @llvm.dbg.value(metadata i8 %16, metadata !8638, metadata !DIExpression()), !dbg !8642
  %17 = icmp eq i8 %16, 0, !dbg !8663
  br i1 %17, label %18, label %35, !dbg !8666

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8667
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !8668
  %21 = load i8, i8* %6, align 1, !dbg !8669, !range !8665
  call void @llvm.dbg.value(metadata i8 %21, metadata !8639, metadata !DIExpression()), !dbg !8642
  %22 = icmp eq i8 %21, 0, !dbg !8669
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8671
  %24 = load i32, i32* %23, align 4, !dbg !8671
  br i1 %22, label %30, label %25, !dbg !8672

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8673
  %27 = icmp eq i32 %26, 0, !dbg !8676
  br i1 %27, label %28, label %34, !dbg !8677

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8678
  br label %32, !dbg !8680

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8681
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8671
  br label %34, !dbg !8683

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !8683
  br label %35, !dbg !8684

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8684
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8684
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8684
  ret void, !dbg !8684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8690, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %1, metadata !8691, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %2, metadata !8692, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i8* %3, metadata !8693, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i8 0, metadata !8694, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8695, metadata !DIExpression()), !dbg !8696
  store i8 0, i8* %3, align 1, !dbg !8697
  %5 = icmp ugt i32 %2, -16777217, !dbg !8698
  br i1 %5, label %6, label %17, !dbg !8700

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8701
  %8 = icmp eq i32 %7, 8, !dbg !8701
  br i1 %8, label %9, label %10, !dbg !8701

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.81, i32 0, i32 0), i32 noundef 69) #26, !dbg !8703
  br label %17, !dbg !8709

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8710
  %12 = icmp eq i32 %11, 0, !dbg !8710
  br i1 %12, label %13, label %14, !dbg !8711

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8695, metadata !DIExpression()), !dbg !8696
  store i8 1, i8* %3, align 1, !dbg !8714
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8696
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8695, metadata !DIExpression()), !dbg !8696
  br label %17, !dbg !8717

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8696
  ret %struct.__esf* %18, !dbg !8718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8719 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8723, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 %1, metadata !8724, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %2, metadata !8725, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8726, metadata !DIExpression()), !dbg !8727
  store i8 0, i8* %2, align 1, !dbg !8728
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8729

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %5, metadata !8726, metadata !DIExpression()), !dbg !8727
  br label %12, !dbg !8732

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8733
  call void @llvm.dbg.value(metadata i32 %7, metadata !8726, metadata !DIExpression()), !dbg !8727
  br label %12, !dbg !8734

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8735
  call void @llvm.dbg.value(metadata i32 0, metadata !8726, metadata !DIExpression()), !dbg !8727
  br label %12, !dbg !8736

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !8737
  call void @llvm.dbg.value(metadata i32 0, metadata !8726, metadata !DIExpression()), !dbg !8727
  br label %12, !dbg !8738

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !8739
  br label %12, !dbg !8740

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !8741
  br label %12, !dbg !8742

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8727
  call void @llvm.dbg.value(metadata i32 %13, metadata !8726, metadata !DIExpression()), !dbg !8727
  ret i32 %13, !dbg !8743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8744 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8748, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i8* %1, metadata !8749, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 0, metadata !8750, metadata !DIExpression()), !dbg !8751
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.73, i32 0, i32 0), i32 noundef 69) #26, !dbg !8752
  store i8 0, i8* %1, align 1, !dbg !8757
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8758
  %4 = and i32 %3, 2, !dbg !8760
  %5 = icmp eq i32 %4, 0, !dbg !8761
  br i1 %5, label %7, label %6, !dbg !8762

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.74, i32 0, i32 0), i32 noundef 69) #26, !dbg !8763
  br label %38, !dbg !8769

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8770
  %9 = icmp sgt i32 %8, -1, !dbg !8772
  br i1 %9, label %11, label %10, !dbg !8773

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.75, i32 0, i32 0), i32 noundef 69) #26, !dbg !8774
  br label %38, !dbg !8780

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8781
  %13 = and i32 %12, 1073741824, !dbg !8783
  %14 = icmp eq i32 %13, 0, !dbg !8784
  br i1 %14, label %37, label %15, !dbg !8785

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.76, i32 0, i32 0), i32 noundef 69) #26, !dbg !8786
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !8792
  br i1 %16, label %17, label %21, !dbg !8794

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8795
  %19 = load i32, i32* %18, align 4, !dbg !8795
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.77, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #26, !dbg !8795
  %20 = load i32, i32* %18, align 4, !dbg !8801
  call void @llvm.dbg.value(metadata i32 %20, metadata !8750, metadata !DIExpression()), !dbg !8751
  br label %38, !dbg !8802

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8803
  %23 = and i32 %22, 255, !dbg !8805
  %24 = icmp eq i32 %23, 0, !dbg !8806
  br i1 %24, label %27, label %25, !dbg !8807

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %26, metadata !8750, metadata !DIExpression()), !dbg !8751
  br label %38, !dbg !8810

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8811
  %29 = and i32 %28, 65280, !dbg !8813
  %30 = icmp eq i32 %29, 0, !dbg !8814
  br i1 %30, label %32, label %31, !dbg !8815

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8816
  call void @llvm.dbg.value(metadata i32 0, metadata !8750, metadata !DIExpression()), !dbg !8751
  br label %38, !dbg !8818

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8819
  %34 = icmp ult i32 %33, 65536, !dbg !8821
  br i1 %34, label %36, label %35, !dbg !8822

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !8823
  call void @llvm.dbg.value(metadata i32 0, metadata !8750, metadata !DIExpression()), !dbg !8751
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 755) #26, !dbg !8825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.79, i32 0, i32 0)) #26, !dbg !8825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 755) #26, !dbg !8825
  unreachable, !dbg !8825

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 760) #26, !dbg !8830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.80, i32 0, i32 0)) #26, !dbg !8830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 760) #26, !dbg !8830
  unreachable, !dbg !8830

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8751
  call void @llvm.dbg.value(metadata i32 %39, metadata !8750, metadata !DIExpression()), !dbg !8751
  ret i32 %39, !dbg !8835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8836 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8838, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %1, metadata !8839, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %2, metadata !8840, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 0, metadata !8841, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 -22, metadata !8842, metadata !DIExpression()), !dbg !8851
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.72, i32 0, i32 0), i32 noundef 69) #26, !dbg !8852
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8857
  %5 = and i32 %4, 16, !dbg !8859
  %6 = icmp eq i32 %5, 0, !dbg !8860
  br i1 %6, label %8, label %7, !dbg !8861

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #26, !dbg !8862
  br label %8, !dbg !8868

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8869
  %10 = and i32 %9, 8, !dbg !8871
  %11 = icmp eq i32 %10, 0, !dbg !8872
  br i1 %11, label %13, label %12, !dbg !8873

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8874
  br label %13, !dbg !8880

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8881
  %15 = and i32 %14, 2, !dbg !8882
  %16 = icmp eq i32 %15, 0, !dbg !8883
  br i1 %16, label %27, label %17, !dbg !8884

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #26, !dbg !8885
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %18, metadata !8843, metadata !DIExpression()), !dbg !8891
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8892
  %20 = and i32 %19, 128, !dbg !8894
  %21 = icmp eq i32 %20, 0, !dbg !8895
  br i1 %21, label %27, label %22, !dbg !8896

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8842, metadata !DIExpression()), !dbg !8851
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #26, !dbg !8897
  %23 = icmp eq i32 %1, 0, !dbg !8903
  br i1 %23, label %27, label %24, !dbg !8905

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8906
  %26 = and i32 %25, -129, !dbg !8906
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8906
  br label %27, !dbg !8908

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8851
  call void @llvm.dbg.value(metadata i32 %28, metadata !8842, metadata !DIExpression()), !dbg !8851
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8909
  %30 = and i32 %29, 1, !dbg !8911
  %31 = icmp eq i32 %30, 0, !dbg !8912
  br i1 %31, label %33, label %32, !dbg !8913

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #26, !dbg !8914
  br label %33, !dbg !8920

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8921
  %35 = and i32 %34, 32, !dbg !8923
  %36 = icmp eq i32 %35, 0, !dbg !8924
  br i1 %36, label %38, label %37, !dbg !8925

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #26, !dbg !8926
  br label %38, !dbg !8932

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8933
  %40 = and i32 %39, 16, !dbg !8934
  %41 = icmp eq i32 %40, 0, !dbg !8934
  br i1 %41, label %42, label %46, !dbg !8935

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8936
  %44 = and i32 %43, 2, !dbg !8937
  %45 = icmp eq i32 %44, 0, !dbg !8937
  br i1 %45, label %60, label %46, !dbg !8938

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8939
  %48 = and i32 %47, 2048, !dbg !8940
  %49 = icmp eq i32 %48, 0, !dbg !8940
  br i1 %49, label %60, label %50, !dbg !8941

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8942
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #26, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %52, metadata !8846, metadata !DIExpression()), !dbg !8944
  %53 = icmp eq i32 %52, 0, !dbg !8945
  br i1 %53, label %55, label %54, !dbg !8947

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8948, metadata !DIExpression()) #25, !dbg !8951
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8954, !srcloc !8955
  call void @llvm.dbg.value(metadata i32 2, metadata !8841, metadata !DIExpression()), !dbg !8851
  br label %60, !dbg !8956

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8957
  %57 = and i32 %56, 16, !dbg !8957
  %58 = icmp eq i32 %57, 0, !dbg !8957
  br i1 %58, label %60, label %59, !dbg !8961

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 343) #26, !dbg !8962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #26, !dbg !8962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 343) #26, !dbg !8962
  unreachable, !dbg !8962

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8851
  call void @llvm.dbg.value(metadata i32 %61, metadata !8841, metadata !DIExpression()), !dbg !8851
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8964
  %63 = and i32 %62, 32, !dbg !8966
  %64 = icmp eq i32 %63, 0, !dbg !8967
  br i1 %64, label %68, label %65, !dbg !8968

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8969
  %67 = and i32 %66, -8193, !dbg !8969
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8969
  br label %68, !dbg !8971

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8972
  %70 = or i32 %69, 255, !dbg !8972
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8972
  store i8 0, i8* %2, align 1, !dbg !8973
  ret i32 %61, !dbg !8974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8975 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8979, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %0, metadata !8980, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i8* %1, metadata !8981, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8982, metadata !DIExpression()), !dbg !8986
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #26, !dbg !8987
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8992
  %4 = and i32 %3, 4096, !dbg !8994
  %5 = icmp eq i32 %4, 0, !dbg !8994
  br i1 %5, label %7, label %6, !dbg !8995

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #26, !dbg !8996
  br label %7, !dbg !9002

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9003
  %9 = and i32 %8, 2048, !dbg !9005
  %10 = icmp eq i32 %9, 0, !dbg !9005
  br i1 %10, label %12, label %11, !dbg !9006

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !9007
  br label %12, !dbg !9013

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9014
  %14 = and i32 %13, 512, !dbg !9015
  %15 = icmp eq i32 %14, 0, !dbg !9015
  br i1 %15, label %26, label %16, !dbg !9016

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #26, !dbg !9017
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %17, metadata !8983, metadata !DIExpression()), !dbg !9023
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9024
  %19 = and i32 %18, 32768, !dbg !9026
  %20 = icmp eq i32 %19, 0, !dbg !9027
  br i1 %20, label %26, label %21, !dbg !9028

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.71, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !9029
  %22 = icmp eq i32 %0, 0, !dbg !9035
  br i1 %22, label %26, label %23, !dbg !9037

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9038
  %25 = and i32 %24, -32769, !dbg !9038
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9038
  br label %26, !dbg !9040

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9041
  %28 = and i32 %27, 1024, !dbg !9043
  %29 = icmp eq i32 %28, 0, !dbg !9043
  br i1 %29, label %31, label %30, !dbg !9044

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !9045
  br label %31, !dbg !9051

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9052
  %33 = and i32 %32, 256, !dbg !9054
  %34 = icmp eq i32 %33, 0, !dbg !9055
  br i1 %34, label %35, label %39, !dbg !9056

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9057
  %37 = and i32 %36, 8192, !dbg !9059
  %38 = icmp eq i32 %37, 0, !dbg !9059
  br i1 %38, label %41, label %39, !dbg !9060

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #26, !dbg !9061
  br label %41, !dbg !9062

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9062
  %43 = or i32 %42, 65280, !dbg !9062
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9062
  store i8 0, i8* %1, align 1, !dbg !9063
  ret void, !dbg !9064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !9065 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9071, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32 0, metadata !9072, metadata !DIExpression()), !dbg !9073
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #26, !dbg !9074
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9079
  %2 = and i32 %1, 33554432, !dbg !9081
  %3 = icmp eq i32 %2, 0, !dbg !9082
  br i1 %3, label %5, label %4, !dbg !9083

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #26, !dbg !9084
  br label %5, !dbg !9090

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9091
  %7 = and i32 %6, 16777216, !dbg !9093
  %8 = icmp eq i32 %7, 0, !dbg !9094
  br i1 %8, label %10, label %9, !dbg !9095

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #26, !dbg !9096
  br label %10, !dbg !9102

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9103
  %12 = and i32 %11, 524288, !dbg !9105
  %13 = icmp eq i32 %12, 0, !dbg !9106
  br i1 %13, label %15, label %14, !dbg !9107

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #26, !dbg !9108
  br label %15, !dbg !9114

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9115
  %17 = and i32 %16, 262144, !dbg !9117
  %18 = icmp eq i32 %17, 0, !dbg !9118
  br i1 %18, label %20, label %19, !dbg !9119

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #26, !dbg !9120
  br label %20, !dbg !9126

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9127
  %22 = and i32 %21, 131072, !dbg !9129
  %23 = icmp eq i32 %22, 0, !dbg !9130
  br i1 %23, label %25, label %24, !dbg !9131

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #26, !dbg !9132
  br label %25, !dbg !9138

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9139
  %27 = and i32 %26, 65536, !dbg !9141
  %28 = icmp eq i32 %27, 0, !dbg !9142
  br i1 %28, label %30, label %29, !dbg !9143

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #26, !dbg !9144
  br label %30, !dbg !9150

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9151
  %32 = or i32 %31, -65536, !dbg !9151
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9151
  ret void, !dbg !9152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9153 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9157, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i8* %0, metadata !9158, metadata !DIExpression()), !dbg !9159
  store i8 0, i8* %0, align 1, !dbg !9160
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #26, !dbg !9161
  ret void, !dbg !9166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9167 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9171, metadata !DIExpression()), !dbg !9173
  call void @llvm.dbg.value(metadata i32 %0, metadata !9172, metadata !DIExpression()), !dbg !9173
  %2 = icmp slt i32 %0, 16, !dbg !9174
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !9174
  %4 = add nsw i32 %0, -16, !dbg !9174
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #26, !dbg !9174
  ret void, !dbg !9179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9180 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9184, metadata !DIExpression()), !dbg !9187
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9188
  %3 = load i32, i32* %2, align 4, !dbg !9188
  %4 = inttoptr i32 %3 to i16*, !dbg !9189
  call void @llvm.dbg.value(metadata i16* %4, metadata !9185, metadata !DIExpression()), !dbg !9187
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9190
  %6 = or i32 %5, 256, !dbg !9190
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9190
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9191, !srcloc !9194
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9195, !srcloc !9198
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9199
  %8 = load i16, i16* %7, align 2, !dbg !9200
  call void @llvm.dbg.value(metadata i16 %8, metadata !9186, metadata !DIExpression()), !dbg !9187
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9201
  %10 = and i32 %9, -257, !dbg !9201
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9201
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9202, !srcloc !9194
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9204, !srcloc !9198
  %11 = icmp eq i16 %8, -8446, !dbg !9206
  ret i1 %11, !dbg !9208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !9209 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9210
  %2 = or i32 %1, 16, !dbg !9210
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9210
  ret void, !dbg !9211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !9212 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9215, metadata !DIExpression()), !dbg !9216
  br label %1, !dbg !9217

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9215, metadata !DIExpression()), !dbg !9216
  tail call fastcc void @__NVIC_SetPriority.84(i32 noundef %2) #27, !dbg !9219
  %3 = add nuw nsw i32 %2, 1, !dbg !9222
  call void @llvm.dbg.value(metadata i32 %3, metadata !9215, metadata !DIExpression()), !dbg !9216
  %4 = icmp eq i32 %3, 97, !dbg !9223
  br i1 %4, label %5, label %1, !dbg !9217, !llvm.loop !9224

5:                                                ; preds = %1
  ret void, !dbg !9226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.84(i32 noundef %0) unnamed_addr #16 !dbg !9227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9229, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 1, metadata !9230, metadata !DIExpression()), !dbg !9231
  %2 = and i32 %0, 15, !dbg !9232
  %3 = add nsw i32 %2, -4, !dbg !9232
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9232
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9232
  %6 = icmp slt i32 %0, 0, !dbg !9232
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9232
  store volatile i8 16, i8* %7, align 1, !dbg !9233
  ret void, !dbg !9235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9344, metadata !DIExpression()), !dbg !9345
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9346
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9348
  br i1 %3, label %4, label %12, !dbg !9349

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9350, !srcloc !9362
  call void @llvm.dbg.value(metadata i32 %5, metadata !9353, metadata !DIExpression()) #25, !dbg !9363
  %6 = icmp eq i32 %5, 0, !dbg !9364
  br i1 %6, label %12, label %7, !dbg !9365

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9366
  %9 = or i32 %8, 268435456, !dbg !9366
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9366
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9368
  %11 = and i32 %10, -32769, !dbg !9368
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9368
  br label %12, !dbg !9369

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !9370
  ret void, !dbg !9371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9372 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !9373
  ret void, !dbg !9374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !996, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i8 0, metadata !997, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i32 64, metadata !999, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.value(metadata i32 undef, metadata !998, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !9375
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9376
  %3 = load i32, i32* %2, align 4, !dbg !9376
  call void @llvm.dbg.value(metadata i32 %3, metadata !998, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !9375
  %4 = add i32 %3, -64, !dbg !9378
  call void @llvm.dbg.value(metadata i32 %4, metadata !998, metadata !DIExpression()), !dbg !9375
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9379
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9380
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9381
  call void @llvm.dbg.value(metadata i8 1, metadata !997, metadata !DIExpression()), !dbg !9375
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !9382
  ret void, !dbg !9383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9384 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9385
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9386, !srcloc !9389
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9390, !srcloc !9393
  ret void, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9395 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9396, !srcloc !9399
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9400
  ret void, !dbg !9401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9402 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9417, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata i8 %1, metadata !9418, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata i32 %2, metadata !9419, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.value(metadata i32 %3, metadata !9420, metadata !DIExpression()), !dbg !9421
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9422
  %6 = icmp eq i32 %5, -22, !dbg !9424
  br i1 %6, label %7, label %9, !dbg !9425

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 283) #26, !dbg !9426
  %8 = zext i8 %1 to i32, !dbg !9426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.96, i32 0, i32 0), i32 noundef %8) #26, !dbg !9426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 283) #26, !dbg !9426
  unreachable, !dbg !9426

9:                                                ; preds = %4
  ret void, !dbg !9431
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9432 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9437, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i8 %1, metadata !9438, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i32 undef, metadata !9439, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.value(metadata i32 undef, metadata !9440, metadata !DIExpression()), !dbg !9442
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9443
  call void @llvm.dbg.value(metadata i8 %3, metadata !9441, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9442
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !9444
  call void @llvm.dbg.value(metadata i32 %4, metadata !9441, metadata !DIExpression()), !dbg !9442
  %5 = trunc i32 %4 to i8, !dbg !9445
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9446
  ret i32 %4, !dbg !9447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9448 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9452, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i8 %1, metadata !9453, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i8 %2, metadata !9454, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i1 %3, metadata !9455, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9458
  %5 = zext i8 %2 to i32, !dbg !9459
  call void @llvm.dbg.value(metadata i32 %5, metadata !9457, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i32 0, metadata !9456, metadata !DIExpression()), !dbg !9458
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9457, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i32 0, metadata !9456, metadata !DIExpression()), !dbg !9458
  %7 = icmp eq i8 %1, 0, !dbg !9460
  br i1 %7, label %30, label %8, !dbg !9463

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9457, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata i32 %10, metadata !9456, metadata !DIExpression()), !dbg !9458
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9464
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9467
  %13 = load i32, i32* %12, align 4, !dbg !9467
  %14 = icmp eq i32 %13, 0, !dbg !9468
  br i1 %14, label %26, label %15, !dbg !9469

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9470

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9472
  %18 = icmp eq i32 %17, 0, !dbg !9472
  br i1 %18, label %19, label %20, !dbg !9473

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.97, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #26, !dbg !9474
  br label %30, !dbg !9480

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9481
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %22, metadata !9457, metadata !DIExpression()), !dbg !9458
  %23 = icmp eq i32 %22, -22, !dbg !9483
  br i1 %23, label %30, label %24, !dbg !9485

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9486
  call void @llvm.dbg.value(metadata i32 %25, metadata !9457, metadata !DIExpression()), !dbg !9458
  br label %26, !dbg !9487

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9458
  call void @llvm.dbg.value(metadata i32 %27, metadata !9457, metadata !DIExpression()), !dbg !9458
  %28 = add nuw nsw i32 %10, 1, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %28, metadata !9456, metadata !DIExpression()), !dbg !9458
  %29 = icmp eq i32 %28, %6, !dbg !9460
  br i1 %29, label %30, label %8, !dbg !9463, !llvm.loop !9489

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9458
  ret i32 %31, !dbg !9491
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9492 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9496, metadata !DIExpression()), !dbg !9498
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9499
  %3 = load i32, i32* %2, align 4, !dbg !9499
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9500, !range !5919
  %5 = icmp ult i32 %4, 2, !dbg !9500
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9501
  br i1 %7, label %8, label %15, !dbg !9501

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9502
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9503
  %11 = load i32, i32* %10, align 4, !dbg !9503
  %12 = and i32 %11, %9, !dbg !9504
  %13 = icmp eq i32 %12, 0, !dbg !9505
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9497, metadata !DIExpression()), !dbg !9498
  ret i32 %16, !dbg !9506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9507 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9511, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9512, metadata !DIExpression()), !dbg !9514
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9515
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9515
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9513, metadata !DIExpression()), !dbg !9516
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9517
  %6 = load i32, i32* %5, align 4, !dbg !9517
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9518
  store i32 %6, i32* %7, align 4, !dbg !9519
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9520
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9521
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9522
  %11 = load i32, i32* %10, align 4, !dbg !9522
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #27, !dbg !9523
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !9524
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9525
  ret i32 %12, !dbg !9526
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #13 !dbg !9527 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9534, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9535, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 undef, metadata !9536, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32 %2, metadata !9537, metadata !DIExpression()), !dbg !9538
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9539
  %5 = load i32, i32* %4, align 4, !dbg !9539
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !9540
  %7 = or i32 %6, %5, !dbg !9541
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9542
  store i32 %7, i32* %8, align 4, !dbg !9543
  ret void, !dbg !9544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9545 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9549, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9550, metadata !DIExpression()), !dbg !9551
  %3 = zext i8 %0 to i32, !dbg !9552
  %4 = icmp ugt i8 %0, 7, !dbg !9554
  br i1 %4, label %5, label %6, !dbg !9555

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.98, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #26, !dbg !9556
  br label %7, !dbg !9562

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !9563
  br label %7, !dbg !9564

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9551
  ret i32 %8, !dbg !9565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !9566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9570, metadata !DIExpression()), !dbg !9572
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9571, metadata !DIExpression()), !dbg !9572
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !9573
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9574
  %4 = load i32, i32* %3, align 4, !dbg !9574
  %5 = and i32 %4, -32, !dbg !9575
  %6 = or i32 %5, %0, !dbg !9576
  %7 = or i32 %6, 16, !dbg !9576
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9577
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9578
  %9 = load i32, i32* %8, align 4, !dbg !9578
  %10 = or i32 %9, 1, !dbg !9579
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9580
  ret void, !dbg !9581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !9582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9585, metadata !DIExpression()), !dbg !9586
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9587
  ret void, !dbg !9588
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #12 !dbg !9589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9593, metadata !DIExpression()), !dbg !9594
  %2 = icmp ult i32 %0, 33, !dbg !9595
  br i1 %2, label %11, label %3, !dbg !9597

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9598
  br i1 %4, label %11, label %5, !dbg !9600

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9601
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9602, !range !5919
  %8 = mul nsw i32 %7, -2, !dbg !9603
  %9 = add nsw i32 %8, 62, !dbg !9603
  %10 = and i32 %9, 62, !dbg !9604
  br label %11, !dbg !9605

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9594
  ret i32 %12, !dbg !9606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9607 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9611, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.value(metadata i8 %1, metadata !9612, metadata !DIExpression()), !dbg !9613
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9614
  %4 = icmp eq i32 %3, -22, !dbg !9616
  br i1 %4, label %5, label %7, !dbg !9617

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 314) #26, !dbg !9618
  %6 = zext i8 %1 to i32, !dbg !9618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef %6) #26, !dbg !9618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 314) #26, !dbg !9618
  unreachable, !dbg !9618

7:                                                ; preds = %2
  ret void, !dbg !9623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9624 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9628, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i8 %1, metadata !9629, metadata !DIExpression()), !dbg !9635
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9636
  call void @llvm.dbg.value(metadata i8 %3, metadata !9630, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9635
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !9637
  call void @llvm.dbg.value(metadata i32 %4, metadata !9630, metadata !DIExpression()), !dbg !9635
  %5 = icmp ne i32 %4, -22, !dbg !9638
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9639
  call void @llvm.dbg.value(metadata i32 %4, metadata !9631, metadata !DIExpression()), !dbg !9640
  br i1 %7, label %8, label %12, !dbg !9639

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9631, metadata !DIExpression()), !dbg !9640
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !9641
  %10 = add i32 %9, 1, !dbg !9644
  call void @llvm.dbg.value(metadata i32 %10, metadata !9631, metadata !DIExpression()), !dbg !9640
  %11 = icmp eq i32 %10, 8, !dbg !9645
  br i1 %11, label %12, label %8, !dbg !9646, !llvm.loop !9647

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !9650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9653, metadata !DIExpression()), !dbg !9654
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9655
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9656
  ret void, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9658 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9663
  %2 = icmp ugt i32 %1, 8, !dbg !9665
  br i1 %2, label %3, label %4, !dbg !9666

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 341) #26, !dbg !9667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.102, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !9667
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 341) #26, !dbg !9667
  unreachable, !dbg !9667

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !9672
  call void @llvm.dbg.value(metadata i32 0, metadata !9662, metadata !DIExpression()), !dbg !9673
  %5 = icmp eq i32 %1, 0, !dbg !9674
  br i1 %5, label %13, label %6, !dbg !9677

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9677

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9662, metadata !DIExpression()), !dbg !9673
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9678
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #27, !dbg !9680
  %11 = add nuw i32 %9, 1, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %11, metadata !9662, metadata !DIExpression()), !dbg !9673
  %12 = icmp eq i32 %11, %1, !dbg !9674
  br i1 %12, label %13, label %8, !dbg !9677, !llvm.loop !9682

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9684
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9685
  tail call void @arm_core_mpu_enable() #27, !dbg !9686
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9687
  %16 = and i32 %15, 65280, !dbg !9687
  %17 = icmp eq i32 %16, 2048, !dbg !9687
  br i1 %17, label %19, label %18, !dbg !9690

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 435) #26, !dbg !9691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.104, i32 0, i32 0)) #26, !dbg !9691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 435) #26, !dbg !9691
  unreachable, !dbg !9691

19:                                               ; preds = %13
  ret i32 0, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9694 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9701, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i8* %1, metadata !9702, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i8* %0, metadata !9703, metadata !DIExpression()), !dbg !9704
  %3 = load i8, i8* %1, align 1, !dbg !9705
  %4 = icmp eq i8 %3, 0, !dbg !9706
  br i1 %4, label %13, label %5, !dbg !9707

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9701, metadata !DIExpression()), !dbg !9704
  call void @llvm.dbg.value(metadata i8* %8, metadata !9702, metadata !DIExpression()), !dbg !9704
  store i8 %6, i8* %7, align 1, !dbg !9708
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9710
  call void @llvm.dbg.value(metadata i8* %9, metadata !9701, metadata !DIExpression()), !dbg !9704
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9711
  call void @llvm.dbg.value(metadata i8* %10, metadata !9702, metadata !DIExpression()), !dbg !9704
  %11 = load i8, i8* %10, align 1, !dbg !9705
  %12 = icmp eq i8 %11, 0, !dbg !9706
  br i1 %12, label %13, label %5, !dbg !9707, !llvm.loop !9712

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9714
  ret i8* %0, !dbg !9715
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9720, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i8* %1, metadata !9721, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i32 %2, metadata !9722, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i8* %0, metadata !9723, metadata !DIExpression()), !dbg !9724
  %4 = icmp eq i32 %2, 0, !dbg !9725
  br i1 %4, label %22, label %5, !dbg !9726

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9720, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i32 %7, metadata !9722, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i8* %8, metadata !9721, metadata !DIExpression()), !dbg !9724
  %9 = load i8, i8* %8, align 1, !dbg !9727
  %10 = icmp eq i8 %9, 0, !dbg !9728
  br i1 %10, label %16, label %11, !dbg !9729

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9730
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9732
  call void @llvm.dbg.value(metadata i8* %12, metadata !9721, metadata !DIExpression()), !dbg !9724
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9733
  call void @llvm.dbg.value(metadata i8* %13, metadata !9720, metadata !DIExpression()), !dbg !9724
  %14 = add i32 %7, -1, !dbg !9734
  call void @llvm.dbg.value(metadata i32 %14, metadata !9722, metadata !DIExpression()), !dbg !9724
  %15 = icmp eq i32 %14, 0, !dbg !9725
  br i1 %15, label %22, label %5, !dbg !9726, !llvm.loop !9735

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9720, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.value(metadata i32 %18, metadata !9722, metadata !DIExpression()), !dbg !9724
  store i8 0, i8* %17, align 1, !dbg !9737
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9739
  call void @llvm.dbg.value(metadata i8* %19, metadata !9720, metadata !DIExpression()), !dbg !9724
  %20 = add i32 %18, -1, !dbg !9740
  call void @llvm.dbg.value(metadata i32 %20, metadata !9722, metadata !DIExpression()), !dbg !9724
  %21 = icmp eq i32 %20, 0, !dbg !9741
  br i1 %21, label %22, label %16, !dbg !9742, !llvm.loop !9743

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9745
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9746 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9750, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9751, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9752, metadata !DIExpression()), !dbg !9753
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9754

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9750, metadata !DIExpression()), !dbg !9753
  %6 = load i8, i8* %5, align 1, !dbg !9755
  %7 = icmp eq i8 %6, %3, !dbg !9756
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9757
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9758
  call void @llvm.dbg.value(metadata i8* %10, metadata !9750, metadata !DIExpression()), !dbg !9753
  br i1 %9, label %11, label %4, !dbg !9757, !llvm.loop !9760

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9762
  ret i8* %12, !dbg !9763
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9764 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9766, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i32 %1, metadata !9767, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i8* null, metadata !9768, metadata !DIExpression()), !dbg !9769
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9770

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9769
  call void @llvm.dbg.value(metadata i8* %6, metadata !9768, metadata !DIExpression()), !dbg !9769
  call void @llvm.dbg.value(metadata i8* %5, metadata !9766, metadata !DIExpression()), !dbg !9769
  %7 = load i8, i8* %5, align 1, !dbg !9771
  %8 = icmp eq i8 %7, %3, !dbg !9774
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9775
  call void @llvm.dbg.value(metadata i8* %9, metadata !9768, metadata !DIExpression()), !dbg !9769
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9776
  call void @llvm.dbg.value(metadata i8* %10, metadata !9766, metadata !DIExpression()), !dbg !9769
  %11 = icmp eq i8 %7, 0, !dbg !9777
  br i1 %11, label %12, label %4, !dbg !9777, !llvm.loop !9778

12:                                               ; preds = %4
  ret i8* %9, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9781 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9785, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 0, metadata !9786, metadata !DIExpression()), !dbg !9787
  %2 = load i8, i8* %0, align 1, !dbg !9788
  %3 = icmp eq i8 %2, 0, !dbg !9789
  br i1 %3, label %11, label %4, !dbg !9790

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9786, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i8* %6, metadata !9785, metadata !DIExpression()), !dbg !9787
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9791
  call void @llvm.dbg.value(metadata i8* %7, metadata !9785, metadata !DIExpression()), !dbg !9787
  %8 = add i32 %5, 1, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %8, metadata !9786, metadata !DIExpression()), !dbg !9787
  %9 = load i8, i8* %7, align 1, !dbg !9788
  %10 = icmp eq i8 %9, 0, !dbg !9789
  br i1 %10, label %11, label %4, !dbg !9790, !llvm.loop !9794

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9787
  ret i32 %12, !dbg !9796
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9797 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9801, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i32 %1, metadata !9802, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i32 0, metadata !9803, metadata !DIExpression()), !dbg !9804
  %3 = load i8, i8* %0, align 1, !dbg !9805
  %4 = icmp ne i8 %3, 0, !dbg !9806
  %5 = icmp ne i32 %1, 0, !dbg !9807
  %6 = and i1 %4, %5, !dbg !9807
  br i1 %6, label %7, label %16, !dbg !9808

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9803, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.value(metadata i8* %9, metadata !9801, metadata !DIExpression()), !dbg !9804
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9809
  call void @llvm.dbg.value(metadata i8* %10, metadata !9801, metadata !DIExpression()), !dbg !9804
  %11 = add nuw i32 %8, 1, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %11, metadata !9803, metadata !DIExpression()), !dbg !9804
  %12 = load i8, i8* %10, align 1, !dbg !9805
  %13 = icmp ne i8 %12, 0, !dbg !9806
  %14 = icmp ult i32 %11, %1, !dbg !9807
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9807
  br i1 %15, label %7, label %16, !dbg !9808, !llvm.loop !9812

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9804
  ret i32 %17, !dbg !9814
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9815 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9819, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8* %1, metadata !9820, metadata !DIExpression()), !dbg !9821
  %3 = load i8, i8* %0, align 1, !dbg !9822
  %4 = load i8, i8* %1, align 1, !dbg !9823
  %5 = icmp ne i8 %3, %4, !dbg !9824
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9825
  br i1 %7, label %18, label %8, !dbg !9825

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9820, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8* %10, metadata !9819, metadata !DIExpression()), !dbg !9821
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9826
  call void @llvm.dbg.value(metadata i8* %11, metadata !9819, metadata !DIExpression()), !dbg !9821
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9828
  call void @llvm.dbg.value(metadata i8* %12, metadata !9820, metadata !DIExpression()), !dbg !9821
  %13 = load i8, i8* %11, align 1, !dbg !9822
  %14 = load i8, i8* %12, align 1, !dbg !9823
  %15 = icmp ne i8 %13, %14, !dbg !9824
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9825
  br i1 %17, label %18, label %8, !dbg !9825, !llvm.loop !9829

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9822
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9823
  %21 = zext i8 %19 to i32, !dbg !9832
  %22 = zext i8 %20 to i32, !dbg !9833
  %23 = sub nsw i32 %21, %22, !dbg !9834
  ret i32 %23, !dbg !9835
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9836 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9840, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i8* %1, metadata !9841, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i32 %2, metadata !9842, metadata !DIExpression()), !dbg !9843
  %4 = icmp eq i32 %2, 0, !dbg !9844
  br i1 %4, label %23, label %5, !dbg !9844

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9842, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i8* %7, metadata !9841, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i8* %8, metadata !9840, metadata !DIExpression()), !dbg !9843
  %9 = load i8, i8* %8, align 1, !dbg !9845
  %10 = load i8, i8* %7, align 1, !dbg !9846
  %11 = icmp ne i8 %9, %10, !dbg !9847
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9848
  br i1 %13, label %19, label %14, !dbg !9848

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9849
  call void @llvm.dbg.value(metadata i8* %15, metadata !9840, metadata !DIExpression()), !dbg !9843
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9851
  call void @llvm.dbg.value(metadata i8* %16, metadata !9841, metadata !DIExpression()), !dbg !9843
  %17 = add i32 %6, -1, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %17, metadata !9842, metadata !DIExpression()), !dbg !9843
  %18 = icmp eq i32 %17, 0, !dbg !9844
  br i1 %18, label %23, label %5, !dbg !9844, !llvm.loop !9853

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9856
  %21 = zext i8 %10 to i32, !dbg !9857
  %22 = sub nsw i32 %20, %21, !dbg !9858
  br label %23, !dbg !9859

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9859
  ret i32 %24, !dbg !9860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !9861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9865, metadata !DIExpression()), !dbg !9870
  call void @llvm.dbg.value(metadata i8* %1, metadata !9866, metadata !DIExpression()), !dbg !9870
  call void @llvm.dbg.value(metadata i8** %2, metadata !9867, metadata !DIExpression()), !dbg !9870
  %4 = icmp eq i8* %0, null, !dbg !9871
  br i1 %4, label %5, label %7, !dbg !9871

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9872
  br label %7, !dbg !9871

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9871
  call void @llvm.dbg.value(metadata i8* %8, metadata !9868, metadata !DIExpression()), !dbg !9870
  %9 = load i8, i8* %8, align 1, !dbg !9873
  %10 = icmp eq i8 %9, 0, !dbg !9873
  br i1 %10, label %33, label %11, !dbg !9874

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9868, metadata !DIExpression()), !dbg !9870
  %14 = zext i8 %12 to i32, !dbg !9873
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !9875
  %16 = icmp eq i8* %15, null, !dbg !9874
  br i1 %16, label %21, label %17, !dbg !9876

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9877
  call void @llvm.dbg.value(metadata i8* %18, metadata !9868, metadata !DIExpression()), !dbg !9870
  %19 = load i8, i8* %18, align 1, !dbg !9873
  %20 = icmp eq i8 %19, 0, !dbg !9873
  br i1 %20, label %33, label %11, !dbg !9874, !llvm.loop !9879

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9869, metadata !DIExpression()), !dbg !9870
  %24 = zext i8 %22 to i32, !dbg !9881
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !9882
  %26 = icmp eq i8* %25, null, !dbg !9883
  br i1 %26, label %27, label %31, !dbg !9884

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9885
  call void @llvm.dbg.value(metadata i8* %28, metadata !9869, metadata !DIExpression()), !dbg !9870
  %29 = load i8, i8* %28, align 1, !dbg !9881
  %30 = icmp eq i8 %29, 0, !dbg !9881
  br i1 %30, label %33, label %21, !dbg !9887, !llvm.loop !9888

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9890
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9893
  br label %33, !dbg !9894

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9870
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9870
  store i8* %34, i8** %2, align 4, !dbg !9870
  ret i8* %35, !dbg !9895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9898, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata i8* %1, metadata !9899, metadata !DIExpression()), !dbg !9900
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9901
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9902
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !9903
  ret i8* %0, !dbg !9904
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9907, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %1, metadata !9908, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %0, metadata !9910, metadata !DIExpression()), !dbg !9912
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %4, metadata !9911, metadata !DIExpression()), !dbg !9912
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9914
  call void @llvm.dbg.value(metadata i8* %5, metadata !9907, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %1, metadata !9908, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %2, metadata !9909, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9912
  %6 = icmp eq i32 %2, 0, !dbg !9915
  br i1 %6, label %18, label %7, !dbg !9916

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9917
  call void @llvm.dbg.value(metadata i8* %9, metadata !9907, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i8* %10, metadata !9908, metadata !DIExpression()), !dbg !9912
  %12 = load i8, i8* %10, align 1, !dbg !9918
  %13 = icmp eq i8 %12, 0, !dbg !9919
  br i1 %13, label %18, label %14, !dbg !9920

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9921
  call void @llvm.dbg.value(metadata i8* %15, metadata !9908, metadata !DIExpression()), !dbg !9912
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9923
  call void @llvm.dbg.value(metadata i8* %16, metadata !9907, metadata !DIExpression()), !dbg !9912
  store i8 %12, i8* %9, align 1, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %11, metadata !9909, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %11, metadata !9909, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9912
  %17 = icmp eq i32 %11, 0, !dbg !9915
  br i1 %17, label %18, label %7, !dbg !9916, !llvm.loop !9925

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9912
  store i8 0, i8* %19, align 1, !dbg !9927
  ret i8* %0, !dbg !9928
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9933, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i8* %1, metadata !9934, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32 %2, metadata !9935, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i8* %0, metadata !9936, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i8* %1, metadata !9937, metadata !DIExpression()), !dbg !9938
  %4 = icmp eq i32 %2, 0, !dbg !9939
  br i1 %4, label %31, label %5, !dbg !9941

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i8* %0, metadata !9936, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32 %2, metadata !9935, metadata !DIExpression()), !dbg !9938
  %6 = add i32 %2, -1, !dbg !9942
  call void @llvm.dbg.value(metadata i32 %6, metadata !9935, metadata !DIExpression()), !dbg !9938
  %7 = icmp eq i32 %6, 0, !dbg !9943
  br i1 %7, label %23, label %8, !dbg !9944

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9945
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9945
  br label %11, !dbg !9945

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i8* %14, metadata !9936, metadata !DIExpression()), !dbg !9938
  %15 = load i8, i8* %14, align 1, !dbg !9946
  %16 = load i8, i8* %13, align 1, !dbg !9947
  %17 = icmp eq i8 %15, %16, !dbg !9948
  br i1 %17, label %18, label %23, !dbg !9945

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9949
  call void @llvm.dbg.value(metadata i8* %19, metadata !9936, metadata !DIExpression()), !dbg !9938
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9951
  call void @llvm.dbg.value(metadata i8* %20, metadata !9937, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata i32 %12, metadata !9935, metadata !DIExpression()), !dbg !9938
  %21 = add i32 %12, -1, !dbg !9942
  call void @llvm.dbg.value(metadata i32 %21, metadata !9935, metadata !DIExpression()), !dbg !9938
  %22 = icmp eq i32 %21, 0, !dbg !9943
  br i1 %22, label %23, label %11, !dbg !9944, !llvm.loop !9952

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9938
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9938
  %26 = load i8, i8* %24, align 1, !dbg !9954
  %27 = zext i8 %26 to i32, !dbg !9954
  %28 = load i8, i8* %25, align 1, !dbg !9955
  %29 = zext i8 %28 to i32, !dbg !9955
  %30 = sub nsw i32 %27, %29, !dbg !9956
  br label %31, !dbg !9957

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9938
  ret i32 %32, !dbg !9958
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9959 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9963, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %1, metadata !9964, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %2, metadata !9965, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %0, metadata !9966, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %1, metadata !9967, metadata !DIExpression()), !dbg !9968
  %4 = ptrtoint i8* %0 to i32, !dbg !9969
  %5 = ptrtoint i8* %1 to i32, !dbg !9969
  %6 = sub i32 %4, %5, !dbg !9969
  %7 = icmp ult i32 %6, %2, !dbg !9971
  br i1 %7, label %10, label %8, !dbg !9972

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9967, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %0, metadata !9966, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %2, metadata !9965, metadata !DIExpression()), !dbg !9968
  %9 = icmp eq i32 %2, 0, !dbg !9973
  br i1 %9, label %26, label %17, !dbg !9975

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9965, metadata !DIExpression()), !dbg !9968
  %12 = add i32 %11, -1, !dbg !9976
  call void @llvm.dbg.value(metadata i32 %12, metadata !9965, metadata !DIExpression()), !dbg !9968
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9979
  %14 = load i8, i8* %13, align 1, !dbg !9979
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9980
  store i8 %14, i8* %15, align 1, !dbg !9981
  %16 = icmp eq i32 %12, 0, !dbg !9982
  br i1 %16, label %26, label %10, !dbg !9983, !llvm.loop !9984

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9967, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i8* %19, metadata !9966, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %20, metadata !9965, metadata !DIExpression()), !dbg !9968
  %21 = load i8, i8* %18, align 1, !dbg !9986
  store i8 %21, i8* %19, align 1, !dbg !9988
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9989
  call void @llvm.dbg.value(metadata i8* %22, metadata !9966, metadata !DIExpression()), !dbg !9968
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9990
  call void @llvm.dbg.value(metadata i8* %23, metadata !9967, metadata !DIExpression()), !dbg !9968
  %24 = add i32 %20, -1, !dbg !9991
  call void @llvm.dbg.value(metadata i32 %24, metadata !9965, metadata !DIExpression()), !dbg !9968
  %25 = icmp eq i32 %24, 0, !dbg !9973
  br i1 %25, label %26, label %17, !dbg !9975, !llvm.loop !9992

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9994
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10001, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i8* %1, metadata !10002, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %2, metadata !10003, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i8* %0, metadata !10004, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i8* %1, metadata !10005, metadata !DIExpression()), !dbg !10006
  %4 = icmp eq i32 %2, 0, !dbg !10007
  br i1 %4, label %14, label %5, !dbg !10008

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i8* %7, metadata !10004, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %8, metadata !10003, metadata !DIExpression()), !dbg !10006
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !10009
  call void @llvm.dbg.value(metadata i8* %9, metadata !10005, metadata !DIExpression()), !dbg !10006
  %10 = load i8, i8* %6, align 1, !dbg !10011
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10012
  call void @llvm.dbg.value(metadata i8* %11, metadata !10004, metadata !DIExpression()), !dbg !10006
  store i8 %10, i8* %7, align 1, !dbg !10013
  %12 = add i32 %8, -1, !dbg !10014
  call void @llvm.dbg.value(metadata i32 %12, metadata !10003, metadata !DIExpression()), !dbg !10006
  %13 = icmp eq i32 %12, 0, !dbg !10007
  br i1 %13, label %14, label %5, !dbg !10008, !llvm.loop !10015

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !10017
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !10018 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10022, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %1, metadata !10023, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %2, metadata !10024, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i8* %0, metadata !10025, metadata !DIExpression()), !dbg !10027
  %4 = trunc i32 %1 to i8, !dbg !10028
  call void @llvm.dbg.value(metadata i8 %4, metadata !10026, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i32 %2, metadata !10024, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i8* %0, metadata !10025, metadata !DIExpression()), !dbg !10027
  %5 = icmp eq i32 %2, 0, !dbg !10029
  br i1 %5, label %12, label %6, !dbg !10030

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10024, metadata !DIExpression()), !dbg !10027
  call void @llvm.dbg.value(metadata i8* %8, metadata !10025, metadata !DIExpression()), !dbg !10027
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !10031
  call void @llvm.dbg.value(metadata i8* %9, metadata !10025, metadata !DIExpression()), !dbg !10027
  store i8 %4, i8* %8, align 1, !dbg !10033
  %10 = add i32 %7, -1, !dbg !10034
  call void @llvm.dbg.value(metadata i32 %10, metadata !10024, metadata !DIExpression()), !dbg !10027
  %11 = icmp eq i32 %10, 0, !dbg !10029
  br i1 %11, label %12, label %6, !dbg !10030, !llvm.loop !10035

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !10037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10042, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata i32 %1, metadata !10043, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata i32 %2, metadata !10044, metadata !DIExpression()), !dbg !10048
  %4 = icmp eq i32 %2, 0, !dbg !10049
  br i1 %4, label %17, label %5, !dbg !10050

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !10051

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !10052
  call void @llvm.dbg.value(metadata i8* %9, metadata !10045, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 %8, metadata !10044, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata i8* %9, metadata !10045, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10052
  %10 = load i8, i8* %9, align 1, !dbg !10053
  %11 = icmp eq i8 %10, %6, !dbg !10056
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !10057
  call void @llvm.dbg.value(metadata i8* %12, metadata !10045, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 %13, metadata !10044, metadata !DIExpression()), !dbg !10048
  br i1 %15, label %16, label %7, !dbg !10057, !llvm.loop !10058

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !10060

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !10048
  ret i8* %19, !dbg !10061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !10062 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !10064, metadata !DIExpression()), !dbg !10065
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !10066
  ret void, !dbg !10067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !10068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10070, metadata !DIExpression()), !dbg !10071
  ret i32 -1, !dbg !10072
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10077, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32* %1, metadata !10078, metadata !DIExpression()), !dbg !10079
  %3 = ptrtoint i32* %1 to i32, !dbg !10080
  %4 = and i32 %3, -2, !dbg !10080
  %5 = icmp eq i32 %4, 2, !dbg !10080
  br i1 %5, label %6, label %9, !dbg !10080

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10081
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !10081
  br label %9, !dbg !10082

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !10082
  ret i32 %10, !dbg !10083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10086, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata i32* %1, metadata !10087, metadata !DIExpression()), !dbg !10088
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !10089
  ret i32 %3, !dbg !10090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !10091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10094, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata i32* %1, metadata !10095, metadata !DIExpression()), !dbg !10096
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10097, !srcloc !10099
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !10100
  ret i32 %3, !dbg !10101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !10102 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10107, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32* %1, metadata !10108, metadata !DIExpression()), !dbg !10111
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !10112
  call void @llvm.dbg.value(metadata i32 %3, metadata !10109, metadata !DIExpression()), !dbg !10111
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !10113
  call void @llvm.dbg.value(metadata i32 %4, metadata !10110, metadata !DIExpression()), !dbg !10111
  %5 = icmp ne i32 %3, %4, !dbg !10114
  %6 = sext i1 %5 to i32, !dbg !10115
  ret i32 %6, !dbg !10116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !10117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10121, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 %1, metadata !10122, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 %2, metadata !10123, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32* %3, metadata !10124, metadata !DIExpression()), !dbg !10125
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !10126
  ret i32 %5, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10130, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata i32 %1, metadata !10131, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata i32 %2, metadata !10132, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata i32* %3, metadata !10133, metadata !DIExpression()), !dbg !10134
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10135, !srcloc !10137
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !10138
  ret i32 %5, !dbg !10139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10140 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10142, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 %1, metadata !10143, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 %2, metadata !10144, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32* %3, metadata !10145, metadata !DIExpression()), !dbg !10150
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10151
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10153
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10153
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10153
  br i1 %11, label %33, label %12, !dbg !10153

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10150
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10150
  call void @llvm.dbg.value(metadata i8* %14, metadata !10148, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 %13, metadata !10146, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 %1, metadata !10147, metadata !DIExpression()), !dbg !10150
  br label %15, !dbg !10154

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10156
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10150
  call void @llvm.dbg.value(metadata i8* %17, metadata !10148, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i32 %16, metadata !10147, metadata !DIExpression()), !dbg !10150
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10157
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10160
  call void @llvm.dbg.value(metadata i8* %19, metadata !10148, metadata !DIExpression()), !dbg !10150
  %20 = load i8, i8* %17, align 1, !dbg !10161
  %21 = zext i8 %20 to i32, !dbg !10162
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !10157
  %23 = icmp eq i32 %22, -1, !dbg !10163
  br i1 %23, label %30, label %24, !dbg !10164

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10165
  call void @llvm.dbg.value(metadata i32 %25, metadata !10147, metadata !DIExpression()), !dbg !10150
  %26 = icmp eq i32 %25, 0, !dbg !10166
  br i1 %26, label %27, label %15, !dbg !10167, !llvm.loop !10168

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10170
  call void @llvm.dbg.value(metadata i32 %28, metadata !10146, metadata !DIExpression()), !dbg !10150
  %29 = icmp eq i32 %28, 0, !dbg !10171
  br i1 %29, label %30, label %12, !dbg !10172, !llvm.loop !10173

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10150
  call void @llvm.dbg.value(metadata i32 %31, metadata !10146, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.label(metadata !10149), !dbg !10176
  %32 = sub i32 %2, %31, !dbg !10177
  br label %33, !dbg !10178

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10150
  ret i32 %34, !dbg !10179
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !10186
  %3 = icmp eq i32 %2, -1, !dbg !10188
  br i1 %3, label %8, label %4, !dbg !10189

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !10190
  %6 = icmp eq i32 %5, -1, !dbg !10191
  %7 = sext i1 %6 to i32, !dbg !10190
  br label %8, !dbg !10192

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10185
  ret i32 %9, !dbg !10193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !10194 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !10202, metadata !DIExpression()), !dbg !10204
  %3 = tail call i64 @sys_clock_tick_get() #26, !dbg !10205
  call void @llvm.dbg.value(metadata i64 %3, metadata !10203, metadata !DIExpression()), !dbg !10204
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !10206
  %5 = sub i64 %1, %3, !dbg !10206
  store i64 %5, i64* %4, align 8, !dbg !10206
  ret void, !dbg !10207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10208 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10214, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10212, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata i8* %1, metadata !10213, metadata !DIExpression()), !dbg !10217
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #26, !dbg !10218
  call void @llvm.dbg.value(metadata i64 %4, metadata !10216, metadata !DIExpression()), !dbg !10217
  %5 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10219
  br i1 %5, label %6, label %7, !dbg !10222

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 108) #26, !dbg !10223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.122, i32 0, i32 0)) #26, !dbg !10223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 108) #26, !dbg !10223
  unreachable, !dbg !10223

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10225
  br i1 %8, label %9, label %10, !dbg !10228

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 109) #26, !dbg !10229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 109) #26, !dbg !10229
  unreachable, !dbg !10229

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !10231
  br i1 %11, label %12, label %13, !dbg !10234

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 110) #26, !dbg !10235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.126, i32 0, i32 0)) #26, !dbg !10235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 110) #26, !dbg !10235
  unreachable, !dbg !10235

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 3, !dbg !10237
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !10237
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !10239
  br i1 %16, label %22, label %17, !dbg !10240

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !10241
  %19 = load i16, i16* %18, align 4, !dbg !10241
  %20 = zext i16 %19 to i32, !dbg !10242
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #26, !dbg !10243
  br i1 %21, label %22, label %36, !dbg !10244

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10245
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10245
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #27, !dbg !10246
  call void @llvm.dbg.value(metadata i32 %25, metadata !10215, metadata !DIExpression()), !dbg !10217
  %26 = icmp eq i32 %25, 0, !dbg !10247
  br i1 %26, label %27, label %36, !dbg !10249

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !10250
  %29 = load i8*, i8** %28, align 4, !dbg !10250
  %30 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !10251
  %31 = load i16, i16* %30, align 4, !dbg !10251
  %32 = zext i16 %31 to i32, !dbg !10252
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #26, !dbg !10253
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef nonnull %0, i64 noundef %4) #27, !dbg !10254
  call void @llvm.dbg.value(metadata i32 0, metadata !10215, metadata !DIExpression()), !dbg !10217
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10255
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #27, !dbg !10256
  br label %36, !dbg !10257

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !10217
  ret i32 %37, !dbg !10258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10259 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10264, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10263, metadata !DIExpression()), !dbg !10265
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10266, !srcloc !10268
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #26, !dbg !10269
  ret i32 %3, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !10271 {
  %3 = alloca %struct.zbus_channel.18*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10275, metadata !DIExpression()), !dbg !10283
  store %struct.zbus_channel.18* %0, %struct.zbus_channel.18** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !10276, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i32 0, metadata !10277, metadata !DIExpression()), !dbg !10283
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 6, !dbg !10284
  %6 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %5, align 4, !dbg !10284
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %6, metadata !10279, metadata !DIExpression()), !dbg !10285
  %7 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %6, align 4, !dbg !10286
  %8 = icmp eq %struct.zbus_observer.19* %7, null, !dbg !10288
  br i1 %8, label %9, label %16, !dbg !10289

9:                                                ; preds = %27, %2
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10275, metadata !DIExpression()), !dbg !10283
  tail call fastcc void @_zbus_notify_runtime_listeners(%struct.zbus_channel.18* noundef %0) #27, !dbg !10290
  %10 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %5, align 4, !dbg !10291
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %10, metadata !10281, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i32 0, metadata !10277, metadata !DIExpression()), !dbg !10283
  %11 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %10, align 4, !dbg !10293
  %12 = icmp eq %struct.zbus_observer.19* %11, null, !dbg !10295
  br i1 %12, label %33, label %13, !dbg !10296

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.18** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %35, !dbg !10296

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.19* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.19** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %18, metadata !10279, metadata !DIExpression()), !dbg !10285
  %19 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %17, i32 0, i32 0, !dbg !10297
  %20 = load i8, i8* %19, align 4, !dbg !10297, !range !8665
  %21 = icmp eq i8 %20, 0, !dbg !10297
  br i1 %21, label %27, label %22, !dbg !10300

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %17, i32 0, i32 2, !dbg !10301
  %24 = load void (%struct.zbus_channel.18*)*, void (%struct.zbus_channel.18*)** %23, align 4, !dbg !10301
  %25 = icmp eq void (%struct.zbus_channel.18*)* %24, null, !dbg !10302
  br i1 %25, label %27, label %26, !dbg !10303

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10275, metadata !DIExpression()), !dbg !10283
  tail call void %24(%struct.zbus_channel.18* noundef %0) #26, !dbg !10304
  br label %27, !dbg !10306

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %18, i32 1, !dbg !10307
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !10279, metadata !DIExpression()), !dbg !10285
  %29 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %28, align 4, !dbg !10286
  %30 = icmp eq %struct.zbus_observer.19* %29, null, !dbg !10288
  br i1 %30, label %9, label %16, !dbg !10289, !llvm.loop !10308

31:                                               ; preds = %51
  %32 = load %struct.zbus_channel.18*, %struct.zbus_channel.18** %3, align 4, !dbg !10310
  br label %33, !dbg !10310

33:                                               ; preds = %31, %9
  %34 = phi %struct.zbus_channel.18* [ %32, %31 ], [ %0, %9 ], !dbg !10310
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %34, metadata !10275, metadata !DIExpression()), !dbg !10283
  call fastcc void @_zbus_notify_runtime_subscribers(%struct.zbus_channel.18* noundef %34, i64 noundef %1) #27, !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10278, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i32 0, metadata !10277, metadata !DIExpression()), !dbg !10283
  ret void, !dbg !10312

35:                                               ; preds = %13, %51
  %36 = phi %struct.zbus_observer.19* [ %11, %13 ], [ %53, %51 ]
  %37 = phi %struct.zbus_observer.19** [ %10, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %37, metadata !10281, metadata !DIExpression()), !dbg !10292
  %38 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %36, i32 0, i32 0, !dbg !10313
  %39 = load i8, i8* %38, align 4, !dbg !10313, !range !8665
  %40 = icmp eq i8 %39, 0, !dbg !10313
  br i1 %40, label %51, label %41, !dbg !10316

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %36, i32 0, i32 1, !dbg !10317
  %43 = load %struct.k_msgq*, %struct.k_msgq** %42, align 4, !dbg !10317
  %44 = icmp eq %struct.k_msgq* %43, null, !dbg !10318
  br i1 %44, label %51, label %45, !dbg !10319

45:                                               ; preds = %41
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !10320
  %46 = load i64, i64* %15, align 8, !dbg !10322
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !10322
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %3, metadata !10275, metadata !DIExpression(DW_OP_deref)), !dbg !10283
  %48 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %43, i8* noundef nonnull %14, [1 x i64] %47) #27, !dbg !10322
  call void @llvm.dbg.value(metadata i32 %48, metadata !10278, metadata !DIExpression()), !dbg !10283
  %49 = icmp eq i32 %48, 0, !dbg !10323
  br i1 %49, label %51, label %50, !dbg !10326

50:                                               ; preds = %45
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 85) #26, !dbg !10327
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.129, i32 0, i32 0)) #26, !dbg !10327
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 85) #26, !dbg !10327
  unreachable, !dbg !10327

51:                                               ; preds = %45, %35, %41
  call void @llvm.dbg.value(metadata i32 0, metadata !10277, metadata !DIExpression()), !dbg !10283
  %52 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %37, i32 1, !dbg !10329
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %52, metadata !10281, metadata !DIExpression()), !dbg !10292
  %53 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %52, align 4, !dbg !10293
  %54 = icmp eq %struct.zbus_observer.19* %53, null, !dbg !10295
  br i1 %54, label %31, label %35, !dbg !10296, !llvm.loop !10330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10336, metadata !DIExpression()), !dbg !10337
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10338, !srcloc !10340
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !10341
  ret i32 %2, !dbg !10342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_runtime_listeners(%struct.zbus_channel.18* noundef %0) unnamed_addr #1 !dbg !10343 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10345, metadata !DIExpression()), !dbg !10348
  %2 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10349
  br i1 %2, label %3, label %4, !dbg !10352

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 22) #26, !dbg !10353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 22) #26, !dbg !10353
  unreachable, !dbg !10353

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10355
  %6 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !10355
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %6) #27, !dbg !10355
  %8 = icmp eq %struct._snode* %7, null, !dbg !10355
  br i1 %8, label %25, label %9, !dbg !10355

9:                                                ; preds = %4, %23
  %10 = phi %struct._snode* [ %11, %23 ], [ %7, %4 ]
  %11 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %10) #27, !dbg !10357
  call void @llvm.dbg.value(metadata %struct._snode* %11, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10346, metadata !DIExpression()), !dbg !10348
  %12 = getelementptr inbounds %struct._snode, %struct._snode* %10, i32 1, !dbg !10358
  %13 = bitcast %struct._snode* %12 to %struct.zbus_observer.19**, !dbg !10358
  %14 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %13, align 4, !dbg !10358
  %15 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %14, i32 0, i32 0, !dbg !10362
  %16 = load i8, i8* %15, align 4, !dbg !10362, !range !8665
  %17 = icmp eq i8 %16, 0, !dbg !10362
  br i1 %17, label %23, label %18, !dbg !10363

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %14, i32 0, i32 2, !dbg !10364
  %20 = load void (%struct.zbus_channel.18*)*, void (%struct.zbus_channel.18*)** %19, align 4, !dbg !10364
  %21 = icmp eq void (%struct.zbus_channel.18*)* %20, null, !dbg !10365
  br i1 %21, label %23, label %22, !dbg !10366

22:                                               ; preds = %18
  tail call void %20(%struct.zbus_channel.18* noundef nonnull %0) #26, !dbg !10367
  br label %23, !dbg !10369

23:                                               ; preds = %9, %18, %22
  call void @llvm.dbg.value(metadata %struct._snode* %11, metadata !10346, metadata !DIExpression()), !dbg !10348
  %24 = icmp eq %struct._snode* %11, null, !dbg !10370
  br i1 %24, label %25, label %9, !dbg !10370

25:                                               ; preds = %23, %4
  ret void, !dbg !10371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_runtime_subscribers(%struct.zbus_channel.18* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !10372 {
  %3 = alloca %struct.zbus_channel.18*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10374, metadata !DIExpression()), !dbg !10380
  store %struct.zbus_channel.18* %0, %struct.zbus_channel.18** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !10375, metadata !DIExpression()), !dbg !10380
  %5 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10381
  br i1 %5, label %6, label %7, !dbg !10384

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 39) #26, !dbg !10385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 39) #26, !dbg !10385
  unreachable, !dbg !10385

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !10376, metadata !DIExpression()), !dbg !10380
  %8 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10387
  %9 = load %struct._slist*, %struct._slist** %8, align 4, !dbg !10387
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %9) #27, !dbg !10387
  %11 = icmp eq %struct._snode* %10, null, !dbg !10387
  br i1 %11, label %39, label %12, !dbg !10387

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10374, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10378, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10378, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !10379, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 0, metadata !10376, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !10378, metadata !DIExpression()), !dbg !10380
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %10) #27, !dbg !10387
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10379, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10379, metadata !DIExpression()), !dbg !10380
  %14 = bitcast %struct.zbus_channel.18** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %16, !dbg !10387

16:                                               ; preds = %37, %12
  %17 = phi %struct._snode* [ %13, %12 ], [ %38, %37 ]
  %18 = phi %struct._snode* [ %10, %12 ], [ %17, %37 ]
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !10379, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* %18, metadata !10378, metadata !DIExpression()), !dbg !10380
  %19 = getelementptr inbounds %struct._snode, %struct._snode* %18, i32 1, !dbg !10389
  %20 = bitcast %struct._snode* %19 to %struct.zbus_observer.19**, !dbg !10389
  %21 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %20, align 4, !dbg !10389
  %22 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %21, i32 0, i32 0, !dbg !10393
  %23 = load i8, i8* %22, align 4, !dbg !10393, !range !8665
  %24 = icmp eq i8 %23, 0, !dbg !10393
  br i1 %24, label %35, label %25, !dbg !10394

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %21, i32 0, i32 1, !dbg !10395
  %27 = load %struct.k_msgq*, %struct.k_msgq** %26, align 4, !dbg !10395
  %28 = icmp eq %struct.k_msgq* %27, null, !dbg !10396
  br i1 %28, label %35, label %29, !dbg !10397

29:                                               ; preds = %25
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !10398
  %30 = load i64, i64* %15, align 8, !dbg !10400
  %31 = insertvalue [1 x i64] poison, i64 %30, 0, !dbg !10400
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %3, metadata !10374, metadata !DIExpression(DW_OP_deref)), !dbg !10380
  %32 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %27, i8* noundef nonnull %14, [1 x i64] %31) #27, !dbg !10400
  call void @llvm.dbg.value(metadata i32 %32, metadata !10377, metadata !DIExpression()), !dbg !10380
  %33 = icmp eq i32 %32, 0, !dbg !10401
  br i1 %33, label %35, label %34, !dbg !10404

34:                                               ; preds = %29
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 54) #26, !dbg !10405
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.17.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.129, i32 0, i32 0), i32 noundef %32) #26, !dbg !10405
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 54) #26, !dbg !10405
  unreachable, !dbg !10405

35:                                               ; preds = %29, %16, %25
  call void @llvm.dbg.value(metadata i32 0, metadata !10376, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !10378, metadata !DIExpression()), !dbg !10380
  %36 = icmp eq %struct._snode* %17, null, !dbg !10407
  br i1 %36, label %39, label %37, !dbg !10407

37:                                               ; preds = %35
  %38 = call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %17) #27, !dbg !10407
  call void @llvm.dbg.value(metadata %struct._snode* %38, metadata !10379, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !10378, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 0, metadata !10376, metadata !DIExpression()), !dbg !10380
  br label %16, !dbg !10387

39:                                               ; preds = %35, %7
  ret void, !dbg !10408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10409 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10415, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10413, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i8* %1, metadata !10414, metadata !DIExpression()), !dbg !10416
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10417, !srcloc !10419
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10420
  ret i32 %4, !dbg !10421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10422 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10426, metadata !DIExpression()), !dbg !10427
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10428
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10428
  ret %struct._snode* %3, !dbg !10429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10430 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10434, metadata !DIExpression()), !dbg !10435
  %2 = icmp eq %struct._snode* %0, null, !dbg !10436
  br i1 %2, label %5, label %3, !dbg !10436

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !10436
  br label %5, !dbg !10436

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10436
  ret %struct._snode* %6, !dbg !10436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10437 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10439, metadata !DIExpression()), !dbg !10440
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !10441
  ret %struct._snode* %2, !dbg !10441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10442 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10444, metadata !DIExpression()), !dbg !10445
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10446
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10446
  ret %struct._snode* %3, !dbg !10447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.18* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10448 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10454, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10452, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i8* %1, metadata !10453, metadata !DIExpression()), !dbg !10456
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10457
  br i1 %4, label %5, label %6, !dbg !10460

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 134) #26, !dbg !10461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.122, i32 0, i32 0)) #26, !dbg !10461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 134) #26, !dbg !10461
  unreachable, !dbg !10461

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10463
  br i1 %7, label %8, label %9, !dbg !10466

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 135) #26, !dbg !10467
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10467
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 135) #26, !dbg !10467
  unreachable, !dbg !10467

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !10469
  br i1 %10, label %11, label %12, !dbg !10472

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 136) #26, !dbg !10473
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.126, i32 0, i32 0)) #26, !dbg !10473
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 136) #26, !dbg !10473
  unreachable, !dbg !10473

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10475
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10475
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #27, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %15, metadata !10455, metadata !DIExpression()), !dbg !10456
  %16 = icmp eq i32 %15, 0, !dbg !10477
  br i1 %16, label %17, label %26, !dbg !10479

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !10480
  %19 = load i8*, i8** %18, align 4, !dbg !10480
  %20 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !10481
  %21 = load i16, i16* %20, align 4, !dbg !10481
  %22 = zext i16 %21 to i32, !dbg !10482
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #26, !dbg !10483
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10484
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #27, !dbg !10485
  br label %26, !dbg !10486

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !10456
  ret i32 %27, !dbg !10487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.18* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10488 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10493, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10492, metadata !DIExpression()), !dbg !10496
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #26, !dbg !10497
  call void @llvm.dbg.value(metadata i64 %3, metadata !10495, metadata !DIExpression()), !dbg !10496
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10498
  br i1 %4, label %5, label %6, !dbg !10501

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 153) #26, !dbg !10502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.122, i32 0, i32 0)) #26, !dbg !10502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 153) #26, !dbg !10502
  unreachable, !dbg !10502

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10504
  br i1 %7, label %8, label %9, !dbg !10507

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 154) #26, !dbg !10508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 154) #26, !dbg !10508
  unreachable, !dbg !10508

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10510
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10510
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #27, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %12, metadata !10494, metadata !DIExpression()), !dbg !10496
  %13 = icmp eq i32 %12, 0, !dbg !10512
  br i1 %13, label %14, label %17, !dbg !10514

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef nonnull %0, i64 noundef %3) #27, !dbg !10515
  call void @llvm.dbg.value(metadata i32 0, metadata !10494, metadata !DIExpression()), !dbg !10496
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10516
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !10517
  br label %17, !dbg !10518

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !10519
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.18* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10520 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10523, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10522, metadata !DIExpression()), !dbg !10525
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10526
  br i1 %3, label %4, label %5, !dbg !10529

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 170) #26, !dbg !10530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.122, i32 0, i32 0)) #26, !dbg !10530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 170) #26, !dbg !10530
  unreachable, !dbg !10530

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10532
  br i1 %6, label %7, label %8, !dbg !10535

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 171) #26, !dbg !10536
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10536
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 171) #26, !dbg !10536
  unreachable, !dbg !10536

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10538
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !10538
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #27, !dbg !10539
  call void @llvm.dbg.value(metadata i32 %11, metadata !10524, metadata !DIExpression()), !dbg !10525
  ret i32 %11, !dbg !10540
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.18* noundef readonly %0) local_unnamed_addr #1 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10545, metadata !DIExpression()), !dbg !10547
  %2 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10548
  br i1 %2, label %3, label %4, !dbg !10551

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 184) #26, !dbg !10552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.122, i32 0, i32 0)) #26, !dbg !10552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 184) #26, !dbg !10552
  unreachable, !dbg !10552

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10554
  br i1 %5, label %6, label %7, !dbg !10557

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 185) #26, !dbg !10558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 185) #26, !dbg !10558
  unreachable, !dbg !10558

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10560
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !10560
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #27, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %10, metadata !10546, metadata !DIExpression()), !dbg !10547
  ret i32 %10, !dbg !10562
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef readonly %0, %struct.zbus_channel.18** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10563 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10570, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %0, metadata !10568, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %1, metadata !10569, metadata !DIExpression()), !dbg !10571
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10572
  br i1 %4, label %5, label %6, !dbg !10575

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 195) #26, !dbg !10576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.122, i32 0, i32 0)) #26, !dbg !10576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 195) #26, !dbg !10576
  unreachable, !dbg !10576

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer.19* %0, null, !dbg !10578
  br i1 %7, label %8, label %9, !dbg !10581

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 196) #26, !dbg !10582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.136, i32 0, i32 0)) #26, !dbg !10582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 196) #26, !dbg !10582
  unreachable, !dbg !10582

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel.18** %1, null, !dbg !10584
  br i1 %10, label %11, label %12, !dbg !10587

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 197) #26, !dbg !10588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.124, i32 0, i32 0)) #26, !dbg !10588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.121, i32 0, i32 0), i32 noundef 197) #26, !dbg !10588
  unreachable, !dbg !10588

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %0, i32 0, i32 1, !dbg !10590
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !10590
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !10592
  br i1 %15, label %19, label %16, !dbg !10593

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel.18** %1 to i8*, !dbg !10594
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #27, !dbg !10595
  br label %19, !dbg !10596

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !10571
  ret i32 %20, !dbg !10597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10598 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10604, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i8* %1, metadata !10603, metadata !DIExpression()), !dbg !10605
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10606, !srcloc !10608
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10609
  ret i32 %4, !dbg !10610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.k_mem_slab* @zbus_runtime_obs_pool() local_unnamed_addr #6 !dbg !10611 {
  ret %struct.k_mem_slab* @_zbus_runtime_obs_pool, !dbg !10615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef readonly %0, %struct.zbus_observer.19* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10616 {
  %4 = alloca %struct.zbus_observer_node*, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata i64 undef, metadata !10626, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10624, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %1, metadata !10625, metadata !DIExpression()), !dbg !10633
  %6 = bitcast %struct.zbus_observer_node** %4 to i8*, !dbg !10634
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !10634
  %7 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #26, !dbg !10635
  call void @llvm.dbg.value(metadata i64 %7, metadata !10630, metadata !DIExpression()), !dbg !10633
  %8 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10636
  br i1 %8, label %9, label %10, !dbg !10639

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 26) #26, !dbg !10640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.143, i32 0, i32 0)) #26, !dbg !10640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 26) #26, !dbg !10640
  unreachable, !dbg !10640

10:                                               ; preds = %3
  %11 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10642
  br i1 %11, label %12, label %13, !dbg !10645

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 27) #26, !dbg !10646
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.145, i32 0, i32 0)) #26, !dbg !10646
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 27) #26, !dbg !10646
  unreachable, !dbg !10646

13:                                               ; preds = %10
  %14 = icmp eq %struct.zbus_observer.19* %1, null, !dbg !10648
  br i1 %14, label %15, label %16, !dbg !10651

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 28) #26, !dbg !10652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.147, i32 0, i32 0)) #26, !dbg !10652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 28) #26, !dbg !10652
  unreachable, !dbg !10652

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 6, !dbg !10654
  %18 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %17, align 4, !dbg !10654
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %18, metadata !10631, metadata !DIExpression()), !dbg !10655
  %19 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %18, align 4, !dbg !10656
  %20 = icmp eq %struct.zbus_observer.19* %19, null, !dbg !10658
  br i1 %20, label %29, label %24, !dbg !10659

21:                                               ; preds = %24
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !10631, metadata !DIExpression()), !dbg !10655
  %22 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %28, align 4, !dbg !10656
  %23 = icmp eq %struct.zbus_observer.19* %22, null, !dbg !10658
  br i1 %23, label %29, label %24, !dbg !10659, !llvm.loop !10660

24:                                               ; preds = %16, %21
  %25 = phi %struct.zbus_observer.19* [ %22, %21 ], [ %19, %16 ]
  %26 = phi %struct.zbus_observer.19** [ %28, %21 ], [ %18, %16 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %26, metadata !10631, metadata !DIExpression()), !dbg !10655
  %27 = icmp eq %struct.zbus_observer.19* %25, %1, !dbg !10662
  %28 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %26, i32 1, !dbg !10665
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !10631, metadata !DIExpression()), !dbg !10655
  br i1 %27, label %72, label %21, !dbg !10666

29:                                               ; preds = %21, %16
  %30 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10667
  %31 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10667
  %32 = tail call fastcc i32 @k_mutex_lock.148(%struct.k_mutex* noundef %31, [1 x i64] %2) #27, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %32, metadata !10627, metadata !DIExpression()), !dbg !10633
  %33 = icmp eq i32 %32, 0, !dbg !10669
  br i1 %33, label %34, label %72, !dbg !10671

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10672
  %36 = load %struct._slist*, %struct._slist** %35, align 4, !dbg !10672
  %37 = tail call fastcc %struct._snode* @sys_slist_peek_head.149(%struct._slist* noundef %36) #27, !dbg !10672
  %38 = icmp eq %struct._snode* %37, null, !dbg !10672
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !10628, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !10628, metadata !DIExpression()), !dbg !10633
  br i1 %38, label %57, label %39, !dbg !10672

39:                                               ; preds = %34
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !10629, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !10628, metadata !DIExpression()), !dbg !10633
  %40 = getelementptr inbounds %struct._snode, %struct._snode* %37, i32 1, !dbg !10674
  %41 = bitcast %struct._snode* %40 to %struct.zbus_observer.19**, !dbg !10674
  %42 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %41, align 4, !dbg !10674
  %43 = icmp eq %struct.zbus_observer.19* %42, %1, !dbg !10678
  br i1 %43, label %46, label %44, !dbg !10679

44:                                               ; preds = %39
  %45 = tail call fastcc %struct._snode* @sys_slist_peek_next.150(%struct._snode* noundef nonnull %37) #27, !dbg !10672
  call void @llvm.dbg.value(metadata %struct._snode* %45, metadata !10629, metadata !DIExpression()), !dbg !10633
  br label %48, !dbg !10679

46:                                               ; preds = %51, %39
  %47 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10680
  tail call fastcc void @k_mutex_unlock.151(%struct.k_mutex* noundef %47) #27, !dbg !10682
  br label %72, !dbg !10683

48:                                               ; preds = %44, %51
  %49 = phi %struct._snode* [ %45, %44 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !10629, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !10628, metadata !DIExpression()), !dbg !10633
  %50 = icmp eq %struct._snode* %49, null, !dbg !10684
  br i1 %50, label %57, label %51, !dbg !10684

51:                                               ; preds = %48
  %52 = tail call fastcc %struct._snode* @sys_slist_peek_next.150(%struct._snode* noundef nonnull %49) #27, !dbg !10684
  call void @llvm.dbg.value(metadata %struct._snode* %52, metadata !10629, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !10628, metadata !DIExpression()), !dbg !10633
  %53 = getelementptr inbounds %struct._snode, %struct._snode* %49, i32 1, !dbg !10674
  %54 = bitcast %struct._snode* %53 to %struct.zbus_observer.19**, !dbg !10674
  %55 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %54, align 4, !dbg !10674
  %56 = icmp eq %struct.zbus_observer.19* %55, %1, !dbg !10678
  br i1 %56, label %46, label %48, !dbg !10679

57:                                               ; preds = %48, %34
  store %struct.zbus_observer_node* null, %struct.zbus_observer_node** %4, align 4, !dbg !10684
  %58 = bitcast %struct.zbus_observer_node** %4 to i8**, !dbg !10685
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %5, i64 noundef %7) #26, !dbg !10686
  %59 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !10687
  %60 = load i64, i64* %59, align 8, !dbg !10687
  %61 = insertvalue [1 x i64] poison, i64 %60, 0, !dbg !10687
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node** %4, metadata !10628, metadata !DIExpression(DW_OP_deref)), !dbg !10633
  %62 = call i32 @k_mem_slab_alloc(%struct.k_mem_slab* noundef nonnull @_zbus_runtime_obs_pool, i8** noundef nonnull %58, [1 x i64] %61) #26, !dbg !10687
  call void @llvm.dbg.value(metadata i32 %62, metadata !10627, metadata !DIExpression()), !dbg !10633
  %63 = icmp eq i32 %62, 0, !dbg !10688
  br i1 %63, label %66, label %64, !dbg !10690

64:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.8.152, i32 0, i32 0), i32 noundef 69) #26, !dbg !10691
  %65 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10697
  call fastcc void @k_mutex_unlock.151(%struct.k_mutex* noundef %65) #27, !dbg !10698
  br label %72, !dbg !10699

66:                                               ; preds = %57
  %67 = load %struct.zbus_observer_node*, %struct.zbus_observer_node** %4, align 4, !dbg !10700
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* %67, metadata !10628, metadata !DIExpression()), !dbg !10633
  %68 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %67, i32 0, i32 1, !dbg !10701
  store %struct.zbus_observer.19* %1, %struct.zbus_observer.19** %68, align 4, !dbg !10702
  %69 = load %struct._slist*, %struct._slist** %35, align 4, !dbg !10703
  %70 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %67, i32 0, i32 0, !dbg !10704
  call fastcc void @sys_slist_append(%struct._slist* noundef %69, %struct._snode* noundef %70) #27, !dbg !10705
  %71 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !10706
  call fastcc void @k_mutex_unlock.151(%struct.k_mutex* noundef %71) #27, !dbg !10707
  br label %72, !dbg !10708

72:                                               ; preds = %24, %29, %66, %64, %46
  %73 = phi i32 [ -120, %46 ], [ %62, %64 ], [ 0, %66 ], [ %32, %29 ], [ -17, %24 ], !dbg !10633
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !10709
  ret i32 %73, !dbg !10709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock.148(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10710 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10715, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10714, metadata !DIExpression()), !dbg !10716
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10717, !srcloc !10719
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #26, !dbg !10720
  ret i32 %3, !dbg !10721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.149(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10722 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10726, metadata !DIExpression()), !dbg !10727
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10728
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10728
  ret %struct._snode* %3, !dbg !10729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next.150(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10730 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10734, metadata !DIExpression()), !dbg !10735
  %2 = icmp eq %struct._snode* %0, null, !dbg !10736
  br i1 %2, label %5, label %3, !dbg !10736

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check.153(%struct._snode* noundef nonnull %0) #27, !dbg !10736
  br label %5, !dbg !10736

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10736
  ret %struct._snode* %6, !dbg !10736
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.151(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10737 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10741, metadata !DIExpression()), !dbg !10742
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10743, !srcloc !10745
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !10746
  ret void, !dbg !10747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_append(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10748 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10752, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10753, metadata !DIExpression()), !dbg !10754
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef null) #27, !dbg !10755
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10756
  %4 = icmp eq %struct._snode* %3, null, !dbg !10756
  br i1 %4, label %5, label %6, !dbg !10755

5:                                                ; preds = %2
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10758
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10758
  br label %7, !dbg !10758

6:                                                ; preds = %2
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %3, %struct._snode* noundef %1) #27, !dbg !10760
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !10760
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10762 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10766, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10767, metadata !DIExpression()), !dbg !10768
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10769
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10770
  ret void, !dbg !10771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10772 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10774, metadata !DIExpression()), !dbg !10775
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10776
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10776
  ret %struct._snode* %3, !dbg !10777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10778 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10780, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10781, metadata !DIExpression()), !dbg !10782
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10783
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10784
  ret void, !dbg !10785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10786 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10788, metadata !DIExpression()), !dbg !10790
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10789, metadata !DIExpression()), !dbg !10790
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10791
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10792
  ret void, !dbg !10793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check.153(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10794 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10796, metadata !DIExpression()), !dbg !10797
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek.154(%struct._snode* noundef %0) #27, !dbg !10798
  ret %struct._snode* %2, !dbg !10798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek.154(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10799 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10801, metadata !DIExpression()), !dbg !10802
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10803
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10803
  ret %struct._snode* %3, !dbg !10804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef readonly %0, %struct.zbus_observer.19* noundef readnone %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10805 {
  %4 = alloca %struct.zbus_observer_node*, align 4
  call void @llvm.dbg.value(metadata i64 undef, metadata !10809, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10807, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %1, metadata !10808, metadata !DIExpression()), !dbg !10814
  %5 = bitcast %struct.zbus_observer_node** %4 to i8*, !dbg !10815
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10815
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* null, metadata !10813, metadata !DIExpression()), !dbg !10814
  %6 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10816
  br i1 %6, label %7, label %8, !dbg !10819

7:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 79) #26, !dbg !10820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.143, i32 0, i32 0)) #26, !dbg !10820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 79) #26, !dbg !10820
  unreachable, !dbg !10820

8:                                                ; preds = %3
  %9 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10822
  br i1 %9, label %10, label %11, !dbg !10825

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 80) #26, !dbg !10826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.145, i32 0, i32 0)) #26, !dbg !10826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 80) #26, !dbg !10826
  unreachable, !dbg !10826

11:                                               ; preds = %8
  %12 = icmp eq %struct.zbus_observer.19* %1, null, !dbg !10828
  br i1 %12, label %13, label %14, !dbg !10831

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 81) #26, !dbg !10832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.147, i32 0, i32 0)) #26, !dbg !10832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.142, i32 0, i32 0), i32 noundef 81) #26, !dbg !10832
  unreachable, !dbg !10832

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10834
  %16 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10834
  %17 = tail call fastcc i32 @k_mutex_lock.148(%struct.k_mutex* noundef %16, [1 x i64] %2) #27, !dbg !10835
  call void @llvm.dbg.value(metadata i32 %17, metadata !10810, metadata !DIExpression()), !dbg !10814
  %18 = icmp eq i32 %17, 0, !dbg !10836
  br i1 %18, label %19, label %52, !dbg !10838

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10839
  %21 = load %struct._slist*, %struct._slist** %20, align 4, !dbg !10839
  %22 = tail call fastcc %struct._snode* @sys_slist_peek_head.149(%struct._slist* noundef %21) #27, !dbg !10839
  %23 = icmp eq %struct._snode* %22, null, !dbg !10839
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10811, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10811, metadata !DIExpression()), !dbg !10814
  br i1 %23, label %50, label %24, !dbg !10839

24:                                               ; preds = %19
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* null, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !10812, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10811, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10811, metadata !DIExpression()), !dbg !10814
  %25 = getelementptr inbounds %struct._snode, %struct._snode* %22, i32 1, !dbg !10841
  %26 = bitcast %struct._snode* %25 to %struct.zbus_observer.19**, !dbg !10841
  %27 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %26, align 4, !dbg !10841
  %28 = icmp eq %struct.zbus_observer.19* %27, %1, !dbg !10845
  br i1 %28, label %33, label %29, !dbg !10846

29:                                               ; preds = %24
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10811, metadata !DIExpression()), !dbg !10814
  %30 = tail call fastcc %struct._snode* @sys_slist_peek_next.150(%struct._snode* noundef nonnull %22) #27, !dbg !10839
  call void @llvm.dbg.value(metadata %struct._snode* %30, metadata !10812, metadata !DIExpression()), !dbg !10814
  br label %40, !dbg !10846

31:                                               ; preds = %44
  %32 = bitcast %struct._snode* %41 to %struct.zbus_observer_node*
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* %32, metadata !10813, metadata !DIExpression()), !dbg !10814
  br label %33, !dbg !10846

33:                                               ; preds = %31, %24
  %34 = phi %struct.zbus_observer_node* [ %32, %31 ], [ null, %24 ]
  %35 = phi %struct._snode* [ %42, %31 ], [ %22, %24 ]
  %36 = bitcast %struct.zbus_observer_node** %4 to %struct._snode**, !dbg !10847
  store %struct._snode* %35, %struct._snode** %36, align 4, !dbg !10847
  %37 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %34, i32 0, i32 0, !dbg !10848
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %21, %struct._snode* noundef %37, %struct._snode* noundef nonnull %35) #27, !dbg !10850
  %38 = bitcast %struct.zbus_observer_node** %4 to i8**, !dbg !10851
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node** %4, metadata !10811, metadata !DIExpression(DW_OP_deref)), !dbg !10814
  call void @k_mem_slab_free(%struct.k_mem_slab* noundef nonnull @_zbus_runtime_obs_pool, i8** noundef nonnull %38) #26, !dbg !10852
  %39 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10853
  call fastcc void @k_mutex_unlock.151(%struct.k_mutex* noundef %39) #27, !dbg !10854
  br label %52, !dbg !10855

40:                                               ; preds = %29, %44
  %41 = phi %struct._snode* [ %22, %29 ], [ %42, %44 ]
  %42 = phi %struct._snode* [ %30, %29 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10812, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10811, metadata !DIExpression()), !dbg !10814
  %43 = icmp eq %struct._snode* %42, null, !dbg !10847
  br i1 %43, label %50, label %44, !dbg !10847

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10813, metadata !DIExpression()), !dbg !10814
  %45 = tail call fastcc %struct._snode* @sys_slist_peek_next.150(%struct._snode* noundef nonnull %42) #27, !dbg !10847
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %45, metadata !10812, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10811, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10811, metadata !DIExpression()), !dbg !10814
  %46 = getelementptr inbounds %struct._snode, %struct._snode* %42, i32 1, !dbg !10841
  %47 = bitcast %struct._snode* %46 to %struct.zbus_observer.19**, !dbg !10841
  %48 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %47, align 4, !dbg !10841
  %49 = icmp eq %struct.zbus_observer.19* %48, %1, !dbg !10845
  br i1 %49, label %31, label %40, !dbg !10846

50:                                               ; preds = %40, %19
  %51 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10856
  tail call fastcc void @k_mutex_unlock.151(%struct.k_mutex* noundef %51) #27, !dbg !10857
  br label %52, !dbg !10858

52:                                               ; preds = %14, %50, %33
  %53 = phi i32 [ 0, %33 ], [ -61, %50 ], [ %17, %14 ], !dbg !10814
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10859
  ret i32 %53, !dbg !10859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10860 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10864, metadata !DIExpression()), !dbg !10867
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10865, metadata !DIExpression()), !dbg !10867
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10866, metadata !DIExpression()), !dbg !10867
  %4 = icmp eq %struct._snode* %1, null, !dbg !10868
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek.154(%struct._snode* noundef %2) #27, !dbg !10870
  br i1 %4, label %6, label %11, !dbg !10871

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !10872
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10874
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10874
  br i1 %8, label %9, label %15, !dbg !10872

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head.149(%struct._slist* noundef %0) #27, !dbg !10876
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !10876
  br label %15, !dbg !10876

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !10878
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !10880
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10880
  br i1 %13, label %14, label %15, !dbg !10878

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !10882
  br label %15, !dbg !10882

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !10871
  ret void, !dbg !10871
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10884 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10886, metadata !DIExpression()), !dbg !10887
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !10888
  ret void, !dbg !10889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10894, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %1, metadata !10895, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10896, metadata !DIExpression()), !dbg !10900
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10901
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10901
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10901
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10897, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %0, metadata !10899, metadata !DIExpression()), !dbg !10900
  %7 = icmp slt i32 %0, %1, !dbg !10902
  br i1 %7, label %8, label %22, !dbg !10905

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10899, metadata !DIExpression()), !dbg !10900
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !10906
  %11 = icmp eq i32 %10, 0, !dbg !10906
  br i1 %11, label %19, label %12, !dbg !10909

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !10910
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10912
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10912
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10914
  br i1 %15, label %19, label %16, !dbg !10915

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10916
  %18 = load i8*, i8** %17, align 4, !dbg !10916
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !10917
  br label %19, !dbg !10918

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %20, metadata !10899, metadata !DIExpression()), !dbg !10900
  %21 = icmp eq i32 %20, %1, !dbg !10902
  br i1 %21, label %22, label %8, !dbg !10905, !llvm.loop !10920

22:                                               ; preds = %19, %3
  ret void, !dbg !10922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10925, metadata !DIExpression()), !dbg !10926
  %2 = shl nuw i32 1, %0, !dbg !10927
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !10930
  ret i32 %3, !dbg !10931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !10932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = shl nuw i32 1, %0, !dbg !10938
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !10941
  ret void, !dbg !10942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !10943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10946, metadata !DIExpression()), !dbg !10947
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10948
  ret void, !dbg !10949
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10952, metadata !DIExpression()), !dbg !10953
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10954
  %3 = and i32 %2, %0, !dbg !10954
  %4 = icmp eq i32 %3, %0, !dbg !10955
  %5 = zext i1 %4 to i32, !dbg !10955
  ret i32 %5, !dbg !10956
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10957 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10959, metadata !DIExpression()), !dbg !10960
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !10961
  ret void, !dbg !10962
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10965, metadata !DIExpression()), !dbg !10966
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !10967
  ret void, !dbg !10968
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10969 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10971, metadata !DIExpression()), !dbg !10972
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !10973
  ret void, !dbg !10974
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10975 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10977, metadata !DIExpression()), !dbg !10978
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !10979
  ret void, !dbg !10980
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10981 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10983, metadata !DIExpression()), !dbg !10984
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !10985
  ret void, !dbg !10986
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10989, metadata !DIExpression()), !dbg !10990
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !10991
  ret void, !dbg !10992
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10995, metadata !DIExpression()), !dbg !10996
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !10997
  ret void, !dbg !10998
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11001, metadata !DIExpression()), !dbg !11002
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !11003
  ret void, !dbg !11004
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !11005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11007, metadata !DIExpression()), !dbg !11008
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !11009
  ret void, !dbg !11010
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11013, metadata !DIExpression()), !dbg !11014
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !11015
  ret void, !dbg !11016
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !11017 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11019, metadata !DIExpression()), !dbg !11020
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !11021
  ret i32 0, !dbg !11022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1618 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1622, metadata !DIExpression()), !dbg !11023
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !11024
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !11026
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !11028
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !11030
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !11032
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !11034
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !11036
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !11038
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !11040
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !11042
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !11044
  ret void, !dbg !11046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !11047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11049, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 0, metadata !11050, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 undef, metadata !11050, metadata !DIExpression()), !dbg !11051
  %2 = lshr i32 6684671, %0, !dbg !11052
  %3 = and i32 %2, 1, !dbg !11052
  %4 = or i32 %3, %0, !dbg !11054
  %5 = icmp eq i32 %4, 0, !dbg !11054
  br i1 %5, label %6, label %7, !dbg !11054

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.160, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 123) #26, !dbg !11055
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.161, i32 0, i32 0), i32 noundef 123) #26, !dbg !11055
  unreachable, !dbg !11055

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !11060
  %9 = load i32, i32* %8, align 4, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %9, metadata !11050, metadata !DIExpression()), !dbg !11051
  %10 = shl nuw i32 1, %0, !dbg !11061
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #27, !dbg !11062
  tail call void @arch_irq_enable(i32 noundef %9) #26, !dbg !11063
  ret void, !dbg !11064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !11065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11067, metadata !DIExpression()), !dbg !11068
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !11069
  %3 = or i32 %2, %0, !dbg !11069
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !11069
  ret void, !dbg !11070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !11071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11073, metadata !DIExpression()), !dbg !11074
  %2 = icmp slt i32 %0, 32, !dbg !11075
  br i1 %2, label %3, label %5, !dbg !11077

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !11078
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !11080
  br label %5, !dbg !11081

5:                                                ; preds = %1, %3
  ret void, !dbg !11082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !11083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11085, metadata !DIExpression()), !dbg !11086
  %2 = xor i32 %0, -1, !dbg !11087
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !11087
  %4 = and i32 %3, %2, !dbg !11087
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !11087
  ret void, !dbg !11088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !11089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11093, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.value(metadata i32 %1, metadata !11094, metadata !DIExpression()), !dbg !11095
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !11096

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !11097
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !11099
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !11100
  br label %11, !dbg !11101

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !11102
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !11103
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !11104
  br label %11, !dbg !11105

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !11106
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !11107
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !11108
  br label %11, !dbg !11109

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !11110
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !11111
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !11112
  br label %11, !dbg !11113

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !11114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !11115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11117, metadata !DIExpression()), !dbg !11118
  %2 = xor i32 %0, -1, !dbg !11119
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !11119
  %4 = and i32 %3, %2, !dbg !11119
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !11119
  ret void, !dbg !11120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !11121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11123, metadata !DIExpression()), !dbg !11124
  %2 = xor i32 %0, -1, !dbg !11125
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !11125
  %4 = and i32 %3, %2, !dbg !11125
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !11125
  ret void, !dbg !11126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !11127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11129, metadata !DIExpression()), !dbg !11130
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !11131
  %3 = or i32 %2, %0, !dbg !11131
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !11131
  ret void, !dbg !11132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !11133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11135, metadata !DIExpression()), !dbg !11136
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !11137
  %3 = or i32 %2, %0, !dbg !11137
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !11137
  ret void, !dbg !11138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !11139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11143, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !11144, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i8* %2, metadata !11145, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !11146, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !11148, metadata !DIExpression()), !dbg !11149
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !11150
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !11150
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !11152
  br i1 %6, label %7, label %9, !dbg !11153

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !11154
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !11155
  store i8* %2, i8** %8, align 4, !dbg !11156
  br label %9, !dbg !11157

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !11149
  ret i32 %10, !dbg !11158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !11159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11161, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !11162, metadata !DIExpression()), !dbg !11164
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !11163, metadata !DIExpression()), !dbg !11164
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !11165
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !11166
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !11167
  store i8* null, i8** %3, align 4, !dbg !11168
  ret void, !dbg !11169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !11170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11172, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.value(metadata i8* %1, metadata !11173, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.value(metadata i8* %1, metadata !11174, metadata !DIExpression()), !dbg !11177
  %3 = bitcast i8* %1 to i32*, !dbg !11178
  %4 = load i32, i32* %3, align 4, !dbg !11178
  %5 = add i32 %4, -169, !dbg !11178
  %6 = icmp ult i32 %5, -121, !dbg !11178
  br i1 %6, label %15, label %7, !dbg !11180

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !11181
  %9 = inttoptr i32 %8 to i32*, !dbg !11182
  call void @llvm.dbg.value(metadata i32* %9, metadata !11175, metadata !DIExpression()), !dbg !11177
  %10 = load volatile i32, i32* %9, align 4, !dbg !11183
  call void @llvm.dbg.value(metadata i32 %10, metadata !11176, metadata !DIExpression()), !dbg !11177
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11184
  %12 = bitcast i8* %11 to i32*, !dbg !11184
  %13 = load i32, i32* %12, align 4, !dbg !11184
  %14 = or i32 %13, %10, !dbg !11185
  call void @llvm.dbg.value(metadata i32 %14, metadata !11176, metadata !DIExpression()), !dbg !11177
  store volatile i32 %14, i32* %9, align 4, !dbg !11186
  br label %15, !dbg !11187

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !11177
  ret i32 %16, !dbg !11188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !11189 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11191, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.value(metadata i8* %1, metadata !11192, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.value(metadata i8* %1, metadata !11193, metadata !DIExpression()), !dbg !11196
  %3 = bitcast i8* %1 to i32*, !dbg !11197
  %4 = load i32, i32* %3, align 4, !dbg !11197
  %5 = add i32 %4, -169, !dbg !11197
  %6 = icmp ult i32 %5, -121, !dbg !11197
  br i1 %6, label %16, label %7, !dbg !11199

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !11200
  %9 = inttoptr i32 %8 to i32*, !dbg !11201
  call void @llvm.dbg.value(metadata i32* %9, metadata !11194, metadata !DIExpression()), !dbg !11196
  %10 = load volatile i32, i32* %9, align 4, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %10, metadata !11195, metadata !DIExpression()), !dbg !11196
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11203
  %12 = bitcast i8* %11 to i32*, !dbg !11203
  %13 = load i32, i32* %12, align 4, !dbg !11203
  %14 = xor i32 %13, -1, !dbg !11204
  %15 = and i32 %10, %14, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %15, metadata !11195, metadata !DIExpression()), !dbg !11196
  store volatile i32 %15, i32* %9, align 4, !dbg !11206
  br label %16, !dbg !11207

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !11196
  ret i32 %17, !dbg !11208
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !11209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11211, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata i8* %1, metadata !11212, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata i32* %2, metadata !11213, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata i8* %1, metadata !11214, metadata !DIExpression()), !dbg !11219
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !11220
  call void @llvm.dbg.value(metadata i32 %4, metadata !11215, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata i32 undef, metadata !11216, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata i32 undef, metadata !11217, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata i32 %4, metadata !11218, metadata !DIExpression()), !dbg !11219
  %5 = bitcast i8* %1 to i32*, !dbg !11221
  %6 = load i32, i32* %5, align 4, !dbg !11221
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !11222

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #27, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %8, metadata !11216, metadata !DIExpression()), !dbg !11219
  br label %19, !dbg !11224

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #27, !dbg !11226
  call void @llvm.dbg.value(metadata i32 %10, metadata !11217, metadata !DIExpression()), !dbg !11219
  br label %19, !dbg !11227

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !11228
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #27, !dbg !11229
  br label %19, !dbg !11230

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !11231
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #27, !dbg !11232
  br label %19, !dbg !11233

17:                                               ; preds = %3
  br label %19, !dbg !11234

18:                                               ; preds = %3
  br label %19, !dbg !11235

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !11236
  br label %21, !dbg !11237

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !11219
  ret i32 %22, !dbg !11237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !11238 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11240, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i8* %1, metadata !11241, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i8* %2, metadata !11242, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i8* %1, metadata !11243, metadata !DIExpression()), !dbg !11248
  %4 = bitcast i8* %1 to i32*, !dbg !11249
  %5 = load i32, i32* %4, align 4, !dbg !11249
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !11250
  call void @llvm.dbg.value(metadata i32 %6, metadata !11247, metadata !DIExpression()), !dbg !11248
  %7 = icmp slt i32 %6, 0, !dbg !11251
  br i1 %7, label %22, label %8, !dbg !11253

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !11243, metadata !DIExpression()), !dbg !11248
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11254
  %10 = bitcast i8* %9 to i32*, !dbg !11254
  %11 = load i32, i32* %10, align 4, !dbg !11254
  %12 = lshr i32 %11, 16, !dbg !11254
  %13 = and i32 %12, 7, !dbg !11254
  %14 = lshr i32 %11, 8, !dbg !11255
  %15 = and i32 %14, 31, !dbg !11255
  %16 = shl i32 %13, %15, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %16, metadata !11246, metadata !DIExpression()), !dbg !11248
  %17 = and i32 %11, 255, !dbg !11257
  %18 = or i32 %17, 1073887232, !dbg !11258
  %19 = inttoptr i32 %18 to i32*, !dbg !11259
  call void @llvm.dbg.value(metadata i32* %19, metadata !11244, metadata !DIExpression()), !dbg !11248
  %20 = load volatile i32, i32* %19, align 4, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %20, metadata !11245, metadata !DIExpression()), !dbg !11248
  %21 = or i32 %16, %20, !dbg !11261
  call void @llvm.dbg.value(metadata i32 %21, metadata !11245, metadata !DIExpression()), !dbg !11248
  store volatile i32 %21, i32* %19, align 4, !dbg !11262
  br label %22, !dbg !11263

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !11248
  ret i32 %23, !dbg !11264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !11265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11269, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.value(metadata i32 0, metadata !11270, metadata !DIExpression()), !dbg !11271
  %2 = add i32 %0, -1, !dbg !11272
  %3 = icmp ult i32 %2, 6, !dbg !11272
  br i1 %3, label %4, label %7, !dbg !11272

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !11272
  %6 = load i32, i32* %5, align 4, !dbg !11272
  call void @llvm.dbg.value(metadata i32 %6, metadata !11270, metadata !DIExpression()), !dbg !11271
  br label %7, !dbg !11273

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !11271
  ret i32 %8, !dbg !11274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !11275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata i32 %1, metadata !11280, metadata !DIExpression()), !dbg !11281
  %3 = udiv i32 %0, %1, !dbg !11282
  ret i32 %3, !dbg !11283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !11284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11288, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 8, metadata !11289, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 84, metadata !11290, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 %1, metadata !11291, metadata !DIExpression()), !dbg !11292
  %3 = mul i32 %0, 84, !dbg !11293
  %4 = shl nsw i32 %1, 3, !dbg !11294
  %5 = udiv i32 %3, %4, !dbg !11295
  ret i32 %5, !dbg !11296
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !11297 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !11299, metadata !DIExpression()), !dbg !11302
  tail call void @config_enable_default_clocks() #26, !dbg !11303
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11304
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !11304
  %4 = lshr i32 %3, 4, !dbg !11304
  %5 = and i32 %4, 15, !dbg !11304
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !11304
  %7 = load i8, i8* %6, align 1, !dbg !11304
  %8 = zext i8 %7 to i32, !dbg !11304
  %9 = lshr i32 %2, %8, !dbg !11304
  call void @llvm.dbg.value(metadata i32 %9, metadata !11300, metadata !DIExpression()), !dbg !11302
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !11301, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !11302
  %10 = icmp ult i32 %9, 84000000, !dbg !11305
  br i1 %10, label %11, label %13, !dbg !11307

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !11308
  br label %13, !dbg !11310

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !11311
  tail call fastcc void @set_up_plls() #27, !dbg !11312
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !11313
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !11316
  br label %14, !dbg !11317

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !11318
  %16 = icmp eq i32 %15, 8, !dbg !11319
  br i1 %16, label %17, label %14, !dbg !11317, !llvm.loop !11320

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !11322
  br i1 %18, label %19, label %21, !dbg !11324

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !11325
  br label %21, !dbg !11327

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !11328
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !11329
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !11330
  ret i32 0, !dbg !11331
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !11332 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11334
  %2 = and i32 %1, 240, !dbg !11334
  ret i32 %2, !dbg !11335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !11336 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !11337
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !11342
  br label %1, !dbg !11343

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !11344
  %3 = icmp eq i32 %2, 1, !dbg !11345
  br i1 %3, label %4, label %1, !dbg !11343, !llvm.loop !11346

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !11348
  br label %5, !dbg !11351

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !11352
  %7 = icmp eq i32 %6, 1, !dbg !11353
  br i1 %7, label %8, label %5, !dbg !11351, !llvm.loop !11354

8:                                                ; preds = %5
  ret void, !dbg !11356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !11357 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !11358
  %2 = icmp eq i32 %1, 8, !dbg !11360
  br i1 %2, label %3, label %4, !dbg !11361

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !11362
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !11364
  br label %4, !dbg !11365

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !11366
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11367
  %6 = and i32 %5, -196609, !dbg !11367
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11367
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11368
  %8 = and i32 %7, -251658241, !dbg !11368
  %9 = or i32 %8, 134217728, !dbg !11368
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11368
  tail call void @config_pll_sysclock() #26, !dbg !11369
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !11370
  br label %10, !dbg !11371

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !11372
  %12 = icmp eq i32 %11, 1, !dbg !11373
  br i1 %12, label %13, label %10, !dbg !11371, !llvm.loop !11374

13:                                               ; preds = %10
  ret void, !dbg !11376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !11377 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11379, metadata !DIExpression()), !dbg !11380
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11381
  %2 = and i32 %1, -241, !dbg !11381
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11381
  ret void, !dbg !11382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !11383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11385, metadata !DIExpression()), !dbg !11386
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11387
  %3 = and i32 %2, -4, !dbg !11387
  %4 = or i32 %3, %0, !dbg !11387
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11387
  ret void, !dbg !11388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !11389 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11390
  %2 = and i32 %1, 12, !dbg !11390
  ret i32 %2, !dbg !11391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !11392 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !11394, metadata !DIExpression()), !dbg !11395
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11396
  %2 = and i32 %1, -7169, !dbg !11396
  %3 = or i32 %2, 4096, !dbg !11396
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11396
  ret void, !dbg !11397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !11398 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11400, metadata !DIExpression()), !dbg !11401
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11402
  %2 = and i32 %1, -57345, !dbg !11402
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11402
  ret void, !dbg !11403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !11404 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !11405
  %2 = icmp eq i32 %1, 1, !dbg !11407
  br i1 %2, label %7, label %3, !dbg !11408

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !11409
  br label %4, !dbg !11411

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !11412
  %6 = icmp eq i32 %5, 1, !dbg !11413
  br i1 %6, label %7, label %4, !dbg !11411, !llvm.loop !11414

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !11416
  br label %8, !dbg !11417

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !11418
  %10 = icmp eq i32 %9, 0, !dbg !11419
  br i1 %10, label %11, label %8, !dbg !11417, !llvm.loop !11420

11:                                               ; preds = %8
  ret void, !dbg !11422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !11423 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11424
  %2 = and i32 %1, -16777217, !dbg !11424
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11424
  ret void, !dbg !11425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !11426 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11427
  %2 = or i32 %1, 16777216, !dbg !11427
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11427
  ret void, !dbg !11428
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !11429 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11430
  %2 = lshr i32 %1, 25, !dbg !11431
  %3 = and i32 %2, 1, !dbg !11431
  ret i32 %3, !dbg !11432
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !11433 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11434
  %2 = lshr i32 %1, 1, !dbg !11435
  %3 = and i32 %2, 1, !dbg !11435
  ret i32 %3, !dbg !11436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !11437 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11438
  %2 = or i32 %1, 1, !dbg !11438
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11438
  ret void, !dbg !11439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !11440 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11441
  %2 = and i32 %1, -262145, !dbg !11441
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11441
  ret void, !dbg !11442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !11443 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11444
  %2 = or i32 %1, 65536, !dbg !11444
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11444
  ret void, !dbg !11445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !11446 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11447
  %2 = lshr i32 %1, 17, !dbg !11448
  %3 = and i32 %2, 1, !dbg !11448
  ret i32 %3, !dbg !11449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !11450 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11451
  %2 = or i32 %1, 1, !dbg !11451
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11451
  ret void, !dbg !11452
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !11453 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11454
  %2 = lshr i32 %1, 1, !dbg !11455
  %3 = and i32 %2, 1, !dbg !11455
  ret i32 %3, !dbg !11456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !11457 {
  ret i32 16000000, !dbg !11459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !11463 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !11464
  ret void, !dbg !11465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !11466 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !11470, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i32 8, metadata !11471, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i32 84, metadata !11472, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.value(metadata i32 0, metadata !11473, metadata !DIExpression()), !dbg !11474
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11475
  %2 = and i32 %1, -4227072, !dbg !11475
  %3 = or i32 %2, 4199688, !dbg !11475
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11475
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11476
  %5 = and i32 %4, -196609, !dbg !11476
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11476
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11477
  %7 = and i32 %6, -1879048193, !dbg !11477
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11477
  ret void, !dbg !11478
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #20 !dbg !11479 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !11480
  ret void, !dbg !11481
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #20 !dbg !11482 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !11485, metadata !DIExpression()), !dbg !11487
  %2 = bitcast i32* %1 to i8*, !dbg !11488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !11488
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11486, metadata !DIExpression()), !dbg !11489
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11490
  %4 = or i32 %3, 268435456, !dbg !11490
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11490
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11491
  %6 = and i32 %5, 268435456, !dbg !11491
  store volatile i32 %6, i32* %1, align 4, !dbg !11492
  %7 = load volatile i32, i32* %1, align 4, !dbg !11493
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !11494
  ret void, !dbg !11494
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !11499
  br i1 %2, label %3, label %4, !dbg !11501

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !11502
  br label %4, !dbg !11503

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !11498
  ret i32 %5, !dbg !11504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !11505 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !11510, metadata !DIExpression()), !dbg !11511
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11512, !srcloc !11514
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !11515
  ret i1 %1, !dbg !11516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !11517 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !11518
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !11519
  ret void, !dbg !11520
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !11521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11523, metadata !DIExpression()), !dbg !11524
  %2 = icmp eq i32 %0, 10, !dbg !11525
  br i1 %2, label %3, label %4, !dbg !11527

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !11528
  br label %4, !dbg !11530

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !11531
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !11532
  ret i32 %0, !dbg !11533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11534 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !11537, metadata !DIExpression()), !dbg !11539
  call void @llvm.dbg.value(metadata i8 %0, metadata !11538, metadata !DIExpression()), !dbg !11539
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11540, !srcloc !11542
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !11543
  ret void, !dbg !11544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !11545 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !11547, metadata !DIExpression()), !dbg !11550
  call void @llvm.dbg.value(metadata i8 %0, metadata !11548, metadata !DIExpression()), !dbg !11550
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !11551
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !11549, metadata !DIExpression()), !dbg !11550
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !11552
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !11552
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #26, !dbg !11553
  ret void, !dbg !11554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !11555 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !11557, metadata !DIExpression()), !dbg !11558
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !11559
  ret i1 %1, !dbg !11560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !11610, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !11611, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !11612, metadata !DIExpression()), !dbg !11613
  ret void, !dbg !11614
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11615 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11617, metadata !DIExpression()), !dbg !11622
  call void @llvm.dbg.value(metadata i8 %1, metadata !11618, metadata !DIExpression()), !dbg !11622
  call void @llvm.dbg.value(metadata i32 %2, metadata !11619, metadata !DIExpression()), !dbg !11622
  %5 = bitcast i32* %4 to i8*, !dbg !11623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11623
  call void @llvm.dbg.value(metadata i32* %4, metadata !11621, metadata !DIExpression(DW_OP_deref)), !dbg !11622
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !11624
  call void @llvm.dbg.value(metadata i32 %6, metadata !11620, metadata !DIExpression()), !dbg !11622
  %7 = icmp eq i32 %6, 0, !dbg !11625
  br i1 %7, label %8, label %31, !dbg !11627

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11620, metadata !DIExpression()), !dbg !11622
  %9 = and i32 %2, 131072, !dbg !11628
  %10 = icmp eq i32 %9, 0, !dbg !11630
  br i1 %10, label %28, label %11, !dbg !11631

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11632
  %13 = icmp eq i32 %12, 0, !dbg !11635
  br i1 %13, label %18, label %14, !dbg !11636

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11637
  %16 = shl nuw i32 1, %15, !dbg !11637
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !11639
  br label %25, !dbg !11640

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11641
  %20 = icmp eq i32 %19, 0, !dbg !11643
  %21 = zext i8 %1 to i32, !dbg !11622
  br i1 %20, label %25, label %22, !dbg !11644

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11645
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !11647
  br label %25, !dbg !11648

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11649
  %27 = load i32, i32* %4, align 4, !dbg !11650
  call void @llvm.dbg.value(metadata i32 %30, metadata !11621, metadata !DIExpression()), !dbg !11622
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !11651
  br label %31, !dbg !11652

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11649
  %30 = load i32, i32* %4, align 4, !dbg !11650
  call void @llvm.dbg.value(metadata i32 %30, metadata !11621, metadata !DIExpression()), !dbg !11622
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !11651
  call void @llvm.dbg.value(metadata i32 0, metadata !11620, metadata !DIExpression()), !dbg !11622
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11653
  ret i32 %6, !dbg !11653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11658, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.value(metadata i32* %1, metadata !11659, metadata !DIExpression()), !dbg !11663
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11664
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11664
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11664
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11660, metadata !DIExpression()), !dbg !11663
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11665
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11665
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11665
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11662, metadata !DIExpression()), !dbg !11663
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !11666
  store i32 %9, i32* %1, align 4, !dbg !11667
  ret i32 0, !dbg !11668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !11669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11671, metadata !DIExpression()), !dbg !11677
  call void @llvm.dbg.value(metadata i32 %1, metadata !11672, metadata !DIExpression()), !dbg !11677
  call void @llvm.dbg.value(metadata i32 %2, metadata !11673, metadata !DIExpression()), !dbg !11677
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11678
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11678
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11678
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11674, metadata !DIExpression()), !dbg !11677
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11679
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11679
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11679
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11675, metadata !DIExpression()), !dbg !11677
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %10, metadata !11676, metadata !DIExpression()), !dbg !11677
  %11 = xor i32 %1, -1, !dbg !11681
  %12 = and i32 %10, %11, !dbg !11682
  %13 = and i32 %2, %1, !dbg !11683
  %14 = or i32 %12, %13, !dbg !11684
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !11685
  ret i32 0, !dbg !11686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11689, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.value(metadata i32 %1, metadata !11690, metadata !DIExpression()), !dbg !11693
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11694
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11694
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11694
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11691, metadata !DIExpression()), !dbg !11693
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11695
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11695
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11695
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11692, metadata !DIExpression()), !dbg !11693
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11696
  store volatile i32 %1, i32* %9, align 4, !dbg !11696
  ret i32 0, !dbg !11697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11700, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i32 %1, metadata !11701, metadata !DIExpression()), !dbg !11704
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11705
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11705
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11705
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11702, metadata !DIExpression()), !dbg !11704
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11706
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11706
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11706
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11703, metadata !DIExpression()), !dbg !11704
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !11707
  ret i32 0, !dbg !11708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !11709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11711, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.value(metadata i32 %1, metadata !11712, metadata !DIExpression()), !dbg !11715
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11716
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11716
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11716
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11713, metadata !DIExpression()), !dbg !11715
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11717
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11717
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11717
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11714, metadata !DIExpression()), !dbg !11715
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11718
  %10 = load volatile i32, i32* %9, align 4, !dbg !11718
  %11 = xor i32 %10, %1, !dbg !11718
  store volatile i32 %11, i32* %9, align 4, !dbg !11718
  ret i32 0, !dbg !11719
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11722, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i8 %1, metadata !11723, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i32 %2, metadata !11724, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i32 %3, metadata !11725, metadata !DIExpression()), !dbg !11732
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11733
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11733
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11733
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11726, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i8* undef, metadata !11727, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i32 0, metadata !11729, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.value(metadata i32 0, metadata !11730, metadata !DIExpression()), !dbg !11732
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11734

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11735
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !11739
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11740
  %12 = load i32, i32* %11, align 4, !dbg !11740
  %13 = icmp eq i32 %10, %12, !dbg !11741
  br i1 %13, label %14, label %29, !dbg !11742

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !11743
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !11745
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !11746
  br label %29, !dbg !11747

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11748
  %17 = load i8*, i8** %16, align 4, !dbg !11748
  call void @llvm.dbg.value(metadata i8* %17, metadata !11727, metadata !DIExpression()), !dbg !11732
  %18 = zext i8 %1 to i32, !dbg !11749
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !11751
  %20 = icmp eq i32 %19, 0, !dbg !11752
  br i1 %20, label %21, label %29, !dbg !11753

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11754
  %23 = load i32, i32* %22, align 4, !dbg !11754
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !11755
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11756

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11729, metadata !DIExpression()), !dbg !11732
  br label %27, !dbg !11757

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11729, metadata !DIExpression()), !dbg !11732
  br label %27, !dbg !11759

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11729, metadata !DIExpression()), !dbg !11732
  br label %27, !dbg !11760

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11732
  call void @llvm.dbg.value(metadata i32 %28, metadata !11729, metadata !DIExpression()), !dbg !11732
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !11761
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !11762
  br label %29, !dbg !11762

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11732
  call void @llvm.dbg.value(metadata i32 %30, metadata !11730, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.label(metadata !11731), !dbg !11763
  ret i32 %30, !dbg !11764
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !11765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11767, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11768, metadata !DIExpression()), !dbg !11771
  call void @llvm.dbg.value(metadata i1 %2, metadata !11769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11771
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11772
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11772
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11772
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11770, metadata !DIExpression()), !dbg !11771
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11773
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !11774
  ret i32 %8, !dbg !11775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !11776 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11782, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11783, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i1 %2, metadata !11784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11785
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !11786
  br i1 %4, label %5, label %6, !dbg !11789

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.174, i32 0, i32 0), i32 noundef 42) #26, !dbg !11790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.175, i32 0, i32 0)) #26, !dbg !11790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.174, i32 0, i32 0), i32 noundef 42) #26, !dbg !11790
  unreachable, !dbg !11790

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !11792
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !11792
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !11792
  br i1 %9, label %10, label %11, !dbg !11795

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.174, i32 0, i32 0), i32 noundef 43) #26, !dbg !11796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.177, i32 0, i32 0)) #26, !dbg !11796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.174, i32 0, i32 0), i32 noundef 43) #26, !dbg !11796
  unreachable, !dbg !11796

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !11798
  br i1 %12, label %18, label %13, !dbg !11800

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11801
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #27, !dbg !11804
  %16 = or i1 %15, %2, !dbg !11805
  %17 = select i1 %16, i32 0, i32 -22, !dbg !11805
  br i1 %2, label %19, label %21, !dbg !11805

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !11806

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11807
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #27, !dbg !11810
  br label %21, !dbg !11811

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !11785
  ret i32 %22, !dbg !11812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11813 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11817, metadata !DIExpression()), !dbg !11818
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.178(%struct._slist* noundef %0) #27, !dbg !11819
  %3 = icmp eq %struct._snode* %2, null, !dbg !11819
  ret i1 %3, !dbg !11819
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !11820 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11824, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11825, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11826, metadata !DIExpression()), !dbg !11828
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.178(%struct._slist* noundef %0) #27, !dbg !11829
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11826, metadata !DIExpression()), !dbg !11828
  %4 = icmp eq %struct._snode* %3, null, !dbg !11831
  br i1 %4, label %15, label %5, !dbg !11829

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11826, metadata !DIExpression()), !dbg !11828
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11833
  br i1 %6, label %9, label %11, !dbg !11836

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11826, metadata !DIExpression()), !dbg !11828
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11833
  br i1 %8, label %9, label %11, !dbg !11836, !llvm.loop !11837

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove.183(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !11838
  br label %15, !dbg !11838

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11826, metadata !DIExpression()), !dbg !11828
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next.184(%struct._snode* noundef nonnull %12) #27, !dbg !11831
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11827, metadata !DIExpression()), !dbg !11828
  %14 = icmp eq %struct._snode* %13, null, !dbg !11831
  br i1 %14, label %15, label %7, !dbg !11829, !llvm.loop !11837

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11841 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11845, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11846, metadata !DIExpression()), !dbg !11847
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.178(%struct._slist* noundef %0) #27, !dbg !11848
  tail call fastcc void @z_snode_next_set.179(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !11848
  tail call fastcc void @z_slist_head_set.180(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !11848
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail.181(%struct._slist* noundef %0) #27, !dbg !11849
  %5 = icmp eq %struct._snode* %4, null, !dbg !11849
  br i1 %5, label %6, label %8, !dbg !11848

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head.178(%struct._slist* noundef %0) #27, !dbg !11851
  tail call fastcc void @z_slist_tail_set.182(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !11851
  br label %8, !dbg !11851

8:                                                ; preds = %6, %2
  ret void, !dbg !11848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.178(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11853 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11857, metadata !DIExpression()), !dbg !11858
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11859
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11859
  ret %struct._snode* %3, !dbg !11860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set.179(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11861 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11865, metadata !DIExpression()), !dbg !11867
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11866, metadata !DIExpression()), !dbg !11867
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11868
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11869
  ret void, !dbg !11870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set.180(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11871 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11873, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11874, metadata !DIExpression()), !dbg !11875
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11876
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11877
  ret void, !dbg !11878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail.181(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11879 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11881, metadata !DIExpression()), !dbg !11882
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11883
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11883
  ret %struct._snode* %3, !dbg !11884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set.182(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11885 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11887, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11888, metadata !DIExpression()), !dbg !11889
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11890
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11891
  ret void, !dbg !11892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove.183(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11893 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11897, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11898, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11899, metadata !DIExpression()), !dbg !11900
  %4 = icmp eq %struct._snode* %1, null, !dbg !11901
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek.186(%struct._snode* noundef %2) #27, !dbg !11903
  br i1 %4, label %6, label %11, !dbg !11904

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set.180(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !11905
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail.181(%struct._slist* noundef %0) #27, !dbg !11907
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11907
  br i1 %8, label %9, label %15, !dbg !11905

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head.178(%struct._slist* noundef %0) #27, !dbg !11909
  tail call fastcc void @z_slist_tail_set.182(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !11909
  br label %15, !dbg !11909

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set.179(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !11911
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail.181(%struct._slist* noundef %0) #27, !dbg !11913
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11913
  br i1 %13, label %14, label %15, !dbg !11911

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set.182(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !11915
  br label %15, !dbg !11915

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set.179(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !11904
  ret void, !dbg !11904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next.184(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11917 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11921, metadata !DIExpression()), !dbg !11922
  %2 = icmp eq %struct._snode* %0, null, !dbg !11923
  br i1 %2, label %5, label %3, !dbg !11923

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check.185(%struct._snode* noundef nonnull %0) #27, !dbg !11923
  br label %5, !dbg !11923

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11923
  ret %struct._snode* %6, !dbg !11923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check.185(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11924 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11926, metadata !DIExpression()), !dbg !11927
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek.186(%struct._snode* noundef %0) #27, !dbg !11928
  ret %struct._snode* %2, !dbg !11928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek.186(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11929 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11931, metadata !DIExpression()), !dbg !11932
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11933
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11933
  ret %struct._snode* %3, !dbg !11934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11937, metadata !DIExpression()), !dbg !11940
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !11941, !range !11942
  call void @llvm.dbg.value(metadata i32 %2, metadata !11938, metadata !DIExpression()), !dbg !11940
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !11943
  call void @llvm.dbg.value(metadata i32 %3, metadata !11939, metadata !DIExpression()), !dbg !11940
  ret i32 %3, !dbg !11944
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11947, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i8* %1, metadata !11948, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i8* %1, metadata !11949, metadata !DIExpression()), !dbg !11950
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11951
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11951
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11952
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11952
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11952
  %8 = shl nuw i32 1, %0, !dbg !11953
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !11954
  ret void, !dbg !11955
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11956 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11960, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 %1, metadata !11961, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11962, metadata !DIExpression()), !dbg !11966
  %4 = bitcast i64* %3 to i8*, !dbg !11967
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11967
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11964, metadata !DIExpression()), !dbg !11966
  store i64 70368744177732, i64* %3, align 8, !dbg !11968
  call void @llvm.dbg.value(metadata i64* %3, metadata !11964, metadata !DIExpression(DW_OP_deref)), !dbg !11966
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %5, metadata !11965, metadata !DIExpression()), !dbg !11966
  %6 = icmp eq i32 %5, 0, !dbg !11970
  br i1 %6, label %7, label %8, !dbg !11972

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !11973
  br label %8, !dbg !11974

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11975
  ret void, !dbg !11975
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11976 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11978, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.value(metadata i8* %0, metadata !11979, metadata !DIExpression()), !dbg !11981
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11982
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11980, metadata !DIExpression()), !dbg !11981
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11983
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11983
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !11984
  ret i32 %5, !dbg !11985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11988, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata i32 %1, metadata !11989, metadata !DIExpression()), !dbg !11991
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %3, metadata !11990, metadata !DIExpression()), !dbg !11991
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !11993
  ret void, !dbg !11994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !11995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11999, metadata !DIExpression()), !dbg !12000
  %2 = sdiv i32 %0, 4, !dbg !12001
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !12002
  %6 = add nsw i32 %5, 16, !dbg !12003
  %7 = shl i32 15, %6, !dbg !12004
  %8 = or i32 %7, %2, !dbg !12005
  ret i32 %8, !dbg !12006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !12007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12011, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata i32 %1, metadata !12012, metadata !DIExpression()), !dbg !12013
  %3 = and i32 %1, 255, !dbg !12014
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !12014
  %5 = load volatile i32, i32* %4, align 4, !dbg !12014
  %6 = lshr i32 %1, 16, !dbg !12014
  %7 = xor i32 %6, -1, !dbg !12014
  %8 = and i32 %5, %7, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %6, metadata !12015, metadata !DIExpression()) #25, !dbg !12019
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !12021, !srcloc !12022
  call void @llvm.dbg.value(metadata i32 %9, metadata !12018, metadata !DIExpression()) #25, !dbg !12019
  call void @llvm.dbg.value(metadata i32 %9, metadata !12023, metadata !DIExpression()) #25, !dbg !12028
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !12030, !range !5919
  %11 = shl i32 %0, %10, !dbg !12014
  %12 = or i32 %11, %8, !dbg !12014
  store volatile i32 %12, i32* %4, align 4, !dbg !12014
  ret void, !dbg !12031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12032 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !12036, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !12037, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata i32 %2, metadata !12038, metadata !DIExpression()), !dbg !12041
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head.178(%struct._slist* noundef %0) #27, !dbg !12042
  %5 = icmp eq %struct._snode* %4, null, !dbg !12042
  br i1 %5, label %24, label %6, !dbg !12042

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next.184(%struct._snode* noundef nonnull %7) #27, !dbg !12044
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !12040, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !12039, metadata !DIExpression()), !dbg !12041
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !12045
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !12045
  %12 = load i32, i32* %11, align 4, !dbg !12045
  %13 = and i32 %12, %2, !dbg !12049
  %14 = icmp eq i32 %13, 0, !dbg !12049
  br i1 %14, label %22, label %15, !dbg !12050

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !12051
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !12051
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !12051
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !12051
  br i1 %19, label %20, label %21, !dbg !12055

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.174, i32 0, i32 0), i32 noundef 77) #26, !dbg !12056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.177, i32 0, i32 0)) #26, !dbg !12056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.174, i32 0, i32 0), i32 noundef 77) #26, !dbg !12056
  unreachable, !dbg !12056

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !12058
  br label %22, !dbg !12059

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !12039, metadata !DIExpression()), !dbg !12041
  %23 = icmp eq %struct._snode* %8, null, !dbg !12060
  br i1 %23, label %24, label %6, !dbg !12060

24:                                               ; preds = %22, %3
  ret void, !dbg !12061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !12062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12064, metadata !DIExpression()), !dbg !12065
  %2 = and i32 %0, 255, !dbg !12066
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !12066
  %4 = load volatile i32, i32* %3, align 4, !dbg !12066
  %5 = lshr i32 %0, 16, !dbg !12066
  %6 = and i32 %4, %5, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %5, metadata !12015, metadata !DIExpression()) #25, !dbg !12067
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !12069, !srcloc !12022
  call void @llvm.dbg.value(metadata i32 %7, metadata !12018, metadata !DIExpression()) #25, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %7, metadata !12023, metadata !DIExpression()) #25, !dbg !12070
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !12072, !range !5919
  %9 = lshr i32 %6, %8, !dbg !12073
  ret i32 %9, !dbg !12074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12075 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12080, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.value(metadata i32 %1, metadata !12081, metadata !DIExpression()), !dbg !12082
  %3 = shl i32 %1, 16, !dbg !12083
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !12083
  store volatile i32 %3, i32* %4, align 4, !dbg !12083
  ret void, !dbg !12084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !12085 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12089, metadata !DIExpression()), !dbg !12090
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !12091
  %3 = load volatile i32, i32* %2, align 4, !dbg !12091
  ret i32 %3, !dbg !12092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12093 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12095, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.value(metadata i32 %1, metadata !12096, metadata !DIExpression()), !dbg !12097
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !12098
  store volatile i32 %1, i32* %3, align 4, !dbg !12098
  ret void, !dbg !12099
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !12100 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12102, metadata !DIExpression()), !dbg !12103
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !12104
  %3 = load volatile i32, i32* %2, align 4, !dbg !12104
  ret i32 %3, !dbg !12105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !12106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12110, metadata !DIExpression()), !dbg !12112
  call void @llvm.dbg.value(metadata i32* %1, metadata !12111, metadata !DIExpression()), !dbg !12112
  %3 = and i32 %0, 131072, !dbg !12113
  %4 = icmp eq i32 %3, 0, !dbg !12115
  br i1 %4, label %22, label %5, !dbg !12116

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !12117
  %6 = and i32 %0, 2, !dbg !12119
  %7 = icmp eq i32 %6, 0, !dbg !12121
  br i1 %7, label %11, label %8, !dbg !12122

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !12123
  %10 = icmp eq i32 %9, 0, !dbg !12123
  br i1 %10, label %33, label %11, !dbg !12126

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !12127
  store i32 %12, i32* %1, align 4, !dbg !12127
  %13 = and i32 %0, 16, !dbg !12128
  %14 = icmp eq i32 %13, 0, !dbg !12130
  br i1 %14, label %17, label %15, !dbg !12131

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !12132
  br label %31, !dbg !12134

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !12135
  %19 = icmp eq i32 %18, 0, !dbg !12137
  br i1 %19, label %33, label %20, !dbg !12138

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !12139
  br label %31, !dbg !12141

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !12142
  %24 = icmp eq i32 %23, 0, !dbg !12144
  br i1 %24, label %31, label %25, !dbg !12145

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !12146
  %27 = icmp eq i32 %26, 0, !dbg !12149
  br i1 %27, label %28, label %31, !dbg !12150

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !12151
  br label %33, !dbg !12152

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !12112
  ret i32 %34, !dbg !12152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12153 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12157, metadata !DIExpression()), !dbg !12168
  call void @llvm.dbg.value(metadata i32 %1, metadata !12158, metadata !DIExpression()), !dbg !12168
  call void @llvm.dbg.value(metadata i32 %2, metadata !12159, metadata !DIExpression()), !dbg !12168
  call void @llvm.dbg.value(metadata i32 %3, metadata !12160, metadata !DIExpression()), !dbg !12168
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12169
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !12169
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !12169
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !12161, metadata !DIExpression()), !dbg !12168
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !12170
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !12170
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !12170
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !12162, metadata !DIExpression()), !dbg !12168
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !12171
  call void @llvm.dbg.value(metadata i32 %11, metadata !12163, metadata !DIExpression()), !dbg !12168
  %12 = and i32 %2, 48, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %12, metadata !12164, metadata !DIExpression()), !dbg !12168
  call void @llvm.dbg.value(metadata i32 %2, metadata !12165, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !12168
  call void @llvm.dbg.value(metadata i32 %2, metadata !12166, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !12168
  call void @llvm.dbg.value(metadata i32 %2, metadata !12167, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !12168
  %13 = lshr i32 %2, 6, !dbg !12173
  %14 = and i32 %13, 1, !dbg !12173
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !12174
  %15 = lshr i32 %2, 7, !dbg !12175
  %16 = and i32 %15, 3, !dbg !12175
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !12176
  %17 = lshr i32 %2, 9, !dbg !12177
  %18 = and i32 %17, 3, !dbg !12177
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !12178
  %19 = icmp eq i32 %12, 32, !dbg !12179
  br i1 %19, label %20, label %24, !dbg !12181

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !12182
  br i1 %21, label %22, label %23, !dbg !12185

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !12186
  br label %24, !dbg !12188

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !12189
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !12191
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !12192
  ret void, !dbg !12193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !12194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12196, metadata !DIExpression()), !dbg !12198
  %2 = shl nuw i32 1, %0, !dbg !12199
  call void @llvm.dbg.value(metadata i32 %2, metadata !12197, metadata !DIExpression()), !dbg !12198
  ret i32 %2, !dbg !12200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12201 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12205, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i32 %1, metadata !12206, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i32 %2, metadata !12207, metadata !DIExpression()), !dbg !12208
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !12209
  %5 = load volatile i32, i32* %4, align 4, !dbg !12209
  %6 = xor i32 %1, -1, !dbg !12209
  %7 = and i32 %5, %6, !dbg !12209
  %8 = mul i32 %2, %1, !dbg !12209
  %9 = or i32 %7, %8, !dbg !12209
  store volatile i32 %9, i32* %4, align 4, !dbg !12209
  ret void, !dbg !12210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12211 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12213, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i32 %1, metadata !12214, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i32 %2, metadata !12215, metadata !DIExpression()), !dbg !12216
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !12217
  %5 = load volatile i32, i32* %4, align 4, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12218
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12220, !srcloc !12022
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12221
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12223, !range !5919
  %8 = shl nuw nsw i32 %7, 1, !dbg !12217
  %9 = shl i32 3, %8, !dbg !12217
  %10 = xor i32 %9, -1, !dbg !12217
  %11 = and i32 %5, %10, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12224
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12224
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12226
  %12 = shl i32 %2, %8, !dbg !12217
  %13 = or i32 %11, %12, !dbg !12217
  store volatile i32 %13, i32* %4, align 4, !dbg !12217
  ret void, !dbg !12228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12229 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12231, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata i32 %1, metadata !12232, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata i32 %2, metadata !12233, metadata !DIExpression()), !dbg !12234
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !12235
  %5 = load volatile i32, i32* %4, align 4, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12236
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12238, !srcloc !12022
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12236
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12239
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12241, !range !5919
  %8 = shl nuw nsw i32 %7, 1, !dbg !12235
  %9 = shl i32 3, %8, !dbg !12235
  %10 = xor i32 %9, -1, !dbg !12235
  %11 = and i32 %5, %10, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12244
  %12 = shl i32 %2, %8, !dbg !12235
  %13 = or i32 %11, %12, !dbg !12235
  store volatile i32 %13, i32* %4, align 4, !dbg !12235
  ret void, !dbg !12246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12247 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12249, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32 %1, metadata !12250, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.value(metadata i32 %2, metadata !12251, metadata !DIExpression()), !dbg !12252
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !12253
  %5 = load volatile i32, i32* %4, align 4, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12254
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12256, !srcloc !12022
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12257
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12259, !range !5919
  %8 = shl nuw nsw i32 %7, 2, !dbg !12253
  %9 = shl i32 15, %8, !dbg !12253
  %10 = xor i32 %9, -1, !dbg !12253
  %11 = and i32 %5, %10, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12260
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12260
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12262
  %12 = shl i32 %2, %8, !dbg !12253
  %13 = or i32 %11, %12, !dbg !12253
  store volatile i32 %13, i32* %4, align 4, !dbg !12253
  ret void, !dbg !12264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12265 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12267, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i32 %1, metadata !12268, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i32 %2, metadata !12269, metadata !DIExpression()), !dbg !12270
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !12271
  %5 = load volatile i32, i32* %4, align 4, !dbg !12271
  %6 = lshr i32 %1, 8, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %6, metadata !12015, metadata !DIExpression()) #25, !dbg !12272
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !12274, !srcloc !12022
  call void @llvm.dbg.value(metadata i32 %7, metadata !12018, metadata !DIExpression()) #25, !dbg !12272
  call void @llvm.dbg.value(metadata i32 %7, metadata !12023, metadata !DIExpression()) #25, !dbg !12275
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !12277, !range !5919
  %9 = shl nuw nsw i32 %8, 2, !dbg !12271
  %10 = shl i32 15, %9, !dbg !12271
  %11 = xor i32 %10, -1, !dbg !12271
  %12 = and i32 %5, %11, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %6, metadata !12015, metadata !DIExpression()) #25, !dbg !12278
  call void @llvm.dbg.value(metadata i32 %7, metadata !12018, metadata !DIExpression()) #25, !dbg !12278
  call void @llvm.dbg.value(metadata i32 %7, metadata !12023, metadata !DIExpression()) #25, !dbg !12280
  %13 = shl i32 %2, %9, !dbg !12271
  %14 = or i32 %12, %13, !dbg !12271
  store volatile i32 %14, i32* %4, align 4, !dbg !12271
  ret void, !dbg !12282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12283 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !12285, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata i32 %1, metadata !12286, metadata !DIExpression()), !dbg !12288
  call void @llvm.dbg.value(metadata i32 %2, metadata !12287, metadata !DIExpression()), !dbg !12288
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !12289
  %5 = load volatile i32, i32* %4, align 4, !dbg !12289
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12290
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !12292, !srcloc !12022
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12290
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12293
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !12295, !range !5919
  %8 = shl nuw nsw i32 %7, 1, !dbg !12289
  %9 = shl i32 3, %8, !dbg !12289
  %10 = xor i32 %9, -1, !dbg !12289
  %11 = and i32 %5, %10, !dbg !12289
  call void @llvm.dbg.value(metadata i32 %1, metadata !12015, metadata !DIExpression()) #25, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %6, metadata !12018, metadata !DIExpression()) #25, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()) #25, !dbg !12298
  %12 = shl i32 %2, %8, !dbg !12289
  %13 = or i32 %11, %12, !dbg !12289
  store volatile i32 %13, i32* %4, align 4, !dbg !12289
  ret void, !dbg !12300
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !12301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12303, metadata !DIExpression()), !dbg !12306
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12307
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !12307
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !12307
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !12304, metadata !DIExpression()), !dbg !12306
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !12308
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !12309
  %6 = tail call fastcc zeroext i1 @device_is_ready.196() #27, !dbg !12310
  br i1 %6, label %7, label %11, !dbg !12312

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %8, metadata !12305, metadata !DIExpression()), !dbg !12306
  %9 = icmp slt i32 %8, 0, !dbg !12314
  %10 = select i1 %9, i32 %8, i32 0, !dbg !12316
  br label %11, !dbg !12316

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !12306
  ret i32 %12, !dbg !12317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.196() unnamed_addr #1 !dbg !12318 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12322, metadata !DIExpression()), !dbg !12323
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12324, !srcloc !12326
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.197() #27, !dbg !12327
  ret i1 %1, !dbg !12328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !12329 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12333, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i8 1, metadata !12334, metadata !DIExpression()), !dbg !12338
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12339
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !12339
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !12339
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !12335, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 0, metadata !12336, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12337, metadata !DIExpression()), !dbg !12338
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !12340
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !12343
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !12344
  call void @llvm.dbg.value(metadata i32 %7, metadata !12336, metadata !DIExpression()), !dbg !12338
  ret i32 %7, !dbg !12345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.197() unnamed_addr #1 !dbg !12346 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12348, metadata !DIExpression()), !dbg !12349
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !12350
  ret i1 %1, !dbg !12351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !12352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12356, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 %1, metadata !12357, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 %2, metadata !12358, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 %3, metadata !12359, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.value(metadata i32 0, metadata !12360, metadata !DIExpression()), !dbg !12364
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !12365
  %5 = icmp eq i32 %3, 17, !dbg !12366
  br i1 %5, label %6, label %14, !dbg !12367

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %7, metadata !12361, metadata !DIExpression()), !dbg !12369
  %8 = icmp eq i32 %7, 0, !dbg !12370
  %9 = shl nuw i32 1, %1, !dbg !12372
  br i1 %8, label %12, label %10, !dbg !12373

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !12374
  br label %14, !dbg !12376

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !12377
  br label %14, !dbg !12380

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12381
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #20 !dbg !12382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12384, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata i8* %1, metadata !12385, metadata !DIExpression()), !dbg !12388
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12389
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12389
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12389
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12386, metadata !DIExpression()), !dbg !12388
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12390
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12390
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !12392
  %9 = icmp eq i32 %8, 0, !dbg !12392
  br i1 %9, label %12, label %10, !dbg !12393

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12394
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !12396
  br label %12, !dbg !12397

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12398
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !12400
  %15 = icmp eq i32 %14, 0, !dbg !12400
  br i1 %15, label %19, label %16, !dbg !12401

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12402
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !12403
  store i8 %18, i8* %1, align 1, !dbg !12404
  br label %19, !dbg !12405

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12388
  ret i32 %20, !dbg !12406
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12409, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i8 %1, metadata !12410, metadata !DIExpression()), !dbg !12413
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12414
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12414
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12414
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12411, metadata !DIExpression()), !dbg !12413
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12415

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12416
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !12419
  %10 = icmp eq i32 %9, 0, !dbg !12419
  br i1 %10, label %18, label %11, !dbg !12420

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12421, !srcloc !12428
  call void @llvm.dbg.value(metadata i32 undef, metadata !12424, metadata !DIExpression()) #25, !dbg !12429
  call void @llvm.dbg.value(metadata i32 undef, metadata !12425, metadata !DIExpression()) #25, !dbg !12429
  call void @llvm.dbg.value(metadata i32 undef, metadata !12412, metadata !DIExpression()), !dbg !12413
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12430
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !12432
  %15 = icmp eq i32 %14, 0, !dbg !12432
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12421
  br i1 %15, label %17, label %19, !dbg !12433

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12424, metadata !DIExpression()) #25, !dbg !12429
  call void @llvm.dbg.value(metadata i32 %16, metadata !12412, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 undef, metadata !12434, metadata !DIExpression()) #25, !dbg !12437
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12439, !srcloc !12440
  br label %18, !dbg !12441

18:                                               ; preds = %17, %7
  br label %7, !dbg !12416, !llvm.loop !12442

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12421
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12444
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !12445
  call void @llvm.dbg.value(metadata i32 %20, metadata !12434, metadata !DIExpression()) #25, !dbg !12446
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12448, !srcloc !12440
  ret void, !dbg !12449
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #20 !dbg !12450 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12452, metadata !DIExpression()), !dbg !12455
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12456
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12456
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12453, metadata !DIExpression()), !dbg !12455
  call void @llvm.dbg.value(metadata i32 0, metadata !12454, metadata !DIExpression()), !dbg !12455
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12457
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12457
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !12459
  %8 = icmp ne i32 %7, 0, !dbg !12459
  %9 = zext i1 %8 to i32, !dbg !12460
  call void @llvm.dbg.value(metadata i32 %9, metadata !12454, metadata !DIExpression()), !dbg !12455
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12461
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !12463
  %12 = icmp eq i32 %11, 0, !dbg !12463
  %13 = or i32 %9, 2, !dbg !12464
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12464
  call void @llvm.dbg.value(metadata i32 %14, metadata !12454, metadata !DIExpression()), !dbg !12455
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12465
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !12467
  %17 = icmp eq i32 %16, 0, !dbg !12467
  %18 = or i32 %14, 4, !dbg !12468
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12468
  call void @llvm.dbg.value(metadata i32 %19, metadata !12454, metadata !DIExpression()), !dbg !12455
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12469
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !12471
  %22 = icmp eq i32 %21, 0, !dbg !12471
  %23 = or i32 %19, 8, !dbg !12472
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12472
  call void @llvm.dbg.value(metadata i32 %24, metadata !12454, metadata !DIExpression()), !dbg !12455
  %25 = and i32 %24, 8, !dbg !12473
  %26 = icmp eq i32 %25, 0, !dbg !12473
  br i1 %26, label %29, label %27, !dbg !12475

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12476
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !12478
  br label %29, !dbg !12479

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12480
  %31 = icmp eq i32 %30, 0, !dbg !12480
  br i1 %31, label %34, label %32, !dbg !12482

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12483
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !12485
  br label %34, !dbg !12486

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12487
  %36 = icmp eq i32 %35, 0, !dbg !12487
  br i1 %36, label %39, label %37, !dbg !12489

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12490
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !12492
  br label %39, !dbg !12493

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12494
  %41 = icmp eq i32 %40, 0, !dbg !12494
  br i1 %41, label %44, label %42, !dbg !12496

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12497
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !12499
  br label %44, !dbg !12500

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12501
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !12502
  ret i32 %24, !dbg !12503
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12506, metadata !DIExpression()), !dbg !12515
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12507, metadata !DIExpression()), !dbg !12515
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12516
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12516
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12516
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12508, metadata !DIExpression()), !dbg !12515
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12517
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12517
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12517
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12509, metadata !DIExpression()), !dbg !12515
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12518
  %10 = load i8, i8* %9, align 4, !dbg !12518
  %11 = zext i8 %10 to i32, !dbg !12519
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !12520
  call void @llvm.dbg.value(metadata i32 %12, metadata !12511, metadata !DIExpression()), !dbg !12515
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12521
  %14 = load i8, i8* %13, align 1, !dbg !12521
  %15 = zext i8 %14 to i32, !dbg !12522
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !12523
  call void @llvm.dbg.value(metadata i32 %16, metadata !12512, metadata !DIExpression()), !dbg !12515
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12524
  %18 = load i8, i8* %17, align 2, !dbg !12524
  %19 = zext i8 %18 to i32, !dbg !12525
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !12526
  call void @llvm.dbg.value(metadata i32 %20, metadata !12513, metadata !DIExpression()), !dbg !12515
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12527
  %22 = load i8, i8* %21, align 1, !dbg !12527
  %23 = zext i8 %22 to i32, !dbg !12528
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !12529
  call void @llvm.dbg.value(metadata i32 %24, metadata !12514, metadata !DIExpression()), !dbg !12515
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12530

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12532
  br i1 %26, label %69, label %27, !dbg !12534

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12535

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12536
  br i1 %29, label %65, label %30, !dbg !12536

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12538
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12515
  br i1 %31, label %38, label %34, !dbg !12540

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12541
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !12541

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12544
  br i1 %37, label %38, label %69, !dbg !12545

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12546
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !12547
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !12548
  %41 = icmp eq i32 %12, %40, !dbg !12550
  br i1 %41, label %43, label %42, !dbg !12551

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !12552
  br label %43, !dbg !12554

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !12555
  %45 = icmp eq i32 %16, %44, !dbg !12557
  br i1 %45, label %47, label %46, !dbg !12558

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !12559
  br label %47, !dbg !12561

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !12562
  %49 = icmp eq i32 %20, %48, !dbg !12564
  br i1 %49, label %51, label %50, !dbg !12565

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !12566
  br label %51, !dbg !12568

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !12569
  %53 = icmp eq i32 %24, %52, !dbg !12571
  br i1 %53, label %55, label %54, !dbg !12572

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !12573
  br label %55, !dbg !12575

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12576
  %57 = load i32, i32* %56, align 4, !dbg !12576
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12578
  %59 = load i32, i32* %58, align 4, !dbg !12578
  %60 = icmp eq i32 %57, %59, !dbg !12579
  br i1 %60, label %63, label %61, !dbg !12580

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !12581
  %62 = load i32, i32* %56, align 4, !dbg !12583
  store i32 %62, i32* %58, align 4, !dbg !12584
  br label %63, !dbg !12585

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12586
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !12587
  br label %69, !dbg !12588

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12536
  %67 = and i8 %66, 1, !dbg !12536
  %68 = icmp eq i8 %67, 0, !dbg !12536
  br i1 %68, label %30, label %69, !dbg !12536

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12515
  ret i32 %70, !dbg !12589
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !12590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12592, metadata !DIExpression()), !dbg !12595
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12593, metadata !DIExpression()), !dbg !12595
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12596
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12596
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12596
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12594, metadata !DIExpression()), !dbg !12595
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12597
  %7 = load i32, i32* %6, align 4, !dbg !12597
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12598
  store i32 %7, i32* %8, align 4, !dbg !12599
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !12600, !range !12601
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !12602
  %11 = trunc i32 %10 to i8, !dbg !12602
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12603
  store i8 %11, i8* %12, align 4, !dbg !12604
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !12605, !range !12606
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !12607
  %15 = trunc i32 %14 to i8, !dbg !12607
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12608
  store i8 %15, i8* %16, align 1, !dbg !12609
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !12610
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !12611, !range !12601
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !12612
  %20 = trunc i32 %19 to i8, !dbg !12612
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12613
  store i8 %20, i8* %21, align 2, !dbg !12614
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !12615, !range !12616
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !12617
  %24 = trunc i32 %23 to i8, !dbg !12617
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12618
  store i8 %24, i8* %25, align 1, !dbg !12619
  ret i32 0, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12625, metadata !DIExpression()), !dbg !12627
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12628
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12628
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12628
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12626, metadata !DIExpression()), !dbg !12627
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12629
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12629
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !12630
  ret i32 %7, !dbg !12631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !12632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12636, metadata !DIExpression()), !dbg !12637
  %2 = icmp eq i32 %0, 1024, !dbg !12638
  %3 = select i1 %2, i32 2, i32 0, !dbg !12638
  %4 = icmp eq i32 %0, 1536, !dbg !12638
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12638
  ret i32 %5, !dbg !12639
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12642, metadata !DIExpression()), !dbg !12644
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12645
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12645
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12645
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12643, metadata !DIExpression()), !dbg !12644
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12646
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12646
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !12647
  ret i32 %7, !dbg !12648
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !12649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12653, metadata !DIExpression()), !dbg !12654
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12655
  %3 = icmp ult i32 %2, 4, !dbg !12655
  br i1 %3, label %4, label %7, !dbg !12655

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12655
  %6 = load i32, i32* %5, align 4, !dbg !12655
  br label %7, !dbg !12655

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12656
  ret i32 %8, !dbg !12658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12659 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12661, metadata !DIExpression()), !dbg !12663
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12664
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12664
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12664
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12662, metadata !DIExpression()), !dbg !12663
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12665
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12665
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !12666
  ret i32 %7, !dbg !12667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !12668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12672, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.value(metadata i32 %1, metadata !12673, metadata !DIExpression()), !dbg !12674
  %3 = icmp eq i32 %0, 4096, !dbg !12675
  %4 = icmp eq i32 %1, 0, !dbg !12675
  %5 = select i1 %4, i32 4, i32 3, !dbg !12675
  %6 = select i1 %4, i32 3, i32 2, !dbg !12675
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12675
  ret i32 %7, !dbg !12676
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12677 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12679, metadata !DIExpression()), !dbg !12681
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12682
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12682
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12682
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12680, metadata !DIExpression()), !dbg !12681
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12683
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12683
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !12684
  ret i32 %7, !dbg !12685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !12686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12690, metadata !DIExpression()), !dbg !12691
  %2 = icmp eq i32 %0, 768, !dbg !12692
  %3 = zext i1 %2 to i32, !dbg !12691
  ret i32 %3, !dbg !12694
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12695 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12700, metadata !DIExpression()), !dbg !12701
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12702
  %3 = load volatile i32, i32* %2, align 4, !dbg !12702
  %4 = and i32 %3, 768, !dbg !12702
  ret i32 %4, !dbg !12703
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12706, metadata !DIExpression()), !dbg !12707
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12708
  %3 = load volatile i32, i32* %2, align 4, !dbg !12708
  %4 = and i32 %3, 4096, !dbg !12708
  ret i32 %4, !dbg !12709
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12712, metadata !DIExpression()), !dbg !12713
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12714
  %3 = load volatile i32, i32* %2, align 4, !dbg !12714
  %4 = and i32 %3, 12288, !dbg !12714
  ret i32 %4, !dbg !12715
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12716 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12718, metadata !DIExpression()), !dbg !12719
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12720
  %3 = load volatile i32, i32* %2, align 4, !dbg !12720
  %4 = and i32 %3, 1536, !dbg !12720
  ret i32 %4, !dbg !12721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !12722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12726, metadata !DIExpression()), !dbg !12727
  %2 = icmp eq i32 %0, 2, !dbg !12728
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12728
  %4 = icmp eq i32 %0, 1, !dbg !12728
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12728
  ret i32 %5, !dbg !12729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !12730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12734, metadata !DIExpression()), !dbg !12735
  %2 = icmp ult i32 %0, 3, !dbg !12736
  br i1 %2, label %3, label %6, !dbg !12736

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12736
  %5 = load i32, i32* %4, align 4, !dbg !12736
  br label %6, !dbg !12736

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12737
  ret i32 %7, !dbg !12739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !12740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12744, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.value(metadata i32 %1, metadata !12745, metadata !DIExpression()), !dbg !12746
  %3 = icmp eq i32 %0, 4, !dbg !12747
  %4 = icmp eq i32 %1, 0, !dbg !12747
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12747
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12747
  ret i32 %6, !dbg !12748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !12749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12753, metadata !DIExpression()), !dbg !12754
  %2 = icmp eq i32 %0, 1, !dbg !12755
  %3 = select i1 %2, i32 768, i32 0, !dbg !12754
  ret i32 %3, !dbg !12757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12758 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12764
  %3 = load volatile i32, i32* %2, align 4, !dbg !12764
  %4 = and i32 %3, -8193, !dbg !12764
  store volatile i32 %4, i32* %2, align 4, !dbg !12764
  ret void, !dbg !12765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12770, metadata !DIExpression()), !dbg !12773
  call void @llvm.dbg.value(metadata i32 %1, metadata !12771, metadata !DIExpression()), !dbg !12773
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12774
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12774
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12774
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12772, metadata !DIExpression()), !dbg !12773
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12775
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12775
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12776
  ret void, !dbg !12777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12780, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata i32 %1, metadata !12781, metadata !DIExpression()), !dbg !12783
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12784
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12784
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12784
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12782, metadata !DIExpression()), !dbg !12783
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12785
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12785
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12786
  ret void, !dbg !12787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12790, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 %1, metadata !12791, metadata !DIExpression()), !dbg !12793
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12794
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12794
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12794
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12792, metadata !DIExpression()), !dbg !12793
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12795
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12795
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12796
  ret void, !dbg !12797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !12798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12800, metadata !DIExpression()), !dbg !12803
  call void @llvm.dbg.value(metadata i32 %1, metadata !12801, metadata !DIExpression()), !dbg !12803
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12804
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12804
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12804
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12802, metadata !DIExpression()), !dbg !12803
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12805
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12805
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12806
  ret void, !dbg !12807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12808 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12810, metadata !DIExpression()), !dbg !12815
  call void @llvm.dbg.value(metadata i32 %1, metadata !12811, metadata !DIExpression()), !dbg !12815
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12816
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12816
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12812, metadata !DIExpression()), !dbg !12815
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12817
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12817
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12817
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12813, metadata !DIExpression()), !dbg !12815
  %10 = bitcast i32* %3 to i8*, !dbg !12818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12818
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12819
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12819
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12823
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12823
  %15 = load i8*, i8** %14, align 4, !dbg !12823
  call void @llvm.dbg.value(metadata i32* %3, metadata !12814, metadata !DIExpression(DW_OP_deref)), !dbg !12815
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !12824
  %17 = icmp slt i32 %16, 0, !dbg !12825
  br i1 %17, label %18, label %21, !dbg !12826

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.200(i32 noundef 1) #27, !dbg !12827
  %20 = zext i8 %19 to i32, !dbg !12827
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.201, i32 0, i32 0), i32 noundef %20) #26, !dbg !12827
  br label %31, !dbg !12833

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12834
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12834
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !12835
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12836
  %25 = load i32, i32* %3, align 4, !dbg !12837
  call void @llvm.dbg.value(metadata i32 %25, metadata !12814, metadata !DIExpression()), !dbg !12815
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !12838
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12839
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !12839
  %28 = load volatile i32, i32* %27, align 4, !dbg !12839
  %29 = icmp ugt i32 %28, 16, !dbg !12839
  br i1 %29, label %31, label %30, !dbg !12842

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.202, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.204, i32 0, i32 0), i32 noundef 190) #26, !dbg !12843
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.205, i32 0, i32 0)) #26, !dbg !12843
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.204, i32 0, i32 0), i32 noundef 190) #26, !dbg !12843
  unreachable, !dbg !12843

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12845
  ret void, !dbg !12845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12848, metadata !DIExpression()), !dbg !12849
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12850
  %3 = load volatile i32, i32* %2, align 4, !dbg !12850
  %4 = or i32 %3, 8192, !dbg !12850
  store volatile i32 %4, i32* %2, align 4, !dbg !12850
  ret void, !dbg !12851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12852 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12854, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.value(metadata i8* %1, metadata !12855, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.value(metadata i32* %2, metadata !12856, metadata !DIExpression()), !dbg !12858
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12859
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12859
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12859
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12857, metadata !DIExpression()), !dbg !12858
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12860
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12860
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12862
  br i1 %9, label %12, label %10, !dbg !12863

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !12864
  br label %12, !dbg !12865

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12858
  ret i32 %13, !dbg !12866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.200(i32 noundef %0) unnamed_addr #6 !dbg !12867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12869, metadata !DIExpression()), !dbg !12870
  %2 = icmp eq i32 %0, 2, !dbg !12871
  %3 = select i1 %2, i8 87, i8 63, !dbg !12871
  %4 = icmp eq i32 %0, 1, !dbg !12871
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12871
  ret i8 %5, !dbg !12872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12873 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12877, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.value(metadata i32 0, metadata !12878, metadata !DIExpression()), !dbg !12879
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12880
  %3 = load volatile i32, i32* %2, align 4, !dbg !12880
  %4 = and i32 %3, -32769, !dbg !12880
  store volatile i32 %4, i32* %2, align 4, !dbg !12880
  ret void, !dbg !12881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !12882 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12886, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %1, metadata !12887, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 0, metadata !12888, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %2, metadata !12889, metadata !DIExpression()), !dbg !12890
  %4 = zext i32 %1 to i64, !dbg !12891
  %5 = mul nuw nsw i64 %4, 25, !dbg !12891
  %6 = zext i32 %2 to i64, !dbg !12891
  %7 = shl nuw nsw i64 %6, 2, !dbg !12891
  %8 = udiv i64 %5, %7, !dbg !12891
  %9 = trunc i64 %8 to i32, !dbg !12891
  %10 = udiv i32 %9, 100, !dbg !12891
  %11 = shl nuw nsw i32 %10, 4, !dbg !12891
  %12 = mul i32 %10, -100, !dbg !12891
  %13 = add i32 %12, %9, !dbg !12891
  %14 = shl i32 %13, 4, !dbg !12891
  %15 = add i32 %14, 50, !dbg !12891
  %16 = udiv i32 %15, 100, !dbg !12891
  %17 = and i32 %16, 240, !dbg !12891
  %18 = add nuw nsw i32 %17, %11, !dbg !12891
  %19 = and i32 %16, 15, !dbg !12891
  %20 = and i32 %18, 65520, !dbg !12894
  %21 = or i32 %20, %19, !dbg !12894
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12895
  store volatile i32 %21, i32* %22, align 4, !dbg !12896
  ret void, !dbg !12897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12898 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12900, metadata !DIExpression()), !dbg !12902
  call void @llvm.dbg.value(metadata i32 %1, metadata !12901, metadata !DIExpression()), !dbg !12902
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12903
  %4 = load volatile i32, i32* %3, align 4, !dbg !12903
  %5 = and i32 %4, -769, !dbg !12903
  %6 = or i32 %5, %1, !dbg !12903
  store volatile i32 %6, i32* %3, align 4, !dbg !12903
  ret void, !dbg !12904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12905 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12907, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.value(metadata i32 %1, metadata !12908, metadata !DIExpression()), !dbg !12909
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12910
  %4 = load volatile i32, i32* %3, align 4, !dbg !12910
  %5 = and i32 %4, -4097, !dbg !12910
  %6 = or i32 %5, %1, !dbg !12910
  store volatile i32 %6, i32* %3, align 4, !dbg !12910
  ret void, !dbg !12911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12912 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12914, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata i32 %1, metadata !12915, metadata !DIExpression()), !dbg !12916
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12917
  %4 = load volatile i32, i32* %3, align 4, !dbg !12917
  %5 = and i32 %4, -12289, !dbg !12917
  %6 = or i32 %5, %1, !dbg !12917
  store volatile i32 %6, i32* %3, align 4, !dbg !12917
  ret void, !dbg !12918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !12919 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12921, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata i32 %1, metadata !12922, metadata !DIExpression()), !dbg !12923
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12924
  %4 = load volatile i32, i32* %3, align 4, !dbg !12924
  %5 = and i32 %4, -1537, !dbg !12924
  %6 = or i32 %5, %1, !dbg !12924
  store volatile i32 %6, i32* %3, align 4, !dbg !12924
  ret void, !dbg !12925
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12926 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12928, metadata !DIExpression()), !dbg !12929
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12930
  %3 = load volatile i32, i32* %2, align 4, !dbg !12930
  %4 = lshr i32 %3, 3, !dbg !12931
  %5 = and i32 %4, 1, !dbg !12931
  ret i32 %5, !dbg !12932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12933 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12935, metadata !DIExpression()), !dbg !12936
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12937
  %3 = load volatile i32, i32* %2, align 4, !dbg !12937
  %4 = and i32 %3, 1, !dbg !12937
  ret i32 %4, !dbg !12938
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12939 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12941, metadata !DIExpression()), !dbg !12942
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12943
  %3 = load volatile i32, i32* %2, align 4, !dbg !12943
  %4 = lshr i32 %3, 1, !dbg !12944
  %5 = and i32 %4, 1, !dbg !12944
  ret i32 %5, !dbg !12945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12946 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12948, metadata !DIExpression()), !dbg !12949
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12950
  %3 = load volatile i32, i32* %2, align 4, !dbg !12950
  %4 = lshr i32 %3, 8, !dbg !12951
  %5 = and i32 %4, 1, !dbg !12951
  ret i32 %5, !dbg !12952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12953 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12955, metadata !DIExpression()), !dbg !12956
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12957
  store volatile i32 -257, i32* %2, align 4, !dbg !12957
  ret void, !dbg !12958
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12959 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12961, metadata !DIExpression()), !dbg !12963
  %3 = bitcast i32* %2 to i8*, !dbg !12964
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12964
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12962, metadata !DIExpression()), !dbg !12965
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12966
  %5 = load volatile i32, i32* %4, align 4, !dbg !12966
  store volatile i32 %5, i32* %2, align 4, !dbg !12967
  %6 = load volatile i32, i32* %2, align 4, !dbg !12968
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12969
  %8 = load volatile i32, i32* %7, align 4, !dbg !12969
  store volatile i32 %8, i32* %2, align 4, !dbg !12970
  %9 = load volatile i32, i32* %2, align 4, !dbg !12971
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12972
  ret void, !dbg !12972
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12973 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12975, metadata !DIExpression()), !dbg !12977
  %3 = bitcast i32* %2 to i8*, !dbg !12978
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12978
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12976, metadata !DIExpression()), !dbg !12979
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12980
  %5 = load volatile i32, i32* %4, align 4, !dbg !12980
  store volatile i32 %5, i32* %2, align 4, !dbg !12981
  %6 = load volatile i32, i32* %2, align 4, !dbg !12982
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12983
  %8 = load volatile i32, i32* %7, align 4, !dbg !12983
  store volatile i32 %8, i32* %2, align 4, !dbg !12984
  %9 = load volatile i32, i32* %2, align 4, !dbg !12985
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12986
  ret void, !dbg !12986
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !12987 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12989, metadata !DIExpression()), !dbg !12991
  %3 = bitcast i32* %2 to i8*, !dbg !12992
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12992
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12990, metadata !DIExpression()), !dbg !12993
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12994
  %5 = load volatile i32, i32* %4, align 4, !dbg !12994
  store volatile i32 %5, i32* %2, align 4, !dbg !12995
  %6 = load volatile i32, i32* %2, align 4, !dbg !12996
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12997
  %8 = load volatile i32, i32* %7, align 4, !dbg !12997
  store volatile i32 %8, i32* %2, align 4, !dbg !12998
  %9 = load volatile i32, i32* %2, align 4, !dbg !12999
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13000
  ret void, !dbg !13000
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #20 !dbg !13001 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13003, metadata !DIExpression()), !dbg !13005
  %3 = bitcast i32* %2 to i8*, !dbg !13006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13006
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13004, metadata !DIExpression()), !dbg !13007
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !13008
  %5 = load volatile i32, i32* %4, align 4, !dbg !13008
  store volatile i32 %5, i32* %2, align 4, !dbg !13009
  %6 = load volatile i32, i32* %2, align 4, !dbg !13010
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !13011
  %8 = load volatile i32, i32* %7, align 4, !dbg !13011
  store volatile i32 %8, i32* %2, align 4, !dbg !13012
  %9 = load volatile i32, i32* %2, align 4, !dbg !13013
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13014
  ret void, !dbg !13014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !13015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13017, metadata !DIExpression()), !dbg !13018
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !13019
  %3 = load volatile i32, i32* %2, align 4, !dbg !13019
  %4 = lshr i32 %3, 7, !dbg !13020
  %5 = and i32 %4, 1, !dbg !13020
  ret i32 %5, !dbg !13021
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !13022 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13026, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.value(metadata i8 %1, metadata !13027, metadata !DIExpression()), !dbg !13028
  %3 = zext i8 %1 to i32, !dbg !13029
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !13030
  store volatile i32 %3, i32* %4, align 4, !dbg !13031
  ret void, !dbg !13032
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !13033 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13035, metadata !DIExpression()), !dbg !13036
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !13037
  %3 = load volatile i32, i32* %2, align 4, !dbg !13037
  %4 = lshr i32 %3, 5, !dbg !13038
  %5 = and i32 %4, 1, !dbg !13038
  ret i32 %5, !dbg !13039
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !13040 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13044, metadata !DIExpression()), !dbg !13045
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !13046
  %3 = load volatile i32, i32* %2, align 4, !dbg !13046
  %4 = trunc i32 %3 to i8, !dbg !13047
  ret i8 %4, !dbg !13048
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !13049 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13051, metadata !DIExpression()), !dbg !13057
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !13058
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !13058
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !13058
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !13052, metadata !DIExpression()), !dbg !13057
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !13059
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !13059
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !13059
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !13053, metadata !DIExpression()), !dbg !13057
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !13060
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !13061
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !13061
  %10 = tail call fastcc zeroext i1 @device_is_ready.212(%struct.device* noundef %9) #27, !dbg !13063
  br i1 %10, label %14, label %11, !dbg !13064

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.200(i32 noundef 1) #27, !dbg !13065
  %13 = zext i8 %12 to i32, !dbg !13065
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.213, i32 0, i32 0), i32 noundef %13) #26, !dbg !13065
  br label %62, !dbg !13071

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !13072
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !13073
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !13073
  %18 = load i8*, i8** %17, align 4, !dbg !13073
  %19 = tail call fastcc i32 @clock_control_on.214(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %19, metadata !13056, metadata !DIExpression()), !dbg !13057
  %20 = icmp eq i32 %19, 0, !dbg !13075
  br i1 %20, label %24, label %21, !dbg !13077

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.200(i32 noundef 1) #27, !dbg !13078
  %23 = zext i8 %22 to i32, !dbg !13078
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.215, i32 0, i32 0), i32 noundef %23) #26, !dbg !13078
  br label %62, !dbg !13084

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !13085
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !13085
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !13086
  call void @llvm.dbg.value(metadata i32 %27, metadata !13056, metadata !DIExpression()), !dbg !13057
  %28 = icmp slt i32 %27, 0, !dbg !13087
  br i1 %28, label %62, label %29, !dbg !13089

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !13090
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13090
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !13091
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13092
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !13093
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !13094
  %34 = load i32, i32* %33, align 4, !dbg !13094
  %35 = icmp ult i32 %34, 3, !dbg !13096
  br i1 %35, label %39, label %36, !dbg !13096

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.200(i32 noundef 2) #27, !dbg !13097
  %38 = zext i8 %37 to i32, !dbg !13097
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.216, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #26, !dbg !13097
  call void @llvm.dbg.value(metadata i32 0, metadata !13054, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 0, metadata !13055, metadata !DIExpression()), !dbg !13057
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !13096
  %41 = load i32, i32* %40, align 4, !dbg !13096
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !13096
  %43 = load i32, i32* %42, align 4, !dbg !13096
  br label %44, !dbg !13096

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !13106
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !13106
  call void @llvm.dbg.value(metadata i32 %46, metadata !13055, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 %45, metadata !13054, metadata !DIExpression()), !dbg !13057
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13107
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !13108
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !13109
  %49 = load i8, i8* %48, align 4, !dbg !13109, !range !8665
  %50 = icmp eq i8 %49, 0, !dbg !13109
  br i1 %50, label %52, label %51, !dbg !13111

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !13112
  br label %52, !dbg !13114

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !13115
  %54 = load i32, i32* %53, align 4, !dbg !13115
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !13116
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !13117
  %56 = load i8, i8* %55, align 4, !dbg !13117, !range !8665
  %57 = icmp eq i8 %56, 0, !dbg !13117
  br i1 %57, label %60, label %58, !dbg !13119

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13120
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !13122
  br label %60, !dbg !13123

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !13124
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !13125
  br label %62, !dbg !13126

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !13057
  ret i32 %63, !dbg !13127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !13128 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13132, metadata !DIExpression()), !dbg !13136
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !13137
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !13137
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !13137
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !13133, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !13134, metadata !DIExpression()), !dbg !13136
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !13138
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !13139
  ret void, !dbg !13140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.212(%struct.device* noundef %0) unnamed_addr #1 !dbg !13141 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13145, metadata !DIExpression()), !dbg !13146
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13147, !srcloc !13149
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.217(%struct.device* noundef %0) #27, !dbg !13150
  ret i1 %2, !dbg !13151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.214(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13154, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.value(metadata i8* %1, metadata !13155, metadata !DIExpression()), !dbg !13157
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !13158
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !13158
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !13158
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !13156, metadata !DIExpression()), !dbg !13157
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !13159
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !13159
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !13160
  ret i32 %8, !dbg !13161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !13162 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13166, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i8 0, metadata !13167, metadata !DIExpression()), !dbg !13170
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !13171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !13171
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13169, metadata !DIExpression(DW_OP_deref)), !dbg !13170
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %4, metadata !13168, metadata !DIExpression()), !dbg !13170
  %5 = icmp slt i32 %4, 0, !dbg !13173
  br i1 %5, label %9, label %6, !dbg !13175

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !13176
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !13169, metadata !DIExpression()), !dbg !13170
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !13177
  br label %9, !dbg !13178

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !13170
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !13179
  ret i32 %10, !dbg !13179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !13180 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13182, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 12, metadata !13183, metadata !DIExpression()), !dbg !13186
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !13187

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !13188, metadata !DIExpression()) #25, !dbg !13194
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !13197, !srcloc !13198
  call void @llvm.dbg.value(metadata i32 %4, metadata !13193, metadata !DIExpression()) #25, !dbg !13194
  %5 = or i32 %4, 12, !dbg !13199
  call void @llvm.dbg.value(metadata i32 %5, metadata !13184, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.value(metadata i32 %5, metadata !13201, metadata !DIExpression()) #25, !dbg !13208
  call void @llvm.dbg.value(metadata i32* %2, metadata !13206, metadata !DIExpression()) #25, !dbg !13208
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !13210, !srcloc !13211
  call void @llvm.dbg.value(metadata i32 %6, metadata !13207, metadata !DIExpression()) #25, !dbg !13208
  %7 = icmp eq i32 %6, 0, !dbg !13187
  br i1 %7, label %8, label %3, !dbg !13199, !llvm.loop !13212

8:                                                ; preds = %3
  ret void, !dbg !13213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !13214 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13216, metadata !DIExpression()), !dbg !13220
  call void @llvm.dbg.value(metadata i32 %1, metadata !13217, metadata !DIExpression()), !dbg !13220
  call void @llvm.dbg.value(metadata i32 %2, metadata !13218, metadata !DIExpression()), !dbg !13220
  call void @llvm.dbg.value(metadata i32 0, metadata !13219, metadata !DIExpression()), !dbg !13220
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !13221
  %5 = load volatile i32, i32* %4, align 4, !dbg !13221
  %6 = and i32 %5, -5633, !dbg !13221
  %7 = or i32 %2, %1, !dbg !13221
  %8 = or i32 %7, %6, !dbg !13221
  store volatile i32 %8, i32* %4, align 4, !dbg !13221
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !13222
  %10 = load volatile i32, i32* %9, align 4, !dbg !13222
  %11 = and i32 %10, -12289, !dbg !13222
  store volatile i32 %11, i32* %9, align 4, !dbg !13222
  ret void, !dbg !13223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !13224 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !13226, metadata !DIExpression()), !dbg !13227
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !13228
  %3 = load volatile i32, i32* %2, align 4, !dbg !13228
  %4 = or i32 %3, 8, !dbg !13228
  store volatile i32 %4, i32* %2, align 4, !dbg !13228
  ret void, !dbg !13229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !13230 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !13234, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !13235, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.value(metadata i32 0, metadata !13236, metadata !DIExpression()), !dbg !13237
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !13238
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !13238
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !13239
  %5 = load i8, i8* %4, align 4, !dbg !13239
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !13240
  ret i32 %6, !dbg !13241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.217(%struct.device* noundef %0) unnamed_addr #1 !dbg !13242 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13244, metadata !DIExpression()), !dbg !13245
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !13246
  ret i1 %2, !dbg !13247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !13248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13250, metadata !DIExpression()), !dbg !13251
  tail call fastcc void @__NVIC_SetPriority.219() #27, !dbg !13252
  store i32 8399, i32* @last_load, align 4, !dbg !13253
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13254
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13255
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13256
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13257
  %3 = or i32 %2, 7, !dbg !13257
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13257
  ret i32 0, !dbg !13258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.219() unnamed_addr #16 !dbg !13259 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13261, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 1, metadata !13262, metadata !DIExpression()), !dbg !13263
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !13264
  ret void, !dbg !13267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !13268 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13270, metadata !DIExpression()), !dbg !13272
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !13273
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13274
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13275
  %5 = add i32 %4, %3, !dbg !13275
  store i32 %5, i32* @cycle_count, align 4, !dbg !13275
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13276
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13277
  %7 = sub i32 %5, %6, !dbg !13280
  %8 = udiv i32 %7, 8400, !dbg !13281
  call void @llvm.dbg.value(metadata i32 %8, metadata !13271, metadata !DIExpression()), !dbg !13272
  %9 = mul nuw i32 %8, 8400, !dbg !13282
  %10 = add i32 %9, %6, !dbg !13283
  store i32 %10, i32* @announced_cycles, align 4, !dbg !13283
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !13284
  tail call void @z_arm_int_exit() #26, !dbg !13285
  ret void, !dbg !13286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !13287 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %1, metadata !13289, metadata !DIExpression()), !dbg !13293
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13294
  call void @llvm.dbg.value(metadata i32 %2, metadata !13290, metadata !DIExpression()), !dbg !13293
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13295
  call void @llvm.dbg.value(metadata i32 %3, metadata !13291, metadata !DIExpression()), !dbg !13293
  %4 = and i32 %2, 65536, !dbg !13296
  %5 = icmp ne i32 %4, 0, !dbg !13296
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !13298
  %8 = load i32, i32* @last_load, align 4, !dbg !13293
  br i1 %7, label %9, label %13, !dbg !13298

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13299
  %11 = add i32 %10, %8, !dbg !13299
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !13299
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13301
  br label %13, !dbg !13302

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !13303
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !13304
  %16 = add i32 %14, %15, !dbg !13305
  ret i32 %16, !dbg !13306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13311, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata i1 %1, metadata !13312, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13324
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !13325
  br i1 %4, label %5, label %8, !dbg !13325

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13327
  %7 = and i32 %6, -2, !dbg !13327
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13327
  store i32 -16777216, i32* @last_load, align 4, !dbg !13329
  br label %60, !dbg !13330

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !13331
  call void @llvm.dbg.value(metadata i32 %9, metadata !13316, metadata !DIExpression()), !dbg !13324
  br i1 %3, label %18, label %10, !dbg !13332

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !13332
  call void @llvm.dbg.value(metadata i32 undef, metadata !13311, metadata !DIExpression()), !dbg !13324
  %12 = icmp slt i32 %11, 1, !dbg !13333
  br i1 %12, label %18, label %13, !dbg !13333

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !13333
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !13333
  %16 = mul nuw nsw i32 %15, 8400, !dbg !13333
  %17 = add nuw nsw i32 %16, 8399, !dbg !13333
  br label %18, !dbg !13333

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !13311, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13334, metadata !DIExpression()) #25, !dbg !13341
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13343, !srcloc !13349
  call void @llvm.dbg.value(metadata i32 undef, metadata !13346, metadata !DIExpression()) #25, !dbg !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13347, metadata !DIExpression()) #25, !dbg !13350
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13341
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13351
  br i1 %21, label %23, label %22, !dbg !13354

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 148) #26, !dbg !13355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.223, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 148) #26, !dbg !13355
  unreachable, !dbg !13355

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !13343
  call void @llvm.dbg.value(metadata i32 %24, metadata !13346, metadata !DIExpression()) #25, !dbg !13350
  call void @llvm.dbg.value(metadata i32 %24, metadata !13340, metadata !DIExpression()) #25, !dbg !13341
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13357
  call void @llvm.dbg.value(metadata i32 %24, metadata !13317, metadata !DIExpression()), !dbg !13324
  %25 = tail call fastcc i32 @elapsed() #27, !dbg !13358
  call void @llvm.dbg.value(metadata i32 %25, metadata !13322, metadata !DIExpression()), !dbg !13324
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13359
  call void @llvm.dbg.value(metadata i32 %26, metadata !13314, metadata !DIExpression()), !dbg !13324
  %27 = load i32, i32* @cycle_count, align 4, !dbg !13360
  %28 = add i32 %27, %25, !dbg !13360
  store i32 %28, i32* @cycle_count, align 4, !dbg !13360
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13361
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !13362
  %30 = sub i32 %28, %29, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %30, metadata !13323, metadata !DIExpression()), !dbg !13324
  %31 = icmp slt i32 %30, 0, !dbg !13364
  br i1 %31, label %41, label %32, !dbg !13366

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !13313, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13313, metadata !DIExpression()), !dbg !13324
  %33 = add nuw i32 %19, %30, !dbg !13367
  %34 = urem i32 %33, 8400, !dbg !13369
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !13313, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13324
  %35 = sub nuw nsw i32 %19, %34, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %35, metadata !13313, metadata !DIExpression()), !dbg !13324
  %36 = icmp ugt i32 %35, 1024, !dbg !13371
  br i1 %36, label %37, label %39, !dbg !13371

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !13313, metadata !DIExpression()), !dbg !13324
  %38 = icmp ugt i32 %35, 16766400, !dbg !13372
  br i1 %38, label %41, label %39, !dbg !13374

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !13375
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13376
  call void @llvm.dbg.value(metadata i32 %43, metadata !13315, metadata !DIExpression()), !dbg !13324
  %44 = add nsw i32 %42, -1, !dbg !13377
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13378
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13379
  %45 = icmp ult i32 %26, %43, !dbg !13380
  br i1 %45, label %46, label %51, !dbg !13382

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !13383
  %48 = add i32 %26, %9, !dbg !13385
  %49 = sub i32 %48, %43, !dbg !13386
  %50 = add i32 %49, %47, !dbg !13383
  br label %55, !dbg !13387

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !13388
  %53 = load i32, i32* @cycle_count, align 4, !dbg !13390
  %54 = add i32 %52, %53, !dbg !13390
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !13391
  store i32 %56, i32* @cycle_count, align 4, !dbg !13391
  call void @llvm.dbg.value(metadata i32 undef, metadata !13392, metadata !DIExpression()) #25, !dbg !13398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13397, metadata !DIExpression()) #25, !dbg !13398
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13400
  br i1 %57, label %59, label %58, !dbg !13403

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 194) #26, !dbg !13404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.225, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 194) #26, !dbg !13404
  unreachable, !dbg !13404

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !13392, metadata !DIExpression()) #25, !dbg !13398
  call void @llvm.dbg.value(metadata i32 %24, metadata !13406, metadata !DIExpression()) #25, !dbg !13409
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !13411, !srcloc !13412
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !13413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13414 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13334, metadata !DIExpression()) #25, !dbg !13418
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13420, !srcloc !13349
  call void @llvm.dbg.value(metadata i32 undef, metadata !13346, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13347, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13418
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13423
  br i1 %2, label %4, label %3, !dbg !13424

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 148) #26, !dbg !13425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.223, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 148) #26, !dbg !13425
  unreachable, !dbg !13425

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13346, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13418
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13426
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()), !dbg !13427
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !13428
  %6 = load i32, i32* @cycle_count, align 4, !dbg !13429
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !13430
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !13417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13427
  call void @llvm.dbg.value(metadata i32 undef, metadata !13392, metadata !DIExpression()) #25, !dbg !13431
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13397, metadata !DIExpression()) #25, !dbg !13431
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13433
  br i1 %8, label %10, label %9, !dbg !13434

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 194) #26, !dbg !13435
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.225, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 194) #26, !dbg !13435
  unreachable, !dbg !13435

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !13436
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !13417, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !13427
  %12 = sub i32 %11, %7, !dbg !13437
  call void @llvm.dbg.value(metadata i32 %12, metadata !13417, metadata !DIExpression()), !dbg !13427
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %13, metadata !13346, metadata !DIExpression()) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %13, metadata !13340, metadata !DIExpression()) #25, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %13, metadata !13416, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.value(metadata i32 undef, metadata !13392, metadata !DIExpression()) #25, !dbg !13431
  call void @llvm.dbg.value(metadata i32 undef, metadata !13406, metadata !DIExpression()) #25, !dbg !13438
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !13440, !srcloc !13412
  %14 = udiv i32 %12, 8400, !dbg !13441
  ret i32 %14, !dbg !13442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13443 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13334, metadata !DIExpression()) #25, !dbg !13447
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13449, !srcloc !13349
  call void @llvm.dbg.value(metadata i32 undef, metadata !13346, metadata !DIExpression()) #25, !dbg !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13347, metadata !DIExpression()) #25, !dbg !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13447
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13452
  br i1 %2, label %4, label %3, !dbg !13453

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 148) #26, !dbg !13454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.223, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 148) #26, !dbg !13454
  unreachable, !dbg !13454

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13346, metadata !DIExpression()) #25, !dbg !13451
  call void @llvm.dbg.value(metadata i32 undef, metadata !13340, metadata !DIExpression()) #25, !dbg !13447
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13455
  call void @llvm.dbg.value(metadata i32 undef, metadata !13445, metadata !DIExpression()), !dbg !13456
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !13457
  %6 = load i32, i32* @cycle_count, align 4, !dbg !13458
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !13446, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13456
  call void @llvm.dbg.value(metadata i32 undef, metadata !13392, metadata !DIExpression()) #25, !dbg !13459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !13397, metadata !DIExpression()) #25, !dbg !13459
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13461
  br i1 %7, label %9, label %8, !dbg !13462

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 194) #26, !dbg !13463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.225, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !13463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 194) #26, !dbg !13463
  unreachable, !dbg !13463

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !13464
  call void @llvm.dbg.value(metadata i32 %10, metadata !13446, metadata !DIExpression()), !dbg !13456
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !13449
  call void @llvm.dbg.value(metadata i32 %11, metadata !13346, metadata !DIExpression()) #25, !dbg !13451
  call void @llvm.dbg.value(metadata i32 %11, metadata !13340, metadata !DIExpression()) #25, !dbg !13447
  call void @llvm.dbg.value(metadata i32 %11, metadata !13445, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata i32 undef, metadata !13392, metadata !DIExpression()) #25, !dbg !13459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13406, metadata !DIExpression()) #25, !dbg !13465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !13467, !srcloc !13412
  ret i32 %10, !dbg !13468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !13469 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13470
  %2 = icmp eq i32 %1, -16777216, !dbg !13472
  br i1 %2, label %3, label %6, !dbg !13473

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13474
  %5 = or i32 %4, 1, !dbg !13474
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13474
  br label %6, !dbg !13476

6:                                                ; preds = %3, %0
  ret void, !dbg !13477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !13478 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13479
  %2 = and i32 %1, -2, !dbg !13479
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13479
  ret void, !dbg !13480
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !13481 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13507, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.value(metadata i8 %1, metadata !13508, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13509, metadata !DIExpression()), !dbg !13510
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13511
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13511
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13510
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13512
  %8 = load i8, i8* %6, align 4, !dbg !13513
  %9 = zext i8 %8 to i32, !dbg !13514
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13514
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13515
  br i1 %11, label %18, label %24, !dbg !13516

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13510
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13512
  %14 = load i8, i8* %6, align 4, !dbg !13513
  %15 = zext i8 %14 to i32, !dbg !13514
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13514
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13515
  br i1 %17, label %18, label %24, !dbg !13516, !llvm.loop !13517

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13519
  %21 = load i8, i8* %20, align 1, !dbg !13519
  %22 = icmp eq i8 %21, %1, !dbg !13522
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13523
  br i1 %22, label %24, label %12, !dbg !13524

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13510
  ret i32 %25, !dbg !13525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13526 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13537, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i8 %1, metadata !13538, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i32 %2, metadata !13539, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i32 0, metadata !13542, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i32 0, metadata !13543, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata i8 0, metadata !13544, metadata !DIExpression()), !dbg !13554
  %4 = icmp eq i8 %1, 0, !dbg !13555
  br i1 %4, label %35, label %5, !dbg !13556

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13555
  br label %9, !dbg !13556

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13544, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i32 %29, metadata !13542, metadata !DIExpression()), !dbg !13553
  %8 = icmp eq i32 %34, %6, !dbg !13555
  br i1 %8, label %35, label %9, !dbg !13556, !llvm.loop !13557

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13544, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i32 %11, metadata !13542, metadata !DIExpression()), !dbg !13553
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13559
  %13 = load i32, i32* %12, align 4, !dbg !13559
  call void @llvm.dbg.value(metadata i32 %13, metadata !13541, metadata !DIExpression()), !dbg !13553
  %14 = and i32 %13, 31, !dbg !13560
  %15 = icmp ult i32 %14, 16, !dbg !13561
  br i1 %15, label %16, label %20, !dbg !13562

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13563
  %18 = load i32, i32* %17, align 4, !dbg !13563
  %19 = or i32 %18, 32, !dbg !13565
  call void @llvm.dbg.value(metadata i32 %19, metadata !13542, metadata !DIExpression()), !dbg !13553
  br label %28, !dbg !13566

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13567

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13568
  %23 = load i32, i32* %22, align 4, !dbg !13568
  call void @llvm.dbg.value(metadata i32 %23, metadata !13546, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13569
  %24 = lshr i32 %23, 7, !dbg !13570
  %25 = and i32 %24, 16, !dbg !13570
  %26 = or i32 %25, %23, !dbg !13570
  call void @llvm.dbg.value(metadata i32 %26, metadata !13542, metadata !DIExpression()), !dbg !13553
  br label %28, !dbg !13571

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !13553
  call void @llvm.dbg.value(metadata i32 %29, metadata !13542, metadata !DIExpression()), !dbg !13553
  %30 = lshr i32 %13, 5, !dbg !13572
  %31 = and i32 %30, 255, !dbg !13572
  call void @llvm.dbg.value(metadata i32 %31, metadata !13540, metadata !DIExpression()), !dbg !13553
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !13573
  call void @llvm.dbg.value(metadata i32 %32, metadata !13543, metadata !DIExpression()), !dbg !13553
  %33 = icmp slt i32 %32, 0, !dbg !13574
  %34 = add nuw nsw i32 %10, 1, !dbg !13576
  call void @llvm.dbg.value(metadata i32 %34, metadata !13544, metadata !DIExpression()), !dbg !13554
  br i1 %33, label %35, label %7, !dbg !13577

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13583, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.value(metadata i32 %1, metadata !13584, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.value(metadata i32 %2, metadata !13585, metadata !DIExpression()), !dbg !13587
  %4 = icmp ugt i32 %0, 175, !dbg !13588
  br i1 %4, label %16, label %5, !dbg !13590

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13591
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13592
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13592
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13586, metadata !DIExpression()), !dbg !13587
  %9 = add nsw i32 %6, -8, !dbg !13593
  %10 = icmp ult i32 %9, 3, !dbg !13593
  br i1 %10, label %16, label %11, !dbg !13595

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.230(%struct.device* noundef %8) #27, !dbg !13596
  br i1 %12, label %13, label %16, !dbg !13597

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !13598
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !13599
  br label %16, !dbg !13600

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !13587
  ret i32 %17, !dbg !13601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.230(%struct.device* noundef %0) unnamed_addr #1 !dbg !13602 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13606, metadata !DIExpression()), !dbg !13607
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13608, !srcloc !13610
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.231(%struct.device* noundef %0) #27, !dbg !13611
  ret i1 %2, !dbg !13612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.231(%struct.device* noundef %0) unnamed_addr #1 !dbg !13613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13615, metadata !DIExpression()), !dbg !13616
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !13617
  ret i1 %2, !dbg !13618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !13619 {
  ret void, !dbg !13620
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13621 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13623, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.value(metadata i32 0, metadata !13624, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.value(metadata i32 2, metadata !13625, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.value(metadata i32 0, metadata !13626, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.value(metadata i32 2, metadata !13627, metadata !DIExpression()), !dbg !13628
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13629
  %2 = and i32 %1, 12, !dbg !13630
  call void @llvm.dbg.value(metadata i32 %2, metadata !13623, metadata !DIExpression()), !dbg !13628
  %3 = icmp eq i32 %2, 8, !dbg !13631
  br i1 %3, label %4, label %18, !dbg !13631

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13632
  call void @llvm.dbg.value(metadata i32 %5, metadata !13626, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13628
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13634
  %7 = and i32 %6, 63, !dbg !13635
  call void @llvm.dbg.value(metadata i32 %7, metadata !13627, metadata !DIExpression()), !dbg !13628
  %8 = udiv i32 16000000, %7, !dbg !13636
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13636
  %10 = lshr i32 %9, 6, !dbg !13636
  %11 = and i32 %10, 511, !dbg !13636
  %12 = mul i32 %11, %8, !dbg !13636
  call void @llvm.dbg.value(metadata i32 %12, metadata !13624, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.value(metadata i32 %12, metadata !13624, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.value(metadata i32 %12, metadata !13624, metadata !DIExpression()), !dbg !13628
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13638
  %14 = lshr i32 %13, 15, !dbg !13639
  %15 = and i32 %14, 6, !dbg !13639
  %16 = add nuw nsw i32 %15, 2, !dbg !13639
  call void @llvm.dbg.value(metadata i32 %16, metadata !13625, metadata !DIExpression()), !dbg !13628
  %17 = udiv i32 %12, %16, !dbg !13640
  br label %18, !dbg !13641

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !13642
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13643
  %21 = lshr i32 %20, 4, !dbg !13644
  %22 = and i32 %21, 15, !dbg !13644
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !13645
  %24 = load i8, i8* %23, align 1, !dbg !13645
  %25 = zext i8 %24 to i32, !dbg !13645
  call void @llvm.dbg.value(metadata i32 %25, metadata !13623, metadata !DIExpression()), !dbg !13628
  %26 = lshr i32 %19, %25, !dbg !13646
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !13646
  ret void, !dbg !13647
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13648 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !13690, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13691, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13692, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13693, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13694, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13695, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13696, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13697, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13698, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 0, metadata !13699, metadata !DIExpression()), !dbg !13704
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !13705
  %4 = load i32, i32* %3, align 4, !dbg !13705
  %5 = and i32 %4, 1, !dbg !13707
  %6 = icmp eq i32 %5, 0, !dbg !13708
  br i1 %6, label %17, label %7, !dbg !13709

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13710
  %9 = and i32 %8, -100663297, !dbg !13710
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13710
  %11 = load i32, i32* %10, align 4, !dbg !13710
  %12 = or i32 %9, %11, !dbg !13710
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13710
  %13 = load i32, i32* %10, align 4, !dbg !13712
  %14 = icmp eq i32 %13, 0, !dbg !13714
  %15 = zext i1 %14 to i32, !dbg !13715
  %16 = load i32, i32* %3, align 4, !dbg !13716
  br label %17, !dbg !13715

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !13716
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !13704
  call void @llvm.dbg.value(metadata i32 %19, metadata !13698, metadata !DIExpression()), !dbg !13704
  %20 = and i32 %18, 2, !dbg !13718
  %21 = icmp eq i32 %20, 0, !dbg !13719
  br i1 %21, label %32, label %22, !dbg !13720

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13721
  %24 = and i32 %23, -402653185, !dbg !13721
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13721
  %26 = load i32, i32* %25, align 4, !dbg !13721
  %27 = or i32 %24, %26, !dbg !13721
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13721
  %28 = load i32, i32* %25, align 4, !dbg !13723
  %29 = icmp eq i32 %28, 0, !dbg !13725
  %30 = select i1 %29, i32 1, i32 %19, !dbg !13726
  %31 = load i32, i32* %3, align 4, !dbg !13727
  br label %32, !dbg !13726

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !13727
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !13704
  call void @llvm.dbg.value(metadata i32 %34, metadata !13698, metadata !DIExpression()), !dbg !13704
  %35 = and i32 %33, 4, !dbg !13729
  %36 = icmp eq i32 %35, 0, !dbg !13730
  br i1 %36, label %49, label %37, !dbg !13731

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13732
  %39 = and i32 %38, -3145729, !dbg !13732
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13732
  %41 = load i32, i32* %40, align 4, !dbg !13732
  %42 = or i32 %39, %41, !dbg !13732
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13732
  %43 = load i32, i32* %40, align 4, !dbg !13734
  %44 = icmp eq i32 %43, 1048576, !dbg !13736
  %45 = select i1 %44, i32 1, i32 %34, !dbg !13737
  call void @llvm.dbg.value(metadata i32 %45, metadata !13698, metadata !DIExpression()), !dbg !13704
  %46 = icmp eq i32 %43, 0, !dbg !13738
  %47 = zext i1 %46 to i32, !dbg !13740
  %48 = load i32, i32* %3, align 4, !dbg !13741
  br label %49, !dbg !13740

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !13741
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !13704
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !13704
  call void @llvm.dbg.value(metadata i32 %52, metadata !13699, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 %51, metadata !13698, metadata !DIExpression()), !dbg !13704
  %53 = and i32 %50, 8, !dbg !13743
  %54 = icmp eq i32 %53, 0, !dbg !13744
  br i1 %54, label %67, label %55, !dbg !13745

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13746
  %57 = and i32 %56, -12582913, !dbg !13746
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13746
  %59 = load i32, i32* %58, align 4, !dbg !13746
  %60 = or i32 %57, %59, !dbg !13746
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13746
  %61 = load i32, i32* %58, align 4, !dbg !13748
  %62 = icmp eq i32 %61, 4194304, !dbg !13750
  %63 = select i1 %62, i32 1, i32 %51, !dbg !13751
  call void @llvm.dbg.value(metadata i32 %63, metadata !13698, metadata !DIExpression()), !dbg !13704
  %64 = icmp eq i32 %61, 0, !dbg !13752
  %65 = select i1 %64, i32 1, i32 %52, !dbg !13754
  %66 = load i32, i32* %3, align 4, !dbg !13755
  br label %67, !dbg !13754

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !13755
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !13704
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !13704
  call void @llvm.dbg.value(metadata i32 %70, metadata !13699, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata i32 %69, metadata !13698, metadata !DIExpression()), !dbg !13704
  %71 = and i32 %68, 32, !dbg !13756
  %72 = icmp eq i32 %71, 0, !dbg !13757
  br i1 %72, label %131, label %73, !dbg !13758

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !13759
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !13759
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13700, metadata !DIExpression()), !dbg !13759
  store volatile i32 0, i32* %2, align 4, !dbg !13759
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13759
  %76 = or i32 %75, 268435456, !dbg !13759
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13759
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13759
  %78 = and i32 %77, 268435456, !dbg !13759
  store volatile i32 %78, i32* %2, align 4, !dbg !13759
  %79 = load volatile i32, i32* %2, align 4, !dbg !13759
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !13760
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13761
  %81 = or i32 %80, 256, !dbg !13761
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13761
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !13762
  call void @llvm.dbg.value(metadata i32 %82, metadata !13691, metadata !DIExpression()), !dbg !13704
  br label %83, !dbg !13763

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13764
  %85 = and i32 %84, 256, !dbg !13765
  %86 = icmp eq i32 %85, 0, !dbg !13766
  br i1 %86, label %87, label %91, !dbg !13763

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #26, !dbg !13767
  %89 = sub i32 %88, %82, !dbg !13770
  %90 = icmp ugt i32 %89, 2, !dbg !13771
  br i1 %90, label %439, label %83, !dbg !13772, !llvm.loop !13773

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13775
  %93 = and i32 %92, 768, !dbg !13776
  call void @llvm.dbg.value(metadata i32 %93, metadata !13692, metadata !DIExpression()), !dbg !13704
  %94 = icmp eq i32 %93, 0, !dbg !13777
  br i1 %94, label %116, label %95, !dbg !13779

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13780
  %97 = load i32, i32* %96, align 4, !dbg !13780
  %98 = and i32 %97, 768, !dbg !13781
  %99 = icmp eq i32 %93, %98, !dbg !13782
  br i1 %99, label %116, label %100, !dbg !13783

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13784
  %102 = and i32 %101, -769, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %102, metadata !13692, metadata !DIExpression()), !dbg !13704
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !13787
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !13788
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13789
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13790
  %104 = and i32 %103, 1, !dbg !13790
  %105 = icmp eq i32 %104, 0, !dbg !13790
  br i1 %105, label %116, label %106, !dbg !13792

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #26, !dbg !13793
  call void @llvm.dbg.value(metadata i32 %107, metadata !13691, metadata !DIExpression()), !dbg !13704
  br label %108, !dbg !13795

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13796
  %110 = and i32 %109, 2, !dbg !13797
  %111 = icmp eq i32 %110, 0, !dbg !13797
  br i1 %111, label %112, label %116, !dbg !13795

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #26, !dbg !13798
  %114 = sub i32 %113, %107, !dbg !13801
  %115 = icmp ugt i32 %114, 5000, !dbg !13802
  br i1 %115, label %439, label %108, !dbg !13803, !llvm.loop !13804

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !13806
  %118 = load i32, i32* %117, align 4, !dbg !13806
  %119 = and i32 %118, 768, !dbg !13806
  %120 = icmp eq i32 %119, 768, !dbg !13806
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13806
  %122 = and i32 %121, -2031617, !dbg !13806
  %123 = and i32 %118, 268434687, !dbg !13806
  %124 = select i1 %120, i32 %123, i32 0, !dbg !13806
  %125 = or i32 %122, %124, !dbg !13806
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13806
  %126 = load i32, i32* %117, align 4, !dbg !13806
  %127 = and i32 %126, 4095, !dbg !13806
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13806
  %129 = or i32 %128, %127, !dbg !13806
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13806
  %130 = load i32, i32* %3, align 4, !dbg !13808
  br label %131, !dbg !13810

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !13808
  %133 = and i32 %132, 16, !dbg !13811
  %134 = icmp eq i32 %133, 0, !dbg !13812
  br i1 %134, label %140, label %135, !dbg !13813

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !13814
  %137 = load i8, i8* %136, align 4, !dbg !13814
  %138 = zext i8 %137 to i32, !dbg !13814
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !13814
  %139 = load i32, i32* %3, align 4, !dbg !13816
  br label %140, !dbg !13818

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !13816
  %142 = and i32 %141, 128, !dbg !13819
  %143 = icmp eq i32 %142, 0, !dbg !13820
  br i1 %143, label %151, label %144, !dbg !13821

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13822
  %146 = and i32 %145, -12582913, !dbg !13822
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !13822
  %148 = load i32, i32* %147, align 4, !dbg !13822
  %149 = or i32 %146, %148, !dbg !13822
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13822
  %150 = load i32, i32* %3, align 4, !dbg !13824
  br label %151, !dbg !13826

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !13824
  %153 = and i32 %152, 64, !dbg !13827
  %154 = icmp eq i32 %153, 0, !dbg !13828
  br i1 %154, label %162, label %155, !dbg !13829

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13830
  %157 = and i32 %156, -67108865, !dbg !13830
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !13830
  %159 = load i32, i32* %158, align 4, !dbg !13830
  %160 = or i32 %157, %159, !dbg !13830
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13830
  %161 = load i32, i32* %3, align 4, !dbg !13832
  br label %162, !dbg !13834

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !13832
  %164 = and i32 %163, 256, !dbg !13835
  %165 = icmp eq i32 %164, 0, !dbg !13836
  br i1 %165, label %176, label %166, !dbg !13837

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13838
  %168 = and i32 %167, -134217729, !dbg !13838
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !13838
  %170 = load i32, i32* %169, align 4, !dbg !13838
  %171 = or i32 %168, %170, !dbg !13838
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13838
  %172 = load i32, i32* %169, align 4, !dbg !13840
  %173 = icmp eq i32 %172, 134217728, !dbg !13842
  %174 = select i1 %173, i32 1, i32 %70, !dbg !13843
  %175 = load i32, i32* %3, align 4, !dbg !13844
  br label %176, !dbg !13843

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !13844
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !13704
  call void @llvm.dbg.value(metadata i32 %178, metadata !13699, metadata !DIExpression()), !dbg !13704
  %179 = and i32 %177, 512, !dbg !13846
  %180 = icmp eq i32 %179, 0, !dbg !13847
  br i1 %180, label %188, label %181, !dbg !13848

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13849
  %183 = and i32 %182, -268435457, !dbg !13849
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !13849
  %185 = load i32, i32* %184, align 4, !dbg !13849
  %186 = or i32 %183, %185, !dbg !13849
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13849
  %187 = load i32, i32* %3, align 4, !dbg !13851
  br label %188, !dbg !13853

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !13851
  %190 = and i32 %189, 1024, !dbg !13854
  %191 = icmp eq i32 %190, 0, !dbg !13855
  br i1 %191, label %204, label %192, !dbg !13856

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13857
  %194 = and i32 %193, -536870913, !dbg !13857
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13857
  %196 = load i32, i32* %195, align 4, !dbg !13857
  %197 = or i32 %194, %196, !dbg !13857
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !13857
  %198 = load i32, i32* %195, align 4, !dbg !13859
  %199 = icmp eq i32 %198, 536870912, !dbg !13861
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !13862
  call void @llvm.dbg.value(metadata i32 %69, metadata !13698, metadata !DIExpression()), !dbg !13704
  br i1 %201, label %209, label %202, !dbg !13862

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !13863
  br label %206, !dbg !13862

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !13698, metadata !DIExpression()), !dbg !13704
  %205 = icmp eq i32 %69, 1, !dbg !13865
  br i1 %205, label %209, label %206, !dbg !13866

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !13863
  %208 = icmp eq i32 %207, 2048, !dbg !13867
  br i1 %208, label %209, label %356, !dbg !13868

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13869
  %210 = tail call i32 @HAL_GetTick() #26, !dbg !13871
  call void @llvm.dbg.value(metadata i32 %210, metadata !13691, metadata !DIExpression()), !dbg !13704
  br label %211, !dbg !13872

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13873
  %213 = and i32 %212, 134217728, !dbg !13873
  %214 = icmp eq i32 %213, 0, !dbg !13873
  br i1 %214, label %219, label %215, !dbg !13872

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !13874
  %217 = sub i32 %216, %210, !dbg !13877
  %218 = icmp ugt i32 %217, 2, !dbg !13878
  br i1 %218, label %439, label %211, !dbg !13879, !llvm.loop !13880

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !13882
  %221 = and i32 %220, 1, !dbg !13884
  %222 = icmp eq i32 %221, 0, !dbg !13885
  br i1 %222, label %227, label %223, !dbg !13886

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !13887
  %225 = load i32, i32* %224, align 4, !dbg !13887
  %226 = icmp eq i32 %225, 0, !dbg !13888
  br i1 %226, label %234, label %227, !dbg !13889

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !13890
  %229 = icmp eq i32 %228, 0, !dbg !13891
  br i1 %229, label %252, label %230, !dbg !13892

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !13893
  %232 = load i32, i32* %231, align 4, !dbg !13893
  %233 = icmp eq i32 %232, 0, !dbg !13894
  br i1 %233, label %234, label %252, !dbg !13895

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13896
  %236 = and i32 %235, 196608, !dbg !13898
  call void @llvm.dbg.value(metadata i32 %236, metadata !13693, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13704
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13899
  %238 = and i32 %237, 251658240, !dbg !13900
  call void @llvm.dbg.value(metadata i32 %238, metadata !13694, metadata !DIExpression()), !dbg !13704
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13901
  %240 = load i32, i32* %239, align 4, !dbg !13901
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13901
  %242 = load i32, i32* %241, align 4, !dbg !13901
  %243 = shl i32 %242, 6, !dbg !13901
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13901
  %245 = load i32, i32* %244, align 4, !dbg !13901
  %246 = shl i32 %245, 28, !dbg !13901
  %247 = or i32 %240, %236, !dbg !13901
  %248 = or i32 %247, %238, !dbg !13901
  %249 = or i32 %248, %243, !dbg !13901
  %250 = or i32 %249, %246, !dbg !13901
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13901
  %251 = load i32, i32* %3, align 4, !dbg !13902
  br label %252, !dbg !13904

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !13902
  %254 = and i32 %253, 4, !dbg !13905
  %255 = icmp eq i32 %254, 0, !dbg !13906
  br i1 %255, label %260, label %256, !dbg !13907

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13908
  %258 = load i32, i32* %257, align 4, !dbg !13908
  %259 = icmp eq i32 %258, 1048576, !dbg !13909
  br i1 %259, label %267, label %260, !dbg !13910

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !13911
  %262 = icmp eq i32 %261, 0, !dbg !13912
  br i1 %262, label %291, label %263, !dbg !13913

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13914
  %265 = load i32, i32* %264, align 4, !dbg !13914
  %266 = icmp eq i32 %265, 4194304, !dbg !13915
  br i1 %266, label %267, label %291, !dbg !13916

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13917
  %269 = and i32 %268, 196608, !dbg !13919
  call void @llvm.dbg.value(metadata i32 %269, metadata !13693, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13704
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13920
  %271 = and i32 %270, 1879048192, !dbg !13921
  call void @llvm.dbg.value(metadata i32 %271, metadata !13695, metadata !DIExpression()), !dbg !13704
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13922
  %273 = load i32, i32* %272, align 4, !dbg !13922
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13922
  %275 = load i32, i32* %274, align 4, !dbg !13922
  %276 = shl i32 %275, 6, !dbg !13922
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13922
  %278 = load i32, i32* %277, align 4, !dbg !13922
  %279 = shl i32 %278, 24, !dbg !13922
  %280 = or i32 %273, %269, !dbg !13922
  %281 = or i32 %280, %271, !dbg !13922
  %282 = or i32 %281, %276, !dbg !13922
  %283 = or i32 %282, %279, !dbg !13922
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13922
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13923
  %285 = and i32 %284, -32, !dbg !13923
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !13923
  %287 = load i32, i32* %286, align 4, !dbg !13923
  %288 = add i32 %287, -1, !dbg !13923
  %289 = or i32 %288, %285, !dbg !13923
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13923
  %290 = load i32, i32* %3, align 4, !dbg !13924
  br label %291, !dbg !13926

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !13924
  %293 = and i32 %292, 1024, !dbg !13927
  %294 = icmp eq i32 %293, 0, !dbg !13928
  br i1 %294, label %321, label %295, !dbg !13929

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !13930
  %297 = load i32, i32* %296, align 4, !dbg !13930
  %298 = icmp eq i32 %297, 536870912, !dbg !13931
  br i1 %298, label %299, label %321, !dbg !13932

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13933
  call void @llvm.dbg.value(metadata i32 %300, metadata !13694, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13704
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13935
  %302 = and i32 %301, 1879048192, !dbg !13936
  call void @llvm.dbg.value(metadata i32 %302, metadata !13695, metadata !DIExpression()), !dbg !13704
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13937
  %304 = load i32, i32* %303, align 4, !dbg !13937
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13937
  %306 = load i32, i32* %305, align 4, !dbg !13937
  %307 = shl i32 %306, 6, !dbg !13937
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13937
  %309 = load i32, i32* %308, align 4, !dbg !13937
  %310 = shl i32 %309, 15, !dbg !13937
  %311 = add i32 %310, -65536, !dbg !13937
  %312 = and i32 %311, -65536, !dbg !13937
  %313 = shl i32 %300, 9, !dbg !13937
  %314 = and i32 %313, 100663296, !dbg !13937
  %315 = add nuw nsw i32 %314, 33554432, !dbg !13937
  %316 = or i32 %302, %304, !dbg !13937
  %317 = or i32 %316, %315, !dbg !13937
  %318 = or i32 %317, %307, !dbg !13937
  %319 = or i32 %318, %312, !dbg !13937
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13937
  %320 = load i32, i32* %3, align 4, !dbg !13938
  br label %321, !dbg !13940

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !13938
  %323 = and i32 %322, 2048, !dbg !13941
  %324 = icmp eq i32 %323, 0, !dbg !13942
  br i1 %324, label %346, label %325, !dbg !13943

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !13944
  %327 = load i32, i32* %326, align 4, !dbg !13944
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !13944
  %329 = load i32, i32* %328, align 4, !dbg !13944
  %330 = shl i32 %329, 6, !dbg !13944
  %331 = or i32 %330, %327, !dbg !13944
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !13944
  %333 = load i32, i32* %332, align 4, !dbg !13944
  %334 = shl i32 %333, 15, !dbg !13944
  %335 = add i32 %334, -65536, !dbg !13944
  %336 = and i32 %335, -65536, !dbg !13944
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !13944
  %338 = load i32, i32* %337, align 4, !dbg !13944
  %339 = shl i32 %338, 24, !dbg !13944
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !13944
  %341 = load i32, i32* %340, align 4, !dbg !13944
  %342 = shl i32 %341, 28, !dbg !13944
  %343 = or i32 %331, %339, !dbg !13944
  %344 = or i32 %343, %336, !dbg !13944
  %345 = or i32 %344, %342, !dbg !13944
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !13944
  br label %346, !dbg !13946

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !13947
  %347 = tail call i32 @HAL_GetTick() #26, !dbg !13948
  call void @llvm.dbg.value(metadata i32 %347, metadata !13691, metadata !DIExpression()), !dbg !13704
  br label %348, !dbg !13949

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13950
  %350 = and i32 %349, 134217728, !dbg !13951
  %351 = icmp eq i32 %350, 0, !dbg !13951
  br i1 %351, label %352, label %356, !dbg !13949

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #26, !dbg !13952
  %354 = sub i32 %353, %347, !dbg !13955
  %355 = icmp ugt i32 %354, 2, !dbg !13956
  br i1 %355, label %439, label %348, !dbg !13957, !llvm.loop !13958

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !13960
  br i1 %357, label %358, label %439, !dbg !13962

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13963
  %359 = tail call i32 @HAL_GetTick() #26, !dbg !13965
  call void @llvm.dbg.value(metadata i32 %359, metadata !13691, metadata !DIExpression()), !dbg !13704
  br label %360, !dbg !13966

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13967
  %362 = and i32 %361, 536870912, !dbg !13967
  %363 = icmp eq i32 %362, 0, !dbg !13967
  br i1 %363, label %368, label %364, !dbg !13966

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #26, !dbg !13968
  %366 = sub i32 %365, %359, !dbg !13971
  %367 = icmp ugt i32 %366, 2, !dbg !13972
  br i1 %367, label %439, label %360, !dbg !13973, !llvm.loop !13974

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !13976
  %370 = and i32 %369, 4, !dbg !13978
  %371 = icmp eq i32 %370, 0, !dbg !13979
  br i1 %371, label %376, label %372, !dbg !13980

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !13981
  %374 = load i32, i32* %373, align 4, !dbg !13981
  %375 = icmp eq i32 %374, 0, !dbg !13982
  br i1 %375, label %383, label %376, !dbg !13983

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !13984
  %378 = icmp eq i32 %377, 0, !dbg !13985
  br i1 %378, label %405, label %379, !dbg !13986

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !13987
  %381 = load i32, i32* %380, align 4, !dbg !13987
  %382 = icmp eq i32 %381, 0, !dbg !13988
  br i1 %382, label %383, label %405, !dbg !13989

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13990
  %385 = and i32 %384, 196608, !dbg !13992
  call void @llvm.dbg.value(metadata i32 %385, metadata !13696, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !13704
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !13993
  %387 = load i32, i32* %386, align 4, !dbg !13993
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !13993
  %389 = load i32, i32* %388, align 4, !dbg !13993
  %390 = shl i32 %389, 6, !dbg !13993
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !13993
  %392 = load i32, i32* %391, align 4, !dbg !13993
  %393 = shl i32 %392, 24, !dbg !13993
  %394 = or i32 %385, %387, !dbg !13993
  %395 = or i32 %394, %390, !dbg !13993
  %396 = or i32 %395, %393, !dbg !13993
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !13993
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13994
  %398 = and i32 %397, -7937, !dbg !13994
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !13994
  %400 = load i32, i32* %399, align 4, !dbg !13994
  %401 = shl i32 %400, 8, !dbg !13994
  %402 = add i32 %401, -256, !dbg !13994
  %403 = or i32 %402, %398, !dbg !13994
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !13994
  %404 = load i32, i32* %3, align 4, !dbg !13995
  br label %405, !dbg !13997

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !13995
  %407 = and i32 %406, 256, !dbg !13998
  %408 = icmp eq i32 %407, 0, !dbg !13999
  br i1 %408, label %429, label %409, !dbg !14000

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !14001
  %411 = load i32, i32* %410, align 4, !dbg !14001
  %412 = icmp eq i32 %411, 134217728, !dbg !14002
  br i1 %412, label %413, label %429, !dbg !14003

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14004
  %415 = and i32 %414, 251658240, !dbg !14006
  call void @llvm.dbg.value(metadata i32 %415, metadata !13697, metadata !DIExpression()), !dbg !13704
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !14007
  %417 = load i32, i32* %416, align 4, !dbg !14007
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !14007
  %419 = load i32, i32* %418, align 4, !dbg !14007
  %420 = shl i32 %419, 6, !dbg !14007
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !14007
  %422 = load i32, i32* %421, align 4, !dbg !14007
  %423 = shl i32 %422, 15, !dbg !14007
  %424 = add i32 %423, -65536, !dbg !14007
  %425 = and i32 %424, -65536, !dbg !14007
  %426 = or i32 %415, %417, !dbg !14007
  %427 = or i32 %426, %420, !dbg !14007
  %428 = or i32 %427, %425, !dbg !14007
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14007
  br label %429, !dbg !14008

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14009
  %430 = tail call i32 @HAL_GetTick() #26, !dbg !14010
  call void @llvm.dbg.value(metadata i32 %430, metadata !13691, metadata !DIExpression()), !dbg !13704
  br label %431, !dbg !14011

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14012
  %433 = and i32 %432, 536870912, !dbg !14013
  %434 = icmp eq i32 %433, 0, !dbg !14013
  br i1 %434, label %435, label %439, !dbg !14011

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #26, !dbg !14014
  %437 = sub i32 %436, %430, !dbg !14017
  %438 = icmp ugt i32 %437, 2, !dbg !14018
  br i1 %438, label %439, label %431, !dbg !14019, !llvm.loop !14020

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !13704
  ret i32 %440, !dbg !14022
}

; Function Attrs: optsize
declare !dbg !14023 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !14025 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !14029, metadata !DIExpression()), !dbg !14031
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !14032
  store i32 2047, i32* %2, align 4, !dbg !14033
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14034
  %4 = and i32 %3, 63, !dbg !14035
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !14036
  store i32 %4, i32* %5, align 4, !dbg !14037
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14038
  %7 = lshr i32 %6, 6, !dbg !14039
  %8 = and i32 %7, 511, !dbg !14039
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !14040
  store i32 %8, i32* %9, align 4, !dbg !14041
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14042
  %11 = lshr i32 %10, 15, !dbg !14043
  %12 = and i32 %11, 6, !dbg !14043
  %13 = add nuw nsw i32 %12, 2, !dbg !14043
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !14044
  store i32 %13, i32* %14, align 4, !dbg !14045
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14046
  %16 = lshr i32 %15, 24, !dbg !14047
  %17 = and i32 %16, 15, !dbg !14047
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !14048
  store i32 %17, i32* %18, align 4, !dbg !14049
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14050
  %20 = lshr i32 %19, 28, !dbg !14051
  %21 = and i32 %20, 7, !dbg !14051
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !14052
  store i32 %21, i32* %22, align 4, !dbg !14053
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14054
  %24 = and i32 %23, 63, !dbg !14055
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !14056
  store i32 %24, i32* %25, align 4, !dbg !14057
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14058
  %27 = lshr i32 %26, 6, !dbg !14059
  %28 = and i32 %27, 511, !dbg !14059
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !14060
  store i32 %28, i32* %29, align 4, !dbg !14061
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14062
  %31 = lshr i32 %30, 15, !dbg !14063
  %32 = and i32 %31, 6, !dbg !14063
  %33 = add nuw nsw i32 %32, 2, !dbg !14063
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !14064
  store i32 %33, i32* %34, align 4, !dbg !14065
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14066
  %36 = lshr i32 %35, 24, !dbg !14067
  %37 = and i32 %36, 15, !dbg !14067
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !14068
  store i32 %37, i32* %38, align 4, !dbg !14069
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14070
  %40 = and i32 %39, 31, !dbg !14071
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !14072
  store i32 %40, i32* %41, align 4, !dbg !14073
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14074
  %43 = lshr i32 %42, 8, !dbg !14075
  %44 = and i32 %43, 31, !dbg !14075
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !14076
  store i32 %44, i32* %45, align 4, !dbg !14077
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14078
  %47 = and i32 %46, 3145728, !dbg !14078
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !14079
  store i32 %47, i32* %48, align 4, !dbg !14080
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14081
  %50 = and i32 %49, 12582912, !dbg !14081
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !14082
  store i32 %50, i32* %51, align 4, !dbg !14083
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14084
  %53 = and i32 %52, 100663296, !dbg !14084
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !14085
  store i32 %53, i32* %54, align 4, !dbg !14086
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14087
  %56 = and i32 %55, 402653184, !dbg !14087
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !14088
  store i32 %56, i32* %57, align 4, !dbg !14089
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14090
  %59 = and i32 %58, 2031616, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %59, metadata !14030, metadata !DIExpression()), !dbg !14031
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14092
  %61 = and i32 %60, 768, !dbg !14093
  %62 = or i32 %61, %59, !dbg !14094
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !14095
  store i32 %62, i32* %63, align 4, !dbg !14096
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !14097
  %65 = and i32 %64, 67108864, !dbg !14097
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !14098
  store i32 %65, i32* %66, align 4, !dbg !14099
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !14100
  %68 = and i32 %67, 12582912, !dbg !14100
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !14101
  store i32 %68, i32* %69, align 4, !dbg !14102
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !14103
  %71 = and i32 %70, 134217728, !dbg !14103
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !14104
  store i32 %71, i32* %72, align 4, !dbg !14105
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !14106
  %74 = and i32 %73, 268435456, !dbg !14106
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !14107
  store i32 %74, i32* %75, align 4, !dbg !14108
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !14109
  %77 = and i32 %76, 536870912, !dbg !14109
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !14110
  store i32 %77, i32* %78, align 4, !dbg !14111
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14112
  %80 = lshr i32 %79, 24, !dbg !14114
  %81 = trunc i32 %80 to i8, !dbg !14114
  %82 = and i8 %81, 1, !dbg !14114
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !14115
  store i8 %82, i8* %83, align 4, !dbg !14117
  ret void, !dbg !14118
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #17 !dbg !14119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14121, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 0, metadata !14122, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 0, metadata !14123, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 0, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 0, metadata !14125, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 0, metadata !14126, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 0, metadata !14127, metadata !DIExpression()), !dbg !14128
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !14129

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14130
  call void @llvm.dbg.value(metadata i32 %3, metadata !14125, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 %3, metadata !14125, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !14128
  %4 = lshr i32 %3, 20, !dbg !14133
  %5 = and i32 %4, 15, !dbg !14133
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !14133

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14134
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14138
  %9 = and i32 %8, 63, !dbg !14138
  %10 = udiv i32 16000000, %9, !dbg !14138
  call void @llvm.dbg.value(metadata i32 %10, metadata !14124, metadata !DIExpression()), !dbg !14128
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14139
  %12 = lshr i32 %11, 24, !dbg !14140
  %13 = and i32 %12, 15, !dbg !14140
  call void @llvm.dbg.value(metadata i32 %13, metadata !14122, metadata !DIExpression()), !dbg !14128
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14141
  %15 = lshr i32 %14, 6, !dbg !14142
  %16 = and i32 %15, 511, !dbg !14142
  %17 = mul i32 %16, %10, !dbg !14143
  %18 = udiv i32 %17, %13, !dbg !14144
  call void @llvm.dbg.value(metadata i32 %18, metadata !14123, metadata !DIExpression()), !dbg !14128
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14145
  %20 = lshr i32 %19, 8, !dbg !14146
  %21 = and i32 %20, 31, !dbg !14146
  %22 = add nuw nsw i32 %21, 1, !dbg !14147
  call void @llvm.dbg.value(metadata i32 %22, metadata !14122, metadata !DIExpression()), !dbg !14128
  %23 = udiv i32 %18, %22, !dbg !14148
  call void @llvm.dbg.value(metadata i32 %23, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14149

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14150
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14153
  %27 = and i32 %26, 63, !dbg !14153
  %28 = udiv i32 16000000, %27, !dbg !14153
  call void @llvm.dbg.value(metadata i32 %28, metadata !14124, metadata !DIExpression()), !dbg !14128
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14154
  %30 = lshr i32 %29, 24, !dbg !14155
  %31 = and i32 %30, 15, !dbg !14155
  call void @llvm.dbg.value(metadata i32 %31, metadata !14122, metadata !DIExpression()), !dbg !14128
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14156
  %33 = lshr i32 %32, 6, !dbg !14157
  %34 = and i32 %33, 511, !dbg !14157
  %35 = mul i32 %34, %28, !dbg !14158
  %36 = udiv i32 %35, %31, !dbg !14159
  call void @llvm.dbg.value(metadata i32 %36, metadata !14123, metadata !DIExpression()), !dbg !14128
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14160
  %38 = and i32 %37, 31, !dbg !14161
  %39 = add nuw nsw i32 %38, 1, !dbg !14162
  call void @llvm.dbg.value(metadata i32 %39, metadata !14122, metadata !DIExpression()), !dbg !14128
  %40 = udiv i32 %36, %39, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %40, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14164

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14165
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14168
  %44 = and i32 %43, 63, !dbg !14168
  %45 = udiv i32 16000000, %44, !dbg !14168
  call void @llvm.dbg.value(metadata i32 %45, metadata !14124, metadata !DIExpression()), !dbg !14128
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14169
  %47 = lshr i32 %46, 28, !dbg !14170
  %48 = and i32 %47, 7, !dbg !14170
  call void @llvm.dbg.value(metadata i32 %48, metadata !14122, metadata !DIExpression()), !dbg !14128
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14171
  %50 = lshr i32 %49, 6, !dbg !14172
  %51 = and i32 %50, 511, !dbg !14172
  %52 = mul i32 %51, %45, !dbg !14173
  %53 = udiv i32 %52, %48, !dbg !14174
  call void @llvm.dbg.value(metadata i32 %53, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14175

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14176

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14178
  call void @llvm.dbg.value(metadata i32 16000000, metadata !14123, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 16000000, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %58, metadata !14126, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !14128
  %59 = lshr i32 %58, 25, !dbg !14183
  %60 = and i32 %59, 3, !dbg !14183
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !14183

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14184
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14188
  %64 = and i32 %63, 63, !dbg !14188
  %65 = udiv i32 16000000, %64, !dbg !14188
  call void @llvm.dbg.value(metadata i32 %65, metadata !14124, metadata !DIExpression()), !dbg !14128
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14189
  %67 = lshr i32 %66, 6, !dbg !14190
  %68 = and i32 %67, 511, !dbg !14190
  %69 = mul i32 %68, %65, !dbg !14191
  call void @llvm.dbg.value(metadata i32 %69, metadata !14127, metadata !DIExpression()), !dbg !14128
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14192
  %71 = lshr i32 %70, 28, !dbg !14193
  %72 = and i32 %71, 7, !dbg !14193
  %73 = udiv i32 %69, %72, !dbg !14194
  call void @llvm.dbg.value(metadata i32 %73, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14195

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14199
  %77 = and i32 %76, 63, !dbg !14199
  %78 = udiv i32 16000000, %77, !dbg !14199
  call void @llvm.dbg.value(metadata i32 %78, metadata !14124, metadata !DIExpression()), !dbg !14128
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14200
  %80 = lshr i32 %79, 6, !dbg !14201
  %81 = and i32 %80, 511, !dbg !14201
  %82 = mul i32 %81, %78, !dbg !14202
  call void @llvm.dbg.value(metadata i32 %82, metadata !14127, metadata !DIExpression()), !dbg !14128
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14203
  %84 = lshr i32 %83, 28, !dbg !14204
  %85 = and i32 %84, 7, !dbg !14204
  %86 = udiv i32 %82, %85, !dbg !14205
  call void @llvm.dbg.value(metadata i32 %86, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14206

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14207
  call void @llvm.dbg.value(metadata i32 16000000, metadata !14123, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 16000000, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !14210
  call void @llvm.dbg.value(metadata i32 %91, metadata !14126, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !14128
  %92 = lshr i32 %91, 27, !dbg !14212
  %93 = and i32 %92, 3, !dbg !14212
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !14212

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14217
  %97 = and i32 %96, 63, !dbg !14217
  %98 = udiv i32 16000000, %97, !dbg !14217
  call void @llvm.dbg.value(metadata i32 %98, metadata !14124, metadata !DIExpression()), !dbg !14128
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14218
  %100 = lshr i32 %99, 6, !dbg !14219
  %101 = and i32 %100, 511, !dbg !14219
  %102 = mul i32 %101, %98, !dbg !14220
  call void @llvm.dbg.value(metadata i32 %102, metadata !14127, metadata !DIExpression()), !dbg !14128
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14221
  %104 = lshr i32 %103, 28, !dbg !14222
  %105 = and i32 %104, 7, !dbg !14222
  %106 = udiv i32 %102, %105, !dbg !14223
  call void @llvm.dbg.value(metadata i32 %106, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14224

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14225
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14128
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14228
  %110 = and i32 %109, 63, !dbg !14228
  %111 = udiv i32 16000000, %110, !dbg !14228
  call void @llvm.dbg.value(metadata i32 %111, metadata !14124, metadata !DIExpression()), !dbg !14128
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14229
  %113 = lshr i32 %112, 6, !dbg !14230
  %114 = and i32 %113, 511, !dbg !14230
  %115 = mul i32 %114, %111, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %115, metadata !14127, metadata !DIExpression()), !dbg !14128
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14232
  %117 = lshr i32 %116, 28, !dbg !14233
  %118 = and i32 %117, 7, !dbg !14233
  %119 = udiv i32 %115, %118, !dbg !14234
  call void @llvm.dbg.value(metadata i32 %119, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123, !dbg !14235

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14236
  call void @llvm.dbg.value(metadata i32 16000000, metadata !14123, metadata !DIExpression()), !dbg !14128
  call void @llvm.dbg.value(metadata i32 16000000, metadata !14123, metadata !DIExpression()), !dbg !14128
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !14128
  call void @llvm.dbg.value(metadata i32 %124, metadata !14123, metadata !DIExpression()), !dbg !14128
  ret i32 %124, !dbg !14239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #16 !dbg !14240 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !14244, metadata !DIExpression()), !dbg !14245
  %2 = icmp eq i8 %0, 1, !dbg !14246
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14248
  %4 = and i32 %3, -9, !dbg !14249
  %5 = select i1 %2, i32 8, i32 0, !dbg !14249
  %6 = or i32 %4, %5, !dbg !14249
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14248
  ret void, !dbg !14250
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14251 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !14256, metadata !DIExpression()), !dbg !14258
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !14259
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !14260
  call void @llvm.dbg.value(metadata i32 %2, metadata !14257, metadata !DIExpression()), !dbg !14258
  br label %3, !dbg !14261

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14262
  %5 = and i32 %4, 134217728, !dbg !14262
  %6 = icmp eq i32 %5, 0, !dbg !14262
  br i1 %6, label %11, label %7, !dbg !14261

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !14263
  %9 = sub i32 %8, %2, !dbg !14266
  %10 = icmp ugt i32 %9, 2, !dbg !14267
  br i1 %10, label %41, label %3, !dbg !14268, !llvm.loop !14269

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !14271
  %13 = load i32, i32* %12, align 4, !dbg !14271
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !14271
  %15 = load i32, i32* %14, align 4, !dbg !14271
  %16 = shl i32 %15, 6, !dbg !14271
  %17 = or i32 %16, %13, !dbg !14271
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !14271
  %19 = load i32, i32* %18, align 4, !dbg !14271
  %20 = shl i32 %19, 15, !dbg !14271
  %21 = add i32 %20, -65536, !dbg !14271
  %22 = and i32 %21, -65536, !dbg !14271
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !14271
  %24 = load i32, i32* %23, align 4, !dbg !14271
  %25 = shl i32 %24, 24, !dbg !14271
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !14271
  %27 = load i32, i32* %26, align 4, !dbg !14271
  %28 = shl i32 %27, 28, !dbg !14271
  %29 = or i32 %17, %25, !dbg !14271
  %30 = or i32 %29, %22, !dbg !14271
  %31 = or i32 %30, %28, !dbg !14271
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14271
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !14272
  %32 = tail call i32 @HAL_GetTick() #26, !dbg !14273
  call void @llvm.dbg.value(metadata i32 %32, metadata !14257, metadata !DIExpression()), !dbg !14258
  br label %33, !dbg !14274

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14275
  %35 = and i32 %34, 134217728, !dbg !14276
  %36 = icmp eq i32 %35, 0, !dbg !14276
  br i1 %36, label %37, label %41, !dbg !14274

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #26, !dbg !14277
  %39 = sub i32 %38, %32, !dbg !14280
  %40 = icmp ugt i32 %39, 2, !dbg !14281
  br i1 %40, label %41, label %33, !dbg !14282, !llvm.loop !14283

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !14258
  ret i32 %42, !dbg !14285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !14286 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !14291
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !14292
  call void @llvm.dbg.value(metadata i32 %1, metadata !14290, metadata !DIExpression()), !dbg !14293
  br label %2, !dbg !14294

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14295
  %4 = and i32 %3, 134217728, !dbg !14295
  %5 = icmp eq i32 %4, 0, !dbg !14296
  br i1 %5, label %10, label %6, !dbg !14294

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !14297
  %8 = sub i32 %7, %1, !dbg !14300
  %9 = icmp ugt i32 %8, 2, !dbg !14301
  br i1 %9, label %10, label %2, !dbg !14302, !llvm.loop !14303

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !14293
  ret i32 %11, !dbg !14305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14306 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !14311, metadata !DIExpression()), !dbg !14313
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14314
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !14315
  call void @llvm.dbg.value(metadata i32 %2, metadata !14312, metadata !DIExpression()), !dbg !14313
  br label %3, !dbg !14316

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14317
  %5 = and i32 %4, 536870912, !dbg !14317
  %6 = icmp eq i32 %5, 0, !dbg !14317
  br i1 %6, label %11, label %7, !dbg !14316

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !14318
  %9 = sub i32 %8, %2, !dbg !14321
  %10 = icmp ugt i32 %9, 2, !dbg !14322
  br i1 %10, label %37, label %3, !dbg !14323, !llvm.loop !14324

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !14326
  %13 = load i32, i32* %12, align 4, !dbg !14326
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !14326
  %15 = load i32, i32* %14, align 4, !dbg !14326
  %16 = shl i32 %15, 6, !dbg !14326
  %17 = or i32 %16, %13, !dbg !14326
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !14326
  %19 = load i32, i32* %18, align 4, !dbg !14326
  %20 = shl i32 %19, 15, !dbg !14326
  %21 = add i32 %20, -65536, !dbg !14326
  %22 = and i32 %21, -65536, !dbg !14326
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !14326
  %24 = load i32, i32* %23, align 4, !dbg !14326
  %25 = shl i32 %24, 24, !dbg !14326
  %26 = or i32 %17, %25, !dbg !14326
  %27 = or i32 %26, %22, !dbg !14326
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14326
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14327
  %28 = tail call i32 @HAL_GetTick() #26, !dbg !14328
  call void @llvm.dbg.value(metadata i32 %28, metadata !14312, metadata !DIExpression()), !dbg !14313
  br label %29, !dbg !14329

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14330
  %31 = and i32 %30, 536870912, !dbg !14331
  %32 = icmp eq i32 %31, 0, !dbg !14331
  br i1 %32, label %33, label %37, !dbg !14329

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #26, !dbg !14332
  %35 = sub i32 %34, %28, !dbg !14335
  %36 = icmp ugt i32 %35, 2, !dbg !14336
  br i1 %36, label %37, label %29, !dbg !14337, !llvm.loop !14338

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !14313
  ret i32 %38, !dbg !14340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !14341 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !14344
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %1, metadata !14343, metadata !DIExpression()), !dbg !14346
  br label %2, !dbg !14347

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14348
  %4 = and i32 %3, 536870912, !dbg !14348
  %5 = icmp eq i32 %4, 0, !dbg !14348
  br i1 %5, label %10, label %6, !dbg !14347

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !14349
  %8 = sub i32 %7, %1, !dbg !14352
  %9 = icmp ugt i32 %8, 2, !dbg !14353
  br i1 %9, label %10, label %2, !dbg !14354, !llvm.loop !14355

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !14346
  ret i32 %11, !dbg !14357
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !14358 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14360, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 0, metadata !14361, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 0, metadata !14362, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 0, metadata !14363, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 0, metadata !14364, metadata !DIExpression()), !dbg !14365
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14366
  %2 = lshr i32 %1, 2, !dbg !14367
  %3 = and i32 %2, 3, !dbg !14367
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !14367

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14368
  %6 = and i32 %5, 63, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %6, metadata !14360, metadata !DIExpression()), !dbg !14365
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14372
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14374
  %9 = lshr i32 %8, 6, !dbg !14374
  %10 = and i32 %9, 511, !dbg !14374
  %11 = zext i32 %10 to i64, !dbg !14374
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !14374
  %13 = zext i32 %6 to i64, !dbg !14374
  %14 = udiv i64 %12, %13, !dbg !14374
  %15 = trunc i64 %14 to i32, !dbg !14374
  call void @llvm.dbg.value(metadata i32 %15, metadata !14361, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 %15, metadata !14361, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 %15, metadata !14361, metadata !DIExpression()), !dbg !14365
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14375
  %17 = lshr i32 %16, 15, !dbg !14376
  %18 = and i32 %17, 6, !dbg !14376
  %19 = add nuw nsw i32 %18, 2, !dbg !14376
  call void @llvm.dbg.value(metadata i32 %19, metadata !14362, metadata !DIExpression()), !dbg !14365
  %20 = udiv i32 %15, %19, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %20, metadata !14364, metadata !DIExpression()), !dbg !14365
  br label %38, !dbg !14378

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14379
  %23 = and i32 %22, 63, !dbg !14381
  call void @llvm.dbg.value(metadata i32 %23, metadata !14360, metadata !DIExpression()), !dbg !14365
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14382
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14384
  %26 = lshr i32 %25, 6, !dbg !14384
  %27 = and i32 %26, 511, !dbg !14384
  %28 = zext i32 %27 to i64, !dbg !14384
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !14384
  %30 = zext i32 %23 to i64, !dbg !14384
  %31 = udiv i64 %29, %30, !dbg !14384
  %32 = trunc i64 %31 to i32, !dbg !14384
  call void @llvm.dbg.value(metadata i32 %32, metadata !14361, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 %32, metadata !14361, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i32 %32, metadata !14361, metadata !DIExpression()), !dbg !14365
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14385
  %34 = lshr i32 %33, 28, !dbg !14386
  %35 = and i32 %34, 7, !dbg !14386
  call void @llvm.dbg.value(metadata i32 %35, metadata !14363, metadata !DIExpression()), !dbg !14365
  %36 = udiv i32 %32, %35, !dbg !14387
  call void @llvm.dbg.value(metadata i32 %36, metadata !14364, metadata !DIExpression()), !dbg !14365
  br label %38, !dbg !14388

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !14389
  call void @llvm.dbg.value(metadata i32 %39, metadata !14364, metadata !DIExpression()), !dbg !14365
  ret i32 %39, !dbg !14390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !14391 {
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !14394
  call void @llvm.dbg.value(metadata i32 %1, metadata !14393, metadata !DIExpression()), !dbg !14395
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14396
  %3 = or i32 %2, 1, !dbg !14396
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14396
  br label %4, !dbg !14397

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14398
  %6 = and i32 %5, 2, !dbg !14398
  %7 = icmp eq i32 %6, 0, !dbg !14399
  br i1 %7, label %8, label %12, !dbg !14397

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #26, !dbg !14400
  %10 = sub i32 %9, %1, !dbg !14403
  %11 = icmp ugt i32 %10, 2, !dbg !14404
  br i1 %11, label %89, label %4, !dbg !14405, !llvm.loop !14406

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14408
  %14 = or i32 %13, 128, !dbg !14408
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14408
  %15 = tail call i32 @HAL_GetTick() #26, !dbg !14409
  call void @llvm.dbg.value(metadata i32 %15, metadata !14393, metadata !DIExpression()), !dbg !14395
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14410
  br label %16, !dbg !14411

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14412
  %18 = and i32 %17, 12, !dbg !14412
  %19 = icmp eq i32 %18, 0, !dbg !14413
  %20 = tail call i32 @HAL_GetTick() #26, !dbg !14395
  br i1 %19, label %24, label %21, !dbg !14411

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !14414
  %23 = icmp ugt i32 %22, 5000, !dbg !14417
  br i1 %23, label %89, label %16, !dbg !14418, !llvm.loop !14419

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !14393, metadata !DIExpression()), !dbg !14395
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14421
  %26 = and i32 %25, -851969, !dbg !14421
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14421
  br label %27, !dbg !14422

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14423
  %29 = and i32 %28, 131072, !dbg !14423
  %30 = icmp eq i32 %29, 0, !dbg !14424
  %31 = tail call i32 @HAL_GetTick() #26, !dbg !14395
  br i1 %30, label %35, label %32, !dbg !14422

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !14425
  %34 = icmp ugt i32 %33, 100, !dbg !14428
  br i1 %34, label %89, label %27, !dbg !14429, !llvm.loop !14430

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !14393, metadata !DIExpression()), !dbg !14395
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14432
  %37 = and i32 %36, -16777217, !dbg !14432
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14432
  br label %38, !dbg !14433

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14434
  %40 = and i32 %39, 33554432, !dbg !14434
  %41 = icmp eq i32 %40, 0, !dbg !14435
  %42 = tail call i32 @HAL_GetTick() #26, !dbg !14395
  br i1 %41, label %46, label %43, !dbg !14433

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !14436
  %45 = icmp ugt i32 %44, 2, !dbg !14439
  br i1 %45, label %89, label %38, !dbg !14440, !llvm.loop !14441

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !14393, metadata !DIExpression()), !dbg !14395
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14443
  %48 = and i32 %47, -67108865, !dbg !14443
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14443
  br label %49, !dbg !14444

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14445
  %51 = and i32 %50, 134217728, !dbg !14445
  %52 = icmp eq i32 %51, 0, !dbg !14446
  %53 = tail call i32 @HAL_GetTick() #26, !dbg !14395
  br i1 %52, label %57, label %54, !dbg !14444

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !14447
  %56 = icmp ugt i32 %55, 2, !dbg !14450
  br i1 %56, label %89, label %49, !dbg !14451, !llvm.loop !14452

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !14393, metadata !DIExpression()), !dbg !14395
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14454
  %59 = and i32 %58, -268435457, !dbg !14454
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14454
  br label %60, !dbg !14455

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14456
  %62 = and i32 %61, 536870912, !dbg !14456
  %63 = icmp eq i32 %62, 0, !dbg !14457
  br i1 %63, label %68, label %64, !dbg !14455

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #26, !dbg !14458
  %66 = sub i32 %65, %53, !dbg !14461
  %67 = icmp ugt i32 %66, 2, !dbg !14462
  br i1 %67, label %89, label %60, !dbg !14463, !llvm.loop !14464

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14466
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !14467
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !14468
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14469
  %70 = and i32 %69, -7937, !dbg !14469
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14469
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14470
  %72 = and i32 %71, -8193, !dbg !14470
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14470
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14471
  %74 = and i32 %73, -16385, !dbg !14471
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14471
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14472
  %76 = or i32 %75, 10420224, !dbg !14472
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14472
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14473
  %78 = or i32 %77, 2097152, !dbg !14473
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14473
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14474
  %80 = or i32 %79, 4194304, !dbg !14474
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !14474
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14475
  %82 = and i32 %81, -2, !dbg !14475
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14475
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14476
  %84 = or i32 %83, 16777216, !dbg !14476
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14476
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !14477
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !14478
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #26, !dbg !14480
  %87 = icmp ne i32 %86, 0, !dbg !14481
  %88 = zext i1 %87 to i32, !dbg !14482
  br label %89, !dbg !14482

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !14395
  ret i32 %90, !dbg !14483
}

; Function Attrs: optsize
declare !dbg !14484 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !14487 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14513, metadata !DIExpression()), !dbg !14524
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !14525
  br i1 %3, label %337, label %4, !dbg !14527

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14528
  %6 = load i32, i32* %5, align 4, !dbg !14528
  %7 = and i32 %6, 1, !dbg !14530
  %8 = icmp eq i32 %7, 0, !dbg !14531
  br i1 %8, label %74, label %9, !dbg !14532

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14533
  %11 = and i32 %10, 12, !dbg !14533
  %12 = icmp eq i32 %11, 4, !dbg !14536
  br i1 %12, label %29, label %13, !dbg !14537

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14538
  %15 = and i32 %14, 12, !dbg !14538
  %16 = icmp eq i32 %15, 8, !dbg !14539
  br i1 %16, label %17, label %21, !dbg !14540

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14541
  %19 = and i32 %18, 4194304, !dbg !14542
  %20 = icmp eq i32 %19, 0, !dbg !14543
  br i1 %20, label %21, label %29, !dbg !14544

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14545
  %23 = and i32 %22, 12, !dbg !14545
  %24 = icmp eq i32 %23, 12, !dbg !14546
  br i1 %24, label %25, label %37, !dbg !14547

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14548
  %27 = and i32 %26, 4194304, !dbg !14549
  %28 = icmp eq i32 %27, 0, !dbg !14550
  br i1 %28, label %37, label %29, !dbg !14551

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14552
  %31 = and i32 %30, 131072, !dbg !14552
  %32 = icmp eq i32 %31, 0, !dbg !14552
  br i1 %32, label %74, label %33, !dbg !14555

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14556
  %35 = load i32, i32* %34, align 4, !dbg !14556
  %36 = icmp eq i32 %35, 0, !dbg !14557
  br i1 %36, label %337, label %74, !dbg !14558

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14559
  %39 = load i32, i32* %38, align 4, !dbg !14559
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !14563

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14564
  %42 = or i32 %41, 65536, !dbg !14564
  br label %53, !dbg !14564

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14566
  %45 = or i32 %44, 262144, !dbg !14566
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14566
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14566
  %47 = or i32 %46, 65536, !dbg !14566
  br label %53, !dbg !14566

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14569
  %50 = and i32 %49, -65537, !dbg !14569
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14569
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14569
  %52 = and i32 %51, -262145, !dbg !14569
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14571
  %55 = load i32, i32* %38, align 4, !dbg !14572
  %56 = icmp eq i32 %55, 0, !dbg !14574
  %57 = tail call i32 @HAL_GetTick() #26, !dbg !14575
  call void @llvm.dbg.value(metadata i32 %57, metadata !14514, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 %57, metadata !14514, metadata !DIExpression()), !dbg !14524
  br i1 %56, label %66, label %58, !dbg !14576

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14577
  %60 = and i32 %59, 131072, !dbg !14579
  %61 = icmp eq i32 %60, 0, !dbg !14579
  br i1 %61, label %62, label %74, !dbg !14580

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !14581
  %64 = sub i32 %63, %57, !dbg !14584
  %65 = icmp ugt i32 %64, 100, !dbg !14585
  br i1 %65, label %337, label %58, !dbg !14586, !llvm.loop !14587

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14589
  %68 = and i32 %67, 131072, !dbg !14589
  %69 = icmp eq i32 %68, 0, !dbg !14589
  br i1 %69, label %74, label %70, !dbg !14591

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #26, !dbg !14592
  %72 = sub i32 %71, %57, !dbg !14595
  %73 = icmp ugt i32 %72, 100, !dbg !14596
  br i1 %73, label %337, label %66, !dbg !14597, !llvm.loop !14598

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !14600
  %76 = and i32 %75, 2, !dbg !14602
  %77 = icmp eq i32 %76, 0, !dbg !14603
  br i1 %77, label %137, label %78, !dbg !14604

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14605
  %80 = and i32 %79, 12, !dbg !14605
  %81 = icmp eq i32 %80, 0, !dbg !14608
  br i1 %81, label %98, label %82, !dbg !14609

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14610
  %84 = and i32 %83, 12, !dbg !14610
  %85 = icmp eq i32 %84, 8, !dbg !14611
  br i1 %85, label %86, label %90, !dbg !14612

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14613
  %88 = and i32 %87, 4194304, !dbg !14614
  %89 = icmp eq i32 %88, 0, !dbg !14615
  br i1 %89, label %98, label %90, !dbg !14616

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14617
  %92 = and i32 %91, 12, !dbg !14617
  %93 = icmp eq i32 %92, 12, !dbg !14618
  br i1 %93, label %94, label %106, !dbg !14619

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14620
  %96 = and i32 %95, 4194304, !dbg !14621
  %97 = icmp eq i32 %96, 0, !dbg !14622
  br i1 %97, label %98, label %106, !dbg !14623

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14624
  %100 = and i32 %99, 2, !dbg !14624
  %101 = icmp eq i32 %100, 0, !dbg !14624
  br i1 %101, label %130, label %102, !dbg !14627

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14628
  %104 = load i32, i32* %103, align 4, !dbg !14628
  %105 = icmp eq i32 %104, 1, !dbg !14629
  br i1 %105, label %130, label %337, !dbg !14630

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14631
  %108 = load i32, i32* %107, align 4, !dbg !14631
  %109 = icmp eq i32 %108, 0, !dbg !14634
  br i1 %109, label %120, label %110, !dbg !14635

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !14636
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !14638
  call void @llvm.dbg.value(metadata i32 %111, metadata !14514, metadata !DIExpression()), !dbg !14524
  br label %112, !dbg !14639

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14640
  %114 = and i32 %113, 2, !dbg !14641
  %115 = icmp eq i32 %114, 0, !dbg !14641
  br i1 %115, label %116, label %130, !dbg !14639

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #26, !dbg !14642
  %118 = sub i32 %117, %111, !dbg !14645
  %119 = icmp ugt i32 %118, 2, !dbg !14646
  br i1 %119, label %337, label %112, !dbg !14647, !llvm.loop !14648

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !14650
  %121 = tail call i32 @HAL_GetTick() #26, !dbg !14652
  call void @llvm.dbg.value(metadata i32 %121, metadata !14514, metadata !DIExpression()), !dbg !14524
  br label %122, !dbg !14653

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14654
  %124 = and i32 %123, 2, !dbg !14654
  %125 = icmp eq i32 %124, 0, !dbg !14654
  br i1 %125, label %137, label %126, !dbg !14653

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #26, !dbg !14655
  %128 = sub i32 %127, %121, !dbg !14658
  %129 = icmp ugt i32 %128, 2, !dbg !14659
  br i1 %129, label %337, label %122, !dbg !14660, !llvm.loop !14661

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14663
  %132 = and i32 %131, -249, !dbg !14663
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14663
  %134 = load i32, i32* %133, align 4, !dbg !14663
  %135 = shl i32 %134, 3, !dbg !14663
  %136 = or i32 %135, %132, !dbg !14663
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14663
  br label %137, !dbg !14664

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !14664
  %139 = and i32 %138, 8, !dbg !14666
  %140 = icmp eq i32 %139, 0, !dbg !14667
  br i1 %140, label %165, label %141, !dbg !14668

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14669
  %143 = load i32, i32* %142, align 4, !dbg !14669
  %144 = icmp eq i32 %143, 0, !dbg !14672
  br i1 %144, label %155, label %145, !dbg !14673

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !14674
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !14676
  call void @llvm.dbg.value(metadata i32 %146, metadata !14514, metadata !DIExpression()), !dbg !14524
  br label %147, !dbg !14677

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14678
  %149 = and i32 %148, 2, !dbg !14679
  %150 = icmp eq i32 %149, 0, !dbg !14679
  br i1 %150, label %151, label %165, !dbg !14677

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #26, !dbg !14680
  %153 = sub i32 %152, %146, !dbg !14683
  %154 = icmp ugt i32 %153, 2, !dbg !14684
  br i1 %154, label %337, label %147, !dbg !14685, !llvm.loop !14686

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !14688
  %156 = tail call i32 @HAL_GetTick() #26, !dbg !14690
  call void @llvm.dbg.value(metadata i32 %156, metadata !14514, metadata !DIExpression()), !dbg !14524
  br label %157, !dbg !14691

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14692
  %159 = and i32 %158, 2, !dbg !14692
  %160 = icmp eq i32 %159, 0, !dbg !14692
  br i1 %160, label %165, label %161, !dbg !14691

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #26, !dbg !14693
  %163 = sub i32 %162, %156, !dbg !14696
  %164 = icmp ugt i32 %163, 2, !dbg !14697
  br i1 %164, label %337, label %157, !dbg !14698, !llvm.loop !14699

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !14701
  %167 = and i32 %166, 4, !dbg !14702
  %168 = icmp eq i32 %167, 0, !dbg !14703
  br i1 %168, label %237, label %169, !dbg !14704

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !14516, metadata !DIExpression()), !dbg !14705
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14706
  %171 = and i32 %170, 268435456, !dbg !14706
  %172 = icmp eq i32 %171, 0, !dbg !14706
  br i1 %172, label %173, label %180, !dbg !14707

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !14708
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !14708
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14520, metadata !DIExpression()), !dbg !14708
  store volatile i32 0, i32* %2, align 4, !dbg !14708
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14708
  %176 = or i32 %175, 268435456, !dbg !14708
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14708
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14708
  %178 = and i32 %177, 268435456, !dbg !14708
  store volatile i32 %178, i32* %2, align 4, !dbg !14708
  %179 = load volatile i32, i32* %2, align 4, !dbg !14708
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !14709
  call void @llvm.dbg.value(metadata i32 1, metadata !14516, metadata !DIExpression()), !dbg !14705
  br label %180, !dbg !14710

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !14516, metadata !DIExpression()), !dbg !14705
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14711
  %182 = and i32 %181, 256, !dbg !14711
  %183 = icmp eq i32 %182, 0, !dbg !14711
  br i1 %183, label %184, label %196, !dbg !14713

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14714
  %186 = or i32 %185, 256, !dbg !14714
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14714
  %187 = tail call i32 @HAL_GetTick() #26, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %187, metadata !14514, metadata !DIExpression()), !dbg !14524
  br label %188, !dbg !14717

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14718
  %190 = and i32 %189, 256, !dbg !14718
  %191 = icmp eq i32 %190, 0, !dbg !14718
  br i1 %191, label %192, label %196, !dbg !14717

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #26, !dbg !14719
  %194 = sub i32 %193, %187, !dbg !14722
  %195 = icmp ugt i32 %194, 2, !dbg !14723
  br i1 %195, label %337, label %188, !dbg !14724, !llvm.loop !14725

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14727
  %198 = load i32, i32* %197, align 4, !dbg !14727
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !14730

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14731
  %201 = or i32 %200, 1, !dbg !14731
  br label %212, !dbg !14731

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14733
  %204 = or i32 %203, 4, !dbg !14733
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14733
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14733
  %206 = or i32 %205, 1, !dbg !14733
  br label %212, !dbg !14733

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14736
  %209 = and i32 %208, -2, !dbg !14736
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14736
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14736
  %211 = and i32 %210, -5, !dbg !14736
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14738
  %214 = load i32, i32* %197, align 4, !dbg !14739
  %215 = icmp eq i32 %214, 0, !dbg !14741
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !14742
  call void @llvm.dbg.value(metadata i32 %216, metadata !14514, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 %216, metadata !14514, metadata !DIExpression()), !dbg !14524
  br i1 %215, label %225, label %217, !dbg !14743

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14744
  %219 = and i32 %218, 2, !dbg !14746
  %220 = icmp eq i32 %219, 0, !dbg !14746
  br i1 %220, label %221, label %233, !dbg !14747

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #26, !dbg !14748
  %223 = sub i32 %222, %216, !dbg !14751
  %224 = icmp ugt i32 %223, 5000, !dbg !14752
  br i1 %224, label %337, label %217, !dbg !14753, !llvm.loop !14754

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14756
  %227 = and i32 %226, 2, !dbg !14756
  %228 = icmp eq i32 %227, 0, !dbg !14756
  br i1 %228, label %233, label %229, !dbg !14758

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !14759
  %231 = sub i32 %230, %216, !dbg !14762
  %232 = icmp ugt i32 %231, 5000, !dbg !14763
  br i1 %232, label %337, label %225, !dbg !14764, !llvm.loop !14765

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !14767

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14768
  %236 = and i32 %235, -268435457, !dbg !14768
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !14768
  br label %237, !dbg !14771

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !14772
  %239 = load i32, i32* %238, align 4, !dbg !14772
  %240 = icmp eq i32 %239, 0, !dbg !14774
  br i1 %240, label %336, label %241, !dbg !14775

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14776
  %243 = and i32 %242, 12, !dbg !14776
  %244 = icmp eq i32 %243, 8, !dbg !14779
  br i1 %244, label %297, label %245, !dbg !14780

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !14781
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14784
  %247 = tail call i32 @HAL_GetTick() #26, !dbg !14784
  call void @llvm.dbg.value(metadata i32 %247, metadata !14514, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.value(metadata i32 %247, metadata !14514, metadata !DIExpression()), !dbg !14524
  br i1 %246, label %248, label %289, !dbg !14785

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14786
  %250 = and i32 %249, 33554432, !dbg !14786
  %251 = icmp eq i32 %250, 0, !dbg !14786
  br i1 %251, label %256, label %252, !dbg !14788

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #26, !dbg !14789
  %254 = sub i32 %253, %247, !dbg !14792
  %255 = icmp ugt i32 %254, 2, !dbg !14793
  br i1 %255, label %337, label %248, !dbg !14794, !llvm.loop !14795

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14797
  %258 = load i32, i32* %257, align 4, !dbg !14797
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14797
  %260 = load i32, i32* %259, align 4, !dbg !14797
  %261 = or i32 %260, %258, !dbg !14797
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14797
  %263 = load i32, i32* %262, align 4, !dbg !14797
  %264 = shl i32 %263, 6, !dbg !14797
  %265 = or i32 %261, %264, !dbg !14797
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14797
  %267 = load i32, i32* %266, align 4, !dbg !14797
  %268 = shl i32 %267, 15, !dbg !14797
  %269 = add i32 %268, -65536, !dbg !14797
  %270 = and i32 %269, -65536, !dbg !14797
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14797
  %272 = load i32, i32* %271, align 4, !dbg !14797
  %273 = shl i32 %272, 24, !dbg !14797
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14797
  %275 = load i32, i32* %274, align 4, !dbg !14797
  %276 = shl i32 %275, 28, !dbg !14797
  %277 = or i32 %265, %273, !dbg !14797
  %278 = or i32 %277, %270, !dbg !14797
  %279 = or i32 %278, %276, !dbg !14797
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14797
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !14798
  %280 = tail call i32 @HAL_GetTick() #26, !dbg !14799
  call void @llvm.dbg.value(metadata i32 %280, metadata !14514, metadata !DIExpression()), !dbg !14524
  br label %281, !dbg !14800

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14801
  %283 = and i32 %282, 33554432, !dbg !14802
  %284 = icmp eq i32 %283, 0, !dbg !14802
  br i1 %284, label %285, label %336, !dbg !14800

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #26, !dbg !14803
  %287 = sub i32 %286, %280, !dbg !14806
  %288 = icmp ugt i32 %287, 2, !dbg !14807
  br i1 %288, label %337, label %281, !dbg !14808, !llvm.loop !14809

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14811
  %291 = and i32 %290, 33554432, !dbg !14811
  %292 = icmp eq i32 %291, 0, !dbg !14811
  br i1 %292, label %336, label %293, !dbg !14813

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #26, !dbg !14814
  %295 = sub i32 %294, %247, !dbg !14817
  %296 = icmp ugt i32 %295, 2, !dbg !14818
  br i1 %296, label %337, label %289, !dbg !14819, !llvm.loop !14820

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !14822
  br i1 %298, label %337, label %299, !dbg !14825

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14826
  call void @llvm.dbg.value(metadata i32 %300, metadata !14515, metadata !DIExpression()), !dbg !14524
  %301 = and i32 %300, 4194304, !dbg !14828
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14830
  %303 = load i32, i32* %302, align 4, !dbg !14830
  %304 = icmp eq i32 %301, %303, !dbg !14831
  br i1 %304, label %305, label %337, !dbg !14832

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !14833
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14834
  %308 = load i32, i32* %307, align 4, !dbg !14834
  %309 = icmp eq i32 %306, %308, !dbg !14835
  br i1 %309, label %310, label %337, !dbg !14836

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !14837
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14838
  %313 = load i32, i32* %312, align 4, !dbg !14838
  %314 = shl i32 %313, 6, !dbg !14839
  %315 = icmp eq i32 %311, %314, !dbg !14840
  br i1 %315, label %316, label %337, !dbg !14841

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !14842
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14843
  %319 = load i32, i32* %318, align 4, !dbg !14843
  %320 = shl i32 %319, 15, !dbg !14844
  %321 = add i32 %320, -65536, !dbg !14844
  %322 = and i32 %321, -65536, !dbg !14844
  %323 = icmp eq i32 %317, %322, !dbg !14845
  br i1 %323, label %324, label %337, !dbg !14846

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !14847
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14848
  %327 = load i32, i32* %326, align 4, !dbg !14848
  %328 = shl i32 %327, 24, !dbg !14849
  %329 = icmp eq i32 %325, %328, !dbg !14850
  br i1 %329, label %330, label %337, !dbg !14851

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !14852
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14853
  %333 = load i32, i32* %332, align 4, !dbg !14853
  %334 = shl i32 %333, 28, !dbg !14854
  %335 = icmp eq i32 %331, %334, !dbg !14855
  br i1 %335, label %336, label %337, !dbg !14856

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !14857

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !14524
  ret i32 %338, !dbg !14858
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #17 !dbg !14859 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !14863, metadata !DIExpression()), !dbg !14864
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !14865
  store i32 15, i32* %2, align 4, !dbg !14866
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14867
  %4 = and i32 %3, 262144, !dbg !14869
  %5 = icmp eq i32 %4, 0, !dbg !14870
  br i1 %5, label %8, label %6, !dbg !14871

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14872
  store i32 327680, i32* %7, align 4, !dbg !14874
  br label %15, !dbg !14875

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14876
  %10 = and i32 %9, 65536, !dbg !14878
  %11 = icmp eq i32 %10, 0, !dbg !14879
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !14880
  br i1 %11, label %14, label %13, !dbg !14881

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !14882
  br label %15, !dbg !14884

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !14885
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14887
  %17 = and i32 %16, 1, !dbg !14889
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !14890
  store i32 %17, i32* %18, align 4, !dbg !14892
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14893
  %20 = lshr i32 %19, 3, !dbg !14894
  %21 = and i32 %20, 31, !dbg !14894
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !14895
  store i32 %21, i32* %22, align 4, !dbg !14896
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14897
  %24 = and i32 %23, 4, !dbg !14899
  %25 = icmp eq i32 %24, 0, !dbg !14900
  br i1 %25, label %28, label %26, !dbg !14901

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14902
  store i32 5, i32* %27, align 4, !dbg !14904
  br label %35, !dbg !14905

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !14906
  %30 = and i32 %29, 1, !dbg !14908
  %31 = icmp eq i32 %30, 0, !dbg !14909
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !14910
  br i1 %31, label %34, label %33, !dbg !14911

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !14912
  br label %35, !dbg !14914

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !14915
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !14917
  %37 = and i32 %36, 1, !dbg !14919
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !14920
  store i32 %37, i32* %38, align 4, !dbg !14922
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14923
  %40 = and i32 %39, 16777216, !dbg !14925
  %41 = icmp eq i32 %40, 0, !dbg !14926
  %42 = select i1 %41, i32 1, i32 2, !dbg !14927
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !14928
  store i32 %42, i32* %43, align 4, !dbg !14930
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14931
  %45 = and i32 %44, 4194304, !dbg !14932
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !14933
  store i32 %45, i32* %46, align 4, !dbg !14934
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14935
  %48 = and i32 %47, 63, !dbg !14936
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !14937
  store i32 %48, i32* %49, align 4, !dbg !14938
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14939
  %51 = lshr i32 %50, 6, !dbg !14940
  %52 = and i32 %51, 511, !dbg !14940
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !14941
  store i32 %52, i32* %53, align 4, !dbg !14942
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14943
  %55 = shl i32 %54, 1, !dbg !14944
  %56 = and i32 %55, 393216, !dbg !14944
  %57 = add nuw nsw i32 %56, 131072, !dbg !14944
  %58 = lshr exact i32 %57, 16, !dbg !14945
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !14946
  store i32 %58, i32* %59, align 4, !dbg !14947
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14948
  %61 = lshr i32 %60, 24, !dbg !14949
  %62 = and i32 %61, 15, !dbg !14949
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !14950
  store i32 %62, i32* %63, align 4, !dbg !14951
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14952
  %65 = lshr i32 %64, 28, !dbg !14953
  %66 = and i32 %65, 7, !dbg !14953
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !14954
  store i32 %66, i32* %67, align 4, !dbg !14955
  ret void, !dbg !14956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !14957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14960, metadata !DIExpression()), !dbg !14961
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !14962
  ret void, !dbg !14963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !14964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14967, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata i32 1000, metadata !14968, metadata !DIExpression()), !dbg !14969
  %2 = udiv i32 %0, 1000, !dbg !14970
  %3 = add nsw i32 %2, -1, !dbg !14971
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14972
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14973
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14974
  ret void, !dbg !14975
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #20 !dbg !14976 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14978, metadata !DIExpression()), !dbg !14980
  %3 = bitcast i32* %2 to i8*, !dbg !14981
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14981
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14979, metadata !DIExpression()), !dbg !14982
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14983
  store volatile i32 %4, i32* %2, align 4, !dbg !14982
  %5 = load volatile i32, i32* %2, align 4, !dbg !14984
  %6 = icmp eq i32 %0, -1, !dbg !14985
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14978, metadata !DIExpression()), !dbg !14980
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14980
  call void @llvm.dbg.value(metadata i32 %8, metadata !14978, metadata !DIExpression()), !dbg !14980
  br label %9, !dbg !14987

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14978, metadata !DIExpression()), !dbg !14980
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14978, metadata !DIExpression()), !dbg !14980
  %12 = shl i32 %11, 15, !dbg !14980
  %13 = ashr i32 %12, 31, !dbg !14980
  %14 = add i32 %13, %10, !dbg !14980
  call void @llvm.dbg.value(metadata i32 %14, metadata !14978, metadata !DIExpression()), !dbg !14980
  %15 = icmp eq i32 %14, 0, !dbg !14987
  br i1 %15, label %16, label %9, !dbg !14987

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14991
  ret void, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14994, metadata !DIExpression()), !dbg !14995
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14996
  ret void, !dbg !14997
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !14998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15003, metadata !DIExpression()), !dbg !15008
  call void @llvm.dbg.value(metadata i32 0, metadata !15006, metadata !DIExpression()), !dbg !15008
  call void @llvm.dbg.value(metadata i32 0, metadata !15007, metadata !DIExpression()), !dbg !15008
  %2 = icmp eq i32 %0, 0, !dbg !15009
  br i1 %2, label %72, label %3, !dbg !15011

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !15012
  %5 = icmp eq i32 %4, 49152, !dbg !15015
  br i1 %5, label %6, label %21, !dbg !15016

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !15017
  %8 = select i1 %7, i32 0, i32 5, !dbg !15020
  call void @llvm.dbg.value(metadata i32 %8, metadata !15006, metadata !DIExpression()), !dbg !15008
  %9 = add i32 %0, -120000001, !dbg !15021
  %10 = icmp ult i32 %9, 30000000, !dbg !15021
  %11 = select i1 %10, i32 4, i32 %8, !dbg !15021
  call void @llvm.dbg.value(metadata i32 %11, metadata !15006, metadata !DIExpression()), !dbg !15008
  %12 = icmp ult i32 %9, -30000000, !dbg !15023
  %13 = select i1 %12, i32 %11, i32 3, !dbg !15023
  call void @llvm.dbg.value(metadata i32 %13, metadata !15006, metadata !DIExpression()), !dbg !15008
  %14 = icmp ugt i32 %0, 60000000, !dbg !15025
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !15027
  br i1 %16, label %21, label %17, !dbg !15027

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !15028
  %19 = and i1 %18, %15, !dbg !15031
  %20 = select i1 %19, i32 1, i32 %13, !dbg !15031
  br label %21, !dbg !15031

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !15008
  call void @llvm.dbg.value(metadata i32 %22, metadata !15006, metadata !DIExpression()), !dbg !15008
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !15032
  %24 = icmp eq i32 %23, 32768, !dbg !15034
  br i1 %24, label %25, label %45, !dbg !15035

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !15036
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !15039
  %29 = select i1 %28, i32 5, i32 %22, !dbg !15039
  call void @llvm.dbg.value(metadata i32 %29, metadata !15006, metadata !DIExpression()), !dbg !15008
  %30 = icmp ugt i32 %0, 12000000, !dbg !15040
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !15042
  %33 = select i1 %32, i32 4, i32 %29, !dbg !15042
  call void @llvm.dbg.value(metadata i32 %33, metadata !15006, metadata !DIExpression()), !dbg !15008
  %34 = icmp ugt i32 %0, 90000000, !dbg !15043
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !15045
  %37 = select i1 %36, i32 3, i32 %33, !dbg !15045
  call void @llvm.dbg.value(metadata i32 %37, metadata !15006, metadata !DIExpression()), !dbg !15008
  %38 = icmp ugt i32 %0, 60000000, !dbg !15046
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !15048
  br i1 %40, label %45, label %41, !dbg !15048

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !15049
  %43 = select i1 %42, i1 %39, i1 false, !dbg !15052
  %44 = select i1 %43, i32 1, i32 %37, !dbg !15052
  br label %45, !dbg !15052

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !15053
  call void @llvm.dbg.value(metadata i32 %46, metadata !15006, metadata !DIExpression()), !dbg !15008
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !15054
  %48 = icmp eq i32 %47, 16384, !dbg !15056
  br i1 %48, label %49, label %61, !dbg !15057

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !15058
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !15061
  %53 = select i1 %52, i32 3, i32 %46, !dbg !15061
  call void @llvm.dbg.value(metadata i32 %53, metadata !15006, metadata !DIExpression()), !dbg !15008
  %54 = icmp ugt i32 %0, 60000000, !dbg !15062
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !15064
  br i1 %56, label %61, label %57, !dbg !15064

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !15065
  %59 = select i1 %58, i1 %55, i1 false, !dbg !15068
  %60 = select i1 %59, i32 1, i32 %53, !dbg !15068
  br label %61, !dbg !15068

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !15053
  call void @llvm.dbg.value(metadata i32 %62, metadata !15006, metadata !DIExpression()), !dbg !15008
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #27, !dbg !15069
  call void @llvm.dbg.value(metadata i32 2, metadata !15004, metadata !DIExpression()), !dbg !15008
  br label %63, !dbg !15070

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !15053
  call void @llvm.dbg.value(metadata i32 %64, metadata !15004, metadata !DIExpression()), !dbg !15008
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !15071
  call void @llvm.dbg.value(metadata i32 %65, metadata !15005, metadata !DIExpression()), !dbg !15008
  %66 = add nsw i32 %64, -1, !dbg !15073
  call void @llvm.dbg.value(metadata i32 %66, metadata !15004, metadata !DIExpression()), !dbg !15008
  %67 = icmp ne i32 %65, %62, !dbg !15074
  %68 = icmp ne i32 %66, 0, !dbg !15075
  %69 = select i1 %67, i1 %68, i1 false, !dbg !15075
  br i1 %69, label %63, label %70, !dbg !15076, !llvm.loop !15077

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !15079
  call void @llvm.dbg.value(metadata i32 %73, metadata !15007, metadata !DIExpression()), !dbg !15008
  ret i32 %73, !dbg !15080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !15081 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !15083
  %2 = and i32 %1, 49152, !dbg !15083
  ret i32 %2, !dbg !15084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !15085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15087, metadata !DIExpression()), !dbg !15088
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !15089
  %3 = and i32 %2, -16, !dbg !15089
  %4 = or i32 %3, %0, !dbg !15089
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !15089
  ret void, !dbg !15090
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !15091 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !15092
  %2 = and i32 %1, 15, !dbg !15092
  ret i32 %2, !dbg !15093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !15094 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !15112, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15113, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i32 0, metadata !15114, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i32 0, metadata !15115, metadata !DIExpression()), !dbg !15116
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !15117
  %4 = icmp eq i32 %3, 0, !dbg !15119
  br i1 %4, label %5, label %21, !dbg !15120

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %6, metadata !15115, metadata !DIExpression()), !dbg !15116
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.240() #27, !dbg !15123
  %8 = icmp eq i32 %7, 1, !dbg !15125
  br i1 %8, label %13, label %9, !dbg !15126

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.241() #27, !dbg !15127
  br label %10, !dbg !15129

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.240() #27, !dbg !15130
  %12 = icmp eq i32 %11, 1, !dbg !15131
  br i1 %12, label %13, label %10, !dbg !15129, !llvm.loop !15132

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !15134
  %15 = load i32, i32* %14, align 4, !dbg !15134
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !15135
  %17 = load i32, i32* %16, align 4, !dbg !15135
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !15136
  %19 = load i32, i32* %18, align 4, !dbg !15136
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.242(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !15137
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !15138
  call void @llvm.dbg.value(metadata i32 %20, metadata !15114, metadata !DIExpression()), !dbg !15116
  br label %21, !dbg !15139

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !15140
  call void @llvm.dbg.value(metadata i32 %22, metadata !15114, metadata !DIExpression()), !dbg !15116
  ret i32 %22, !dbg !15141
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !15142 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15146, metadata !DIExpression()), !dbg !15147
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.244() #27, !dbg !15148
  %2 = icmp ne i32 %1, 0, !dbg !15150
  call void @llvm.dbg.value(metadata i1 %2, metadata !15146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15147
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #27, !dbg !15151
  %4 = icmp ne i32 %3, 0, !dbg !15153
  call void @llvm.dbg.value(metadata i1 undef, metadata !15146, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15147
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !15154
  %6 = icmp ne i32 %5, 0, !dbg !15156
  %7 = select i1 %6, i1 true, i1 %4, !dbg !15157
  %8 = select i1 %7, i1 true, i1 %2, !dbg !15157
  %9 = zext i1 %8 to i32, !dbg !15157
  call void @llvm.dbg.value(metadata i32 %9, metadata !15146, metadata !DIExpression()), !dbg !15147
  ret i32 %9, !dbg !15158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !15159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15163, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15164, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 0, metadata !15165, metadata !DIExpression()), !dbg !15166
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15167
  %4 = load i32, i32* %3, align 4, !dbg !15167
  %5 = and i32 %4, 63, !dbg !15168
  %6 = udiv i32 %0, %5, !dbg !15169
  call void @llvm.dbg.value(metadata i32 %6, metadata !15165, metadata !DIExpression()), !dbg !15166
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15170
  %8 = load i32, i32* %7, align 4, !dbg !15170
  %9 = and i32 %8, 511, !dbg !15171
  %10 = mul i32 %9, %6, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %10, metadata !15165, metadata !DIExpression()), !dbg !15166
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15173
  %12 = load i32, i32* %11, align 4, !dbg !15173
  %13 = lshr i32 %12, 15, !dbg !15174
  %14 = and i32 %13, 131070, !dbg !15174
  %15 = add nuw nsw i32 %14, 2, !dbg !15174
  %16 = udiv i32 %10, %15, !dbg !15175
  call void @llvm.dbg.value(metadata i32 %16, metadata !15165, metadata !DIExpression()), !dbg !15166
  ret i32 %16, !dbg !15176
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.240() unnamed_addr #17 !dbg !15177 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15178
  %2 = lshr i32 %1, 1, !dbg !15179
  %3 = and i32 %2, 1, !dbg !15179
  ret i32 %3, !dbg !15180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.241() unnamed_addr #16 !dbg !15181 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15182
  %2 = or i32 %1, 1, !dbg !15182
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15182
  ret void, !dbg !15183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.242(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #16 !dbg !15184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15186, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 %1, metadata !15187, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 %2, metadata !15188, metadata !DIExpression()), !dbg !15190
  call void @llvm.dbg.value(metadata i32 %3, metadata !15189, metadata !DIExpression()), !dbg !15190
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !15191
  %6 = and i32 %5, -4227072, !dbg !15191
  %7 = or i32 %1, %0, !dbg !15191
  %8 = shl i32 %2, 6, !dbg !15191
  %9 = or i32 %7, %8, !dbg !15191
  %10 = or i32 %9, %6, !dbg !15191
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !15191
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !15192
  %12 = and i32 %11, -196609, !dbg !15192
  %13 = or i32 %12, %3, !dbg !15192
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !15192
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !15193
  %15 = and i32 %14, -1879048193, !dbg !15193
  %16 = or i32 %15, %3, !dbg !15193
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !15193
  ret void, !dbg !15194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !15195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15199, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15200, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.value(metadata i32 0, metadata !15201, metadata !DIExpression()), !dbg !15203
  call void @llvm.dbg.value(metadata i32 0, metadata !15202, metadata !DIExpression()), !dbg !15203
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15204
  %4 = load i32, i32* %3, align 4, !dbg !15204
  %5 = lshr i32 %4, 4, !dbg !15204
  %6 = and i32 %5, 15, !dbg !15204
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !15204
  %8 = load i8, i8* %7, align 1, !dbg !15204
  %9 = zext i8 %8 to i32, !dbg !15204
  %10 = lshr i32 %0, %9, !dbg !15204
  call void @llvm.dbg.value(metadata i32 %10, metadata !15202, metadata !DIExpression()), !dbg !15203
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !15205
  %12 = icmp ult i32 %11, %10, !dbg !15207
  br i1 %12, label %13, label %16, !dbg !15208

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !15209
  call void @llvm.dbg.value(metadata i32 %14, metadata !15201, metadata !DIExpression()), !dbg !15203
  %15 = icmp eq i32 %14, 0, !dbg !15211
  br i1 %15, label %16, label %30, !dbg !15213

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.243() #27, !dbg !15214
  br label %17, !dbg !15216

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.244() #27, !dbg !15217
  %19 = icmp eq i32 %18, 1, !dbg !15218
  br i1 %19, label %20, label %17, !dbg !15216, !llvm.loop !15219

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !15221
  tail call fastcc void @LL_RCC_SetAHBPrescaler.245(i32 noundef %21) #27, !dbg !15222
  tail call fastcc void @LL_RCC_SetSysClkSource.246() #27, !dbg !15223
  br label %22, !dbg !15224

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.247() #27, !dbg !15225
  %24 = icmp eq i32 %23, 8, !dbg !15226
  br i1 %24, label %25, label %22, !dbg !15224, !llvm.loop !15227

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15229
  %27 = load i32, i32* %26, align 4, !dbg !15229
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.248(i32 noundef %27) #27, !dbg !15230
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15231
  %29 = load i32, i32* %28, align 4, !dbg !15231
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.249(i32 noundef %29) #27, !dbg !15232
  br label %30, !dbg !15233

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !15234
  %33 = icmp ugt i32 %32, %10, !dbg !15236
  br i1 %33, label %34, label %36, !dbg !15237

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !15238
  call void @llvm.dbg.value(metadata i32 %35, metadata !15201, metadata !DIExpression()), !dbg !15203
  br label %36, !dbg !15240

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !15203
  call void @llvm.dbg.value(metadata i32 %37, metadata !15201, metadata !DIExpression()), !dbg !15203
  %38 = icmp eq i32 %37, 0, !dbg !15241
  br i1 %38, label %39, label %40, !dbg !15243

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !15244
  br label %40, !dbg !15246

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !15247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.243() unnamed_addr #16 !dbg !15248 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15249
  %2 = or i32 %1, 16777216, !dbg !15249
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15249
  ret void, !dbg !15250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.244() unnamed_addr #17 !dbg !15251 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15252
  %2 = lshr i32 %1, 25, !dbg !15253
  %3 = and i32 %2, 1, !dbg !15253
  ret i32 %3, !dbg !15254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.245(i32 noundef %0) unnamed_addr #16 !dbg !15255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15257, metadata !DIExpression()), !dbg !15258
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15259
  %3 = and i32 %2, -241, !dbg !15259
  %4 = or i32 %3, %0, !dbg !15259
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15259
  ret void, !dbg !15260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.246() unnamed_addr #16 !dbg !15261 {
  call void @llvm.dbg.value(metadata i32 2, metadata !15263, metadata !DIExpression()), !dbg !15264
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15265
  %2 = and i32 %1, -4, !dbg !15265
  %3 = or i32 %2, 2, !dbg !15265
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15265
  ret void, !dbg !15266
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.247() unnamed_addr #17 !dbg !15267 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15268
  %2 = and i32 %1, 12, !dbg !15268
  ret i32 %2, !dbg !15269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.248(i32 noundef %0) unnamed_addr #16 !dbg !15270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15272, metadata !DIExpression()), !dbg !15273
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15274
  %3 = and i32 %2, -7169, !dbg !15274
  %4 = or i32 %3, %0, !dbg !15274
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15274
  ret void, !dbg !15275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.249(i32 noundef %0) unnamed_addr #16 !dbg !15276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15278, metadata !DIExpression()), !dbg !15279
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15280
  %3 = and i32 %2, -57345, !dbg !15280
  %4 = or i32 %3, %0, !dbg !15280
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !15280
  ret void, !dbg !15281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #17 !dbg !15282 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15283
  %2 = lshr i32 %1, 29, !dbg !15284
  %3 = and i32 %2, 1, !dbg !15284
  ret i32 %3, !dbg !15285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !15286 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15287
  %2 = lshr i32 %1, 27, !dbg !15288
  %3 = and i32 %2, 1, !dbg !15288
  ret i32 %3, !dbg !15289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !15290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15294, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata i32 %1, metadata !15295, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !15296, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !15297, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata i32 0, metadata !15298, metadata !DIExpression()), !dbg !15300
  call void @llvm.dbg.value(metadata i32 0, metadata !15299, metadata !DIExpression()), !dbg !15300
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !15301
  %6 = icmp eq i32 %5, 0, !dbg !15303
  br i1 %6, label %7, label %27, !dbg !15304

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %8, metadata !15299, metadata !DIExpression()), !dbg !15300
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.250() #27, !dbg !15307
  %10 = icmp eq i32 %9, 1, !dbg !15309
  br i1 %10, label %19, label %11, !dbg !15310

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !15311
  br i1 %12, label %13, label %14, !dbg !15314

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !15315
  br label %15, !dbg !15317

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.251() #27, !dbg !15318
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.252() #27, !dbg !15320
  br label %16, !dbg !15321

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.250() #27, !dbg !15322
  %18 = icmp eq i32 %17, 1, !dbg !15323
  br i1 %18, label %19, label %16, !dbg !15321, !llvm.loop !15324

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !15326
  %21 = load i32, i32* %20, align 4, !dbg !15326
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !15327
  %23 = load i32, i32* %22, align 4, !dbg !15327
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !15328
  %25 = load i32, i32* %24, align 4, !dbg !15328
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.242(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !15329
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %26, metadata !15298, metadata !DIExpression()), !dbg !15300
  br label %27, !dbg !15331

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !15332
  call void @llvm.dbg.value(metadata i32 %28, metadata !15298, metadata !DIExpression()), !dbg !15300
  ret i32 %28, !dbg !15333
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.250() unnamed_addr #17 !dbg !15334 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15335
  %2 = lshr i32 %1, 17, !dbg !15336
  %3 = and i32 %2, 1, !dbg !15336
  ret i32 %3, !dbg !15337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !15338 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15339
  %2 = or i32 %1, 262144, !dbg !15339
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15339
  ret void, !dbg !15340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.251() unnamed_addr #16 !dbg !15341 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15342
  %2 = and i32 %1, -262145, !dbg !15342
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15342
  ret void, !dbg !15343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.252() unnamed_addr #16 !dbg !15344 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15345
  %2 = or i32 %1, 65536, !dbg !15345
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !15345
  ret void, !dbg !15346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !15347 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !15350, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !15350, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !15350, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !15366
  ret void, !dbg !15367
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !15368 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15372, metadata !DIExpression()), !dbg !15374
  %2 = icmp eq i8* %0, null, !dbg !15375
  br i1 %2, label %29, label %3, !dbg !15377

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !15378
  %5 = icmp eq i8 %4, 0, !dbg !15379
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !15380
  br i1 %6, label %29, label %8, !dbg !15380

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !15373, metadata !DIExpression()), !dbg !15374
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !15381

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !15373, metadata !DIExpression()), !dbg !15374
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !15383
  br i1 %10, label %11, label %15, !dbg !15388

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !15389
  %13 = load i8*, i8** %12, align 4, !dbg !15389
  %14 = icmp eq i8* %13, %0, !dbg !15390
  br i1 %14, label %29, label %15, !dbg !15391

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !15392
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !15373, metadata !DIExpression()), !dbg !15374
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !15393
  br i1 %17, label %7, label %8, !dbg !15394, !llvm.loop !15395

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !15373, metadata !DIExpression()), !dbg !15374
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !15397
  br i1 %20, label %21, label %26, !dbg !15401

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !15402
  %23 = load i8*, i8** %22, align 4, !dbg !15402
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !15403
  %25 = icmp eq i32 %24, 0, !dbg !15404
  br i1 %25, label %29, label %26, !dbg !15405

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !15406
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !15373, metadata !DIExpression()), !dbg !15374
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !15407
  br i1 %28, label %29, label %18, !dbg !15381, !llvm.loop !15408

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !15374
  ret %struct.device* %30, !dbg !15410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !15411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15415, metadata !DIExpression()), !dbg !15416
  %2 = icmp eq %struct.device* %0, null, !dbg !15417
  br i1 %2, label %14, label %3, !dbg !15419

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !15420
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !15420
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15421
  %7 = load i8, i8* %6, align 1, !dbg !15421
  %8 = and i8 %7, 1, !dbg !15421
  %9 = icmp eq i8 %8, 0, !dbg !15421
  br i1 %9, label %14, label %10, !dbg !15422

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !15423
  %12 = load i8, i8* %11, align 1, !dbg !15423
  %13 = icmp eq i8 %12, 0, !dbg !15424
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !15416
  ret i1 %15, !dbg !15425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !15431, metadata !DIExpression()), !dbg !15432
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !15433
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !15434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15435 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15443, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !15444, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i8* %2, metadata !15445, metadata !DIExpression()), !dbg !15448
  %5 = bitcast i32* %4 to i8*, !dbg !15449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15449
  call void @llvm.dbg.value(metadata i32 0, metadata !15446, metadata !DIExpression()), !dbg !15448
  store i32 0, i32* %4, align 4, !dbg !15450
  call void @llvm.dbg.value(metadata i32* %4, metadata !15446, metadata !DIExpression(DW_OP_deref)), !dbg !15448
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !15451
  call void @llvm.dbg.value(metadata i16* %6, metadata !15447, metadata !DIExpression()), !dbg !15448
  %7 = load i32, i32* %4, align 4, !dbg !15452
  call void @llvm.dbg.value(metadata i32 %7, metadata !15446, metadata !DIExpression()), !dbg !15448
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !15453
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15454
  ret i32 %8, !dbg !15455
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !15456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15460, metadata !DIExpression()), !dbg !15466
  call void @llvm.dbg.value(metadata i32* %1, metadata !15461, metadata !DIExpression()), !dbg !15466
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !15467
  %4 = load i16*, i16** %3, align 4, !dbg !15467
  call void @llvm.dbg.value(metadata i16* %4, metadata !15462, metadata !DIExpression()), !dbg !15466
  %5 = icmp eq i16* %4, null, !dbg !15468
  br i1 %5, label %14, label %6, !dbg !15469

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !15470
  call void @llvm.dbg.value(metadata i32 %7, metadata !15463, metadata !DIExpression()), !dbg !15470
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !15471
  %9 = load i16, i16* %8, align 2, !dbg !15471
  %10 = add i16 %9, -32767, !dbg !15472
  %11 = icmp ult i16 %10, 2, !dbg !15472
  %12 = add i32 %7, 1, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %12, metadata !15463, metadata !DIExpression()), !dbg !15470
  br i1 %11, label %13, label %6, !dbg !15472, !llvm.loop !15475

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !15478
  br label %14, !dbg !15479

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !15480
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !15481 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !15485, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i32 %1, metadata !15486, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !15487, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i8* %3, metadata !15488, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.value(metadata i32 0, metadata !15489, metadata !DIExpression()), !dbg !15497
  %5 = icmp eq i32 %1, 0, !dbg !15498
  br i1 %5, label %16, label %8, !dbg !15499

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !15489, metadata !DIExpression()), !dbg !15497
  %7 = icmp eq i32 %15, %1, !dbg !15498
  br i1 %7, label %16, label %8, !dbg !15499, !llvm.loop !15500

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !15489, metadata !DIExpression()), !dbg !15497
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !15502
  %11 = load i16, i16* %10, align 2, !dbg !15502
  call void @llvm.dbg.value(metadata i16 %11, metadata !15491, metadata !DIExpression()), !dbg !15503
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !15504
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !15494, metadata !DIExpression()), !dbg !15503
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !15505
  call void @llvm.dbg.value(metadata i32 %13, metadata !15495, metadata !DIExpression()), !dbg !15503
  %14 = icmp slt i32 %13, 0, !dbg !15506
  %15 = add nuw i32 %9, 1, !dbg !15508
  call void @llvm.dbg.value(metadata i32 %15, metadata !15489, metadata !DIExpression()), !dbg !15497
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !15509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !15510 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !15514, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !15515, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !15516, metadata !DIExpression()), !dbg !15517
  %2 = sext i16 %0 to i32, !dbg !15518
  %3 = icmp slt i16 %0, 1, !dbg !15520
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !15521
  %6 = add nsw i32 %2, -1, !dbg !15521
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !15521
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !15521
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !15515, metadata !DIExpression()), !dbg !15517
  ret %struct.device* %8, !dbg !15522
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15523 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15525, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !15526, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i8* %2, metadata !15527, metadata !DIExpression()), !dbg !15530
  %5 = bitcast i32* %4 to i8*, !dbg !15531
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15531
  call void @llvm.dbg.value(metadata i32 0, metadata !15528, metadata !DIExpression()), !dbg !15530
  store i32 0, i32* %4, align 4, !dbg !15532
  call void @llvm.dbg.value(metadata i32* %4, metadata !15528, metadata !DIExpression(DW_OP_deref)), !dbg !15530
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !15533
  call void @llvm.dbg.value(metadata i16* %6, metadata !15529, metadata !DIExpression()), !dbg !15530
  %7 = load i32, i32* %4, align 4, !dbg !15534
  call void @llvm.dbg.value(metadata i32 %7, metadata !15528, metadata !DIExpression()), !dbg !15530
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !15535
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15536
  ret i32 %8, !dbg !15537
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !15538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15540, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.value(metadata i32* %1, metadata !15541, metadata !DIExpression()), !dbg !15545
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !15546
  %4 = load i16*, i16** %3, align 4, !dbg !15546
  call void @llvm.dbg.value(metadata i16* %4, metadata !15542, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.value(metadata i32 0, metadata !15543, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.value(metadata i32 0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %5 = icmp eq i16* %4, null, !dbg !15547
  br i1 %5, label %22, label %6, !dbg !15549

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !15543, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.value(metadata i16* %8, metadata !15542, metadata !DIExpression()), !dbg !15545
  %9 = load i16, i16* %8, align 2, !dbg !15550
  %10 = icmp eq i16 %9, -32768, !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15543, metadata !DIExpression()), !dbg !15545
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !15555
  call void @llvm.dbg.value(metadata i16* %11, metadata !15542, metadata !DIExpression()), !dbg !15545
  %12 = zext i1 %10 to i32, !dbg !15556
  %13 = add i32 %7, %12, !dbg !15556
  call void @llvm.dbg.value(metadata i32 %13, metadata !15543, metadata !DIExpression()), !dbg !15545
  %14 = icmp eq i32 %13, 2, !dbg !15557
  br i1 %14, label %15, label %6, !dbg !15558

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !15545
  call void @llvm.dbg.value(metadata i32 %16, metadata !15544, metadata !DIExpression()), !dbg !15545
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !15559
  %18 = load i16, i16* %17, align 2, !dbg !15559
  %19 = icmp eq i16 %18, 32767, !dbg !15560
  %20 = add i32 %16, 1, !dbg !15561
  call void @llvm.dbg.value(metadata i32 %20, metadata !15544, metadata !DIExpression()), !dbg !15545
  br i1 %19, label %21, label %15, !dbg !15563, !llvm.loop !15564

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !15566
  br label %22, !dbg !15567

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !15568
  call void @llvm.dbg.value(metadata i16* %23, metadata !15542, metadata !DIExpression()), !dbg !15545
  ret i16* %23, !dbg !15569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !15570 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15573
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !15574
  ret i32* %2, !dbg !15575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !15576 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15726, metadata !DIExpression()), !dbg !15729
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !15727, metadata !DIExpression()), !dbg !15729
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15728, metadata !DIExpression()), !dbg !15729
  ret void, !dbg !15730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !15731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15735, metadata !DIExpression()), !dbg !15737
  call void @llvm.dbg.value(metadata i32 %1, metadata !15736, metadata !DIExpression()), !dbg !15737
  ret void, !dbg !15738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !15739 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15743, metadata !DIExpression()), !dbg !15745
  call void @llvm.dbg.value(metadata i32 %1, metadata !15744, metadata !DIExpression()), !dbg !15745
  ret void, !dbg !15746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !15747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15751, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata i8* %1, metadata !15752, metadata !DIExpression()), !dbg !15753
  ret i32 -134, !dbg !15754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !15755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15759, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i8* %1, metadata !15760, metadata !DIExpression()), !dbg !15761
  ret i32 -134, !dbg !15762
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !15763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15766, metadata !DIExpression()), !dbg !15767
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15768, !srcloc !15774
  call void @llvm.dbg.value(metadata i32 undef, metadata !15771, metadata !DIExpression()) #25, !dbg !15775
  call void @llvm.dbg.value(metadata i32 undef, metadata !15772, metadata !DIExpression()) #25, !dbg !15775
  br label %3, !dbg !15776

3:                                                ; preds = %3, %1
  br label %3, !dbg !15777, !llvm.loop !15780
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15787, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15788, metadata !DIExpression()), !dbg !15789
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.257, i32 0, i32 0), i32 noundef 69) #26, !dbg !15790
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15795
  unreachable, !dbg !15795
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !15796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15798, metadata !DIExpression()), !dbg !15799
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !15800
  unreachable, !dbg !15800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !15801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15804, metadata !DIExpression()), !dbg !15807
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15808, !srcloc !15774
  call void @llvm.dbg.value(metadata i32 undef, metadata !15771, metadata !DIExpression()) #25, !dbg !15810
  call void @llvm.dbg.value(metadata i32 undef, metadata !15772, metadata !DIExpression()) #25, !dbg !15810
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()), !dbg !15807
  %4 = tail call fastcc %struct.k_thread* @k_current_get.260() #28, !dbg !15811
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15806, metadata !DIExpression()), !dbg !15807
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !15812
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.261, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #26, !dbg !15812
  %6 = icmp eq %struct.__esf* %1, null, !dbg !15817
  br i1 %6, label %13, label %7, !dbg !15819

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !15820, metadata !DIExpression()), !dbg !15825
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !15827
  %9 = load i32, i32* %8, align 4, !dbg !15827
  %10 = and i32 %9, 511, !dbg !15828
  %11 = icmp eq i32 %10, 0, !dbg !15829
  br i1 %11, label %13, label %12, !dbg !15830

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.262, i32 0, i32 0), i32 noundef 69) #26, !dbg !15831
  br label %13, !dbg !15837

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !15838
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.263, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #26, !dbg !15838
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !15843
  %15 = icmp eq i32 %0, 4, !dbg !15844
  br i1 %15, label %16, label %17, !dbg !15849

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.266, i32 0, i32 0), i32 noundef 148) #26, !dbg !15850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.267, i32 0, i32 0)) #26, !dbg !15850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.266, i32 0, i32 0), i32 noundef 148) #26, !dbg !15850
  unreachable, !dbg !15850

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !15808
  call void @llvm.dbg.value(metadata i32 %18, metadata !15771, metadata !DIExpression()) #25, !dbg !15810
  call void @llvm.dbg.value(metadata i32 %18, metadata !15805, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15852, metadata !DIExpression()) #25, !dbg !15855
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15857, !srcloc !15858
  tail call fastcc void @k_thread_abort.268(%struct.k_thread* noundef %4) #27, !dbg !15859
  ret void, !dbg !15862
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.260() unnamed_addr #12 !dbg !15863 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.276() #28, !dbg !15867
  ret %struct.k_thread* %1, !dbg !15868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !15869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15873, metadata !DIExpression()), !dbg !15874
  %2 = icmp ult i32 %0, 5, !dbg !15875
  br i1 %2, label %3, label %6, !dbg !15875

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !15875
  %5 = load i8*, i8** %4, align 4, !dbg !15875
  br label %6, !dbg !15875

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.270, i32 0, i32 0), %1 ], !dbg !15876
  ret i8* %7, !dbg !15878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15883, metadata !DIExpression()), !dbg !15885
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !15886
  br i1 %2, label %9, label %3, !dbg !15887

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #26, !dbg !15888
  call void @llvm.dbg.value(metadata i8* %4, metadata !15884, metadata !DIExpression()), !dbg !15885
  %5 = icmp eq i8* %4, null, !dbg !15889
  br i1 %5, label %9, label %6, !dbg !15891

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !15892
  %8 = icmp eq i8 %7, 0, !dbg !15893
  br i1 %8, label %9, label %10, !dbg !15894

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.269, i32 0, i32 0), metadata !15884, metadata !DIExpression()), !dbg !15885
  br label %10, !dbg !15895

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.269, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !15885
  call void @llvm.dbg.value(metadata i8* %11, metadata !15884, metadata !DIExpression()), !dbg !15885
  ret i8* %11, !dbg !15897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.268(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15902, metadata !DIExpression()), !dbg !15903
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15904, !srcloc !15906
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !15907
  ret void, !dbg !15908
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.276() unnamed_addr #12 !dbg !15909 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15910, !srcloc !15912
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !15913
  ret %struct.k_thread* %1, !dbg !15914
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15919, metadata !DIExpression()), !dbg !15922
  call void @llvm.dbg.value(metadata i32 %1, metadata !15920, metadata !DIExpression()), !dbg !15922
  call void @llvm.dbg.value(metadata i32 %2, metadata !15921, metadata !DIExpression()), !dbg !15922
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !15923
  ret void, !dbg !15924
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15929, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata i8* %1, metadata !15930, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.value(metadata i32 %2, metadata !15931, metadata !DIExpression()), !dbg !15932
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !15933
  ret void, !dbg !15934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !15935 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !15936
  ret void, !dbg !15937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !15938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15940, metadata !DIExpression()), !dbg !15941
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !15942
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15943
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !15944
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !15945
  %4 = trunc i32 %0 to i8, !dbg !15946
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !15947
  store i8 %4, i8* %5, align 4, !dbg !15948
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !15949
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !15950
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !15951
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !15952
  store i8* %8, i8** %9, align 4, !dbg !15953
  ret void, !dbg !15954
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !15955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15957, metadata !DIExpression()), !dbg !15963
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !15964
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15958, metadata !DIExpression()), !dbg !15963
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !15965
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !15959, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i8* null, metadata !15962, metadata !DIExpression()), !dbg !15963
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !15966
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !15967
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !15968
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !15969
  ret void, !dbg !15970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !15971 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15975, metadata !DIExpression()), !dbg !15976
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15977
  ret i8* %2, !dbg !15978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15984, metadata !DIExpression()), !dbg !15985
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15986
  %3 = load i8, i8* %2, align 1, !dbg !15987
  %4 = and i8 %3, -5, !dbg !15987
  store i8 %4, i8* %2, align 1, !dbg !15987
  ret void, !dbg !15988
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !15989 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !15992
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !15993
  %3 = ptrtoint i8* %2 to i32, !dbg !16002
  %4 = add i32 %3, 2048, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %4, metadata !15997, metadata !DIExpression()) #25, !dbg !16004
  call void @llvm.dbg.value(metadata i32 %4, metadata !16005, metadata !DIExpression()) #25, !dbg !16008
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !16010, !srcloc !16011
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !16012
  %6 = or i32 %5, 512, !dbg !16012
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !16012
  tail call fastcc void @__NVIC_SetPriority.285(i32 noundef -2, i32 noundef 255) #26, !dbg !16013
  tail call fastcc void @__NVIC_SetPriority.285(i32 noundef -5, i32 noundef 0) #26, !dbg !16016
  tail call fastcc void @__NVIC_SetPriority.285(i32 noundef -12, i32 noundef 0) #26, !dbg !16017
  tail call fastcc void @__NVIC_SetPriority.285(i32 noundef -11, i32 noundef 0) #26, !dbg !16018
  tail call fastcc void @__NVIC_SetPriority.285(i32 noundef -10, i32 noundef 0) #26, !dbg !16019
  tail call fastcc void @__NVIC_SetPriority.285(i32 noundef -4, i32 noundef 0) #26, !dbg !16020
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !16021
  %8 = or i32 %7, 458752, !dbg !16021
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !16021
  tail call void @z_arm_fault_init() #26, !dbg !16022
  tail call void @z_arm_cpu_idle_init() #26, !dbg !16023
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !16024
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !16027
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !16028
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !16029
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !16030
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !16030
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15991, metadata !DIExpression()), !dbg !16031
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !16032
  call void @z_device_state_init() #26, !dbg !16033
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !16034
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !16035
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !16036
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !16037
  unreachable, !dbg !16037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2990, metadata !DIExpression()), !dbg !16038
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !16039
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !16039
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2991, metadata !DIExpression()), !dbg !16038
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2991, metadata !DIExpression()), !dbg !16038
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !16040
  br i1 %7, label %8, label %35, !dbg !16041

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2991, metadata !DIExpression()), !dbg !16038
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !16042
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !16042
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !3001, metadata !DIExpression()), !dbg !16043
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !16044
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !16044
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !16045
  call void @llvm.dbg.value(metadata i32 %14, metadata !3005, metadata !DIExpression()), !dbg !16043
  %15 = icmp eq %struct.device* %11, null, !dbg !16046
  br i1 %15, label %32, label %16, !dbg !16048

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !16049
  br i1 %17, label %26, label %18, !dbg !16052

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !16053
  call void @llvm.dbg.value(metadata i32 %19, metadata !3005, metadata !DIExpression()), !dbg !16043
  %20 = icmp ult i32 %19, 255, !dbg !16055
  %21 = select i1 %20, i32 %19, i32 255, !dbg !16055
  call void @llvm.dbg.value(metadata i32 %21, metadata !3005, metadata !DIExpression()), !dbg !16043
  %22 = trunc i32 %21 to i8, !dbg !16056
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !16057
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !16057
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !16058
  store i8 %22, i8* %25, align 1, !dbg !16059
  br label %26, !dbg !16060

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !16061
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !16061
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !16062
  %30 = load i8, i8* %29, align 1, !dbg !16063
  %31 = or i8 %30, 1, !dbg !16063
  store i8 %31, i8* %29, align 1, !dbg !16063
  br label %32, !dbg !16064

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !16065
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2991, metadata !DIExpression()), !dbg !16038
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !16040
  br i1 %34, label %8, label %35, !dbg !16041, !llvm.loop !16066

35:                                               ; preds = %32, %1
  ret void, !dbg !16068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.285(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !16069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16071, metadata !DIExpression()), !dbg !16073
  call void @llvm.dbg.value(metadata i32 %1, metadata !16072, metadata !DIExpression()), !dbg !16073
  %3 = trunc i32 %1 to i8, !dbg !16074
  %4 = shl i8 %3, 4, !dbg !16074
  %5 = and i32 %0, 15, !dbg !16077
  %6 = add nsw i32 %5, -4, !dbg !16078
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !16079
  store volatile i8 %4, i8* %7, align 1, !dbg !16080
  ret void, !dbg !16081
}

; Function Attrs: optsize
declare !dbg !16082 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !16083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16086, metadata !DIExpression()), !dbg !16087
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16088
  store i8 1, i8* %2, align 1, !dbg !16089
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16090
  store i8 1, i8* %3, align 4, !dbg !16091
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !16092
  store i32 0, i32* %4, align 4, !dbg !16093
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !16094
  store i32 0, i32* %5, align 4, !dbg !16095
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !16096
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !16097
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16098
  ret void, !dbg !16099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !16100 {
  tail call void @z_sched_init() #26, !dbg !16105
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16106
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.286, i32 0, i32 0)) #26, !dbg !16107
  call void @llvm.dbg.value(metadata i8* %1, metadata !16104, metadata !DIExpression()), !dbg !16108
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !16109
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !16110
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !16111
  ret i8* %1, !dbg !16112
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !16113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16117, metadata !DIExpression()), !dbg !16118
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !16119
  unreachable, !dbg !16120
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !16121 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16123, metadata !DIExpression()), !dbg !16126
  call void @llvm.dbg.value(metadata i8* %1, metadata !16124, metadata !DIExpression()), !dbg !16126
  call void @llvm.dbg.value(metadata i8* %2, metadata !16125, metadata !DIExpression()), !dbg !16126
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !16127
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !16128
  tail call void @boot_banner() #26, !dbg !16129
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !16130
  tail call void @z_init_static_threads() #26, !dbg !16131
  tail call void @main() #26, !dbg !16132
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !16133
  %5 = and i8 %4, -2, !dbg !16133
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !16133
  ret void, !dbg !16134
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define internal i32 @init_mem_slab_module(%struct.device* nocapture noundef readnone %0) #1 !dbg !16135 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16137, metadata !DIExpression()), !dbg !16160
  call void @llvm.dbg.value(metadata i32 0, metadata !16138, metadata !DIExpression()), !dbg !16160
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), metadata !16139, metadata !DIExpression()), !dbg !16161
  br i1 icmp ugt (%struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), %struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0)), label %4, label %5, !dbg !16162

2:                                                ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %11, metadata !16139, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i32 0, metadata !16138, metadata !DIExpression()), !dbg !16160
  %3 = icmp ugt %struct.k_mem_slab* %11, getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0), !dbg !16166
  br i1 %3, label %4, label %5, !dbg !16162, !llvm.loop !16168

4:                                                ; preds = %2, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 61) #26, !dbg !16171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.291, i32 0, i32 0)) #26, !dbg !16171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 61) #26, !dbg !16171
  unreachable, !dbg !16171

5:                                                ; preds = %1, %2
  %6 = phi %struct.k_mem_slab* [ %11, %2 ], [ getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %6, metadata !16139, metadata !DIExpression()), !dbg !16161
  %7 = icmp ult %struct.k_mem_slab* %6, getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0), !dbg !16173
  br i1 %7, label %8, label %12, !dbg !16169

8:                                                ; preds = %5
  %9 = tail call fastcc i32 @create_free_list(%struct.k_mem_slab* noundef %6) #27, !dbg !16174
  call void @llvm.dbg.value(metadata i32 %9, metadata !16138, metadata !DIExpression()), !dbg !16160
  %10 = icmp slt i32 %9, 0, !dbg !16176
  %11 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %6, i32 1, !dbg !16178
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %11, metadata !16139, metadata !DIExpression()), !dbg !16161
  br i1 %10, label %12, label %2, !dbg !16179

12:                                               ; preds = %8, %5
  %13 = phi i32 [ 0, %5 ], [ %9, %8 ], !dbg !16160
  call void @llvm.dbg.value(metadata i32 %13, metadata !16138, metadata !DIExpression()), !dbg !16160
  ret i32 %13, !dbg !16180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @create_free_list(%struct.k_mem_slab* nocapture noundef %0) unnamed_addr #15 !dbg !16181 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !16185, metadata !DIExpression()), !dbg !16188
  %2 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !16189
  %3 = load i32, i32* %2, align 4, !dbg !16189
  %4 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 4, !dbg !16189
  %5 = load i8*, i8** %4, align 4, !dbg !16189
  %6 = ptrtoint i8* %5 to i32, !dbg !16189
  %7 = or i32 %3, %6, !dbg !16189
  %8 = and i32 %7, 3, !dbg !16189
  %9 = icmp eq i32 %8, 0, !dbg !16189
  br i1 %9, label %10, label %25, !dbg !16191

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !16192
  store i8* null, i8** %11, align 4, !dbg !16193
  call void @llvm.dbg.value(metadata i8* %5, metadata !16187, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i32 0, metadata !16186, metadata !DIExpression()), !dbg !16188
  %12 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata i8* %5, metadata !16187, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i32 0, metadata !16186, metadata !DIExpression()), !dbg !16188
  %13 = load i32, i32* %12, align 4, !dbg !16194
  %14 = icmp eq i32 %13, 0, !dbg !16197
  br i1 %14, label %25, label %15, !dbg !16198

15:                                               ; preds = %10, %15
  %16 = phi i8* [ %17, %15 ], [ null, %10 ], !dbg !16199
  %17 = phi i8* [ %21, %15 ], [ %5, %10 ]
  %18 = phi i32 [ %22, %15 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !16187, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata i32 %18, metadata !16186, metadata !DIExpression()), !dbg !16188
  %19 = bitcast i8* %17 to i8**, !dbg !16201
  store i8* %16, i8** %19, align 4, !dbg !16202
  store i8* %17, i8** %11, align 4, !dbg !16203
  %20 = load i32, i32* %2, align 4, !dbg !16204
  %21 = getelementptr inbounds i8, i8* %17, i32 %20, !dbg !16205
  call void @llvm.dbg.value(metadata i8* %21, metadata !16187, metadata !DIExpression()), !dbg !16188
  %22 = add nuw i32 %18, 1, !dbg !16206
  call void @llvm.dbg.value(metadata i32 %22, metadata !16186, metadata !DIExpression()), !dbg !16188
  %23 = load i32, i32* %12, align 4, !dbg !16194
  %24 = icmp ult i32 %22, %23, !dbg !16197
  br i1 %24, label %15, label %25, !dbg !16198, !llvm.loop !16207

25:                                               ; preds = %15, %10, %1
  %26 = phi i32 [ -22, %1 ], [ 0, %10 ], [ 0, %15 ], !dbg !16188
  ret i32 %26, !dbg !16209
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @k_mem_slab_init(%struct.k_mem_slab* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !16210 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !16214, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i8* %1, metadata !16215, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 %2, metadata !16216, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 %3, metadata !16217, metadata !DIExpression()), !dbg !16220
  call void @llvm.dbg.value(metadata i32 0, metadata !16218, metadata !DIExpression()), !dbg !16220
  %5 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2, !dbg !16221
  store i32 %3, i32* %5, align 4, !dbg !16222
  %6 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !16223
  store i32 %2, i32* %6, align 4, !dbg !16224
  %7 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 4, !dbg !16225
  store i8* %1, i8** %7, align 4, !dbg !16226
  %8 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !16227
  store i32 0, i32* %8, align 4, !dbg !16228
  %9 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, i32 0, !dbg !16229
  store i32 0, i32* %9, align 4, !dbg !16229
  %10 = tail call fastcc i32 @create_free_list(%struct.k_mem_slab* noundef %0) #27, !dbg !16230
  call void @llvm.dbg.value(metadata i32 %10, metadata !16218, metadata !DIExpression()), !dbg !16220
  %11 = icmp slt i32 %10, 0, !dbg !16231
  br i1 %11, label %14, label %12, !dbg !16233

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !16234
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef %13) #27, !dbg !16235
  br label %14, !dbg !16236

14:                                               ; preds = %12, %4
  call void @llvm.dbg.label(metadata !16219), !dbg !16237
  ret i32 %10, !dbg !16238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !16239 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16245, metadata !DIExpression()), !dbg !16246
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16247
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !16248
  ret void, !dbg !16249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16250 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16255, metadata !DIExpression()), !dbg !16256
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16257
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16258
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16259
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16260
  ret void, !dbg !16261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_mem_slab_alloc(%struct.k_mem_slab* noundef %0, i8** nocapture noundef writeonly %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16262 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16272, metadata !DIExpression()), !dbg !16279
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !16270, metadata !DIExpression()), !dbg !16279
  call void @llvm.dbg.value(metadata i8** %1, metadata !16271, metadata !DIExpression()), !dbg !16279
  %4 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !16280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !16281, metadata !DIExpression()) #25, !dbg !16288
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16290, !srcloc !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16293, metadata !DIExpression()) #25, !dbg !16297
  call void @llvm.dbg.value(metadata i32 undef, metadata !16294, metadata !DIExpression()) #25, !dbg !16297
  call void @llvm.dbg.value(metadata i32 undef, metadata !16287, metadata !DIExpression()) #25, !dbg !16288
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %4) #26, !dbg !16298
  br i1 %6, label %8, label %7, !dbg !16301

7:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 148) #26, !dbg !16302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %4) #26, !dbg !16302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 148) #26, !dbg !16302
  unreachable, !dbg !16302

8:                                                ; preds = %3
  %9 = extractvalue { i32, i32 } %5, 0, !dbg !16290
  call void @llvm.dbg.value(metadata i32 %9, metadata !16293, metadata !DIExpression()) #25, !dbg !16297
  call void @llvm.dbg.value(metadata i32 %9, metadata !16287, metadata !DIExpression()) #25, !dbg !16288
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %4) #26, !dbg !16304
  call void @llvm.dbg.value(metadata i32 %9, metadata !16273, metadata !DIExpression()), !dbg !16279
  %10 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !16305
  %11 = load i8*, i8** %10, align 4, !dbg !16305
  %12 = icmp eq i8* %11, null, !dbg !16307
  br i1 %12, label %20, label %13, !dbg !16308

13:                                               ; preds = %8
  store i8* %11, i8** %1, align 4, !dbg !16309
  %14 = bitcast i8** %10 to i8***, !dbg !16311
  %15 = load i8**, i8*** %14, align 4, !dbg !16311
  %16 = load i8*, i8** %15, align 4, !dbg !16312
  store i8* %16, i8** %10, align 4, !dbg !16313
  %17 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !16314
  %18 = load i32, i32* %17, align 4, !dbg !16315
  %19 = add i32 %18, 1, !dbg !16315
  store i32 %19, i32* %17, align 4, !dbg !16315
  call void @llvm.dbg.value(metadata i32 0, metadata !16278, metadata !DIExpression()), !dbg !16279
  br label %33, !dbg !16316

20:                                               ; preds = %8
  %21 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %21, metadata !16272, metadata !DIExpression()), !dbg !16279
  %22 = icmp eq i64 %21, 0, !dbg !16317
  br i1 %22, label %23, label %24, !dbg !16319

23:                                               ; preds = %20
  store i8* null, i8** %1, align 4, !dbg !16320
  call void @llvm.dbg.value(metadata i32 -12, metadata !16278, metadata !DIExpression()), !dbg !16279
  br label %33

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !16322
  %26 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !16324
  %27 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %26, %struct._wait_q_t* noundef %25, [1 x i64] %2) #26, !dbg !16324
  call void @llvm.dbg.value(metadata i32 %27, metadata !16278, metadata !DIExpression()), !dbg !16279
  %28 = icmp eq i32 %27, 0, !dbg !16325
  br i1 %28, label %29, label %38, !dbg !16327

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16328
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !16330
  %32 = load i8*, i8** %31, align 4, !dbg !16330
  store i8* %32, i8** %1, align 4, !dbg !16331
  br label %38, !dbg !16332

33:                                               ; preds = %13, %23
  %34 = phi i32 [ 0, %13 ], [ -12, %23 ], !dbg !16333
  call void @llvm.dbg.value(metadata i32 %34, metadata !16278, metadata !DIExpression()), !dbg !16279
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !16339, metadata !DIExpression()) #25, !dbg !16340
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %4) #26, !dbg !16342
  br i1 %35, label %37, label %36, !dbg !16345

36:                                               ; preds = %33
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 194) #26, !dbg !16346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %4) #26, !dbg !16346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 194) #26, !dbg !16346
  unreachable, !dbg !16346

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %9, metadata !16334, metadata !DIExpression()) #25, !dbg !16340
  call void @llvm.dbg.value(metadata i32 %9, metadata !16348, metadata !DIExpression()) #25, !dbg !16351
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16353, !srcloc !16354
  br label %38, !dbg !16355

38:                                               ; preds = %29, %24, %37
  %39 = phi i32 [ %34, %37 ], [ %27, %24 ], [ 0, %29 ], !dbg !16279
  ret i32 %39, !dbg !16356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_mem_slab_free(%struct.k_mem_slab* noundef %0, i8** nocapture noundef readonly %1) local_unnamed_addr #1 !dbg !16357 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !16361, metadata !DIExpression()), !dbg !16446
  call void @llvm.dbg.value(metadata i8** %1, metadata !16362, metadata !DIExpression()), !dbg !16446
  %3 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !16447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !16281, metadata !DIExpression()) #25, !dbg !16448
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16450, !srcloc !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16293, metadata !DIExpression()) #25, !dbg !16452
  call void @llvm.dbg.value(metadata i32 undef, metadata !16294, metadata !DIExpression()) #25, !dbg !16452
  call void @llvm.dbg.value(metadata i32 undef, metadata !16287, metadata !DIExpression()) #25, !dbg !16448
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16453
  br i1 %5, label %7, label %6, !dbg !16454

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 148) #26, !dbg !16455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !16455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 148) #26, !dbg !16455
  unreachable, !dbg !16455

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16450
  call void @llvm.dbg.value(metadata i32 %8, metadata !16293, metadata !DIExpression()) #25, !dbg !16452
  call void @llvm.dbg.value(metadata i32 %8, metadata !16287, metadata !DIExpression()) #25, !dbg !16448
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16456
  call void @llvm.dbg.value(metadata i32 %8, metadata !16363, metadata !DIExpression()), !dbg !16446
  %9 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !16457
  %10 = load i8*, i8** %9, align 4, !dbg !16457
  %11 = icmp eq i8* %10, null, !dbg !16458
  br i1 %11, label %12, label %23, !dbg !16459

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !16460
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #26, !dbg !16461
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16364, metadata !DIExpression()), !dbg !16462
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16463
  br i1 %15, label %16, label %18, !dbg !16465

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !16466
  br label %23, !dbg !16465

18:                                               ; preds = %12
  %19 = load i8*, i8** %1, align 4, !dbg !16467
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16469, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i32 0, metadata !16475, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata i8* %19, metadata !16476, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16479, metadata !DIExpression()), !dbg !16485
  call void @llvm.dbg.value(metadata i32 0, metadata !16484, metadata !DIExpression()), !dbg !16485
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !16487
  store i32 0, i32* %20, align 4, !dbg !16488
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !16489
  store i8* %19, i8** %21, align 4, !dbg !16490
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #26, !dbg !16491
  %22 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16492
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %22) #26, !dbg !16492
  br label %34

23:                                               ; preds = %16, %7
  %24 = phi i8* [ %17, %16 ], [ %10, %7 ], !dbg !16466
  %25 = bitcast i8** %1 to i8***, !dbg !16493
  %26 = load i8**, i8*** %25, align 4, !dbg !16493
  store i8* %24, i8** %26, align 4, !dbg !16494
  %27 = load i8*, i8** %1, align 4, !dbg !16495
  store i8* %27, i8** %9, align 4, !dbg !16496
  %28 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !16497
  %29 = load i32, i32* %28, align 4, !dbg !16498
  %30 = add i32 %29, -1, !dbg !16498
  store i32 %30, i32* %28, align 4, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16499
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !16339, metadata !DIExpression()) #25, !dbg !16499
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16501
  br i1 %31, label %33, label %32, !dbg !16502

32:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 194) #26, !dbg !16503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !16503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 194) #26, !dbg !16503
  unreachable, !dbg !16503

33:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 %8, metadata !16334, metadata !DIExpression()) #25, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %8, metadata !16348, metadata !DIExpression()) #25, !dbg !16504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16506, !srcloc !16354
  br label %34, !dbg !16507

34:                                               ; preds = %18, %33
  ret void, !dbg !16507
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_mem_slab_runtime_stats_get(%struct.k_mem_slab* noundef %0, %struct._thread_stack_info* noundef writeonly %1) local_unnamed_addr #1 !dbg !16508 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !16519, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !16520, metadata !DIExpression()), !dbg !16522
  %3 = icmp eq %struct.k_mem_slab* %0, null, !dbg !16523
  %4 = icmp eq %struct._thread_stack_info* %1, null
  %5 = or i1 %3, %4, !dbg !16525
  br i1 %5, label %30, label %6, !dbg !16525

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !16526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %7, metadata !16281, metadata !DIExpression()) #25, !dbg !16527
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16529, !srcloc !16296
  call void @llvm.dbg.value(metadata i32 undef, metadata !16293, metadata !DIExpression()) #25, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16294, metadata !DIExpression()) #25, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16287, metadata !DIExpression()) #25, !dbg !16527
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %7) #26, !dbg !16532
  br i1 %9, label %11, label %10, !dbg !16533

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 148) #26, !dbg !16534
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %7) #26, !dbg !16534
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 148) #26, !dbg !16534
  unreachable, !dbg !16534

11:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16293, metadata !DIExpression()) #25, !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16287, metadata !DIExpression()) #25, !dbg !16527
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %7) #26, !dbg !16535
  call void @llvm.dbg.value(metadata i32 undef, metadata !16521, metadata !DIExpression()), !dbg !16522
  %12 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !16536
  %13 = load i32, i32* %12, align 4, !dbg !16536
  %14 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !16537
  %15 = load i32, i32* %14, align 4, !dbg !16537
  %16 = mul i32 %15, %13, !dbg !16538
  %17 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !16539
  store i32 %16, i32* %17, align 4, !dbg !16540
  %18 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2, !dbg !16541
  %19 = load i32, i32* %18, align 4, !dbg !16541
  %20 = load i32, i32* %12, align 4, !dbg !16542
  %21 = sub i32 %19, %20, !dbg !16543
  %22 = load i32, i32* %14, align 4, !dbg !16544
  %23 = mul i32 %21, %22, !dbg !16545
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !16546
  store i32 %23, i32* %24, align 4, !dbg !16547
  %25 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !16548
  store i32 0, i32* %25, align 4, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16550
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %7, metadata !16339, metadata !DIExpression()) #25, !dbg !16550
  %26 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %7) #26, !dbg !16552
  br i1 %26, label %28, label %27, !dbg !16553

27:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 194) #26, !dbg !16554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.298, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %7) #26, !dbg !16554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.295, i32 0, i32 0), i32 noundef 194) #26, !dbg !16554
  unreachable, !dbg !16554

28:                                               ; preds = %11
  %29 = extractvalue { i32, i32 } %8, 0, !dbg !16529
  call void @llvm.dbg.value(metadata i32 %29, metadata !16293, metadata !DIExpression()) #25, !dbg !16531
  call void @llvm.dbg.value(metadata i32 %29, metadata !16287, metadata !DIExpression()) #25, !dbg !16527
  call void @llvm.dbg.value(metadata i32 %29, metadata !16521, metadata !DIExpression()), !dbg !16522
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16550
  call void @llvm.dbg.value(metadata i32 undef, metadata !16348, metadata !DIExpression()) #25, !dbg !16555
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !16557, !srcloc !16354
  br label %30

30:                                               ; preds = %2, %28
  %31 = phi i32 [ 0, %28 ], [ -22, %2 ], !dbg !16522
  ret i32 %31, !dbg !16558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !16559 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !16569, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.value(metadata i8* %1, metadata !16570, metadata !DIExpression()), !dbg !16571
  ret void, !dbg !16572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !16573 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !16575, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i8* %1, metadata !16576, metadata !DIExpression()), !dbg !16577
  ret void, !dbg !16578
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !16579 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16580, !srcloc !16587
  call void @llvm.dbg.value(metadata i32 %1, metadata !16583, metadata !DIExpression()) #25, !dbg !16588
  %2 = icmp ne i32 %1, 0, !dbg !16589
  ret i1 %2, !dbg !16590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !16591 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16592
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !16593
  %3 = load i8, i8* %2, align 4, !dbg !16594
  %4 = or i8 %3, 1, !dbg !16594
  store i8 %4, i8* %2, align 4, !dbg !16594
  ret void, !dbg !16595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !16596 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16597
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !16598
  %3 = load i8, i8* %2, align 4, !dbg !16599
  %4 = and i8 %3, -2, !dbg !16599
  store i8 %4, i8* %2, align 4, !dbg !16599
  ret void, !dbg !16600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !16601 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16602
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !16603
  %3 = load i8, i8* %2, align 4, !dbg !16603
  %4 = and i8 %3, 1, !dbg !16604
  %5 = icmp ne i8 %4, 0, !dbg !16605
  ret i1 %5, !dbg !16606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !16607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16611, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata i8* %1, metadata !16612, metadata !DIExpression()), !dbg !16613
  ret i32 -88, !dbg !16614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !16615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16619, metadata !DIExpression()), !dbg !16620
  ret i8* null, !dbg !16621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #6 !dbg !16622 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16626, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata i8* %1, metadata !16627, metadata !DIExpression()), !dbg !16629
  call void @llvm.dbg.value(metadata i32 %2, metadata !16628, metadata !DIExpression()), !dbg !16629
  ret i32 -88, !dbg !16630
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !3050 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3166, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i8* %1, metadata !3167, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 %2, metadata !3168, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 0, metadata !3169, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i8 undef, metadata !3171, metadata !DIExpression()), !dbg !16631
  %4 = icmp eq i8* %1, null, !dbg !16632
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !16634
  br i1 %6, label %46, label %7, !dbg !16634

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16635
  %9 = load i8, i8* %8, align 1, !dbg !16635
  call void @llvm.dbg.value(metadata i8 %9, metadata !3171, metadata !DIExpression()), !dbg !16631
  %10 = add i32 %2, -1, !dbg !16636
  call void @llvm.dbg.value(metadata i32 %10, metadata !3168, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i8 0, metadata !3172, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata i8 %9, metadata !3171, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 0, metadata !3169, metadata !DIExpression()), !dbg !16631
  %11 = icmp eq i8 %9, 0, !dbg !16638
  br i1 %11, label %12, label %15, !dbg !16640

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !16641
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !16642
  store i8 0, i8* %14, align 1, !dbg !16643
  br label %46, !dbg !16644

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !3172, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata i8 %17, metadata !3171, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 %18, metadata !3169, metadata !DIExpression()), !dbg !16631
  %19 = zext i8 %17 to i32, !dbg !16645
  %20 = zext i8 %16 to i32, !dbg !16646
  %21 = shl nuw i32 1, %20, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %21, metadata !3170, metadata !DIExpression()), !dbg !16631
  %22 = and i32 %21, %19, !dbg !16648
  %23 = icmp eq i32 %22, 0, !dbg !16650
  br i1 %23, label %42, label %24, !dbg !16651

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !16652
  %26 = sub i32 %10, %18, !dbg !16653
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !16654
  %28 = load i8*, i8** %27, align 4, !dbg !16654
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !16655
  %30 = load i32, i32* %29, align 4, !dbg !16655
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !16656
  %32 = add i32 %31, %18, !dbg !16657
  call void @llvm.dbg.value(metadata i32 %32, metadata !3169, metadata !DIExpression()), !dbg !16631
  %33 = trunc i32 %21 to i8, !dbg !16658
  %34 = xor i8 %33, -1, !dbg !16658
  %35 = and i8 %17, %34, !dbg !16658
  call void @llvm.dbg.value(metadata i8 %35, metadata !3171, metadata !DIExpression()), !dbg !16631
  %36 = icmp eq i8 %35, 0, !dbg !16659
  br i1 %36, label %12, label %37, !dbg !16661

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !16662
  %39 = sub i32 %10, %32, !dbg !16664
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.305, i32 0, i32 0), i32 noundef 1) #27, !dbg !16665
  %41 = add i32 %40, %32, !dbg !16666
  call void @llvm.dbg.value(metadata i32 %41, metadata !3169, metadata !DIExpression()), !dbg !16631
  br label %42, !dbg !16667

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !16631
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !16631
  call void @llvm.dbg.value(metadata i8 %44, metadata !3171, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 %43, metadata !3169, metadata !DIExpression()), !dbg !16631
  %45 = add i8 %16, 1, !dbg !16668
  call void @llvm.dbg.value(metadata i8 %45, metadata !3172, metadata !DIExpression()), !dbg !16637
  br label %15, !dbg !16640

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.306, i32 0, i32 0), %3 ], !dbg !16631
  ret i8* %47, !dbg !16669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !16670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16674, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.value(metadata i32 %1, metadata !16675, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.value(metadata i8* %2, metadata !16676, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.value(metadata i32 %3, metadata !16677, metadata !DIExpression()), !dbg !16679
  %5 = icmp ult i32 %1, %3, !dbg !16680
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !16680
  call void @llvm.dbg.value(metadata i32 %6, metadata !16678, metadata !DIExpression()), !dbg !16679
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !16681
  ret i32 %6, !dbg !16682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16687, metadata !DIExpression()), !dbg !16688
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !16689
  ret void, !dbg !16690
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !16691 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16700, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16701, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i32 %2, metadata !16702, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !16703, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i8* %4, metadata !16704, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i8* %5, metadata !16705, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i8* %6, metadata !16706, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i32 %7, metadata !16707, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i32 %8, metadata !16708, metadata !DIExpression()), !dbg !16711
  call void @llvm.dbg.value(metadata i8* undef, metadata !16709, metadata !DIExpression()), !dbg !16711
  %11 = icmp eq i32 %7, 15, !dbg !16712
  br i1 %11, label %12, label %15, !dbg !16712

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !16712
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #27, !dbg !16712
  br i1 %14, label %19, label %18, !dbg !16712

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !16712
  %17 = icmp ult i32 %16, 31, !dbg !16712
  br i1 %17, label %19, label %18, !dbg !16712

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 536) #26, !dbg !16716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.319, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #26, !dbg !16716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 536) #26, !dbg !16716
  unreachable, !dbg !16716

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16718
  tail call fastcc void @z_waitq_init.320(%struct._wait_q_t* noundef nonnull %20) #27, !dbg !16719
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !16720
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !16721
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !16722
  call void @llvm.dbg.value(metadata i8* %22, metadata !16710, metadata !DIExpression()), !dbg !16711
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !16723
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !16724
  store i8* null, i8** %23, align 4, !dbg !16725
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16726
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !16726
  br i1 %25, label %29, label %26, !dbg !16728

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !16729
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !16729
  br label %29, !dbg !16730

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !16711
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !16731
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !16733
  ret i8* %22, !dbg !16734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !16735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16739, metadata !DIExpression()), !dbg !16740
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !16741
  ret i1 %2, !dbg !16742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.320(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !16743 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16747, metadata !DIExpression()), !dbg !16748
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16749
  tail call fastcc void @sys_dlist_init.322(%struct._dnode* noundef %2) #27, !dbg !16750
  ret void, !dbg !16751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !16752 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !16757, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 %1, metadata !16758, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 %2, metadata !16759, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 %3, metadata !16760, metadata !DIExpression()), !dbg !16761
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !16762
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !16763
  %6 = trunc i32 %3 to i8, !dbg !16764
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !16765
  store i8 %6, i8* %7, align 4, !dbg !16766
  %8 = trunc i32 %2 to i8, !dbg !16767
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !16768
  store i8 %8, i8* %9, align 1, !dbg !16769
  %10 = trunc i32 %1 to i8, !dbg !16770
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !16771
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !16771
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !16771
  store i8 %10, i8* %13, align 2, !dbg !16772
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !16773
  store i8 0, i8* %14, align 1, !dbg !16774
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !16775
  ret void, !dbg !16776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !16777 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16781, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16782, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i32 %2, metadata !16783, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i32 0, metadata !16788, metadata !DIExpression()), !dbg !16789
  %4 = add i32 %2, 7, !dbg !16790
  %5 = and i32 %4, -8, !dbg !16790
  %6 = add i32 %5, 64, !dbg !16790
  call void @llvm.dbg.value(metadata i32 %6, metadata !16784, metadata !DIExpression()), !dbg !16789
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.321(%struct.z_thread_stack_element* noundef %1) #27, !dbg !16792
  call void @llvm.dbg.value(metadata i8* %7, metadata !16787, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i32 %5, metadata !16785, metadata !DIExpression()), !dbg !16789
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !16793
  call void @llvm.dbg.value(metadata i8* %8, metadata !16786, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.value(metadata i32 0, metadata !16788, metadata !DIExpression()), !dbg !16789
  %9 = ptrtoint i8* %7 to i32, !dbg !16794
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !16795
  store i32 %9, i32* %10, align 4, !dbg !16796
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !16797
  store i32 %5, i32* %11, align 4, !dbg !16798
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !16799
  store i32 0, i32* %12, align 4, !dbg !16800
  call void @llvm.dbg.value(metadata i8* %8, metadata !16786, metadata !DIExpression()), !dbg !16789
  ret i8* %8, !dbg !16801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.321(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !16802 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !16806, metadata !DIExpression()), !dbg !16807
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !16808
  ret i8* %2, !dbg !16809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16810 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !16815, metadata !DIExpression()), !dbg !16816
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !16817
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16818
  ret void, !dbg !16819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16820 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16822, metadata !DIExpression()), !dbg !16823
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16824
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !16825
  ret void, !dbg !16826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16827 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16831, metadata !DIExpression()), !dbg !16832
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16833
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16834
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16835
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16836
  ret void, !dbg !16837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.322(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16838 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16843, metadata !DIExpression()), !dbg !16844
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16845
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16846
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16847
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16848
  ret void, !dbg !16849
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !16850 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16867, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16858, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !16859, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i32 %2, metadata !16860, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !16861, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i8* %4, metadata !16862, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i8* %5, metadata !16863, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i8* %6, metadata !16864, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i32 %7, metadata !16865, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i32 %8, metadata !16866, metadata !DIExpression()), !dbg !16868
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16869, !srcloc !16587
  call void @llvm.dbg.value(metadata i32 %11, metadata !16583, metadata !DIExpression()) #25, !dbg !16874
  %12 = icmp eq i32 %11, 0, !dbg !16875
  br i1 %12, label %14, label %13, !dbg !16876

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 647) #26, !dbg !16877
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.324, i32 0, i32 0)) #26, !dbg !16877
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 647) #26, !dbg !16877
  unreachable, !dbg !16877

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !16867, metadata !DIExpression()), !dbg !16868
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !16879
  %17 = icmp eq i64 %15, -1, !dbg !16880
  br i1 %17, label %19, label %18, !dbg !16882

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !16883
  br label %19, !dbg !16885

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !16886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16887 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16892, metadata !DIExpression()), !dbg !16893
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16891, metadata !DIExpression()), !dbg !16893
  %4 = icmp eq i64 %3, 0, !dbg !16894
  br i1 %4, label %5, label %6, !dbg !16896

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !16897
  br label %7, !dbg !16899

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !16900
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !16902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16903 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16907, metadata !DIExpression()), !dbg !16908
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16909, !srcloc !16911
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !16912
  ret void, !dbg !16913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16914 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16917, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16916, metadata !DIExpression()), !dbg !16918
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16919
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !16920
  ret void, !dbg !16921
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !16922 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !16924, metadata !DIExpression()), !dbg !16943
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !16944

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 750) #26, !dbg !16948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.328, i32 0, i32 0)) #26, !dbg !16948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 750) #26, !dbg !16948
  unreachable, !dbg !16948

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !16924, metadata !DIExpression()), !dbg !16943
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16951
  br i1 %4, label %6, label %5, !dbg !16952

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !16953
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !16941, metadata !DIExpression()), !dbg !16954
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !16955

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !16959
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !16959
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !16961
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !16961
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !16962
  %12 = load i32, i32* %11, align 4, !dbg !16962
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !16963
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !16963
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !16964
  %16 = load i8*, i8** %15, align 4, !dbg !16964
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !16965
  %18 = load i8*, i8** %17, align 4, !dbg !16965
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !16966
  %20 = load i8*, i8** %19, align 4, !dbg !16966
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !16967
  %22 = load i32, i32* %21, align 4, !dbg !16967
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !16968
  %24 = load i32, i32* %23, align 4, !dbg !16968
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #27, !dbg !16969
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !16970
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !16971
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !16972
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !16972
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !16973
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !16924, metadata !DIExpression()), !dbg !16943
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16974
  br i1 %30, label %1, label %2, !dbg !16944, !llvm.loop !16975

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.316, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 781) #26, !dbg !16977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.328, i32 0, i32 0)) #26, !dbg !16977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.318, i32 0, i32 0), i32 noundef 781) #26, !dbg !16977
  unreachable, !dbg !16977

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !16941, metadata !DIExpression()), !dbg !16954
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16980
  br i1 %34, label %36, label %35, !dbg !16981

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #26, !dbg !16982
  ret void, !dbg !16983

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !16984
  %38 = load i32, i32* %37, align 4, !dbg !16984
  %39 = icmp eq i32 %38, -1, !dbg !16987
  br i1 %39, label %48, label %40, !dbg !16988

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !16989
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !16989
  %43 = icmp sgt i32 %38, 0, !dbg !16991
  %44 = select i1 %43, i32 %38, i32 0, !dbg !16991
  %45 = zext i32 %44 to i64, !dbg !16991
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.329(i64 noundef %45) #27, !dbg !16991
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !16992
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #27, !dbg !16992
  br label %48, !dbg !16993

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !16994
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !16941, metadata !DIExpression()), !dbg !16954
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !16995
  br i1 %50, label %31, label %32, !dbg !16955, !llvm.loop !16996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.329(i64 noundef %0) unnamed_addr #6 !dbg !16998 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17000, metadata !DIExpression()), !dbg !17001
  call void @llvm.dbg.value(metadata i64 %0, metadata !17002, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i32 1000, metadata !17005, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i32 10000, metadata !17006, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i8 1, metadata !17007, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i8 0, metadata !17008, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i8 1, metadata !17009, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i8 0, metadata !17010, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i8 1, metadata !17011, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i8 0, metadata !17012, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i64 0, metadata !17013, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata i64 0, metadata !17013, metadata !DIExpression()), !dbg !17017
  %2 = mul i64 %0, 10, !dbg !17019
  ret i64 %2, !dbg !17025
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !17026 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !17028, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i8* %1, metadata !17029, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i8* %2, metadata !17030, metadata !DIExpression()), !dbg !17032
  call void @llvm.dbg.value(metadata i8* %3, metadata !17031, metadata !DIExpression()), !dbg !17032
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17033
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !17034
  %7 = load i8, i8* %6, align 4, !dbg !17035
  %8 = or i8 %7, 4, !dbg !17035
  store i8 %8, i8* %6, align 4, !dbg !17035
  tail call void @z_thread_essential_clear() #27, !dbg !17036
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !17037
  unreachable, !dbg !17037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17038 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17043, metadata !DIExpression()), !dbg !17045
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !17046
  %3 = load i32, i32* %2, align 4, !dbg !17046
  call void @llvm.dbg.value(metadata i32 %3, metadata !17044, metadata !DIExpression()), !dbg !17045
  %4 = icmp eq i32 %3, 0, !dbg !17047
  br i1 %4, label %10, label %5, !dbg !17049

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !17050
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !17053
  %8 = zext i8 %7 to i32, !dbg !17054
  %9 = icmp eq i32 %6, %8, !dbg !17055
  br i1 %9, label %11, label %10, !dbg !17056

10:                                               ; preds = %5, %1
  br label %11, !dbg !17057

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !17045
  ret i1 %12, !dbg !17058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !17059 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17061, metadata !DIExpression()), !dbg !17062
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !17063
  %3 = load i32, i32* %2, align 4, !dbg !17063
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !17065
  %5 = zext i8 %4 to i32, !dbg !17066
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17067
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !17068
  %8 = or i32 %7, %5, !dbg !17069
  %9 = icmp eq i32 %3, %8, !dbg !17070
  br i1 %9, label %10, label %11, !dbg !17071

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !17072
  br label %11, !dbg !17073

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !17074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !17075 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17079, metadata !DIExpression()), !dbg !17080
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !17081
  %3 = zext i8 %2 to i32, !dbg !17082
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17083
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !17084
  %6 = or i32 %5, %3, !dbg !17085
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !17086
  store i32 %6, i32* %7, align 4, !dbg !17087
  ret void, !dbg !17088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !17089 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17093, metadata !DIExpression()), !dbg !17094
  ret i32 -134, !dbg !17095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !17096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17100, metadata !DIExpression()), !dbg !17102
  call void @llvm.dbg.value(metadata i32 %1, metadata !17101, metadata !DIExpression()), !dbg !17102
  ret i32 -134, !dbg !17103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !17104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17111, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !17112, metadata !DIExpression()), !dbg !17113
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !17114
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !17116
  %6 = select i1 %5, i32 -22, i32 0, !dbg !17113
  ret i32 %6, !dbg !17117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !17118 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !17122, metadata !DIExpression()), !dbg !17123
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !17124
  %3 = select i1 %2, i32 -22, i32 0, !dbg !17123
  ret i32 %3, !dbg !17126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !17127 {
  tail call void @sys_clock_idle_exit() #26, !dbg !17129
  ret void, !dbg !17130
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !17131 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17133, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i8* %1, metadata !17134, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.value(metadata i8* %2, metadata !17135, metadata !DIExpression()), !dbg !17136
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17137
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !17137
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !17137
  %7 = load i8, i8* %6, align 2, !dbg !17137
  %8 = icmp sgt i8 %7, -1, !dbg !17137
  br i1 %8, label %10, label %9, !dbg !17140

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 39) #26, !dbg !17141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.340, i32 0, i32 0), i32 noundef 39) #26, !dbg !17141
  unreachable, !dbg !17141

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17143, !srcloc !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !17146, metadata !DIExpression()) #25, !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !17147, metadata !DIExpression()) #25, !dbg !17151
  tail call fastcc void @k_cpu_idle() #27, !dbg !17152
  br label %10, !dbg !17153, !llvm.loop !17154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !17156 {
  tail call void @arch_cpu_idle() #26, !dbg !17157
  ret void, !dbg !17158
}

; Function Attrs: optsize
declare !dbg !17159 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !17160 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17178, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i8* %1, metadata !17179, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i32 %2, metadata !17180, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i32 %3, metadata !17181, metadata !DIExpression()), !dbg !17182
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17183
  store i32 %2, i32* %5, align 4, !dbg !17184
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !17185
  store i32 %3, i32* %6, align 4, !dbg !17186
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !17187
  store i8* %1, i8** %7, align 4, !dbg !17188
  %8 = mul i32 %3, %2, !dbg !17189
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !17190
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !17191
  store i8* %9, i8** %10, align 4, !dbg !17192
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !17193
  store i8* %1, i8** %11, align 4, !dbg !17194
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !17195
  store i8* %1, i8** %12, align 4, !dbg !17196
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17197
  store i32 0, i32* %13, align 4, !dbg !17198
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !17199
  store i8 0, i8* %14, align 4, !dbg !17200
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17201
  tail call fastcc void @z_waitq_init.341(%struct._wait_q_t* noundef %15) #27, !dbg !17202
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !17203
  store i32 0, i32* %16, align 4, !dbg !17203
  ret void, !dbg !17204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.341(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !17205 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17209, metadata !DIExpression()), !dbg !17210
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17211
  tail call fastcc void @sys_dlist_init.342(%struct._dnode* noundef %2) #27, !dbg !17212
  ret void, !dbg !17213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.342(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17214 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17219, metadata !DIExpression()), !dbg !17220
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17221
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17222
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17223
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17224
  ret void, !dbg !17225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17226 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17230, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i32 %1, metadata !17231, metadata !DIExpression()), !dbg !17236
  call void @llvm.dbg.value(metadata i32 %2, metadata !17232, metadata !DIExpression()), !dbg !17236
  %5 = bitcast i32* %4 to i8*, !dbg !17237
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !17237
  call void @llvm.dbg.value(metadata i32* %4, metadata !17235, metadata !DIExpression(DW_OP_deref)), !dbg !17236
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !17238
  br i1 %6, label %13, label %7, !dbg !17240

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !17241
  call void @llvm.dbg.value(metadata i32 %8, metadata !17235, metadata !DIExpression()), !dbg !17236
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !17243
  call void @llvm.dbg.value(metadata i8* %9, metadata !17233, metadata !DIExpression()), !dbg !17236
  %10 = icmp eq i8* %9, null, !dbg !17244
  br i1 %10, label %13, label %11, !dbg !17246

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !17247
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !17249
  store i8 1, i8* %12, align 4, !dbg !17250
  call void @llvm.dbg.value(metadata i32 0, metadata !17234, metadata !DIExpression()), !dbg !17236
  br label %13, !dbg !17251

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !17252
  call void @llvm.dbg.value(metadata i32 %14, metadata !17234, metadata !DIExpression()), !dbg !17236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !17253
  ret i32 %14, !dbg !17254
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !17255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17260, metadata !DIExpression()), !dbg !17263
  call void @llvm.dbg.value(metadata i32 %1, metadata !17261, metadata !DIExpression()), !dbg !17263
  call void @llvm.dbg.value(metadata i32* %2, metadata !17262, metadata !DIExpression()), !dbg !17263
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !17264
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !17264
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !17264
  store i32 %6, i32* %2, align 4, !dbg !17264
  ret i1 %5, !dbg !17265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !17266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17269, metadata !DIExpression()), !dbg !17270
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #26, !dbg !17271
  ret i8* %2, !dbg !17272
}

; Function Attrs: optsize
declare !dbg !17273 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !17276 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17280, metadata !DIExpression()), !dbg !17281
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17282
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !17282
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !17282
  br i1 %4, label %5, label %15, !dbg !17284

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !17285
  %7 = load i8, i8* %6, align 4, !dbg !17285
  %8 = and i8 %7, 1, !dbg !17287
  %9 = icmp eq i8 %8, 0, !dbg !17288
  br i1 %9, label %15, label %10, !dbg !17289

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !17290
  %12 = load i8*, i8** %11, align 4, !dbg !17290
  tail call void @k_free(i8* noundef %12) #26, !dbg !17292
  %13 = load i8, i8* %6, align 4, !dbg !17293
  %14 = and i8 %13, -2, !dbg !17293
  store i8 %14, i8* %6, align 4, !dbg !17293
  br label %15, !dbg !17294

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !17281
  ret i32 %16, !dbg !17295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17296 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17300, metadata !DIExpression()), !dbg !17301
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17302
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !17303
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17304
  ret %struct.k_thread* %4, !dbg !17305
}

; Function Attrs: optsize
declare !dbg !17306 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17307 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17311, metadata !DIExpression()), !dbg !17312
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !17313
  br i1 %2, label %6, label %3, !dbg !17313

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17314
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17314
  br label %6, !dbg !17313

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17313
  ret %struct._dnode* %7, !dbg !17315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17316 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17320, metadata !DIExpression()), !dbg !17321
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17322
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17322
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17323
  ret i1 %4, !dbg !17324
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17325 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17335, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17333, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i8* %1, metadata !17334, metadata !DIExpression()), !dbg !17343
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17344, !srcloc !17353
  call void @llvm.dbg.value(metadata i32 %5, metadata !17347, metadata !DIExpression()) #25, !dbg !17354
  %6 = icmp eq i32 %5, 0, !dbg !17355
  %7 = icmp eq i64 %4, 0, !dbg !17356
  %8 = select i1 %6, i1 true, i1 %7, !dbg !17356
  br i1 %8, label %10, label %9, !dbg !17356

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.347, i32 0, i32 0), i32 noundef 118) #26, !dbg !17357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.348, i32 0, i32 0)) #26, !dbg !17357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.347, i32 0, i32 0), i32 noundef 118) #26, !dbg !17357
  unreachable, !dbg !17357

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !17359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !17360, metadata !DIExpression()) #25, !dbg !17367
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17369, !srcloc !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17376
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()) #25, !dbg !17376
  call void @llvm.dbg.value(metadata i32 undef, metadata !17366, metadata !DIExpression()) #25, !dbg !17367
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !17377
  br i1 %13, label %15, label %14, !dbg !17380

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17381
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !17381
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17381
  unreachable, !dbg !17381

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17369
  call void @llvm.dbg.value(metadata i32 %16, metadata !17372, metadata !DIExpression()) #25, !dbg !17376
  call void @llvm.dbg.value(metadata i32 %16, metadata !17366, metadata !DIExpression()) #25, !dbg !17367
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !17383
  call void @llvm.dbg.value(metadata i32 %16, metadata !17337, metadata !DIExpression()), !dbg !17343
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17384
  %18 = load i32, i32* %17, align 4, !dbg !17384
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !17386
  %20 = load i32, i32* %19, align 4, !dbg !17386
  %21 = icmp ult i32 %18, %20, !dbg !17387
  br i1 %21, label %22, label %52, !dbg !17388

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17389
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #26, !dbg !17391
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !17336, metadata !DIExpression()), !dbg !17343
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !17392
  br i1 %25, label %34, label %26, !dbg !17394

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !17395
  %28 = load i8*, i8** %27, align 4, !dbg !17395
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17397
  %30 = load i32, i32* %29, align 4, !dbg !17397
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #26, !dbg !17398
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !17399, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.value(metadata i32 0, metadata !17404, metadata !DIExpression()), !dbg !17405
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !17407
  store i32 0, i32* %32, align 4, !dbg !17408
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #26, !dbg !17409
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17410
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #26, !dbg !17410
  br label %64, !dbg !17411

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !17412
  %36 = load i8*, i8** %35, align 4, !dbg !17412
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17414
  %38 = load i32, i32* %37, align 4, !dbg !17414
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #26, !dbg !17415
  %40 = load i32, i32* %37, align 4, !dbg !17416
  %41 = load i8*, i8** %35, align 4, !dbg !17417
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !17417
  store i8* %42, i8** %35, align 4, !dbg !17417
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !17418
  %44 = load i8*, i8** %43, align 4, !dbg !17418
  %45 = icmp eq i8* %42, %44, !dbg !17420
  br i1 %45, label %46, label %49, !dbg !17421

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !17422
  %48 = load i8*, i8** %47, align 4, !dbg !17422
  store i8* %48, i8** %35, align 4, !dbg !17424
  br label %49, !dbg !17425

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !17426
  %51 = add i32 %50, 1, !dbg !17426
  store i32 %51, i32* %17, align 4, !dbg !17426
  call void @llvm.dbg.value(metadata i32 0, metadata !17342, metadata !DIExpression()), !dbg !17343
  br label %59, !dbg !17427

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !17428

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17429
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !17432
  store i8* %1, i8** %55, align 4, !dbg !17433
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17434
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17435
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #26, !dbg !17435
  call void @llvm.dbg.value(metadata i32 %58, metadata !17342, metadata !DIExpression()), !dbg !17343
  br label %64, !dbg !17436

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !17437
  call void @llvm.dbg.value(metadata i32 %60, metadata !17342, metadata !DIExpression()), !dbg !17343
  call void @llvm.dbg.value(metadata i32 undef, metadata !17438, metadata !DIExpression()) #25, !dbg !17444
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !17443, metadata !DIExpression()) #25, !dbg !17444
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !17446
  br i1 %61, label %63, label %62, !dbg !17449

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !17450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17450
  unreachable, !dbg !17450

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17438, metadata !DIExpression()) #25, !dbg !17444
  call void @llvm.dbg.value(metadata i32 %16, metadata !17452, metadata !DIExpression()) #25, !dbg !17455
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !17457, !srcloc !17458
  br label %64, !dbg !17459

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !17343
  ret i32 %65, !dbg !17460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !17461 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17471, metadata !DIExpression()), !dbg !17473
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !17472, metadata !DIExpression()), !dbg !17473
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17474
  %4 = load i32, i32* %3, align 4, !dbg !17474
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !17475
  store i32 %4, i32* %5, align 4, !dbg !17476
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !17477
  %7 = load i32, i32* %6, align 4, !dbg !17477
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !17478
  store i32 %7, i32* %8, align 4, !dbg !17479
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17480
  %10 = load i32, i32* %9, align 4, !dbg !17480
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !17481
  store i32 %10, i32* %11, align 4, !dbg !17482
  ret void, !dbg !17483
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17484 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17490, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17488, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata i8* %1, metadata !17489, metadata !DIExpression()), !dbg !17494
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17495, !srcloc !17353
  call void @llvm.dbg.value(metadata i32 %5, metadata !17347, metadata !DIExpression()) #25, !dbg !17500
  %6 = icmp eq i32 %5, 0, !dbg !17501
  %7 = icmp eq i64 %4, 0, !dbg !17502
  %8 = select i1 %6, i1 true, i1 %7, !dbg !17502
  br i1 %8, label %10, label %9, !dbg !17502

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.347, i32 0, i32 0), i32 noundef 208) #26, !dbg !17503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.348, i32 0, i32 0)) #26, !dbg !17503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.347, i32 0, i32 0), i32 noundef 208) #26, !dbg !17503
  unreachable, !dbg !17503

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !17505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !17360, metadata !DIExpression()) #25, !dbg !17506
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17508, !srcloc !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17510
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()) #25, !dbg !17510
  call void @llvm.dbg.value(metadata i32 undef, metadata !17366, metadata !DIExpression()) #25, !dbg !17506
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !17511
  br i1 %13, label %15, label %14, !dbg !17512

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !17513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17513
  unreachable, !dbg !17513

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17508
  call void @llvm.dbg.value(metadata i32 %16, metadata !17372, metadata !DIExpression()) #25, !dbg !17510
  call void @llvm.dbg.value(metadata i32 %16, metadata !17366, metadata !DIExpression()) #25, !dbg !17506
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !17514
  call void @llvm.dbg.value(metadata i32 %16, metadata !17491, metadata !DIExpression()), !dbg !17494
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17515
  %18 = load i32, i32* %17, align 4, !dbg !17515
  %19 = icmp eq i32 %18, 0, !dbg !17517
  br i1 %19, label %61, label %20, !dbg !17518

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !17519
  %22 = load i8*, i8** %21, align 4, !dbg !17519
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17521
  %24 = load i32, i32* %23, align 4, !dbg !17521
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #26, !dbg !17522
  %26 = load i32, i32* %23, align 4, !dbg !17523
  %27 = load i8*, i8** %21, align 4, !dbg !17524
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !17524
  store i8* %28, i8** %21, align 4, !dbg !17524
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !17525
  %30 = load i8*, i8** %29, align 4, !dbg !17525
  %31 = icmp eq i8* %28, %30, !dbg !17527
  br i1 %31, label %32, label %35, !dbg !17528

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !17529
  %34 = load i8*, i8** %33, align 4, !dbg !17529
  store i8* %34, i8** %21, align 4, !dbg !17531
  br label %35, !dbg !17532

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !17533
  %37 = add i32 %36, -1, !dbg !17533
  store i32 %37, i32* %17, align 4, !dbg !17533
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17534
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #26, !dbg !17535
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !17492, metadata !DIExpression()), !dbg !17494
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !17536
  br i1 %40, label %68, label %41, !dbg !17538

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !17539
  %43 = load i8*, i8** %42, align 4, !dbg !17539
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !17541
  %45 = load i8*, i8** %44, align 4, !dbg !17541
  %46 = load i32, i32* %23, align 4, !dbg !17542
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #26, !dbg !17543
  %48 = load i32, i32* %23, align 4, !dbg !17544
  %49 = load i8*, i8** %42, align 4, !dbg !17545
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !17545
  store i8* %50, i8** %42, align 4, !dbg !17545
  %51 = load i8*, i8** %29, align 4, !dbg !17546
  %52 = icmp eq i8* %50, %51, !dbg !17548
  br i1 %52, label %53, label %56, !dbg !17549

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !17550
  %55 = load i8*, i8** %54, align 4, !dbg !17550
  store i8* %55, i8** %42, align 4, !dbg !17552
  br label %56, !dbg !17553

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !17554
  %58 = add i32 %57, 1, !dbg !17554
  store i32 %58, i32* %17, align 4, !dbg !17554
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !17399, metadata !DIExpression()), !dbg !17555
  call void @llvm.dbg.value(metadata i32 0, metadata !17404, metadata !DIExpression()), !dbg !17555
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !17557
  store i32 0, i32* %59, align 4, !dbg !17558
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #26, !dbg !17559
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17560
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #26, !dbg !17560
  br label %73, !dbg !17561

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !17562

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17563
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !17566
  store i8* %1, i8** %64, align 4, !dbg !17567
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !17568
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17569
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #26, !dbg !17569
  call void @llvm.dbg.value(metadata i32 %67, metadata !17493, metadata !DIExpression()), !dbg !17494
  br label %73, !dbg !17570

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !17571
  call void @llvm.dbg.value(metadata i32 %69, metadata !17493, metadata !DIExpression()), !dbg !17494
  call void @llvm.dbg.value(metadata i32 undef, metadata !17438, metadata !DIExpression()) #25, !dbg !17572
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !17443, metadata !DIExpression()) #25, !dbg !17572
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !17574
  br i1 %70, label %72, label %71, !dbg !17575

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17576
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !17576
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17576
  unreachable, !dbg !17576

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !17438, metadata !DIExpression()) #25, !dbg !17572
  call void @llvm.dbg.value(metadata i32 %16, metadata !17452, metadata !DIExpression()) #25, !dbg !17577
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !17579, !srcloc !17458
  br label %73, !dbg !17580

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !17494
  ret i32 %74, !dbg !17581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17582 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17586, metadata !DIExpression()), !dbg !17590
  call void @llvm.dbg.value(metadata i8* %1, metadata !17587, metadata !DIExpression()), !dbg !17590
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !17591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !17360, metadata !DIExpression()) #25, !dbg !17592
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17594, !srcloc !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17596
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()) #25, !dbg !17596
  call void @llvm.dbg.value(metadata i32 undef, metadata !17366, metadata !DIExpression()) #25, !dbg !17592
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !17597
  br i1 %5, label %7, label %6, !dbg !17598

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !17599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17599
  unreachable, !dbg !17599

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17596
  call void @llvm.dbg.value(metadata i32 undef, metadata !17366, metadata !DIExpression()) #25, !dbg !17592
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !17600
  call void @llvm.dbg.value(metadata i32 undef, metadata !17588, metadata !DIExpression()), !dbg !17590
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17601
  %9 = load i32, i32* %8, align 4, !dbg !17601
  %10 = icmp eq i32 %9, 0, !dbg !17603
  br i1 %10, label %17, label %11, !dbg !17604

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !17605
  %13 = load i8*, i8** %12, align 4, !dbg !17605
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !17607
  %15 = load i32, i32* %14, align 4, !dbg !17607
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #26, !dbg !17608
  call void @llvm.dbg.value(metadata i32 0, metadata !17589, metadata !DIExpression()), !dbg !17590
  br label %17, !dbg !17609

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !17610
  call void @llvm.dbg.value(metadata i32 %18, metadata !17589, metadata !DIExpression()), !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17438, metadata !DIExpression()) #25, !dbg !17611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !17443, metadata !DIExpression()) #25, !dbg !17611
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !17613
  br i1 %19, label %21, label %20, !dbg !17614

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !17615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 194) #26, !dbg !17615
  unreachable, !dbg !17615

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !17594
  call void @llvm.dbg.value(metadata i32 %22, metadata !17372, metadata !DIExpression()) #25, !dbg !17596
  call void @llvm.dbg.value(metadata i32 %22, metadata !17366, metadata !DIExpression()) #25, !dbg !17592
  call void @llvm.dbg.value(metadata i32 %22, metadata !17588, metadata !DIExpression()), !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17438, metadata !DIExpression()) #25, !dbg !17611
  call void @llvm.dbg.value(metadata i32 undef, metadata !17452, metadata !DIExpression()) #25, !dbg !17616
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #25, !dbg !17618, !srcloc !17458
  ret i32 %18, !dbg !17619
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !17620 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !17624, metadata !DIExpression()), !dbg !17627
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !17628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !17360, metadata !DIExpression()) #25, !dbg !17629
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17631, !srcloc !17375
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17633
  call void @llvm.dbg.value(metadata i32 undef, metadata !17373, metadata !DIExpression()) #25, !dbg !17633
  call void @llvm.dbg.value(metadata i32 undef, metadata !17366, metadata !DIExpression()) #25, !dbg !17629
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !17634
  br i1 %4, label %6, label %5, !dbg !17635

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.349, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17636
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.351, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #26, !dbg !17636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.350, i32 0, i32 0), i32 noundef 148) #26, !dbg !17636
  unreachable, !dbg !17636

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17372, metadata !DIExpression()) #25, !dbg !17633
  call void @llvm.dbg.value(metadata i32 undef, metadata !17366, metadata !DIExpression()) #25, !dbg !17629
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !17637
  call void @llvm.dbg.value(metadata i32 undef, metadata !17625, metadata !DIExpression()), !dbg !17627
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !17638
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17626, metadata !DIExpression()), !dbg !17627
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17639
  br i1 %9, label %15, label %10, !dbg !17640

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !17399, metadata !DIExpression()), !dbg !17641
  call void @llvm.dbg.value(metadata i32 -35, metadata !17404, metadata !DIExpression()), !dbg !17641
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !17644
  store i32 -35, i32* %12, align 4, !dbg !17645
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #26, !dbg !17646
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !17638
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !17626, metadata !DIExpression()), !dbg !17627
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !17639
  br i1 %14, label %15, label %10, !dbg !17640, !llvm.loop !17647

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !17631
  call void @llvm.dbg.value(metadata i32 %16, metadata !17372, metadata !DIExpression()) #25, !dbg !17633
  call void @llvm.dbg.value(metadata i32 %16, metadata !17366, metadata !DIExpression()) #25, !dbg !17629
  call void @llvm.dbg.value(metadata i32 %16, metadata !17625, metadata !DIExpression()), !dbg !17627
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !17649
  store i32 0, i32* %17, align 4, !dbg !17650
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !17651
  %19 = load i8*, i8** %18, align 4, !dbg !17651
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !17652
  store i8* %19, i8** %20, align 4, !dbg !17653
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !17654
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #26, !dbg !17654
  ret void, !dbg !17655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #9 !dbg !17656 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17667, metadata !DIExpression()), !dbg !17668
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17669
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !17670
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !17671
  store i32 0, i32* %3, align 4, !dbg !17672
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !17673
  tail call fastcc void @z_waitq_init.356(%struct._wait_q_t* noundef %4) #27, !dbg !17674
  ret i32 0, !dbg !17675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.356(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !17676 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17680, metadata !DIExpression()), !dbg !17681
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17682
  tail call fastcc void @sys_dlist_init.357(%struct._dnode* noundef %2) #27, !dbg !17683
  ret void, !dbg !17684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.357(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17685 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17690, metadata !DIExpression()), !dbg !17691
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17692
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17693
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17694
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17695
  ret void, !dbg !17696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17697 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17706, metadata !DIExpression()), !dbg !17718
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17705, metadata !DIExpression()), !dbg !17718
  call void @llvm.dbg.value(metadata i8 0, metadata !17713, metadata !DIExpression()), !dbg !17718
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17719, !srcloc !17728
  call void @llvm.dbg.value(metadata i32 %4, metadata !17722, metadata !DIExpression()) #25, !dbg !17729
  %5 = icmp eq i32 %4, 0, !dbg !17730
  br i1 %5, label %7, label %6, !dbg !17731

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.362, i32 0, i32 0), i32 noundef 101) #26, !dbg !17732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.363, i32 0, i32 0)) #26, !dbg !17732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.362, i32 0, i32 0), i32 noundef 101) #26, !dbg !17732
  unreachable, !dbg !17732

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.364, metadata !17734, metadata !DIExpression()) #25, !dbg !17741
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17743, !srcloc !17749
  call void @llvm.dbg.value(metadata i32 undef, metadata !17746, metadata !DIExpression()) #25, !dbg !17750
  call void @llvm.dbg.value(metadata i32 undef, metadata !17747, metadata !DIExpression()) #25, !dbg !17750
  call void @llvm.dbg.value(metadata i32 undef, metadata !17740, metadata !DIExpression()) #25, !dbg !17741
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17751
  br i1 %9, label %11, label %10, !dbg !17754

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 148) #26, !dbg !17755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 148) #26, !dbg !17755
  unreachable, !dbg !17755

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !17743
  call void @llvm.dbg.value(metadata i32 %12, metadata !17746, metadata !DIExpression()) #25, !dbg !17750
  call void @llvm.dbg.value(metadata i32 %12, metadata !17740, metadata !DIExpression()) #25, !dbg !17741
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17757
  call void @llvm.dbg.value(metadata i32 %12, metadata !17708, metadata !DIExpression()), !dbg !17718
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !17758
  %14 = load i32, i32* %13, align 4, !dbg !17758
  %15 = icmp eq i32 %14, 0, !dbg !17758
  br i1 %15, label %21, label %16, !dbg !17758

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17758
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !17758
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17758
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !17758
  br i1 %20, label %27, label %39, !dbg !17760, !prof !17761

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17762
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !17764
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !17764
  %25 = load i8, i8* %24, align 2, !dbg !17764
  %26 = sext i8 %25 to i32, !dbg !17762
  br label %30, !dbg !17765

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17766
  %29 = load i32, i32* %28, align 4, !dbg !17766
  br label %30, !dbg !17765

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !17767
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !17765
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17768
  store i32 %32, i32* %33, align 4, !dbg !17769
  %34 = add i32 %14, 1, !dbg !17770
  store i32 %34, i32* %13, align 4, !dbg !17770
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17771
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !17773, metadata !DIExpression()) #25, !dbg !17779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.364, metadata !17778, metadata !DIExpression()) #25, !dbg !17779
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17781
  br i1 %36, label %38, label %37, !dbg !17784

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !17785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.369, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !17785
  unreachable, !dbg !17785

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !17773, metadata !DIExpression()) #25, !dbg !17779
  call void @llvm.dbg.value(metadata i32 %12, metadata !17787, metadata !DIExpression()) #25, !dbg !17790
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17792, !srcloc !17793
  br label %97, !dbg !17794

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !17795
  br i1 %40, label %41, label %45, !dbg !17797, !prof !17798

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !17773, metadata !DIExpression()) #25, !dbg !17799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.364, metadata !17778, metadata !DIExpression()) #25, !dbg !17799
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17802
  br i1 %42, label %44, label %43, !dbg !17803

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !17804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.369, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !17804
  unreachable, !dbg !17804

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !17773, metadata !DIExpression()) #25, !dbg !17799
  call void @llvm.dbg.value(metadata i32 %12, metadata !17787, metadata !DIExpression()) #25, !dbg !17805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !17807, !srcloc !17793
  br label %97, !dbg !17808

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !17809
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !17809
  %48 = load i8, i8* %47, align 2, !dbg !17809
  %49 = sext i8 %48 to i32, !dbg !17810
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !17811
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !17811
  %52 = load i8, i8* %51, align 2, !dbg !17811
  %53 = sext i8 %52 to i32, !dbg !17812
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #27, !dbg !17813
  call void @llvm.dbg.value(metadata i32 %54, metadata !17707, metadata !DIExpression()), !dbg !17718
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #27, !dbg !17814
  br i1 %55, label %56, label %58, !dbg !17816

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #27, !dbg !17817
  call void @llvm.dbg.value(metadata i1 %57, metadata !17713, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17718
  br label %58, !dbg !17819

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !17713, metadata !DIExpression()), !dbg !17718
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !17820
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !17821
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.364, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !17821
  call void @llvm.dbg.value(metadata i32 %62, metadata !17714, metadata !DIExpression()), !dbg !17718
  %63 = icmp eq i32 %62, 0, !dbg !17822
  br i1 %63, label %97, label %64, !dbg !17824

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.364, metadata !17734, metadata !DIExpression()) #25, !dbg !17825
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17827, !srcloc !17749
  call void @llvm.dbg.value(metadata i32 undef, metadata !17746, metadata !DIExpression()) #25, !dbg !17829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17747, metadata !DIExpression()) #25, !dbg !17829
  call void @llvm.dbg.value(metadata i32 undef, metadata !17740, metadata !DIExpression()) #25, !dbg !17825
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17830
  br i1 %66, label %68, label %67, !dbg !17831

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 148) #26, !dbg !17832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 148) #26, !dbg !17832
  unreachable, !dbg !17832

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !17827
  call void @llvm.dbg.value(metadata i32 %69, metadata !17746, metadata !DIExpression()) #25, !dbg !17829
  call void @llvm.dbg.value(metadata i32 %69, metadata !17740, metadata !DIExpression()) #25, !dbg !17825
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17833
  call void @llvm.dbg.value(metadata i32 %69, metadata !17708, metadata !DIExpression()), !dbg !17718
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !17834
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !17834
  br i1 %71, label %90, label %72, !dbg !17835, !prof !17798

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.370(%struct._wait_q_t* noundef nonnull %60) #27, !dbg !17836
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !17715, metadata !DIExpression()), !dbg !17837
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !17838
  br i1 %74, label %83, label %75, !dbg !17839

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !17840
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !17840
  %78 = load i8, i8* %77, align 2, !dbg !17840
  %79 = sext i8 %78 to i32, !dbg !17841
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17842
  %81 = load i32, i32* %80, align 4, !dbg !17842
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #27, !dbg !17843
  br label %86, !dbg !17839

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17844
  %85 = load i32, i32* %84, align 4, !dbg !17844
  br label %86, !dbg !17839

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !17839
  call void @llvm.dbg.value(metadata i32 %87, metadata !17707, metadata !DIExpression()), !dbg !17718
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #27, !dbg !17845
  %89 = select i1 %88, i1 true, i1 %59, !dbg !17846
  call void @llvm.dbg.value(metadata i1 %89, metadata !17713, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17718
  call void @llvm.dbg.value(metadata i8 poison, metadata !17713, metadata !DIExpression()), !dbg !17718
  br i1 %89, label %91, label %93, !dbg !17847

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !17713, metadata !DIExpression()), !dbg !17718
  br i1 %59, label %91, label %93, !dbg !17847

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !17848
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.364, [1 x i32] %92) #26, !dbg !17848
  br label %97, !dbg !17851

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !17773, metadata !DIExpression()) #25, !dbg !17852
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.364, metadata !17778, metadata !DIExpression()) #25, !dbg !17852
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17855
  br i1 %94, label %96, label %95, !dbg !17856

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !17857
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.369, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17857
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !17857
  unreachable, !dbg !17857

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !17773, metadata !DIExpression()) #25, !dbg !17852
  call void @llvm.dbg.value(metadata i32 %69, metadata !17787, metadata !DIExpression()) #25, !dbg !17858
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #25, !dbg !17860, !srcloc !17793
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !17718
  ret i32 %98, !dbg !17861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !17862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17866, metadata !DIExpression()), !dbg !17869
  call void @llvm.dbg.value(metadata i32 %1, metadata !17867, metadata !DIExpression()), !dbg !17869
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !17870
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !17870
  call void @llvm.dbg.value(metadata i32 %4, metadata !17868, metadata !DIExpression()), !dbg !17869
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !17871
  call void @llvm.dbg.value(metadata i32 %5, metadata !17868, metadata !DIExpression()), !dbg !17869
  ret i32 %5, !dbg !17872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !17873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17877, metadata !DIExpression()), !dbg !17879
  call void @llvm.dbg.value(metadata i32 %1, metadata !17878, metadata !DIExpression()), !dbg !17879
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !17880
  ret i1 %3, !dbg !17881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !17882 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17886, metadata !DIExpression()), !dbg !17888
  call void @llvm.dbg.value(metadata i32 %1, metadata !17887, metadata !DIExpression()), !dbg !17888
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17889
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !17889
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !17891
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !17891
  %7 = load i8, i8* %6, align 2, !dbg !17891
  %8 = sext i8 %7 to i32, !dbg !17892
  %9 = icmp eq i32 %8, %1, !dbg !17893
  br i1 %9, label %12, label %10, !dbg !17894

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !17895
  br label %12, !dbg !17897

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !17888
  ret i1 %13, !dbg !17898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.370(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17899 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17903, metadata !DIExpression()), !dbg !17904
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17905
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.371(%struct._dnode* noundef %2) #27, !dbg !17906
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17907
  ret %struct.k_thread* %4, !dbg !17908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.371(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !17909 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17913, metadata !DIExpression()), !dbg !17914
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.372(%struct._dnode* noundef %0) #27, !dbg !17915
  br i1 %2, label %6, label %3, !dbg !17915

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17916
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17916
  br label %6, !dbg !17915

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !17915
  ret %struct._dnode* %7, !dbg !17917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.372(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17918 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17922, metadata !DIExpression()), !dbg !17923
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17924
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17924
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17925
  ret i1 %4, !dbg !17926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !17927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17929, metadata !DIExpression()), !dbg !17931
  call void @llvm.dbg.value(metadata i32 %1, metadata !17930, metadata !DIExpression()), !dbg !17931
  %3 = icmp slt i32 %0, %1, !dbg !17932
  ret i1 %3, !dbg !17933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !17934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17936, metadata !DIExpression()), !dbg !17937
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !17938
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !17938
  ret i32 %3, !dbg !17939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !17940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17944, metadata !DIExpression()), !dbg !17945
  %2 = icmp sgt i32 %0, -128, !dbg !17946
  ret i1 %2, !dbg !17947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !17948 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17950, metadata !DIExpression()), !dbg !17954
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17955, !srcloc !17728
  call void @llvm.dbg.value(metadata i32 %2, metadata !17722, metadata !DIExpression()) #25, !dbg !17960
  %3 = icmp eq i32 %2, 0, !dbg !17961
  br i1 %3, label %5, label %4, !dbg !17962

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.362, i32 0, i32 0), i32 noundef 205) #26, !dbg !17963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.363, i32 0, i32 0)) #26, !dbg !17963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.362, i32 0, i32 0), i32 noundef 205) #26, !dbg !17963
  unreachable, !dbg !17963

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !17965
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !17965
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17965
  br i1 %8, label %41, label %9, !dbg !17967

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17968
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !17968
  br i1 %11, label %12, label %41, !dbg !17970

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !17971
  %14 = load i32, i32* %13, align 4, !dbg !17971
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !17974

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.362, i32 0, i32 0), i32 noundef 229) #26, !dbg !17975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.362, i32 0, i32 0), i32 noundef 229) #26, !dbg !17975
  unreachable, !dbg !17975

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !17977
  store i32 %17, i32* %13, align 4, !dbg !17977
  br label %41, !dbg !17980

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.364, metadata !17734, metadata !DIExpression()) #25, !dbg !17981
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17983, !srcloc !17749
  call void @llvm.dbg.value(metadata i32 undef, metadata !17746, metadata !DIExpression()) #25, !dbg !17985
  call void @llvm.dbg.value(metadata i32 undef, metadata !17747, metadata !DIExpression()) #25, !dbg !17985
  call void @llvm.dbg.value(metadata i32 undef, metadata !17740, metadata !DIExpression()) #25, !dbg !17981
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17986
  br i1 %20, label %22, label %21, !dbg !17987

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 148) #26, !dbg !17988
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17988
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 148) #26, !dbg !17988
  unreachable, !dbg !17988

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17983
  call void @llvm.dbg.value(metadata i32 %23, metadata !17746, metadata !DIExpression()) #25, !dbg !17985
  call void @llvm.dbg.value(metadata i32 %23, metadata !17740, metadata !DIExpression()) #25, !dbg !17981
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !17989
  call void @llvm.dbg.value(metadata i32 %23, metadata !17952, metadata !DIExpression()), !dbg !17954
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !17990
  %25 = load i32, i32* %24, align 4, !dbg !17990
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #27, !dbg !17991
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !17992
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !17993
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !17951, metadata !DIExpression()), !dbg !17954
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !17994
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !17995
  br i1 %29, label %37, label %30, !dbg !17997

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !17998
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !17998
  %33 = load i8, i8* %32, align 2, !dbg !17998
  %34 = sext i8 %33 to i32, !dbg !18000
  store i32 %34, i32* %24, align 4, !dbg !18001
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !18002, metadata !DIExpression()), !dbg !18008
  call void @llvm.dbg.value(metadata i32 0, metadata !18007, metadata !DIExpression()), !dbg !18008
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 7, i32 1, !dbg !18010
  store i32 0, i32* %35, align 4, !dbg !18011
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !18012
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !18013
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.364, [1 x i32] %36) #26, !dbg !18013
  br label %41, !dbg !18014

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !18015
  call void @llvm.dbg.value(metadata i32 undef, metadata !17773, metadata !DIExpression()) #25, !dbg !18017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.364, metadata !17778, metadata !DIExpression()) #25, !dbg !18017
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !18019
  br i1 %38, label %40, label %39, !dbg !18020

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !18021
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.369, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.364) #26, !dbg !18021
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.366, i32 0, i32 0), i32 noundef 194) #26, !dbg !18021
  unreachable, !dbg !18021

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !17773, metadata !DIExpression()) #25, !dbg !18017
  call void @llvm.dbg.value(metadata i32 %23, metadata !17787, metadata !DIExpression()) #25, !dbg !18022
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !18024, !srcloc !17793
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !17954
  ret i32 %42, !dbg !18025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !18026 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18030, metadata !DIExpression()), !dbg !18034
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18031, metadata !DIExpression()), !dbg !18034
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !18035
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !18035
  %5 = load i8, i8* %4, align 2, !dbg !18035
  call void @llvm.dbg.value(metadata i8 %5, metadata !18032, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !18034
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !18036
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !18036
  %8 = load i8, i8* %7, align 2, !dbg !18036
  call void @llvm.dbg.value(metadata i8 %8, metadata !18033, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !18034
  %9 = icmp eq i8 %8, %5, !dbg !18037
  %10 = sext i8 %5 to i32, !dbg !18039
  %11 = sext i8 %8 to i32, !dbg !18039
  %12 = sub nsw i32 %11, %10, !dbg !18039
  %13 = select i1 %9, i32 0, i32 %12, !dbg !18039
  ret i32 %13, !dbg !18040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !18041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !18045, metadata !DIExpression()), !dbg !18046
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !18047
  %3 = icmp eq i32 %2, 0, !dbg !18049
  br i1 %3, label %8, label %4, !dbg !18050

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !18051
  %6 = add i32 %5, %2, !dbg !18053
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18054
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !18055
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !18056
  br label %8, !dbg !18057

8:                                                ; preds = %4, %1
  ret void, !dbg !18058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !18059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !18063, metadata !DIExpression()), !dbg !18065
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !18066
  call void @llvm.dbg.value(metadata i32 %1, metadata !18064, metadata !DIExpression()), !dbg !18065
  ret i32 %1, !dbg !18067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18072, metadata !DIExpression()), !dbg !18081
  call void @llvm.dbg.value(metadata i32 %1, metadata !18073, metadata !DIExpression()), !dbg !18081
  call void @llvm.dbg.value(metadata i32 0, metadata !18074, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18090
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18092, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18099
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18099
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18090
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18100
  br i1 %4, label %6, label %5, !dbg !18103

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18104
  unreachable, !dbg !18104

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18099
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18090
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18106
  call void @llvm.dbg.value(metadata i32 undef, metadata !18080, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !18074, metadata !DIExpression()), !dbg !18082
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18107
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !18110
  %8 = icmp sgt i32 %0, 0, !dbg !18111
  %9 = icmp sgt i32 %7, 2, !dbg !18113
  %10 = select i1 %9, i32 %7, i32 2, !dbg !18113
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !18113
  store i32 %11, i32* @slice_ticks, align 4, !dbg !18114
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !18115
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !18116
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18123
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18125
  br i1 %12, label %14, label %13, !dbg !18128

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18129
  unreachable, !dbg !18129

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !18092
  call void @llvm.dbg.value(metadata i32 %15, metadata !18095, metadata !DIExpression()) #25, !dbg !18099
  call void @llvm.dbg.value(metadata i32 %15, metadata !18089, metadata !DIExpression()) #25, !dbg !18090
  call void @llvm.dbg.value(metadata i32 %15, metadata !18080, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18123
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !18134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !18136, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !18074, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.value(metadata i32 undef, metadata !18074, metadata !DIExpression()), !dbg !18082
  ret void, !dbg !18138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !18139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18141, metadata !DIExpression()), !dbg !18142
  call void @llvm.dbg.value(metadata i32 %0, metadata !18143, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18158
  call void @llvm.dbg.value(metadata i32 1000, metadata !18146, metadata !DIExpression()), !dbg !18158
  call void @llvm.dbg.value(metadata i32 10000, metadata !18147, metadata !DIExpression()), !dbg !18158
  call void @llvm.dbg.value(metadata i8 1, metadata !18148, metadata !DIExpression()), !dbg !18158
  call void @llvm.dbg.value(metadata i1 true, metadata !18149, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18158
  call void @llvm.dbg.value(metadata i1 true, metadata !18150, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18158
  call void @llvm.dbg.value(metadata i8 0, metadata !18151, metadata !DIExpression()), !dbg !18158
  call void @llvm.dbg.value(metadata i1 true, metadata !18152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18158
  call void @llvm.dbg.value(metadata i1 false, metadata !18153, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18158
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !18158
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !18158
  %2 = mul i32 %0, 10, !dbg !18160
  ret i32 %2, !dbg !18166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !18167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18169, metadata !DIExpression()), !dbg !18171
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18172
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18174, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18176
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18176
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18172
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18177
  br i1 %3, label %5, label %4, !dbg !18178

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18179
  unreachable, !dbg !18179

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18174
  call void @llvm.dbg.value(metadata i32 %6, metadata !18095, metadata !DIExpression()) #25, !dbg !18176
  call void @llvm.dbg.value(metadata i32 %6, metadata !18089, metadata !DIExpression()) #25, !dbg !18172
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18180
  call void @llvm.dbg.value(metadata i32 %6, metadata !18170, metadata !DIExpression()), !dbg !18171
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !18181
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18183
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !18184
  br i1 %9, label %10, label %14, !dbg !18185

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !18186
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18188
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18190
  br i1 %11, label %13, label %12, !dbg !18191

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18192
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18192
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18192
  unreachable, !dbg !18192

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !18117, metadata !DIExpression()) #25, !dbg !18188
  call void @llvm.dbg.value(metadata i32 %6, metadata !18131, metadata !DIExpression()) #25, !dbg !18193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18195, !srcloc !18137
  br label %33, !dbg !18196

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !18197
  %15 = tail call fastcc i32 @slice_time() #27, !dbg !18198
  %16 = icmp eq i32 %15, 0, !dbg !18198
  br i1 %16, label %27, label %17, !dbg !18200

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #27, !dbg !18201
  br i1 %18, label %19, label %27, !dbg !18202

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18203
  %21 = icmp sgt i32 %20, %0, !dbg !18206
  br i1 %21, label %25, label %22, !dbg !18207

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !18208
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #27, !dbg !18208
  call void @llvm.dbg.value(metadata i32 %24, metadata !18170, metadata !DIExpression()), !dbg !18171
  br label %28, !dbg !18210

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !18211
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18211
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !18213
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !18171
  call void @llvm.dbg.value(metadata i32 %29, metadata !18170, metadata !DIExpression()), !dbg !18171
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18215
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18217
  br i1 %30, label %32, label %31, !dbg !18218

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18219
  unreachable, !dbg !18219

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !18117, metadata !DIExpression()) #25, !dbg !18215
  call void @llvm.dbg.value(metadata i32 %29, metadata !18131, metadata !DIExpression()) #25, !dbg !18220
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !18222, !srcloc !18137
  br label %33, !dbg !18223

33:                                               ; preds = %32, %13
  ret void, !dbg !18223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !18224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18228, metadata !DIExpression()), !dbg !18230
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !18231
  %3 = icmp eq i32 %2, 0, !dbg !18231
  br i1 %3, label %16, label %4, !dbg !18232

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !18233
  br i1 %5, label %16, label %6, !dbg !18234

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !18235
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !18235
  %9 = load i8, i8* %8, align 2, !dbg !18235
  %10 = sext i8 %9 to i32, !dbg !18236
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !18237
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.389(i32 noundef %10, i32 noundef %11) #27, !dbg !18238
  br i1 %12, label %16, label %13, !dbg !18239

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !18240
  %15 = xor i1 %14, true, !dbg !18241
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !18230
  call void @llvm.dbg.value(metadata i1 %17, metadata !18229, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18230
  ret i1 %17, !dbg !18242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !18243 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18247, metadata !DIExpression()), !dbg !18249
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18250
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18248, metadata !DIExpression()), !dbg !18249
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !18251
  br i1 %3, label %5, label %4, !dbg !18253

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !18254
  br label %5, !dbg !18256

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !18247, metadata !DIExpression()), !dbg !18249
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !18257
  ret i32 %6, !dbg !18258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18261, metadata !DIExpression()), !dbg !18263
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18264
  %3 = load i8, i8* %2, align 1, !dbg !18264
  call void @llvm.dbg.value(metadata i8 %3, metadata !18262, metadata !DIExpression()), !dbg !18263
  %4 = and i8 %3, 31, !dbg !18265
  %5 = icmp ne i8 %4, 0, !dbg !18266
  ret i1 %5, !dbg !18267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18268 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18270, metadata !DIExpression()), !dbg !18271
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !18272
  br i1 %2, label %3, label %7, !dbg !18274

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18275, metadata !DIExpression()) #25, !dbg !18278
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18281
  %5 = load i8, i8* %4, align 1, !dbg !18282
  %6 = and i8 %5, 127, !dbg !18282
  store i8 %6, i8* %4, align 1, !dbg !18282
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18283, metadata !DIExpression()) #25, !dbg !18286
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !18290
  br label %7, !dbg !18291

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18292, metadata !DIExpression()) #25, !dbg !18295
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18297
  %9 = load i8, i8* %8, align 1, !dbg !18298
  %10 = or i8 %9, -128, !dbg !18298
  store i8 %10, i8* %8, align 1, !dbg !18298
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18299, metadata !DIExpression()) #25, !dbg !18302
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !18306, metadata !DIExpression()) #25, !dbg !18314
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18312, metadata !DIExpression()) #25, !dbg !18314
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !18316
  br i1 %11, label %12, label %13, !dbg !18319

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !18320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !18320
  unreachable, !dbg !18320

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18322
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !18313, metadata !DIExpression()) #25, !dbg !18314
  %15 = icmp eq %struct._dnode* %14, null, !dbg !18324
  br i1 %15, label %26, label %16, !dbg !18322

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !18313, metadata !DIExpression()) #25, !dbg !18314
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !18326
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !18313, metadata !DIExpression()) #25, !dbg !18314
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #26, !dbg !18327
  %20 = icmp sgt i32 %19, 0, !dbg !18330
  br i1 %20, label %21, label %23, !dbg !18331

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18332
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #26, !dbg !18334
  br label %28, !dbg !18335

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #26, !dbg !18324
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !18313, metadata !DIExpression()) #25, !dbg !18314
  %25 = icmp eq %struct._dnode* %24, null, !dbg !18324
  br i1 %25, label %26, label %16, !dbg !18322, !llvm.loop !18336

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18338
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #26, !dbg !18339
  br label %28, !dbg !18340

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18341
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !18342
  %31 = zext i1 %30 to i32, !dbg !18342
  tail call fastcc void @update_cache(i32 noundef %31) #27, !dbg !18343
  ret void, !dbg !18344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18347, metadata !DIExpression()), !dbg !18348
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #27, !dbg !18349
  ret i1 %2, !dbg !18350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18351 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !18353, metadata !DIExpression()), !dbg !18355
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18354, metadata !DIExpression()), !dbg !18355
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !18356
  br i1 %3, label %4, label %5, !dbg !18359

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1139) #26, !dbg !18360
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1139) #26, !dbg !18360
  unreachable, !dbg !18360

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !18362
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #27, !dbg !18363
  ret void, !dbg !18364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !18365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18367, metadata !DIExpression()), !dbg !18368
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !18369
  ret i1 %2, !dbg !18370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !18371 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18375, metadata !DIExpression()), !dbg !18376
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.387(%struct._dnode* noundef %0) #27, !dbg !18377
  br i1 %2, label %6, label %3, !dbg !18377

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18378
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18378
  br label %6, !dbg !18377

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !18377
  ret %struct._dnode* %7, !dbg !18379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !18380 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18384, metadata !DIExpression()), !dbg !18388
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18385, metadata !DIExpression()), !dbg !18388
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18389
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18389
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18386, metadata !DIExpression()), !dbg !18388
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18390
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18391
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18392
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18393
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18394
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18395
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18396
  ret void, !dbg !18397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !18398 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18402, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18403, metadata !DIExpression()), !dbg !18404
  %3 = icmp eq %struct._dnode* %1, null, !dbg !18405
  br i1 %3, label %6, label %4, !dbg !18406

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !18407
  br label %6, !dbg !18406

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !18406
  ret %struct._dnode* %7, !dbg !18408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !18409 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18413, metadata !DIExpression()), !dbg !18416
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18414, metadata !DIExpression()), !dbg !18416
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18417
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18417
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18415, metadata !DIExpression()), !dbg !18416
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18418
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18419
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18420
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !18421
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18422
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18423
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18424
  ret void, !dbg !18425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !18426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18428, metadata !DIExpression()), !dbg !18430
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18431
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18438, metadata !DIExpression()) #25, !dbg !18440
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18441
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !18442
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !18442
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18429, metadata !DIExpression()), !dbg !18430
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18443, metadata !DIExpression()) #25, !dbg !18449
  call void @llvm.dbg.value(metadata i32 %0, metadata !18448, metadata !DIExpression()) #25, !dbg !18449
  %6 = icmp eq i32 %0, 0, !dbg !18452
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18454
  br i1 %6, label %8, label %18, !dbg !18455

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !18456
  br i1 %9, label %10, label %11, !dbg !18459

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 137) #26, !dbg !18460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !18460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 137) #26, !dbg !18460
  unreachable, !dbg !18460

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !18462
  br i1 %12, label %18, label %13, !dbg !18464

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !18465
  br i1 %14, label %18, label %15, !dbg !18467

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !18468
  %17 = icmp eq i32 %16, 0, !dbg !18468
  br i1 %17, label %21, label %18, !dbg !18470

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !18471
  br i1 %19, label %21, label %20, !dbg !18474

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !18475
  br label %21, !dbg !18477

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !18454
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !18454
  ret void, !dbg !18478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !18479 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18483, metadata !DIExpression()), !dbg !18486
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18484, metadata !DIExpression()), !dbg !18486
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef %0) #27, !dbg !18487
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18485, metadata !DIExpression()), !dbg !18486
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !18484, metadata !DIExpression()), !dbg !18486
  ret %struct.k_thread* %3, !dbg !18488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18489 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18491, metadata !DIExpression()), !dbg !18492
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !18493
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !18494
  %4 = xor i1 %3, true, !dbg !18495
  ret i1 %4, !dbg !18496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18499, metadata !DIExpression()), !dbg !18500
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !18501
  %3 = load i16, i16* %2, align 2, !dbg !18501
  %4 = icmp ult i16 %3, 128, !dbg !18502
  %5 = zext i1 %4 to i32, !dbg !18502
  ret i32 %5, !dbg !18503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18504 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18510, metadata !DIExpression()), !dbg !18511
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18512
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !18513
  %4 = xor i1 %3, true, !dbg !18514
  ret i1 %4, !dbg !18515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18516 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18522, metadata !DIExpression()), !dbg !18523
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18524
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18524
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18525
  ret i1 %4, !dbg !18526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !18527 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18529, metadata !DIExpression()), !dbg !18531
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18530, metadata !DIExpression()), !dbg !18531
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18532
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18532
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !18533
  br i1 %5, label %9, label %6, !dbg !18534

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18535
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !18535
  br label %9, !dbg !18534

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !18534
  ret %struct._dnode* %10, !dbg !18536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.387(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !18537 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18541, metadata !DIExpression()), !dbg !18542
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18543
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18543
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !18544
  ret i1 %4, !dbg !18545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18546 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18550, metadata !DIExpression()), !dbg !18553
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18554
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18554
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18551, metadata !DIExpression()), !dbg !18553
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18555
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18555
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18552, metadata !DIExpression()), !dbg !18553
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18556
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18557
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18558
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18559
  tail call fastcc void @sys_dnode_init.388(%struct._dnode* noundef %0) #27, !dbg !18560
  ret void, !dbg !18561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.388(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18562 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18564, metadata !DIExpression()), !dbg !18565
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18566
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18567
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18568
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18569
  ret void, !dbg !18570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !18571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18575, metadata !DIExpression()), !dbg !18577
  call void @llvm.dbg.value(metadata i32 %1, metadata !18576, metadata !DIExpression()), !dbg !18577
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18578
  %4 = load i8, i8* %3, align 1, !dbg !18578
  %5 = zext i8 %4 to i32, !dbg !18579
  %6 = and i32 %5, %1, !dbg !18580
  %7 = icmp ne i32 %6, 0, !dbg !18581
  ret i1 %7, !dbg !18582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.389(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !18583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18585, metadata !DIExpression()), !dbg !18587
  call void @llvm.dbg.value(metadata i32 %1, metadata !18586, metadata !DIExpression()), !dbg !18587
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.390(i32 noundef %0, i32 noundef %1) #27, !dbg !18588
  ret i1 %3, !dbg !18589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.390(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !18590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18592, metadata !DIExpression()), !dbg !18594
  call void @llvm.dbg.value(metadata i32 %1, metadata !18593, metadata !DIExpression()), !dbg !18594
  %3 = icmp slt i32 %0, %1, !dbg !18595
  ret i1 %3, !dbg !18596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18599, metadata !DIExpression()), !dbg !18603
  call void @llvm.dbg.value(metadata i32 0, metadata !18600, metadata !DIExpression()), !dbg !18604
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18605
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18607, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18609
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18609
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18605
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18610
  br i1 %3, label %5, label %4, !dbg !18611

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18612
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18612
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18612
  unreachable, !dbg !18612

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18609
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18605
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18613
  call void @llvm.dbg.value(metadata i32 undef, metadata !18602, metadata !DIExpression()), !dbg !18604
  call void @llvm.dbg.value(metadata i32 undef, metadata !18600, metadata !DIExpression()), !dbg !18604
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18614
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18619
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18621
  br i1 %6, label %8, label %7, !dbg !18622

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18623
  unreachable, !dbg !18623

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18607
  call void @llvm.dbg.value(metadata i32 %9, metadata !18095, metadata !DIExpression()) #25, !dbg !18609
  call void @llvm.dbg.value(metadata i32 %9, metadata !18089, metadata !DIExpression()) #25, !dbg !18605
  call void @llvm.dbg.value(metadata i32 %9, metadata !18602, metadata !DIExpression()), !dbg !18604
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18619
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !18624
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18626, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !18600, metadata !DIExpression()), !dbg !18604
  call void @llvm.dbg.value(metadata i32 undef, metadata !18600, metadata !DIExpression()), !dbg !18604
  ret void, !dbg !18627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18628 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18630, metadata !DIExpression()), !dbg !18631
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !18632
  br i1 %2, label %27, label %3, !dbg !18634

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !18635
  br i1 %4, label %5, label %27, !dbg !18636

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18292, metadata !DIExpression()) #25, !dbg !18637
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18640
  %7 = load i8, i8* %6, align 1, !dbg !18641
  %8 = or i8 %7, -128, !dbg !18641
  store i8 %8, i8* %6, align 1, !dbg !18641
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18299, metadata !DIExpression()) #25, !dbg !18642
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !18306, metadata !DIExpression()) #25, !dbg !18644
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18312, metadata !DIExpression()) #25, !dbg !18644
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !18646
  br i1 %9, label %10, label %11, !dbg !18647

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !18648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !18648
  unreachable, !dbg !18648

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18649
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !18313, metadata !DIExpression()) #25, !dbg !18644
  %13 = icmp eq %struct._dnode* %12, null, !dbg !18650
  br i1 %13, label %24, label %14, !dbg !18649

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !18313, metadata !DIExpression()) #25, !dbg !18644
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !18651
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !18313, metadata !DIExpression()) #25, !dbg !18644
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #26, !dbg !18652
  %18 = icmp sgt i32 %17, 0, !dbg !18653
  br i1 %18, label %19, label %21, !dbg !18654

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18655
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #26, !dbg !18656
  br label %26, !dbg !18657

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #26, !dbg !18650
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !18313, metadata !DIExpression()) #25, !dbg !18644
  %23 = icmp eq %struct._dnode* %22, null, !dbg !18650
  br i1 %23, label %24, label %14, !dbg !18649, !llvm.loop !18658

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !18660
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #26, !dbg !18661
  br label %26, !dbg !18662

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !18663
  br label %27, !dbg !18664

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !18665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18666 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18668, metadata !DIExpression()), !dbg !18669
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !18670
  br i1 %2, label %6, label %3, !dbg !18671

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !18672
  %5 = xor i1 %4, true, !dbg !18671
  br label %6, !dbg !18671

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !18673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18674 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18676, metadata !DIExpression()), !dbg !18680
  call void @llvm.dbg.value(metadata i32 0, metadata !18677, metadata !DIExpression()), !dbg !18681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18682
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18684, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18686
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18686
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18682
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18687
  br i1 %3, label %5, label %4, !dbg !18688

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18689
  unreachable, !dbg !18689

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18686
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18682
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18690
  call void @llvm.dbg.value(metadata i32 undef, metadata !18679, metadata !DIExpression()), !dbg !18681
  call void @llvm.dbg.value(metadata i32 undef, metadata !18677, metadata !DIExpression()), !dbg !18681
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !18691
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18694
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18696
  br i1 %6, label %8, label %7, !dbg !18697

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18698
  unreachable, !dbg !18698

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !18684
  call void @llvm.dbg.value(metadata i32 %9, metadata !18095, metadata !DIExpression()) #25, !dbg !18686
  call void @llvm.dbg.value(metadata i32 %9, metadata !18089, metadata !DIExpression()) #25, !dbg !18682
  call void @llvm.dbg.value(metadata i32 %9, metadata !18679, metadata !DIExpression()), !dbg !18681
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18694
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !18699
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !18701, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !18677, metadata !DIExpression()), !dbg !18681
  call void @llvm.dbg.value(metadata i32 undef, metadata !18677, metadata !DIExpression()), !dbg !18681
  ret void, !dbg !18702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18703 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18705, metadata !DIExpression()), !dbg !18707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18708
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18710, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18712
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18712
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18708
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18713
  br i1 %3, label %5, label %4, !dbg !18714

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18715
  unreachable, !dbg !18715

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18710
  call void @llvm.dbg.value(metadata i32 %6, metadata !18095, metadata !DIExpression()) #25, !dbg !18712
  call void @llvm.dbg.value(metadata i32 %6, metadata !18089, metadata !DIExpression()) #25, !dbg !18708
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18716
  call void @llvm.dbg.value(metadata i32 %6, metadata !18706, metadata !DIExpression()), !dbg !18707
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !18717
  br i1 %7, label %8, label %12, !dbg !18719

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18720
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18723
  br i1 %9, label %11, label %10, !dbg !18724

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18725
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18725
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18725
  unreachable, !dbg !18725

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !18117, metadata !DIExpression()) #25, !dbg !18720
  call void @llvm.dbg.value(metadata i32 %6, metadata !18131, metadata !DIExpression()) #25, !dbg !18726
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18728, !srcloc !18137
  br label %14, !dbg !18729

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.395(%struct.k_thread* noundef %0) #27, !dbg !18730
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18731
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !18732
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !18732
  br label %14, !dbg !18733

14:                                               ; preds = %12, %11
  ret void, !dbg !18733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18734 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18736, metadata !DIExpression()), !dbg !18737
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18738
  %3 = load i8, i8* %2, align 1, !dbg !18738
  %4 = and i8 %3, 4, !dbg !18739
  %5 = icmp eq i8 %4, 0, !dbg !18740
  ret i1 %5, !dbg !18741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.395(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18744, metadata !DIExpression()), !dbg !18745
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18746
  %3 = load i8, i8* %2, align 1, !dbg !18747
  %4 = and i8 %3, -5, !dbg !18747
  store i8 %4, i8* %2, align 1, !dbg !18747
  ret void, !dbg !18748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !18749 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !18752, metadata !DIExpression()), !dbg !18753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18751, metadata !DIExpression()), !dbg !18753
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !18754
  br i1 %4, label %5, label %12, !dbg !18756

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !18757
  br i1 %6, label %7, label %12, !dbg !18758

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !18765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18764, metadata !DIExpression()) #25, !dbg !18765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18768, metadata !DIExpression()) #25, !dbg !18773
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !18775
  br i1 %8, label %10, label %9, !dbg !18778

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !18779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !18779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !18779
  unreachable, !dbg !18779

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !18759, metadata !DIExpression()) #25, !dbg !18765
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !18781
  br label %16, !dbg !18782

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18122, metadata !DIExpression()) #25, !dbg !18783
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !18786
  br i1 %13, label %15, label %14, !dbg !18787

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18788
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !18788
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18788
  unreachable, !dbg !18788

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !18117, metadata !DIExpression()) #25, !dbg !18783
  call void @llvm.dbg.value(metadata i32 %3, metadata !18131, metadata !DIExpression()) #25, !dbg !18789
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18791, !srcloc !18137
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !18792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !18793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18797, metadata !DIExpression()), !dbg !18798
  call void @llvm.dbg.value(metadata i32 %0, metadata !18799, metadata !DIExpression()), !dbg !18804
  %2 = icmp eq i32 %0, 0, !dbg !18806
  br i1 %2, label %3, label %6, !dbg !18807

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18808, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %4, metadata !18811, metadata !DIExpression()) #25, !dbg !18816
  %5 = icmp eq i32 %4, 0, !dbg !18817
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !18798
  ret i1 %7, !dbg !18818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !18819 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !18822
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18821, metadata !DIExpression()), !dbg !18823
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18824
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !18825
  ret i1 %3, !dbg !18826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !18827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18829, metadata !DIExpression()), !dbg !18831
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !18832
  call void @llvm.dbg.value(metadata i32 %2, metadata !18830, metadata !DIExpression()), !dbg !18831
  ret i32 %2, !dbg !18833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18834 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18836, metadata !DIExpression()), !dbg !18840
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !18841
  call void @llvm.dbg.value(metadata i32 0, metadata !18837, metadata !DIExpression()), !dbg !18842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18843
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18845, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18847
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18847
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18843
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18848
  br i1 %4, label %6, label %5, !dbg !18849

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18850
  unreachable, !dbg !18850

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18845
  call void @llvm.dbg.value(metadata i32 %7, metadata !18095, metadata !DIExpression()) #25, !dbg !18847
  call void @llvm.dbg.value(metadata i32 %7, metadata !18089, metadata !DIExpression()) #25, !dbg !18843
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18851
  call void @llvm.dbg.value(metadata i32 %7, metadata !18839, metadata !DIExpression()), !dbg !18842
  call void @llvm.dbg.value(metadata i32 undef, metadata !18837, metadata !DIExpression()), !dbg !18842
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !18852
  br i1 %8, label %9, label %13, !dbg !18856

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18275, metadata !DIExpression()) #25, !dbg !18857
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18860
  %11 = load i8, i8* %10, align 1, !dbg !18861
  %12 = and i8 %11, 127, !dbg !18861
  store i8 %12, i8* %10, align 1, !dbg !18861
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18283, metadata !DIExpression()) #25, !dbg !18862
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !18864
  br label %13, !dbg !18865

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !18866
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18867
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !18868
  %16 = zext i1 %15 to i32, !dbg !18868
  tail call fastcc void @update_cache(i32 noundef %16) #27, !dbg !18869
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18870
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18872
  br i1 %17, label %19, label %18, !dbg !18873

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18874
  unreachable, !dbg !18874

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !18117, metadata !DIExpression()) #25, !dbg !18870
  call void @llvm.dbg.value(metadata i32 %7, metadata !18131, metadata !DIExpression()) #25, !dbg !18875
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !18877, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !18837, metadata !DIExpression()), !dbg !18842
  call void @llvm.dbg.value(metadata i32 undef, metadata !18837, metadata !DIExpression()), !dbg !18842
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18878
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !18880
  br i1 %21, label %22, label %23, !dbg !18881

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18882
  br label %23, !dbg !18884

23:                                               ; preds = %22, %19
  ret void, !dbg !18885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18888, metadata !DIExpression()), !dbg !18889
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !18890
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !18891
  ret i32 %3, !dbg !18892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18895, metadata !DIExpression()), !dbg !18896
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18897
  %3 = load i8, i8* %2, align 1, !dbg !18898
  %4 = or i8 %3, 16, !dbg !18898
  store i8 %4, i8* %2, align 1, !dbg !18898
  ret void, !dbg !18899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !18900 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18901, !srcloc !18098
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18901
  call void @llvm.dbg.value(metadata i32 %2, metadata !18095, metadata !DIExpression()) #25, !dbg !18903
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18903
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !18904
  ret void, !dbg !18905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !18906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18908, metadata !DIExpression()), !dbg !18909
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !18910
  br i1 %2, label %3, label %5, !dbg !18912

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !18913
  br label %6, !dbg !18915

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !18131, metadata !DIExpression()) #25, !dbg !18916
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !18919, !srcloc !18137
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !18920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18923, metadata !DIExpression()), !dbg !18925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18926
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18928, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18930
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18930
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18926
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18931
  br i1 %3, label %5, label %4, !dbg !18932

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18933
  unreachable, !dbg !18933

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18928
  call void @llvm.dbg.value(metadata i32 %6, metadata !18095, metadata !DIExpression()) #25, !dbg !18930
  call void @llvm.dbg.value(metadata i32 %6, metadata !18089, metadata !DIExpression()) #25, !dbg !18926
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18934
  call void @llvm.dbg.value(metadata i32 %6, metadata !18924, metadata !DIExpression()), !dbg !18925
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !18935
  br i1 %7, label %12, label %8, !dbg !18937

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !18938
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !18938
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18941
  br i1 %9, label %11, label %10, !dbg !18942

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18943
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !18943
  unreachable, !dbg !18943

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !18117, metadata !DIExpression()) #25, !dbg !18938
  call void @llvm.dbg.value(metadata i32 %6, metadata !18131, metadata !DIExpression()) #25, !dbg !18944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18946, !srcloc !18137
  br label %14, !dbg !18947

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !18948
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18949
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !18950
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !18950
  br label %14, !dbg !18951

14:                                               ; preds = %12, %11
  ret void, !dbg !18951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18952 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18954, metadata !DIExpression()), !dbg !18955
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18956
  %3 = load i8, i8* %2, align 1, !dbg !18956
  %4 = and i8 %3, 16, !dbg !18957
  %5 = icmp ne i8 %4, 0, !dbg !18958
  ret i1 %5, !dbg !18959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !18960 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18962, metadata !DIExpression()), !dbg !18963
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18964
  %3 = load i8, i8* %2, align 1, !dbg !18965
  %4 = and i8 %3, -17, !dbg !18965
  store i8 %4, i8* %2, align 1, !dbg !18965
  ret void, !dbg !18966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18967 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18977, metadata !DIExpression()), !dbg !18981
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18975, metadata !DIExpression()), !dbg !18981
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !18976, metadata !DIExpression()), !dbg !18981
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18982
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !18982
  br i1 %5, label %9, label %6, !dbg !18982

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #27, !dbg !18982
  br i1 %7, label %9, label %8, !dbg !18985

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 773) #26, !dbg !18986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 773) #26, !dbg !18986
  unreachable, !dbg !18986

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !18978, metadata !DIExpression()), !dbg !18988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !18989
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18991, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18993
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !18993
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18989
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18994
  br i1 %11, label %13, label %12, !dbg !18995

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18996
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18996
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !18996
  unreachable, !dbg !18996

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !18993
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !18989
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18997
  call void @llvm.dbg.value(metadata i32 undef, metadata !18980, metadata !DIExpression()), !dbg !18988
  call void @llvm.dbg.value(metadata i32 undef, metadata !18978, metadata !DIExpression()), !dbg !18988
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !18998
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19001
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19003
  br i1 %14, label %16, label %15, !dbg !19004

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19005
  unreachable, !dbg !19005

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !18991
  call void @llvm.dbg.value(metadata i32 %17, metadata !18095, metadata !DIExpression()) #25, !dbg !18993
  call void @llvm.dbg.value(metadata i32 %17, metadata !18089, metadata !DIExpression()) #25, !dbg !18989
  call void @llvm.dbg.value(metadata i32 %17, metadata !18980, metadata !DIExpression()), !dbg !18988
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19001
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !19008, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !18978, metadata !DIExpression()), !dbg !18988
  call void @llvm.dbg.value(metadata i32 undef, metadata !18978, metadata !DIExpression()), !dbg !18988
  ret void, !dbg !19009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !19010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19012, metadata !DIExpression()), !dbg !19013
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19014
  %3 = load i8, i8* %2, align 1, !dbg !19014
  %4 = and i8 %3, 1, !dbg !19015
  %5 = icmp ne i8 %4, 0, !dbg !19016
  ret i1 %5, !dbg !19017
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !19018 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19022, metadata !DIExpression()), !dbg !19023
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19020, metadata !DIExpression()), !dbg !19023
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !19021, metadata !DIExpression()), !dbg !19023
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !19024
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !19025
  ret void, !dbg !19026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !19027 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19031, metadata !DIExpression()), !dbg !19033
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !19032, metadata !DIExpression()), !dbg !19033
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !19034
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !19035
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !19036
  br i1 %3, label %24, label %4, !dbg !19038

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !19039
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !19041
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !19042
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !18306, metadata !DIExpression()) #25, !dbg !19043
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18312, metadata !DIExpression()) #25, !dbg !19043
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !19045
  br i1 %7, label %8, label %9, !dbg !19046

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !19047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !19047
  unreachable, !dbg !19047

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef nonnull %6) #26, !dbg !19048
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !18313, metadata !DIExpression()) #25, !dbg !19043
  %11 = icmp eq %struct._dnode* %10, null, !dbg !19049
  br i1 %11, label %22, label %12, !dbg !19048

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !18313, metadata !DIExpression()) #25, !dbg !19043
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !19050
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !18313, metadata !DIExpression()) #25, !dbg !19043
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !19051
  %16 = icmp sgt i32 %15, 0, !dbg !19052
  br i1 %16, label %17, label %19, !dbg !19053

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !19054
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !19055
  br label %24, !dbg !19056

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !19049
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !18313, metadata !DIExpression()) #25, !dbg !19043
  %21 = icmp eq %struct._dnode* %20, null, !dbg !19049
  br i1 %21, label %22, label %12, !dbg !19048, !llvm.loop !19057

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !19059
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !19060
  br label %24, !dbg !19061

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !19062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !19063 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !19068, metadata !DIExpression()), !dbg !19069
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19067, metadata !DIExpression()), !dbg !19069
  %4 = icmp eq i64 %3, -1, !dbg !19070
  br i1 %4, label %6, label %5, !dbg !19072

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.399(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !19073
  br label %6, !dbg !19075

6:                                                ; preds = %5, %2
  ret void, !dbg !19076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.399(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !19077 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19080, metadata !DIExpression()), !dbg !19081
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19079, metadata !DIExpression()), !dbg !19081
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !19082
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !19083
  ret void, !dbg !19084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !19085 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19087, metadata !DIExpression()), !dbg !19095
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !19096
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !19096
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !19088, metadata !DIExpression()), !dbg !19095
  call void @llvm.dbg.value(metadata i32 0, metadata !19089, metadata !DIExpression()), !dbg !19097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19098
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19100, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19102
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19102
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19098
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19103
  br i1 %5, label %7, label %6, !dbg !19104

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19105
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19105
  unreachable, !dbg !19105

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19102
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19098
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19106
  call void @llvm.dbg.value(metadata i32 undef, metadata !19091, metadata !DIExpression()), !dbg !19097
  call void @llvm.dbg.value(metadata i32 undef, metadata !19089, metadata !DIExpression()), !dbg !19097
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !19107
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !19108
  %10 = load i8, i8* %9, align 1, !dbg !19108
  %11 = and i8 %10, 40, !dbg !19109
  %12 = icmp eq i8 %11, 0, !dbg !19109
  call void @llvm.dbg.value(metadata i1 %12, metadata !19092, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19110
  br i1 %12, label %13, label %20, !dbg !19111

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !19112
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !19112
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !19112
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !19116
  br i1 %17, label %19, label %18, !dbg !19117

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !19118
  br label %19, !dbg !19120

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.395(%struct.k_thread* noundef nonnull %3) #27, !dbg !19121
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !19122
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !19123
  br label %20, !dbg !19124

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19125
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19127
  br i1 %21, label %23, label %22, !dbg !19128

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19129
  unreachable, !dbg !19129

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !19100
  call void @llvm.dbg.value(metadata i32 %24, metadata !18095, metadata !DIExpression()) #25, !dbg !19102
  call void @llvm.dbg.value(metadata i32 %24, metadata !18089, metadata !DIExpression()) #25, !dbg !19098
  call void @llvm.dbg.value(metadata i32 %24, metadata !19091, metadata !DIExpression()), !dbg !19097
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19125
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19130
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !19132, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !19089, metadata !DIExpression()), !dbg !19097
  call void @llvm.dbg.value(metadata i32 undef, metadata !19089, metadata !DIExpression()), !dbg !19097
  ret void, !dbg !19133
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !19134 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19136, metadata !DIExpression()), !dbg !19137
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #27, !dbg !19138
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !19139
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !19140
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !19141
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !19142
  ret void, !dbg !19143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !19144 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19148, metadata !DIExpression()), !dbg !19149
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !19150
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !19150
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !19150
  br i1 %4, label %5, label %6, !dbg !19153

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.402, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 726) #26, !dbg !19154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 726) #26, !dbg !19154
  unreachable, !dbg !19154

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !19156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !19157 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19159, metadata !DIExpression()), !dbg !19160
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19161
  %3 = load i8, i8* %2, align 1, !dbg !19162
  %4 = and i8 %3, -3, !dbg !19162
  store i8 %4, i8* %2, align 1, !dbg !19162
  ret void, !dbg !19163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !19164 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19166, metadata !DIExpression()), !dbg !19167
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !19168
  br i1 %2, label %3, label %7, !dbg !19170

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18275, metadata !DIExpression()) #25, !dbg !19171
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19174
  %5 = load i8, i8* %4, align 1, !dbg !19175
  %6 = and i8 %5, 127, !dbg !19175
  store i8 %6, i8* %4, align 1, !dbg !19175
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18283, metadata !DIExpression()) #25, !dbg !19176
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !19178
  br label %7, !dbg !19179

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19180
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !19181
  %10 = zext i1 %9 to i32, !dbg !19181
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !19182
  ret void, !dbg !19183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !19184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19186, metadata !DIExpression()), !dbg !19187
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !19188
  %3 = load i8, i8* %2, align 1, !dbg !19189
  %4 = or i8 %3, 2, !dbg !19189
  store i8 %4, i8* %2, align 1, !dbg !19189
  ret void, !dbg !19190
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #24 !dbg !19191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19193, metadata !DIExpression()), !dbg !19197
  call void @llvm.dbg.value(metadata i32 0, metadata !19194, metadata !DIExpression()), !dbg !19198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19199
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19201, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19203
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19203
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19199
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19204
  br i1 %3, label %5, label %4, !dbg !19205

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19206
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19206
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19206
  unreachable, !dbg !19206

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19203
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19199
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19207
  call void @llvm.dbg.value(metadata i32 undef, metadata !19196, metadata !DIExpression()), !dbg !19198
  call void @llvm.dbg.value(metadata i32 undef, metadata !19194, metadata !DIExpression()), !dbg !19198
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !19208
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19211
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19213
  br i1 %6, label %8, label %7, !dbg !19214

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19215
  unreachable, !dbg !19215

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !19201
  call void @llvm.dbg.value(metadata i32 %9, metadata !18095, metadata !DIExpression()) #25, !dbg !19203
  call void @llvm.dbg.value(metadata i32 %9, metadata !18089, metadata !DIExpression()) #25, !dbg !19199
  call void @llvm.dbg.value(metadata i32 %9, metadata !19196, metadata !DIExpression()), !dbg !19198
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19211
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !19218, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !19194, metadata !DIExpression()), !dbg !19198
  call void @llvm.dbg.value(metadata i32 undef, metadata !19194, metadata !DIExpression()), !dbg !19198
  ret void, !dbg !19219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19220 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19226, metadata !DIExpression()), !dbg !19231
  call void @llvm.dbg.value(metadata i32 %0, metadata !19224, metadata !DIExpression()), !dbg !19231
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !19225, metadata !DIExpression()), !dbg !19231
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19232
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !19233
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19234
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !19235
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !19236
  call void @llvm.dbg.value(metadata i32 %6, metadata !19227, metadata !DIExpression()), !dbg !19231
  call void @llvm.dbg.value(metadata i32 0, metadata !19228, metadata !DIExpression()), !dbg !19237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19238
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19240, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19242
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19242
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19238
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19243
  br i1 %8, label %10, label %9, !dbg !19244

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19245
  unreachable, !dbg !19245

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19242
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19238
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19246
  call void @llvm.dbg.value(metadata i32 undef, metadata !19230, metadata !DIExpression()), !dbg !19237
  call void @llvm.dbg.value(metadata i32 undef, metadata !19228, metadata !DIExpression()), !dbg !19237
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !19247
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19251
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !19252
  br i1 %13, label %14, label %15, !dbg !19253

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !19254
  br label %15, !dbg !19256

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19257
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19259
  br i1 %16, label %18, label %17, !dbg !19260

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19261
  unreachable, !dbg !19261

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !19240
  call void @llvm.dbg.value(metadata i32 %19, metadata !18095, metadata !DIExpression()) #25, !dbg !19242
  call void @llvm.dbg.value(metadata i32 %19, metadata !18089, metadata !DIExpression()) #25, !dbg !19238
  call void @llvm.dbg.value(metadata i32 %19, metadata !19230, metadata !DIExpression()), !dbg !19237
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19257
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !19264, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !19228, metadata !DIExpression()), !dbg !19237
  call void @llvm.dbg.value(metadata i32 undef, metadata !19228, metadata !DIExpression()), !dbg !19237
  ret i32 %6, !dbg !19265
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !19266 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !19271, metadata !DIExpression()), !dbg !19274
  call void @llvm.dbg.value(metadata i64 undef, metadata !19273, metadata !DIExpression()), !dbg !19274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !19270, metadata !DIExpression()), !dbg !19274
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !19272, metadata !DIExpression()), !dbg !19274
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19275
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !19276
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !19277
  br i1 %6, label %7, label %8, !dbg !19280

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.405, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 846) #26, !dbg !19281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 846) #26, !dbg !19281
  unreachable, !dbg !19281

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19283
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19285, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19287
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19287
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19283
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19288
  br i1 %10, label %12, label %11, !dbg !19289

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19290
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19290
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19290
  unreachable, !dbg !19290

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19287
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19283
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19291
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19292
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !19293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18768, metadata !DIExpression()) #25, !dbg !19294
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !19296
  br i1 %14, label %16, label %15, !dbg !19297

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !19298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !19298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !19298
  unreachable, !dbg !19298

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !19299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18764, metadata !DIExpression()) #25, !dbg !19299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18768, metadata !DIExpression()) #25, !dbg !19301
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19303
  br i1 %17, label %19, label %18, !dbg !19304

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !19305
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !19305
  unreachable, !dbg !19305

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !18759, metadata !DIExpression()) #25, !dbg !19299
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !19306
  ret i32 %21, !dbg !19307
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !19308 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19312, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19313, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.value(metadata i32 0, metadata !19314, metadata !DIExpression()), !dbg !19318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19319
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19321, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19323
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19323
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19319
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19324
  br i1 %3, label %5, label %4, !dbg !19325

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19326
  unreachable, !dbg !19326

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19323
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19319
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19327
  call void @llvm.dbg.value(metadata i32 undef, metadata !19316, metadata !DIExpression()), !dbg !19318
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19313, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.value(metadata i32 undef, metadata !19314, metadata !DIExpression()), !dbg !19318
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !19328
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !19313, metadata !DIExpression()), !dbg !19317
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !19331
  br i1 %8, label %10, label %9, !dbg !19333

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !19334
  br label %10, !dbg !19336

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19337
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19339
  br i1 %11, label %13, label %12, !dbg !19340

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19341
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19341
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19341
  unreachable, !dbg !19341

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !19321
  call void @llvm.dbg.value(metadata i32 %14, metadata !18095, metadata !DIExpression()) #25, !dbg !19323
  call void @llvm.dbg.value(metadata i32 %14, metadata !18089, metadata !DIExpression()) #25, !dbg !19319
  call void @llvm.dbg.value(metadata i32 %14, metadata !19316, metadata !DIExpression()), !dbg !19318
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19337
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19342
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !19344, !srcloc !18137
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !19313, metadata !DIExpression()), !dbg !19317
  call void @llvm.dbg.value(metadata i32 undef, metadata !19314, metadata !DIExpression()), !dbg !19318
  ret %struct.k_thread* %7, !dbg !19345
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !19346 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19348, metadata !DIExpression()), !dbg !19353
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19349, metadata !DIExpression()), !dbg !19353
  call void @llvm.dbg.value(metadata i32 0, metadata !19350, metadata !DIExpression()), !dbg !19354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19355
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19357, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19359
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19359
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19355
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19360
  br i1 %3, label %5, label %4, !dbg !19361

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19362
  unreachable, !dbg !19362

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19359
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19355
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19363
  call void @llvm.dbg.value(metadata i32 undef, metadata !19352, metadata !DIExpression()), !dbg !19354
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19349, metadata !DIExpression()), !dbg !19353
  call void @llvm.dbg.value(metadata i32 undef, metadata !19350, metadata !DIExpression()), !dbg !19354
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !19364
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !19349, metadata !DIExpression()), !dbg !19353
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !19367
  br i1 %8, label %11, label %9, !dbg !19369

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !19370
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !19372
  br label %11, !dbg !19373

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19374
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19376
  br i1 %12, label %14, label %13, !dbg !19377

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19378
  unreachable, !dbg !19378

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !19357
  call void @llvm.dbg.value(metadata i32 %15, metadata !18095, metadata !DIExpression()) #25, !dbg !19359
  call void @llvm.dbg.value(metadata i32 %15, metadata !18089, metadata !DIExpression()) #25, !dbg !19355
  call void @llvm.dbg.value(metadata i32 %15, metadata !19352, metadata !DIExpression()), !dbg !19354
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19374
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !19381, !srcloc !18137
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !19349, metadata !DIExpression()), !dbg !19353
  call void @llvm.dbg.value(metadata i32 undef, metadata !19350, metadata !DIExpression()), !dbg !19354
  ret %struct.k_thread* %7, !dbg !19382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !19383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19385, metadata !DIExpression()), !dbg !19386
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19193, metadata !DIExpression()) #25, !dbg !19387
  call void @llvm.dbg.value(metadata i32 0, metadata !19194, metadata !DIExpression()) #25, !dbg !19389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19390
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19392, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19394
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19394
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19390
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19395
  br i1 %3, label %5, label %4, !dbg !19396

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19397
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19397
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19397
  unreachable, !dbg !19397

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19394
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19390
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19398
  call void @llvm.dbg.value(metadata i32 undef, metadata !19196, metadata !DIExpression()) #25, !dbg !19389
  call void @llvm.dbg.value(metadata i32 undef, metadata !19194, metadata !DIExpression()) #25, !dbg !19389
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !19399
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19400
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19402
  br i1 %6, label %8, label %7, !dbg !19403

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19404
  unreachable, !dbg !19404

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !19392
  call void @llvm.dbg.value(metadata i32 %9, metadata !18095, metadata !DIExpression()) #25, !dbg !19394
  call void @llvm.dbg.value(metadata i32 %9, metadata !18089, metadata !DIExpression()) #25, !dbg !19390
  call void @llvm.dbg.value(metadata i32 %9, metadata !19196, metadata !DIExpression()) #25, !dbg !19389
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19400
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19405
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !19407, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !19194, metadata !DIExpression()) #25, !dbg !19389
  call void @llvm.dbg.value(metadata i32 undef, metadata !19194, metadata !DIExpression()) #25, !dbg !19389
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !19408
  ret void, !dbg !19409
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19410 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19412, metadata !DIExpression()), !dbg !19418
  call void @llvm.dbg.value(metadata i32 %1, metadata !19413, metadata !DIExpression()), !dbg !19418
  call void @llvm.dbg.value(metadata i8 0, metadata !19414, metadata !DIExpression()), !dbg !19418
  call void @llvm.dbg.value(metadata i32 0, metadata !19415, metadata !DIExpression()), !dbg !19419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19420
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19422, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19424
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19424
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19420
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19425
  br i1 %4, label %6, label %5, !dbg !19426

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19427
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19427
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19427
  unreachable, !dbg !19427

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19424
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19420
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19428
  call void @llvm.dbg.value(metadata i32 undef, metadata !19417, metadata !DIExpression()), !dbg !19419
  call void @llvm.dbg.value(metadata i8 poison, metadata !19414, metadata !DIExpression()), !dbg !19418
  call void @llvm.dbg.value(metadata i32 undef, metadata !19415, metadata !DIExpression()), !dbg !19419
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !19429
  call void @llvm.dbg.value(metadata i1 %9, metadata !19414, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19418
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !19432

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18275, metadata !DIExpression()) #25, !dbg !19433
  %14 = load i8, i8* %7, align 1, !dbg !19439
  %15 = and i8 %14, 127, !dbg !19439
  store i8 %15, i8* %7, align 1, !dbg !19439
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18283, metadata !DIExpression()) #25, !dbg !19440
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !19442
  store i8 %12, i8* %11, align 2, !dbg !19443
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18292, metadata !DIExpression()) #25, !dbg !19444
  %16 = load i8, i8* %7, align 1, !dbg !19446
  %17 = or i8 %16, -128, !dbg !19446
  store i8 %17, i8* %7, align 1, !dbg !19446
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18299, metadata !DIExpression()) #25, !dbg !19447
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !18306, metadata !DIExpression()) #25, !dbg !19449
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18312, metadata !DIExpression()) #25, !dbg !19449
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !19451
  br i1 %18, label %19, label %20, !dbg !19452

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !19453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !19453
  unreachable, !dbg !19453

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !19454
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !18313, metadata !DIExpression()) #25, !dbg !19449
  %22 = icmp eq %struct._dnode* %21, null, !dbg !19455
  br i1 %22, label %32, label %23, !dbg !19454

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !18313, metadata !DIExpression()) #25, !dbg !19449
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !19456
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !18313, metadata !DIExpression()) #25, !dbg !19449
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #26, !dbg !19457
  %27 = icmp sgt i32 %26, 0, !dbg !19458
  br i1 %27, label %28, label %29, !dbg !19459

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #26, !dbg !19460
  br label %33, !dbg !19461

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #26, !dbg !19455
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !18313, metadata !DIExpression()) #25, !dbg !19449
  %31 = icmp eq %struct._dnode* %30, null, !dbg !19455
  br i1 %31, label %32, label %23, !dbg !19454, !llvm.loop !19462

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #26, !dbg !19464
  br label %33, !dbg !19465

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !19466
  br label %35, !dbg !19467

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !19468
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19470
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19470
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19472
  br i1 %36, label %38, label %37, !dbg !19473

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19474
  unreachable, !dbg !19474

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !19422
  call void @llvm.dbg.value(metadata i32 %39, metadata !18095, metadata !DIExpression()) #25, !dbg !19424
  call void @llvm.dbg.value(metadata i32 %39, metadata !18089, metadata !DIExpression()) #25, !dbg !19420
  call void @llvm.dbg.value(metadata i32 %39, metadata !19417, metadata !DIExpression()), !dbg !19419
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19470
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !19477, !srcloc !18137
  call void @llvm.dbg.value(metadata i8 poison, metadata !19414, metadata !DIExpression()), !dbg !19418
  call void @llvm.dbg.value(metadata i32 undef, metadata !19415, metadata !DIExpression()), !dbg !19419
  ret i1 %9, !dbg !19478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19483, metadata !DIExpression()), !dbg !19486
  call void @llvm.dbg.value(metadata i32 %1, metadata !19484, metadata !DIExpression()), !dbg !19486
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !19487
  call void @llvm.dbg.value(metadata i1 %3, metadata !19485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19486
  br i1 %3, label %4, label %12, !dbg !19488

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19490
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !19491
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !19491
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !19491
  %9 = load i8, i8* %8, align 1, !dbg !19491
  %10 = icmp eq i8 %9, 0, !dbg !19492
  br i1 %10, label %11, label %12, !dbg !19493

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !19494
  br label %12, !dbg !19496

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !19497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !19498 {
  call void @llvm.dbg.value(metadata i32 0, metadata !19500, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19504
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19506, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19508
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19508
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19504
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19509
  br i1 %2, label %4, label %3, !dbg !19510

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19511
  unreachable, !dbg !19511

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19508
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19504
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19512
  call void @llvm.dbg.value(metadata i32 undef, metadata !19502, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.value(metadata i32 undef, metadata !19500, metadata !DIExpression()), !dbg !19503
  tail call fastcc void @z_sched_lock() #27, !dbg !19513
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19516
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19518
  br i1 %5, label %7, label %6, !dbg !19519

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19520
  unreachable, !dbg !19520

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !19506
  call void @llvm.dbg.value(metadata i32 %8, metadata !18095, metadata !DIExpression()) #25, !dbg !19508
  call void @llvm.dbg.value(metadata i32 %8, metadata !18089, metadata !DIExpression()) #25, !dbg !19504
  call void @llvm.dbg.value(metadata i32 %8, metadata !19502, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19516
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !19523, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !19500, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.value(metadata i32 undef, metadata !19500, metadata !DIExpression()), !dbg !19503
  ret void, !dbg !19524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !19525 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19526, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %1, metadata !18811, metadata !DIExpression()) #25, !dbg !19531
  %2 = icmp eq i32 %1, 0, !dbg !19532
  br i1 %2, label %4, label %3, !dbg !19533

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.413, i32 0, i32 0), i32 noundef 253) #26, !dbg !19534
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19534
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.413, i32 0, i32 0), i32 noundef 253) #26, !dbg !19534
  unreachable, !dbg !19534

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19536
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !19536
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !19536
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !19536
  %9 = load i8, i8* %8, align 1, !dbg !19536
  %10 = icmp eq i8 %9, 1, !dbg !19536
  br i1 %10, label %11, label %12, !dbg !19539

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.414, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.413, i32 0, i32 0), i32 noundef 254) #26, !dbg !19540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.413, i32 0, i32 0), i32 noundef 254) #26, !dbg !19540
  unreachable, !dbg !19540

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !19542
  store i8 %13, i8* %8, align 1, !dbg !19542
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !19543, !srcloc !19545
  ret void, !dbg !19546
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !19547 {
  call void @llvm.dbg.value(metadata i32 0, metadata !19549, metadata !DIExpression()), !dbg !19552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19553
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19555, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19557
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19557
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19553
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19558
  br i1 %2, label %4, label %3, !dbg !19559

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19560
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19560
  unreachable, !dbg !19560

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19557
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19553
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19561
  call void @llvm.dbg.value(metadata i32 undef, metadata !19551, metadata !DIExpression()), !dbg !19552
  call void @llvm.dbg.value(metadata i32 undef, metadata !19549, metadata !DIExpression()), !dbg !19552
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19562
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !19562
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !19562
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !19562
  %9 = load i8, i8* %8, align 1, !dbg !19562
  %10 = icmp eq i8 %9, 0, !dbg !19562
  br i1 %10, label %11, label %12, !dbg !19567

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.417, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 999) #26, !dbg !19568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 999) #26, !dbg !19568
  unreachable, !dbg !19568

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19570, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %13, metadata !18811, metadata !DIExpression()) #25, !dbg !19575
  %14 = icmp eq i32 %13, 0, !dbg !19576
  br i1 %14, label %16, label %15, !dbg !19577

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1000) #26, !dbg !19578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1000) #26, !dbg !19578
  unreachable, !dbg !19578

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19580
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !19581
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !19581
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !19581
  %21 = load i8, i8* %20, align 1, !dbg !19582
  %22 = add i8 %21, 1, !dbg !19582
  store i8 %22, i8* %20, align 1, !dbg !19582
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !19583
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19584
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !19584
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19586
  br i1 %23, label %25, label %24, !dbg !19587

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19588
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19588
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !19588
  unreachable, !dbg !19588

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !19555
  call void @llvm.dbg.value(metadata i32 %26, metadata !18095, metadata !DIExpression()) #25, !dbg !19557
  call void @llvm.dbg.value(metadata i32 %26, metadata !18089, metadata !DIExpression()) #25, !dbg !19553
  call void @llvm.dbg.value(metadata i32 %26, metadata !19551, metadata !DIExpression()), !dbg !19552
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !19584
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !19589
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !19591, !srcloc !18137
  call void @llvm.dbg.value(metadata i32 1, metadata !19549, metadata !DIExpression()), !dbg !19552
  call void @llvm.dbg.value(metadata i32 undef, metadata !19549, metadata !DIExpression()), !dbg !19552
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !19592
  ret void, !dbg !19593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !19594 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !19595
  ret %struct.k_thread* %1, !dbg !19596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !19597 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !19601, metadata !DIExpression()), !dbg !19606
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !19602, metadata !DIExpression()), !dbg !19606
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !19607
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !19603, metadata !DIExpression()), !dbg !19606
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !19608
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !19604, metadata !DIExpression()), !dbg !19606
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !19609
  call void @llvm.dbg.value(metadata i32 %5, metadata !19605, metadata !DIExpression()), !dbg !19606
  %6 = icmp sgt i32 %5, 0, !dbg !19610
  br i1 %6, label %17, label %7, !dbg !19612

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !19613
  br i1 %8, label %17, label %9, !dbg !19615

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !19616
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !19616
  %12 = load i32, i32* %11, align 8, !dbg !19616
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !19618
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !19618
  %15 = load i32, i32* %14, align 8, !dbg !19618
  %16 = icmp ult i32 %12, %15, !dbg !19619
  br label %17, !dbg !19620

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !19621
  ret i1 %18, !dbg !19622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !19623 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !19640, metadata !DIExpression()), !dbg !19655
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !19641, metadata !DIExpression()), !dbg !19655
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !19656
  br i1 %4, label %5, label %6, !dbg !19659

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1179) #26, !dbg !19660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1179) #26, !dbg !19660
  unreachable, !dbg !19660

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !19662
  %8 = load i32, i32* %7, align 4, !dbg !19663
  %9 = add nsw i32 %8, 1, !dbg !19663
  store i32 %9, i32* %7, align 4, !dbg !19663
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !19664
  store i32 %8, i32* %10, align 8, !dbg !19665
  %11 = load i32, i32* %7, align 4, !dbg !19666
  %12 = icmp eq i32 %11, 0, !dbg !19667
  br i1 %12, label %13, label %35, !dbg !19668

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !19669
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !19669
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !19643, metadata !DIExpression()), !dbg !19669
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19669
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !19669
  %17 = load i32, i32* %16, align 4, !dbg !19669
  %18 = shl i32 %17, 2, !dbg !19669
  %19 = alloca i8, i32 %18, align 8, !dbg !19669
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !19669
  store i8* %19, i8** %20, align 4, !dbg !19669
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !19669
  %22 = alloca i8, i32 %17, align 8, !dbg !19669
  store i8* %22, i8** %21, align 4, !dbg !19669
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !19669
  store i32 -1, i32* %23, align 4, !dbg !19669
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !19670
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !19652, metadata !DIExpression()), !dbg !19671
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !19642, metadata !DIExpression()), !dbg !19655
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !19672
  br i1 %25, label %26, label %27, !dbg !19669

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !19672
  br label %35, !dbg !19673

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !19642, metadata !DIExpression()), !dbg !19655
  %29 = load i32, i32* %7, align 4, !dbg !19674
  %30 = add nsw i32 %29, 1, !dbg !19674
  store i32 %30, i32* %7, align 4, !dbg !19674
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !19676
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !19676
  store i32 %29, i32* %32, align 8, !dbg !19677
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !19670
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !19652, metadata !DIExpression()), !dbg !19671
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !19642, metadata !DIExpression()), !dbg !19655
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !19672
  br i1 %34, label %26, label %27, !dbg !19669, !llvm.loop !19678

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19680
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !19681
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !19682
  ret void, !dbg !19683
}

; Function Attrs: optsize
declare !dbg !19684 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !19689 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !19692 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !19694, metadata !DIExpression()), !dbg !19696
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !19695, metadata !DIExpression()), !dbg !19696
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !19697
  br i1 %3, label %4, label %5, !dbg !19700

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1200) #26, !dbg !19701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1200) #26, !dbg !19701
  unreachable, !dbg !19701

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19703
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !19704
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !19705
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !19706
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !19706
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !19708
  br i1 %10, label %11, label %13, !dbg !19709

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !19710
  store i32 0, i32* %12, align 4, !dbg !19712
  br label %13, !dbg !19713

13:                                               ; preds = %11, %5
  ret void, !dbg !19714
}

; Function Attrs: optsize
declare !dbg !19715 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !19716 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !19720, metadata !DIExpression()), !dbg !19723
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19721, metadata !DIExpression()), !dbg !19723
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !19724
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !19725
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !19722, metadata !DIExpression()), !dbg !19723
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !19721, metadata !DIExpression()), !dbg !19723
  ret %struct.k_thread* %4, !dbg !19726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !19727 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !19731, metadata !DIExpression()), !dbg !19732
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !19733
  ret %struct.rbnode* %2, !dbg !19734
}

; Function Attrs: optsize
declare !dbg !19735 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !19738 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !19750, metadata !DIExpression()), !dbg !19754
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !19755
  %3 = load i32, i32* %2, align 4, !dbg !19755
  %4 = icmp eq i32 %3, 0, !dbg !19757
  br i1 %4, label %10, label %5, !dbg !19758

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !19751, metadata !DIExpression()), !dbg !19754
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !19759, !range !5919
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !19760
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !19752, metadata !DIExpression()), !dbg !19754
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef %7) #27, !dbg !19761
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !19753, metadata !DIExpression()), !dbg !19754
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !19751, metadata !DIExpression()), !dbg !19754
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !19754
  ret %struct.k_thread* %11, !dbg !19762
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !19763 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19767, metadata !DIExpression()), !dbg !19770
  call void @llvm.dbg.value(metadata i32 0, metadata !19768, metadata !DIExpression()), !dbg !19770
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.418(%struct._wait_q_t* noundef %0) #27, !dbg !19771
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !19769, metadata !DIExpression()), !dbg !19770
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !19772
  br i1 %3, label %8, label %4, !dbg !19773

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !19774
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !19776
  call void @llvm.dbg.value(metadata i32 1, metadata !19768, metadata !DIExpression()), !dbg !19770
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.418(%struct._wait_q_t* noundef %0) #27, !dbg !19771
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !19769, metadata !DIExpression()), !dbg !19770
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !19772
  br i1 %7, label %8, label %4, !dbg !19773, !llvm.loop !19777

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !19770
  ret i32 %9, !dbg !19779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.418(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !19780 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19782, metadata !DIExpression()), !dbg !19783
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !19784
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef %2) #27, !dbg !19785
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !19786
  ret %struct.k_thread* %4, !dbg !19787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !19788 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !19797, metadata !DIExpression()), !dbg !19798
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !19799
  tail call fastcc void @sys_dlist_init.419(%struct._dnode* noundef nonnull %2) #27, !dbg !19800
  ret void, !dbg !19801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.419(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !19802 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19806, metadata !DIExpression()), !dbg !19807
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19808
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19809
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19810
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19811
  ret void, !dbg !19812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !19813 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !19814
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !19815
  ret void, !dbg !19816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !19817 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19822, metadata !DIExpression()), !dbg !19823
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !19824
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !19824
  %4 = load i8, i8* %3, align 2, !dbg !19824
  %5 = sext i8 %4 to i32, !dbg !19825
  ret i32 %5, !dbg !19826
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19827 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19831, metadata !DIExpression()), !dbg !19834
  call void @llvm.dbg.value(metadata i32 %1, metadata !19832, metadata !DIExpression()), !dbg !19834
  %3 = add i32 %1, 16, !dbg !19835
  %4 = icmp ult i32 %3, 31, !dbg !19835
  br i1 %4, label %6, label %5, !dbg !19835

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.422, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1331) #26, !dbg !19839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.423, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #26, !dbg !19839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1331) #26, !dbg !19839
  unreachable, !dbg !19839

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19841, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %7, metadata !18811, metadata !DIExpression()) #25, !dbg !19846
  %8 = icmp eq i32 %7, 0, !dbg !19847
  br i1 %8, label %10, label %9, !dbg !19848

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1332) #26, !dbg !19849
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1332) #26, !dbg !19849
  unreachable, !dbg !19849

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19833, metadata !DIExpression()), !dbg !19834
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !19851
  ret void, !dbg !19852
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !19853 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !19854
  br i1 %1, label %8, label %2, !dbg !19855

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !19856
  br i1 %3, label %8, label %4, !dbg !19857

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19858
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !19859
  %7 = xor i1 %6, true, !dbg !19857
  br label %8, !dbg !19857

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !19860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !19861 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !19862, !range !8665
  %2 = icmp eq i8 %1, 0, !dbg !19862
  ret i1 %2, !dbg !19863
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !19864 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19867, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %1, metadata !18811, metadata !DIExpression()) #25, !dbg !19872
  %2 = icmp eq i32 %1, 0, !dbg !19873
  br i1 %2, label %4, label %3, !dbg !19874

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1392) #26, !dbg !19875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1392) #26, !dbg !19875
  unreachable, !dbg !19875

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !19877
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19879, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19881
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !19881
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19877
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19882
  br i1 %6, label %8, label %7, !dbg !19883

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !19884
  unreachable, !dbg !19884

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !19881
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !19877
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19885
  call void @llvm.dbg.value(metadata i32 undef, metadata !19866, metadata !DIExpression()), !dbg !19886
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19887
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18275, metadata !DIExpression()) #25, !dbg !19890
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !19892
  %11 = load i8, i8* %10, align 1, !dbg !19893
  %12 = and i8 %11, 127, !dbg !19893
  store i8 %12, i8* %10, align 1, !dbg !19893
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18283, metadata !DIExpression()) #25, !dbg !19894
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #26, !dbg !19896
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19897
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !18292, metadata !DIExpression()) #25, !dbg !19898
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !19900
  %15 = load i8, i8* %14, align 1, !dbg !19901
  %16 = or i8 %15, -128, !dbg !19901
  store i8 %16, i8* %14, align 1, !dbg !19901
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !18299, metadata !DIExpression()) #25, !dbg !19902
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !18306, metadata !DIExpression()) #25, !dbg !19904
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !18312, metadata !DIExpression()) #25, !dbg !19904
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #26, !dbg !19906
  br i1 %17, label %18, label %19, !dbg !19907

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !19908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 186) #26, !dbg !19908
  unreachable, !dbg !19908

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.384(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !19909
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !18313, metadata !DIExpression()) #25, !dbg !19904
  %21 = icmp eq %struct._dnode* %20, null, !dbg !19910
  br i1 %21, label %32, label %22, !dbg !19909

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !18313, metadata !DIExpression()) #25, !dbg !19904
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !19911
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !18313, metadata !DIExpression()) #25, !dbg !19904
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #26, !dbg !19912
  %26 = icmp sgt i32 %25, 0, !dbg !19913
  br i1 %26, label %27, label %29, !dbg !19914

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !19915
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #26, !dbg !19916
  br label %34, !dbg !19917

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #26, !dbg !19910
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !18313, metadata !DIExpression()) #25, !dbg !19904
  %31 = icmp eq %struct._dnode* %30, null, !dbg !19910
  br i1 %31, label %32, label %22, !dbg !19909, !llvm.loop !19918

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !19920
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #26, !dbg !19921
  br label %34, !dbg !19922

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !19923
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !19924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18764, metadata !DIExpression()) #25, !dbg !19924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18768, metadata !DIExpression()) #25, !dbg !19926
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19928
  br i1 %35, label %37, label %36, !dbg !19929

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !19930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !19930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !19930
  unreachable, !dbg !19930

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !19879
  call void @llvm.dbg.value(metadata i32 %38, metadata !18095, metadata !DIExpression()) #25, !dbg !19881
  call void @llvm.dbg.value(metadata i32 %38, metadata !18089, metadata !DIExpression()) #25, !dbg !19877
  call void @llvm.dbg.value(metadata i32 %38, metadata !19866, metadata !DIExpression()), !dbg !19886
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !19924
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #26, !dbg !19931
  ret void, !dbg !19932
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !19933 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !19937, metadata !DIExpression()), !dbg !19940
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19941, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %3, metadata !18811, metadata !DIExpression()) #25, !dbg !19946
  %4 = icmp eq i32 %3, 0, !dbg !19947
  br i1 %4, label %6, label %5, !dbg !19948

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1463) #26, !dbg !19949
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19949
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1463) #26, !dbg !19949
  unreachable, !dbg !19949

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !19951
  br i1 %7, label %8, label %10, !dbg !19953

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19954
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #27, !dbg !19956
  br label %15, !dbg !19957

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !19938, metadata !DIExpression()), !dbg !19940
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !19958
  %12 = sext i32 %11 to i64, !dbg !19958
  call void @llvm.dbg.value(metadata i64 %12, metadata !19938, metadata !DIExpression()), !dbg !19940
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #27, !dbg !19959
  %14 = trunc i64 %13 to i32, !dbg !19959
  call void @llvm.dbg.value(metadata i32 %14, metadata !19939, metadata !DIExpression()), !dbg !19940
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !19940
  ret i32 %16, !dbg !19960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !19961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19965, metadata !DIExpression()), !dbg !19966
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !19967, !srcloc !19969
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !19970
  ret void, !dbg !19971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !19972 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !19976, metadata !DIExpression()), !dbg !19980
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19981, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %2, metadata !18811, metadata !DIExpression()) #25, !dbg !19986
  %3 = icmp eq i32 %2, 0, !dbg !19987
  br i1 %3, label %5, label %4, !dbg !19988

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1420) #26, !dbg !19989
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !19989
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1420) #26, !dbg !19989
  unreachable, !dbg !19989

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !19991
  br i1 %6, label %7, label %8, !dbg !19993

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #27, !dbg !19994
  br label %43, !dbg !19996

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !19978, metadata !DIExpression()), !dbg !19980
  %9 = icmp sgt i64 %0, -3, !dbg !19997
  br i1 %9, label %10, label %14, !dbg !19999

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !20000
  %12 = trunc i64 %0 to i32, !dbg !20002
  %13 = add i32 %11, %12, !dbg !20002
  call void @llvm.dbg.value(metadata i32 %13, metadata !19977, metadata !DIExpression()), !dbg !19980
  br label %17, !dbg !20003

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !20004
  %16 = sub i32 -2, %15, !dbg !20004
  call void @llvm.dbg.value(metadata i32 %16, metadata !19977, metadata !DIExpression()), !dbg !19980
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !20006
  call void @llvm.dbg.value(metadata i32 %18, metadata !19977, metadata !DIExpression()), !dbg !19980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !20007
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20009, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !20011
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !20011
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !20007
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20012
  br i1 %20, label %22, label %21, !dbg !20013

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20014
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20014
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20014
  unreachable, !dbg !20014

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !20011
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !20007
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20015
  call void @llvm.dbg.value(metadata i32 undef, metadata !19979, metadata !DIExpression()), !dbg !19980
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20016
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !20017
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #27, !dbg !20018
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20019
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !20020
  tail call fastcc void @z_add_thread_timeout.399(%struct.k_thread* noundef %24, [1 x i64] %25) #27, !dbg !20020
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20021
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #27, !dbg !20022
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !20023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18764, metadata !DIExpression()) #25, !dbg !20023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18768, metadata !DIExpression()) #25, !dbg !20025
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20027
  br i1 %27, label %29, label %28, !dbg !20028

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !20029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !20029
  unreachable, !dbg !20029

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !20009
  call void @llvm.dbg.value(metadata i32 %30, metadata !18095, metadata !DIExpression()) #25, !dbg !20011
  call void @llvm.dbg.value(metadata i32 %30, metadata !18089, metadata !DIExpression()) #25, !dbg !20007
  call void @llvm.dbg.value(metadata i32 %30, metadata !19979, metadata !DIExpression()), !dbg !19980
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !20023
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !20030
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20031
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #27, !dbg !20031
  br i1 %33, label %34, label %35, !dbg !20034

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1448) #26, !dbg !20035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.386, i32 0, i32 0)) #26, !dbg !20035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1448) #26, !dbg !20035
  unreachable, !dbg !20035

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !20037
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !20038
  %38 = zext i32 %37 to i64, !dbg !20038
  %39 = sub nsw i64 %36, %38, !dbg !20039
  call void @llvm.dbg.value(metadata i64 %39, metadata !19976, metadata !DIExpression()), !dbg !19980
  %40 = icmp sgt i64 %39, 0, !dbg !20040
  %41 = select i1 %40, i64 %39, i64 0, !dbg !20040
  %42 = trunc i64 %41 to i32, !dbg !20040
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !19980
  ret i32 %44, !dbg !20041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !20042 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !20044, metadata !DIExpression()), !dbg !20045
  call void @llvm.dbg.value(metadata i64 %0, metadata !18143, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.value(metadata i32 10000, metadata !18146, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.value(metadata i32 1000, metadata !18147, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.value(metadata i8 1, metadata !18148, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.value(metadata i1 false, metadata !18149, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20046
  call void @llvm.dbg.value(metadata i1 false, metadata !18150, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20046
  call void @llvm.dbg.value(metadata i8 0, metadata !18151, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.value(metadata i1 false, metadata !18152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20046
  call void @llvm.dbg.value(metadata i1 true, metadata !18153, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20046
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !20046
  call void @llvm.dbg.value(metadata i64 %0, metadata !18143, metadata !DIExpression()), !dbg !20046
  %2 = udiv i64 %0, 10, !dbg !20048
  ret i64 %2, !dbg !20052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !20053 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !20054, !srcloc !20056
  tail call void @z_impl_k_yield() #27, !dbg !20057
  ret void, !dbg !20058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !20059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20063, metadata !DIExpression()), !dbg !20065
  %2 = sext i32 %0 to i64, !dbg !20066
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !20067
  call void @llvm.dbg.value(metadata i64 %3, metadata !20064, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20065
  %4 = shl i64 %3, 32, !dbg !20068
  %5 = ashr exact i64 %4, 32, !dbg !20068
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !20069
  call void @llvm.dbg.value(metadata i32 %6, metadata !20064, metadata !DIExpression()), !dbg !20065
  %7 = sext i32 %6 to i64, !dbg !20070
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !20071
  %9 = trunc i64 %8 to i32, !dbg !20071
  ret i32 %9, !dbg !20072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !20073 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !20075, metadata !DIExpression()), !dbg !20076
  call void @llvm.dbg.value(metadata i64 %0, metadata !18143, metadata !DIExpression()), !dbg !20077
  call void @llvm.dbg.value(metadata i32 1000000, metadata !18146, metadata !DIExpression()), !dbg !20077
  call void @llvm.dbg.value(metadata i32 10000, metadata !18147, metadata !DIExpression()), !dbg !20077
  call void @llvm.dbg.value(metadata i8 1, metadata !18148, metadata !DIExpression()), !dbg !20077
  call void @llvm.dbg.value(metadata i1 false, metadata !18149, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20077
  call void @llvm.dbg.value(metadata i1 true, metadata !18150, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20077
  call void @llvm.dbg.value(metadata i8 0, metadata !18151, metadata !DIExpression()), !dbg !20077
  call void @llvm.dbg.value(metadata i1 false, metadata !18152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20077
  call void @llvm.dbg.value(metadata i1 true, metadata !18153, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20077
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !20077
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !20077
  %2 = add i64 %0, 99, !dbg !20079
  call void @llvm.dbg.value(metadata i64 %2, metadata !18143, metadata !DIExpression()), !dbg !20077
  %3 = udiv i64 %2, 100, !dbg !20080
  ret i64 %3, !dbg !20081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !20082 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !20084, metadata !DIExpression()), !dbg !20085
  call void @llvm.dbg.value(metadata i64 %0, metadata !18143, metadata !DIExpression()), !dbg !20086
  call void @llvm.dbg.value(metadata i32 10000, metadata !18146, metadata !DIExpression()), !dbg !20086
  call void @llvm.dbg.value(metadata i32 1000000, metadata !18147, metadata !DIExpression()), !dbg !20086
  call void @llvm.dbg.value(metadata i8 1, metadata !18148, metadata !DIExpression()), !dbg !20086
  call void @llvm.dbg.value(metadata i1 false, metadata !18149, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20086
  call void @llvm.dbg.value(metadata i1 false, metadata !18150, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20086
  call void @llvm.dbg.value(metadata i8 0, metadata !18151, metadata !DIExpression()), !dbg !20086
  call void @llvm.dbg.value(metadata i1 true, metadata !18152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20086
  call void @llvm.dbg.value(metadata i1 false, metadata !18153, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20086
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !20086
  call void @llvm.dbg.value(metadata i64 0, metadata !18154, metadata !DIExpression()), !dbg !20086
  %2 = mul i64 %0, 100, !dbg !20088
  ret i64 %2, !dbg !20090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !20091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !20093, metadata !DIExpression()), !dbg !20094
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !20095
  br i1 %2, label %14, label %3, !dbg !20097

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !20098
  %5 = icmp slt i32 %4, 0, !dbg !20100
  br i1 %5, label %6, label %10, !dbg !20101

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !20102
  %8 = load i8, i8* %7, align 1, !dbg !20102
  %9 = icmp eq i8 %8, 16, !dbg !20105
  br i1 %9, label %10, label %14, !dbg !20106

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !20107
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !20108
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !20109, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %11, metadata !18811, metadata !DIExpression()) #25, !dbg !20113
  %12 = icmp eq i32 %11, 0, !dbg !20114
  br i1 %12, label %13, label %14, !dbg !20115

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !20116
  br label %14, !dbg !20118

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !20119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !20120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !20122, metadata !DIExpression()), !dbg !20123
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !20124
  %3 = load i8, i8* %2, align 1, !dbg !20124
  %4 = and i8 %3, 2, !dbg !20125
  %5 = icmp ne i8 %4, 0, !dbg !20126
  ret i1 %5, !dbg !20127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !20128 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20133
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !20132, metadata !DIExpression()), !dbg !20134
  ret %struct.k_thread* %1, !dbg !20135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !20136 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !20137, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %1, metadata !18811, metadata !DIExpression()) #25, !dbg !20140
  %2 = icmp eq i32 %1, 0, !dbg !20141
  br i1 %2, label %3, label %8, !dbg !20142

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20143
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !20144
  %6 = icmp ne i32 %5, 0, !dbg !20142
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !20145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !20146 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !20148, metadata !DIExpression()), !dbg !20150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !20151
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20153, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !20155
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !20155
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !20151
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20156
  br i1 %3, label %5, label %4, !dbg !20157

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20158
  unreachable, !dbg !20158

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !20153
  call void @llvm.dbg.value(metadata i32 %6, metadata !18095, metadata !DIExpression()) #25, !dbg !20155
  call void @llvm.dbg.value(metadata i32 %6, metadata !18089, metadata !DIExpression()) #25, !dbg !20151
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20159
  call void @llvm.dbg.value(metadata i32 %6, metadata !20149, metadata !DIExpression()), !dbg !20150
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !20160
  %8 = load i8, i8* %7, align 4, !dbg !20160
  %9 = and i8 %8, 1, !dbg !20162
  %10 = icmp eq i8 %9, 0, !dbg !20163
  br i1 %10, label %15, label %11, !dbg !20164

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !20165
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !20165
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20168
  br i1 %12, label %14, label %13, !dbg !20169

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20170
  unreachable, !dbg !20170

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !18117, metadata !DIExpression()) #25, !dbg !20165
  call void @llvm.dbg.value(metadata i32 %6, metadata !18131, metadata !DIExpression()) #25, !dbg !20171
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !20173, !srcloc !18137
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.431, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1731) #26, !dbg !20174
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.432, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !20174
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1731) #26, !dbg !20174
  unreachable, !dbg !20174

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !20178
  %17 = load i8, i8* %16, align 1, !dbg !20178
  %18 = and i8 %17, 8, !dbg !20180
  %19 = icmp eq i8 %18, 0, !dbg !20181
  br i1 %19, label %24, label %20, !dbg !20182

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !20183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !20183
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20186
  br i1 %21, label %23, label %22, !dbg !20187

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20188
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20188
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20188
  unreachable, !dbg !20188

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !18117, metadata !DIExpression()) #25, !dbg !20183
  call void @llvm.dbg.value(metadata i32 %6, metadata !18131, metadata !DIExpression()) #25, !dbg !20189
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !20191, !srcloc !18137
  br label %39, !dbg !20192

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !20193
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20194
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !20196
  br i1 %26, label %27, label %35, !dbg !20197

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !20198, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %28, metadata !18811, metadata !DIExpression()) #25, !dbg !20201
  %29 = icmp eq i32 %28, 0, !dbg !20202
  br i1 %29, label %30, label %35, !dbg !20203

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !20204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18764, metadata !DIExpression()) #25, !dbg !20204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18768, metadata !DIExpression()) #25, !dbg !20207
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20209
  br i1 %31, label %33, label %32, !dbg !20210

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !20211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !20211
  unreachable, !dbg !20211

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !18759, metadata !DIExpression()) #25, !dbg !20204
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !20212
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.431, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1778) #26, !dbg !20213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.433, i32 0, i32 0)) #26, !dbg !20213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1778) #26, !dbg !20213
  unreachable, !dbg !20213

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !20217
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !20217
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20219
  br i1 %36, label %38, label %37, !dbg !20220

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20221
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20221
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20221
  unreachable, !dbg !20221

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !18117, metadata !DIExpression()) #25, !dbg !20217
  call void @llvm.dbg.value(metadata i32 %6, metadata !18131, metadata !DIExpression()) #25, !dbg !20222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !20224, !srcloc !18137
  br label %39, !dbg !20225

39:                                               ; preds = %38, %23
  ret void, !dbg !20225
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !20226 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !20228, metadata !DIExpression()), !dbg !20229
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !20230
  %3 = load i8, i8* %2, align 1, !dbg !20230
  %4 = and i8 %3, 8, !dbg !20232
  %5 = icmp eq i8 %4, 0, !dbg !20233
  br i1 %5, label %6, label %20, !dbg !20234

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !20235
  %8 = or i8 %7, 8, !dbg !20235
  store i8 %8, i8* %2, align 1, !dbg !20235
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !20237
  br i1 %9, label %10, label %12, !dbg !20239

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18275, metadata !DIExpression()) #25, !dbg !20240
  %11 = and i8 %8, 95, !dbg !20243
  store i8 %11, i8* %2, align 1, !dbg !20243
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18283, metadata !DIExpression()) #25, !dbg !20244
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !20246
  br label %12, !dbg !20247

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !20248
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !20248
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !20250
  br i1 %15, label %17, label %16, !dbg !20251

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !20252
  br label %17, !dbg !20254

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !20255
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !20256
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !20257
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !20258
  br label %20, !dbg !20259

20:                                               ; preds = %17, %1
  ret void, !dbg !20260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !20261 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !20265, metadata !DIExpression()), !dbg !20267
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.418(%struct._wait_q_t* noundef %0) #27, !dbg !20268
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !20266, metadata !DIExpression()), !dbg !20267
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !20269
  br i1 %3, label %10, label %4, !dbg !20270

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !20271
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !20273
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !20274, metadata !DIExpression()), !dbg !20280
  call void @llvm.dbg.value(metadata i32 0, metadata !20279, metadata !DIExpression()), !dbg !20280
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !20282
  store i32 0, i32* %7, align 4, !dbg !20283
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !20284
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.418(%struct._wait_q_t* noundef %0) #27, !dbg !20268
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !20266, metadata !DIExpression()), !dbg !20267
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !20269
  br i1 %9, label %10, label %4, !dbg !20270, !llvm.loop !20285

10:                                               ; preds = %4, %1
  ret void, !dbg !20287
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !20288 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !20293, metadata !DIExpression()), !dbg !20296
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !20292, metadata !DIExpression()), !dbg !20296
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !20297
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20299, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !20301
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !20301
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !20297
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20302
  br i1 %4, label %6, label %5, !dbg !20303

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20304
  unreachable, !dbg !20304

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !20299
  call void @llvm.dbg.value(metadata i32 %7, metadata !18095, metadata !DIExpression()) #25, !dbg !20301
  call void @llvm.dbg.value(metadata i32 %7, metadata !18089, metadata !DIExpression()) #25, !dbg !20297
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20305
  call void @llvm.dbg.value(metadata i32 %7, metadata !20294, metadata !DIExpression()), !dbg !20296
  call void @llvm.dbg.value(metadata i32 0, metadata !20295, metadata !DIExpression()), !dbg !20296
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !20306
  %9 = load i8, i8* %8, align 1, !dbg !20306
  %10 = and i8 %9, 8, !dbg !20308
  %11 = icmp eq i8 %10, 0, !dbg !20309
  br i1 %11, label %12, label %35, !dbg !20310

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !20293, metadata !DIExpression()), !dbg !20296
  %14 = icmp eq i64 %13, 0, !dbg !20311
  br i1 %14, label %35, label %15, !dbg !20313

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20314
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !20316
  br i1 %17, label %35, label %18, !dbg !20317

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !20318
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !20318
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !20319
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !20320
  br i1 %22, label %35, label %23, !dbg !20321

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !20322, !srcloc !18815
  call void @llvm.dbg.value(metadata i32 %24, metadata !18811, metadata !DIExpression()) #25, !dbg !20328
  %25 = icmp eq i32 %24, 0, !dbg !20329
  br i1 %25, label %27, label %26, !dbg !20330

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.412, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1809) #26, !dbg !20331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.434, i32 0, i32 0)) #26, !dbg !20331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.383, i32 0, i32 0), i32 noundef 1809) #26, !dbg !20331
  unreachable, !dbg !20331

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20333
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !20334
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #27, !dbg !20335
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20336
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #27, !dbg !20337
  call void @llvm.dbg.value(metadata i32 undef, metadata !18759, metadata !DIExpression()) #25, !dbg !20338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18764, metadata !DIExpression()) #25, !dbg !20338
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18768, metadata !DIExpression()) #25, !dbg !20340
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20342
  br i1 %31, label %33, label %32, !dbg !20343

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !20344
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 225) #26, !dbg !20344
  unreachable, !dbg !20344

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !18759, metadata !DIExpression()) #25, !dbg !20338
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !20345
  call void @llvm.dbg.value(metadata i32 %34, metadata !20295, metadata !DIExpression()), !dbg !20296
  br label %40, !dbg !20346

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !20347
  call void @llvm.dbg.value(metadata i32 %36, metadata !20295, metadata !DIExpression()), !dbg !20296
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !20348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !20348
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20350
  br i1 %37, label %39, label %38, !dbg !20351

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20352
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20352
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20352
  unreachable, !dbg !20352

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !18117, metadata !DIExpression()) #25, !dbg !20348
  call void @llvm.dbg.value(metadata i32 %7, metadata !18131, metadata !DIExpression()) #25, !dbg !20353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !20355, !srcloc !18137
  br label %40, !dbg !20356

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !20296
  ret i32 %41, !dbg !20357
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !20358 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !20362, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.value(metadata i32 %1, metadata !20363, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.value(metadata i8* %2, metadata !20364, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.value(metadata i8 0, metadata !20366, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.value(metadata i32 0, metadata !20367, metadata !DIExpression()), !dbg !20371
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18083, metadata !DIExpression()) #25, !dbg !20372
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20374, !srcloc !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !20376
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()) #25, !dbg !20376
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !20372
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20377
  br i1 %5, label %7, label %6, !dbg !20378

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.377, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20379
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.379, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20379
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 148) #26, !dbg !20379
  unreachable, !dbg !20379

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !18095, metadata !DIExpression()) #25, !dbg !20376
  call void @llvm.dbg.value(metadata i32 undef, metadata !18089, metadata !DIExpression()) #25, !dbg !20372
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20380
  call void @llvm.dbg.value(metadata i32 undef, metadata !20369, metadata !DIExpression()), !dbg !20371
  call void @llvm.dbg.value(metadata i8 poison, metadata !20366, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.value(metadata i32 undef, metadata !20367, metadata !DIExpression()), !dbg !20371
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #27, !dbg !20381
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !20365, metadata !DIExpression()), !dbg !20370
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !20384
  br i1 %10, label %15, label %11, !dbg !20386

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !20387, metadata !DIExpression()), !dbg !20394
  call void @llvm.dbg.value(metadata i32 %1, metadata !20392, metadata !DIExpression()), !dbg !20394
  call void @llvm.dbg.value(metadata i8* %2, metadata !20393, metadata !DIExpression()), !dbg !20394
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !20274, metadata !DIExpression()), !dbg !20397
  call void @llvm.dbg.value(metadata i32 %1, metadata !20279, metadata !DIExpression()), !dbg !20397
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !20399
  store i32 %1, i32* %12, align 4, !dbg !20400
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !20401
  store i8* %2, i8** %13, align 4, !dbg !20402
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !20403
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !20404
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #27, !dbg !20405
  call void @llvm.dbg.value(metadata i8 1, metadata !20366, metadata !DIExpression()), !dbg !20370
  br label %15, !dbg !20406

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !20366, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !20407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !18122, metadata !DIExpression()) #25, !dbg !20407
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20409
  br i1 %16, label %18, label %17, !dbg !20410

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.381, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !20411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.378, i32 0, i32 0), i32 noundef 194) #26, !dbg !20411
  unreachable, !dbg !20411

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !20370
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !20374
  call void @llvm.dbg.value(metadata i32 %20, metadata !18095, metadata !DIExpression()) #25, !dbg !20376
  call void @llvm.dbg.value(metadata i32 %20, metadata !18089, metadata !DIExpression()) #25, !dbg !20372
  call void @llvm.dbg.value(metadata i32 %20, metadata !20369, metadata !DIExpression()), !dbg !20371
  call void @llvm.dbg.value(metadata i32 undef, metadata !18117, metadata !DIExpression()) #25, !dbg !20407
  call void @llvm.dbg.value(metadata i32 undef, metadata !18131, metadata !DIExpression()) #25, !dbg !20412
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !20414, !srcloc !18137
  call void @llvm.dbg.value(metadata i8 poison, metadata !20366, metadata !DIExpression()), !dbg !20370
  call void @llvm.dbg.value(metadata i32 undef, metadata !20367, metadata !DIExpression()), !dbg !20371
  ret i1 %19, !dbg !20415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !20416 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !20421, metadata !DIExpression()), !dbg !20426
  call void @llvm.dbg.value(metadata i64 undef, metadata !20423, metadata !DIExpression()), !dbg !20426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !20420, metadata !DIExpression()), !dbg !20426
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !20422, metadata !DIExpression()), !dbg !20426
  call void @llvm.dbg.value(metadata i8** %4, metadata !20424, metadata !DIExpression()), !dbg !20426
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !20427
  call void @llvm.dbg.value(metadata i32 %6, metadata !20425, metadata !DIExpression()), !dbg !20426
  %7 = icmp eq i8** %4, null, !dbg !20428
  br i1 %7, label %12, label %8, !dbg !20430

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !20431
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !20433
  %11 = load i8*, i8** %10, align 4, !dbg !20433
  store i8* %11, i8** %4, align 4, !dbg !20434
  br label %12, !dbg !20435

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !20436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !20437 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !20439
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !20440
  ret void, !dbg !20441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !20442 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !20452, metadata !DIExpression()), !dbg !20469
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20450, metadata !DIExpression()), !dbg !20469
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !20451, metadata !DIExpression()), !dbg !20469
  %5 = icmp eq i64 %4, -1, !dbg !20470
  br i1 %5, label %63, label %6, !dbg !20472

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !20473
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.439(%struct._dnode* noundef %7) #27, !dbg !20473
  br i1 %8, label %9, label %10, !dbg !20476

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.441, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.442, i32 0, i32 0), i32 noundef 99) #26, !dbg !20477
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.443, i32 0, i32 0)) #26, !dbg !20477
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.442, i32 0, i32 0), i32 noundef 99) #26, !dbg !20477
  unreachable, !dbg !20477

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !20479
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !20480
  call void @llvm.dbg.value(metadata i32 0, metadata !20453, metadata !DIExpression()), !dbg !20481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !20489
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20491, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20498
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !20498
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20489
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20499
  br i1 %13, label %15, label %14, !dbg !20502

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20503
  unreachable, !dbg !20503

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !20491
  call void @llvm.dbg.value(metadata i32 %16, metadata !20494, metadata !DIExpression()) #25, !dbg !20498
  call void @llvm.dbg.value(metadata i32 %16, metadata !20488, metadata !DIExpression()) #25, !dbg !20489
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20505
  call void @llvm.dbg.value(metadata i32 %16, metadata !20459, metadata !DIExpression()), !dbg !20481
  call void @llvm.dbg.value(metadata i32 undef, metadata !20453, metadata !DIExpression()), !dbg !20481
  %17 = icmp slt i64 %4, -1, !dbg !20506
  br i1 %17, label %18, label %24, !dbg !20507

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !20508
  %20 = add i64 %4, %19, !dbg !20509
  %21 = sub i64 -2, %20, !dbg !20509
  call void @llvm.dbg.value(metadata i64 %21, metadata !20463, metadata !DIExpression()), !dbg !20510
  %22 = icmp sgt i64 %21, 1, !dbg !20511
  %23 = select i1 %22, i64 %21, i64 1, !dbg !20511
  br label %29, !dbg !20512

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !20513
  %26 = tail call fastcc i32 @elapsed.447() #27, !dbg !20515
  %27 = sext i32 %26 to i64, !dbg !20515
  %28 = add nsw i64 %25, %27, !dbg !20516
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !20517
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !20518
  store i64 %30, i64* %31, align 8, !dbg !20519
  %32 = tail call fastcc %struct._timeout* @first() #27, !dbg !20520
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !20460, metadata !DIExpression()), !dbg !20522
  %33 = icmp eq %struct._timeout* %32, null, !dbg !20523
  br i1 %33, label %48, label %34, !dbg !20523

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !20524
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !20460, metadata !DIExpression()), !dbg !20522
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !20528
  %38 = load i64, i64* %37, align 8, !dbg !20528
  %39 = icmp slt i64 %35, %38, !dbg !20529
  br i1 %39, label %40, label %44, !dbg !20530

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !20528
  %42 = sub nsw i64 %38, %35, !dbg !20531
  store i64 %42, i64* %41, align 8, !dbg !20531
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !20533
  tail call fastcc void @sys_dlist_insert.448(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #27, !dbg !20534
  br label %49, !dbg !20535

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !20536
  store i64 %45, i64* %31, align 8, !dbg !20536
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #27, !dbg !20537
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !20460, metadata !DIExpression()), !dbg !20522
  %47 = icmp eq %struct._timeout* %46, null, !dbg !20523
  br i1 %47, label %48, label %34, !dbg !20523, !llvm.loop !20538

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.449(%struct._dnode* noundef nonnull %7) #27, !dbg !20540
  br label %49, !dbg !20543

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #27, !dbg !20544
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !20545
  br i1 %51, label %52, label %59, !dbg !20546

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #27, !dbg !20547
  call void @llvm.dbg.value(metadata i32 %53, metadata !20466, metadata !DIExpression()), !dbg !20548
  %54 = icmp ne i32 %53, 0, !dbg !20549
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !20551
  br i1 %57, label %59, label %58, !dbg !20551

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !20552
  br label %59, !dbg !20554

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !20561
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20563
  br i1 %60, label %62, label %61, !dbg !20566

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20567
  unreachable, !dbg !20567

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !20555, metadata !DIExpression()) #25, !dbg !20561
  call void @llvm.dbg.value(metadata i32 %16, metadata !20569, metadata !DIExpression()) #25, !dbg !20572
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !20574, !srcloc !20575
  call void @llvm.dbg.value(metadata i32 undef, metadata !20453, metadata !DIExpression()), !dbg !20481
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !20576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.439(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !20577 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20583, metadata !DIExpression()), !dbg !20584
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20585
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !20585
  %4 = icmp ne %struct._dnode* %3, null, !dbg !20586
  ret i1 %4, !dbg !20587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.447() unnamed_addr #1 !dbg !20588 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !20591
  %2 = icmp eq i32 %1, 0, !dbg !20592
  br i1 %2, label %3, label %5, !dbg !20591

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !20593
  br label %5, !dbg !20591

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !20591
  ret i32 %6, !dbg !20594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !20595 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.454() #27, !dbg !20601
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !20599, metadata !DIExpression()), !dbg !20602
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !20603
  ret %struct._timeout* %2, !dbg !20604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.448(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !20605 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20609, metadata !DIExpression()), !dbg !20613
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !20610, metadata !DIExpression()), !dbg !20613
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20614
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !20614
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !20611, metadata !DIExpression()), !dbg !20613
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !20615
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !20616
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !20617
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !20618
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !20619
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !20620
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !20621
  ret void, !dbg !20622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !20623 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20627, metadata !DIExpression()), !dbg !20629
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !20630
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.452(%struct._dnode* noundef %2) #27, !dbg !20631
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !20628, metadata !DIExpression()), !dbg !20629
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !20632
  ret %struct._timeout* %4, !dbg !20633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.449(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !20634 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20639, metadata !DIExpression()), !dbg !20642
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20640, metadata !DIExpression()), !dbg !20642
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !20643
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !20641, metadata !DIExpression()), !dbg !20642
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20644
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !20645
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20646
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !20647
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !20648
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !20649
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !20650
  ret void, !dbg !20651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !20652 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !20657
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !20654, metadata !DIExpression()), !dbg !20658
  %2 = tail call fastcc i32 @elapsed.447() #27, !dbg !20659
  call void @llvm.dbg.value(metadata i32 %2, metadata !20655, metadata !DIExpression()), !dbg !20658
  %3 = icmp eq %struct._timeout* %1, null, !dbg !20660
  br i1 %3, label %14, label %4, !dbg !20662

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !20663
  %6 = load i64, i64* %5, align 8, !dbg !20663
  %7 = sext i32 %2 to i64, !dbg !20664
  %8 = sub nsw i64 %6, %7, !dbg !20665
  %9 = icmp sgt i64 %8, 2147483647, !dbg !20666
  br i1 %9, label %14, label %10, !dbg !20667

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !20668
  %12 = select i1 %11, i64 %8, i64 0, !dbg !20668
  %13 = trunc i64 %12 to i32, !dbg !20668
  call void @llvm.dbg.value(metadata i32 %13, metadata !20656, metadata !DIExpression()), !dbg !20658
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !20670
  call void @llvm.dbg.value(metadata i32 %15, metadata !20656, metadata !DIExpression()), !dbg !20658
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !20671
  %17 = icmp ne i32 %16, 0, !dbg !20673
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !20674
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !20674
  call void @llvm.dbg.value(metadata i32 %20, metadata !20656, metadata !DIExpression()), !dbg !20658
  ret i32 %20, !dbg !20675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.452(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !20676 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20680, metadata !DIExpression()), !dbg !20682
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20681, metadata !DIExpression()), !dbg !20682
  %2 = icmp eq %struct._dnode* %0, null, !dbg !20683
  br i1 %2, label %5, label %3, !dbg !20684

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.453(%struct._dnode* noundef nonnull %0) #27, !dbg !20685
  br label %5, !dbg !20684

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !20684
  ret %struct._dnode* %6, !dbg !20686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.453(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !20687 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20689, metadata !DIExpression()), !dbg !20691
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20690, metadata !DIExpression()), !dbg !20691
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !20692
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !20693
  br i1 %3, label %7, label %4, !dbg !20694

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20695
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !20695
  br label %7, !dbg !20694

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !20694
  ret %struct._dnode* %8, !dbg !20696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.454() unnamed_addr #10 !dbg !20697 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20701, metadata !DIExpression()), !dbg !20702
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.455() #27, !dbg !20703
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !20703
  ret %struct._dnode* %3, !dbg !20704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.455() unnamed_addr #10 !dbg !20705 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !20709, metadata !DIExpression()), !dbg !20710
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !20711
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !20712
  ret i1 %2, !dbg !20713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !20714 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20718, metadata !DIExpression()), !dbg !20723
  call void @llvm.dbg.value(metadata i32 -22, metadata !20719, metadata !DIExpression()), !dbg !20723
  call void @llvm.dbg.value(metadata i32 0, metadata !20720, metadata !DIExpression()), !dbg !20724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !20725
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20727, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20729
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !20729
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20725
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20730
  br i1 %3, label %5, label %4, !dbg !20731

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20732
  unreachable, !dbg !20732

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20729
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20725
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20733
  call void @llvm.dbg.value(metadata i32 undef, metadata !20722, metadata !DIExpression()), !dbg !20724
  call void @llvm.dbg.value(metadata i32 -22, metadata !20719, metadata !DIExpression()), !dbg !20723
  call void @llvm.dbg.value(metadata i32 undef, metadata !20720, metadata !DIExpression()), !dbg !20724
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !20719, metadata !DIExpression()), !dbg !20723
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.439(%struct._dnode* noundef %6) #27, !dbg !20734
  br i1 %7, label %8, label %9, !dbg !20738

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !20739
  call void @llvm.dbg.value(metadata i32 0, metadata !20719, metadata !DIExpression()), !dbg !20723
  br label %9, !dbg !20741

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !20723
  call void @llvm.dbg.value(metadata i32 %10, metadata !20719, metadata !DIExpression()), !dbg !20723
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !20742
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20744
  br i1 %11, label %13, label %12, !dbg !20745

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20746
  unreachable, !dbg !20746

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !20727
  call void @llvm.dbg.value(metadata i32 %14, metadata !20494, metadata !DIExpression()) #25, !dbg !20729
  call void @llvm.dbg.value(metadata i32 %14, metadata !20488, metadata !DIExpression()) #25, !dbg !20725
  call void @llvm.dbg.value(metadata i32 %14, metadata !20722, metadata !DIExpression()), !dbg !20724
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20742
  call void @llvm.dbg.value(metadata i32 undef, metadata !20569, metadata !DIExpression()) #25, !dbg !20747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !20749, !srcloc !20575
  call void @llvm.dbg.value(metadata i32 %10, metadata !20719, metadata !DIExpression()), !dbg !20723
  call void @llvm.dbg.value(metadata i32 undef, metadata !20720, metadata !DIExpression()), !dbg !20724
  ret i32 %10, !dbg !20750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !20751 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20753, metadata !DIExpression()), !dbg !20754
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !20755
  %3 = icmp eq %struct._timeout* %2, null, !dbg !20757
  br i1 %3, label %10, label %4, !dbg !20758

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !20759
  %6 = load i64, i64* %5, align 8, !dbg !20759
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !20761
  %8 = load i64, i64* %7, align 8, !dbg !20762
  %9 = add nsw i64 %8, %6, !dbg !20762
  store i64 %9, i64* %7, align 8, !dbg !20762
  br label %10, !dbg !20763

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !20764
  tail call fastcc void @sys_dlist_remove.458(%struct._dnode* noundef %11) #27, !dbg !20765
  ret void, !dbg !20766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.458(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !20767 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20771, metadata !DIExpression()), !dbg !20774
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20775
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !20775
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !20772, metadata !DIExpression()), !dbg !20774
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20776
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !20776
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !20773, metadata !DIExpression()), !dbg !20774
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !20777
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !20778
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !20779
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !20780
  tail call fastcc void @sys_dnode_init.459(%struct._dnode* noundef %0) #27, !dbg !20781
  ret void, !dbg !20782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.459(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !20783 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !20785, metadata !DIExpression()), !dbg !20786
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !20787
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !20788
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !20789
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !20790
  ret void, !dbg !20791
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !20792 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20798, metadata !DIExpression()), !dbg !20803
  call void @llvm.dbg.value(metadata i64 0, metadata !20799, metadata !DIExpression()), !dbg !20803
  call void @llvm.dbg.value(metadata i32 0, metadata !20800, metadata !DIExpression()), !dbg !20804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !20805
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20807, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20809
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !20809
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20805
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20810
  br i1 %3, label %5, label %4, !dbg !20811

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20812
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20812
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20812
  unreachable, !dbg !20812

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20809
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20805
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20813
  call void @llvm.dbg.value(metadata i32 undef, metadata !20802, metadata !DIExpression()), !dbg !20804
  call void @llvm.dbg.value(metadata i64 0, metadata !20799, metadata !DIExpression()), !dbg !20803
  call void @llvm.dbg.value(metadata i32 undef, metadata !20800, metadata !DIExpression()), !dbg !20804
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !20814
  call void @llvm.dbg.value(metadata i64 %6, metadata !20799, metadata !DIExpression()), !dbg !20803
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !20817
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20819
  br i1 %7, label %9, label %8, !dbg !20820

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20821
  unreachable, !dbg !20821

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !20807
  call void @llvm.dbg.value(metadata i32 %10, metadata !20494, metadata !DIExpression()) #25, !dbg !20809
  call void @llvm.dbg.value(metadata i32 %10, metadata !20488, metadata !DIExpression()) #25, !dbg !20805
  call void @llvm.dbg.value(metadata i32 %10, metadata !20802, metadata !DIExpression()), !dbg !20804
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20817
  call void @llvm.dbg.value(metadata i32 undef, metadata !20569, metadata !DIExpression()) #25, !dbg !20822
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !20824, !srcloc !20575
  call void @llvm.dbg.value(metadata i64 %6, metadata !20799, metadata !DIExpression()), !dbg !20803
  call void @llvm.dbg.value(metadata i32 undef, metadata !20800, metadata !DIExpression()), !dbg !20804
  ret i64 %6, !dbg !20825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !20826 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20828, metadata !DIExpression()), !dbg !20832
  call void @llvm.dbg.value(metadata i64 0, metadata !20829, metadata !DIExpression()), !dbg !20832
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.460(%struct._timeout* noundef %0) #27, !dbg !20833
  br i1 %2, label %21, label %3, !dbg !20835

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !20836
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !20830, metadata !DIExpression()), !dbg !20837
  call void @llvm.dbg.value(metadata i64 0, metadata !20829, metadata !DIExpression()), !dbg !20832
  %5 = icmp eq %struct._timeout* %4, null, !dbg !20838
  br i1 %5, label %16, label %6, !dbg !20840

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !20830, metadata !DIExpression()), !dbg !20837
  call void @llvm.dbg.value(metadata i64 %8, metadata !20829, metadata !DIExpression()), !dbg !20832
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !20841
  %10 = load i64, i64* %9, align 8, !dbg !20841
  %11 = add nsw i64 %10, %8, !dbg !20843
  call void @llvm.dbg.value(metadata i64 %11, metadata !20829, metadata !DIExpression()), !dbg !20832
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !20844
  br i1 %12, label %16, label %13, !dbg !20846

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !20847
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !20830, metadata !DIExpression()), !dbg !20837
  call void @llvm.dbg.value(metadata i64 %11, metadata !20829, metadata !DIExpression()), !dbg !20832
  %15 = icmp eq %struct._timeout* %14, null, !dbg !20838
  br i1 %15, label %16, label %6, !dbg !20840, !llvm.loop !20848

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !20832
  call void @llvm.dbg.value(metadata i64 %17, metadata !20829, metadata !DIExpression()), !dbg !20832
  %18 = tail call fastcc i32 @elapsed.447() #27, !dbg !20850
  %19 = sext i32 %18 to i64, !dbg !20850
  %20 = sub nsw i64 %17, %19, !dbg !20851
  br label %21, !dbg !20852

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !20832
  ret i64 %22, !dbg !20853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.460(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !20854 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20858, metadata !DIExpression()), !dbg !20859
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !20860
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.439(%struct._dnode* noundef %2) #27, !dbg !20861
  %4 = xor i1 %3, true, !dbg !20862
  ret i1 %4, !dbg !20863
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !20864 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !20866, metadata !DIExpression()), !dbg !20871
  call void @llvm.dbg.value(metadata i64 0, metadata !20867, metadata !DIExpression()), !dbg !20871
  call void @llvm.dbg.value(metadata i32 0, metadata !20868, metadata !DIExpression()), !dbg !20872
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !20873
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20875, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20877
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !20877
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20873
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20878
  br i1 %3, label %5, label %4, !dbg !20879

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20880
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20880
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20880
  unreachable, !dbg !20880

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20877
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20873
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20881
  call void @llvm.dbg.value(metadata i32 undef, metadata !20870, metadata !DIExpression()), !dbg !20872
  call void @llvm.dbg.value(metadata i64 0, metadata !20867, metadata !DIExpression()), !dbg !20871
  call void @llvm.dbg.value(metadata i32 undef, metadata !20868, metadata !DIExpression()), !dbg !20872
  %6 = load i64, i64* @curr_tick, align 8, !dbg !20882
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !20885
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !20867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !20871
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !20886
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20888
  br i1 %8, label %10, label %9, !dbg !20889

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20890
  unreachable, !dbg !20890

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !20875
  call void @llvm.dbg.value(metadata i32 %11, metadata !20494, metadata !DIExpression()) #25, !dbg !20877
  call void @llvm.dbg.value(metadata i32 %11, metadata !20488, metadata !DIExpression()) #25, !dbg !20873
  call void @llvm.dbg.value(metadata i32 %11, metadata !20870, metadata !DIExpression()), !dbg !20872
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !20867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !20871
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20886
  call void @llvm.dbg.value(metadata i32 undef, metadata !20569, metadata !DIExpression()) #25, !dbg !20891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !20893, !srcloc !20575
  call void @llvm.dbg.value(metadata i32 undef, metadata !20868, metadata !DIExpression()), !dbg !20872
  %12 = add i64 %7, %6, !dbg !20894
  ret i64 %12, !dbg !20895
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !20896 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !20898, metadata !DIExpression()), !dbg !20902
  call void @llvm.dbg.value(metadata i32 0, metadata !20899, metadata !DIExpression()), !dbg !20903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !20904
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20906, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20908
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !20908
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20904
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20909
  br i1 %2, label %4, label %3, !dbg !20910

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20911
  unreachable, !dbg !20911

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20908
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20904
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20912
  call void @llvm.dbg.value(metadata i32 undef, metadata !20901, metadata !DIExpression()), !dbg !20903
  call void @llvm.dbg.value(metadata i32 -1, metadata !20898, metadata !DIExpression()), !dbg !20902
  call void @llvm.dbg.value(metadata i32 undef, metadata !20899, metadata !DIExpression()), !dbg !20903
  %5 = tail call fastcc i32 @next_timeout() #27, !dbg !20913
  call void @llvm.dbg.value(metadata i32 %5, metadata !20898, metadata !DIExpression()), !dbg !20902
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !20916
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20918
  br i1 %6, label %8, label %7, !dbg !20919

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20920
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20920
  unreachable, !dbg !20920

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !20906
  call void @llvm.dbg.value(metadata i32 %9, metadata !20494, metadata !DIExpression()) #25, !dbg !20908
  call void @llvm.dbg.value(metadata i32 %9, metadata !20488, metadata !DIExpression()) #25, !dbg !20904
  call void @llvm.dbg.value(metadata i32 %9, metadata !20901, metadata !DIExpression()), !dbg !20903
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20916
  call void @llvm.dbg.value(metadata i32 undef, metadata !20569, metadata !DIExpression()) #25, !dbg !20921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !20923, !srcloc !20575
  call void @llvm.dbg.value(metadata i32 %5, metadata !20898, metadata !DIExpression()), !dbg !20902
  call void @llvm.dbg.value(metadata i32 undef, metadata !20899, metadata !DIExpression()), !dbg !20903
  ret i32 %5, !dbg !20924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !20925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20927, metadata !DIExpression()), !dbg !20937
  call void @llvm.dbg.value(metadata i1 %1, metadata !20928, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20937
  call void @llvm.dbg.value(metadata i32 0, metadata !20929, metadata !DIExpression()), !dbg !20938
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !20939
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20941, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20943
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !20943
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20939
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20944
  br i1 %4, label %6, label %5, !dbg !20945

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20946
  unreachable, !dbg !20946

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20943
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20939
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20947
  call void @llvm.dbg.value(metadata i32 undef, metadata !20931, metadata !DIExpression()), !dbg !20938
  call void @llvm.dbg.value(metadata i32 undef, metadata !20929, metadata !DIExpression()), !dbg !20938
  %7 = tail call fastcc i32 @next_timeout() #27, !dbg !20948
  call void @llvm.dbg.value(metadata i32 %7, metadata !20932, metadata !DIExpression()), !dbg !20949
  call void @llvm.dbg.value(metadata i1 undef, metadata !20935, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20949
  %8 = icmp slt i32 %7, 2, !dbg !20950
  call void @llvm.dbg.value(metadata i1 %8, metadata !20936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20949
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !20951
  call void @llvm.dbg.value(metadata i1 %9, metadata !20935, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !20949
  br i1 %10, label %14, label %11, !dbg !20951

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !20953
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !20953
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !20955
  br label %14, !dbg !20956

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !20957
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20959
  br i1 %15, label %17, label %16, !dbg !20960

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !20961
  unreachable, !dbg !20961

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !20941
  call void @llvm.dbg.value(metadata i32 %18, metadata !20494, metadata !DIExpression()) #25, !dbg !20943
  call void @llvm.dbg.value(metadata i32 %18, metadata !20488, metadata !DIExpression()) #25, !dbg !20939
  call void @llvm.dbg.value(metadata i32 %18, metadata !20931, metadata !DIExpression()), !dbg !20938
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20957
  call void @llvm.dbg.value(metadata i32 undef, metadata !20569, metadata !DIExpression()) #25, !dbg !20962
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !20964, !srcloc !20575
  call void @llvm.dbg.value(metadata i32 1, metadata !20929, metadata !DIExpression()), !dbg !20938
  call void @llvm.dbg.value(metadata i32 undef, metadata !20929, metadata !DIExpression()), !dbg !20938
  ret void, !dbg !20965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !20966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !20970, metadata !DIExpression()), !dbg !20975
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !20976
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !20977
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20979, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20981
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !20981
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20977
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20982
  br i1 %3, label %5, label %4, !dbg !20983

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !20984
  unreachable, !dbg !20984

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !20981
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !20977
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !20985
  call void @llvm.dbg.value(metadata i32 undef, metadata !20971, metadata !DIExpression()), !dbg !20975
  store i32 %0, i32* @announce_remaining, align 4, !dbg !20975
  call void @llvm.dbg.value(metadata i32 undef, metadata !20971, metadata !DIExpression()), !dbg !20975
  %6 = tail call fastcc %struct._timeout* @first() #27, !dbg !20986
  %7 = icmp eq %struct._timeout* %6, null, !dbg !20987
  br i1 %7, label %37, label %8, !dbg !20988

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !20975
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !20989
  %14 = load i64, i64* %13, align 8, !dbg !20989
  %15 = sext i32 %11 to i64, !dbg !20990
  %16 = icmp sgt i64 %14, %15, !dbg !20991
  br i1 %16, label %35, label %17, !dbg !20992

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !20972, metadata !DIExpression()), !dbg !20993
  %18 = trunc i64 %14 to i32, !dbg !20994
  call void @llvm.dbg.value(metadata i32 %18, metadata !20974, metadata !DIExpression()), !dbg !20993
  %19 = sext i32 %18 to i64, !dbg !20995
  %20 = load i64, i64* @curr_tick, align 8, !dbg !20996
  %21 = add i64 %20, %19, !dbg !20996
  store i64 %21, i64* @curr_tick, align 8, !dbg !20996
  store i64 0, i64* %13, align 8, !dbg !20997
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #27, !dbg !20998
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !20999
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !20999
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21001
  br i1 %22, label %24, label %23, !dbg !21002

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !21003
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21003
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !21003
  unreachable, !dbg !21003

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !20555, metadata !DIExpression()) #25, !dbg !20999
  call void @llvm.dbg.value(metadata i32 %12, metadata !20569, metadata !DIExpression()) #25, !dbg !21004
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !21006, !srcloc !20575
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !21007
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !21007
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !21008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !21009
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !21011, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !21013
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !21013
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !21009
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21014
  br i1 %28, label %30, label %29, !dbg !21015

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !21016
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !21016
  unreachable, !dbg !21016

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !21013
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !21009
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21017
  call void @llvm.dbg.value(metadata i32 undef, metadata !20971, metadata !DIExpression()), !dbg !20975
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !21018
  %32 = sub nsw i32 %31, %18, !dbg !21018
  store i32 %32, i32* @announce_remaining, align 4, !dbg !20975
  call void @llvm.dbg.value(metadata i32 undef, metadata !20971, metadata !DIExpression()), !dbg !20975
  %33 = tail call fastcc %struct._timeout* @first() #27, !dbg !20986
  %34 = icmp eq %struct._timeout* %33, null, !dbg !20987
  br i1 %34, label %37, label %8, !dbg !20988, !llvm.loop !21019

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !21021
  store i64 %36, i64* %13, align 8, !dbg !21021
  br label %41, !dbg !21024

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !20975
  %40 = sext i32 %39 to i64, !dbg !21025
  br label %41, !dbg !21025

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !21025
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !21026
  %45 = add i64 %44, %42, !dbg !21026
  store i64 %45, i64* @curr_tick, align 8, !dbg !21026
  store i32 0, i32* @announce_remaining, align 4, !dbg !21027
  %46 = tail call fastcc i32 @next_timeout() #27, !dbg !21028
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !21029
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !21030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !21030
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21032
  br i1 %47, label %49, label %48, !dbg !21033

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !21034
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21034
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !21034
  unreachable, !dbg !21034

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !20975
  call void @llvm.dbg.value(metadata i32 %50, metadata !20555, metadata !DIExpression()) #25, !dbg !21030
  call void @llvm.dbg.value(metadata i32 %50, metadata !20569, metadata !DIExpression()) #25, !dbg !21035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !21037, !srcloc !20575
  ret void, !dbg !21038
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !21039 {
  call void @llvm.dbg.value(metadata i64 0, metadata !21043, metadata !DIExpression()), !dbg !21047
  call void @llvm.dbg.value(metadata i32 0, metadata !21044, metadata !DIExpression()), !dbg !21048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20482, metadata !DIExpression()) #25, !dbg !21049
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !21051, !srcloc !20497
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !21053
  call void @llvm.dbg.value(metadata i32 undef, metadata !20495, metadata !DIExpression()) #25, !dbg !21053
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !21049
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21054
  br i1 %2, label %4, label %3, !dbg !21055

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.444, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !21056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.446, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 148) #26, !dbg !21056
  unreachable, !dbg !21056

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !20494, metadata !DIExpression()) #25, !dbg !21053
  call void @llvm.dbg.value(metadata i32 undef, metadata !20488, metadata !DIExpression()) #25, !dbg !21049
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21057
  call void @llvm.dbg.value(metadata i32 undef, metadata !21046, metadata !DIExpression()), !dbg !21048
  call void @llvm.dbg.value(metadata i64 0, metadata !21043, metadata !DIExpression()), !dbg !21047
  call void @llvm.dbg.value(metadata i32 undef, metadata !21044, metadata !DIExpression()), !dbg !21048
  %5 = load i64, i64* @curr_tick, align 8, !dbg !21058
  %6 = tail call fastcc i32 @elapsed.447() #27, !dbg !21061
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !21043, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !21047
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !21062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !20560, metadata !DIExpression()) #25, !dbg !21062
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21064
  br i1 %7, label %9, label %8, !dbg !21065

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.440, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.450, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !21066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.451, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !21066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.445, i32 0, i32 0), i32 noundef 194) #26, !dbg !21066
  unreachable, !dbg !21066

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !21051
  call void @llvm.dbg.value(metadata i32 %10, metadata !20494, metadata !DIExpression()) #25, !dbg !21053
  call void @llvm.dbg.value(metadata i32 %10, metadata !20488, metadata !DIExpression()) #25, !dbg !21049
  call void @llvm.dbg.value(metadata i32 %10, metadata !21046, metadata !DIExpression()), !dbg !21048
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !21043, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !21047
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !21043, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !21047
  call void @llvm.dbg.value(metadata i32 undef, metadata !20555, metadata !DIExpression()) #25, !dbg !21062
  call void @llvm.dbg.value(metadata i32 undef, metadata !20569, metadata !DIExpression()) #25, !dbg !21067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !21069, !srcloc !20575
  call void @llvm.dbg.value(metadata i32 undef, metadata !21044, metadata !DIExpression()), !dbg !21048
  %11 = sext i32 %6 to i64, !dbg !21061
  %12 = add i64 %5, %11, !dbg !21070
  ret i64 %12, !dbg !21071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !21072 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !21073
  %2 = trunc i64 %1 to i32, !dbg !21074
  ret i32 %2, !dbg !21075
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !21076 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !21077
  ret i64 %1, !dbg !21078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !21079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !21081, metadata !DIExpression()), !dbg !21088
  %2 = icmp eq i32 %0, 0, !dbg !21089
  br i1 %2, label %10, label %3, !dbg !21091

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !21092
  call void @llvm.dbg.value(metadata i32 %4, metadata !21082, metadata !DIExpression()), !dbg !21088
  %5 = mul i32 %0, 84, !dbg !21093
  call void @llvm.dbg.value(metadata i32 %5, metadata !21083, metadata !DIExpression()), !dbg !21088
  br label %6, !dbg !21094

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !21095
  call void @llvm.dbg.value(metadata i32 %7, metadata !21084, metadata !DIExpression()), !dbg !21096
  %8 = sub i32 %7, %4, !dbg !21097
  %9 = icmp ult i32 %8, %5, !dbg !21099
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !21100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !21101 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !21102
  ret i32 %1, !dbg !21103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !21104 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !21106
  ret i32 %1, !dbg !21107
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !21108 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !21112, metadata !DIExpression()), !dbg !21114
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !21115

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !21116
  br label %14, !dbg !21120

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !21113, metadata !DIExpression()), !dbg !21114
  %6 = icmp slt i64 %2, -1, !dbg !21121
  br i1 %6, label %7, label %9, !dbg !21124

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !21125
  br label %14, !dbg !21126

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !21128
  %11 = icmp ugt i64 %2, 1, !dbg !21129
  %12 = select i1 %11, i64 %2, i64 1, !dbg !21129
  %13 = add nsw i64 %10, %12, !dbg !21130
  br label %14, !dbg !21131

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !21132
  ret i64 %15, !dbg !21133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #6 !dbg !21134 {
  ret void, !dbg !21136
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !21137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !21139, metadata !DIExpression()), !dbg !21161
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !21140, metadata !DIExpression()), !dbg !21162
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !21163

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.475, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.476, i32 0, i32 0), i32 noundef 24) #26, !dbg !21167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.477, i32 0, i32 0)) #26, !dbg !21167
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.476, i32 0, i32 0), i32 noundef 24) #26, !dbg !21167
  unreachable, !dbg !21167

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !21140, metadata !DIExpression()), !dbg !21162
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !21170
  br i1 %5, label %7, label %6, !dbg !21171

6:                                                ; preds = %3
  ret i32 0, !dbg !21172

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !21173
  %9 = load i8*, i8** %8, align 4, !dbg !21173
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !21176
  %11 = load i32, i32* %10, align 4, !dbg !21176
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #27, !dbg !21177
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !21178
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !21140, metadata !DIExpression()), !dbg !21162
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !21179
  br i1 %13, label %2, label %3, !dbg !21163, !llvm.loop !21180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !21182 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !21186, metadata !DIExpression()), !dbg !21189
  call void @llvm.dbg.value(metadata i8* %1, metadata !21187, metadata !DIExpression()), !dbg !21189
  call void @llvm.dbg.value(metadata i32 %2, metadata !21188, metadata !DIExpression()), !dbg !21189
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !21190
  tail call fastcc void @z_waitq_init.478(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !21191
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !21192
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !21193
  ret void, !dbg !21194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.478(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !21195 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !21200, metadata !DIExpression()), !dbg !21201
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !21202
  tail call fastcc void @sys_dlist_init.479(%struct._dnode* noundef %2) #27, !dbg !21203
  ret void, !dbg !21204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.479(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !21205 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !21210, metadata !DIExpression()), !dbg !21211
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !21212
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !21213
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !21214
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !21215
  ret void, !dbg !21216
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !21217 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !21228, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !21225, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i32 %1, metadata !21226, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i32 %2, metadata !21227, metadata !DIExpression()), !dbg !21238
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !21239
  call void @llvm.dbg.value(metadata i64 %6, metadata !21230, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i8* null, metadata !21231, metadata !DIExpression()), !dbg !21238
  %7 = icmp eq i64 %5, -1, !dbg !21240
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !21240
  call void @llvm.dbg.value(metadata i64 %8, metadata !21230, metadata !DIExpression()), !dbg !21238
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !21241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !21242, metadata !DIExpression()) #25, !dbg !21249
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !21251, !srcloc !21257
  call void @llvm.dbg.value(metadata i32 undef, metadata !21254, metadata !DIExpression()) #25, !dbg !21258
  call void @llvm.dbg.value(metadata i32 undef, metadata !21255, metadata !DIExpression()) #25, !dbg !21258
  call void @llvm.dbg.value(metadata i32 undef, metadata !21248, metadata !DIExpression()) #25, !dbg !21249
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !21259
  br i1 %11, label %13, label %12, !dbg !21262

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.480, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 148) #26, !dbg !21263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.482, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !21263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 148) #26, !dbg !21263
  unreachable, !dbg !21263

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !21254, metadata !DIExpression()) #25, !dbg !21258
  call void @llvm.dbg.value(metadata i32 undef, metadata !21248, metadata !DIExpression()) #25, !dbg !21249
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !21265
  call void @llvm.dbg.value(metadata i32 undef, metadata !21232, metadata !DIExpression()), !dbg !21238
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !21266, !srcloc !21275
  call void @llvm.dbg.value(metadata i32 %14, metadata !21269, metadata !DIExpression()) #25, !dbg !21276
  %15 = icmp eq i32 %14, 0, !dbg !21277
  %16 = icmp eq i64 %5, 0, !dbg !21278
  %17 = select i1 %15, i1 true, i1 %16, !dbg !21278
  br i1 %17, label %18, label %25, !dbg !21278

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !21231, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i8 0, metadata !21237, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i32 undef, metadata !21232, metadata !DIExpression()), !dbg !21238
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !21279
  call void @llvm.dbg.value(metadata i8* %20, metadata !21231, metadata !DIExpression()), !dbg !21238
  %21 = tail call i64 @sys_clock_tick_get() #26, !dbg !21281
  call void @llvm.dbg.value(metadata i64 %21, metadata !21229, metadata !DIExpression()), !dbg !21238
  %22 = icmp eq i8* %20, null, !dbg !21282
  br i1 %22, label %23, label %43, !dbg !21284

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !21232, metadata !DIExpression()), !dbg !21238
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !21284

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.483, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.476, i32 0, i32 0), i32 noundef 76) #26, !dbg !21285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.484, i32 0, i32 0)) #26, !dbg !21285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.476, i32 0, i32 0), i32 noundef 76) #26, !dbg !21285
  unreachable, !dbg !21285

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !21237, metadata !DIExpression()), !dbg !21238
  %29 = sub nsw i64 %8, %27, !dbg !21287
  %30 = icmp slt i64 %29, 1, !dbg !21288
  br i1 %30, label %43, label %31, !dbg !21289

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !21238
  call void @llvm.dbg.value(metadata i8 undef, metadata !21237, metadata !DIExpression()), !dbg !21238
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !21290
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !21290
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #26, !dbg !21290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !21242, metadata !DIExpression()) #25, !dbg !21291
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !21293, !srcloc !21257
  call void @llvm.dbg.value(metadata i32 undef, metadata !21254, metadata !DIExpression()) #25, !dbg !21295
  call void @llvm.dbg.value(metadata i32 undef, metadata !21255, metadata !DIExpression()) #25, !dbg !21295
  call void @llvm.dbg.value(metadata i32 undef, metadata !21248, metadata !DIExpression()) #25, !dbg !21291
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !21296
  br i1 %37, label %39, label %38, !dbg !21297

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.480, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 148) #26, !dbg !21298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.482, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !21298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 148) #26, !dbg !21298
  unreachable, !dbg !21298

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !21237, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i32 undef, metadata !21254, metadata !DIExpression()) #25, !dbg !21295
  call void @llvm.dbg.value(metadata i32 undef, metadata !21248, metadata !DIExpression()) #25, !dbg !21291
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !21299
  call void @llvm.dbg.value(metadata i32 undef, metadata !21232, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i8* null, metadata !21231, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i32 undef, metadata !21232, metadata !DIExpression()), !dbg !21238
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !21279
  call void @llvm.dbg.value(metadata i8* %40, metadata !21231, metadata !DIExpression()), !dbg !21238
  %41 = tail call i64 @sys_clock_tick_get() #26, !dbg !21281
  call void @llvm.dbg.value(metadata i64 %41, metadata !21229, metadata !DIExpression()), !dbg !21238
  %42 = icmp eq i8* %40, null, !dbg !21282
  br i1 %42, label %26, label %43, !dbg !21284, !llvm.loop !21300

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !21279
  call void @llvm.dbg.value(metadata i8* %45, metadata !21231, metadata !DIExpression()), !dbg !21238
  call void @llvm.dbg.value(metadata i32 undef, metadata !21303, metadata !DIExpression()) #25, !dbg !21309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !21308, metadata !DIExpression()) #25, !dbg !21309
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !21311
  br i1 %46, label %48, label %47, !dbg !21314

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.485, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 194) #26, !dbg !21315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.486, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !21315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 194) #26, !dbg !21315
  unreachable, !dbg !21315

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !21238
  call void @llvm.dbg.value(metadata i32 %49, metadata !21303, metadata !DIExpression()) #25, !dbg !21309
  call void @llvm.dbg.value(metadata i32 %49, metadata !21317, metadata !DIExpression()) #25, !dbg !21320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !21322, !srcloc !21323
  ret i8* %45, !dbg !21324
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !21325 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !21331, metadata !DIExpression()), !dbg !21333
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !21329, metadata !DIExpression()), !dbg !21333
  call void @llvm.dbg.value(metadata i32 %1, metadata !21330, metadata !DIExpression()), !dbg !21333
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !21334
  call void @llvm.dbg.value(metadata i8* %4, metadata !21332, metadata !DIExpression()), !dbg !21333
  ret i8* %4, !dbg !21335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !21336 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !21340, metadata !DIExpression()), !dbg !21343
  call void @llvm.dbg.value(metadata i8* %1, metadata !21341, metadata !DIExpression()), !dbg !21343
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !21344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !21242, metadata !DIExpression()) #25, !dbg !21345
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !21347, !srcloc !21257
  call void @llvm.dbg.value(metadata i32 undef, metadata !21254, metadata !DIExpression()) #25, !dbg !21349
  call void @llvm.dbg.value(metadata i32 undef, metadata !21255, metadata !DIExpression()) #25, !dbg !21349
  call void @llvm.dbg.value(metadata i32 undef, metadata !21248, metadata !DIExpression()) #25, !dbg !21345
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !21350
  br i1 %5, label %7, label %6, !dbg !21351

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.480, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 148) #26, !dbg !21352
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.482, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !21352
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 148) #26, !dbg !21352
  unreachable, !dbg !21352

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !21347
  call void @llvm.dbg.value(metadata i32 %8, metadata !21254, metadata !DIExpression()) #25, !dbg !21349
  call void @llvm.dbg.value(metadata i32 %8, metadata !21248, metadata !DIExpression()) #25, !dbg !21345
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !21353
  call void @llvm.dbg.value(metadata i32 %8, metadata !21342, metadata !DIExpression()), !dbg !21343
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !21354
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #26, !dbg !21355
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !21356
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #26, !dbg !21358
  %12 = icmp eq i32 %11, 0, !dbg !21359
  br i1 %12, label %15, label %13, !dbg !21360

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !21361
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #26, !dbg !21361
  br label %19, !dbg !21363

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !21303, metadata !DIExpression()) #25, !dbg !21364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !21308, metadata !DIExpression()) #25, !dbg !21364
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !21367
  br i1 %16, label %18, label %17, !dbg !21368

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.474, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.485, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 194) #26, !dbg !21369
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.486, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !21369
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.481, i32 0, i32 0), i32 noundef 194) #26, !dbg !21369
  unreachable, !dbg !21369

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !21303, metadata !DIExpression()) #25, !dbg !21364
  call void @llvm.dbg.value(metadata i32 %8, metadata !21317, metadata !DIExpression()) #25, !dbg !21370
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !21372, !srcloc !21323
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !21373
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1654, !2, !3470, !27, !356, !548, !770, !794, !3472, !3474, !3507, !3541, !3543, !804, !854, !3545, !3548, !3559, !3605, !3607, !3635, !3663, !3706, !3777, !3822, !883, !1023, !3850, !1059, !1069, !1094, !1270, !1453, !1692, !3855, !1831, !1897, !2201, !2485, !3896, !2600, !2690, !3898, !3961, !4028, !2742, !4031, !2749, !3016, !3157, !4049, !4051, !3177, !3287, !4157, !3404, !4160, !3445}
!llvm.ident = !{!4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162, !4162}
!llvm.module.flags = !{!4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_consumer_sub", scope: !27, file: !114, line: 11, type: !123, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !305, !338, !342, !347, !352}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "consumer_sub", scope: !27, file: !114, line: 11, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !117)
!116 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !{!118, !120, !166}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !115, file: !116, line: 91, baseType: !119, size: 8)
!119 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !115, file: !116, line: 93, baseType: !121, size: 32, offset: 32)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = !{!126, !147, !152, !155, !156, !159, !160, !161, !162, !163}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !123, file: !124, line: 4206, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !130)
!130 = !{!131}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !129, file: !128, line: 232, baseType: !132, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !134)
!133 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !135)
!135 = !{!136, !142}
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !133, line: 38, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !133, line: 38, size: 32, elements: !138)
!138 = !{!139, !141}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !137, file: !133, line: 39, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !137, file: !133, line: 40, baseType: !140, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !133, line: 42, baseType: !143, size: 32, offset: 32)
!143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !133, line: 42, size: 32, elements: !144)
!144 = !{!145, !146}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !143, file: !133, line: 43, baseType: !140, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !143, file: !133, line: 44, baseType: !140, size: 32)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !123, file: !124, line: 4208, baseType: !148, size: 32, offset: 64)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !150)
!149 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!150 = !{!151}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !148, file: !149, line: 52, baseType: !22, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !123, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !154, line: 214, baseType: !32)
!154 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!155 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !123, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !123, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !123, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !123, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !123, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !123, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !123, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !115, file: !116, line: 96, baseType: !167, size: 32, offset: 64)
!167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{null, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !174)
!174 = !{!175, !179, !181, !182, !187, !286, !300}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !173, file: !116, line: 35, baseType: !176, size: 16)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !178)
!178 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !173, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !173, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !173, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DISubroutineType(types: !186)
!186 = !{!119, !13, !153}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !173, file: !116, line: 56, baseType: !188, size: 32, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !190)
!190 = !{!191, !192, !284, !285}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !189, file: !124, line: 2722, baseType: !127, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !189, file: !124, line: 2724, baseType: !193, size: 32, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !196)
!195 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!196 = !{!197, !242, !255, !256, !257, !258, !264, !279}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !194, file: !195, line: 247, baseType: !198, size: 384)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !199)
!199 = !{!200, !214, !216, !217, !218, !229, !230, !231}
!200 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !195, line: 60, baseType: !201, size: 64)
!201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !198, file: !195, line: 60, size: 64, elements: !202)
!202 = !{!203, !205}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !201, file: !195, line: 61, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !134)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !201, file: !195, line: 62, baseType: !206, size: 64)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !208)
!207 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !206, file: !207, line: 50, baseType: !210, size: 64)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 64, elements: !212)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!212 = !{!213}
!213 = !DISubrange(count: 2)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !198, file: !195, line: 68, baseType: !215, size: 32, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !198, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !198, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!218 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !195, line: 90, baseType: !219, size: 16, offset: 112)
!219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !198, file: !195, line: 90, size: 16, elements: !220)
!220 = !{!221, !228}
!221 = !DIDerivedType(tag: DW_TAG_member, scope: !219, file: !195, line: 91, baseType: !222, size: 16)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !219, file: !195, line: 91, size: 16, elements: !223)
!223 = !{!224, !227}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !222, file: !195, line: 96, baseType: !225, size: 8)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !226)
!226 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !222, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !219, file: !195, line: 100, baseType: !177, size: 16)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !198, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !198, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !198, file: !195, line: 131, baseType: !232, size: 192, offset: 192)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !233)
!233 = !{!234, !235, !241}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !232, file: !128, line: 245, baseType: !204, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !232, file: !128, line: 246, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !240}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !232, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !194, file: !195, line: 250, baseType: !243, size: 288, offset: 384)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !243, file: !244, line: 26, baseType: !108, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !243, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !243, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !243, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !243, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !243, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !243, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !243, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !243, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !194, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !194, file: !195, line: 256, baseType: !127, size: 64, offset: 704)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !194, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !194, file: !195, line: 300, baseType: !259, size: 96, offset: 800)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !260)
!260 = !{!261, !262, !263}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !259, file: !195, line: 153, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !259, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !259, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !194, file: !195, line: 325, baseType: !265, size: 32, offset: 896)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !267)
!267 = !{!268, !277, !278}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !266, file: !124, line: 5074, baseType: !269, size: 96)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !271)
!270 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!271 = !{!272, !275, !276}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !269, file: !270, line: 57, baseType: !273, size: 32)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !270, line: 57, flags: DIFlagFwdDecl)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !269, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !269, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !266, file: !124, line: 5075, baseType: !127, size: 64, offset: 96)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !266, file: !124, line: 5076, baseType: !148, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !194, file: !195, line: 343, baseType: !280, size: 64, offset: 928)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !281)
!281 = !{!282, !283}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !280, file: !244, line: 63, baseType: !108, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !280, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !189, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !189, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !173, file: !116, line: 61, baseType: !287, size: 32, offset: 160)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !291)
!291 = !{!292, !299}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !290, file: !289, line: 36, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !296)
!296 = !{!297}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !295, file: !289, line: 30, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !290, file: !289, line: 37, baseType: !293, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !173, file: !116, line: 67, baseType: !301, size: 32, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 32)
!304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "_k_thread_data_consumer_thread_id", scope: !27, file: !114, line: 25, type: !307, isLocal: false, isDefinition: true, align: 32)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !308)
!308 = !{!309, !310, !318, !319, !324, !325, !326, !327, !328, !329, !331, !335}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !307, file: !124, line: 621, baseType: !193, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !307, file: !124, line: 622, baseType: !311, size: 32, offset: 32)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !314)
!313 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !316)
!315 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!316 = !{!317}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !314, file: !315, line: 48, baseType: !158, size: 8)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !307, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !307, file: !124, line: 624, baseType: !320, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !313, line: 46, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 32)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !102, !102, !102}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !307, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !307, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !307, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !307, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !307, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !307, file: !124, line: 630, baseType: !330, size: 32, offset: 288)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !307, file: !124, line: 631, baseType: !332, size: 32, offset: 320)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!333 = !DISubroutineType(types: !334)
!334 = !{null}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !307, file: !124, line: 632, baseType: !336, size: 32, offset: 352)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "consumer_thread_id", scope: !27, file: !114, line: 25, type: !340, isLocal: false, isDefinition: true)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !193)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_consumer_sub", scope: !27, file: !114, line: 11, type: !344, isLocal: true, isDefinition: true, align: 32)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 128, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 16)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "_k_thread_stack_consumer_thread_id", scope: !27, file: !114, line: 25, type: !349, isLocal: false, isDefinition: true, align: 512)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 4608, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 576)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "_k_thread_obj_consumer_thread_id", scope: !27, file: !114, line: 25, type: !194, isLocal: false, isDefinition: true)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "_zbus_mutex_processed_data_chan", scope: !356, file: !362, line: 15, type: !372, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !358, globals: !359, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!358 = !{!104, !102, !103, !108, !109}
!359 = !{!354, !360, !522, !524, !526, !528, !530, !535, !543}
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "processed_data_chan", scope: !356, file: !362, line: 15, type: !363, isLocal: false, isDefinition: true, align: 32)
!362 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !365)
!365 = !{!366, !367, !368, !369, !370, !480, !493}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !364, file: !116, line: 35, baseType: !176, size: 16)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !364, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !364, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !364, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !364, file: !116, line: 56, baseType: !371, size: 32, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !373)
!373 = !{!374, !393, !478, !479}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !372, file: !124, line: 2722, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !377)
!377 = !{!378}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !376, file: !128, line: 232, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !381)
!381 = !{!382, !388}
!382 = !DIDerivedType(tag: DW_TAG_member, scope: !380, file: !133, line: 38, baseType: !383, size: 32)
!383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !380, file: !133, line: 38, size: 32, elements: !384)
!384 = !{!385, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !383, file: !133, line: 39, baseType: !386, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !383, file: !133, line: 40, baseType: !386, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, scope: !380, file: !133, line: 42, baseType: !389, size: 32, offset: 32)
!389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !380, file: !133, line: 42, size: 32, elements: !390)
!390 = !{!391, !392}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !389, file: !133, line: 43, baseType: !386, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !389, file: !133, line: 44, baseType: !386, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !372, file: !124, line: 2724, baseType: !394, size: 32, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !396)
!396 = !{!397, !437, !449, !450, !451, !452, !458, !473}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !395, file: !195, line: 247, baseType: !398, size: 384)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !399)
!399 = !{!400, !411, !413, !414, !415, !424, !425, !426}
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !398, file: !195, line: 60, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !398, file: !195, line: 60, size: 64, elements: !402)
!402 = !{!403, !405}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !401, file: !195, line: 61, baseType: !404, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !380)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !401, file: !195, line: 62, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !407)
!407 = !{!408}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !406, file: !207, line: 50, baseType: !409, size: 64)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 64, elements: !212)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !398, file: !195, line: 68, baseType: !412, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !398, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !398, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!415 = !DIDerivedType(tag: DW_TAG_member, scope: !398, file: !195, line: 90, baseType: !416, size: 16, offset: 112)
!416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !398, file: !195, line: 90, size: 16, elements: !417)
!417 = !{!418, !423}
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !195, line: 91, baseType: !419, size: 16)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !416, file: !195, line: 91, size: 16, elements: !420)
!420 = !{!421, !422}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !419, file: !195, line: 96, baseType: !225, size: 8)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !419, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !416, file: !195, line: 100, baseType: !177, size: 16)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !398, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !398, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !398, file: !195, line: 131, baseType: !427, size: 192, offset: 192)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !428)
!428 = !{!429, !430, !436}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !427, file: !128, line: 245, baseType: !404, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !427, file: !128, line: 246, baseType: !431, size: 32, offset: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !432)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!433 = !DISubroutineType(types: !434)
!434 = !{null, !435}
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !427, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !395, file: !195, line: 250, baseType: !438, size: 288, offset: 384)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !438, file: !244, line: 26, baseType: !108, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !438, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !438, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !438, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !438, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !438, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !438, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !438, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !438, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !395, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !395, file: !195, line: 256, baseType: !375, size: 64, offset: 704)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !395, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !395, file: !195, line: 300, baseType: !453, size: 96, offset: 800)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !454)
!454 = !{!455, !456, !457}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !453, file: !195, line: 153, baseType: !22, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !453, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !453, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !395, file: !195, line: 325, baseType: !459, size: 32, offset: 896)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !461)
!461 = !{!462, !468, !469}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !460, file: !124, line: 5074, baseType: !463, size: 96)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !464)
!464 = !{!465, !466, !467}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !463, file: !270, line: 57, baseType: !273, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !463, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !463, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !460, file: !124, line: 5075, baseType: !375, size: 64, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !460, file: !124, line: 5076, baseType: !470, size: 32, offset: 160)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !471)
!471 = !{!472}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !470, file: !149, line: 52, baseType: !22, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !395, file: !195, line: 343, baseType: !474, size: 64, offset: 928)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !475)
!475 = !{!476, !477}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !474, file: !244, line: 63, baseType: !108, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !474, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !372, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !372, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !364, file: !116, line: 61, baseType: !481, size: 32, offset: 160)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !483)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !484)
!484 = !{!485, !492}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !483, file: !289, line: 36, baseType: !486, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !489)
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !488, file: !289, line: 30, baseType: !491, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !483, file: !289, line: 37, baseType: !486, size: 32, offset: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !364, file: !116, line: 67, baseType: !494, size: 32, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !496)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !499)
!499 = !{!500, !501, !516}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !498, file: !116, line: 91, baseType: !119, size: 8)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !498, file: !116, line: 93, baseType: !502, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 32)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !505)
!505 = !{!506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !504, file: !124, line: 4206, baseType: !375, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !504, file: !124, line: 4208, baseType: !470, size: 32, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !504, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !504, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !504, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !504, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !504, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !504, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !504, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !504, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !498, file: !116, line: 96, baseType: !517, size: 32, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 32)
!519 = !DISubroutineType(types: !520)
!520 = !{null, !521}
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 32)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "filter_lis", scope: !356, file: !362, line: 38, type: !498, isLocal: false, isDefinition: true, align: 32)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_state_change_sub", scope: !356, file: !362, line: 40, type: !504, isLocal: false, isDefinition: true, align: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "state_change_sub", scope: !356, file: !362, line: 40, type: !498, isLocal: false, isDefinition: true, align: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "_runtime_observers_processed_data_chan", scope: !356, file: !362, line: 15, type: !482, isLocal: true, isDefinition: true)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_state_change_sub", scope: !356, file: !362, line: 40, type: !532, isLocal: true, isDefinition: true, align: 32)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 160, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 20)
!535 = !DIGlobalVariableExpression(var: !536, expr: !DIExpression())
!536 = distinct !DIGlobalVariable(name: "_zbus_message_processed_data_chan", scope: !356, file: !362, line: 15, type: !537, isLocal: true, isDefinition: true)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !538, line: 11, size: 96, elements: !539)
!538 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!539 = !{!540, !541, !542}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !537, file: !538, line: 12, baseType: !103, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !537, file: !538, line: 13, baseType: !103, size: 32, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !537, file: !538, line: 14, baseType: !103, size: 32, offset: 64)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "_zbus_observers_processed_data_chan", scope: !356, file: !362, line: 15, type: !545, isLocal: true, isDefinition: true)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 64, elements: !212)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "_zbus_mutex_raw_data_chan", scope: !548, file: !553, line: 11, type: !563, isLocal: true, isDefinition: true, align: 32)
!548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !550, splitDebugInlining: false, nameTableKind: None)
!549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!550 = !{!546, !551, !713, !715, !717, !738, !742, !744, !746, !749, !751, !758, !763, !765}
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "raw_data_chan", scope: !548, file: !553, line: 11, type: !554, isLocal: false, isDefinition: true, align: 32)
!553 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !556)
!556 = !{!557, !558, !559, !560, !561, !671, !684}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !555, file: !116, line: 35, baseType: !176, size: 16)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !555, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !555, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !555, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !555, file: !116, line: 56, baseType: !562, size: 32, offset: 128)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !564)
!564 = !{!565, !584, !669, !670}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !563, file: !124, line: 2722, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !567, file: !128, line: 232, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !571)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !572)
!572 = !{!573, !579}
!573 = !DIDerivedType(tag: DW_TAG_member, scope: !571, file: !133, line: 38, baseType: !574, size: 32)
!574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !133, line: 38, size: 32, elements: !575)
!575 = !{!576, !578}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !574, file: !133, line: 39, baseType: !577, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !574, file: !133, line: 40, baseType: !577, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, scope: !571, file: !133, line: 42, baseType: !580, size: 32, offset: 32)
!580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !133, line: 42, size: 32, elements: !581)
!581 = !{!582, !583}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !580, file: !133, line: 43, baseType: !577, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !580, file: !133, line: 44, baseType: !577, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !563, file: !124, line: 2724, baseType: !585, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !587)
!587 = !{!588, !628, !640, !641, !642, !643, !649, !664}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !195, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !590)
!590 = !{!591, !602, !604, !605, !606, !615, !616, !617}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !195, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !195, line: 60, size: 64, elements: !593)
!593 = !{!594, !596}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !195, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !571)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !195, line: 62, baseType: !597, size: 64)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !598)
!598 = !{!599}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !597, file: !207, line: 50, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 64, elements: !212)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !195, line: 68, baseType: !603, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!606 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !195, line: 90, baseType: !607, size: 16, offset: 112)
!607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !195, line: 90, size: 16, elements: !608)
!608 = !{!609, !614}
!609 = !DIDerivedType(tag: DW_TAG_member, scope: !607, file: !195, line: 91, baseType: !610, size: 16)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !607, file: !195, line: 91, size: 16, elements: !611)
!611 = !{!612, !613}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !610, file: !195, line: 96, baseType: !225, size: 8)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !610, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !607, file: !195, line: 100, baseType: !177, size: 16)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !195, line: 131, baseType: !618, size: 192, offset: 192)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !619)
!619 = !{!620, !621, !627}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !618, file: !128, line: 245, baseType: !595, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !618, file: !128, line: 246, baseType: !622, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !623)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 32)
!624 = !DISubroutineType(types: !625)
!625 = !{null, !626}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !618, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !195, line: 250, baseType: !629, size: 288, offset: 384)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636, !637, !638, !639}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !629, file: !244, line: 26, baseType: !108, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !629, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !629, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !629, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !629, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !629, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !629, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !629, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !629, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !195, line: 256, baseType: !566, size: 64, offset: 704)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !195, line: 300, baseType: !644, size: 96, offset: 800)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !645)
!645 = !{!646, !647, !648}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !644, file: !195, line: 153, baseType: !22, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !644, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !644, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !195, line: 325, baseType: !650, size: 32, offset: 896)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 32)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !652)
!652 = !{!653, !659, !660}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !651, file: !124, line: 5074, baseType: !654, size: 96)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !655)
!655 = !{!656, !657, !658}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !654, file: !270, line: 57, baseType: !273, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !654, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !654, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !651, file: !124, line: 5075, baseType: !566, size: 64, offset: 96)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !651, file: !124, line: 5076, baseType: !661, size: 32, offset: 160)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !661, file: !149, line: 52, baseType: !22, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !195, line: 343, baseType: !665, size: 64, offset: 928)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !666)
!666 = !{!667, !668}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !665, file: !244, line: 63, baseType: !108, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !665, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !563, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !563, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !555, file: !116, line: 61, baseType: !672, size: 32, offset: 160)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !675)
!675 = !{!676, !683}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !674, file: !289, line: 36, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !680)
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !679, file: !289, line: 30, baseType: !682, size: 32)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !674, file: !289, line: 37, baseType: !677, size: 32, offset: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !555, file: !116, line: 67, baseType: !685, size: 32, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !687)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !690)
!690 = !{!691, !692, !707}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !689, file: !116, line: 91, baseType: !119, size: 8)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !689, file: !116, line: 93, baseType: !693, size: 32, offset: 32)
!693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !695, file: !124, line: 4206, baseType: !566, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !695, file: !124, line: 4208, baseType: !661, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !695, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !695, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !695, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !695, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !695, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !695, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !695, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !695, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !689, file: !116, line: 96, baseType: !708, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !712}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 32)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "_zbus_mutex_state_chan", scope: !548, file: !553, line: 14, type: !563, isLocal: true, isDefinition: true, align: 32)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "state_chan", scope: !548, file: !553, line: 14, type: !554, isLocal: false, isDefinition: true, align: 32)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "_k_thread_data_produce_thread_id", scope: !548, file: !553, line: 43, type: !719, isLocal: false, isDefinition: true, align: 32)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !720)
!720 = !{!721, !722, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !719, file: !124, line: 621, baseType: !585, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !719, file: !124, line: 622, baseType: !723, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !726)
!726 = !{!727}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !725, file: !315, line: 48, baseType: !158, size: 8)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !719, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !719, file: !124, line: 624, baseType: !320, size: 32, offset: 96)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !719, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !719, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !719, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !719, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !719, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !719, file: !124, line: 630, baseType: !330, size: 32, offset: 288)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !719, file: !124, line: 631, baseType: !332, size: 32, offset: 320)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !719, file: !124, line: 632, baseType: !336, size: 32, offset: 352)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(name: "produce_thread_id", scope: !548, file: !553, line: 43, type: !740, isLocal: false, isDefinition: true)
!740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !585)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "_runtime_observers_raw_data_chan", scope: !548, file: !553, line: 11, type: !673, isLocal: true, isDefinition: true)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "_runtime_observers_state_chan", scope: !548, file: !553, line: 14, type: !673, isLocal: true, isDefinition: true)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "_k_thread_stack_produce_thread_id", scope: !548, file: !553, line: 43, type: !748, isLocal: false, isDefinition: true, align: 512)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 4608, elements: !350)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "_k_thread_obj_produce_thread_id", scope: !548, file: !553, line: 43, type: !586, isLocal: false, isDefinition: true)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "_zbus_message_raw_data_chan", scope: !548, file: !553, line: 11, type: !753, isLocal: true, isDefinition: true)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !538, line: 11, size: 96, elements: !754)
!754 = !{!755, !756, !757}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !753, file: !538, line: 12, baseType: !103, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !753, file: !538, line: 13, baseType: !103, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !753, file: !538, line: 14, baseType: !103, size: 32, offset: 64)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "_zbus_observers_raw_data_chan", scope: !548, file: !553, line: 11, type: !760, isLocal: true, isDefinition: true)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 32, elements: !761)
!761 = !{!762}
!762 = !DISubrange(count: 1)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "_zbus_message_state_chan", scope: !548, file: !553, line: 14, type: !119, isLocal: true, isDefinition: true)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "_zbus_observers_state_chan", scope: !548, file: !553, line: 14, type: !767, isLocal: true, isDefinition: true)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 64, elements: !212)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !770, file: !785, line: 18, type: !786, isLocal: false, isDefinition: true)
!770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !772, globals: !784, splitDebugInlining: false, nameTableKind: None)
!771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!772 = !{!22, !102, !24, !773, !775, !777, !153, !103, !778, !779, !781, !782, !157, !783, !177, !336}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!774 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!776 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!780 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!784 = !{!768}
!785 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !787)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !789)
!788 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!789 = !{!790, !791}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !787, file: !788, line: 17, baseType: !336, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !787, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "_char_out", scope: !794, file: !798, line: 54, type: !799, isLocal: false, isDefinition: true)
!794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, globals: !797, splitDebugInlining: false, nameTableKind: None)
!795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!796 = !{!102, !103}
!797 = !{!792}
!798 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = !DISubroutineType(types: !801)
!801 = !{!103, !103}
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !804, file: !821, line: 56, type: !822, isLocal: true, isDefinition: true, align: 32)
!804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !805, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !806, globals: !820, splitDebugInlining: false, nameTableKind: None)
!805 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!806 = !{!807}
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !809, line: 407, baseType: !810)
!809 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 398, size: 224, elements: !811)
!811 = !{!812, !814, !815, !816, !817, !818, !819}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !810, file: !809, line: 400, baseType: !813, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !810, file: !809, line: 401, baseType: !813, size: 32, offset: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !810, file: !809, line: 402, baseType: !813, size: 32, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !810, file: !809, line: 403, baseType: !813, size: 32, offset: 96)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !810, file: !809, line: 404, baseType: !813, size: 32, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !810, file: !809, line: 405, baseType: !813, size: 32, offset: 160)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !810, file: !809, line: 406, baseType: !813, size: 32, offset: 192)
!820 = !{!802}
!821 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !825)
!824 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!825 = !{!826, !851}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !823, file: !824, line: 60, baseType: !827, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 32)
!828 = !DISubroutineType(types: !829)
!829 = !{!103, !830}
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !832)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !834)
!833 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!834 = !{!835, !836, !837, !838, !844, !845}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !832, file: !833, line: 380, baseType: !336, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !832, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !832, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !832, file: !833, line: 386, baseType: !839, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !841)
!841 = !{!842, !843}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !840, file: !833, line: 359, baseType: !164, size: 8)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !840, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !832, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !832, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !833, line: 43, baseType: !849)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !850)
!850 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !823, file: !824, line: 65, baseType: !830, size: 32, offset: 32)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !854, file: !857, line: 71, type: !858, isLocal: true, isDefinition: true, align: 32)
!854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !855, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !856, splitDebugInlining: false, nameTableKind: None)
!855 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!856 = !{!852}
!857 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !860)
!860 = !{!861, !880}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !859, file: !824, line: 60, baseType: !862, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!863 = !DISubroutineType(types: !864)
!864 = !{!103, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !868)
!868 = !{!869, !870, !871, !872, !878, !879}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !867, file: !833, line: 380, baseType: !336, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !867, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !867, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !867, file: !833, line: 386, baseType: !873, size: 32, offset: 96)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !875)
!875 = !{!876, !877}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !874, file: !833, line: 359, baseType: !164, size: 8)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !874, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !867, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !867, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !859, file: !824, line: 65, baseType: !865, size: 32, offset: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !883, file: !890, line: 17, type: !1016, isLocal: false, isDefinition: true)
!883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !884, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !885, globals: !886, splitDebugInlining: false, nameTableKind: None)
!884 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!885 = !{!153, !103, !108, !102}
!886 = !{!881, !887, !1012}
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !889, file: !890, line: 198, type: !1000, isLocal: true, isDefinition: true)
!889 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !890, file: !890, line: 175, type: !891, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !883, retainedNodes: !995)
!890 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!891 = !DISubroutineType(types: !892)
!892 = !{null, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !895)
!895 = !{!896, !954, !966, !967, !968, !969, !975, !990}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !894, file: !195, line: 247, baseType: !897, size: 384)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !898)
!898 = !{!899, !923, !930, !931, !932, !941, !942, !943}
!899 = !DIDerivedType(tag: DW_TAG_member, scope: !897, file: !195, line: 60, baseType: !900, size: 64)
!900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !897, file: !195, line: 60, size: 64, elements: !901)
!901 = !{!902, !917}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !900, file: !195, line: 61, baseType: !903, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !904)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !905)
!905 = !{!906, !912}
!906 = !DIDerivedType(tag: DW_TAG_member, scope: !904, file: !133, line: 38, baseType: !907, size: 32)
!907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !904, file: !133, line: 38, size: 32, elements: !908)
!908 = !{!909, !911}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !907, file: !133, line: 39, baseType: !910, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !907, file: !133, line: 40, baseType: !910, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, scope: !904, file: !133, line: 42, baseType: !913, size: 32, offset: 32)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !904, file: !133, line: 42, size: 32, elements: !914)
!914 = !{!915, !916}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !913, file: !133, line: 43, baseType: !910, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !913, file: !133, line: 44, baseType: !910, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !900, file: !195, line: 62, baseType: !918, size: 64)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !919)
!919 = !{!920}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !918, file: !207, line: 50, baseType: !921, size: 64)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !922, size: 64, elements: !212)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !897, file: !195, line: 68, baseType: !924, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !926)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !927)
!927 = !{!928}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !926, file: !128, line: 232, baseType: !929, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !904)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !897, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !897, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!932 = !DIDerivedType(tag: DW_TAG_member, scope: !897, file: !195, line: 90, baseType: !933, size: 16, offset: 112)
!933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !897, file: !195, line: 90, size: 16, elements: !934)
!934 = !{!935, !940}
!935 = !DIDerivedType(tag: DW_TAG_member, scope: !933, file: !195, line: 91, baseType: !936, size: 16)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !933, file: !195, line: 91, size: 16, elements: !937)
!937 = !{!938, !939}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !936, file: !195, line: 96, baseType: !225, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !936, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !933, file: !195, line: 100, baseType: !177, size: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !897, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !897, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !897, file: !195, line: 131, baseType: !944, size: 192, offset: 192)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !945)
!945 = !{!946, !947, !953}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !944, file: !128, line: 245, baseType: !903, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !944, file: !128, line: 246, baseType: !948, size: 32, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{null, !952}
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !944, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !894, file: !195, line: 250, baseType: !955, size: 288, offset: 384)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !956)
!956 = !{!957, !958, !959, !960, !961, !962, !963, !964, !965}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !955, file: !244, line: 26, baseType: !108, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !955, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !955, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !955, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !955, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !955, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !955, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !955, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !955, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !894, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !894, file: !195, line: 256, baseType: !925, size: 64, offset: 704)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !894, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !894, file: !195, line: 300, baseType: !970, size: 96, offset: 800)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !970, file: !195, line: 153, baseType: !22, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !970, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !970, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !894, file: !195, line: 325, baseType: !976, size: 32, offset: 896)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !978)
!978 = !{!979, !985, !986}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !977, file: !124, line: 5074, baseType: !980, size: 96)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !981)
!981 = !{!982, !983, !984}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !980, file: !270, line: 57, baseType: !273, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !980, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !980, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !977, file: !124, line: 5075, baseType: !925, size: 64, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !977, file: !124, line: 5076, baseType: !987, size: 32, offset: 160)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !988)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !987, file: !149, line: 52, baseType: !22, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !894, file: !195, line: 343, baseType: !991, size: 64, offset: 928)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !992)
!992 = !{!993, !994}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !991, file: !244, line: 63, baseType: !108, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !991, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!995 = !{!996, !997, !998, !999}
!996 = !DILocalVariable(name: "thread", arg: 1, scope: !889, file: !890, line: 175, type: !893)
!997 = !DILocalVariable(name: "region_num", scope: !889, file: !890, line: 200, type: !164)
!998 = !DILocalVariable(name: "guard_start", scope: !889, file: !890, line: 265, type: !22)
!999 = !DILocalVariable(name: "guard_size", scope: !889, file: !890, line: 266, type: !153)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 96, elements: !761)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !1002, line: 52, size: 96, elements: !1003)
!1002 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1003 = !{!1004, !1005, !1006}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1001, file: !1002, line: 53, baseType: !22, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1001, file: !1002, line: 54, baseType: !153, size: 32, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1001, file: !1002, line: 55, baseType: !1007, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !1008, line: 151, baseType: !1009)
!1008 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1008, line: 149, size: 32, elements: !1010)
!1010 = !{!1011}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !1009, file: !1008, line: 150, baseType: !108, size: 32)
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "static_regions", scope: !883, file: !890, line: 62, type: !1014, isLocal: true, isDefinition: true)
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 96, elements: !761)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1017, file: !788, line: 17, baseType: !336, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1017, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !1023, file: !1056, line: 39, type: !164, isLocal: true, isDefinition: true)
!1023 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1024, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1025, globals: !1055, splitDebugInlining: false, nameTableKind: None)
!1024 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1025 = !{!1026, !102, !103, !1043, !164}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !1028, line: 1226, baseType: !1029)
!1028 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 1213, size: 352, elements: !1030)
!1030 = !{!1031, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !1029, file: !1028, line: 1215, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1029, file: !1028, line: 1216, baseType: !813, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !1029, file: !1028, line: 1217, baseType: !813, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !1029, file: !1028, line: 1218, baseType: !813, size: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !1029, file: !1028, line: 1219, baseType: !813, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !1029, file: !1028, line: 1220, baseType: !813, size: 32, offset: 160)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !1029, file: !1028, line: 1221, baseType: !813, size: 32, offset: 192)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !1029, file: !1028, line: 1222, baseType: !813, size: 32, offset: 224)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !1029, file: !1028, line: 1223, baseType: !813, size: 32, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !1029, file: !1028, line: 1224, baseType: !813, size: 32, offset: 288)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !1029, file: !1028, line: 1225, baseType: !813, size: 32, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1046, line: 27, size: 96, elements: !1047)
!1046 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1047 = !{!1048, !1049, !1050}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1045, file: !1046, line: 29, baseType: !108, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1045, file: !1046, line: 31, baseType: !336, size: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1045, file: !1046, line: 37, baseType: !1051, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !1008, line: 146, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !1008, line: 141, size: 32, elements: !1053)
!1053 = !{!1054}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1052, file: !1008, line: 143, baseType: !108, size: 32)
!1055 = !{!1021}
!1056 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1059, file: !1066, line: 21, type: !799, isLocal: true, isDefinition: true)
!1059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1060, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1061, globals: !1065, splitDebugInlining: false, nameTableKind: None)
!1060 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1061 = !{!1062, !103, !102}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1064, line: 22, baseType: !103)
!1064 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1065 = !{!1057}
!1066 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !1069, file: !1074, line: 13, type: !1091, isLocal: true, isDefinition: true)
!1069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1071, splitDebugInlining: false, nameTableKind: None)
!1070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1071 = !{!1072, !1067}
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "mpu_config", scope: !1069, file: !1074, line: 37, type: !1075, isLocal: false, isDefinition: true)
!1074 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !1046, line: 41, size: 64, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !1076, file: !1046, line: 43, baseType: !108, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !1076, file: !1046, line: 45, baseType: !1080, size: 32, offset: 32)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1046, line: 27, size: 96, elements: !1083)
!1083 = !{!1084, !1085, !1086}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1082, file: !1046, line: 29, baseType: !108, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1082, file: !1046, line: 31, baseType: !336, size: 32, offset: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1082, file: !1046, line: 37, baseType: !1087, size: 32, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !1008, line: 146, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !1008, line: 141, size: 32, elements: !1089)
!1089 = !{!1090}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1088, file: !1008, line: 143, baseType: !108, size: 32)
!1091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1081, size: 192, elements: !212)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1094, file: !1262, line: 10, type: !1263, isLocal: false, isDefinition: true)
!1094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1096, globals: !1261, splitDebugInlining: false, nameTableKind: None)
!1095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1096 = !{!104, !102, !103, !1097, !157}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer_node", file: !116, line: 507, size: 64, elements: !1099)
!1099 = !{!1100, !1106}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1098, file: !116, line: 508, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !1103)
!1103 = !{!1104}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1102, file: !289, line: 30, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "obs", scope: !1098, file: !116, line: 509, baseType: !1107, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !1110)
!1110 = !{!1111, !1112, !1148}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1109, file: !116, line: 91, baseType: !119, size: 8)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1109, file: !116, line: 93, baseType: !1113, size: 32, offset: 32)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !1116)
!1116 = !{!1117, !1136, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1115, file: !124, line: 4206, baseType: !1118, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !1120)
!1120 = !{!1121}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1119, file: !128, line: 232, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !1124)
!1124 = !{!1125, !1131}
!1125 = !DIDerivedType(tag: DW_TAG_member, scope: !1123, file: !133, line: 38, baseType: !1126, size: 32)
!1126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1123, file: !133, line: 38, size: 32, elements: !1127)
!1127 = !{!1128, !1130}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1126, file: !133, line: 39, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1126, file: !133, line: 40, baseType: !1129, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, scope: !1123, file: !133, line: 42, baseType: !1132, size: 32, offset: 32)
!1132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1123, file: !133, line: 42, size: 32, elements: !1133)
!1133 = !{!1134, !1135}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1132, file: !133, line: 43, baseType: !1129, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1132, file: !133, line: 44, baseType: !1129, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1115, file: !124, line: 4208, baseType: !1137, size: 32, offset: 64)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !1138)
!1138 = !{!1139}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1137, file: !149, line: 52, baseType: !22, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1115, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1115, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1115, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1115, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1115, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1115, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1115, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1115, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1109, file: !116, line: 96, baseType: !1149, size: 32, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1150)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !1153}
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1160, !1161, !1250, !1258}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !1155, file: !116, line: 35, baseType: !176, size: 16)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1155, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1155, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !1155, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1155, file: !116, line: 56, baseType: !1162, size: 32, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !1164)
!1164 = !{!1165, !1166, !1248, !1249}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1163, file: !124, line: 2722, baseType: !1118, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1163, file: !124, line: 2724, baseType: !1167, size: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !1169)
!1169 = !{!1170, !1210, !1222, !1223, !1224, !1225, !1231, !1243}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1168, file: !195, line: 247, baseType: !1171, size: 384)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !1172)
!1172 = !{!1173, !1184, !1186, !1187, !1188, !1197, !1198, !1199}
!1173 = !DIDerivedType(tag: DW_TAG_member, scope: !1171, file: !195, line: 60, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1171, file: !195, line: 60, size: 64, elements: !1175)
!1175 = !{!1176, !1178}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1174, file: !195, line: 61, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !1123)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1174, file: !195, line: 62, baseType: !1179, size: 64)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !1180)
!1180 = !{!1181}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1179, file: !207, line: 50, baseType: !1182, size: 64)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1183, size: 64, elements: !212)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1171, file: !195, line: 68, baseType: !1185, size: 32, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1171, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1171, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!1188 = !DIDerivedType(tag: DW_TAG_member, scope: !1171, file: !195, line: 90, baseType: !1189, size: 16, offset: 112)
!1189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1171, file: !195, line: 90, size: 16, elements: !1190)
!1190 = !{!1191, !1196}
!1191 = !DIDerivedType(tag: DW_TAG_member, scope: !1189, file: !195, line: 91, baseType: !1192, size: 16)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1189, file: !195, line: 91, size: 16, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1192, file: !195, line: 96, baseType: !225, size: 8)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1192, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1189, file: !195, line: 100, baseType: !177, size: 16)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1171, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1171, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1171, file: !195, line: 131, baseType: !1200, size: 192, offset: 192)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !1201)
!1201 = !{!1202, !1203, !1209}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1200, file: !128, line: 245, baseType: !1177, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1200, file: !128, line: 246, baseType: !1204, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{null, !1208}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1200, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1168, file: !195, line: 250, baseType: !1211, size: 288, offset: 384)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1211, file: !244, line: 26, baseType: !108, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1211, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1211, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1211, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1211, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1211, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1211, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1211, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1211, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1168, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1168, file: !195, line: 256, baseType: !1118, size: 64, offset: 704)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1168, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1168, file: !195, line: 300, baseType: !1226, size: 96, offset: 800)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !1227)
!1227 = !{!1228, !1229, !1230}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1226, file: !195, line: 153, baseType: !22, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1226, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1226, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1168, file: !195, line: 325, baseType: !1232, size: 32, offset: 896)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !1234)
!1234 = !{!1235, !1241, !1242}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1233, file: !124, line: 5074, baseType: !1236, size: 96)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !1237)
!1237 = !{!1238, !1239, !1240}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1236, file: !270, line: 57, baseType: !273, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1236, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1236, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1233, file: !124, line: 5075, baseType: !1118, size: 64, offset: 96)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1233, file: !124, line: 5076, baseType: !1137, size: 32, offset: 160)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1168, file: !195, line: 343, baseType: !1244, size: 64, offset: 928)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1244, file: !244, line: 63, baseType: !108, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1244, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !1163, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !1163, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !1155, file: !116, line: 61, baseType: !1251, size: 32, offset: 160)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !1254)
!1254 = !{!1255, !1257}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1253, file: !289, line: 36, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1253, file: !289, line: 37, baseType: !1256, size: 32, offset: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !1155, file: !116, line: 67, baseType: !1259, size: 32, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1261 = !{!1092}
!1262 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1264, file: !788, line: 17, baseType: !336, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1264, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "_zbus_runtime_obs_pool", scope: !1270, file: !1441, line: 11, type: !1442, isLocal: true, isDefinition: true, align: 32)
!1270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1272, globals: !1438, splitDebugInlining: false, nameTableKind: None)
!1271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus_runtime_observers.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1272 = !{!102, !1273, !157, !1437, !103}
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 32)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer_node", file: !116, line: 507, size: 64, elements: !1275)
!1275 = !{!1276, !1282}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1274, file: !116, line: 508, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1278, file: !289, line: 30, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "obs", scope: !1274, file: !116, line: 509, baseType: !1283, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !1286)
!1286 = !{!1287, !1288, !1324}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1285, file: !116, line: 91, baseType: !119, size: 8)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1285, file: !116, line: 93, baseType: !1289, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !1292)
!1292 = !{!1293, !1312, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1291, file: !124, line: 4206, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !1296)
!1296 = !{!1297}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1295, file: !128, line: 232, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !1299)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !1300)
!1300 = !{!1301, !1307}
!1301 = !DIDerivedType(tag: DW_TAG_member, scope: !1299, file: !133, line: 38, baseType: !1302, size: 32)
!1302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1299, file: !133, line: 38, size: 32, elements: !1303)
!1303 = !{!1304, !1306}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1302, file: !133, line: 39, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1302, file: !133, line: 40, baseType: !1305, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, scope: !1299, file: !133, line: 42, baseType: !1308, size: 32, offset: 32)
!1308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1299, file: !133, line: 42, size: 32, elements: !1309)
!1309 = !{!1310, !1311}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1308, file: !133, line: 43, baseType: !1305, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1308, file: !133, line: 44, baseType: !1305, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1291, file: !124, line: 4208, baseType: !1313, size: 32, offset: 64)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1313, file: !149, line: 52, baseType: !22, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1291, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1291, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1291, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1291, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1291, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1291, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1291, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1291, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1285, file: !116, line: 96, baseType: !1325, size: 32, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{null, !1329}
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1426, !1434}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !1331, file: !116, line: 35, baseType: !176, size: 16)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1331, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1331, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !1331, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1331, file: !116, line: 56, baseType: !1338, size: 32, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 32)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !1340)
!1340 = !{!1341, !1342, !1424, !1425}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1339, file: !124, line: 2722, baseType: !1294, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1339, file: !124, line: 2724, baseType: !1343, size: 32, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 32)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !1345)
!1345 = !{!1346, !1386, !1398, !1399, !1400, !1401, !1407, !1419}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1344, file: !195, line: 247, baseType: !1347, size: 384)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !1348)
!1348 = !{!1349, !1360, !1362, !1363, !1364, !1373, !1374, !1375}
!1349 = !DIDerivedType(tag: DW_TAG_member, scope: !1347, file: !195, line: 60, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1347, file: !195, line: 60, size: 64, elements: !1351)
!1351 = !{!1352, !1354}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1350, file: !195, line: 61, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !1299)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1350, file: !195, line: 62, baseType: !1355, size: 64)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !1356)
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1355, file: !207, line: 50, baseType: !1358, size: 64)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 64, elements: !212)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1347, file: !195, line: 68, baseType: !1361, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1347, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1347, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1347, file: !195, line: 90, baseType: !1365, size: 16, offset: 112)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1347, file: !195, line: 90, size: 16, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !195, line: 91, baseType: !1368, size: 16)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !195, line: 91, size: 16, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1368, file: !195, line: 96, baseType: !225, size: 8)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1368, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1365, file: !195, line: 100, baseType: !177, size: 16)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1347, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1347, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1347, file: !195, line: 131, baseType: !1376, size: 192, offset: 192)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !1377)
!1377 = !{!1378, !1379, !1385}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1376, file: !128, line: 245, baseType: !1353, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1376, file: !128, line: 246, baseType: !1380, size: 32, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{null, !1384}
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1376, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1344, file: !195, line: 250, baseType: !1387, size: 288, offset: 384)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1387, file: !244, line: 26, baseType: !108, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1387, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1387, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1387, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1387, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1387, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1387, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1387, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1387, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1344, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1344, file: !195, line: 256, baseType: !1294, size: 64, offset: 704)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1344, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1344, file: !195, line: 300, baseType: !1402, size: 96, offset: 800)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !1403)
!1403 = !{!1404, !1405, !1406}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1402, file: !195, line: 153, baseType: !22, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1402, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1402, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1344, file: !195, line: 325, baseType: !1408, size: 32, offset: 896)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !1410)
!1410 = !{!1411, !1417, !1418}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1409, file: !124, line: 5074, baseType: !1412, size: 96)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !1413)
!1413 = !{!1414, !1415, !1416}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1412, file: !270, line: 57, baseType: !273, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1412, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1412, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1409, file: !124, line: 5075, baseType: !1294, size: 64, offset: 96)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1409, file: !124, line: 5076, baseType: !1313, size: 32, offset: 160)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1344, file: !195, line: 343, baseType: !1420, size: 64, offset: 928)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !1421)
!1421 = !{!1422, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1420, file: !244, line: 63, baseType: !108, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1420, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !1339, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !1339, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !1331, file: !116, line: 61, baseType: !1427, size: 32, offset: 160)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !1430)
!1430 = !{!1431, !1433}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1429, file: !289, line: 36, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1429, file: !289, line: 37, baseType: !1432, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !1331, file: !116, line: 67, baseType: !1435, size: 32, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1283)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!1438 = !{!1268, !1439}
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "_k_mem_slab_buf__zbus_runtime_obs_pool", scope: !1270, file: !1441, line: 11, type: !344, isLocal: true, isDefinition: true, align: 32)
!1441 = !DIFile(filename: "zephyr/subsys/zbus/zbus_runtime_observers.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_slab", file: !124, line: 4836, size: 256, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1450}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1442, file: !124, line: 4837, baseType: !1294, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1442, file: !124, line: 4838, baseType: !1313, size: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !1442, file: !124, line: 4839, baseType: !108, size: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1442, file: !124, line: 4840, baseType: !153, size: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1442, file: !124, line: 4841, baseType: !157, size: 32, offset: 160)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !1442, file: !124, line: 4842, baseType: !157, size: 32, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !1442, file: !124, line: 4843, baseType: !108, size: 32, offset: 224)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !1453, file: !1566, line: 72, type: !1649, isLocal: true, isDefinition: true)
!1453 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1454, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1455, retainedTypes: !1552, globals: !1563, splitDebugInlining: false, nameTableKind: None)
!1454 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1455 = !{!30, !1456}
!1456 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !809, line: 65, baseType: !103, size: 32, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1458 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1459 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1460 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1461 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1462 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1463 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1464 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1465 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1466 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1467 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1468 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!1469 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1470 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1471 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1472 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1473 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1474 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1475 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1476 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1477 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!1478 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!1479 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!1480 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!1481 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!1482 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!1483 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!1484 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!1485 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!1486 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!1487 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!1488 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!1489 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1490 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!1491 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!1492 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!1493 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!1494 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1495 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1496 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1497 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1498 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1499 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1500 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1501 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1502 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1503 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1504 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1505 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1506 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1507 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1508 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!1509 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!1510 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!1511 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!1512 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!1513 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!1514 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!1515 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!1516 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!1517 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!1518 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!1519 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!1520 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!1521 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!1522 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!1523 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!1524 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!1525 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!1526 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!1527 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!1528 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!1529 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!1530 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!1531 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!1532 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!1533 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!1534 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!1535 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!1536 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!1537 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!1538 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!1539 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!1540 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!1541 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!1542 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!1543 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!1544 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!1545 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!1546 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!1547 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!1548 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!1549 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!1550 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!1551 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!1552 = !{!153, !103, !102, !1553}
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !809, line: 392, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 384, size: 192, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1560, !1561, !1562}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1555, file: !809, line: 386, baseType: !813, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1555, file: !809, line: 387, baseType: !813, size: 32, offset: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1555, file: !809, line: 388, baseType: !813, size: 32, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1555, file: !809, line: 389, baseType: !813, size: 32, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1555, file: !809, line: 390, baseType: !813, size: 32, offset: 128)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1555, file: !809, line: 391, baseType: !813, size: 32, offset: 160)
!1563 = !{!1564, !1570, !1586, !1597, !1614, !1451, !1616, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1643, !1645, !1647}
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1453, file: !1566, line: 424, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1566 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 64, elements: !1568)
!1568 = !{!1569}
!1569 = !DISubrange(count: 4)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1453, file: !1566, line: 424, type: !1572, isLocal: false, isDefinition: true, align: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1584, !1585}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1573, file: !833, line: 380, baseType: !336, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1573, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1573, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1573, file: !833, line: 386, baseType: !1579, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1580, file: !833, line: 359, baseType: !164, size: 8)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1580, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1573, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1573, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1453, file: !1566, line: 424, type: !1588, isLocal: true, isDefinition: true, align: 32)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !1590)
!1590 = !{!1591, !1596}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1589, file: !824, line: 60, baseType: !1592, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!103, !1595}
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1589, file: !824, line: 65, baseType: !1595, size: 32, offset: 32)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "exti_data", scope: !1453, file: !1566, line: 423, type: !1599, isLocal: true, isDefinition: true)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1566, line: 107, size: 1472, elements: !1600)
!1600 = !{!1601}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1599, file: !1566, line: 109, baseType: !1602, size: 1472)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 1472, elements: !1612)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1566, line: 101, size: 64, elements: !1604)
!1604 = !{!1605, !1611}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1603, file: !1566, line: 102, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1607, line: 63, baseType: !1608)
!1607 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{null, !103, !102}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1603, file: !1566, line: 103, baseType: !102, size: 32, offset: 32)
!1612 = !{!1613}
!1613 = !DISubrange(count: 23)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1453, file: !1566, line: 424, type: !1580, isLocal: true, isDefinition: true, align: 8)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1618, file: !1566, line: 493, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1618 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1566, file: !1566, line: 460, type: !1619, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !1621)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{null, !1595}
!1621 = !{!1622}
!1622 = !DILocalVariable(name: "dev", arg: 1, scope: !1618, file: !1566, line: 460, type: !1595)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1628}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1623, file: !10, line: 55, baseType: !330, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1623, file: !10, line: 57, baseType: !330, size: 32, offset: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1623, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1623, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1618, file: !1566, line: 497, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1618, file: !1566, line: 507, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1618, file: !1566, line: 512, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1618, file: !1566, line: 516, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1618, file: !1566, line: 523, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1618, file: !1566, line: 527, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1641 = !DIGlobalVariableExpression(var: !1642, expr: !DIExpression())
!1642 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !1618, file: !1566, line: 581, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1643 = !DIGlobalVariableExpression(var: !1644, expr: !DIExpression())
!1644 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !1618, file: !1566, line: 586, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1645 = !DIGlobalVariableExpression(var: !1646, expr: !DIExpression())
!1646 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !1618, file: !1566, line: 591, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !1618, file: !1566, line: 595, type: !1623, isLocal: true, isDefinition: true, align: 32)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1650, size: 736, elements: !1612)
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1651)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !809, line: 163, baseType: !1456)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1654, file: !1659, line: 25, type: !1687, isLocal: false, isDefinition: true, align: 16)
!1654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1656, splitDebugInlining: false, nameTableKind: None)
!1655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1656 = !{!1657, !1652, !1663, !1665, !1667, !1669, !1671, !1673, !1675, !1677, !1679, !1681, !1683, !1685}
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1654, file: !1659, line: 20, type: !1660, isLocal: false, isDefinition: true, align: 16)
!1659 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 240, elements: !1661)
!1661 = !{!1662}
!1662 = !DISubrange(count: 15)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1654, file: !1659, line: 32, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1654, file: !1659, line: 39, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1654, file: !1659, line: 46, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1654, file: !1659, line: 53, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1654, file: !1659, line: 60, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1654, file: !1659, line: 67, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1654, file: !1659, line: 74, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1654, file: !1659, line: 81, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1654, file: !1659, line: 88, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1654, file: !1659, line: 95, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1654, file: !1659, line: 102, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1654, file: !1659, line: 109, type: !1567, isLocal: false, isDefinition: true, align: 16)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 48, elements: !1688)
!1688 = !{!1689}
!1689 = !DISubrange(count: 3)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1692, file: !1757, line: 398, type: !1790, isLocal: true, isDefinition: true)
!1692 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1693, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1694, retainedTypes: !1707, globals: !1754, splitDebugInlining: false, nameTableKind: None)
!1693 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1694 = !{!1695, !30, !1700}
!1695 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1696, line: 197, baseType: !32, size: 32, elements: !1697)
!1696 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1697 = !{!1698, !1699}
!1698 = !DIEnumerator(name: "SUCCESS", value: 0)
!1699 = !DIEnumerator(name: "ERROR", value: 1)
!1700 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1701, line: 44, baseType: !32, size: 32, elements: !1702)
!1701 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1702 = !{!1703, !1704, !1705, !1706}
!1703 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1704 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1705 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1706 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1707 = !{!102, !103, !108, !1708, !1747, !1753}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 586, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 550, size: 1216, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1710, file: !809, line: 552, baseType: !813, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1710, file: !809, line: 553, baseType: !813, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1710, file: !809, line: 554, baseType: !813, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1710, file: !809, line: 555, baseType: !813, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1710, file: !809, line: 556, baseType: !813, size: 32, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1710, file: !809, line: 557, baseType: !813, size: 32, offset: 160)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1710, file: !809, line: 558, baseType: !813, size: 32, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1710, file: !809, line: 559, baseType: !108, size: 32, offset: 224)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1710, file: !809, line: 560, baseType: !813, size: 32, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1710, file: !809, line: 561, baseType: !813, size: 32, offset: 288)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1710, file: !809, line: 562, baseType: !1723, size: 64, offset: 320)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !212)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1710, file: !809, line: 563, baseType: !813, size: 32, offset: 384)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1710, file: !809, line: 564, baseType: !813, size: 32, offset: 416)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1710, file: !809, line: 565, baseType: !813, size: 32, offset: 448)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1710, file: !809, line: 566, baseType: !108, size: 32, offset: 480)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1710, file: !809, line: 567, baseType: !813, size: 32, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1710, file: !809, line: 568, baseType: !813, size: 32, offset: 544)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1710, file: !809, line: 569, baseType: !1723, size: 64, offset: 576)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1710, file: !809, line: 570, baseType: !813, size: 32, offset: 640)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1710, file: !809, line: 571, baseType: !813, size: 32, offset: 672)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1710, file: !809, line: 572, baseType: !813, size: 32, offset: 704)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1710, file: !809, line: 573, baseType: !108, size: 32, offset: 736)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1710, file: !809, line: 574, baseType: !813, size: 32, offset: 768)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1710, file: !809, line: 575, baseType: !813, size: 32, offset: 800)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1710, file: !809, line: 576, baseType: !1723, size: 64, offset: 832)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1710, file: !809, line: 577, baseType: !813, size: 32, offset: 896)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1710, file: !809, line: 578, baseType: !813, size: 32, offset: 928)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1710, file: !809, line: 579, baseType: !1723, size: 64, offset: 960)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1710, file: !809, line: 580, baseType: !813, size: 32, offset: 1024)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1710, file: !809, line: 581, baseType: !813, size: 32, offset: 1056)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1710, file: !809, line: 582, baseType: !813, size: 32, offset: 1088)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1710, file: !809, line: 583, baseType: !813, size: 32, offset: 1120)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1710, file: !809, line: 584, baseType: !813, size: 32, offset: 1152)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1710, file: !809, line: 585, baseType: !813, size: 32, offset: 1184)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1749, line: 343, size: 64, elements: !1750)
!1749 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1748, file: !1749, line: 344, baseType: !108, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1748, file: !1749, line: 345, baseType: !108, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!1754 = !{!1755, !1761, !1777, !1788, !1690}
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !1692, file: !1757, line: 752, type: !1758, isLocal: false, isDefinition: true, align: 16)
!1757 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 800, elements: !1759)
!1759 = !{!1760}
!1760 = !DISubrange(count: 50)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !1692, file: !1757, line: 752, type: !1763, isLocal: false, isDefinition: true, align: 32)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1775, !1776}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1764, file: !833, line: 380, baseType: !336, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1764, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1764, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1764, file: !833, line: 386, baseType: !1770, size: 32, offset: 96)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !1772)
!1772 = !{!1773, !1774}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1771, file: !833, line: 359, baseType: !164, size: 8)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1771, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1764, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1764, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!1777 = !DIGlobalVariableExpression(var: !1778, expr: !DIExpression())
!1778 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !1692, file: !1757, line: 752, type: !1779, isLocal: true, isDefinition: true, align: 32)
!1779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !1781)
!1781 = !{!1782, !1787}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1780, file: !824, line: 60, baseType: !1783, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!103, !1786}
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1780, file: !824, line: 65, baseType: !1786, size: 32, offset: 32)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !1692, file: !1757, line: 752, type: !1771, isLocal: true, isDefinition: true, align: 8)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1701, line: 100, size: 224, elements: !1791)
!1791 = !{!1792, !1798, !1799, !1808, !1813, !1818, !1824}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1790, file: !1701, line: 101, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1701, line: 76, baseType: !1794)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!103, !1786, !1797}
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1701, line: 56, baseType: !102)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1790, file: !1701, line: 102, baseType: !1793, size: 32, offset: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1790, file: !1701, line: 103, baseType: !1800, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1701, line: 83, baseType: !1801)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!103, !1786, !1797, !1804, !102}
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1701, line: 72, baseType: !1805)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{null, !1786, !1797, !102}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1790, file: !1701, line: 104, baseType: !1809, size: 32, offset: 96)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1701, line: 79, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!103, !1786, !1797, !1753}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1790, file: !1701, line: 105, baseType: !1814, size: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1701, line: 88, baseType: !1815)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!1700, !1786, !1797}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1790, file: !1701, line: 106, baseType: !1819, size: 32, offset: 160)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1701, line: 92, baseType: !1820)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!103, !1786, !1797, !1823}
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1701, line: 64, baseType: !102)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1790, file: !1701, line: 107, baseType: !1825, size: 32, offset: 192)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1701, line: 96, baseType: !1826)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!103, !1786, !1797, !102}
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1831, file: !1888, line: 603, type: !1890, isLocal: true, isDefinition: true, align: 32)
!1831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1833, globals: !1885, splitDebugInlining: false, nameTableKind: None)
!1832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1833 = !{!102, !103, !1834}
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1837, line: 336, size: 160, elements: !1838)
!1837 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1838 = !{!1839, !1859, !1863, !1867, !1880}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1836, file: !1837, line: 365, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!103, !1843, !1858}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1856, !1857}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1845, file: !833, line: 380, baseType: !336, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1845, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1845, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1845, file: !833, line: 386, baseType: !1851, size: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1852, file: !833, line: 359, baseType: !164, size: 8)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1852, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1845, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1845, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1836, file: !1837, line: 366, baseType: !1860, size: 32, offset: 32)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{null, !1843, !165}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1836, file: !1837, line: 374, baseType: !1864, size: 32, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!103, !1843}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1836, file: !1837, line: 377, baseType: !1868, size: 32, offset: 96)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!103, !1843, !1871}
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1837, line: 122, size: 64, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1878, !1879}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1873, file: !1837, line: 123, baseType: !108, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1873, file: !1837, line: 124, baseType: !164, size: 8, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1873, file: !1837, line: 125, baseType: !164, size: 8, offset: 40)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1873, file: !1837, line: 126, baseType: !164, size: 8, offset: 48)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1873, file: !1837, line: 127, baseType: !164, size: 8, offset: 56)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1836, file: !1837, line: 379, baseType: !1881, size: 32, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!103, !1843, !1884}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1885 = !{!1829, !1886}
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1831, file: !1888, line: 38, type: !1889, isLocal: true, isDefinition: true)
!1888 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1891, file: !824, line: 60, baseType: !1864, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1891, file: !824, line: 65, baseType: !1843, size: 32, offset: 32)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1897, file: !2067, line: 762, type: !2176, isLocal: true, isDefinition: true)
!1897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1899, retainedTypes: !1917, globals: !2064, splitDebugInlining: false, nameTableKind: None)
!1898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!1899 = !{!30, !1900, !1906, !1911, !1700}
!1900 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1901, line: 506, baseType: !32, size: 32, elements: !1902)
!1901 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1902 = !{!1903, !1904, !1905}
!1903 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1904 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1905 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1906 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1901, line: 512, baseType: !32, size: 32, elements: !1907)
!1907 = !{!1908, !1909, !1910}
!1908 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1909 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1910 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1911 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1607, line: 43, baseType: !32, size: 32, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916}
!1913 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1914 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1915 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1916 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1917 = !{!102, !103, !1918, !1987, !1992, !1953, !1906, !1900, !1997, !1998, !108, !2012, !1968, !157, !2024, !2025}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1901, line: 523, size: 288, elements: !1921)
!1921 = !{!1922, !1943, !1949, !1954, !1958, !1959, !1960, !1964, !1983}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1920, file: !1901, line: 524, baseType: !1923, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{!103, !1926, !1941, !1942}
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !1929)
!1929 = !{!1930, !1931, !1932, !1933, !1939, !1940}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1928, file: !833, line: 380, baseType: !336, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1928, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1928, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1928, file: !833, line: 386, baseType: !1934, size: 32, offset: 96)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !1936)
!1936 = !{!1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1935, file: !833, line: 359, baseType: !164, size: 8)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1935, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1928, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1928, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1901, line: 237, baseType: !164)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1901, line: 257, baseType: !108)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1920, file: !1901, line: 530, baseType: !1944, size: 32, offset: 32)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1945 = !DISubroutineType(types: !1946)
!1946 = !{!103, !1926, !1947}
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1901, line: 229, baseType: !108)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1920, file: !1901, line: 532, baseType: !1950, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{!103, !1926, !1953, !1948}
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1901, line: 216, baseType: !108)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1920, file: !1901, line: 535, baseType: !1955, size: 32, offset: 96)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{!103, !1926, !1953}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1920, file: !1901, line: 537, baseType: !1955, size: 32, offset: 128)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1920, file: !1901, line: 539, baseType: !1955, size: 32, offset: 160)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1920, file: !1901, line: 541, baseType: !1961, size: 32, offset: 192)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!103, !1926, !1941, !1900, !1906}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1920, file: !1901, line: 544, baseType: !1965, size: 32, offset: 224)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!103, !1926, !1968, !119}
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1901, line: 478, size: 96, elements: !1970)
!1970 = !{!1971, !1977, !1982}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1969, file: !1901, line: 482, baseType: !1972, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !1974)
!1974 = !{!1975}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1973, file: !289, line: 30, baseType: !1976, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1969, file: !1901, line: 485, baseType: !1978, size: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1901, line: 464, baseType: !1979)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1926, !1968, !1953}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1969, file: !1901, line: 493, baseType: !1953, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1920, file: !1901, line: 547, baseType: !1984, size: 32, offset: 256)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!108, !1926}
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1901, line: 428, size: 32, elements: !1990)
!1990 = !{!1991}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1989, file: !1901, line: 434, baseType: !1953, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1901, line: 441, size: 32, elements: !1995)
!1995 = !{!1996}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1994, file: !1901, line: 447, baseType: !1953, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !809, line: 469, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 458, size: 320, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2000, file: !809, line: 460, baseType: !813, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2000, file: !809, line: 461, baseType: !813, size: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2000, file: !809, line: 462, baseType: !813, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2000, file: !809, line: 463, baseType: !813, size: 32, offset: 96)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2000, file: !809, line: 464, baseType: !813, size: 32, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2000, file: !809, line: 465, baseType: !813, size: 32, offset: 160)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2000, file: !809, line: 466, baseType: !813, size: 32, offset: 192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2000, file: !809, line: 467, baseType: !813, size: 32, offset: 224)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2000, file: !809, line: 468, baseType: !2011, size: 64, offset: 256)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 64, elements: !212)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !809, line: 484, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 475, size: 384, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2020, !2021, !2022, !2023}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !2014, file: !809, line: 477, baseType: !813, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !2014, file: !809, line: 478, baseType: !813, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !2014, file: !809, line: 479, baseType: !2019, size: 128, offset: 64)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 128, elements: !1568)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !2014, file: !809, line: 480, baseType: !1723, size: 64, offset: 192)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !2014, file: !809, line: 481, baseType: !813, size: 32, offset: 256)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2014, file: !809, line: 482, baseType: !1723, size: 64, offset: 288)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2014, file: !809, line: 483, baseType: !813, size: 32, offset: 352)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1701, line: 100, size: 224, elements: !2028)
!2028 = !{!2029, !2034, !2035, !2044, !2049, !2054, !2059}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !2027, file: !1701, line: 101, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1701, line: 76, baseType: !2031)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 32)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!103, !1926, !1797}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !2027, file: !1701, line: 102, baseType: !2030, size: 32, offset: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !2027, file: !1701, line: 103, baseType: !2036, size: 32, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1701, line: 83, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!103, !1926, !1797, !2040, !102}
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1701, line: 72, baseType: !2041)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 32)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{null, !1926, !1797, !102}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !2027, file: !1701, line: 104, baseType: !2045, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1701, line: 79, baseType: !2046)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!103, !1926, !1797, !1753}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !2027, file: !1701, line: 105, baseType: !2050, size: 32, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1701, line: 88, baseType: !2051)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!1700, !1926, !1797}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !2027, file: !1701, line: 106, baseType: !2055, size: 32, offset: 160)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1701, line: 92, baseType: !2056)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!103, !1926, !1797, !1823}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2027, file: !1701, line: 107, baseType: !2060, size: 32, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1701, line: 96, baseType: !2061)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 32)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!103, !1926, !1797, !102}
!2064 = !{!2065, !2071, !2073, !2083, !2085, !2087, !2089, !2091, !2093, !2095, !2100, !2102, !2104, !2106, !2108, !2110, !2112, !2114, !2116, !2118, !2120, !2122, !2124, !2126, !2128, !2142, !2144, !2146, !2148, !2150, !2152, !2154, !2156, !2158, !2160, !2162, !2164, !2166, !2168, !2170, !1895, !2172, !2174, !2187, !2189, !2191, !2193, !2195, !2197}
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1897, file: !2067, line: 762, type: !2068, isLocal: false, isDefinition: true, align: 16)
!2067 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 80, elements: !2069)
!2069 = !{!2070}
!2070 = !DISubrange(count: 5)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2072 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1897, file: !2067, line: 762, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1897, file: !2067, line: 762, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2076)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !2077)
!2077 = !{!2078, !2082}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2076, file: !824, line: 60, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!103, !1926}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2076, file: !824, line: 65, baseType: !1926, size: 32, offset: 32)
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1897, file: !2067, line: 766, type: !2068, isLocal: false, isDefinition: true, align: 16)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1897, file: !2067, line: 766, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1897, file: !2067, line: 766, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1897, file: !2067, line: 770, type: !2068, isLocal: false, isDefinition: true, align: 16)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1897, file: !2067, line: 770, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1897, file: !2067, line: 770, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2095 = !DIGlobalVariableExpression(var: !2096, expr: !DIExpression())
!2096 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1897, file: !2067, line: 774, type: !2097, isLocal: false, isDefinition: true, align: 16)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 144, elements: !2098)
!2098 = !{!2099}
!2099 = !DISubrange(count: 9)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1897, file: !2067, line: 774, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2102 = !DIGlobalVariableExpression(var: !2103, expr: !DIExpression())
!2103 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1897, file: !2067, line: 774, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2104 = !DIGlobalVariableExpression(var: !2105, expr: !DIExpression())
!2105 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1897, file: !2067, line: 778, type: !2068, isLocal: false, isDefinition: true, align: 16)
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1897, file: !2067, line: 778, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1897, file: !2067, line: 778, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1897, file: !2067, line: 782, type: !2068, isLocal: false, isDefinition: true, align: 16)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1897, file: !2067, line: 782, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2114 = !DIGlobalVariableExpression(var: !2115, expr: !DIExpression())
!2115 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1897, file: !2067, line: 782, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1897, file: !2067, line: 786, type: !2068, isLocal: false, isDefinition: true, align: 16)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1897, file: !2067, line: 786, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1897, file: !2067, line: 786, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1897, file: !2067, line: 790, type: !2068, isLocal: false, isDefinition: true, align: 16)
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1897, file: !2067, line: 790, type: !1927, isLocal: false, isDefinition: true, align: 32)
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1897, file: !2067, line: 790, type: !2075, isLocal: true, isDefinition: true, align: 32)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1897, file: !2067, line: 762, type: !2130, isLocal: true, isDefinition: true)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !2131, line: 237, size: 128, elements: !2132)
!2131 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2132 = !{!2133, !2134, !2135}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2130, file: !2131, line: 239, baseType: !1994, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2130, file: !2131, line: 241, baseType: !1926, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2130, file: !2131, line: 243, baseType: !2136, size: 64, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !289, line: 40, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !289, line: 35, size: 64, elements: !2138)
!2138 = !{!2139, !2141}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2137, file: !289, line: 36, baseType: !2140, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2137, file: !289, line: 37, baseType: !2140, size: 32, offset: 32)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1897, file: !2067, line: 762, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1897, file: !2067, line: 766, type: !2130, isLocal: true, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1897, file: !2067, line: 766, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1897, file: !2067, line: 770, type: !2130, isLocal: true, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1897, file: !2067, line: 770, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1897, file: !2067, line: 774, type: !2130, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1897, file: !2067, line: 774, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1897, file: !2067, line: 778, type: !2130, isLocal: true, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1897, file: !2067, line: 778, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1897, file: !2067, line: 782, type: !2130, isLocal: true, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1897, file: !2067, line: 782, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1897, file: !2067, line: 786, type: !2130, isLocal: true, isDefinition: true)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1897, file: !2067, line: 786, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1897, file: !2067, line: 790, type: !2130, isLocal: true, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1897, file: !2067, line: 790, type: !1935, isLocal: true, isDefinition: true, align: 8)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1897, file: !2067, line: 656, type: !1919, isLocal: true, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1897, file: !2067, line: 766, type: !2176, isLocal: true, isDefinition: true)
!2176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !2131, line: 224, size: 160, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2177, file: !2131, line: 226, baseType: !1989, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2177, file: !2131, line: 228, baseType: !1753, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2177, file: !2131, line: 230, baseType: !103, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !2177, file: !2131, line: 231, baseType: !2183, size: 64, offset: 96)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1749, line: 343, size: 64, elements: !2184)
!2184 = !{!2185, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2183, file: !1749, line: 344, baseType: !108, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !2183, file: !1749, line: 345, baseType: !108, size: 32, offset: 32)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1897, file: !2067, line: 770, type: !2176, isLocal: true, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1897, file: !2067, line: 774, type: !2176, isLocal: true, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1897, file: !2067, line: 778, type: !2176, isLocal: true, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1897, file: !2067, line: 782, type: !2176, isLocal: true, isDefinition: true)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1897, file: !2067, line: 786, type: !2176, isLocal: true, isDefinition: true)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1897, file: !2067, line: 790, type: !2176, isLocal: true, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !2201, file: !2340, line: 44, type: !2478, isLocal: false, isDefinition: true)
!2201 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2202, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2203, retainedTypes: !2236, globals: !2337, splitDebugInlining: false, nameTableKind: None)
!2202 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!2203 = !{!30, !2204, !2211, !2218, !2225, !2231, !1700}
!2204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1837, line: 47, baseType: !32, size: 32, elements: !2205)
!2205 = !{!2206, !2207, !2208, !2209, !2210}
!2206 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!2207 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!2208 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!2209 = !DIEnumerator(name: "UART_BREAK", value: 8)
!2210 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!2211 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1837, line: 75, baseType: !32, size: 32, elements: !2212)
!2212 = !{!2213, !2214, !2215, !2216, !2217}
!2213 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!2214 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!2215 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!2216 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!2217 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!2218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1837, line: 92, baseType: !32, size: 32, elements: !2219)
!2219 = !{!2220, !2221, !2222, !2223, !2224}
!2220 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!2221 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!2222 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!2223 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!2224 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!2225 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1837, line: 84, baseType: !32, size: 32, elements: !2226)
!2226 = !{!2227, !2228, !2229, !2230}
!2227 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!2228 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!2229 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!2230 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!2231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1837, line: 107, baseType: !32, size: 32, elements: !2232)
!2232 = !{!2233, !2234, !2235}
!2233 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!2234 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!2235 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!2236 = !{!102, !103, !2237, !165, !164, !2286, !108, !1797, !2297, !177, !109, !2336}
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2239)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1837, line: 336, size: 160, elements: !2240)
!2240 = !{!2241, !2260, !2264, !2268, !2281}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2239, file: !1837, line: 365, baseType: !2242, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!103, !2245, !1858}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2258, !2259}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2247, file: !833, line: 380, baseType: !336, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2247, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2247, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2247, file: !833, line: 386, baseType: !2253, size: 32, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !2255)
!2255 = !{!2256, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2254, file: !833, line: 359, baseType: !164, size: 8)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2254, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2247, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2247, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2239, file: !1837, line: 366, baseType: !2261, size: 32, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{null, !2245, !165}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2239, file: !1837, line: 374, baseType: !2265, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{!103, !2245}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2239, file: !1837, line: 377, baseType: !2269, size: 32, offset: 96)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 32)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!103, !2245, !2272}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1837, line: 122, size: 64, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2274, file: !1837, line: 123, baseType: !108, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2274, file: !1837, line: 124, baseType: !164, size: 8, offset: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2274, file: !1837, line: 125, baseType: !164, size: 8, offset: 40)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2274, file: !1837, line: 126, baseType: !164, size: 8, offset: 48)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2274, file: !1837, line: 127, baseType: !164, size: 8, offset: 56)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2239, file: !1837, line: 379, baseType: !2282, size: 32, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!103, !2245, !2285}
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !809, line: 783, baseType: !2288)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 774, size: 224, elements: !2289)
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2295, !2296}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2288, file: !809, line: 776, baseType: !813, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !2288, file: !809, line: 777, baseType: !813, size: 32, offset: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !2288, file: !809, line: 778, baseType: !813, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !2288, file: !809, line: 779, baseType: !813, size: 32, offset: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !2288, file: !809, line: 780, baseType: !813, size: 32, offset: 128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !2288, file: !809, line: 781, baseType: !813, size: 32, offset: 160)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !2288, file: !809, line: 782, baseType: !813, size: 32, offset: 192)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2299)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1701, line: 100, size: 224, elements: !2300)
!2300 = !{!2301, !2306, !2307, !2316, !2321, !2326, !2331}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !2299, file: !1701, line: 101, baseType: !2302, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1701, line: 76, baseType: !2303)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 32)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{!103, !2245, !1797}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !2299, file: !1701, line: 102, baseType: !2302, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !2299, file: !1701, line: 103, baseType: !2308, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1701, line: 83, baseType: !2309)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!103, !2245, !1797, !2312, !102}
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1701, line: 72, baseType: !2313)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{null, !2245, !1797, !102}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !2299, file: !1701, line: 104, baseType: !2317, size: 32, offset: 96)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1701, line: 79, baseType: !2318)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{!103, !2245, !1797, !1753}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !2299, file: !1701, line: 105, baseType: !2322, size: 32, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1701, line: 88, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!1700, !2245, !1797}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !2299, file: !1701, line: 106, baseType: !2327, size: 32, offset: 160)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1701, line: 92, baseType: !2328)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!103, !2245, !1797, !1823}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2299, file: !1701, line: 107, baseType: !2332, size: 32, offset: 192)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1701, line: 96, baseType: !2333)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!103, !2245, !1797, !102}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!2337 = !{!2199, !2338, !2344, !2346, !2353, !2355, !2357, !2359, !2361, !2363, !2365, !2367, !2369, !2371, !2373, !2375, !2377, !2379, !2423, !2426, !2428, !2431, !2434, !2436, !2442, !2444, !2446, !2448, !2450, !2452, !2454, !2456, !2458, !2460, !2462, !2464, !2466, !2468, !2470, !2472, !2474, !2476}
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !2201, file: !2340, line: 1914, type: !2341, isLocal: false, isDefinition: true, align: 16)
!2340 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !847, size: 128, elements: !2342)
!2342 = !{!2343}
!2343 = !DISubrange(count: 8)
!2344 = !DIGlobalVariableExpression(var: !2345, expr: !DIExpression())
!2345 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !2201, file: !2340, line: 1914, type: !2246, isLocal: false, isDefinition: true, align: 32)
!2346 = !DIGlobalVariableExpression(var: !2347, expr: !DIExpression())
!2347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !2201, file: !2340, line: 1914, type: !2348, isLocal: true, isDefinition: true, align: 32)
!2348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2349)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !2350)
!2350 = !{!2351, !2352}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2349, file: !824, line: 60, baseType: !2265, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2349, file: !824, line: 65, baseType: !2245, size: 32, offset: 32)
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !2201, file: !2340, line: 1914, type: !2341, isLocal: false, isDefinition: true, align: 16)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !2201, file: !2340, line: 1914, type: !2246, isLocal: false, isDefinition: true, align: 32)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !2201, file: !2340, line: 1914, type: !2348, isLocal: true, isDefinition: true, align: 32)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !2201, file: !2340, line: 1914, type: !2341, isLocal: false, isDefinition: true, align: 16)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !2201, file: !2340, line: 1914, type: !2246, isLocal: false, isDefinition: true, align: 32)
!2363 = !DIGlobalVariableExpression(var: !2364, expr: !DIExpression())
!2364 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !2201, file: !2340, line: 1914, type: !2348, isLocal: true, isDefinition: true, align: 32)
!2365 = !DIGlobalVariableExpression(var: !2366, expr: !DIExpression())
!2366 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !2201, file: !2340, line: 1914, type: !2341, isLocal: false, isDefinition: true, align: 16)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !2201, file: !2340, line: 1914, type: !2246, isLocal: false, isDefinition: true, align: 32)
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !2201, file: !2340, line: 1914, type: !2348, isLocal: true, isDefinition: true, align: 32)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !2201, file: !2340, line: 1914, type: !2254, isLocal: true, isDefinition: true, align: 8)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !2201, file: !2340, line: 1914, type: !2254, isLocal: true, isDefinition: true, align: 8)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !2201, file: !2340, line: 1914, type: !2254, isLocal: true, isDefinition: true, align: 8)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !2201, file: !2340, line: 1914, type: !2254, isLocal: true, isDefinition: true, align: 8)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !2201, file: !2340, line: 1914, type: !2381, isLocal: true, isDefinition: true)
!2381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2382)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !2383, line: 22, size: 224, elements: !2384)
!2383 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2384 = !{!2385, !2386, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !2382, file: !2383, line: 24, baseType: !2286, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !2382, file: !2383, line: 26, baseType: !2387, size: 32, offset: 32)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1749, line: 343, size: 64, elements: !2390)
!2390 = !{!2391, !2392}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2389, file: !1749, line: 344, baseType: !108, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !2389, file: !1749, line: 345, baseType: !108, size: 32, offset: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !2382, file: !2383, line: 28, baseType: !153, size: 32, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !2382, file: !2383, line: 30, baseType: !119, size: 8, offset: 96)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2382, file: !2383, line: 32, baseType: !103, size: 32, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !2382, file: !2383, line: 34, baseType: !119, size: 8, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !2382, file: !2383, line: 36, baseType: !119, size: 8, offset: 168)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !2382, file: !2383, line: 38, baseType: !119, size: 8, offset: 176)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !2382, file: !2383, line: 40, baseType: !119, size: 8, offset: 184)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !2382, file: !2383, line: 41, baseType: !2401, size: 32, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2403)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2404, line: 60, size: 64, elements: !2405)
!2404 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2405 = !{!2406, !2422}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2403, file: !2404, line: 69, baseType: !2407, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2409)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2404, line: 50, size: 64, elements: !2410)
!2410 = !{!2411, !2420, !2421}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2409, file: !2404, line: 52, baseType: !2412, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2414)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2415, line: 37, baseType: !2416)
!2415 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2415, line: 32, size: 64, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !2416, file: !2415, line: 34, baseType: !108, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !2416, file: !2415, line: 36, baseType: !108, size: 32, offset: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2409, file: !2404, line: 54, baseType: !164, size: 8, offset: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2409, file: !2404, line: 56, baseType: !164, size: 8, offset: 40)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2403, file: !2404, line: 71, baseType: !164, size: 8, offset: 32)
!2423 = !DIGlobalVariableExpression(var: !2424, expr: !DIExpression())
!2424 = distinct !DIGlobalVariable(name: "pclken_0", scope: !2201, file: !2340, line: 1914, type: !2425, isLocal: true, isDefinition: true)
!2425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2388, size: 64, elements: !761)
!2426 = !DIGlobalVariableExpression(var: !2427, expr: !DIExpression())
!2427 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !2201, file: !2340, line: 1914, type: !2402, isLocal: true, isDefinition: true)
!2428 = !DIGlobalVariableExpression(var: !2429, expr: !DIExpression())
!2429 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !2201, file: !2340, line: 1914, type: !2430, isLocal: true, isDefinition: true)
!2430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2408, size: 64, elements: !761)
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !2201, file: !2340, line: 1914, type: !2433, isLocal: true, isDefinition: true)
!2433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 128, elements: !212)
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !2201, file: !2340, line: 1539, type: !2238, isLocal: true, isDefinition: true)
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !2201, file: !2340, line: 1914, type: !2438, isLocal: true, isDefinition: true)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !2383, line: 74, size: 64, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !2438, file: !2383, line: 76, baseType: !108, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !2438, file: !2383, line: 78, baseType: !2245, size: 32, offset: 32)
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !2201, file: !2340, line: 1914, type: !2381, isLocal: true, isDefinition: true)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "pclken_1", scope: !2201, file: !2340, line: 1914, type: !2425, isLocal: true, isDefinition: true)
!2446 = !DIGlobalVariableExpression(var: !2447, expr: !DIExpression())
!2447 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !2201, file: !2340, line: 1914, type: !2402, isLocal: true, isDefinition: true)
!2448 = !DIGlobalVariableExpression(var: !2449, expr: !DIExpression())
!2449 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !2201, file: !2340, line: 1914, type: !2430, isLocal: true, isDefinition: true)
!2450 = !DIGlobalVariableExpression(var: !2451, expr: !DIExpression())
!2451 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !2201, file: !2340, line: 1914, type: !2433, isLocal: true, isDefinition: true)
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !2201, file: !2340, line: 1914, type: !2438, isLocal: true, isDefinition: true)
!2454 = !DIGlobalVariableExpression(var: !2455, expr: !DIExpression())
!2455 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !2201, file: !2340, line: 1914, type: !2381, isLocal: true, isDefinition: true)
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "pclken_2", scope: !2201, file: !2340, line: 1914, type: !2425, isLocal: true, isDefinition: true)
!2458 = !DIGlobalVariableExpression(var: !2459, expr: !DIExpression())
!2459 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !2201, file: !2340, line: 1914, type: !2402, isLocal: true, isDefinition: true)
!2460 = !DIGlobalVariableExpression(var: !2461, expr: !DIExpression())
!2461 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !2201, file: !2340, line: 1914, type: !2430, isLocal: true, isDefinition: true)
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !2201, file: !2340, line: 1914, type: !2433, isLocal: true, isDefinition: true)
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !2201, file: !2340, line: 1914, type: !2438, isLocal: true, isDefinition: true)
!2466 = !DIGlobalVariableExpression(var: !2467, expr: !DIExpression())
!2467 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !2201, file: !2340, line: 1914, type: !2381, isLocal: true, isDefinition: true)
!2468 = !DIGlobalVariableExpression(var: !2469, expr: !DIExpression())
!2469 = distinct !DIGlobalVariable(name: "pclken_3", scope: !2201, file: !2340, line: 1914, type: !2425, isLocal: true, isDefinition: true)
!2470 = !DIGlobalVariableExpression(var: !2471, expr: !DIExpression())
!2471 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !2201, file: !2340, line: 1914, type: !2402, isLocal: true, isDefinition: true)
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !2201, file: !2340, line: 1914, type: !2430, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !2201, file: !2340, line: 1914, type: !2433, isLocal: true, isDefinition: true)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !2201, file: !2340, line: 1914, type: !2438, isLocal: true, isDefinition: true)
!2478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !2480)
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2479, file: !788, line: 17, baseType: !336, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2479, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2485, file: !2563, line: 65, type: !813, isLocal: true, isDefinition: true)
!2485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2486, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2487, retainedTypes: !2488, globals: !2560, splitDebugInlining: false, nameTableKind: None)
!2486 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!2487 = !{!1456}
!2488 = !{!104, !2489, !330, !164, !108, !2497, !2528}
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1028, line: 770, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 764, size: 128, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2491, file: !1028, line: 766, baseType: !813, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2491, file: !1028, line: 767, baseType: !813, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2491, file: !1028, line: 768, baseType: !813, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2491, file: !1028, line: 769, baseType: !1032, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1028, line: 426, baseType: !2499)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 411, size: 28704, elements: !2500)
!2500 = !{!2501, !2503, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2518, !2523, !2527}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2499, file: !1028, line: 413, baseType: !2502, size: 256)
!2502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 256, elements: !2342)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2499, file: !1028, line: 414, baseType: !2504, size: 768, offset: 256)
!2504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !2505)
!2505 = !{!2506}
!2506 = !DISubrange(count: 24)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2499, file: !1028, line: 415, baseType: !2502, size: 256, offset: 1024)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2499, file: !1028, line: 416, baseType: !2504, size: 768, offset: 1280)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2499, file: !1028, line: 417, baseType: !2502, size: 256, offset: 2048)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2499, file: !1028, line: 418, baseType: !2504, size: 768, offset: 2304)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2499, file: !1028, line: 419, baseType: !2502, size: 256, offset: 3072)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2499, file: !1028, line: 420, baseType: !2504, size: 768, offset: 3328)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2499, file: !1028, line: 421, baseType: !2502, size: 256, offset: 4096)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2499, file: !1028, line: 422, baseType: !2515, size: 1792, offset: 4352)
!2515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !2516)
!2516 = !{!2517}
!2517 = !DISubrange(count: 56)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2499, file: !1028, line: 423, baseType: !2519, size: 1920, offset: 6144)
!2519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2520, size: 1920, elements: !2521)
!2520 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!2521 = !{!2522}
!2522 = !DISubrange(count: 240)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2499, file: !1028, line: 424, baseType: !2524, size: 20608, offset: 8064)
!2524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !2525)
!2525 = !{!2526}
!2526 = !DISubrange(count: 644)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2499, file: !1028, line: 425, baseType: !813, size: 32, offset: 28672)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !2530)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535, !2536, !2537, !2538, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2551, !2552, !2553, !2555, !2557, !2559}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2530, file: !1028, line: 447, baseType: !1032, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2530, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2530, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2530, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2530, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2530, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2530, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2520, size: 96, elements: !2540)
!2540 = !{!2541}
!2541 = !DISubrange(count: 12)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2530, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2530, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2530, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2530, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2530, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2530, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2530, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2530, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!2550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 64, elements: !212)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2530, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2530, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2530, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 128, elements: !1568)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2530, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 160, elements: !2069)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2530, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!2558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !2069)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2530, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!2560 = !{!2561, !2587, !2592, !2594, !2596, !2483}
!2561 = !DIGlobalVariableExpression(var: !2562, expr: !DIExpression())
!2562 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2485, file: !2563, line: 285, type: !2564, isLocal: true, isDefinition: true, align: 32)
!2563 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2565)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !2566)
!2566 = !{!2567, !2586}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2565, file: !824, line: 60, baseType: !2568, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 32)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!103, !2571}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !2574)
!2574 = !{!2575, !2576, !2577, !2578, !2584, !2585}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2573, file: !833, line: 380, baseType: !336, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2573, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2573, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2573, file: !833, line: 386, baseType: !2579, size: 32, offset: 96)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !2581)
!2581 = !{!2582, !2583}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2580, file: !833, line: 359, baseType: !164, size: 8)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2580, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2573, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2573, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2565, file: !824, line: 65, baseType: !2571, size: 32, offset: 32)
!2587 = !DIGlobalVariableExpression(var: !2588, expr: !DIExpression())
!2588 = distinct !DIGlobalVariable(name: "lock", scope: !2485, file: !2563, line: 34, type: !2589, isLocal: true, isDefinition: true)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2590)
!2590 = !{!2591}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2589, file: !149, line: 52, baseType: !22, size: 32)
!2592 = !DIGlobalVariableExpression(var: !2593, expr: !DIExpression())
!2593 = distinct !DIGlobalVariable(name: "last_load", scope: !2485, file: !2563, line: 36, type: !108, isLocal: true, isDefinition: true)
!2594 = !DIGlobalVariableExpression(var: !2595, expr: !DIExpression())
!2595 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2485, file: !2563, line: 48, type: !108, isLocal: true, isDefinition: true)
!2596 = !DIGlobalVariableExpression(var: !2597, expr: !DIExpression())
!2597 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2485, file: !2563, line: 54, type: !108, isLocal: true, isDefinition: true)
!2598 = !DIGlobalVariableExpression(var: !2599, expr: !DIExpression())
!2599 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2600, file: !2682, line: 22, type: !2684, isLocal: true, isDefinition: true)
!2600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2601, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2602, retainedTypes: !2603, globals: !2679, splitDebugInlining: false, nameTableKind: None)
!2601 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!2602 = !{!1900, !1906}
!2603 = !{!2604, !2668, !2673, !1953, !1906, !1900, !2678, !102}
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2606)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1901, line: 523, size: 288, elements: !2607)
!2607 = !{!2608, !2627, !2631, !2635, !2639, !2640, !2641, !2645, !2664}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2606, file: !1901, line: 524, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!103, !2612, !1941, !1942}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2614)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !2615)
!2615 = !{!2616, !2617, !2618, !2619, !2625, !2626}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2614, file: !833, line: 380, baseType: !336, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2614, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2614, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2614, file: !833, line: 386, baseType: !2620, size: 32, offset: 96)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !2622)
!2622 = !{!2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2621, file: !833, line: 359, baseType: !164, size: 8)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2621, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2614, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2614, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2606, file: !1901, line: 530, baseType: !2628, size: 32, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!103, !2612, !1947}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2606, file: !1901, line: 532, baseType: !2632, size: 32, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 32)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!103, !2612, !1953, !1948}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2606, file: !1901, line: 535, baseType: !2636, size: 32, offset: 96)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 32)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!103, !2612, !1953}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2606, file: !1901, line: 537, baseType: !2636, size: 32, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2606, file: !1901, line: 539, baseType: !2636, size: 32, offset: 160)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2606, file: !1901, line: 541, baseType: !2642, size: 32, offset: 192)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!103, !2612, !1941, !1900, !1906}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2606, file: !1901, line: 544, baseType: !2646, size: 32, offset: 224)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 32)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!103, !2612, !2649, !119}
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1901, line: 478, size: 96, elements: !2651)
!2651 = !{!2652, !2658, !2663}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2650, file: !1901, line: 482, baseType: !2653, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !289, line: 33, baseType: !2654)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !289, line: 29, size: 32, elements: !2655)
!2655 = !{!2656}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2654, file: !289, line: 30, baseType: !2657, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2650, file: !1901, line: 485, baseType: !2659, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1901, line: 464, baseType: !2660)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 32)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{null, !2612, !2649, !1953}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2650, file: !1901, line: 493, baseType: !1953, size: 32, offset: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2606, file: !1901, line: 547, baseType: !2665, size: 32, offset: 256)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 32)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!108, !2612}
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1901, line: 428, size: 32, elements: !2671)
!2671 = !{!2672}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2670, file: !1901, line: 434, baseType: !1953, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1901, line: 441, size: 32, elements: !2676)
!2676 = !{!2677}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2675, file: !1901, line: 447, baseType: !1953, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 32)
!2679 = !{!2680, !2598}
!2680 = !DIGlobalVariableExpression(var: !2681, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2681 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2600, file: !2682, line: 37, type: !2683, isLocal: true, isDefinition: true)
!2682 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!2684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2685, size: 352, elements: !2686)
!2685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2612)
!2686 = !{!2687}
!2687 = !DISubrange(count: 11)
!2688 = !DIGlobalVariableExpression(var: !2689, expr: !DIExpression())
!2689 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2690, file: !2734, line: 139, type: !2739, isLocal: false, isDefinition: true)
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2692, globals: !2731, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!2692 = !{!2693}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 586, baseType: !2695)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 550, size: 1216, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2695, file: !809, line: 552, baseType: !813, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2695, file: !809, line: 553, baseType: !813, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2695, file: !809, line: 554, baseType: !813, size: 32, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2695, file: !809, line: 555, baseType: !813, size: 32, offset: 96)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2695, file: !809, line: 556, baseType: !813, size: 32, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2695, file: !809, line: 557, baseType: !813, size: 32, offset: 160)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2695, file: !809, line: 558, baseType: !813, size: 32, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2695, file: !809, line: 559, baseType: !108, size: 32, offset: 224)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2695, file: !809, line: 560, baseType: !813, size: 32, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2695, file: !809, line: 561, baseType: !813, size: 32, offset: 288)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2695, file: !809, line: 562, baseType: !1723, size: 64, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2695, file: !809, line: 563, baseType: !813, size: 32, offset: 384)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2695, file: !809, line: 564, baseType: !813, size: 32, offset: 416)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2695, file: !809, line: 565, baseType: !813, size: 32, offset: 448)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2695, file: !809, line: 566, baseType: !108, size: 32, offset: 480)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2695, file: !809, line: 567, baseType: !813, size: 32, offset: 512)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2695, file: !809, line: 568, baseType: !813, size: 32, offset: 544)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2695, file: !809, line: 569, baseType: !1723, size: 64, offset: 576)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2695, file: !809, line: 570, baseType: !813, size: 32, offset: 640)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2695, file: !809, line: 571, baseType: !813, size: 32, offset: 672)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2695, file: !809, line: 572, baseType: !813, size: 32, offset: 704)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2695, file: !809, line: 573, baseType: !108, size: 32, offset: 736)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2695, file: !809, line: 574, baseType: !813, size: 32, offset: 768)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2695, file: !809, line: 575, baseType: !813, size: 32, offset: 800)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2695, file: !809, line: 576, baseType: !1723, size: 64, offset: 832)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2695, file: !809, line: 577, baseType: !813, size: 32, offset: 896)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2695, file: !809, line: 578, baseType: !813, size: 32, offset: 928)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2695, file: !809, line: 579, baseType: !1723, size: 64, offset: 960)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2695, file: !809, line: 580, baseType: !813, size: 32, offset: 1024)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2695, file: !809, line: 581, baseType: !813, size: 32, offset: 1056)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2695, file: !809, line: 582, baseType: !813, size: 32, offset: 1088)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2695, file: !809, line: 583, baseType: !813, size: 32, offset: 1120)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2695, file: !809, line: 584, baseType: !813, size: 32, offset: 1152)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2695, file: !809, line: 585, baseType: !813, size: 32, offset: 1184)
!2731 = !{!2732, !2735, !2688}
!2732 = !DIGlobalVariableExpression(var: !2733, expr: !DIExpression())
!2733 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2690, file: !2734, line: 137, type: !108, isLocal: false, isDefinition: true)
!2734 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2735 = !DIGlobalVariableExpression(var: !2736, expr: !DIExpression())
!2736 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2690, file: !2734, line: 138, type: !2737, isLocal: false, isDefinition: true)
!2737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2738, size: 128, elements: !345)
!2738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!2739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2738, size: 64, elements: !2342)
!2740 = !DIGlobalVariableExpression(var: !2741, expr: !DIExpression())
!2741 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2742, file: !2745, line: 23, type: !2746, isLocal: false, isDefinition: true)
!2742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2743, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, globals: !2744, splitDebugInlining: false, nameTableKind: None)
!2743 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!2744 = !{!2740}
!2745 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!2747 = !DIGlobalVariableExpression(var: !2748, expr: !DIExpression())
!2748 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2749, file: !2753, line: 37, type: !3009, isLocal: false, isDefinition: true)
!2749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2750, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2751, retainedTypes: !2760, globals: !2833, splitDebugInlining: false, nameTableKind: None)
!2750 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!2751 = !{!2752, !30, !1456}
!2752 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2753, line: 63, baseType: !32, size: 32, elements: !2754)
!2753 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2754 = !{!2755, !2756, !2757, !2758, !2759}
!2755 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2756 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2757 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2758 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2759 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2760 = !{!153, !102, !103, !2761, !157, !108, !2791, !330, !164, !2816}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2764, line: 51, size: 64, elements: !2765)
!2764 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2765 = !{!2766, !2786}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2763, file: !2764, line: 52, baseType: !2767, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2764, line: 38, baseType: !2768)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 32)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!103, !2771, !783, !177}
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2773)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778, !2784, !2785}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2773, file: !833, line: 380, baseType: !336, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2773, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2773, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2773, file: !833, line: 386, baseType: !2779, size: 32, offset: 96)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 32)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !2781)
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2780, file: !833, line: 359, baseType: !164, size: 8)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2780, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2773, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2773, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2763, file: !2764, line: 53, baseType: !2787, size: 32, offset: 32)
!2787 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2764, line: 47, baseType: !2788)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!103, !2771, !783, !177, !108}
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !2793)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2793, file: !1028, line: 447, baseType: !1032, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2793, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2793, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2793, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2793, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2793, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2793, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2793, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2793, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2793, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2793, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2793, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2793, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2793, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2793, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2793, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2793, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2793, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2793, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2793, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2793, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1028, line: 426, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 411, size: 28704, elements: !2819)
!2819 = !{!2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2818, file: !1028, line: 413, baseType: !2502, size: 256)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2818, file: !1028, line: 414, baseType: !2504, size: 768, offset: 256)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2818, file: !1028, line: 415, baseType: !2502, size: 256, offset: 1024)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2818, file: !1028, line: 416, baseType: !2504, size: 768, offset: 1280)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2818, file: !1028, line: 417, baseType: !2502, size: 256, offset: 2048)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2818, file: !1028, line: 418, baseType: !2504, size: 768, offset: 2304)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2818, file: !1028, line: 419, baseType: !2502, size: 256, offset: 3072)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2818, file: !1028, line: 420, baseType: !2504, size: 768, offset: 3328)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2818, file: !1028, line: 421, baseType: !2502, size: 256, offset: 4096)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2818, file: !1028, line: 422, baseType: !2515, size: 1792, offset: 4352)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2818, file: !1028, line: 423, baseType: !2519, size: 1920, offset: 6144)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2818, file: !1028, line: 424, baseType: !2524, size: 20608, offset: 8064)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2818, file: !1028, line: 425, baseType: !813, size: 32, offset: 28672)
!2833 = !{!2747, !2834, !2959, !2967, !2969, !2972, !2977, !2979, !2984}
!2834 = !DIGlobalVariableExpression(var: !2835, expr: !DIExpression())
!2835 = distinct !DIGlobalVariable(name: "_kernel", scope: !2749, file: !2753, line: 40, type: !2836, isLocal: false, isDefinition: true)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !128, line: 158, size: 288, elements: !2837)
!2837 = !{!2838, !2954}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2836, file: !128, line: 159, baseType: !2839, size: 192)
!2839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2840, size: 192, elements: !761)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !128, line: 100, size: 192, elements: !2841)
!2841 = !{!2842, !2843, !2844, !2947, !2948, !2949, !2950}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2840, file: !128, line: 102, baseType: !108, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2840, file: !128, line: 105, baseType: !157, size: 32, offset: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2840, file: !128, line: 108, baseType: !2845, size: 32, offset: 64)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 32)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !2847)
!2847 = !{!2848, !2906, !2918, !2919, !2920, !2921, !2927, !2942}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2846, file: !195, line: 247, baseType: !2849, size: 384)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !2850)
!2850 = !{!2851, !2875, !2882, !2883, !2884, !2893, !2894, !2895}
!2851 = !DIDerivedType(tag: DW_TAG_member, scope: !2849, file: !195, line: 60, baseType: !2852, size: 64)
!2852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2849, file: !195, line: 60, size: 64, elements: !2853)
!2853 = !{!2854, !2869}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2852, file: !195, line: 61, baseType: !2855, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2856)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2857)
!2857 = !{!2858, !2864}
!2858 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !133, line: 38, baseType: !2859, size: 32)
!2859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2856, file: !133, line: 38, size: 32, elements: !2860)
!2860 = !{!2861, !2863}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2859, file: !133, line: 39, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2859, file: !133, line: 40, baseType: !2862, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, scope: !2856, file: !133, line: 42, baseType: !2865, size: 32, offset: 32)
!2865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2856, file: !133, line: 42, size: 32, elements: !2866)
!2866 = !{!2867, !2868}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2865, file: !133, line: 43, baseType: !2862, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2865, file: !133, line: 44, baseType: !2862, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2852, file: !195, line: 62, baseType: !2870, size: 64)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !2871)
!2871 = !{!2872}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2870, file: !207, line: 50, baseType: !2873, size: 64)
!2873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2874, size: 64, elements: !212)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2849, file: !195, line: 68, baseType: !2876, size: 32, offset: 64)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !2878)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !2879)
!2879 = !{!2880}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2878, file: !128, line: 232, baseType: !2881, size: 64)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2856)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2849, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2849, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!2884 = !DIDerivedType(tag: DW_TAG_member, scope: !2849, file: !195, line: 90, baseType: !2885, size: 16, offset: 112)
!2885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2849, file: !195, line: 90, size: 16, elements: !2886)
!2886 = !{!2887, !2892}
!2887 = !DIDerivedType(tag: DW_TAG_member, scope: !2885, file: !195, line: 91, baseType: !2888, size: 16)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2885, file: !195, line: 91, size: 16, elements: !2889)
!2889 = !{!2890, !2891}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2888, file: !195, line: 96, baseType: !225, size: 8)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2888, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2885, file: !195, line: 100, baseType: !177, size: 16)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2849, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2849, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2849, file: !195, line: 131, baseType: !2896, size: 192, offset: 192)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !2897)
!2897 = !{!2898, !2899, !2905}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2896, file: !128, line: 245, baseType: !2855, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2896, file: !128, line: 246, baseType: !2900, size: 32, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !2901)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 32)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{null, !2904}
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2896, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2846, file: !195, line: 250, baseType: !2907, size: 288, offset: 384)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2907, file: !244, line: 26, baseType: !108, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2907, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2907, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2907, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2907, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2907, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2907, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2907, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2907, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2846, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2846, file: !195, line: 256, baseType: !2877, size: 64, offset: 704)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2846, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2846, file: !195, line: 300, baseType: !2922, size: 96, offset: 800)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !2923)
!2923 = !{!2924, !2925, !2926}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2922, file: !195, line: 153, baseType: !22, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2922, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2922, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2846, file: !195, line: 325, baseType: !2928, size: 32, offset: 896)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 32)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !2930)
!2930 = !{!2931, !2937, !2938}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2929, file: !124, line: 5074, baseType: !2932, size: 96)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !2933)
!2933 = !{!2934, !2935, !2936}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2932, file: !270, line: 57, baseType: !273, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2932, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2932, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2929, file: !124, line: 5075, baseType: !2877, size: 64, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2929, file: !124, line: 5076, baseType: !2939, size: 32, offset: 160)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2940)
!2940 = !{!2941}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2939, file: !149, line: 52, baseType: !22, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2846, file: !195, line: 343, baseType: !2943, size: 64, offset: 928)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !2944)
!2944 = !{!2945, !2946}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2943, file: !244, line: 63, baseType: !108, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2943, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2840, file: !128, line: 111, baseType: !2845, size: 32, offset: 96)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2840, file: !128, line: 124, baseType: !103, size: 32, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2840, file: !128, line: 127, baseType: !164, size: 8, offset: 160)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2840, file: !128, line: 153, baseType: !2951, offset: 168)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2952, line: 33, elements: !2953)
!2952 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2953 = !{}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2836, file: !128, line: 170, baseType: !2955, size: 96, offset: 192)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !128, line: 83, size: 96, elements: !2956)
!2956 = !{!2957, !2958}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2955, file: !128, line: 86, baseType: !2845, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2955, file: !128, line: 90, baseType: !2881, size: 64, offset: 32)
!2959 = !DIGlobalVariableExpression(var: !2960, expr: !DIExpression())
!2960 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2749, file: !2753, line: 43, type: !2961, isLocal: false, isDefinition: true, align: 512)
!2961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2962, size: 8704, elements: !2965)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !2963)
!2963 = !{!2964}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2962, file: !315, line: 48, baseType: !158, size: 8)
!2965 = !{!2966}
!2966 = !DISubrange(count: 1088)
!2967 = !DIGlobalVariableExpression(var: !2968, expr: !DIExpression())
!2968 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2749, file: !2753, line: 44, type: !2846, isLocal: false, isDefinition: true)
!2969 = !DIGlobalVariableExpression(var: !2970, expr: !DIExpression())
!2970 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2749, file: !2753, line: 48, type: !2971, isLocal: false, isDefinition: true)
!2971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2846, size: 1024, elements: !761)
!2972 = !DIGlobalVariableExpression(var: !2973, expr: !DIExpression())
!2973 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2749, file: !2753, line: 86, type: !2974, isLocal: false, isDefinition: true, align: 512)
!2974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2962, size: 16896, elements: !2975)
!2975 = !{!762, !2976}
!2976 = !DISubrange(count: 2112)
!2977 = !DIGlobalVariableExpression(var: !2978, expr: !DIExpression())
!2978 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2749, file: !2753, line: 217, type: !119, isLocal: false, isDefinition: true)
!2979 = !DIGlobalVariableExpression(var: !2980, expr: !DIExpression())
!2980 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2749, file: !2753, line: 50, type: !2981, isLocal: true, isDefinition: true, align: 512)
!2981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2962, size: 3072, elements: !2982)
!2982 = !{!762, !2983}
!2983 = !DISubrange(count: 384)
!2984 = !DIGlobalVariableExpression(var: !2985, expr: !DIExpression())
!2985 = distinct !DIGlobalVariable(name: "levels", scope: !2986, file: !2753, line: 232, type: !3006, isLocal: true, isDefinition: true)
!2986 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2753, file: !2753, line: 230, type: !2987, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !2989)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{null, !2752}
!2989 = !{!2990, !2991, !3001, !3005}
!2990 = !DILocalVariable(name: "level", arg: 1, scope: !2986, file: !2753, line: 230, type: !2752)
!2991 = !DILocalVariable(name: "entry", scope: !2986, file: !2753, line: 244, type: !2992)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2994)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !2995)
!2995 = !{!2996, !3000}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2994, file: !824, line: 60, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!103, !2771}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2994, file: !824, line: 65, baseType: !2771, size: 32, offset: 32)
!3001 = !DILocalVariable(name: "dev", scope: !3002, file: !2753, line: 247, type: !2771)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !2753, line: 246, column: 64)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !2753, line: 246, column: 2)
!3004 = distinct !DILexicalBlock(scope: !2986, file: !2753, line: 246, column: 2)
!3005 = !DILocalVariable(name: "rc", scope: !3002, file: !2753, line: 248, type: !103)
!3006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2992, size: 192, elements: !3007)
!3007 = !{!3008}
!3008 = !DISubrange(count: 6)
!3009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3010)
!3010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !788, line: 16, size: 64, elements: !3011)
!3011 = !{!3012, !3013}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3010, file: !788, line: 17, baseType: !336, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3010, file: !788, line: 18, baseType: !164, size: 8, offset: 32)
!3014 = !DIGlobalVariableExpression(var: !3015, expr: !DIExpression())
!3015 = distinct !DIGlobalVariable(name: "__init_init_mem_slab_module", scope: !3016, file: !3036, line: 73, type: !3037, isLocal: true, isDefinition: true, align: 32)
!3016 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3017, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3018, globals: !3035, splitDebugInlining: false, nameTableKind: None)
!3017 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mem_slab.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3018 = !{!102, !782, !3019, !103, !22, !3020}
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3022)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3023)
!3023 = !{!3024, !3030}
!3024 = !DIDerivedType(tag: DW_TAG_member, scope: !3022, file: !133, line: 38, baseType: !3025, size: 32)
!3025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3022, file: !133, line: 38, size: 32, elements: !3026)
!3026 = !{!3027, !3029}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3025, file: !133, line: 39, baseType: !3028, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3025, file: !133, line: 40, baseType: !3028, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, scope: !3022, file: !133, line: 42, baseType: !3031, size: 32, offset: 32)
!3031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3022, file: !133, line: 42, size: 32, elements: !3032)
!3032 = !{!3033, !3034}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3031, file: !133, line: 43, baseType: !3028, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3031, file: !133, line: 44, baseType: !3028, size: 32)
!3035 = !{!3014}
!3036 = !DIFile(filename: "zephyr/kernel/mem_slab.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3038)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !3039)
!3039 = !{!3040, !3047}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3038, file: !824, line: 60, baseType: !3041, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 32)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!103, !3044}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3046)
!3046 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !824, line: 48, flags: DIFlagFwdDecl)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3038, file: !824, line: 65, baseType: !3044, size: 32, offset: 32)
!3048 = !DIGlobalVariableExpression(var: !3049, expr: !DIExpression())
!3049 = distinct !DIGlobalVariable(name: "states_str", scope: !3050, file: !3051, line: 276, type: !3174, isLocal: true, isDefinition: true)
!3050 = distinct !DISubprogram(name: "k_thread_state_str", scope: !3051, file: !3051, line: 271, type: !3052, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !3165)
!3051 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3052 = !DISubroutineType(types: !3053)
!3053 = !{!336, !3054, !157, !153}
!3054 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !3055)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 32)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !3057)
!3057 = !{!3058, !3116, !3128, !3129, !3130, !3131, !3137, !3152}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3056, file: !195, line: 247, baseType: !3059, size: 384)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !3060)
!3060 = !{!3061, !3085, !3092, !3093, !3094, !3103, !3104, !3105}
!3061 = !DIDerivedType(tag: DW_TAG_member, scope: !3059, file: !195, line: 60, baseType: !3062, size: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3059, file: !195, line: 60, size: 64, elements: !3063)
!3063 = !{!3064, !3079}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3062, file: !195, line: 61, baseType: !3065, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3066)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3067)
!3067 = !{!3068, !3074}
!3068 = !DIDerivedType(tag: DW_TAG_member, scope: !3066, file: !133, line: 38, baseType: !3069, size: 32)
!3069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3066, file: !133, line: 38, size: 32, elements: !3070)
!3070 = !{!3071, !3073}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3069, file: !133, line: 39, baseType: !3072, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3069, file: !133, line: 40, baseType: !3072, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, scope: !3066, file: !133, line: 42, baseType: !3075, size: 32, offset: 32)
!3075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3066, file: !133, line: 42, size: 32, elements: !3076)
!3076 = !{!3077, !3078}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3075, file: !133, line: 43, baseType: !3072, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3075, file: !133, line: 44, baseType: !3072, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3062, file: !195, line: 62, baseType: !3080, size: 64)
!3080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3081)
!3081 = !{!3082}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3080, file: !207, line: 50, baseType: !3083, size: 64)
!3083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3084, size: 64, elements: !212)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3059, file: !195, line: 68, baseType: !3086, size: 32, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3088)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3089)
!3089 = !{!3090}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3088, file: !128, line: 232, baseType: !3091, size: 64)
!3091 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3066)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3059, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3059, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3094 = !DIDerivedType(tag: DW_TAG_member, scope: !3059, file: !195, line: 90, baseType: !3095, size: 16, offset: 112)
!3095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3059, file: !195, line: 90, size: 16, elements: !3096)
!3096 = !{!3097, !3102}
!3097 = !DIDerivedType(tag: DW_TAG_member, scope: !3095, file: !195, line: 91, baseType: !3098, size: 16)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3095, file: !195, line: 91, size: 16, elements: !3099)
!3099 = !{!3100, !3101}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3098, file: !195, line: 96, baseType: !225, size: 8)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3098, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3095, file: !195, line: 100, baseType: !177, size: 16)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3059, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3059, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3059, file: !195, line: 131, baseType: !3106, size: 192, offset: 192)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3107)
!3107 = !{!3108, !3109, !3115}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3106, file: !128, line: 245, baseType: !3065, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3106, file: !128, line: 246, baseType: !3110, size: 32, offset: 64)
!3110 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3111)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 32)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{null, !3114}
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3106, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3056, file: !195, line: 250, baseType: !3117, size: 288, offset: 384)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3118)
!3118 = !{!3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3117, file: !244, line: 26, baseType: !108, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3117, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3117, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3117, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3117, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3117, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3117, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3117, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3117, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3056, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3056, file: !195, line: 256, baseType: !3087, size: 64, offset: 704)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3056, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3056, file: !195, line: 300, baseType: !3132, size: 96, offset: 800)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !3133)
!3133 = !{!3134, !3135, !3136}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3132, file: !195, line: 153, baseType: !22, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3132, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3132, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3056, file: !195, line: 325, baseType: !3138, size: 32, offset: 896)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 32)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3140)
!3140 = !{!3141, !3147, !3148}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3139, file: !124, line: 5074, baseType: !3142, size: 96)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !3143)
!3143 = !{!3144, !3145, !3146}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3142, file: !270, line: 57, baseType: !273, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3142, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3142, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3139, file: !124, line: 5075, baseType: !3087, size: 64, offset: 96)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3139, file: !124, line: 5076, baseType: !3149, size: 32, offset: 160)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3150)
!3150 = !{!3151}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3149, file: !149, line: 52, baseType: !22, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3056, file: !195, line: 343, baseType: !3153, size: 64, offset: 928)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3154)
!3154 = !{!3155, !3156}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3153, file: !244, line: 63, baseType: !108, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3153, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3157 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3158, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3159, globals: !3161, splitDebugInlining: false, nameTableKind: None)
!3158 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3159 = !{!102, !336, !104, !164, !22, !103, !3160, !24, !153, !157, !108, !109}
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 32)
!3161 = !{!3048, !3162}
!3162 = !DIGlobalVariableExpression(var: !3163, expr: !DIExpression())
!3163 = distinct !DIGlobalVariable(name: "states_sz", scope: !3050, file: !3051, line: 279, type: !3164, isLocal: true, isDefinition: true)
!3164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2683, size: 256, elements: !2342)
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172}
!3166 = !DILocalVariable(name: "thread_id", arg: 1, scope: !3050, file: !3051, line: 271, type: !3054)
!3167 = !DILocalVariable(name: "buf", arg: 2, scope: !3050, file: !3051, line: 271, type: !157)
!3168 = !DILocalVariable(name: "buf_size", arg: 3, scope: !3050, file: !3051, line: 271, type: !153)
!3169 = !DILocalVariable(name: "off", scope: !3050, file: !3051, line: 273, type: !153)
!3170 = !DILocalVariable(name: "bit", scope: !3050, file: !3051, line: 274, type: !164)
!3171 = !DILocalVariable(name: "thread_state", scope: !3050, file: !3051, line: 275, type: !164)
!3172 = !DILocalVariable(name: "index", scope: !3173, file: !3051, line: 293, type: !164)
!3173 = distinct !DILexicalBlock(scope: !3050, file: !3051, line: 293, column: 2)
!3174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 256, elements: !2342)
!3175 = !DIGlobalVariableExpression(var: !3176, expr: !DIExpression())
!3176 = distinct !DIGlobalVariable(name: "lock", scope: !3177, file: !3284, line: 47, type: !3275, isLocal: true, isDefinition: true)
!3177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3179, globals: !3283, splitDebugInlining: false, nameTableKind: None)
!3178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3179 = !{!119, !102, !103, !3180, !3195}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3183)
!3183 = !{!3184, !3190}
!3184 = !DIDerivedType(tag: DW_TAG_member, scope: !3182, file: !133, line: 38, baseType: !3185, size: 32)
!3185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3182, file: !133, line: 38, size: 32, elements: !3186)
!3186 = !{!3187, !3189}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3185, file: !133, line: 39, baseType: !3188, size: 32)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3185, file: !133, line: 40, baseType: !3188, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, scope: !3182, file: !133, line: 42, baseType: !3191, size: 32, offset: 32)
!3191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3182, file: !133, line: 42, size: 32, elements: !3192)
!3192 = !{!3193, !3194}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3191, file: !133, line: 43, baseType: !3188, size: 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3191, file: !133, line: 44, baseType: !3188, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 32)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !3197)
!3197 = !{!3198, !3242, !3254, !3255, !3256, !3257, !3263, !3278}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3196, file: !195, line: 247, baseType: !3199, size: 384)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !3200)
!3200 = !{!3201, !3211, !3218, !3219, !3220, !3229, !3230, !3231}
!3201 = !DIDerivedType(tag: DW_TAG_member, scope: !3199, file: !195, line: 60, baseType: !3202, size: 64)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3199, file: !195, line: 60, size: 64, elements: !3203)
!3203 = !{!3204, !3205}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3202, file: !195, line: 61, baseType: !3181, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3202, file: !195, line: 62, baseType: !3206, size: 64)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3207)
!3207 = !{!3208}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3206, file: !207, line: 50, baseType: !3209, size: 64)
!3209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3210, size: 64, elements: !212)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3199, file: !195, line: 68, baseType: !3212, size: 32, offset: 64)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3214)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3215)
!3215 = !{!3216}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3214, file: !128, line: 232, baseType: !3217, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3182)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3199, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3199, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3220 = !DIDerivedType(tag: DW_TAG_member, scope: !3199, file: !195, line: 90, baseType: !3221, size: 16, offset: 112)
!3221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3199, file: !195, line: 90, size: 16, elements: !3222)
!3222 = !{!3223, !3228}
!3223 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !195, line: 91, baseType: !3224, size: 16)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3221, file: !195, line: 91, size: 16, elements: !3225)
!3225 = !{!3226, !3227}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3224, file: !195, line: 96, baseType: !225, size: 8)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3224, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3221, file: !195, line: 100, baseType: !177, size: 16)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3199, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3199, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3199, file: !195, line: 131, baseType: !3232, size: 192, offset: 192)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3233)
!3233 = !{!3234, !3235, !3241}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3232, file: !128, line: 245, baseType: !3181, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3232, file: !128, line: 246, baseType: !3236, size: 32, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3237)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 32)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{null, !3240}
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3232, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3196, file: !195, line: 250, baseType: !3243, size: 288, offset: 384)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3244)
!3244 = !{!3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3243, file: !244, line: 26, baseType: !108, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3243, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3243, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3243, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3243, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3243, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3243, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3243, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3243, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3196, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3196, file: !195, line: 256, baseType: !3213, size: 64, offset: 704)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3196, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3196, file: !195, line: 300, baseType: !3258, size: 96, offset: 800)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !3259)
!3259 = !{!3260, !3261, !3262}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3258, file: !195, line: 153, baseType: !22, size: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3258, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3258, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3196, file: !195, line: 325, baseType: !3264, size: 32, offset: 896)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 32)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3266)
!3266 = !{!3267, !3273, !3274}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3265, file: !124, line: 5074, baseType: !3268, size: 96)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !3269)
!3269 = !{!3270, !3271, !3272}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3268, file: !270, line: 57, baseType: !273, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3268, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3268, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3265, file: !124, line: 5075, baseType: !3213, size: 64, offset: 96)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3265, file: !124, line: 5076, baseType: !3275, size: 32, offset: 160)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3276)
!3276 = !{!3277}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3275, file: !149, line: 52, baseType: !22, size: 32)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3196, file: !195, line: 343, baseType: !3279, size: 64, offset: 928)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3280)
!3280 = !{!3281, !3282}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3279, file: !244, line: 63, baseType: !108, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3279, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3283 = !{!3175}
!3284 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3285 = !DIGlobalVariableExpression(var: !3286, expr: !DIExpression())
!3286 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !3287, file: !3397, line: 56, type: !3384, isLocal: false, isDefinition: true)
!3287 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3288, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3289, globals: !3394, splitDebugInlining: false, nameTableKind: None)
!3288 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3289 = !{!3290, !157, !102, !3392, !783, !104, !330, !103, !108, !109, !3393}
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 32)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !3292)
!3292 = !{!3293, !3351, !3363, !3364, !3365, !3366, !3372, !3387}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3291, file: !195, line: 247, baseType: !3294, size: 384)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !3295)
!3295 = !{!3296, !3320, !3327, !3328, !3329, !3338, !3339, !3340}
!3296 = !DIDerivedType(tag: DW_TAG_member, scope: !3294, file: !195, line: 60, baseType: !3297, size: 64)
!3297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3294, file: !195, line: 60, size: 64, elements: !3298)
!3298 = !{!3299, !3314}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3297, file: !195, line: 61, baseType: !3300, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3301)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3302)
!3302 = !{!3303, !3309}
!3303 = !DIDerivedType(tag: DW_TAG_member, scope: !3301, file: !133, line: 38, baseType: !3304, size: 32)
!3304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3301, file: !133, line: 38, size: 32, elements: !3305)
!3305 = !{!3306, !3308}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3304, file: !133, line: 39, baseType: !3307, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3304, file: !133, line: 40, baseType: !3307, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, scope: !3301, file: !133, line: 42, baseType: !3310, size: 32, offset: 32)
!3310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3301, file: !133, line: 42, size: 32, elements: !3311)
!3311 = !{!3312, !3313}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3310, file: !133, line: 43, baseType: !3307, size: 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3310, file: !133, line: 44, baseType: !3307, size: 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3297, file: !195, line: 62, baseType: !3315, size: 64)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3316)
!3316 = !{!3317}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3315, file: !207, line: 50, baseType: !3318, size: 64)
!3318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3319, size: 64, elements: !212)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3294, file: !195, line: 68, baseType: !3321, size: 32, offset: 64)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 32)
!3322 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3323)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3324)
!3324 = !{!3325}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3323, file: !128, line: 232, baseType: !3326, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3301)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3294, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3294, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3329 = !DIDerivedType(tag: DW_TAG_member, scope: !3294, file: !195, line: 90, baseType: !3330, size: 16, offset: 112)
!3330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3294, file: !195, line: 90, size: 16, elements: !3331)
!3331 = !{!3332, !3337}
!3332 = !DIDerivedType(tag: DW_TAG_member, scope: !3330, file: !195, line: 91, baseType: !3333, size: 16)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3330, file: !195, line: 91, size: 16, elements: !3334)
!3334 = !{!3335, !3336}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3333, file: !195, line: 96, baseType: !225, size: 8)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3333, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3330, file: !195, line: 100, baseType: !177, size: 16)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3294, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3294, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3294, file: !195, line: 131, baseType: !3341, size: 192, offset: 192)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3342)
!3342 = !{!3343, !3344, !3350}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3341, file: !128, line: 245, baseType: !3300, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3341, file: !128, line: 246, baseType: !3345, size: 32, offset: 64)
!3345 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3346)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 32)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{null, !3349}
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 32)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3341, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3291, file: !195, line: 250, baseType: !3352, size: 288, offset: 384)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3353)
!3353 = !{!3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3352, file: !244, line: 26, baseType: !108, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3352, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3352, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3352, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3352, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3352, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3352, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3352, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3352, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3291, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3291, file: !195, line: 256, baseType: !3322, size: 64, offset: 704)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3291, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3291, file: !195, line: 300, baseType: !3367, size: 96, offset: 800)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !3368)
!3368 = !{!3369, !3370, !3371}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3367, file: !195, line: 153, baseType: !22, size: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3367, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3367, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3291, file: !195, line: 325, baseType: !3373, size: 32, offset: 896)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 32)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3375)
!3375 = !{!3376, !3382, !3383}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3374, file: !124, line: 5074, baseType: !3377, size: 96)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !3378)
!3378 = !{!3379, !3380, !3381}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3377, file: !270, line: 57, baseType: !273, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3377, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3377, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3374, file: !124, line: 5075, baseType: !3322, size: 64, offset: 96)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3374, file: !124, line: 5076, baseType: !3384, size: 32, offset: 160)
!3384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3385)
!3385 = !{!3386}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3384, file: !149, line: 52, baseType: !22, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3291, file: !195, line: 343, baseType: !3388, size: 64, offset: 928)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3389)
!3389 = !{!3390, !3391}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3388, file: !244, line: 63, baseType: !108, size: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3388, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 32)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 32)
!3394 = !{!3285, !3395, !3398, !3400}
!3395 = !DIGlobalVariableExpression(var: !3396, expr: !DIExpression())
!3396 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !3287, file: !3397, line: 404, type: !103, isLocal: true, isDefinition: true)
!3397 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3398 = !DIGlobalVariableExpression(var: !3399, expr: !DIExpression())
!3399 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !3287, file: !3397, line: 405, type: !103, isLocal: true, isDefinition: true)
!3400 = !DIGlobalVariableExpression(var: !3401, expr: !DIExpression())
!3401 = distinct !DIGlobalVariable(name: "pending_current", scope: !3287, file: !3397, line: 425, type: !3290, isLocal: true, isDefinition: true)
!3402 = !DIGlobalVariableExpression(var: !3403, expr: !DIExpression())
!3403 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3404, file: !3434, line: 19, type: !3440, isLocal: true, isDefinition: true)
!3404 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3405, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3406, globals: !3431, splitDebugInlining: false, nameTableKind: None)
!3405 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3406 = !{!104, !102, !330, !108, !109, !103, !3407, !157, !106}
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 32)
!3408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3409)
!3409 = !{!3410, !3425, !3430}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3408, file: !128, line: 245, baseType: !3411, size: 64)
!3411 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3412)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3413)
!3413 = !{!3414, !3420}
!3414 = !DIDerivedType(tag: DW_TAG_member, scope: !3412, file: !133, line: 38, baseType: !3415, size: 32)
!3415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3412, file: !133, line: 38, size: 32, elements: !3416)
!3416 = !{!3417, !3419}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3415, file: !133, line: 39, baseType: !3418, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 32)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3415, file: !133, line: 40, baseType: !3418, size: 32)
!3420 = !DIDerivedType(tag: DW_TAG_member, scope: !3412, file: !133, line: 42, baseType: !3421, size: 32, offset: 32)
!3421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3412, file: !133, line: 42, size: 32, elements: !3422)
!3422 = !{!3423, !3424}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3421, file: !133, line: 43, baseType: !3418, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3421, file: !133, line: 44, baseType: !3418, size: 32)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3408, file: !128, line: 246, baseType: !3426, size: 32, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3427)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 32)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{null, !3407}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3408, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3431 = !{!3432, !3402, !3435, !3437}
!3432 = !DIGlobalVariableExpression(var: !3433, expr: !DIExpression())
!3433 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3404, file: !3434, line: 15, type: !109, isLocal: true, isDefinition: true)
!3434 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3435 = !DIGlobalVariableExpression(var: !3436, expr: !DIExpression())
!3436 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3404, file: !3434, line: 25, type: !103, isLocal: true, isDefinition: true)
!3437 = !DIGlobalVariableExpression(var: !3438, expr: !DIExpression())
!3438 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3404, file: !3434, line: 17, type: !3439, isLocal: true, isDefinition: true)
!3439 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3412)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3441)
!3441 = !{!3442}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3440, file: !149, line: 52, baseType: !22, size: 32)
!3443 = !DIGlobalVariableExpression(var: !3444, expr: !DIExpression())
!3444 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !3445, file: !3464, line: 55, type: !3465, isLocal: true, isDefinition: true, align: 32)
!3445 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3446, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3447, globals: !3463, splitDebugInlining: false, nameTableKind: None)
!3446 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3447 = !{!102, !104, !103, !3448}
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3450)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3451)
!3451 = !{!3452, !3458}
!3452 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !133, line: 38, baseType: !3453, size: 32)
!3453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !133, line: 38, size: 32, elements: !3454)
!3454 = !{!3455, !3457}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3453, file: !133, line: 39, baseType: !3456, size: 32)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3453, file: !133, line: 40, baseType: !3456, size: 32)
!3458 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !133, line: 42, baseType: !3459, size: 32, offset: 32)
!3459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !133, line: 42, size: 32, elements: !3460)
!3460 = !{!3461, !3462}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3459, file: !133, line: 43, baseType: !3456, size: 32)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3459, file: !133, line: 44, baseType: !3456, size: 32)
!3463 = !{!3443}
!3464 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3466)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !824, line: 51, size: 64, elements: !3467)
!3467 = !{!3468, !3469}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3466, file: !824, line: 60, baseType: !3041, size: 32)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3466, file: !824, line: 65, baseType: !3044, size: 32, offset: 32)
!3470 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3471, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3471 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3472 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3473, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3473 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3474 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3475, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3476, retainedTypes: !3484, splitDebugInlining: false, nameTableKind: None)
!3475 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3476 = !{!30, !3477}
!3477 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !3478, line: 54, baseType: !32, size: 32, elements: !3479)
!3478 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3479 = !{!3480, !3481, !3482, !3483}
!3480 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!3481 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!3482 = !DIEnumerator(name: "FREE_PREV", value: 2)
!3483 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!3484 = !{!102, !153, !783, !24, !3485, !22, !3491, !103, !1753, !3506}
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !3478, line: 58, baseType: !3487)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3478, line: 58, size: 64, elements: !3488)
!3488 = !{!3489}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3487, file: !3478, line: 58, baseType: !3490, size: 64)
!3490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 64, elements: !2342)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 32)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !3478, line: 68, size: 128, elements: !3493)
!3493 = !{!3494, !3497, !3498, !3499}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3492, file: !3478, line: 69, baseType: !3495, size: 64)
!3495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3496, size: 64, elements: !212)
!3496 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !3478, line: 61, baseType: !108)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3492, file: !3478, line: 70, baseType: !3496, size: 32, offset: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3492, file: !3478, line: 71, baseType: !108, size: 32, offset: 96)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3492, file: !3478, line: 77, baseType: !3500, offset: 128)
!3500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3501, elements: !3504)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !3478, line: 64, size: 32, elements: !3502)
!3502 = !{!3503}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3501, file: !3478, line: 65, baseType: !3496, size: 32)
!3504 = !{!3505}
!3505 = !DISubrange(count: 0)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!3507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3509, retainedTypes: !3529, splitDebugInlining: false, nameTableKind: None)
!3508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3509 = !{!3510, !3518}
!3510 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3511, line: 69, baseType: !32, size: 32, elements: !3512)
!3511 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3512 = !{!3513, !3514, !3515, !3516, !3517}
!3513 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3514 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3515 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3516 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3517 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3518 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3511, line: 56, baseType: !32, size: 32, elements: !3519)
!3519 = !{!3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528}
!3520 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3521 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3522 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3523 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3524 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3525 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3526 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3527 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3528 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3529 = !{!103, !3510, !3518, !3530, !226, !850, !3532, !3533, !165, !178, !336, !153, !102, !22, !32, !778, !3535, !3536, !780, !779, !107, !781, !3531, !3537, !3538, !3539, !3540}
!3530 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3511, line: 31, baseType: !3531)
!3531 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !154, line: 329, baseType: !32)
!3533 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3511, line: 32, baseType: !3534)
!3534 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 32)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!3539 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !154, line: 145, baseType: !103)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 32)
!3541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3542, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3542 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3547, splitDebugInlining: false, nameTableKind: None)
!3546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3547 = !{!336, !165, !103, !32}
!3548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3550, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3550 = !{!3551, !30}
!3551 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3552, line: 27, baseType: !32, size: 32, elements: !3553)
!3552 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3553 = !{!3554, !3555, !3556, !3557, !3558}
!3554 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3555 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3556 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3557 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3558 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3561, retainedTypes: !3562, splitDebugInlining: false, nameTableKind: None)
!3560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3561 = !{!1456, !3551, !30}
!3562 = !{!1651, !3563, !102, !103, !330, !108, !164, !3580}
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 32)
!3564 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1028, line: 426, baseType: !3565)
!3565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 411, size: 28704, elements: !3566)
!3566 = !{!3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3565, file: !1028, line: 413, baseType: !2502, size: 256)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3565, file: !1028, line: 414, baseType: !2504, size: 768, offset: 256)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3565, file: !1028, line: 415, baseType: !2502, size: 256, offset: 1024)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3565, file: !1028, line: 416, baseType: !2504, size: 768, offset: 1280)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3565, file: !1028, line: 417, baseType: !2502, size: 256, offset: 2048)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3565, file: !1028, line: 418, baseType: !2504, size: 768, offset: 2304)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3565, file: !1028, line: 419, baseType: !2502, size: 256, offset: 3072)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3565, file: !1028, line: 420, baseType: !2504, size: 768, offset: 3328)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3565, file: !1028, line: 421, baseType: !2502, size: 256, offset: 4096)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3565, file: !1028, line: 422, baseType: !2515, size: 1792, offset: 4352)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3565, file: !1028, line: 423, baseType: !2519, size: 1920, offset: 6144)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3565, file: !1028, line: 424, baseType: !2524, size: 20608, offset: 8064)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3565, file: !1028, line: 425, baseType: !813, size: 32, offset: 28672)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 32)
!3581 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !3582)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !3583)
!3583 = !{!3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3582, file: !1028, line: 447, baseType: !1032, size: 32)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3582, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3582, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3582, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3582, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3582, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3582, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3582, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3582, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3582, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3582, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3582, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3582, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3582, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3582, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3582, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3582, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3582, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3582, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3582, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3582, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!3605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!3606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3609, splitDebugInlining: false, nameTableKind: None)
!3608 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3609 = !{!102, !103, !22, !3610}
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !3612)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3612, file: !1028, line: 447, baseType: !1032, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3612, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3612, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3612, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3612, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3612, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3612, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3612, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3612, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3612, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3612, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3612, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3612, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3612, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3612, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3612, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3612, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3612, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3612, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3612, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3612, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!3635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3637, splitDebugInlining: false, nameTableKind: None)
!3636 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3637 = !{!3638, !102, !103}
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 32)
!3639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !3640)
!3640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !3641)
!3641 = !{!3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3640, file: !1028, line: 447, baseType: !1032, size: 32)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3640, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3640, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3640, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3640, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3640, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3640, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3640, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3640, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3640, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3640, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3640, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3640, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3640, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3640, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3640, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3640, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3640, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3640, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3640, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3640, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!3663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3665, splitDebugInlining: false, nameTableKind: None)
!3664 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3665 = !{!3666, !108, !102, !103}
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 32)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3668, line: 98, size: 256, elements: !3669)
!3668 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3669 = !{!3670, !3675, !3680, !3685, !3690, !3695, !3700, !3705}
!3670 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !3668, line: 99, baseType: !3671, size: 32)
!3671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3667, file: !3668, line: 99, size: 32, elements: !3672)
!3672 = !{!3673, !3674}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3671, file: !3668, line: 99, baseType: !108, size: 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3671, file: !3668, line: 99, baseType: !108, size: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !3668, line: 100, baseType: !3676, size: 32, offset: 32)
!3676 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3667, file: !3668, line: 100, size: 32, elements: !3677)
!3677 = !{!3678, !3679}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3676, file: !3668, line: 100, baseType: !108, size: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3676, file: !3668, line: 100, baseType: !108, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !3668, line: 101, baseType: !3681, size: 32, offset: 64)
!3681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3667, file: !3668, line: 101, size: 32, elements: !3682)
!3682 = !{!3683, !3684}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3681, file: !3668, line: 101, baseType: !108, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3681, file: !3668, line: 101, baseType: !108, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !3668, line: 102, baseType: !3686, size: 32, offset: 96)
!3686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3667, file: !3668, line: 102, size: 32, elements: !3687)
!3687 = !{!3688, !3689}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3686, file: !3668, line: 102, baseType: !108, size: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3686, file: !3668, line: 102, baseType: !108, size: 32)
!3690 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !3668, line: 103, baseType: !3691, size: 32, offset: 128)
!3691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3667, file: !3668, line: 103, size: 32, elements: !3692)
!3692 = !{!3693, !3694}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3691, file: !3668, line: 103, baseType: !108, size: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3691, file: !3668, line: 103, baseType: !108, size: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !3668, line: 104, baseType: !3696, size: 32, offset: 160)
!3696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3667, file: !3668, line: 104, size: 32, elements: !3697)
!3697 = !{!3698, !3699}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3696, file: !3668, line: 104, baseType: !108, size: 32)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3696, file: !3668, line: 104, baseType: !108, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, scope: !3667, file: !3668, line: 105, baseType: !3701, size: 32, offset: 192)
!3701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3667, file: !3668, line: 105, size: 32, elements: !3702)
!3702 = !{!3703, !3704}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3701, file: !3668, line: 105, baseType: !108, size: 32)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3701, file: !3668, line: 105, baseType: !108, size: 32)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3667, file: !3668, line: 106, baseType: !108, size: 32, offset: 224)
!3706 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3707, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3550, retainedTypes: !3708, splitDebugInlining: false, nameTableKind: None)
!3707 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3708 = !{!3709, !102, !103, !3734, !3506, !108}
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 32)
!3710 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !3711)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !3712)
!3712 = !{!3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3711, file: !1028, line: 447, baseType: !1032, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3711, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3711, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3711, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3711, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3711, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3711, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3711, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3711, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3711, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3711, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3711, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3711, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3711, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3711, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3711, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3711, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3711, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3711, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3711, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3711, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 32)
!3735 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3668, line: 141, baseType: !3736)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3668, line: 97, size: 256, elements: !3737)
!3737 = !{!3738}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3736, file: !3668, line: 107, baseType: !3739, size: 256)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3668, line: 98, size: 256, elements: !3740)
!3740 = !{!3741, !3746, !3751, !3756, !3761, !3766, !3771, !3776}
!3741 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !3668, line: 99, baseType: !3742, size: 32)
!3742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !3668, line: 99, size: 32, elements: !3743)
!3743 = !{!3744, !3745}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3742, file: !3668, line: 99, baseType: !108, size: 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3742, file: !3668, line: 99, baseType: !108, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !3668, line: 100, baseType: !3747, size: 32, offset: 32)
!3747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !3668, line: 100, size: 32, elements: !3748)
!3748 = !{!3749, !3750}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3747, file: !3668, line: 100, baseType: !108, size: 32)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3747, file: !3668, line: 100, baseType: !108, size: 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !3668, line: 101, baseType: !3752, size: 32, offset: 64)
!3752 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !3668, line: 101, size: 32, elements: !3753)
!3753 = !{!3754, !3755}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3752, file: !3668, line: 101, baseType: !108, size: 32)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3752, file: !3668, line: 101, baseType: !108, size: 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !3668, line: 102, baseType: !3757, size: 32, offset: 96)
!3757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !3668, line: 102, size: 32, elements: !3758)
!3758 = !{!3759, !3760}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3757, file: !3668, line: 102, baseType: !108, size: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3757, file: !3668, line: 102, baseType: !108, size: 32)
!3761 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !3668, line: 103, baseType: !3762, size: 32, offset: 128)
!3762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !3668, line: 103, size: 32, elements: !3763)
!3763 = !{!3764, !3765}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3762, file: !3668, line: 103, baseType: !108, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3762, file: !3668, line: 103, baseType: !108, size: 32)
!3766 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !3668, line: 104, baseType: !3767, size: 32, offset: 160)
!3767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !3668, line: 104, size: 32, elements: !3768)
!3768 = !{!3769, !3770}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3767, file: !3668, line: 104, baseType: !108, size: 32)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3767, file: !3668, line: 104, baseType: !108, size: 32)
!3771 = !DIDerivedType(tag: DW_TAG_member, scope: !3739, file: !3668, line: 105, baseType: !3772, size: 32, offset: 192)
!3772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3739, file: !3668, line: 105, size: 32, elements: !3773)
!3773 = !{!3774, !3775}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3772, file: !3668, line: 105, baseType: !108, size: 32)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3772, file: !3668, line: 105, baseType: !108, size: 32)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3739, file: !3668, line: 106, baseType: !108, size: 32, offset: 224)
!3777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2487, retainedTypes: !3779, splitDebugInlining: false, nameTableKind: None)
!3778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3779 = !{!1651, !330, !164, !108, !3780, !3797}
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 32)
!3781 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1028, line: 426, baseType: !3782)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 411, size: 28704, elements: !3783)
!3783 = !{!3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3782, file: !1028, line: 413, baseType: !2502, size: 256)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3782, file: !1028, line: 414, baseType: !2504, size: 768, offset: 256)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3782, file: !1028, line: 415, baseType: !2502, size: 256, offset: 1024)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3782, file: !1028, line: 416, baseType: !2504, size: 768, offset: 1280)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3782, file: !1028, line: 417, baseType: !2502, size: 256, offset: 2048)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3782, file: !1028, line: 418, baseType: !2504, size: 768, offset: 2304)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3782, file: !1028, line: 419, baseType: !2502, size: 256, offset: 3072)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3782, file: !1028, line: 420, baseType: !2504, size: 768, offset: 3328)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3782, file: !1028, line: 421, baseType: !2502, size: 256, offset: 4096)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3782, file: !1028, line: 422, baseType: !2515, size: 1792, offset: 4352)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3782, file: !1028, line: 423, baseType: !2519, size: 1920, offset: 6144)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3782, file: !1028, line: 424, baseType: !2524, size: 20608, offset: 8064)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3782, file: !1028, line: 425, baseType: !813, size: 32, offset: 28672)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 32)
!3798 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !3799)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !3800)
!3800 = !{!3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3799, file: !1028, line: 447, baseType: !1032, size: 32)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3799, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3799, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3799, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3799, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3799, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3799, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3799, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3799, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3799, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3799, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3799, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3799, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3799, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3799, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3799, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3799, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3799, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3799, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3799, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3799, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!3822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3823, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3824, splitDebugInlining: false, nameTableKind: None)
!3823 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3824 = !{!3825, !102, !103}
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 32)
!3826 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1028, line: 468, baseType: !3827)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 445, size: 1120, elements: !3828)
!3828 = !{!3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3827, file: !1028, line: 447, baseType: !1032, size: 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3827, file: !1028, line: 448, baseType: !813, size: 32, offset: 32)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3827, file: !1028, line: 449, baseType: !813, size: 32, offset: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3827, file: !1028, line: 450, baseType: !813, size: 32, offset: 96)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3827, file: !1028, line: 451, baseType: !813, size: 32, offset: 128)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3827, file: !1028, line: 452, baseType: !813, size: 32, offset: 160)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3827, file: !1028, line: 453, baseType: !2539, size: 96, offset: 192)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3827, file: !1028, line: 454, baseType: !813, size: 32, offset: 288)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3827, file: !1028, line: 455, baseType: !813, size: 32, offset: 320)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3827, file: !1028, line: 456, baseType: !813, size: 32, offset: 352)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3827, file: !1028, line: 457, baseType: !813, size: 32, offset: 384)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3827, file: !1028, line: 458, baseType: !813, size: 32, offset: 416)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3827, file: !1028, line: 459, baseType: !813, size: 32, offset: 448)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3827, file: !1028, line: 460, baseType: !813, size: 32, offset: 480)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3827, file: !1028, line: 461, baseType: !2550, size: 64, offset: 512)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3827, file: !1028, line: 462, baseType: !1032, size: 32, offset: 576)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3827, file: !1028, line: 463, baseType: !1032, size: 32, offset: 608)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3827, file: !1028, line: 464, baseType: !2554, size: 128, offset: 640)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3827, file: !1028, line: 465, baseType: !2556, size: 160, offset: 768)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3827, file: !1028, line: 466, baseType: !2558, size: 160, offset: 928)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3827, file: !1028, line: 467, baseType: !813, size: 32, offset: 1088)
!3850 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3851, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3852, splitDebugInlining: false, nameTableKind: None)
!3851 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3852 = !{!158, !157, !153, !1858, !3853, !165, !102}
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 32)
!3854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3856, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3857, splitDebugInlining: false, nameTableKind: None)
!3856 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3857 = !{!3858}
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 32)
!3859 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 586, baseType: !3860)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 550, size: 1216, elements: !3861)
!3861 = !{!3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3860, file: !809, line: 552, baseType: !813, size: 32)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3860, file: !809, line: 553, baseType: !813, size: 32, offset: 32)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3860, file: !809, line: 554, baseType: !813, size: 32, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3860, file: !809, line: 555, baseType: !813, size: 32, offset: 96)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3860, file: !809, line: 556, baseType: !813, size: 32, offset: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3860, file: !809, line: 557, baseType: !813, size: 32, offset: 160)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3860, file: !809, line: 558, baseType: !813, size: 32, offset: 192)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3860, file: !809, line: 559, baseType: !108, size: 32, offset: 224)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3860, file: !809, line: 560, baseType: !813, size: 32, offset: 256)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3860, file: !809, line: 561, baseType: !813, size: 32, offset: 288)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3860, file: !809, line: 562, baseType: !1723, size: 64, offset: 320)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3860, file: !809, line: 563, baseType: !813, size: 32, offset: 384)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3860, file: !809, line: 564, baseType: !813, size: 32, offset: 416)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3860, file: !809, line: 565, baseType: !813, size: 32, offset: 448)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3860, file: !809, line: 566, baseType: !108, size: 32, offset: 480)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3860, file: !809, line: 567, baseType: !813, size: 32, offset: 512)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3860, file: !809, line: 568, baseType: !813, size: 32, offset: 544)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3860, file: !809, line: 569, baseType: !1723, size: 64, offset: 576)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3860, file: !809, line: 570, baseType: !813, size: 32, offset: 640)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3860, file: !809, line: 571, baseType: !813, size: 32, offset: 672)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3860, file: !809, line: 572, baseType: !813, size: 32, offset: 704)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3860, file: !809, line: 573, baseType: !108, size: 32, offset: 736)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3860, file: !809, line: 574, baseType: !813, size: 32, offset: 768)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3860, file: !809, line: 575, baseType: !813, size: 32, offset: 800)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3860, file: !809, line: 576, baseType: !1723, size: 64, offset: 832)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3860, file: !809, line: 577, baseType: !813, size: 32, offset: 896)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3860, file: !809, line: 578, baseType: !813, size: 32, offset: 928)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3860, file: !809, line: 579, baseType: !1723, size: 64, offset: 960)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3860, file: !809, line: 580, baseType: !813, size: 32, offset: 1024)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3860, file: !809, line: 581, baseType: !813, size: 32, offset: 1056)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3860, file: !809, line: 582, baseType: !813, size: 32, offset: 1088)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3860, file: !809, line: 583, baseType: !813, size: 32, offset: 1120)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3860, file: !809, line: 584, baseType: !813, size: 32, offset: 1152)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3860, file: !809, line: 585, baseType: !813, size: 32, offset: 1184)
!3896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3900, retainedTypes: !3916, splitDebugInlining: false, nameTableKind: None)
!3899 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3900 = !{!3901, !3908, !3912}
!3901 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3902, line: 38, baseType: !32, size: 32, elements: !3903)
!3902 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3903 = !{!3904, !3905, !3906, !3907}
!3904 = !DIEnumerator(name: "HAL_OK", value: 0)
!3905 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3906 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3907 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3908 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1696, line: 184, baseType: !32, size: 32, elements: !3909)
!3909 = !{!3910, !3911}
!3910 = !DIEnumerator(name: "RESET", value: 0)
!3911 = !DIEnumerator(name: "SET", value: 1)
!3912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1696, line: 190, baseType: !32, size: 32, elements: !3913)
!3913 = !{!3914, !3915}
!3914 = !DIEnumerator(name: "DISABLE", value: 0)
!3915 = !DIEnumerator(name: "ENABLE", value: 1)
!3916 = !{!3917, !108, !3955, !2336, !164, !109, !102}
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 32)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 586, baseType: !3919)
!3919 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 550, size: 1216, elements: !3920)
!3920 = !{!3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3919, file: !809, line: 552, baseType: !813, size: 32)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3919, file: !809, line: 553, baseType: !813, size: 32, offset: 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3919, file: !809, line: 554, baseType: !813, size: 32, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3919, file: !809, line: 555, baseType: !813, size: 32, offset: 96)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3919, file: !809, line: 556, baseType: !813, size: 32, offset: 128)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3919, file: !809, line: 557, baseType: !813, size: 32, offset: 160)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3919, file: !809, line: 558, baseType: !813, size: 32, offset: 192)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3919, file: !809, line: 559, baseType: !108, size: 32, offset: 224)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3919, file: !809, line: 560, baseType: !813, size: 32, offset: 256)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3919, file: !809, line: 561, baseType: !813, size: 32, offset: 288)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3919, file: !809, line: 562, baseType: !1723, size: 64, offset: 320)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3919, file: !809, line: 563, baseType: !813, size: 32, offset: 384)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3919, file: !809, line: 564, baseType: !813, size: 32, offset: 416)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3919, file: !809, line: 565, baseType: !813, size: 32, offset: 448)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3919, file: !809, line: 566, baseType: !108, size: 32, offset: 480)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3919, file: !809, line: 567, baseType: !813, size: 32, offset: 512)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3919, file: !809, line: 568, baseType: !813, size: 32, offset: 544)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3919, file: !809, line: 569, baseType: !1723, size: 64, offset: 576)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3919, file: !809, line: 570, baseType: !813, size: 32, offset: 640)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3919, file: !809, line: 571, baseType: !813, size: 32, offset: 672)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3919, file: !809, line: 572, baseType: !813, size: 32, offset: 704)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3919, file: !809, line: 573, baseType: !108, size: 32, offset: 736)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3919, file: !809, line: 574, baseType: !813, size: 32, offset: 768)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3919, file: !809, line: 575, baseType: !813, size: 32, offset: 800)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3919, file: !809, line: 576, baseType: !1723, size: 64, offset: 832)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3919, file: !809, line: 577, baseType: !813, size: 32, offset: 896)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3919, file: !809, line: 578, baseType: !813, size: 32, offset: 928)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3919, file: !809, line: 579, baseType: !1723, size: 64, offset: 960)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3919, file: !809, line: 580, baseType: !813, size: 32, offset: 1024)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3919, file: !809, line: 581, baseType: !813, size: 32, offset: 1056)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3919, file: !809, line: 582, baseType: !813, size: 32, offset: 1088)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3919, file: !809, line: 583, baseType: !813, size: 32, offset: 1120)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3919, file: !809, line: 584, baseType: !813, size: 32, offset: 1152)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3919, file: !809, line: 585, baseType: !813, size: 32, offset: 1184)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 32)
!3956 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !809, line: 544, baseType: !3957)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 540, size: 64, elements: !3958)
!3958 = !{!3959, !3960}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3957, file: !809, line: 542, baseType: !813, size: 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3957, file: !809, line: 543, baseType: !813, size: 32, offset: 32)
!3961 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3962, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3963, retainedTypes: !3964, splitDebugInlining: false, nameTableKind: None)
!3962 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!3963 = !{!1695}
!3964 = !{!3965, !108, !3973, !3979, !3990}
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 32)
!3966 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1028, line: 770, baseType: !3967)
!3967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 764, size: 128, elements: !3968)
!3968 = !{!3969, !3970, !3971, !3972}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3967, file: !1028, line: 766, baseType: !813, size: 32)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3967, file: !1028, line: 767, baseType: !813, size: 32, offset: 32)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3967, file: !1028, line: 768, baseType: !813, size: 32, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3967, file: !1028, line: 769, baseType: !1032, size: 32, offset: 96)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 32)
!3974 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !809, line: 544, baseType: !3975)
!3975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 540, size: 64, elements: !3976)
!3976 = !{!3977, !3978}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3975, file: !809, line: 542, baseType: !813, size: 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3975, file: !809, line: 543, baseType: !813, size: 32, offset: 32)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 32)
!3980 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !809, line: 407, baseType: !3981)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 398, size: 224, elements: !3982)
!3982 = !{!3983, !3984, !3985, !3986, !3987, !3988, !3989}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3981, file: !809, line: 400, baseType: !813, size: 32)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3981, file: !809, line: 401, baseType: !813, size: 32, offset: 32)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3981, file: !809, line: 402, baseType: !813, size: 32, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3981, file: !809, line: 403, baseType: !813, size: 32, offset: 96)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3981, file: !809, line: 404, baseType: !813, size: 32, offset: 128)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3981, file: !809, line: 405, baseType: !813, size: 32, offset: 160)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3981, file: !809, line: 406, baseType: !813, size: 32, offset: 192)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 32)
!3991 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !809, line: 586, baseType: !3992)
!3992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !809, line: 550, size: 1216, elements: !3993)
!3993 = !{!3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3992, file: !809, line: 552, baseType: !813, size: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3992, file: !809, line: 553, baseType: !813, size: 32, offset: 32)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3992, file: !809, line: 554, baseType: !813, size: 32, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3992, file: !809, line: 555, baseType: !813, size: 32, offset: 96)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3992, file: !809, line: 556, baseType: !813, size: 32, offset: 128)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3992, file: !809, line: 557, baseType: !813, size: 32, offset: 160)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3992, file: !809, line: 558, baseType: !813, size: 32, offset: 192)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3992, file: !809, line: 559, baseType: !108, size: 32, offset: 224)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3992, file: !809, line: 560, baseType: !813, size: 32, offset: 256)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3992, file: !809, line: 561, baseType: !813, size: 32, offset: 288)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3992, file: !809, line: 562, baseType: !1723, size: 64, offset: 320)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3992, file: !809, line: 563, baseType: !813, size: 32, offset: 384)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3992, file: !809, line: 564, baseType: !813, size: 32, offset: 416)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3992, file: !809, line: 565, baseType: !813, size: 32, offset: 448)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3992, file: !809, line: 566, baseType: !108, size: 32, offset: 480)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3992, file: !809, line: 567, baseType: !813, size: 32, offset: 512)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3992, file: !809, line: 568, baseType: !813, size: 32, offset: 544)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3992, file: !809, line: 569, baseType: !1723, size: 64, offset: 576)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3992, file: !809, line: 570, baseType: !813, size: 32, offset: 640)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3992, file: !809, line: 571, baseType: !813, size: 32, offset: 672)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3992, file: !809, line: 572, baseType: !813, size: 32, offset: 704)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3992, file: !809, line: 573, baseType: !108, size: 32, offset: 736)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3992, file: !809, line: 574, baseType: !813, size: 32, offset: 768)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3992, file: !809, line: 575, baseType: !813, size: 32, offset: 800)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3992, file: !809, line: 576, baseType: !1723, size: 64, offset: 832)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3992, file: !809, line: 577, baseType: !813, size: 32, offset: 896)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3992, file: !809, line: 578, baseType: !813, size: 32, offset: 928)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3992, file: !809, line: 579, baseType: !1723, size: 64, offset: 960)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3992, file: !809, line: 580, baseType: !813, size: 32, offset: 1024)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3992, file: !809, line: 581, baseType: !813, size: 32, offset: 1056)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3992, file: !809, line: 582, baseType: !813, size: 32, offset: 1088)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3992, file: !809, line: 583, baseType: !813, size: 32, offset: 1120)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3992, file: !809, line: 584, baseType: !813, size: 32, offset: 1152)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3992, file: !809, line: 585, baseType: !813, size: 32, offset: 1184)
!4028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !4030, splitDebugInlining: false, nameTableKind: None)
!4029 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4030 = !{!102, !153}
!4031 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4032, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4033, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!4032 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4033 = !{!4034, !4041, !3551, !30}
!4034 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !4035, line: 14, baseType: !32, size: 32, elements: !4036)
!4035 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4036 = !{!4037, !4038, !4039, !4040}
!4037 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!4038 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!4039 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!4040 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!4041 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !4035, line: 42, baseType: !32, size: 32, elements: !4042)
!4042 = !{!4043, !4044, !4045, !4046, !4047, !4048}
!4043 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!4044 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!4045 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!4046 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!4047 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!4048 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!4049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!4050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4051 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4052, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !4053, splitDebugInlining: false, nameTableKind: None)
!4052 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4053 = !{!102, !103, !4054, !4069}
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 32)
!4055 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !4056)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !4057)
!4057 = !{!4058, !4064}
!4058 = !DIDerivedType(tag: DW_TAG_member, scope: !4056, file: !133, line: 38, baseType: !4059, size: 32)
!4059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4056, file: !133, line: 38, size: 32, elements: !4060)
!4060 = !{!4061, !4063}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4059, file: !133, line: 39, baseType: !4062, size: 32)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 32)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4059, file: !133, line: 40, baseType: !4062, size: 32)
!4064 = !DIDerivedType(tag: DW_TAG_member, scope: !4056, file: !133, line: 42, baseType: !4065, size: 32, offset: 32)
!4065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4056, file: !133, line: 42, size: 32, elements: !4066)
!4066 = !{!4067, !4068}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4065, file: !133, line: 43, baseType: !4062, size: 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4065, file: !133, line: 44, baseType: !4062, size: 32)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 32)
!4070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !4071)
!4071 = !{!4072, !4116, !4128, !4129, !4130, !4131, !4137, !4152}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4070, file: !195, line: 247, baseType: !4073, size: 384)
!4073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !4074)
!4074 = !{!4075, !4085, !4092, !4093, !4094, !4103, !4104, !4105}
!4075 = !DIDerivedType(tag: DW_TAG_member, scope: !4073, file: !195, line: 60, baseType: !4076, size: 64)
!4076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4073, file: !195, line: 60, size: 64, elements: !4077)
!4077 = !{!4078, !4079}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4076, file: !195, line: 61, baseType: !4055, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4076, file: !195, line: 62, baseType: !4080, size: 64)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !4081)
!4081 = !{!4082}
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4080, file: !207, line: 50, baseType: !4083, size: 64)
!4083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4084, size: 64, elements: !212)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 32)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4073, file: !195, line: 68, baseType: !4086, size: 32, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 32)
!4087 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !4088)
!4088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !4089)
!4089 = !{!4090}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4088, file: !128, line: 232, baseType: !4091, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !4056)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4073, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4073, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!4094 = !DIDerivedType(tag: DW_TAG_member, scope: !4073, file: !195, line: 90, baseType: !4095, size: 16, offset: 112)
!4095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4073, file: !195, line: 90, size: 16, elements: !4096)
!4096 = !{!4097, !4102}
!4097 = !DIDerivedType(tag: DW_TAG_member, scope: !4095, file: !195, line: 91, baseType: !4098, size: 16)
!4098 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4095, file: !195, line: 91, size: 16, elements: !4099)
!4099 = !{!4100, !4101}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4098, file: !195, line: 96, baseType: !225, size: 8)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4098, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4095, file: !195, line: 100, baseType: !177, size: 16)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4073, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4073, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4073, file: !195, line: 131, baseType: !4106, size: 192, offset: 192)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !4107)
!4107 = !{!4108, !4109, !4115}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4106, file: !128, line: 245, baseType: !4055, size: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4106, file: !128, line: 246, baseType: !4110, size: 32, offset: 64)
!4110 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !4111)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 32)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{null, !4114}
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 32)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4106, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4070, file: !195, line: 250, baseType: !4117, size: 288, offset: 384)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !4118)
!4118 = !{!4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4117, file: !244, line: 26, baseType: !108, size: 32)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4117, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4117, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4117, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4117, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4117, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4117, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4117, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4117, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4070, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4070, file: !195, line: 256, baseType: !4087, size: 64, offset: 704)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4070, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4070, file: !195, line: 300, baseType: !4132, size: 96, offset: 800)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !4133)
!4133 = !{!4134, !4135, !4136}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4132, file: !195, line: 153, baseType: !22, size: 32)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4132, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4132, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4070, file: !195, line: 325, baseType: !4138, size: 32, offset: 896)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 32)
!4139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !4140)
!4140 = !{!4141, !4147, !4148}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4139, file: !124, line: 5074, baseType: !4142, size: 96)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !4143)
!4143 = !{!4144, !4145, !4146}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4142, file: !270, line: 57, baseType: !273, size: 32)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4142, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4142, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4139, file: !124, line: 5075, baseType: !4087, size: 64, offset: 96)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4139, file: !124, line: 5076, baseType: !4149, size: 32, offset: 160)
!4149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !4150)
!4150 = !{!4151}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4149, file: !149, line: 52, baseType: !22, size: 32)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4070, file: !195, line: 343, baseType: !4153, size: 64, offset: 928)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !4154)
!4154 = !{!4155, !4156}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4153, file: !244, line: 63, baseType: !108, size: 32)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4153, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!4157 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4158, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !4159, splitDebugInlining: false, nameTableKind: None)
!4158 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4159 = !{!22, !102, !103}
!4160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !4161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !796, splitDebugInlining: false, nameTableKind: None)
!4161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4162 = !{!"Ubuntu clang version 14.0.6"}
!4163 = !{i32 7, !"Dwarf Version", i32 4}
!4164 = !{i32 2, !"Debug Info Version", i32 3}
!4165 = !{i32 1, !"wchar_size", i32 4}
!4166 = !{i32 1, !"min_enum_size", i32 4}
!4167 = !{i32 1, !"branch-target-enforcement", i32 0}
!4168 = !{i32 1, !"sign-return-address", i32 0}
!4169 = !{i32 1, !"sign-return-address-all", i32 0}
!4170 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!4171 = !{i32 7, !"frame-pointer", i32 2}
!4172 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !4173, file: !4173, line: 26, type: !333, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3470, retainedNodes: !2953)
!4173 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4174 = !DILocation(line: 28, column: 1, scope: !4172)
!4175 = !{i64 2155375899, i64 2155375919, i64 2155375982}
!4176 = !DILocation(line: 29, column: 1, scope: !4172)
!4177 = !{i64 2155376314, i64 2155376334, i64 2155376397}
!4178 = !DILocation(line: 30, column: 1, scope: !4172)
!4179 = !{i64 2155376733, i64 2155376753, i64 2155376816}
!4180 = !DILocation(line: 31, column: 1, scope: !4172)
!4181 = !{i64 2155377152, i64 2155377172, i64 2155377235}
!4182 = !DILocation(line: 33, column: 1, scope: !4172)
!4183 = !{i64 2155377444, i64 2155377464, i64 2155377527}
!4184 = !DILocation(line: 35, column: 1, scope: !4172)
!4185 = !{i64 2155377769, i64 2155377789, i64 2155377852}
!4186 = !DILocation(line: 50, column: 1, scope: !4172)
!4187 = !{i64 2155378196, i64 2155378216, i64 2155378279}
!4188 = !DILocation(line: 54, column: 1, scope: !4172)
!4189 = !{i64 2155378635, i64 2155378655, i64 2155378718}
!4190 = !DILocation(line: 61, column: 1, scope: !4172)
!4191 = !{i64 2155378952, i64 2155378972, i64 2155379035}
!4192 = !DILocation(line: 63, column: 1, scope: !4172)
!4193 = !{i64 2155379332, i64 2155379352, i64 2155379415}
!4194 = !DILocation(line: 64, column: 1, scope: !4172)
!4195 = !{i64 2155379854, i64 2155379874, i64 2155379937}
!4196 = !DILocation(line: 65, column: 1, scope: !4172)
!4197 = !{i64 2155380352, i64 2155380372, i64 2155380435}
!4198 = !DILocation(line: 66, column: 1, scope: !4172)
!4199 = !{i64 2155380834, i64 2155380854, i64 2155380917}
!4200 = !DILocation(line: 67, column: 1, scope: !4172)
!4201 = !{i64 2155381341, i64 2155381361, i64 2155381424}
!4202 = !DILocation(line: 68, column: 1, scope: !4172)
!4203 = !{i64 2155381829, i64 2155381849, i64 2155381912}
!4204 = !DILocation(line: 70, column: 1, scope: !4172)
!4205 = !{i64 2155382297, i64 2155382317, i64 2155382380}
!4206 = !DILocation(line: 71, column: 1, scope: !4172)
!4207 = !{i64 2155382739, i64 2155382759, i64 2155382822}
!4208 = !DILocation(line: 72, column: 1, scope: !4172)
!4209 = !{i64 2155383197, i64 2155383217, i64 2155383280}
!4210 = !DILocation(line: 79, column: 1, scope: !4172)
!4211 = !{i64 2155383651, i64 2155383671, i64 2155383734}
!4212 = !DILocation(line: 80, column: 1, scope: !4172)
!4213 = !{i64 2155384162, i64 2155384182, i64 2155384245}
!4214 = !DILocation(line: 82, column: 1, scope: !4172)
!4215 = !{i64 2155384653, i64 2155384673, i64 2155384736}
!4216 = !DILocation(line: 97, column: 1, scope: !4172)
!4217 = !{i64 2155384990, i64 2155385010, i64 2155385073}
!4218 = !DILocation(line: 99, column: 1, scope: !4172)
!4219 = !{i64 2155385208, i64 2155385228, i64 2155385291}
!4220 = !DILocation(line: 102, column: 1, scope: !4172)
!4221 = !{i64 2155389526, i64 2155389546, i64 2155389609}
!4222 = !DILocation(line: 105, column: 1, scope: !4172)
!4223 = !{i64 2155389766, i64 2155389786, i64 2155389849}
!4224 = !DILocation(line: 115, column: 1, scope: !4172)
!4225 = !{i64 2155390105, i64 2155390125, i64 2155390188}
!4226 = !DILocation(line: 118, column: 1, scope: !4172)
!4227 = !{i64 2155390449, i64 2155390469, i64 2155390532}
!4228 = !DILocation(line: 32, column: 1, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !4172, file: !4230, discriminator: 0)
!4230 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4231 = !{i64 2155390805, i64 2155390825, i64 2155390888}
!4232 = !DILocation(line: 33, column: 1, scope: !4229)
!4233 = !{i64 2155391317, i64 2155391337, i64 2155391400}
!4234 = !DILocation(line: 53, column: 1, scope: !4229)
!4235 = !{i64 2155391825, i64 2155391845, i64 2155391908}
!4236 = !DILocation(line: 54, column: 1, scope: !4229)
!4237 = !{i64 2155392243, i64 2155392263, i64 2155392326}
!4238 = !DILocation(line: 55, column: 1, scope: !4229)
!4239 = !{i64 2155392661, i64 2155392681, i64 2155392744}
!4240 = !DILocation(line: 56, column: 1, scope: !4229)
!4241 = !{i64 2155393079, i64 2155393099, i64 2155393162}
!4242 = !DILocation(line: 57, column: 1, scope: !4229)
!4243 = !{i64 2155393497, i64 2155393517, i64 2155393580}
!4244 = !DILocation(line: 58, column: 1, scope: !4229)
!4245 = !{i64 2155393915, i64 2155393935, i64 2155393998}
!4246 = !DILocation(line: 59, column: 1, scope: !4229)
!4247 = !{i64 2155394333, i64 2155394353, i64 2155394416}
!4248 = !DILocation(line: 60, column: 1, scope: !4229)
!4249 = !{i64 2155394757, i64 2155394777, i64 2155394840}
!4250 = !DILocation(line: 61, column: 1, scope: !4229)
!4251 = !{i64 2155395074, i64 2155395094, i64 2155395157}
!4252 = !DILocation(line: 70, column: 1, scope: !4229)
!4253 = !{i64 2155395303, i64 2155395323, i64 2155395386}
!4254 = !DILocation(line: 72, column: 1, scope: !4229)
!4255 = !{i64 2155395635, i64 2155395655, i64 2155395718}
!4256 = !DILocation(line: 73, column: 1, scope: !4229)
!4257 = !{i64 2155396085, i64 2155396105, i64 2155396168}
!4258 = !DILocation(line: 74, column: 1, scope: !4229)
!4259 = !{i64 2155396535, i64 2155396555, i64 2155396618}
!4260 = !DILocation(line: 75, column: 1, scope: !4229)
!4261 = !{i64 2155396985, i64 2155397005, i64 2155397068}
!4262 = !DILocation(line: 76, column: 1, scope: !4229)
!4263 = !{i64 2155397435, i64 2155397455, i64 2155397518}
!4264 = !DILocation(line: 77, column: 1, scope: !4229)
!4265 = !{i64 2155397885, i64 2155397905, i64 2155397968}
!4266 = !DILocation(line: 78, column: 1, scope: !4229)
!4267 = !{i64 2155398335, i64 2155398355, i64 2155398418}
!4268 = !DILocation(line: 79, column: 1, scope: !4229)
!4269 = !{i64 2155398785, i64 2155398805, i64 2155398868}
!4270 = !DILocation(line: 80, column: 1, scope: !4229)
!4271 = !{i64 2155403299, i64 2155403319, i64 2155403382}
!4272 = !DILocation(line: 84, column: 1, scope: !4229)
!4273 = !{i64 2155403631, i64 2155403651, i64 2155403714}
!4274 = !DILocation(line: 91, column: 1, scope: !4229)
!4275 = !{i64 2155404028, i64 2155404048, i64 2155404111}
!4276 = !DILocation(line: 93, column: 1, scope: !4229)
!4277 = !{i64 2155404395, i64 2155404415, i64 2155404478}
!4278 = !DILocation(line: 106, column: 1, scope: !4229)
!4279 = !{i64 2155404665, i64 2155404685, i64 2155404748}
!4280 = !DILocation(line: 11, column: 1, scope: !4281)
!4281 = !DILexicalBlockFile(scope: !4172, file: !4282, discriminator: 0)
!4282 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4283 = distinct !DISubprogram(name: "consumer_subscriber_thread", scope: !114, file: !114, line: 13, type: !333, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4284)
!4284 = !{!4285, !4286}
!4285 = !DILocalVariable(name: "chan", scope: !4283, file: !114, line: 15, type: !171)
!4286 = !DILocalVariable(name: "acc", scope: !4287, file: !114, line: 18, type: !4288)
!4287 = distinct !DILexicalBlock(scope: !4283, file: !114, line: 17, column: 58)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !538, line: 11, size: 96, elements: !4289)
!4289 = !{!4290, !4291, !4292}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4288, file: !538, line: 12, baseType: !103, size: 32)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4288, file: !538, line: 13, baseType: !103, size: 32, offset: 32)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !4288, file: !538, line: 14, baseType: !103, size: 32, offset: 64)
!4293 = !DILocation(line: 15, column: 2, scope: !4283)
!4294 = !DILocation(line: 0, scope: !4283)
!4295 = !DILocation(line: 17, column: 10, scope: !4283)
!4296 = !DILocation(line: 17, column: 9, scope: !4283)
!4297 = !DILocation(line: 17, column: 2, scope: !4283)
!4298 = !DILocation(line: 18, column: 3, scope: !4287)
!4299 = !DILocation(line: 18, column: 21, scope: !4287)
!4300 = !DILocation(line: 20, column: 18, scope: !4287)
!4301 = !DILocation(line: 20, column: 3, scope: !4287)
!4302 = !DILocation(line: 21, column: 3, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !114, line: 21, column: 3)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !114, line: 21, column: 3)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !114, line: 21, column: 3)
!4306 = distinct !DILexicalBlock(scope: !4287, file: !114, line: 21, column: 3)
!4307 = !DILocation(line: 22, column: 2, scope: !4283)
!4308 = distinct !{!4308, !4297, !4307}
!4309 = !DILocation(line: 23, column: 1, scope: !4283)
!4310 = distinct !DISubprogram(name: "filter_callback", scope: !362, file: !362, line: 20, type: !519, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !4311)
!4311 = !{!4312, !4313, !4316}
!4312 = !DILocalVariable(name: "chan", arg: 1, scope: !4310, file: !362, line: 20, type: !521)
!4313 = !DILocalVariable(name: "msg", scope: !4310, file: !362, line: 22, type: !4314)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 32)
!4315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !537)
!4316 = !DILocalVariable(name: "proc_msg", scope: !4310, file: !362, line: 23, type: !537)
!4317 = !DILocation(line: 0, scope: !4310)
!4318 = !DILocation(line: 22, column: 33, scope: !4310)
!4319 = !DILocation(line: 23, column: 2, scope: !4310)
!4320 = !DILocation(line: 23, column: 20, scope: !4310)
!4321 = !DILocation(line: 25, column: 17, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4310, file: !362, line: 25, column: 6)
!4323 = !DILocation(line: 25, column: 8, scope: !4322)
!4324 = !DILocation(line: 25, column: 6, scope: !4310)
!4325 = !DILocation(line: 26, column: 12, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !362, line: 25, column: 25)
!4327 = !DILocation(line: 26, column: 14, scope: !4326)
!4328 = !DILocation(line: 27, column: 2, scope: !4326)
!4329 = !DILocation(line: 28, column: 17, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4310, file: !362, line: 28, column: 6)
!4331 = !DILocation(line: 28, column: 8, scope: !4330)
!4332 = !DILocation(line: 28, column: 6, scope: !4310)
!4333 = !DILocation(line: 29, column: 12, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4330, file: !362, line: 28, column: 25)
!4335 = !DILocation(line: 29, column: 14, scope: !4334)
!4336 = !DILocation(line: 30, column: 2, scope: !4334)
!4337 = !DILocation(line: 31, column: 17, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4310, file: !362, line: 31, column: 6)
!4339 = !DILocation(line: 31, column: 8, scope: !4338)
!4340 = !DILocation(line: 31, column: 6, scope: !4310)
!4341 = !DILocation(line: 32, column: 12, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4338, file: !362, line: 31, column: 25)
!4343 = !DILocation(line: 32, column: 14, scope: !4342)
!4344 = !DILocation(line: 33, column: 2, scope: !4342)
!4345 = !DILocation(line: 34, column: 2, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !362, line: 34, column: 2)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !362, line: 34, column: 2)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !362, line: 34, column: 2)
!4349 = distinct !DILexicalBlock(scope: !4310, file: !362, line: 34, column: 2)
!4350 = !DILocation(line: 35, column: 2, scope: !4310)
!4351 = !DILocation(line: 36, column: 1, scope: !4310)
!4352 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !116, file: !116, line: 416, type: !4353, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !4355)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!13, !521}
!4355 = !{!4356}
!4356 = !DILocalVariable(name: "chan", arg: 1, scope: !4352, file: !116, line: 416, type: !521)
!4357 = !DILocation(line: 0, scope: !4352)
!4358 = !DILocation(line: 418, column: 2, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !116, line: 418, column: 2)
!4360 = distinct !DILexicalBlock(scope: !4352, file: !116, line: 418, column: 2)
!4361 = !DILocation(line: 418, column: 2, scope: !4360)
!4362 = !DILocation(line: 418, column: 2, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4359, file: !116, line: 418, column: 2)
!4364 = !DILocation(line: 420, column: 15, scope: !4352)
!4365 = !DILocation(line: 420, column: 2, scope: !4352)
!4366 = distinct !DISubprogram(name: "main", scope: !362, file: !362, line: 42, type: !333, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !4367)
!4367 = !{!4368}
!4368 = !DILocalVariable(name: "chan", scope: !4366, file: !362, line: 46, type: !521)
!4369 = !DILocation(line: 44, column: 2, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !362, line: 44, column: 2)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !362, line: 44, column: 2)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !362, line: 44, column: 2)
!4373 = distinct !DILexicalBlock(scope: !4366, file: !362, line: 44, column: 2)
!4374 = !DILocation(line: 46, column: 2, scope: !4366)
!4375 = !DILocation(line: 48, column: 2, scope: !4366)
!4376 = !DILocation(line: 49, column: 3, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4378, file: !362, line: 49, column: 3)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !362, line: 49, column: 3)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !362, line: 49, column: 3)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !362, line: 49, column: 3)
!4381 = distinct !DILexicalBlock(scope: !4366, file: !362, line: 48, column: 12)
!4382 = !DILocation(line: 50, column: 3, scope: !4381)
!4383 = !DILocation(line: 0, scope: !4366)
!4384 = !DILocation(line: 52, column: 3, scope: !4381)
!4385 = !DILocation(line: 54, column: 3, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !362, line: 54, column: 3)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !362, line: 54, column: 3)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !362, line: 54, column: 3)
!4389 = distinct !DILexicalBlock(scope: !4381, file: !362, line: 54, column: 3)
!4390 = !DILocation(line: 55, column: 3, scope: !4381)
!4391 = !DILocation(line: 57, column: 3, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !362, line: 57, column: 3)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !362, line: 57, column: 3)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !362, line: 57, column: 3)
!4395 = distinct !DILexicalBlock(scope: !4381, file: !362, line: 57, column: 3)
!4396 = !DILocation(line: 58, column: 3, scope: !4381)
!4397 = !DILocation(line: 60, column: 3, scope: !4381)
!4398 = !DILocation(line: 62, column: 3, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4400, file: !362, line: 62, column: 3)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !362, line: 62, column: 3)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !362, line: 62, column: 3)
!4402 = distinct !DILexicalBlock(scope: !4381, file: !362, line: 62, column: 3)
!4403 = !DILocation(line: 63, column: 3, scope: !4381)
!4404 = !DILocation(line: 65, column: 3, scope: !4381)
!4405 = distinct !{!4405, !4375, !4406}
!4406 = !DILocation(line: 66, column: 2, scope: !4366)
!4407 = distinct !DISubprogram(name: "producer_thread", scope: !553, file: !553, line: 16, type: !333, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4408)
!4408 = !{!4409, !4410, !4411}
!4409 = !DILocalVariable(name: "acc", scope: !4407, file: !553, line: 18, type: !753)
!4410 = !DILocalVariable(name: "count", scope: !4407, file: !553, line: 19, type: !108)
!4411 = !DILocalVariable(name: "change_state", scope: !4412, file: !553, line: 23, type: !119)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !553, line: 22, column: 19)
!4413 = distinct !DILexicalBlock(scope: !4414, file: !553, line: 22, column: 7)
!4414 = distinct !DILexicalBlock(scope: !4407, file: !553, line: 21, column: 12)
!4415 = !DILocation(line: 18, column: 2, scope: !4407)
!4416 = !DILocation(line: 18, column: 20, scope: !4407)
!4417 = !DILocation(line: 0, scope: !4407)
!4418 = !DILocation(line: 21, column: 2, scope: !4407)
!4419 = !DILocation(line: 22, column: 13, scope: !4413)
!4420 = !DILocation(line: 22, column: 7, scope: !4414)
!4421 = !DILocation(line: 23, column: 4, scope: !4412)
!4422 = !DILocation(line: 0, scope: !4412)
!4423 = !DILocation(line: 23, column: 9, scope: !4412)
!4424 = !DILocation(line: 25, column: 46, scope: !4412)
!4425 = !DILocation(line: 25, column: 4, scope: !4412)
!4426 = !DILocation(line: 27, column: 3, scope: !4413)
!4427 = !DILocation(line: 27, column: 3, scope: !4412)
!4428 = !DILocation(line: 29, column: 3, scope: !4414)
!4429 = !DILocation(line: 30, column: 3, scope: !4414)
!4430 = !DILocation(line: 31, column: 3, scope: !4414)
!4431 = !DILocation(line: 33, column: 3, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4433, file: !553, line: 33, column: 3)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !553, line: 33, column: 3)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !553, line: 33, column: 3)
!4435 = distinct !DILexicalBlock(scope: !4414, file: !553, line: 33, column: 3)
!4436 = !DILocation(line: 35, column: 39, scope: !4414)
!4437 = !DILocation(line: 35, column: 3, scope: !4414)
!4438 = !DILocation(line: 37, column: 3, scope: !4414)
!4439 = !DILocation(line: 39, column: 3, scope: !4414)
!4440 = distinct !{!4440, !4418, !4441}
!4441 = !DILocation(line: 40, column: 2, scope: !4407)
!4442 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !4443, file: !4443, line: 403, type: !4444, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4446)
!4443 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!109, !109}
!4446 = !{!4447}
!4447 = !DILocalVariable(name: "t", arg: 1, scope: !4442, file: !4443, line: 403, type: !109)
!4448 = !DILocation(line: 0, scope: !4442)
!4449 = !DILocalVariable(name: "t", arg: 1, scope: !4450, file: !4443, line: 102, type: !109)
!4450 = distinct !DISubprogram(name: "z_tmcvt", scope: !4443, file: !4443, line: 102, type: !4451, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4453)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!109, !109, !108, !108, !119, !119, !119, !119}
!4453 = !{!4449, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463}
!4454 = !DILocalVariable(name: "from_hz", arg: 2, scope: !4450, file: !4443, line: 102, type: !108)
!4455 = !DILocalVariable(name: "to_hz", arg: 3, scope: !4450, file: !4443, line: 103, type: !108)
!4456 = !DILocalVariable(name: "const_hz", arg: 4, scope: !4450, file: !4443, line: 103, type: !119)
!4457 = !DILocalVariable(name: "result32", arg: 5, scope: !4450, file: !4443, line: 104, type: !119)
!4458 = !DILocalVariable(name: "round_up", arg: 6, scope: !4450, file: !4443, line: 104, type: !119)
!4459 = !DILocalVariable(name: "round_off", arg: 7, scope: !4450, file: !4443, line: 105, type: !119)
!4460 = !DILocalVariable(name: "mul_ratio", scope: !4450, file: !4443, line: 107, type: !119)
!4461 = !DILocalVariable(name: "div_ratio", scope: !4450, file: !4443, line: 109, type: !119)
!4462 = !DILocalVariable(name: "off", scope: !4450, file: !4443, line: 116, type: !109)
!4463 = !DILocalVariable(name: "rdivisor", scope: !4464, file: !4443, line: 119, type: !108)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !4443, line: 118, column: 18)
!4465 = distinct !DILexicalBlock(scope: !4450, file: !4443, line: 118, column: 6)
!4466 = !DILocation(line: 0, scope: !4450, inlinedAt: !4467)
!4467 = distinct !DILocation(line: 406, column: 9, scope: !4442)
!4468 = !DILocation(line: 145, column: 13, scope: !4469, inlinedAt: !4467)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !4443, line: 144, column: 10)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !4443, line: 142, column: 7)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !4443, line: 141, column: 24)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !4443, line: 141, column: 13)
!4473 = distinct !DILexicalBlock(scope: !4450, file: !4443, line: 134, column: 6)
!4474 = !DILocation(line: 406, column: 2, scope: !4442)
!4475 = distinct !DISubprogram(name: "k_msleep", scope: !124, file: !124, line: 439, type: !4476, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4478)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!330, !330}
!4478 = !{!4479}
!4479 = !DILocalVariable(name: "ms", arg: 1, scope: !4475, file: !124, line: 439, type: !330)
!4480 = !DILocation(line: 0, scope: !4475)
!4481 = !DILocation(line: 441, column: 17, scope: !4475)
!4482 = !DILocation(line: 441, column: 9, scope: !4475)
!4483 = !DILocation(line: 441, column: 2, scope: !4475)
!4484 = distinct !DISubprogram(name: "k_sleep", scope: !4485, file: !4485, line: 91, type: !4486, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !548, retainedNodes: !4492)
!4485 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!330, !4488}
!4488 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !4489)
!4489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !4490)
!4490 = !{!4491}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !4489, file: !105, line: 66, baseType: !104, size: 64)
!4492 = !{!4493}
!4493 = !DILocalVariable(name: "timeout", arg: 1, scope: !4484, file: !4485, line: 91, type: !4488)
!4494 = !DILocation(line: 0, scope: !4484)
!4495 = !DILocation(line: 99, column: 2, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4484, file: !4485, line: 99, column: 2)
!4497 = !{i64 2155265156}
!4498 = !DILocation(line: 100, column: 9, scope: !4484)
!4499 = !DILocation(line: 100, column: 2, scope: !4484)
!4500 = distinct !DISubprogram(name: "cbvprintf_package", scope: !785, file: !785, line: 233, type: !4501, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4510)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!103, !102, !153, !108, !336, !4503}
!4503 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4504, line: 99, baseType: !4505)
!4504 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4504, line: 40, baseType: !4506)
!4506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !785, baseType: !4507)
!4507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4508)
!4508 = !{!4509}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4507, file: !785, line: 18, baseType: !102, size: 32)
!4510 = !{!4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4546, !4555, !4558, !4559, !4562, !4565, !4568, !4571, !4577}
!4511 = !DILocalVariable(name: "packaged", arg: 1, scope: !4500, file: !785, line: 233, type: !102)
!4512 = !DILocalVariable(name: "len", arg: 2, scope: !4500, file: !785, line: 233, type: !153)
!4513 = !DILocalVariable(name: "flags", arg: 3, scope: !4500, file: !785, line: 233, type: !108)
!4514 = !DILocalVariable(name: "fmt", arg: 4, scope: !4500, file: !785, line: 234, type: !336)
!4515 = !DILocalVariable(name: "ap", arg: 5, scope: !4500, file: !785, line: 234, type: !4503)
!4516 = !DILocalVariable(name: "buf0", scope: !4500, file: !785, line: 247, type: !783)
!4517 = !DILocalVariable(name: "buf", scope: !4500, file: !785, line: 248, type: !783)
!4518 = !DILocalVariable(name: "size", scope: !4500, file: !785, line: 249, type: !32)
!4519 = !DILocalVariable(name: "align", scope: !4500, file: !785, line: 250, type: !32)
!4520 = !DILocalVariable(name: "str_ptr_pos", scope: !4500, file: !785, line: 251, type: !4521)
!4521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !345)
!4522 = !DILocalVariable(name: "str_ptr_arg", scope: !4500, file: !785, line: 252, type: !4521)
!4523 = !DILocalVariable(name: "s_idx", scope: !4500, file: !785, line: 253, type: !32)
!4524 = !DILocalVariable(name: "s_rw_cnt", scope: !4500, file: !785, line: 254, type: !32)
!4525 = !DILocalVariable(name: "s_ro_cnt", scope: !4500, file: !785, line: 255, type: !32)
!4526 = !DILocalVariable(name: "arg_idx", scope: !4500, file: !785, line: 256, type: !103)
!4527 = !DILocalVariable(name: "i", scope: !4500, file: !785, line: 257, type: !32)
!4528 = !DILocalVariable(name: "s", scope: !4500, file: !785, line: 258, type: !336)
!4529 = !DILocalVariable(name: "parsing", scope: !4500, file: !785, line: 259, type: !119)
!4530 = !DILocalVariable(name: "rws_pos_en", scope: !4500, file: !785, line: 263, type: !119)
!4531 = !DILocalVariable(name: "fros_cnt", scope: !4500, file: !785, line: 268, type: !103)
!4532 = !DILocalVariable(name: "is_str_arg", scope: !4500, file: !785, line: 269, type: !119)
!4533 = !DILocalVariable(name: "pkg_hdr", scope: !4500, file: !785, line: 270, type: !4534)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 32)
!4535 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4536, line: 78, size: 32, elements: !4537)
!4536 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4537 = !{!4538, !4545}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4535, file: !4536, line: 80, baseType: !4539, size: 32)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4536, line: 45, size: 32, elements: !4540)
!4540 = !{!4541, !4542, !4543, !4544}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4539, file: !4536, line: 47, baseType: !164, size: 8)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4539, file: !4536, line: 50, baseType: !164, size: 8, offset: 8)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4539, file: !4536, line: 53, baseType: !164, size: 8, offset: 16)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4539, file: !4536, line: 56, baseType: !164, size: 8, offset: 24)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4535, file: !4536, line: 82, baseType: !102, size: 32)
!4546 = !DILocalVariable(name: "v", scope: !4547, file: !785, line: 567, type: !4551)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !785, line: 562, column: 14)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !785, line: 481, column: 18)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !785, line: 466, column: 3)
!4550 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 343, column: 15)
!4551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4500, file: !785, line: 567, size: 64, elements: !4552)
!4552 = !{!4553, !4554}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4551, file: !785, line: 567, baseType: !776, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4551, file: !785, line: 567, baseType: !774, size: 64)
!4555 = !DILocalVariable(name: "is_ro", scope: !4556, file: !785, line: 620, type: !119)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !785, line: 613, column: 19)
!4557 = distinct !DILexicalBlock(scope: !4550, file: !785, line: 613, column: 7)
!4558 = !DILocalVariable(name: "do_ro", scope: !4556, file: !785, line: 621, type: !119)
!4559 = !DILocalVariable(name: "s_ptr_idx", scope: !4560, file: !785, line: 626, type: !108)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !785, line: 625, column: 11)
!4561 = distinct !DILexicalBlock(scope: !4556, file: !785, line: 623, column: 8)
!4562 = !DILocalVariable(name: "v", scope: !4563, file: !785, line: 684, type: !103)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !785, line: 683, column: 35)
!4564 = distinct !DILexicalBlock(scope: !4557, file: !785, line: 683, column: 14)
!4565 = !DILocalVariable(name: "v", scope: !4566, file: !785, line: 691, type: !780)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !785, line: 690, column: 36)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !785, line: 690, column: 14)
!4568 = !DILocalVariable(name: "v", scope: !4569, file: !785, line: 698, type: !107)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !785, line: 697, column: 41)
!4570 = distinct !DILexicalBlock(scope: !4567, file: !785, line: 697, column: 14)
!4571 = !DILocalVariable(name: "pos", scope: !4572, file: !785, line: 762, type: !164)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !785, line: 757, column: 31)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !785, line: 757, column: 3)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !785, line: 757, column: 3)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !785, line: 756, column: 16)
!4576 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 756, column: 6)
!4577 = !DILabel(scope: !4556, name: "process_string", file: !785, line: 615)
!4578 = !DILocation(line: 0, scope: !4500)
!4579 = !DILocation(line: 251, column: 2, scope: !4500)
!4580 = !DILocation(line: 251, column: 10, scope: !4500)
!4581 = !DILocation(line: 252, column: 2, scope: !4500)
!4582 = !DILocation(line: 252, column: 10, scope: !4500)
!4583 = !DILocation(line: 263, column: 29, scope: !4500)
!4584 = !DILocation(line: 263, column: 21, scope: !4500)
!4585 = !DILocation(line: 268, column: 21, scope: !4500)
!4586 = !DILocation(line: 268, column: 19, scope: !4500)
!4587 = !DILocation(line: 273, column: 6, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 273, column: 6)
!4589 = !DILocation(line: 273, column: 26, scope: !4588)
!4590 = !DILocation(line: 273, column: 6, scope: !4500)
!4591 = !DILocation(line: 297, column: 6, scope: !4500)
!4592 = !DILocation(line: 305, column: 11, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 305, column: 6)
!4594 = !DILocation(line: 305, column: 6, scope: !4500)
!4595 = !DILocation(line: 327, column: 19, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 327, column: 6)
!4597 = !DILocation(line: 327, column: 22, scope: !4596)
!4598 = !DILocation(line: 327, column: 33, scope: !4596)
!4599 = !DILocation(line: 327, column: 50, scope: !4596)
!4600 = !DILocation(line: 327, column: 6, scope: !4500)
!4601 = !DILocation(line: 338, column: 9, scope: !4500)
!4602 = !DILocation(line: 341, column: 2, scope: !4500)
!4603 = !DILocation(line: 472, column: 8, scope: !4549)
!4604 = !DILocation(line: 473, column: 14, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !785, line: 473, column: 9)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !785, line: 472, column: 18)
!4607 = distinct !DILexicalBlock(scope: !4549, file: !785, line: 472, column: 8)
!4608 = !DILocation(line: 473, column: 9, scope: !4606)
!4609 = !DILocation(line: 479, column: 5, scope: !4606)
!4610 = !DILocation(line: 468, column: 9, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4549, file: !785, line: 468, column: 8)
!4612 = !DILocation(line: 468, column: 8, scope: !4611)
!4613 = !DILocation(line: 468, column: 15, scope: !4611)
!4614 = !DILocation(line: 468, column: 8, scope: !4549)
!4615 = distinct !{!4615, !4616, !4617}
!4616 = !DILocation(line: 343, column: 2, scope: !4500)
!4617 = !DILocation(line: 712, column: 2, scope: !4500)
!4618 = !DILocation(line: 481, column: 4, scope: !4549)
!4619 = !DILocation(line: 484, column: 12, scope: !4548)
!4620 = !DILocation(line: 485, column: 5, scope: !4548)
!4621 = !DILocation(line: 505, column: 5, scope: !4548)
!4622 = !DILocation(line: 518, column: 5, scope: !4548)
!4623 = !DILocation(line: 523, column: 5, scope: !4548)
!4624 = !DILocation(line: 532, column: 9, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4548, file: !785, line: 532, column: 9)
!4626 = !DILocation(line: 532, column: 17, scope: !4625)
!4627 = !DILocation(line: 532, column: 9, scope: !4548)
!4628 = !DILocation(line: 533, column: 10, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !785, line: 533, column: 10)
!4630 = distinct !DILexicalBlock(scope: !4625, file: !785, line: 532, column: 25)
!4631 = !DILocation(line: 533, column: 18, scope: !4629)
!4632 = !DILocation(line: 0, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4547, file: !785, line: 569, column: 9)
!4634 = !DILocation(line: 0, scope: !4547)
!4635 = !DILocation(line: 579, column: 20, scope: !4547)
!4636 = !DILocation(line: 579, column: 11, scope: !4547)
!4637 = !DILocation(line: 580, column: 9, scope: !4547)
!4638 = !DILocation(line: 582, column: 21, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !785, line: 582, column: 10)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !785, line: 580, column: 23)
!4641 = distinct !DILexicalBlock(scope: !4547, file: !785, line: 580, column: 9)
!4642 = !DILocation(line: 582, column: 28, scope: !4639)
!4643 = !DILocation(line: 582, column: 10, scope: !4640)
!4644 = !DILocation(line: 0, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !785, line: 587, column: 17)
!4646 = distinct !DILexicalBlock(scope: !4640, file: !785, line: 585, column: 10)
!4647 = !DILocation(line: 593, column: 9, scope: !4547)
!4648 = !DILocation(line: 600, column: 5, scope: !4548)
!4649 = !DILocation(line: 605, column: 18, scope: !4550)
!4650 = !DILocation(line: 605, column: 9, scope: !4550)
!4651 = !DILocation(line: 608, column: 20, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4550, file: !785, line: 608, column: 7)
!4653 = !DILocation(line: 608, column: 23, scope: !4652)
!4654 = !DILocation(line: 608, column: 34, scope: !4652)
!4655 = !DILocation(line: 608, column: 41, scope: !4652)
!4656 = !DILocation(line: 608, column: 7, scope: !4550)
!4657 = !DILocation(line: 613, column: 7, scope: !4550)
!4658 = !DILocation(line: 614, column: 8, scope: !4556)
!4659 = !DILocation(line: 614, column: 4, scope: !4556)
!4660 = !DILocation(line: 256, column: 6, scope: !4500)
!4661 = !DILocation(line: 254, column: 15, scope: !4500)
!4662 = !DILocation(line: 320, column: 7, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4593, file: !785, line: 305, column: 20)
!4664 = !DILocation(line: 615, column: 1, scope: !4556)
!4665 = !DILocation(line: 616, column: 8, scope: !4556)
!4666 = !DILocation(line: 617, column: 5, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !785, line: 616, column: 22)
!4668 = distinct !DILexicalBlock(scope: !4556, file: !785, line: 616, column: 8)
!4669 = !DILocation(line: 617, column: 25, scope: !4667)
!4670 = !DILocation(line: 618, column: 4, scope: !4667)
!4671 = !DILocation(line: 620, column: 26, scope: !4556)
!4672 = !DILocation(line: 620, column: 29, scope: !4556)
!4673 = !DILocation(line: 620, column: 17, scope: !4556)
!4674 = !DILocation(line: 620, column: 43, scope: !4556)
!4675 = !DILocation(line: 0, scope: !4556)
!4676 = !DILocation(line: 623, column: 14, scope: !4561)
!4677 = !DILocation(line: 626, column: 26, scope: !4560)
!4678 = !DILocation(line: 626, column: 37, scope: !4560)
!4679 = !DILocation(line: 0, scope: !4560)
!4680 = !DILocation(line: 634, column: 15, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4560, file: !785, line: 634, column: 9)
!4682 = !DILocation(line: 635, column: 6, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !785, line: 635, column: 6)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !785, line: 635, column: 6)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !785, line: 635, column: 6)
!4686 = distinct !DILexicalBlock(scope: !4681, file: !785, line: 634, column: 44)
!4687 = !DILocation(line: 639, column: 15, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4560, file: !785, line: 639, column: 9)
!4689 = !DILocation(line: 639, column: 9, scope: !4560)
!4690 = !DILocation(line: 640, column: 6, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !785, line: 640, column: 6)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !785, line: 640, column: 6)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !785, line: 640, column: 6)
!4694 = distinct !DILexicalBlock(scope: !4688, file: !785, line: 639, column: 43)
!4695 = !DILocation(line: 644, column: 9, scope: !4560)
!4696 = !DILocation(line: 649, column: 27, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !785, line: 644, column: 23)
!4698 = distinct !DILexicalBlock(scope: !4560, file: !785, line: 644, column: 9)
!4699 = !DILocation(line: 649, column: 6, scope: !4697)
!4700 = !DILocation(line: 649, column: 25, scope: !4697)
!4701 = !DILocation(line: 650, column: 27, scope: !4697)
!4702 = !DILocation(line: 650, column: 6, scope: !4697)
!4703 = !DILocation(line: 650, column: 25, scope: !4697)
!4704 = !DILocation(line: 651, column: 10, scope: !4697)
!4705 = !DILocation(line: 653, column: 26, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !785, line: 651, column: 17)
!4707 = distinct !DILexicalBlock(scope: !4697, file: !785, line: 651, column: 10)
!4708 = !DILocation(line: 654, column: 15, scope: !4706)
!4709 = !DILocation(line: 655, column: 6, scope: !4706)
!4710 = !DILocation(line: 656, column: 15, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4707, file: !785, line: 655, column: 13)
!4712 = !DILocation(line: 658, column: 16, scope: !4698)
!4713 = !DILocation(line: 663, column: 10, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !785, line: 658, column: 23)
!4715 = distinct !DILexicalBlock(scope: !4698, file: !785, line: 658, column: 16)
!4716 = !DILocation(line: 664, column: 5, scope: !4714)
!4717 = !DILocation(line: 664, column: 16, scope: !4715)
!4718 = !DILocation(line: 669, column: 10, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !785, line: 664, column: 28)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !785, line: 664, column: 16)
!4721 = !DILocation(line: 670, column: 5, scope: !4719)
!4722 = !DILocation(line: 675, column: 13, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4720, file: !785, line: 670, column: 12)
!4724 = !DILocation(line: 675, column: 27, scope: !4723)
!4725 = !DILocation(line: 675, column: 10, scope: !4723)
!4726 = !DILocation(line: 678, column: 10, scope: !4560)
!4727 = !DILocation(line: 680, column: 8, scope: !4556)
!4728 = !DILocation(line: 683, column: 14, scope: !4557)
!4729 = !DILocation(line: 684, column: 12, scope: !4563)
!4730 = !DILocation(line: 0, scope: !4563)
!4731 = !DILocation(line: 686, column: 8, scope: !4563)
!4732 = !DILocation(line: 687, column: 5, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !785, line: 686, column: 22)
!4734 = distinct !DILexicalBlock(scope: !4563, file: !785, line: 686, column: 8)
!4735 = !DILocation(line: 687, column: 17, scope: !4733)
!4736 = !DILocation(line: 688, column: 4, scope: !4733)
!4737 = !DILocation(line: 698, column: 18, scope: !4569)
!4738 = !DILocation(line: 0, scope: !4569)
!4739 = !DILocation(line: 700, column: 8, scope: !4569)
!4740 = !DILocation(line: 704, column: 6, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !785, line: 703, column: 12)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !785, line: 701, column: 9)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !785, line: 700, column: 22)
!4744 = distinct !DILexicalBlock(scope: !4569, file: !785, line: 700, column: 8)
!4745 = !DILocation(line: 704, column: 24, scope: !4741)
!4746 = !DILocation(line: 706, column: 4, scope: !4743)
!4747 = !DILocation(line: 709, column: 4, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !785, line: 709, column: 4)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !785, line: 709, column: 4)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !785, line: 709, column: 4)
!4751 = distinct !DILexicalBlock(scope: !4570, file: !785, line: 708, column: 10)
!4752 = !DILocation(line: 0, scope: !4564)
!4753 = !DILocation(line: 0, scope: !4550)
!4754 = !DILocation(line: 720, column: 6, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 720, column: 6)
!4756 = !DILocation(line: 720, column: 17, scope: !4755)
!4757 = !DILocation(line: 720, column: 31, scope: !4755)
!4758 = !DILocation(line: 720, column: 6, scope: !4500)
!4759 = !DILocation(line: 721, column: 3, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !785, line: 721, column: 3)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !785, line: 721, column: 3)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !785, line: 721, column: 3)
!4763 = distinct !DILexicalBlock(scope: !4755, file: !785, line: 720, column: 38)
!4764 = !DILocation(line: 729, column: 6, scope: !4500)
!4765 = !DILocation(line: 730, column: 21, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !785, line: 729, column: 20)
!4767 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 729, column: 6)
!4768 = !DILocation(line: 730, column: 27, scope: !4766)
!4769 = !DILocation(line: 730, column: 3, scope: !4766)
!4770 = !DILocation(line: 737, column: 22, scope: !4500)
!4771 = !DILocation(line: 737, column: 20, scope: !4500)
!4772 = !DILocation(line: 0, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 739, column: 6)
!4774 = !DILocation(line: 745, column: 17, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4773, file: !785, line: 743, column: 9)
!4776 = !DILocation(line: 745, column: 25, scope: !4775)
!4777 = !DILocation(line: 746, column: 17, scope: !4775)
!4778 = !DILocation(line: 746, column: 28, scope: !4775)
!4779 = !DILocation(line: 749, column: 29, scope: !4500)
!4780 = !DILocation(line: 749, column: 16, scope: !4500)
!4781 = !DILocation(line: 749, column: 27, scope: !4500)
!4782 = !DILocation(line: 756, column: 6, scope: !4576)
!4783 = !DILocation(line: 756, column: 6, scope: !4500)
!4784 = !DILocation(line: 757, column: 3, scope: !4574)
!4785 = !DILocation(line: 758, column: 10, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4572, file: !785, line: 758, column: 8)
!4787 = !DILocation(line: 758, column: 25, scope: !4786)
!4788 = !DILocation(line: 758, column: 8, scope: !4572)
!4789 = !DILocation(line: 0, scope: !4572)
!4790 = !DILocation(line: 765, column: 8, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4572, file: !785, line: 765, column: 8)
!4792 = !DILocation(line: 765, column: 19, scope: !4791)
!4793 = !DILocation(line: 765, column: 23, scope: !4791)
!4794 = !DILocation(line: 765, column: 8, scope: !4572)
!4795 = !DILocation(line: 762, column: 33, scope: !4572)
!4796 = !DILocation(line: 769, column: 8, scope: !4572)
!4797 = !DILocation(line: 769, column: 11, scope: !4572)
!4798 = !DILocation(line: 757, column: 27, scope: !4573)
!4799 = !DILocation(line: 757, column: 17, scope: !4573)
!4800 = distinct !{!4800, !4784, !4801}
!4801 = !DILocation(line: 770, column: 3, scope: !4574)
!4802 = !DILocation(line: 774, column: 16, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !785, line: 774, column: 2)
!4804 = distinct !DILexicalBlock(scope: !4500, file: !785, line: 774, column: 2)
!4805 = !DILocation(line: 774, column: 2, scope: !4804)
!4806 = !DILocation(line: 776, column: 16, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !785, line: 776, column: 7)
!4808 = distinct !DILexicalBlock(scope: !4803, file: !785, line: 774, column: 30)
!4809 = !DILocation(line: 776, column: 19, scope: !4807)
!4810 = !DILocation(line: 776, column: 34, scope: !4807)
!4811 = !DILocation(line: 776, column: 7, scope: !4808)
!4812 = !DILocation(line: 780, column: 7, scope: !4808)
!4813 = !DILocation(line: 782, column: 13, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !785, line: 780, column: 19)
!4815 = distinct !DILexicalBlock(scope: !4808, file: !785, line: 780, column: 7)
!4816 = !DILocation(line: 782, column: 8, scope: !4814)
!4817 = !DILocation(line: 782, column: 11, scope: !4814)
!4818 = !DILocation(line: 783, column: 3, scope: !4814)
!4819 = !DILocation(line: 785, column: 26, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4815, file: !785, line: 783, column: 10)
!4821 = !DILocation(line: 785, column: 41, scope: !4820)
!4822 = !DILocation(line: 785, column: 24, scope: !4820)
!4823 = !DILocation(line: 785, column: 8, scope: !4820)
!4824 = !DILocation(line: 787, column: 52, scope: !4820)
!4825 = !DILocation(line: 789, column: 11, scope: !4820)
!4826 = !DILocation(line: 789, column: 21, scope: !4820)
!4827 = !DILocation(line: 0, scope: !4815)
!4828 = !DILocation(line: 793, column: 7, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4808, file: !785, line: 793, column: 7)
!4830 = !DILocation(line: 793, column: 18, scope: !4829)
!4831 = !DILocation(line: 793, column: 22, scope: !4829)
!4832 = !DILocation(line: 793, column: 29, scope: !4829)
!4833 = !DILocation(line: 793, column: 7, scope: !4808)
!4834 = !DILocation(line: 797, column: 12, scope: !4808)
!4835 = !DILocation(line: 797, column: 7, scope: !4808)
!4836 = !DILocation(line: 797, column: 10, scope: !4808)
!4837 = !DILocation(line: 799, column: 3, scope: !4808)
!4838 = !DILocation(line: 800, column: 7, scope: !4808)
!4839 = !DILocation(line: 801, column: 2, scope: !4808)
!4840 = !DILocation(line: 338, column: 4, scope: !4500)
!4841 = !DILocation(line: 774, column: 26, scope: !4803)
!4842 = distinct !{!4842, !4805, !4843}
!4843 = !DILocation(line: 801, column: 2, scope: !4804)
!4844 = !DILocation(line: 808, column: 9, scope: !4500)
!4845 = !DILocation(line: 808, column: 2, scope: !4500)
!4846 = !DILocation(line: 813, column: 1, scope: !4500)
!4847 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !785, file: !785, line: 33, type: !4848, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4850)
!4848 = !DISubroutineType(types: !4849)
!4849 = !{!119, !336}
!4850 = !{!4851}
!4851 = !DILocalVariable(name: "addr", arg: 1, scope: !4847, file: !785, line: 33, type: !336)
!4852 = !DILocation(line: 0, scope: !4847)
!4853 = !DILocation(line: 41, column: 9, scope: !4847)
!4854 = !DILocation(line: 41, column: 2, scope: !4847)
!4855 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4856, file: !4856, line: 24, type: !4857, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4859)
!4856 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!119, !13}
!4859 = !{!4860}
!4860 = !DILocalVariable(name: "addr", arg: 1, scope: !4855, file: !4856, line: 24, type: !13)
!4861 = !DILocation(line: 0, scope: !4855)
!4862 = !DILocation(line: 49, column: 30, scope: !4855)
!4863 = !DILocation(line: 49, column: 57, scope: !4855)
!4864 = !DILocation(line: 49, column: 2, scope: !4855)
!4865 = distinct !DISubprogram(name: "cbprintf_package", scope: !785, file: !785, line: 815, type: !4866, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4868)
!4866 = !DISubroutineType(types: !4867)
!4867 = !{!103, !102, !153, !108, !336, null}
!4868 = !{!4869, !4870, !4871, !4872, !4873, !4874}
!4869 = !DILocalVariable(name: "packaged", arg: 1, scope: !4865, file: !785, line: 815, type: !102)
!4870 = !DILocalVariable(name: "len", arg: 2, scope: !4865, file: !785, line: 815, type: !153)
!4871 = !DILocalVariable(name: "flags", arg: 3, scope: !4865, file: !785, line: 815, type: !108)
!4872 = !DILocalVariable(name: "format", arg: 4, scope: !4865, file: !785, line: 816, type: !336)
!4873 = !DILocalVariable(name: "ap", scope: !4865, file: !785, line: 818, type: !4503)
!4874 = !DILocalVariable(name: "ret", scope: !4865, file: !785, line: 819, type: !103)
!4875 = !DILocation(line: 0, scope: !4865)
!4876 = !DILocation(line: 818, column: 2, scope: !4865)
!4877 = !DILocation(line: 818, column: 10, scope: !4865)
!4878 = !DILocation(line: 821, column: 2, scope: !4865)
!4879 = !DILocation(line: 822, column: 8, scope: !4865)
!4880 = !DILocation(line: 823, column: 2, scope: !4865)
!4881 = !DILocation(line: 825, column: 1, scope: !4865)
!4882 = !DILocation(line: 824, column: 2, scope: !4865)
!4883 = distinct !DISubprogram(name: "cbpprintf_external", scope: !785, file: !785, line: 827, type: !4884, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4894)
!4884 = !DISubroutineType(types: !4885)
!4885 = !{!103, !4886, !4890, !102, !102}
!4886 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4536, line: 297, baseType: !4887)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 32)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{!103, null}
!4890 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4536, line: 328, baseType: !4891)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4892, size: 32)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{!103, !4886, !102, !336, !4503}
!4894 = !{!4895, !4896, !4897, !4898, !4899, !4900, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913}
!4895 = !DILocalVariable(name: "out", arg: 1, scope: !4883, file: !785, line: 827, type: !4886)
!4896 = !DILocalVariable(name: "formatter", arg: 2, scope: !4883, file: !785, line: 828, type: !4890)
!4897 = !DILocalVariable(name: "ctx", arg: 3, scope: !4883, file: !785, line: 829, type: !102)
!4898 = !DILocalVariable(name: "packaged", arg: 4, scope: !4883, file: !785, line: 829, type: !102)
!4899 = !DILocalVariable(name: "buf", scope: !4883, file: !785, line: 831, type: !783)
!4900 = !DILocalVariable(name: "hdr", scope: !4883, file: !785, line: 832, type: !4901)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 32)
!4902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4536, line: 96, size: 64, elements: !4903)
!4903 = !{!4904, !4905}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4902, file: !4536, line: 98, baseType: !4535, size: 32)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4902, file: !4536, line: 101, baseType: !157, size: 32, offset: 32)
!4906 = !DILocalVariable(name: "s", scope: !4883, file: !785, line: 833, type: !157)
!4907 = !DILocalVariable(name: "ps", scope: !4883, file: !785, line: 833, type: !782)
!4908 = !DILocalVariable(name: "i", scope: !4883, file: !785, line: 834, type: !32)
!4909 = !DILocalVariable(name: "args_size", scope: !4883, file: !785, line: 834, type: !32)
!4910 = !DILocalVariable(name: "s_nbr", scope: !4883, file: !785, line: 834, type: !32)
!4911 = !DILocalVariable(name: "ros_nbr", scope: !4883, file: !785, line: 834, type: !32)
!4912 = !DILocalVariable(name: "rws_nbr", scope: !4883, file: !785, line: 834, type: !32)
!4913 = !DILocalVariable(name: "s_idx", scope: !4883, file: !785, line: 834, type: !32)
!4914 = !DILocation(line: 0, scope: !4883)
!4915 = !DILocation(line: 836, column: 10, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4883, file: !785, line: 836, column: 6)
!4917 = !DILocation(line: 836, column: 6, scope: !4883)
!4918 = !DILocation(line: 842, column: 28, scope: !4883)
!4919 = !DILocation(line: 842, column: 14, scope: !4883)
!4920 = !DILocation(line: 852, column: 16, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !785, line: 852, column: 2)
!4922 = distinct !DILexicalBlock(scope: !4883, file: !785, line: 852, column: 2)
!4923 = !DILocation(line: 852, column: 2, scope: !4922)
!4924 = !DILocation(line: 841, column: 28, scope: !4883)
!4925 = !DILocation(line: 841, column: 14, scope: !4883)
!4926 = !DILocation(line: 841, column: 32, scope: !4883)
!4927 = !DILocation(line: 847, column: 19, scope: !4883)
!4928 = !DILocation(line: 843, column: 28, scope: !4883)
!4929 = !DILocation(line: 843, column: 14, scope: !4883)
!4930 = !DILocation(line: 847, column: 31, scope: !4883)
!4931 = !DILocation(line: 844, column: 28, scope: !4883)
!4932 = !DILocation(line: 844, column: 14, scope: !4883)
!4933 = !DILocation(line: 847, column: 45, scope: !4883)
!4934 = !DILocation(line: 847, column: 41, scope: !4883)
!4935 = !DILocation(line: 854, column: 24, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4921, file: !785, line: 852, column: 30)
!4937 = !DILocation(line: 854, column: 11, scope: !4936)
!4938 = !DILocation(line: 855, column: 30, scope: !4936)
!4939 = !DILocation(line: 855, column: 22, scope: !4936)
!4940 = !DILocation(line: 855, column: 8, scope: !4936)
!4941 = !DILocation(line: 857, column: 7, scope: !4936)
!4942 = !DILocation(line: 859, column: 8, scope: !4936)
!4943 = !DILocation(line: 859, column: 18, scope: !4936)
!4944 = !DILocation(line: 859, column: 5, scope: !4936)
!4945 = !DILocation(line: 852, column: 26, scope: !4921)
!4946 = distinct !{!4946, !4923, !4947}
!4947 = !DILocation(line: 860, column: 2, scope: !4922)
!4948 = !DILocation(line: 863, column: 6, scope: !4883)
!4949 = !DILocation(line: 866, column: 56, scope: !4883)
!4950 = !DILocation(line: 866, column: 9, scope: !4883)
!4951 = !DILocation(line: 866, column: 2, scope: !4883)
!4952 = !DILocation(line: 867, column: 1, scope: !4883)
!4953 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !785, file: !785, line: 179, type: !4954, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4956)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{!103, !4886, !4890, !102, !336, !102}
!4956 = !{!4957, !4958, !4959, !4960, !4961, !4962}
!4957 = !DILocalVariable(name: "out", arg: 1, scope: !4953, file: !785, line: 179, type: !4886)
!4958 = !DILocalVariable(name: "formatter", arg: 2, scope: !4953, file: !785, line: 180, type: !4890)
!4959 = !DILocalVariable(name: "ctx", arg: 3, scope: !4953, file: !785, line: 181, type: !102)
!4960 = !DILocalVariable(name: "fmt", arg: 4, scope: !4953, file: !785, line: 182, type: !336)
!4961 = !DILocalVariable(name: "buf", arg: 5, scope: !4953, file: !785, line: 182, type: !102)
!4962 = !DILocalVariable(name: "u", scope: !4953, file: !785, line: 187, type: !4963)
!4963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4953, file: !785, line: 184, size: 32, elements: !4964)
!4964 = !{!4965, !4966}
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4963, file: !785, line: 185, baseType: !4503, size: 32)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4963, file: !785, line: 186, baseType: !102, size: 32)
!4967 = !DILocation(line: 0, scope: !4953)
!4968 = !DILocation(line: 191, column: 9, scope: !4953)
!4969 = !DILocation(line: 191, column: 2, scope: !4953)
!4970 = distinct !DISubprogram(name: "is_ptr", scope: !785, file: !785, line: 881, type: !4971, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !4973)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!119, !336, !103}
!4973 = !{!4974, !4975, !4976, !4977, !4978}
!4974 = !DILocalVariable(name: "fmt", arg: 1, scope: !4970, file: !785, line: 881, type: !336)
!4975 = !DILocalVariable(name: "n", arg: 2, scope: !4970, file: !785, line: 881, type: !103)
!4976 = !DILocalVariable(name: "c", scope: !4970, file: !785, line: 883, type: !158)
!4977 = !DILocalVariable(name: "mod", scope: !4970, file: !785, line: 884, type: !119)
!4978 = !DILocalVariable(name: "cnt", scope: !4970, file: !785, line: 885, type: !103)
!4979 = !DILocation(line: 0, scope: !4970)
!4980 = !DILocation(line: 887, column: 14, scope: !4970)
!4981 = !DILocation(line: 887, column: 22, scope: !4970)
!4982 = !DILocation(line: 887, column: 2, scope: !4970)
!4983 = !DILocation(line: 887, column: 18, scope: !4970)
!4984 = !DILocation(line: 888, column: 7, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4970, file: !785, line: 887, column: 31)
!4986 = !DILocation(line: 889, column: 12, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !785, line: 889, column: 8)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !785, line: 888, column: 12)
!4989 = distinct !DILexicalBlock(scope: !4985, file: !785, line: 888, column: 7)
!4990 = !DILocation(line: 889, column: 8, scope: !4988)
!4991 = !DILocation(line: 890, column: 11, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !785, line: 890, column: 9)
!4993 = distinct !DILexicalBlock(scope: !4987, file: !785, line: 889, column: 18)
!4994 = !DILocation(line: 890, column: 9, scope: !4993)
!4995 = !DILocation(line: 892, column: 16, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4992, file: !785, line: 892, column: 16)
!4997 = !DILocation(line: 892, column: 16, scope: !4992)
!4998 = !DILocation(line: 895, column: 15, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4987, file: !785, line: 895, column: 15)
!5000 = !DILocation(line: 895, column: 15, scope: !4987)
!5001 = !DILocation(line: 900, column: 9, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4985, file: !785, line: 900, column: 7)
!5003 = !DILocation(line: 900, column: 7, scope: !4985)
!5004 = distinct !{!5004, !4982, !5005}
!5005 = !DILocation(line: 903, column: 2, scope: !4970)
!5006 = !DILocation(line: 906, column: 1, scope: !4970)
!5007 = distinct !DISubprogram(name: "is_fmt_spec", scope: !785, file: !785, line: 873, type: !5008, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !5010)
!5008 = !DISubroutineType(types: !5009)
!5009 = !{!119, !158}
!5010 = !{!5011}
!5011 = !DILocalVariable(name: "c", arg: 1, scope: !5007, file: !785, line: 873, type: !158)
!5012 = !DILocation(line: 0, scope: !5007)
!5013 = !DILocation(line: 875, column: 19, scope: !5007)
!5014 = !DILocation(line: 875, column: 2, scope: !5007)
!5015 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !785, file: !785, line: 908, type: !5016, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !5022)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!103, !102, !153, !5018, !102, !108, !3506, !153}
!5018 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4536, line: 308, baseType: !5019)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 32)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{!103, !13, !153, !102}
!5022 = !{!5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5040, !5041, !5042, !5043, !5044, !5050, !5053, !5054, !5055, !5057, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5073, !5076, !5077, !5078, !5079, !5080, !5081, !5083, !5086, !5087, !5088}
!5023 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !5015, file: !785, line: 908, type: !102)
!5024 = !DILocalVariable(name: "in_len", arg: 2, scope: !5015, file: !785, line: 909, type: !153)
!5025 = !DILocalVariable(name: "cb", arg: 3, scope: !5015, file: !785, line: 910, type: !5018)
!5026 = !DILocalVariable(name: "ctx", arg: 4, scope: !5015, file: !785, line: 911, type: !102)
!5027 = !DILocalVariable(name: "flags", arg: 5, scope: !5015, file: !785, line: 912, type: !108)
!5028 = !DILocalVariable(name: "strl", arg: 6, scope: !5015, file: !785, line: 913, type: !3506)
!5029 = !DILocalVariable(name: "strl_len", arg: 7, scope: !5015, file: !785, line: 914, type: !153)
!5030 = !DILocalVariable(name: "buf", scope: !5015, file: !785, line: 918, type: !783)
!5031 = !DILocalVariable(name: "buf32", scope: !5015, file: !785, line: 919, type: !1753)
!5032 = !DILocalVariable(name: "args_size", scope: !5015, file: !785, line: 920, type: !32)
!5033 = !DILocalVariable(name: "ros_nbr", scope: !5015, file: !785, line: 920, type: !32)
!5034 = !DILocalVariable(name: "rws_nbr", scope: !5015, file: !785, line: 920, type: !32)
!5035 = !DILocalVariable(name: "fmt_present", scope: !5015, file: !785, line: 921, type: !119)
!5036 = !DILocalVariable(name: "rw_cpy", scope: !5015, file: !785, line: 922, type: !119)
!5037 = !DILocalVariable(name: "ro_cpy", scope: !5015, file: !785, line: 923, type: !119)
!5038 = !DILocalVariable(name: "in_desc", scope: !5015, file: !785, line: 924, type: !5039)
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 32)
!5040 = !DILocalVariable(name: "out_len", scope: !5015, file: !785, line: 960, type: !103)
!5041 = !DILocalVariable(name: "fmt", scope: !5015, file: !785, line: 965, type: !336)
!5042 = !DILocalVariable(name: "str_pos", scope: !5015, file: !785, line: 966, type: !783)
!5043 = !DILocalVariable(name: "strl_cnt", scope: !5015, file: !785, line: 967, type: !153)
!5044 = !DILocalVariable(name: "i", scope: !5045, file: !785, line: 973, type: !103)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !785, line: 973, column: 4)
!5046 = distinct !DILexicalBlock(scope: !5047, file: !785, line: 972, column: 15)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !785, line: 972, column: 7)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !785, line: 970, column: 18)
!5049 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 970, column: 6)
!5050 = !DILocalVariable(name: "str", scope: !5051, file: !785, line: 974, type: !336)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !785, line: 973, column: 38)
!5052 = distinct !DILexicalBlock(scope: !5045, file: !785, line: 973, column: 4)
!5053 = !DILocalVariable(name: "len", scope: !5051, file: !785, line: 975, type: !103)
!5054 = !DILocalVariable(name: "drop_ro_str_pos", scope: !5048, file: !785, line: 990, type: !119)
!5055 = !DILocalVariable(name: "i", scope: !5056, file: !785, line: 995, type: !103)
!5056 = distinct !DILexicalBlock(scope: !5048, file: !785, line: 995, column: 3)
!5057 = !DILocalVariable(name: "arg_idx", scope: !5058, file: !785, line: 996, type: !164)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !785, line: 995, column: 37)
!5059 = distinct !DILexicalBlock(scope: !5056, file: !785, line: 995, column: 3)
!5060 = !DILocalVariable(name: "arg_pos", scope: !5058, file: !785, line: 997, type: !164)
!5061 = !DILocalVariable(name: "str", scope: !5058, file: !785, line: 998, type: !336)
!5062 = !DILocalVariable(name: "is_ro", scope: !5058, file: !785, line: 999, type: !119)
!5063 = !DILocalVariable(name: "len", scope: !5058, file: !785, line: 1000, type: !103)
!5064 = !DILocalVariable(name: "out_desc", scope: !5015, file: !785, line: 1038, type: !4539)
!5065 = !DILocalVariable(name: "cpy_str_pos", scope: !5015, file: !785, line: 1040, type: !4521)
!5066 = !DILocalVariable(name: "keep_str_pos", scope: !5015, file: !785, line: 1042, type: !4521)
!5067 = !DILocalVariable(name: "scpy_cnt", scope: !5015, file: !785, line: 1043, type: !164)
!5068 = !DILocalVariable(name: "keep_cnt", scope: !5015, file: !785, line: 1044, type: !164)
!5069 = !DILocalVariable(name: "dst", scope: !5015, file: !785, line: 1045, type: !783)
!5070 = !DILocalVariable(name: "rv", scope: !5015, file: !785, line: 1046, type: !103)
!5071 = !DILocalVariable(name: "i", scope: !5072, file: !785, line: 1074, type: !103)
!5072 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 1074, column: 2)
!5073 = !DILocalVariable(name: "arg_idx", scope: !5074, file: !785, line: 1075, type: !164)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !785, line: 1074, column: 36)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !785, line: 1074, column: 2)
!5076 = !DILocalVariable(name: "arg_pos", scope: !5074, file: !785, line: 1076, type: !164)
!5077 = !DILocalVariable(name: "str", scope: !5074, file: !785, line: 1077, type: !336)
!5078 = !DILocalVariable(name: "is_ro", scope: !5074, file: !785, line: 1078, type: !119)
!5079 = !DILocalVariable(name: "in_desc_backup", scope: !5015, file: !785, line: 1114, type: !4539)
!5080 = !DILocalVariable(name: "strs_len", scope: !5015, file: !785, line: 1134, type: !153)
!5081 = !DILocalVariable(name: "i", scope: !5082, file: !785, line: 1143, type: !103)
!5082 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 1143, column: 2)
!5083 = !DILocalVariable(name: "loc", scope: !5084, file: !785, line: 1144, type: !164)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !785, line: 1143, column: 37)
!5085 = distinct !DILexicalBlock(scope: !5082, file: !785, line: 1143, column: 2)
!5086 = !DILocalVariable(name: "str", scope: !5084, file: !785, line: 1145, type: !336)
!5087 = !DILocalVariable(name: "str_len", scope: !5084, file: !785, line: 1146, type: !177)
!5088 = !DILabel(scope: !5089, name: "calculate_string_length", file: !785, line: 1021)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !785, line: 1020, column: 56)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !785, line: 1020, column: 15)
!5091 = distinct !DILexicalBlock(scope: !5058, file: !785, line: 1014, column: 8)
!5092 = !DILocation(line: 0, scope: !5015)
!5093 = !DILocation(line: 916, column: 2, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !785, line: 916, column: 2)
!5095 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 916, column: 2)
!5096 = !DILocation(line: 916, column: 2, scope: !5095)
!5097 = !DILocation(line: 916, column: 2, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !785, line: 916, column: 2)
!5099 = !DILocation(line: 919, column: 20, scope: !5015)
!5100 = !DILocation(line: 921, column: 27, scope: !5015)
!5101 = !DILocation(line: 921, column: 21, scope: !5015)
!5102 = !DILocation(line: 926, column: 18, scope: !5015)
!5103 = !DILocation(line: 926, column: 11, scope: !5015)
!5104 = !DILocation(line: 926, column: 34, scope: !5015)
!5105 = !DILocation(line: 931, column: 21, scope: !5015)
!5106 = !DILocation(line: 931, column: 12, scope: !5015)
!5107 = !DILocation(line: 932, column: 11, scope: !5015)
!5108 = !DILocation(line: 932, column: 19, scope: !5015)
!5109 = !DILocation(line: 938, column: 21, scope: !5015)
!5110 = !DILocation(line: 938, column: 12, scope: !5015)
!5111 = !DILocation(line: 939, column: 19, scope: !5015)
!5112 = !DILocation(line: 939, column: 23, scope: !5015)
!5113 = !DILocation(line: 946, column: 14, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 946, column: 6)
!5115 = !DILocation(line: 947, column: 7, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !785, line: 947, column: 7)
!5117 = distinct !DILexicalBlock(scope: !5114, file: !785, line: 946, column: 26)
!5118 = !DILocation(line: 947, column: 7, scope: !5117)
!5119 = !DILocation(line: 948, column: 4, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !785, line: 947, column: 11)
!5121 = !DILocation(line: 949, column: 3, scope: !5120)
!5122 = !DILocation(line: 958, column: 23, scope: !5015)
!5123 = !DILocation(line: 958, column: 14, scope: !5015)
!5124 = !DILocation(line: 958, column: 27, scope: !5015)
!5125 = !DILocation(line: 965, column: 41, scope: !5015)
!5126 = !DILocation(line: 965, column: 20, scope: !5015)
!5127 = !DILocation(line: 966, column: 22, scope: !5015)
!5128 = !DILocation(line: 970, column: 9, scope: !5049)
!5129 = !DILocation(line: 970, column: 6, scope: !5015)
!5130 = !DILocation(line: 972, column: 7, scope: !5048)
!5131 = !DILocation(line: 0, scope: !5045)
!5132 = !DILocation(line: 973, column: 4, scope: !5045)
!5133 = !DILocation(line: 974, column: 46, scope: !5051)
!5134 = !DILocation(line: 974, column: 40, scope: !5051)
!5135 = !DILocation(line: 974, column: 23, scope: !5051)
!5136 = !DILocation(line: 0, scope: !5051)
!5137 = !DILocation(line: 975, column: 15, scope: !5051)
!5138 = !DILocation(line: 978, column: 14, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5051, file: !785, line: 978, column: 9)
!5140 = !DILocation(line: 979, column: 25, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5139, file: !785, line: 978, column: 38)
!5142 = !DILocation(line: 979, column: 19, scope: !5141)
!5143 = !DILocation(line: 979, column: 6, scope: !5141)
!5144 = !DILocation(line: 979, column: 23, scope: !5141)
!5145 = !DILocation(line: 980, column: 5, scope: !5141)
!5146 = !DILocation(line: 981, column: 13, scope: !5051)
!5147 = !DILocation(line: 982, column: 12, scope: !5051)
!5148 = !DILocation(line: 973, column: 34, scope: !5052)
!5149 = !DILocation(line: 973, column: 22, scope: !5052)
!5150 = distinct !{!5150, !5132, !5151}
!5151 = !DILocation(line: 983, column: 4, scope: !5045)
!5152 = !DILocation(line: 985, column: 16, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5154, file: !785, line: 985, column: 8)
!5154 = distinct !DILexicalBlock(scope: !5047, file: !785, line: 984, column: 10)
!5155 = !DILocation(line: 967, column: 9, scope: !5015)
!5156 = !DILocation(line: 971, column: 11, scope: !5048)
!5157 = !DILocation(line: 0, scope: !5048)
!5158 = !DILocation(line: 0, scope: !5056)
!5159 = !DILocation(line: 995, column: 21, scope: !5059)
!5160 = !DILocation(line: 995, column: 3, scope: !5056)
!5161 = !DILocation(line: 990, column: 34, scope: !5048)
!5162 = !DILocation(line: 990, column: 26, scope: !5048)
!5163 = !DILocation(line: 996, column: 30, scope: !5058)
!5164 = !DILocation(line: 0, scope: !5058)
!5165 = !DILocation(line: 997, column: 30, scope: !5058)
!5166 = !DILocation(line: 997, column: 22, scope: !5058)
!5167 = !DILocation(line: 998, column: 39, scope: !5058)
!5168 = !DILocation(line: 998, column: 22, scope: !5058)
!5169 = !DILocation(line: 999, column: 17, scope: !5058)
!5170 = !DILocation(line: 1002, column: 20, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5058, file: !785, line: 1002, column: 8)
!5172 = !DILocation(line: 996, column: 22, scope: !5058)
!5173 = !DILocation(line: 1002, column: 35, scope: !5171)
!5174 = !DILocation(line: 1002, column: 23, scope: !5171)
!5175 = !DILocation(line: 1002, column: 8, scope: !5058)
!5176 = !DILocation(line: 1003, column: 5, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !785, line: 1003, column: 5)
!5178 = distinct !DILexicalBlock(scope: !5179, file: !785, line: 1003, column: 5)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !785, line: 1003, column: 5)
!5180 = distinct !DILexicalBlock(scope: !5181, file: !785, line: 1003, column: 5)
!5181 = distinct !DILexicalBlock(scope: !5171, file: !785, line: 1002, column: 45)
!5182 = !DILocation(line: 1010, column: 13, scope: !5181)
!5183 = !DILocation(line: 1011, column: 5, scope: !5181)
!5184 = !DILocation(line: 1014, column: 8, scope: !5058)
!5185 = !DILocation(line: 1015, column: 9, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5091, file: !785, line: 1014, column: 15)
!5187 = !DILocation(line: 1018, column: 14, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !785, line: 1017, column: 12)
!5189 = distinct !DILexicalBlock(scope: !5186, file: !785, line: 1015, column: 9)
!5190 = !DILocation(line: 1020, column: 4, scope: !5186)
!5191 = !DILocation(line: 1020, column: 15, scope: !5091)
!5192 = !DILocation(line: 1021, column: 1, scope: !5089)
!5193 = !DILocation(line: 1022, column: 11, scope: !5089)
!5194 = !DILocation(line: 1025, column: 14, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5089, file: !785, line: 1025, column: 9)
!5196 = !DILocation(line: 1026, column: 25, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5195, file: !785, line: 1025, column: 38)
!5198 = !DILocation(line: 1026, column: 19, scope: !5197)
!5199 = !DILocation(line: 1026, column: 6, scope: !5197)
!5200 = !DILocation(line: 1026, column: 23, scope: !5197)
!5201 = !DILocation(line: 1027, column: 5, scope: !5197)
!5202 = !DILocation(line: 1031, column: 21, scope: !5089)
!5203 = !DILocation(line: 1031, column: 13, scope: !5089)
!5204 = !DILocation(line: 1032, column: 4, scope: !5089)
!5205 = !DILocation(line: 995, column: 33, scope: !5059)
!5206 = distinct !{!5206, !5160, !5207}
!5207 = !DILocation(line: 1033, column: 3, scope: !5056)
!5208 = !DILocation(line: 1040, column: 10, scope: !5015)
!5209 = !DILocation(line: 1042, column: 10, scope: !5015)
!5210 = !DILocation(line: 1052, column: 6, scope: !5015)
!5211 = !DILocation(line: 1055, column: 9, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5213, file: !785, line: 1052, column: 14)
!5213 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 1052, column: 6)
!5214 = !DILocation(line: 1056, column: 2, scope: !5212)
!5215 = !DILocation(line: 1056, column: 21, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5213, file: !785, line: 1056, column: 13)
!5217 = !DILocation(line: 1066, column: 3, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !785, line: 1065, column: 11)
!5219 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 1065, column: 6)
!5220 = !DILocation(line: 1067, column: 2, scope: !5218)
!5221 = !DILocation(line: 1068, column: 10, scope: !5015)
!5222 = !DILocation(line: 0, scope: !5072)
!5223 = !DILocation(line: 1074, column: 20, scope: !5075)
!5224 = !DILocation(line: 1074, column: 2, scope: !5072)
!5225 = !DILocation(line: 1110, column: 24, scope: !5015)
!5226 = !DILocation(line: 1053, column: 12, scope: !5212)
!5227 = !DILocation(line: 1054, column: 12, scope: !5212)
!5228 = !DILocation(line: 1108, column: 30, scope: !5015)
!5229 = !DILocation(line: 1108, column: 40, scope: !5015)
!5230 = !DILocation(line: 1108, column: 38, scope: !5015)
!5231 = !DILocation(line: 1109, column: 31, scope: !5015)
!5232 = !DILocation(line: 1109, column: 24, scope: !5015)
!5233 = !DILocation(line: 1110, column: 31, scope: !5015)
!5234 = !DILocation(line: 1114, column: 31, scope: !5015)
!5235 = !DILocation(line: 1114, column: 48, scope: !5015)
!5236 = !DILocation(line: 1115, column: 13, scope: !5015)
!5237 = !DILocation(line: 1118, column: 7, scope: !5015)
!5238 = !DILocation(line: 1119, column: 9, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 1119, column: 6)
!5240 = !DILocation(line: 1119, column: 6, scope: !5015)
!5241 = !DILocation(line: 1075, column: 29, scope: !5074)
!5242 = !DILocation(line: 1075, column: 21, scope: !5074)
!5243 = !DILocation(line: 0, scope: !5074)
!5244 = !DILocation(line: 1076, column: 29, scope: !5074)
!5245 = !DILocation(line: 1076, column: 21, scope: !5074)
!5246 = !DILocation(line: 1077, column: 38, scope: !5074)
!5247 = !DILocation(line: 1077, column: 21, scope: !5074)
!5248 = !DILocation(line: 1078, column: 16, scope: !5074)
!5249 = !DILocation(line: 1080, column: 19, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5074, file: !785, line: 1080, column: 7)
!5251 = !DILocation(line: 1080, column: 34, scope: !5250)
!5252 = !DILocation(line: 1080, column: 22, scope: !5250)
!5253 = !DILocation(line: 1080, column: 7, scope: !5074)
!5254 = !DILocation(line: 1084, column: 7, scope: !5074)
!5255 = !DILocation(line: 1085, column: 8, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !785, line: 1084, column: 14)
!5257 = distinct !DILexicalBlock(scope: !5074, file: !785, line: 1084, column: 7)
!5258 = !DILocation(line: 1086, column: 5, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !785, line: 1086, column: 5)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !785, line: 1086, column: 5)
!5261 = distinct !DILexicalBlock(scope: !5262, file: !785, line: 1085, column: 49)
!5262 = distinct !DILexicalBlock(scope: !5256, file: !785, line: 1085, column: 8)
!5263 = !DILocation(line: 1086, column: 5, scope: !5260)
!5264 = !DILocation(line: 1086, column: 5, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5259, file: !785, line: 1086, column: 5)
!5266 = !DILocation(line: 1087, column: 25, scope: !5261)
!5267 = !DILocation(line: 1087, column: 5, scope: !5261)
!5268 = !DILocation(line: 1088, column: 4, scope: !5261)
!5269 = !DILocation(line: 1088, column: 15, scope: !5262)
!5270 = !DILocation(line: 1089, column: 5, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !785, line: 1089, column: 5)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !785, line: 1089, column: 5)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !785, line: 1088, column: 61)
!5274 = distinct !DILexicalBlock(scope: !5262, file: !785, line: 1088, column: 15)
!5275 = !DILocation(line: 1089, column: 5, scope: !5272)
!5276 = !DILocation(line: 1089, column: 5, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5271, file: !785, line: 1089, column: 5)
!5278 = !DILocation(line: 1090, column: 26, scope: !5273)
!5279 = !DILocation(line: 1090, column: 5, scope: !5273)
!5280 = !DILocation(line: 1091, column: 4, scope: !5273)
!5281 = !DILocation(line: 1095, column: 8, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5257, file: !785, line: 1094, column: 10)
!5283 = !DILocation(line: 1096, column: 5, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !785, line: 1096, column: 5)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !785, line: 1096, column: 5)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !785, line: 1095, column: 49)
!5287 = distinct !DILexicalBlock(scope: !5282, file: !785, line: 1095, column: 8)
!5288 = !DILocation(line: 1096, column: 5, scope: !5285)
!5289 = !DILocation(line: 1096, column: 5, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5284, file: !785, line: 1096, column: 5)
!5291 = !DILocation(line: 1097, column: 25, scope: !5286)
!5292 = !DILocation(line: 1097, column: 5, scope: !5286)
!5293 = !DILocation(line: 1098, column: 4, scope: !5286)
!5294 = !DILocation(line: 1099, column: 5, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !785, line: 1099, column: 5)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !785, line: 1099, column: 5)
!5297 = distinct !DILexicalBlock(scope: !5287, file: !785, line: 1098, column: 11)
!5298 = !DILocation(line: 1099, column: 5, scope: !5296)
!5299 = !DILocation(line: 1099, column: 5, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5295, file: !785, line: 1099, column: 5)
!5301 = !DILocation(line: 1100, column: 26, scope: !5297)
!5302 = !DILocation(line: 1100, column: 5, scope: !5297)
!5303 = !DILocation(line: 1100, column: 30, scope: !5297)
!5304 = !DILocation(line: 1101, column: 26, scope: !5297)
!5305 = !DILocation(line: 1101, column: 5, scope: !5297)
!5306 = !DILocation(line: 0, scope: !5257)
!5307 = !DILocation(line: 1074, column: 32, scope: !5075)
!5308 = distinct !{!5308, !5224, !5309}
!5309 = !DILocation(line: 1104, column: 2, scope: !5072)
!5310 = !DILocation(line: 1124, column: 13, scope: !5015)
!5311 = !DILocation(line: 1127, column: 10, scope: !5015)
!5312 = !DILocation(line: 1127, column: 7, scope: !5015)
!5313 = !DILocation(line: 1128, column: 9, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 1128, column: 6)
!5315 = !DILocation(line: 1128, column: 6, scope: !5015)
!5316 = !DILocation(line: 1134, column: 27, scope: !5015)
!5317 = !DILocation(line: 1136, column: 7, scope: !5015)
!5318 = !DILocation(line: 1137, column: 9, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5015, file: !785, line: 1137, column: 6)
!5320 = !DILocation(line: 1137, column: 6, scope: !5015)
!5321 = !DILocation(line: 1131, column: 10, scope: !5015)
!5322 = !DILocation(line: 1140, column: 10, scope: !5015)
!5323 = !DILocation(line: 0, scope: !5082)
!5324 = !DILocation(line: 1143, column: 20, scope: !5085)
!5325 = !DILocation(line: 1143, column: 2, scope: !5082)
!5326 = !DILocation(line: 1144, column: 3, scope: !5084)
!5327 = !DILocation(line: 1144, column: 17, scope: !5084)
!5328 = !DILocation(line: 0, scope: !5084)
!5329 = !DILocation(line: 1144, column: 11, scope: !5084)
!5330 = !DILocation(line: 1145, column: 38, scope: !5084)
!5331 = !DILocation(line: 1145, column: 21, scope: !5084)
!5332 = !DILocation(line: 1146, column: 22, scope: !5084)
!5333 = !DILocation(line: 1146, column: 29, scope: !5084)
!5334 = !DILocation(line: 1148, column: 8, scope: !5084)
!5335 = !DILocation(line: 1149, column: 10, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5084, file: !785, line: 1149, column: 7)
!5337 = !DILocation(line: 1149, column: 7, scope: !5084)
!5338 = !DILocation(line: 1154, column: 8, scope: !5084)
!5339 = !DILocation(line: 1155, column: 10, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5084, file: !785, line: 1155, column: 7)
!5341 = !DILocation(line: 1155, column: 7, scope: !5084)
!5342 = !DILocation(line: 1159, column: 2, scope: !5085)
!5343 = !DILocation(line: 1152, column: 11, scope: !5084)
!5344 = !DILocation(line: 1158, column: 11, scope: !5084)
!5345 = !DILocation(line: 1143, column: 33, scope: !5085)
!5346 = distinct !{!5346, !5325, !5347}
!5347 = !DILocation(line: 1159, column: 2, scope: !5082)
!5348 = !DILocation(line: 1162, column: 8, scope: !5015)
!5349 = !DILocation(line: 1164, column: 2, scope: !5015)
!5350 = !DILocation(line: 1165, column: 1, scope: !5015)
!5351 = distinct !DISubprogram(name: "get_package_len", scope: !785, file: !785, line: 196, type: !5352, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !5354)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!153, !102}
!5354 = !{!5355, !5356, !5357, !5358, !5359, !5360, !5361}
!5355 = !DILocalVariable(name: "packaged", arg: 1, scope: !5351, file: !785, line: 196, type: !102)
!5356 = !DILocalVariable(name: "buf", scope: !5351, file: !785, line: 200, type: !783)
!5357 = !DILocalVariable(name: "start", scope: !5351, file: !785, line: 201, type: !783)
!5358 = !DILocalVariable(name: "args_size", scope: !5351, file: !785, line: 202, type: !32)
!5359 = !DILocalVariable(name: "s_nbr", scope: !5351, file: !785, line: 202, type: !32)
!5360 = !DILocalVariable(name: "ros_nbr", scope: !5351, file: !785, line: 202, type: !32)
!5361 = !DILocalVariable(name: "i", scope: !5362, file: !785, line: 215, type: !103)
!5362 = distinct !DILexicalBlock(scope: !5351, file: !785, line: 215, column: 2)
!5363 = !DILocation(line: 0, scope: !5351)
!5364 = !DILocation(line: 198, column: 2, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5366, file: !785, line: 198, column: 2)
!5366 = distinct !DILexicalBlock(scope: !5351, file: !785, line: 198, column: 2)
!5367 = !DILocation(line: 198, column: 2, scope: !5366)
!5368 = !DILocation(line: 198, column: 2, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5365, file: !785, line: 198, column: 2)
!5370 = !DILocation(line: 204, column: 14, scope: !5351)
!5371 = !DILocation(line: 204, column: 21, scope: !5351)
!5372 = !DILocation(line: 205, column: 14, scope: !5351)
!5373 = !DILocation(line: 206, column: 14, scope: !5351)
!5374 = !DILocation(line: 209, column: 6, scope: !5351)
!5375 = !DILocation(line: 212, column: 6, scope: !5351)
!5376 = !DILocation(line: 0, scope: !5362)
!5377 = !DILocation(line: 215, column: 20, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5362, file: !785, line: 215, column: 2)
!5379 = !DILocation(line: 215, column: 2, scope: !5362)
!5380 = !DILocation(line: 220, column: 33, scope: !5351)
!5381 = !DILocation(line: 220, column: 2, scope: !5351)
!5382 = !DILocation(line: 216, column: 6, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !785, line: 215, column: 34)
!5384 = !DILocation(line: 217, column: 10, scope: !5383)
!5385 = !DILocation(line: 217, column: 36, scope: !5383)
!5386 = !DILocation(line: 217, column: 7, scope: !5383)
!5387 = !DILocation(line: 215, column: 30, scope: !5378)
!5388 = distinct !{!5388, !5379, !5389}
!5389 = !DILocation(line: 218, column: 2, scope: !5362)
!5390 = distinct !DISubprogram(name: "append_string", scope: !785, file: !785, line: 223, type: !5391, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !770, retainedNodes: !5393)
!5391 = !DISubroutineType(types: !5392)
!5392 = !{!103, !5018, !102, !336, !177}
!5393 = !{!5394, !5395, !5396, !5397}
!5394 = !DILocalVariable(name: "cb", arg: 1, scope: !5390, file: !785, line: 223, type: !5018)
!5395 = !DILocalVariable(name: "ctx", arg: 2, scope: !5390, file: !785, line: 223, type: !102)
!5396 = !DILocalVariable(name: "str", arg: 3, scope: !5390, file: !785, line: 223, type: !336)
!5397 = !DILocalVariable(name: "strl", arg: 4, scope: !5390, file: !785, line: 223, type: !177)
!5398 = !DILocation(line: 0, scope: !5390)
!5399 = !DILocation(line: 225, column: 9, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5390, file: !785, line: 225, column: 6)
!5401 = !DILocation(line: 225, column: 6, scope: !5390)
!5402 = !DILocation(line: 226, column: 14, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5400, file: !785, line: 225, column: 18)
!5404 = !DILocation(line: 226, column: 12, scope: !5403)
!5405 = !DILocation(line: 226, column: 3, scope: !5403)
!5406 = !DILocation(line: 229, column: 14, scope: !5390)
!5407 = !DILocation(line: 229, column: 9, scope: !5390)
!5408 = !DILocation(line: 229, column: 27, scope: !5390)
!5409 = !DILocation(line: 229, column: 39, scope: !5390)
!5410 = !DILocation(line: 230, column: 17, scope: !5390)
!5411 = !DILocation(line: 230, column: 9, scope: !5390)
!5412 = !DILocation(line: 230, column: 2, scope: !5390)
!5413 = !DILocation(line: 231, column: 1, scope: !5390)
!5414 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !798, file: !798, line: 45, type: !800, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5415)
!5415 = !{!5416}
!5416 = !DILocalVariable(name: "c", arg: 1, scope: !5414, file: !798, line: 45, type: !103)
!5417 = !DILocation(line: 0, scope: !5414)
!5418 = !DILocation(line: 50, column: 2, scope: !5414)
!5419 = distinct !DISubprogram(name: "__printk_hook_install", scope: !798, file: !798, line: 63, type: !5420, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5422)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{null, !799}
!5422 = !{!5423}
!5423 = !DILocalVariable(name: "fn", arg: 1, scope: !5419, file: !798, line: 63, type: !799)
!5424 = !DILocation(line: 0, scope: !5419)
!5425 = !DILocation(line: 65, column: 12, scope: !5419)
!5426 = !DILocation(line: 66, column: 1, scope: !5419)
!5427 = distinct !DISubprogram(name: "__printk_get_hook", scope: !798, file: !798, line: 76, type: !5428, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !2953)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!102}
!5430 = !DILocation(line: 78, column: 9, scope: !5427)
!5431 = !DILocation(line: 78, column: 2, scope: !5427)
!5432 = distinct !DISubprogram(name: "vprintk", scope: !798, file: !798, line: 113, type: !5433, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5441)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{null, !336, !5435}
!5435 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4504, line: 99, baseType: !5436)
!5436 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4504, line: 40, baseType: !5437)
!5437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !798, baseType: !5438)
!5438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5439)
!5439 = !{!5440}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5438, file: !798, line: 79, baseType: !102, size: 32)
!5441 = !{!5442, !5443, !5444}
!5442 = !DILocalVariable(name: "fmt", arg: 1, scope: !5432, file: !798, line: 113, type: !336)
!5443 = !DILocalVariable(name: "ap", arg: 2, scope: !5432, file: !798, line: 113, type: !5435)
!5444 = !DILocalVariable(name: "ctx", scope: !5445, file: !798, line: 121, type: !5447)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !798, line: 120, column: 27)
!5446 = distinct !DILexicalBlock(scope: !5432, file: !798, line: 120, column: 6)
!5447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !798, line: 81, size: 32, elements: !5448)
!5448 = !{!5449, !5450}
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5447, file: !798, line: 85, baseType: !32, size: 32)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5447, file: !798, line: 86, baseType: !5451, offset: 32)
!5451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, elements: !3504)
!5452 = !DILocation(line: 0, scope: !5432)
!5453 = !DILocation(line: 148, column: 3, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5446, file: !798, line: 138, column: 9)
!5455 = !DILocation(line: 155, column: 1, scope: !5432)
!5456 = distinct !DISubprogram(name: "char_out", scope: !798, file: !798, line: 107, type: !5457, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5459)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{!103, !103, !102}
!5459 = !{!5460, !5461}
!5460 = !DILocalVariable(name: "c", arg: 1, scope: !5456, file: !798, line: 107, type: !103)
!5461 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5456, file: !798, line: 107, type: !102)
!5462 = !DILocation(line: 0, scope: !5456)
!5463 = !DILocation(line: 110, column: 9, scope: !5456)
!5464 = !DILocation(line: 110, column: 2, scope: !5456)
!5465 = distinct !DISubprogram(name: "cbvprintf", scope: !4536, file: !4536, line: 739, type: !5466, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5468)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!103, !4886, !102, !336, !5435}
!5468 = !{!5469, !5470, !5471, !5472}
!5469 = !DILocalVariable(name: "out", arg: 1, scope: !5465, file: !4536, line: 739, type: !4886)
!5470 = !DILocalVariable(name: "ctx", arg: 2, scope: !5465, file: !4536, line: 739, type: !102)
!5471 = !DILocalVariable(name: "format", arg: 3, scope: !5465, file: !4536, line: 739, type: !336)
!5472 = !DILocalVariable(name: "ap", arg: 4, scope: !5465, file: !4536, line: 739, type: !5435)
!5473 = !DILocation(line: 0, scope: !5465)
!5474 = !DILocation(line: 741, column: 9, scope: !5465)
!5475 = !DILocation(line: 741, column: 2, scope: !5465)
!5476 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !798, file: !798, line: 157, type: !5477, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5479)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{null, !157, !153}
!5479 = !{!5480, !5481, !5482}
!5480 = !DILocalVariable(name: "c", arg: 1, scope: !5476, file: !798, line: 157, type: !157)
!5481 = !DILocalVariable(name: "n", arg: 2, scope: !5476, file: !798, line: 157, type: !153)
!5482 = !DILocalVariable(name: "i", scope: !5476, file: !798, line: 159, type: !153)
!5483 = !DILocation(line: 0, scope: !5476)
!5484 = !DILocation(line: 164, column: 16, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !798, line: 164, column: 2)
!5486 = distinct !DILexicalBlock(scope: !5476, file: !798, line: 164, column: 2)
!5487 = !DILocation(line: 164, column: 2, scope: !5486)
!5488 = !DILocation(line: 165, column: 3, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !798, line: 164, column: 26)
!5490 = !DILocation(line: 165, column: 13, scope: !5489)
!5491 = !DILocation(line: 164, column: 22, scope: !5485)
!5492 = distinct !{!5492, !5487, !5493}
!5493 = !DILocation(line: 166, column: 2, scope: !5486)
!5494 = !DILocation(line: 171, column: 1, scope: !5476)
!5495 = distinct !DISubprogram(name: "printk", scope: !798, file: !798, line: 203, type: !5496, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5498)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{null, !336, null}
!5498 = !{!5499, !5500}
!5499 = !DILocalVariable(name: "fmt", arg: 1, scope: !5495, file: !798, line: 203, type: !336)
!5500 = !DILocalVariable(name: "ap", scope: !5495, file: !798, line: 205, type: !5435)
!5501 = !DILocation(line: 0, scope: !5495)
!5502 = !DILocation(line: 205, column: 2, scope: !5495)
!5503 = !DILocation(line: 205, column: 10, scope: !5495)
!5504 = !DILocation(line: 207, column: 2, scope: !5495)
!5505 = !DILocation(line: 209, column: 2, scope: !5495)
!5506 = !DILocation(line: 211, column: 2, scope: !5495)
!5507 = !DILocation(line: 212, column: 1, scope: !5495)
!5508 = distinct !DISubprogram(name: "snprintk", scope: !798, file: !798, line: 239, type: !5509, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5511)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!103, !157, !153, !336, null}
!5511 = !{!5512, !5513, !5514, !5515, !5516}
!5512 = !DILocalVariable(name: "str", arg: 1, scope: !5508, file: !798, line: 239, type: !157)
!5513 = !DILocalVariable(name: "size", arg: 2, scope: !5508, file: !798, line: 239, type: !153)
!5514 = !DILocalVariable(name: "fmt", arg: 3, scope: !5508, file: !798, line: 239, type: !336)
!5515 = !DILocalVariable(name: "ap", scope: !5508, file: !798, line: 241, type: !5435)
!5516 = !DILocalVariable(name: "ret", scope: !5508, file: !798, line: 242, type: !103)
!5517 = !DILocation(line: 0, scope: !5508)
!5518 = !DILocation(line: 241, column: 2, scope: !5508)
!5519 = !DILocation(line: 241, column: 10, scope: !5508)
!5520 = !DILocation(line: 244, column: 2, scope: !5508)
!5521 = !DILocation(line: 245, column: 8, scope: !5508)
!5522 = !DILocation(line: 246, column: 2, scope: !5508)
!5523 = !DILocation(line: 249, column: 1, scope: !5508)
!5524 = !DILocation(line: 248, column: 2, scope: !5508)
!5525 = distinct !DISubprogram(name: "vsnprintk", scope: !798, file: !798, line: 251, type: !5526, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5528)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!103, !157, !153, !336, !5435}
!5528 = !{!5529, !5530, !5531, !5532, !5533}
!5529 = !DILocalVariable(name: "str", arg: 1, scope: !5525, file: !798, line: 251, type: !157)
!5530 = !DILocalVariable(name: "size", arg: 2, scope: !5525, file: !798, line: 251, type: !153)
!5531 = !DILocalVariable(name: "fmt", arg: 3, scope: !5525, file: !798, line: 251, type: !336)
!5532 = !DILocalVariable(name: "ap", arg: 4, scope: !5525, file: !798, line: 251, type: !5435)
!5533 = !DILocalVariable(name: "ctx", scope: !5525, file: !798, line: 253, type: !5534)
!5534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !798, line: 217, size: 96, elements: !5535)
!5535 = !{!5536, !5537, !5538}
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5534, file: !798, line: 218, baseType: !157, size: 32)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5534, file: !798, line: 219, baseType: !103, size: 32, offset: 32)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5534, file: !798, line: 220, baseType: !103, size: 32, offset: 64)
!5539 = !DILocation(line: 0, scope: !5525)
!5540 = !DILocation(line: 253, column: 2, scope: !5525)
!5541 = !DILocation(line: 253, column: 21, scope: !5525)
!5542 = !DILocation(line: 253, column: 27, scope: !5525)
!5543 = !DILocation(line: 255, column: 2, scope: !5525)
!5544 = !DILocation(line: 257, column: 10, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5525, file: !798, line: 257, column: 6)
!5546 = !DILocation(line: 257, column: 22, scope: !5545)
!5547 = !DILocation(line: 257, column: 16, scope: !5545)
!5548 = !DILocation(line: 257, column: 6, scope: !5525)
!5549 = !DILocation(line: 258, column: 3, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5545, file: !798, line: 257, column: 27)
!5551 = !DILocation(line: 258, column: 18, scope: !5550)
!5552 = !DILocation(line: 259, column: 2, scope: !5550)
!5553 = !DILocation(line: 262, column: 1, scope: !5525)
!5554 = !DILocation(line: 261, column: 2, scope: !5525)
!5555 = distinct !DISubprogram(name: "str_out", scope: !798, file: !798, line: 223, type: !5556, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !794, retainedNodes: !5559)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{!103, !103, !5558}
!5558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5534, size: 32)
!5559 = !{!5560, !5561}
!5560 = !DILocalVariable(name: "c", arg: 1, scope: !5555, file: !798, line: 223, type: !103)
!5561 = !DILocalVariable(name: "ctx", arg: 2, scope: !5555, file: !798, line: 223, type: !5558)
!5562 = !DILocation(line: 0, scope: !5555)
!5563 = !DILocation(line: 225, column: 11, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5555, file: !798, line: 225, column: 6)
!5565 = !DILocation(line: 225, column: 15, scope: !5564)
!5566 = !DILocation(line: 0, scope: !5564)
!5567 = !DILocation(line: 225, column: 23, scope: !5564)
!5568 = !DILocation(line: 225, column: 45, scope: !5564)
!5569 = !DILocation(line: 225, column: 37, scope: !5564)
!5570 = !DILocation(line: 225, column: 6, scope: !5555)
!5571 = !DILocation(line: 226, column: 8, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5564, file: !798, line: 225, column: 50)
!5573 = !DILocation(line: 226, column: 13, scope: !5572)
!5574 = !DILocation(line: 227, column: 3, scope: !5572)
!5575 = !DILocation(line: 230, column: 29, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5555, file: !798, line: 230, column: 6)
!5577 = !DILocation(line: 230, column: 17, scope: !5576)
!5578 = !DILocation(line: 230, column: 6, scope: !5555)
!5579 = !DILocation(line: 231, column: 22, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !798, line: 230, column: 34)
!5581 = !DILocation(line: 231, column: 3, scope: !5580)
!5582 = !DILocation(line: 231, column: 26, scope: !5580)
!5583 = !DILocation(line: 232, column: 2, scope: !5580)
!5584 = !DILocation(line: 233, column: 28, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5576, file: !798, line: 232, column: 9)
!5586 = !DILocation(line: 233, column: 22, scope: !5585)
!5587 = !DILocation(line: 233, column: 3, scope: !5585)
!5588 = !DILocation(line: 233, column: 26, scope: !5585)
!5589 = !DILocation(line: 237, column: 1, scope: !5555)
!5590 = distinct !DISubprogram(name: "z_thread_entry", scope: !5591, file: !5591, line: 30, type: !5592, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3472, retainedNodes: !5594)
!5591 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5592 = !DISubroutineType(types: !5593)
!5593 = !{null, !320, !102, !102, !102}
!5594 = !{!5595, !5596, !5597, !5598}
!5595 = !DILocalVariable(name: "entry", arg: 1, scope: !5590, file: !5591, line: 30, type: !320)
!5596 = !DILocalVariable(name: "p1", arg: 2, scope: !5590, file: !5591, line: 31, type: !102)
!5597 = !DILocalVariable(name: "p2", arg: 3, scope: !5590, file: !5591, line: 31, type: !102)
!5598 = !DILocalVariable(name: "p3", arg: 4, scope: !5590, file: !5591, line: 31, type: !102)
!5599 = !DILocation(line: 0, scope: !5590)
!5600 = !DILocation(line: 36, column: 2, scope: !5590)
!5601 = !DILocation(line: 38, column: 17, scope: !5590)
!5602 = !DILocation(line: 38, column: 2, scope: !5590)
!5603 = !DILocation(line: 45, column: 2, scope: !5590)
!5604 = distinct !DISubprogram(name: "k_current_get", scope: !124, file: !124, line: 530, type: !5605, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3472, retainedNodes: !2953)
!5605 = !DISubroutineType(types: !5606)
!5606 = !{!5607}
!5607 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !5608)
!5608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5609, size: 32)
!5609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !5610)
!5610 = !{!5611, !5669, !5681, !5682, !5683, !5684, !5690, !5705}
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5609, file: !195, line: 247, baseType: !5612, size: 384)
!5612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !5613)
!5613 = !{!5614, !5638, !5645, !5646, !5647, !5656, !5657, !5658}
!5614 = !DIDerivedType(tag: DW_TAG_member, scope: !5612, file: !195, line: 60, baseType: !5615, size: 64)
!5615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5612, file: !195, line: 60, size: 64, elements: !5616)
!5616 = !{!5617, !5632}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5615, file: !195, line: 61, baseType: !5618, size: 64)
!5618 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !5619)
!5619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !5620)
!5620 = !{!5621, !5627}
!5621 = !DIDerivedType(tag: DW_TAG_member, scope: !5619, file: !133, line: 38, baseType: !5622, size: 32)
!5622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5619, file: !133, line: 38, size: 32, elements: !5623)
!5623 = !{!5624, !5626}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5622, file: !133, line: 39, baseType: !5625, size: 32)
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 32)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5622, file: !133, line: 40, baseType: !5625, size: 32)
!5627 = !DIDerivedType(tag: DW_TAG_member, scope: !5619, file: !133, line: 42, baseType: !5628, size: 32, offset: 32)
!5628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5619, file: !133, line: 42, size: 32, elements: !5629)
!5629 = !{!5630, !5631}
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5628, file: !133, line: 43, baseType: !5625, size: 32)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5628, file: !133, line: 44, baseType: !5625, size: 32)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5615, file: !195, line: 62, baseType: !5633, size: 64)
!5633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !5634)
!5634 = !{!5635}
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5633, file: !207, line: 50, baseType: !5636, size: 64)
!5636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5637, size: 64, elements: !212)
!5637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 32)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5612, file: !195, line: 68, baseType: !5639, size: 32, offset: 64)
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 32)
!5640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !5641)
!5641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !5642)
!5642 = !{!5643}
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5641, file: !128, line: 232, baseType: !5644, size: 64)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !5619)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5612, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5612, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!5647 = !DIDerivedType(tag: DW_TAG_member, scope: !5612, file: !195, line: 90, baseType: !5648, size: 16, offset: 112)
!5648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5612, file: !195, line: 90, size: 16, elements: !5649)
!5649 = !{!5650, !5655}
!5650 = !DIDerivedType(tag: DW_TAG_member, scope: !5648, file: !195, line: 91, baseType: !5651, size: 16)
!5651 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5648, file: !195, line: 91, size: 16, elements: !5652)
!5652 = !{!5653, !5654}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5651, file: !195, line: 96, baseType: !225, size: 8)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5651, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5648, file: !195, line: 100, baseType: !177, size: 16)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5612, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5612, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5612, file: !195, line: 131, baseType: !5659, size: 192, offset: 192)
!5659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !5660)
!5660 = !{!5661, !5662, !5668}
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5659, file: !128, line: 245, baseType: !5618, size: 64)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5659, file: !128, line: 246, baseType: !5663, size: 32, offset: 64)
!5663 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !5664)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 32)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{null, !5667}
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5659, size: 32)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5659, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5609, file: !195, line: 250, baseType: !5670, size: 288, offset: 384)
!5670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !5671)
!5671 = !{!5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680}
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5670, file: !244, line: 26, baseType: !108, size: 32)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5670, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5670, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5670, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5670, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5670, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5670, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5670, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5670, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5609, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5609, file: !195, line: 256, baseType: !5640, size: 64, offset: 704)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5609, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5609, file: !195, line: 300, baseType: !5685, size: 96, offset: 800)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !5686)
!5686 = !{!5687, !5688, !5689}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5685, file: !195, line: 153, baseType: !22, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5685, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5685, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5609, file: !195, line: 325, baseType: !5691, size: 32, offset: 896)
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5692, size: 32)
!5692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !5693)
!5693 = !{!5694, !5700, !5701}
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5692, file: !124, line: 5074, baseType: !5695, size: 96)
!5695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !5696)
!5696 = !{!5697, !5698, !5699}
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5695, file: !270, line: 57, baseType: !273, size: 32)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5695, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5695, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5692, file: !124, line: 5075, baseType: !5640, size: 64, offset: 96)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5692, file: !124, line: 5076, baseType: !5702, size: 32, offset: 160)
!5702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !5703)
!5703 = !{!5704}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5702, file: !149, line: 52, baseType: !22, size: 32)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5609, file: !195, line: 343, baseType: !5706, size: 64, offset: 928)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !5707)
!5707 = !{!5708, !5709}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5706, file: !244, line: 63, baseType: !108, size: 32)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5706, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!5710 = !DILocation(line: 535, column: 9, scope: !5604)
!5711 = !DILocation(line: 535, column: 2, scope: !5604)
!5712 = distinct !DISubprogram(name: "k_thread_abort", scope: !4485, file: !4485, line: 188, type: !5713, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3472, retainedNodes: !5715)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{null, !5607}
!5715 = !{!5716}
!5716 = !DILocalVariable(name: "thread", arg: 1, scope: !5712, file: !4485, line: 188, type: !5607)
!5717 = !DILocation(line: 0, scope: !5712)
!5718 = !DILocation(line: 197, column: 2, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5712, file: !4485, line: 197, column: 2)
!5720 = !{i64 2155066115}
!5721 = !DILocation(line: 198, column: 2, scope: !5712)
!5722 = !DILocation(line: 199, column: 1, scope: !5712)
!5723 = distinct !DISubprogram(name: "z_current_get", scope: !4485, file: !4485, line: 173, type: !5605, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3472, retainedNodes: !2953)
!5724 = !DILocation(line: 180, column: 2, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5723, file: !4485, line: 180, column: 2)
!5726 = !{i64 2155066047}
!5727 = !DILocation(line: 181, column: 9, scope: !5723)
!5728 = !DILocation(line: 181, column: 2, scope: !5723)
!5729 = distinct !DISubprogram(name: "sys_heap_free", scope: !5730, file: !5730, line: 163, type: !5731, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5739)
!5730 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5731 = !DISubroutineType(types: !5732)
!5732 = !{null, !5733, !102}
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 32)
!5734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !5735)
!5735 = !{!5736, !5737, !5738}
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5734, file: !270, line: 57, baseType: !3491, size: 32)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5734, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5734, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!5739 = !{!5740, !5741, !5742, !5743}
!5740 = !DILocalVariable(name: "heap", arg: 1, scope: !5729, file: !5730, line: 163, type: !5733)
!5741 = !DILocalVariable(name: "mem", arg: 2, scope: !5729, file: !5730, line: 163, type: !102)
!5742 = !DILocalVariable(name: "h", scope: !5729, file: !5730, line: 168, type: !3491)
!5743 = !DILocalVariable(name: "c", scope: !5729, file: !5730, line: 169, type: !3496)
!5744 = !DILocation(line: 0, scope: !5729)
!5745 = !DILocation(line: 165, column: 10, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5729, file: !5730, line: 165, column: 6)
!5747 = !DILocation(line: 165, column: 6, scope: !5729)
!5748 = !DILocation(line: 168, column: 27, scope: !5729)
!5749 = !DILocation(line: 169, column: 16, scope: !5729)
!5750 = !{i32 0, i32 536870912}
!5751 = !DILocation(line: 175, column: 2, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5753, file: !5730, line: 175, column: 2)
!5753 = distinct !DILexicalBlock(scope: !5729, file: !5730, line: 175, column: 2)
!5754 = !DILocation(line: 175, column: 2, scope: !5753)
!5755 = !DILocation(line: 175, column: 2, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !5730, line: 175, column: 2)
!5757 = !DILocation(line: 183, column: 2, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !5730, line: 183, column: 2)
!5759 = distinct !DILexicalBlock(scope: !5729, file: !5730, line: 183, column: 2)
!5760 = !DILocation(line: 183, column: 2, scope: !5759)
!5761 = !DILocation(line: 183, column: 2, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5758, file: !5730, line: 183, column: 2)
!5763 = !DILocation(line: 187, column: 2, scope: !5729)
!5764 = !DILocation(line: 197, column: 2, scope: !5729)
!5765 = !DILocation(line: 198, column: 1, scope: !5729)
!5766 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5730, file: !5730, line: 157, type: !5767, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{!3496, !3491, !102}
!5769 = !{!5770, !5771, !5772, !5773}
!5770 = !DILocalVariable(name: "h", arg: 1, scope: !5766, file: !5730, line: 157, type: !3491)
!5771 = !DILocalVariable(name: "p", arg: 2, scope: !5766, file: !5730, line: 157, type: !102)
!5772 = !DILocalVariable(name: "mem", scope: !5766, file: !5730, line: 159, type: !783)
!5773 = !DILocalVariable(name: "base", scope: !5766, file: !5730, line: 159, type: !783)
!5774 = !DILocation(line: 0, scope: !5766)
!5775 = !DILocation(line: 159, column: 39, scope: !5766)
!5776 = !DILocation(line: 160, column: 14, scope: !5766)
!5777 = !DILocation(line: 160, column: 38, scope: !5766)
!5778 = !DILocation(line: 160, column: 46, scope: !5766)
!5779 = !DILocation(line: 160, column: 2, scope: !5766)
!5780 = distinct !DISubprogram(name: "chunk_used", scope: !3478, file: !3478, line: 137, type: !5781, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{!119, !3491, !3496}
!5783 = !{!5784, !5785}
!5784 = !DILocalVariable(name: "h", arg: 1, scope: !5780, file: !3478, line: 137, type: !3491)
!5785 = !DILocalVariable(name: "c", arg: 2, scope: !5780, file: !3478, line: 137, type: !3496)
!5786 = !DILocation(line: 0, scope: !5780)
!5787 = !DILocation(line: 139, column: 9, scope: !5780)
!5788 = !DILocation(line: 139, column: 42, scope: !5780)
!5789 = !DILocation(line: 139, column: 2, scope: !5780)
!5790 = distinct !DISubprogram(name: "right_chunk", scope: !3478, file: !3478, line: 204, type: !5791, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5793)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!3496, !3491, !3496}
!5793 = !{!5794, !5795}
!5794 = !DILocalVariable(name: "h", arg: 1, scope: !5790, file: !3478, line: 204, type: !3491)
!5795 = !DILocalVariable(name: "c", arg: 2, scope: !5790, file: !3478, line: 204, type: !3496)
!5796 = !DILocation(line: 0, scope: !5790)
!5797 = !DILocation(line: 206, column: 13, scope: !5790)
!5798 = !DILocation(line: 206, column: 11, scope: !5790)
!5799 = !DILocation(line: 206, column: 2, scope: !5790)
!5800 = distinct !DISubprogram(name: "left_chunk", scope: !3478, file: !3478, line: 199, type: !5791, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5801)
!5801 = !{!5802, !5803}
!5802 = !DILocalVariable(name: "h", arg: 1, scope: !5800, file: !3478, line: 199, type: !3491)
!5803 = !DILocalVariable(name: "c", arg: 2, scope: !5800, file: !3478, line: 199, type: !3496)
!5804 = !DILocation(line: 0, scope: !5800)
!5805 = !DILocation(line: 201, column: 13, scope: !5800)
!5806 = !DILocation(line: 201, column: 11, scope: !5800)
!5807 = !DILocation(line: 201, column: 2, scope: !5800)
!5808 = distinct !DISubprogram(name: "set_chunk_used", scope: !3478, file: !3478, line: 147, type: !5809, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5811)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{null, !3491, !3496, !119}
!5811 = !{!5812, !5813, !5814, !5815, !5816}
!5812 = !DILocalVariable(name: "h", arg: 1, scope: !5808, file: !3478, line: 147, type: !3491)
!5813 = !DILocalVariable(name: "c", arg: 2, scope: !5808, file: !3478, line: 147, type: !3496)
!5814 = !DILocalVariable(name: "used", arg: 3, scope: !5808, file: !3478, line: 147, type: !119)
!5815 = !DILocalVariable(name: "buf", scope: !5808, file: !3478, line: 149, type: !3485)
!5816 = !DILocalVariable(name: "cmem", scope: !5808, file: !3478, line: 150, type: !102)
!5817 = !DILocation(line: 0, scope: !5808)
!5818 = !DILocation(line: 149, column: 22, scope: !5808)
!5819 = !DILocation(line: 0, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5821, file: !3478, line: 159, column: 7)
!5821 = distinct !DILexicalBlock(scope: !5822, file: !3478, line: 158, column: 9)
!5822 = distinct !DILexicalBlock(scope: !5808, file: !3478, line: 152, column: 6)
!5823 = !DILocation(line: 159, column: 7, scope: !5821)
!5824 = !DILocation(line: 165, column: 1, scope: !5808)
!5825 = distinct !DISubprogram(name: "free_chunk", scope: !5730, file: !5730, line: 133, type: !5826, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5828)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{null, !3491, !3496}
!5828 = !{!5829, !5830}
!5829 = !DILocalVariable(name: "h", arg: 1, scope: !5825, file: !5730, line: 133, type: !3491)
!5830 = !DILocalVariable(name: "c", arg: 2, scope: !5825, file: !5730, line: 133, type: !3496)
!5831 = !DILocation(line: 0, scope: !5825)
!5832 = !DILocation(line: 136, column: 21, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5825, file: !5730, line: 136, column: 6)
!5834 = !DILocation(line: 136, column: 7, scope: !5833)
!5835 = !DILocation(line: 136, column: 6, scope: !5825)
!5836 = !DILocation(line: 137, column: 3, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5833, file: !5730, line: 136, column: 41)
!5838 = !DILocation(line: 138, column: 22, scope: !5837)
!5839 = !DILocation(line: 138, column: 3, scope: !5837)
!5840 = !DILocation(line: 139, column: 2, scope: !5837)
!5841 = !DILocation(line: 142, column: 21, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5825, file: !5730, line: 142, column: 6)
!5843 = !DILocation(line: 142, column: 7, scope: !5842)
!5844 = !DILocation(line: 142, column: 6, scope: !5825)
!5845 = !DILocation(line: 143, column: 3, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5842, file: !5730, line: 142, column: 40)
!5847 = !DILocation(line: 144, column: 19, scope: !5846)
!5848 = !DILocation(line: 144, column: 3, scope: !5846)
!5849 = !DILocation(line: 145, column: 7, scope: !5846)
!5850 = !DILocation(line: 146, column: 2, scope: !5846)
!5851 = !DILocation(line: 148, column: 2, scope: !5825)
!5852 = !DILocation(line: 149, column: 1, scope: !5825)
!5853 = distinct !DISubprogram(name: "free_list_remove", scope: !5730, file: !5730, line: 60, type: !5826, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5854)
!5854 = !{!5855, !5856, !5857}
!5855 = !DILocalVariable(name: "h", arg: 1, scope: !5853, file: !5730, line: 60, type: !3491)
!5856 = !DILocalVariable(name: "c", arg: 2, scope: !5853, file: !5730, line: 60, type: !3496)
!5857 = !DILocalVariable(name: "bidx", scope: !5858, file: !5730, line: 63, type: !103)
!5858 = distinct !DILexicalBlock(scope: !5859, file: !5730, line: 62, column: 31)
!5859 = distinct !DILexicalBlock(scope: !5853, file: !5730, line: 62, column: 6)
!5860 = !DILocation(line: 0, scope: !5853)
!5861 = !DILocation(line: 63, column: 28, scope: !5858)
!5862 = !{i32 0, i32 32768}
!5863 = !DILocation(line: 63, column: 14, scope: !5858)
!5864 = !DILocation(line: 0, scope: !5858)
!5865 = !DILocation(line: 64, column: 3, scope: !5858)
!5866 = !DILocation(line: 66, column: 1, scope: !5853)
!5867 = distinct !DISubprogram(name: "merge_chunks", scope: !5730, file: !5730, line: 125, type: !5868, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5870)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{null, !3491, !3496, !3496}
!5870 = !{!5871, !5872, !5873, !5874}
!5871 = !DILocalVariable(name: "h", arg: 1, scope: !5867, file: !5730, line: 125, type: !3491)
!5872 = !DILocalVariable(name: "lc", arg: 2, scope: !5867, file: !5730, line: 125, type: !3496)
!5873 = !DILocalVariable(name: "rc", arg: 3, scope: !5867, file: !5730, line: 125, type: !3496)
!5874 = !DILocalVariable(name: "newsz", scope: !5867, file: !5730, line: 127, type: !5875)
!5875 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !3478, line: 62, baseType: !108)
!5876 = !DILocation(line: 0, scope: !5867)
!5877 = !DILocation(line: 127, column: 20, scope: !5867)
!5878 = !DILocation(line: 127, column: 40, scope: !5867)
!5879 = !DILocation(line: 127, column: 38, scope: !5867)
!5880 = !DILocation(line: 129, column: 2, scope: !5867)
!5881 = !DILocation(line: 130, column: 25, scope: !5867)
!5882 = !DILocation(line: 130, column: 2, scope: !5867)
!5883 = !DILocation(line: 131, column: 1, scope: !5867)
!5884 = distinct !DISubprogram(name: "free_list_add", scope: !5730, file: !5730, line: 98, type: !5826, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5885)
!5885 = !{!5886, !5887, !5888}
!5886 = !DILocalVariable(name: "h", arg: 1, scope: !5884, file: !5730, line: 98, type: !3491)
!5887 = !DILocalVariable(name: "c", arg: 2, scope: !5884, file: !5730, line: 98, type: !3496)
!5888 = !DILocalVariable(name: "bidx", scope: !5889, file: !5730, line: 101, type: !103)
!5889 = distinct !DILexicalBlock(scope: !5890, file: !5730, line: 100, column: 31)
!5890 = distinct !DILexicalBlock(scope: !5884, file: !5730, line: 100, column: 6)
!5891 = !DILocation(line: 0, scope: !5884)
!5892 = !DILocation(line: 101, column: 28, scope: !5889)
!5893 = !DILocation(line: 101, column: 14, scope: !5889)
!5894 = !DILocation(line: 0, scope: !5889)
!5895 = !DILocation(line: 102, column: 3, scope: !5889)
!5896 = !DILocation(line: 104, column: 1, scope: !5884)
!5897 = distinct !DISubprogram(name: "chunk_size", scope: !3478, file: !3478, line: 142, type: !5898, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5900)
!5898 = !DISubroutineType(types: !5899)
!5899 = !{!5875, !3491, !3496}
!5900 = !{!5901, !5902}
!5901 = !DILocalVariable(name: "h", arg: 1, scope: !5897, file: !3478, line: 142, type: !3491)
!5902 = !DILocalVariable(name: "c", arg: 2, scope: !5897, file: !3478, line: 142, type: !3496)
!5903 = !DILocation(line: 0, scope: !5897)
!5904 = !DILocation(line: 144, column: 9, scope: !5897)
!5905 = !DILocation(line: 144, column: 42, scope: !5897)
!5906 = !DILocation(line: 144, column: 2, scope: !5897)
!5907 = distinct !DISubprogram(name: "bucket_idx", scope: !3478, file: !3478, line: 250, type: !5908, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5910)
!5908 = !DISubroutineType(types: !5909)
!5909 = !{!103, !3491, !5875}
!5910 = !{!5911, !5912, !5913}
!5911 = !DILocalVariable(name: "h", arg: 1, scope: !5907, file: !3478, line: 250, type: !3491)
!5912 = !DILocalVariable(name: "sz", arg: 2, scope: !5907, file: !3478, line: 250, type: !5875)
!5913 = !DILocalVariable(name: "usable_sz", scope: !5907, file: !3478, line: 252, type: !32)
!5914 = !DILocation(line: 0, scope: !5907)
!5915 = !DILocation(line: 252, column: 32, scope: !5907)
!5916 = !DILocation(line: 252, column: 30, scope: !5907)
!5917 = !DILocation(line: 252, column: 50, scope: !5907)
!5918 = !DILocation(line: 253, column: 14, scope: !5907)
!5919 = !{i32 0, i32 33}
!5920 = !DILocation(line: 253, column: 12, scope: !5907)
!5921 = !DILocation(line: 253, column: 2, scope: !5907)
!5922 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5730, file: !5730, line: 68, type: !5923, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5925)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{null, !3491, !3496, !103}
!5925 = !{!5926, !5927, !5928, !5929, !5931, !5934}
!5926 = !DILocalVariable(name: "h", arg: 1, scope: !5922, file: !5730, line: 68, type: !3491)
!5927 = !DILocalVariable(name: "c", arg: 2, scope: !5922, file: !5730, line: 68, type: !3496)
!5928 = !DILocalVariable(name: "bidx", arg: 3, scope: !5922, file: !5730, line: 68, type: !103)
!5929 = !DILocalVariable(name: "b", scope: !5922, file: !5730, line: 70, type: !5930)
!5930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 32)
!5931 = !DILocalVariable(name: "second", scope: !5932, file: !5730, line: 84, type: !3496)
!5932 = distinct !DILexicalBlock(scope: !5933, file: !5730, line: 80, column: 9)
!5933 = distinct !DILexicalBlock(scope: !5922, file: !5730, line: 72, column: 6)
!5934 = !DILocalVariable(name: "first", scope: !5932, file: !5730, line: 85, type: !3496)
!5935 = !DILocation(line: 0, scope: !5922)
!5936 = !DILocation(line: 72, column: 9, scope: !5933)
!5937 = !DILocation(line: 72, column: 14, scope: !5933)
!5938 = !DILocation(line: 72, column: 6, scope: !5922)
!5939 = !DILocation(line: 76, column: 23, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5933, file: !5730, line: 72, column: 21)
!5941 = !DILocation(line: 76, column: 6, scope: !5940)
!5942 = !DILocation(line: 76, column: 20, scope: !5940)
!5943 = !DILocation(line: 77, column: 11, scope: !5940)
!5944 = !DILocation(line: 78, column: 3, scope: !5940)
!5945 = !DILocation(line: 79, column: 3, scope: !5940)
!5946 = !DILocation(line: 80, column: 2, scope: !5940)
!5947 = !DILocation(line: 0, scope: !5932)
!5948 = !DILocation(line: 85, column: 21, scope: !5932)
!5949 = !{i32 0, i32 65536}
!5950 = !DILocation(line: 87, column: 3, scope: !5932)
!5951 = !DILocation(line: 88, column: 3, scope: !5932)
!5952 = !DILocation(line: 89, column: 3, scope: !5932)
!5953 = !DILocation(line: 90, column: 3, scope: !5932)
!5954 = !DILocation(line: 96, column: 1, scope: !5922)
!5955 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !3478, file: !3478, line: 187, type: !5868, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5956)
!5956 = !{!5957, !5958, !5959}
!5957 = !DILocalVariable(name: "h", arg: 1, scope: !5955, file: !3478, line: 187, type: !3491)
!5958 = !DILocalVariable(name: "c", arg: 2, scope: !5955, file: !3478, line: 187, type: !3496)
!5959 = !DILocalVariable(name: "prev", arg: 3, scope: !5955, file: !3478, line: 188, type: !3496)
!5960 = !DILocation(line: 0, scope: !5955)
!5961 = !DILocation(line: 190, column: 2, scope: !5955)
!5962 = !DILocation(line: 191, column: 1, scope: !5955)
!5963 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !3478, file: !3478, line: 193, type: !5868, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5964)
!5964 = !{!5965, !5966, !5967}
!5965 = !DILocalVariable(name: "h", arg: 1, scope: !5963, file: !3478, line: 193, type: !3491)
!5966 = !DILocalVariable(name: "c", arg: 2, scope: !5963, file: !3478, line: 193, type: !3496)
!5967 = !DILocalVariable(name: "next", arg: 3, scope: !5963, file: !3478, line: 194, type: !3496)
!5968 = !DILocation(line: 0, scope: !5963)
!5969 = !DILocation(line: 196, column: 2, scope: !5963)
!5970 = !DILocation(line: 197, column: 1, scope: !5963)
!5971 = distinct !DISubprogram(name: "prev_free_chunk", scope: !3478, file: !3478, line: 177, type: !5791, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5972)
!5972 = !{!5973, !5974}
!5973 = !DILocalVariable(name: "h", arg: 1, scope: !5971, file: !3478, line: 177, type: !3491)
!5974 = !DILocalVariable(name: "c", arg: 2, scope: !5971, file: !3478, line: 177, type: !3496)
!5975 = !DILocation(line: 0, scope: !5971)
!5976 = !DILocation(line: 179, column: 9, scope: !5971)
!5977 = !DILocation(line: 179, column: 2, scope: !5971)
!5978 = distinct !DISubprogram(name: "chunk_field", scope: !3478, file: !3478, line: 107, type: !5979, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5981)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!3496, !3491, !3496, !3477}
!5981 = !{!5982, !5983, !5984, !5985, !5986}
!5982 = !DILocalVariable(name: "h", arg: 1, scope: !5978, file: !3478, line: 107, type: !3491)
!5983 = !DILocalVariable(name: "c", arg: 2, scope: !5978, file: !3478, line: 107, type: !3496)
!5984 = !DILocalVariable(name: "f", arg: 3, scope: !5978, file: !3478, line: 108, type: !3477)
!5985 = !DILocalVariable(name: "buf", scope: !5978, file: !3478, line: 110, type: !3485)
!5986 = !DILocalVariable(name: "cmem", scope: !5978, file: !3478, line: 111, type: !102)
!5987 = !DILocation(line: 0, scope: !5978)
!5988 = !DILocation(line: 110, column: 22, scope: !5978)
!5989 = !DILocation(line: 111, column: 15, scope: !5978)
!5990 = !DILocation(line: 116, column: 11, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !3478, line: 115, column: 9)
!5992 = distinct !DILexicalBlock(scope: !5978, file: !3478, line: 113, column: 6)
!5993 = !DILocation(line: 116, column: 10, scope: !5991)
!5994 = !DILocation(line: 118, column: 1, scope: !5978)
!5995 = distinct !DISubprogram(name: "chunk_buf", scope: !3478, file: !3478, line: 101, type: !5996, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !5998)
!5996 = !DISubroutineType(types: !5997)
!5997 = !{!3485, !3491}
!5998 = !{!5999}
!5999 = !DILocalVariable(name: "h", arg: 1, scope: !5995, file: !3478, line: 101, type: !3491)
!6000 = !DILocation(line: 0, scope: !5995)
!6001 = !DILocation(line: 104, column: 9, scope: !5995)
!6002 = !DILocation(line: 104, column: 2, scope: !5995)
!6003 = distinct !DISubprogram(name: "chunk_set", scope: !3478, file: !3478, line: 120, type: !6004, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !3491, !3496, !3477, !3496}
!6006 = !{!6007, !6008, !6009, !6010, !6011, !6012}
!6007 = !DILocalVariable(name: "h", arg: 1, scope: !6003, file: !3478, line: 120, type: !3491)
!6008 = !DILocalVariable(name: "c", arg: 2, scope: !6003, file: !3478, line: 120, type: !3496)
!6009 = !DILocalVariable(name: "f", arg: 3, scope: !6003, file: !3478, line: 121, type: !3477)
!6010 = !DILocalVariable(name: "val", arg: 4, scope: !6003, file: !3478, line: 121, type: !3496)
!6011 = !DILocalVariable(name: "buf", scope: !6003, file: !3478, line: 125, type: !3485)
!6012 = !DILocalVariable(name: "cmem", scope: !6003, file: !3478, line: 126, type: !102)
!6013 = !DILocation(line: 0, scope: !6003)
!6014 = !DILocation(line: 125, column: 22, scope: !6003)
!6015 = !DILocation(line: 126, column: 15, scope: !6003)
!6016 = !DILocation(line: 133, column: 27, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !3478, line: 131, column: 9)
!6018 = distinct !DILexicalBlock(scope: !6003, file: !3478, line: 128, column: 6)
!6019 = !DILocation(line: 133, column: 4, scope: !6017)
!6020 = !DILocation(line: 133, column: 3, scope: !6017)
!6021 = !DILocation(line: 133, column: 25, scope: !6017)
!6022 = !DILocation(line: 135, column: 1, scope: !6003)
!6023 = distinct !DISubprogram(name: "min_chunk_size", scope: !3478, file: !3478, line: 240, type: !6024, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6026)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!5875, !3491}
!6026 = !{!6027}
!6027 = !DILocalVariable(name: "h", arg: 1, scope: !6023, file: !3478, line: 240, type: !3491)
!6028 = !DILocation(line: 0, scope: !6023)
!6029 = !DILocation(line: 242, column: 9, scope: !6023)
!6030 = !DILocation(line: 242, column: 2, scope: !6023)
!6031 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !3478, file: !3478, line: 235, type: !6032, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6034)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!5875, !3491, !153}
!6034 = !{!6035, !6036}
!6035 = !DILocalVariable(name: "h", arg: 1, scope: !6031, file: !3478, line: 235, type: !3491)
!6036 = !DILocalVariable(name: "bytes", arg: 2, scope: !6031, file: !3478, line: 235, type: !153)
!6037 = !DILocation(line: 0, scope: !6031)
!6038 = !DILocation(line: 237, column: 39, scope: !6031)
!6039 = !DILocation(line: 237, column: 9, scope: !6031)
!6040 = !DILocation(line: 237, column: 2, scope: !6031)
!6041 = distinct !DISubprogram(name: "chunksz", scope: !3478, file: !3478, line: 230, type: !6042, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6044)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{!5875, !153}
!6044 = !{!6045}
!6045 = !DILocalVariable(name: "bytes", arg: 1, scope: !6041, file: !3478, line: 230, type: !153)
!6046 = !DILocation(line: 0, scope: !6041)
!6047 = !DILocation(line: 232, column: 29, scope: !6041)
!6048 = !DILocation(line: 232, column: 35, scope: !6041)
!6049 = !DILocation(line: 232, column: 2, scope: !6041)
!6050 = distinct !DISubprogram(name: "set_chunk_size", scope: !3478, file: !3478, line: 172, type: !6051, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6053)
!6051 = !DISubroutineType(types: !6052)
!6052 = !{null, !3491, !3496, !5875}
!6053 = !{!6054, !6055, !6056}
!6054 = !DILocalVariable(name: "h", arg: 1, scope: !6050, file: !3478, line: 172, type: !3491)
!6055 = !DILocalVariable(name: "c", arg: 2, scope: !6050, file: !3478, line: 172, type: !3496)
!6056 = !DILocalVariable(name: "size", arg: 3, scope: !6050, file: !3478, line: 172, type: !5875)
!6057 = !DILocation(line: 0, scope: !6050)
!6058 = !DILocation(line: 174, column: 38, scope: !6050)
!6059 = !DILocation(line: 174, column: 2, scope: !6050)
!6060 = !DILocation(line: 175, column: 1, scope: !6050)
!6061 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !3478, file: !3478, line: 209, type: !6051, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6062)
!6062 = !{!6063, !6064, !6065}
!6063 = !DILocalVariable(name: "h", arg: 1, scope: !6061, file: !3478, line: 209, type: !3491)
!6064 = !DILocalVariable(name: "c", arg: 2, scope: !6061, file: !3478, line: 209, type: !3496)
!6065 = !DILocalVariable(name: "size", arg: 3, scope: !6061, file: !3478, line: 210, type: !5875)
!6066 = !DILocation(line: 0, scope: !6061)
!6067 = !DILocation(line: 212, column: 2, scope: !6061)
!6068 = !DILocation(line: 213, column: 1, scope: !6061)
!6069 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5730, file: !5730, line: 34, type: !5923, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6070)
!6070 = !{!6071, !6072, !6073, !6074, !6075, !6078}
!6071 = !DILocalVariable(name: "h", arg: 1, scope: !6069, file: !5730, line: 34, type: !3491)
!6072 = !DILocalVariable(name: "c", arg: 2, scope: !6069, file: !5730, line: 34, type: !3496)
!6073 = !DILocalVariable(name: "bidx", arg: 3, scope: !6069, file: !5730, line: 34, type: !103)
!6074 = !DILocalVariable(name: "b", scope: !6069, file: !5730, line: 36, type: !5930)
!6075 = !DILocalVariable(name: "first", scope: !6076, file: !5730, line: 47, type: !3496)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !5730, line: 46, column: 9)
!6077 = distinct !DILexicalBlock(scope: !6069, file: !5730, line: 42, column: 6)
!6078 = !DILocalVariable(name: "second", scope: !6076, file: !5730, line: 48, type: !3496)
!6079 = !DILocation(line: 0, scope: !6069)
!6080 = !DILocation(line: 36, column: 29, scope: !6069)
!6081 = !DILocation(line: 42, column: 6, scope: !6077)
!6082 = !DILocation(line: 42, column: 28, scope: !6077)
!6083 = !DILocation(line: 42, column: 6, scope: !6069)
!6084 = !DILocation(line: 44, column: 24, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6077, file: !5730, line: 42, column: 34)
!6086 = !DILocation(line: 44, column: 23, scope: !6085)
!6087 = !DILocation(line: 44, column: 6, scope: !6085)
!6088 = !DILocation(line: 44, column: 20, scope: !6085)
!6089 = !DILocation(line: 45, column: 6, scope: !6085)
!6090 = !DILocation(line: 45, column: 11, scope: !6085)
!6091 = !DILocation(line: 46, column: 2, scope: !6085)
!6092 = !DILocation(line: 47, column: 21, scope: !6076)
!6093 = !DILocation(line: 0, scope: !6076)
!6094 = !DILocation(line: 50, column: 6, scope: !6076)
!6095 = !DILocation(line: 50, column: 11, scope: !6076)
!6096 = !DILocation(line: 51, column: 3, scope: !6076)
!6097 = !DILocation(line: 52, column: 3, scope: !6076)
!6098 = !DILocation(line: 58, column: 1, scope: !6069)
!6099 = distinct !DISubprogram(name: "next_free_chunk", scope: !3478, file: !3478, line: 182, type: !5791, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6100)
!6100 = !{!6101, !6102}
!6101 = !DILocalVariable(name: "h", arg: 1, scope: !6099, file: !3478, line: 182, type: !3491)
!6102 = !DILocalVariable(name: "c", arg: 2, scope: !6099, file: !3478, line: 182, type: !3496)
!6103 = !DILocation(line: 0, scope: !6099)
!6104 = !DILocation(line: 184, column: 9, scope: !6099)
!6105 = !DILocation(line: 184, column: 2, scope: !6099)
!6106 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5730, file: !5730, line: 200, type: !6107, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6109)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!153, !5733, !102}
!6109 = !{!6110, !6111, !6112, !6113, !6114, !6115, !6116}
!6110 = !DILocalVariable(name: "heap", arg: 1, scope: !6106, file: !5730, line: 200, type: !5733)
!6111 = !DILocalVariable(name: "mem", arg: 2, scope: !6106, file: !5730, line: 200, type: !102)
!6112 = !DILocalVariable(name: "h", scope: !6106, file: !5730, line: 202, type: !3491)
!6113 = !DILocalVariable(name: "c", scope: !6106, file: !5730, line: 203, type: !3496)
!6114 = !DILocalVariable(name: "addr", scope: !6106, file: !5730, line: 204, type: !153)
!6115 = !DILocalVariable(name: "chunk_base", scope: !6106, file: !5730, line: 205, type: !153)
!6116 = !DILocalVariable(name: "chunk_sz", scope: !6106, file: !5730, line: 206, type: !153)
!6117 = !DILocation(line: 0, scope: !6106)
!6118 = !DILocation(line: 202, column: 27, scope: !6106)
!6119 = !DILocation(line: 203, column: 16, scope: !6106)
!6120 = !DILocation(line: 204, column: 16, scope: !6106)
!6121 = !DILocation(line: 205, column: 31, scope: !6106)
!6122 = !DILocation(line: 205, column: 22, scope: !6106)
!6123 = !DILocation(line: 206, column: 20, scope: !6106)
!6124 = !DILocation(line: 206, column: 37, scope: !6106)
!6125 = !DILocation(line: 208, column: 26, scope: !6106)
!6126 = !DILocation(line: 208, column: 18, scope: !6106)
!6127 = !DILocation(line: 208, column: 2, scope: !6106)
!6128 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5730, file: !5730, line: 263, type: !6129, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6131)
!6129 = !DISubroutineType(types: !6130)
!6130 = !{!102, !5733, !153}
!6131 = !{!6132, !6133, !6134, !6135, !6136, !6137}
!6132 = !DILocalVariable(name: "heap", arg: 1, scope: !6128, file: !5730, line: 263, type: !5733)
!6133 = !DILocalVariable(name: "bytes", arg: 2, scope: !6128, file: !5730, line: 263, type: !153)
!6134 = !DILocalVariable(name: "h", scope: !6128, file: !5730, line: 265, type: !3491)
!6135 = !DILocalVariable(name: "mem", scope: !6128, file: !5730, line: 266, type: !102)
!6136 = !DILocalVariable(name: "chunk_sz", scope: !6128, file: !5730, line: 272, type: !5875)
!6137 = !DILocalVariable(name: "c", scope: !6128, file: !5730, line: 273, type: !3496)
!6138 = !DILocation(line: 0, scope: !6128)
!6139 = !DILocation(line: 265, column: 27, scope: !6128)
!6140 = !DILocation(line: 268, column: 12, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6128, file: !5730, line: 268, column: 6)
!6142 = !DILocation(line: 268, column: 18, scope: !6141)
!6143 = !DILocation(line: 268, column: 21, scope: !6141)
!6144 = !DILocation(line: 268, column: 6, scope: !6128)
!6145 = !DILocation(line: 272, column: 23, scope: !6128)
!6146 = !DILocation(line: 273, column: 16, scope: !6128)
!6147 = !DILocation(line: 274, column: 8, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6128, file: !5730, line: 274, column: 6)
!6149 = !DILocation(line: 274, column: 6, scope: !6128)
!6150 = !DILocation(line: 279, column: 6, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6128, file: !5730, line: 279, column: 6)
!6152 = !DILocation(line: 279, column: 23, scope: !6151)
!6153 = !DILocation(line: 279, column: 6, scope: !6128)
!6154 = !DILocation(line: 280, column: 24, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6151, file: !5730, line: 279, column: 35)
!6156 = !DILocation(line: 280, column: 3, scope: !6155)
!6157 = !DILocation(line: 281, column: 3, scope: !6155)
!6158 = !DILocation(line: 282, column: 2, scope: !6155)
!6159 = !DILocation(line: 284, column: 2, scope: !6128)
!6160 = !DILocation(line: 286, column: 8, scope: !6128)
!6161 = !DILocation(line: 298, column: 2, scope: !6128)
!6162 = !DILocation(line: 299, column: 1, scope: !6128)
!6163 = distinct !DISubprogram(name: "size_too_big", scope: !3478, file: !3478, line: 256, type: !6164, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6166)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!119, !3491, !153}
!6166 = !{!6167, !6168}
!6167 = !DILocalVariable(name: "h", arg: 1, scope: !6163, file: !3478, line: 256, type: !3491)
!6168 = !DILocalVariable(name: "bytes", arg: 2, scope: !6163, file: !3478, line: 256, type: !153)
!6169 = !DILocation(line: 0, scope: !6163)
!6170 = !DILocation(line: 262, column: 16, scope: !6163)
!6171 = !DILocation(line: 262, column: 36, scope: !6163)
!6172 = !DILocation(line: 262, column: 30, scope: !6163)
!6173 = !DILocation(line: 262, column: 2, scope: !6163)
!6174 = distinct !DISubprogram(name: "alloc_chunk", scope: !5730, file: !5730, line: 211, type: !6175, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6177)
!6175 = !DISubroutineType(types: !6176)
!6176 = !{!3496, !3491, !5875}
!6177 = !{!6178, !6179, !6180, !6181, !6182, !6185, !6186, !6188, !6189, !6192}
!6178 = !DILocalVariable(name: "h", arg: 1, scope: !6174, file: !5730, line: 211, type: !3491)
!6179 = !DILocalVariable(name: "sz", arg: 2, scope: !6174, file: !5730, line: 211, type: !5875)
!6180 = !DILocalVariable(name: "bi", scope: !6174, file: !5730, line: 213, type: !103)
!6181 = !DILocalVariable(name: "b", scope: !6174, file: !5730, line: 214, type: !5930)
!6182 = !DILocalVariable(name: "first", scope: !6183, file: !5730, line: 233, type: !3496)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !5730, line: 232, column: 15)
!6184 = distinct !DILexicalBlock(scope: !6174, file: !5730, line: 232, column: 6)
!6185 = !DILocalVariable(name: "i", scope: !6183, file: !5730, line: 234, type: !103)
!6186 = !DILocalVariable(name: "c", scope: !6187, file: !5730, line: 236, type: !3496)
!6187 = distinct !DILexicalBlock(scope: !6183, file: !5730, line: 235, column: 6)
!6188 = !DILocalVariable(name: "bmask", scope: !6174, file: !5730, line: 249, type: !108)
!6189 = !DILocalVariable(name: "minbucket", scope: !6190, file: !5730, line: 252, type: !103)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !5730, line: 251, column: 19)
!6191 = distinct !DILexicalBlock(scope: !6174, file: !5730, line: 251, column: 6)
!6192 = !DILocalVariable(name: "c", scope: !6190, file: !5730, line: 253, type: !3496)
!6193 = !DILocation(line: 0, scope: !6174)
!6194 = !DILocation(line: 213, column: 11, scope: !6174)
!6195 = !DILocation(line: 232, column: 9, scope: !6184)
!6196 = !DILocation(line: 232, column: 6, scope: !6184)
!6197 = !DILocation(line: 232, column: 6, scope: !6174)
!6198 = !DILocation(line: 236, column: 21, scope: !6187)
!6199 = !DILocation(line: 0, scope: !6183)
!6200 = !DILocation(line: 0, scope: !6187)
!6201 = !DILocation(line: 237, column: 8, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6187, file: !5730, line: 237, column: 8)
!6203 = !DILocation(line: 237, column: 25, scope: !6202)
!6204 = !DILocation(line: 237, column: 8, scope: !6187)
!6205 = !DILocation(line: 238, column: 5, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6202, file: !5730, line: 237, column: 32)
!6207 = !DILocation(line: 241, column: 14, scope: !6187)
!6208 = !DILocation(line: 241, column: 12, scope: !6187)
!6209 = !DILocation(line: 243, column: 12, scope: !6183)
!6210 = !DILocation(line: 243, column: 16, scope: !6183)
!6211 = distinct !{!6211, !6212, !6213}
!6212 = !DILocation(line: 235, column: 3, scope: !6183)
!6213 = !DILocation(line: 243, column: 35, scope: !6183)
!6214 = !DILocation(line: 249, column: 22, scope: !6174)
!6215 = !DILocation(line: 249, column: 39, scope: !6174)
!6216 = !DILocation(line: 249, column: 36, scope: !6174)
!6217 = !DILocation(line: 251, column: 12, scope: !6191)
!6218 = !DILocation(line: 251, column: 6, scope: !6174)
!6219 = !DILocation(line: 252, column: 19, scope: !6190)
!6220 = !DILocation(line: 0, scope: !6190)
!6221 = !DILocation(line: 253, column: 39, scope: !6190)
!6222 = !DILocation(line: 255, column: 3, scope: !6190)
!6223 = !DILocation(line: 261, column: 1, scope: !6174)
!6224 = distinct !DISubprogram(name: "split_chunks", scope: !5730, file: !5730, line: 109, type: !5868, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6225)
!6225 = !{!6226, !6227, !6228, !6229, !6230, !6231}
!6226 = !DILocalVariable(name: "h", arg: 1, scope: !6224, file: !5730, line: 109, type: !3491)
!6227 = !DILocalVariable(name: "lc", arg: 2, scope: !6224, file: !5730, line: 109, type: !3496)
!6228 = !DILocalVariable(name: "rc", arg: 3, scope: !6224, file: !5730, line: 109, type: !3496)
!6229 = !DILocalVariable(name: "sz0", scope: !6224, file: !5730, line: 114, type: !5875)
!6230 = !DILocalVariable(name: "lsz", scope: !6224, file: !5730, line: 115, type: !5875)
!6231 = !DILocalVariable(name: "rsz", scope: !6224, file: !5730, line: 116, type: !5875)
!6232 = !DILocation(line: 0, scope: !6224)
!6233 = !DILocation(line: 114, column: 18, scope: !6224)
!6234 = !DILocation(line: 115, column: 21, scope: !6224)
!6235 = !DILocation(line: 116, column: 22, scope: !6224)
!6236 = !DILocation(line: 118, column: 2, scope: !6224)
!6237 = !DILocation(line: 119, column: 2, scope: !6224)
!6238 = !DILocation(line: 120, column: 2, scope: !6224)
!6239 = !DILocation(line: 121, column: 25, scope: !6224)
!6240 = !DILocation(line: 121, column: 2, scope: !6224)
!6241 = !DILocation(line: 122, column: 1, scope: !6224)
!6242 = distinct !DISubprogram(name: "chunk_mem", scope: !5730, file: !5730, line: 24, type: !6243, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6245)
!6243 = !DISubroutineType(types: !6244)
!6244 = !{!102, !3491, !3496}
!6245 = !{!6246, !6247, !6248, !6249}
!6246 = !DILocalVariable(name: "h", arg: 1, scope: !6242, file: !5730, line: 24, type: !3491)
!6247 = !DILocalVariable(name: "c", arg: 2, scope: !6242, file: !5730, line: 24, type: !3496)
!6248 = !DILocalVariable(name: "buf", scope: !6242, file: !5730, line: 26, type: !3485)
!6249 = !DILocalVariable(name: "ret", scope: !6242, file: !5730, line: 27, type: !783)
!6250 = !DILocation(line: 0, scope: !6242)
!6251 = !DILocation(line: 26, column: 22, scope: !6242)
!6252 = !DILocation(line: 27, column: 38, scope: !6242)
!6253 = !DILocation(line: 31, column: 2, scope: !6242)
!6254 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5730, file: !5730, line: 301, type: !6255, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6257)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{!102, !5733, !153, !153}
!6257 = !{!6258, !6259, !6260, !6261, !6262, !6263, !6264, !6265, !6266, !6267, !6268, !6269}
!6258 = !DILocalVariable(name: "heap", arg: 1, scope: !6254, file: !5730, line: 301, type: !5733)
!6259 = !DILocalVariable(name: "align", arg: 2, scope: !6254, file: !5730, line: 301, type: !153)
!6260 = !DILocalVariable(name: "bytes", arg: 3, scope: !6254, file: !5730, line: 301, type: !153)
!6261 = !DILocalVariable(name: "h", scope: !6254, file: !5730, line: 303, type: !3491)
!6262 = !DILocalVariable(name: "gap", scope: !6254, file: !5730, line: 304, type: !153)
!6263 = !DILocalVariable(name: "rew", scope: !6254, file: !5730, line: 304, type: !153)
!6264 = !DILocalVariable(name: "padded_sz", scope: !6254, file: !5730, line: 335, type: !5875)
!6265 = !DILocalVariable(name: "c0", scope: !6254, file: !5730, line: 336, type: !3496)
!6266 = !DILocalVariable(name: "mem", scope: !6254, file: !5730, line: 341, type: !783)
!6267 = !DILocalVariable(name: "end", scope: !6254, file: !5730, line: 345, type: !3485)
!6268 = !DILocalVariable(name: "c", scope: !6254, file: !5730, line: 348, type: !3496)
!6269 = !DILocalVariable(name: "c_end", scope: !6254, file: !5730, line: 349, type: !3496)
!6270 = !DILocation(line: 0, scope: !6254)
!6271 = !DILocation(line: 303, column: 27, scope: !6254)
!6272 = !DILocation(line: 313, column: 16, scope: !6254)
!6273 = !DILocation(line: 313, column: 14, scope: !6254)
!6274 = !DILocation(line: 314, column: 12, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6254, file: !5730, line: 314, column: 6)
!6276 = !DILocation(line: 314, column: 6, scope: !6254)
!6277 = !DILocation(line: 315, column: 9, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6275, file: !5730, line: 314, column: 20)
!6279 = !DILocation(line: 316, column: 9, scope: !6278)
!6280 = !DILocation(line: 318, column: 13, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !5730, line: 318, column: 7)
!6282 = distinct !DILexicalBlock(scope: !6275, file: !5730, line: 317, column: 9)
!6283 = !DILocation(line: 318, column: 7, scope: !6282)
!6284 = !DILocation(line: 319, column: 11, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6281, file: !5730, line: 318, column: 39)
!6286 = !DILocation(line: 319, column: 4, scope: !6285)
!6287 = !DILocation(line: 0, scope: !6275)
!6288 = !DILocation(line: 324, column: 2, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !5730, line: 324, column: 2)
!6290 = distinct !DILexicalBlock(scope: !6254, file: !5730, line: 324, column: 2)
!6291 = !DILocation(line: 324, column: 2, scope: !6290)
!6292 = !DILocation(line: 324, column: 2, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6289, file: !5730, line: 324, column: 2)
!6294 = !DILocation(line: 326, column: 12, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6254, file: !5730, line: 326, column: 6)
!6296 = !DILocation(line: 326, column: 17, scope: !6295)
!6297 = !DILocation(line: 326, column: 20, scope: !6295)
!6298 = !DILocation(line: 326, column: 6, scope: !6254)
!6299 = !DILocation(line: 335, column: 50, scope: !6254)
!6300 = !DILocation(line: 335, column: 58, scope: !6254)
!6301 = !DILocation(line: 335, column: 24, scope: !6254)
!6302 = !DILocation(line: 336, column: 17, scope: !6254)
!6303 = !DILocation(line: 338, column: 9, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6254, file: !5730, line: 338, column: 6)
!6305 = !DILocation(line: 338, column: 6, scope: !6254)
!6306 = !DILocation(line: 341, column: 17, scope: !6254)
!6307 = !DILocation(line: 344, column: 20, scope: !6254)
!6308 = !DILocation(line: 344, column: 8, scope: !6254)
!6309 = !DILocation(line: 344, column: 47, scope: !6254)
!6310 = !DILocation(line: 345, column: 39, scope: !6254)
!6311 = !DILocation(line: 348, column: 16, scope: !6254)
!6312 = !DILocation(line: 349, column: 26, scope: !6254)
!6313 = !DILocation(line: 349, column: 24, scope: !6254)
!6314 = !DILocation(line: 353, column: 8, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6254, file: !5730, line: 353, column: 6)
!6316 = !DILocation(line: 353, column: 6, scope: !6254)
!6317 = !DILocation(line: 354, column: 3, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6315, file: !5730, line: 353, column: 14)
!6319 = !DILocation(line: 355, column: 3, scope: !6318)
!6320 = !DILocation(line: 356, column: 2, scope: !6318)
!6321 = !DILocation(line: 359, column: 6, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6254, file: !5730, line: 359, column: 6)
!6323 = !DILocation(line: 359, column: 24, scope: !6322)
!6324 = !DILocation(line: 359, column: 6, scope: !6254)
!6325 = !DILocation(line: 360, column: 3, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !5730, line: 359, column: 33)
!6327 = !DILocation(line: 361, column: 3, scope: !6326)
!6328 = !DILocation(line: 362, column: 2, scope: !6326)
!6329 = !DILocation(line: 364, column: 2, scope: !6254)
!6330 = !DILocation(line: 377, column: 1, scope: !6254)
!6331 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5730, file: !5730, line: 379, type: !6332, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6334)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{!102, !5733, !102, !153, !153}
!6334 = !{!6335, !6336, !6337, !6338, !6339, !6340, !6341, !6342, !6343, !6344, !6350, !6351}
!6335 = !DILocalVariable(name: "heap", arg: 1, scope: !6331, file: !5730, line: 379, type: !5733)
!6336 = !DILocalVariable(name: "ptr", arg: 2, scope: !6331, file: !5730, line: 379, type: !102)
!6337 = !DILocalVariable(name: "align", arg: 3, scope: !6331, file: !5730, line: 380, type: !153)
!6338 = !DILocalVariable(name: "bytes", arg: 4, scope: !6331, file: !5730, line: 380, type: !153)
!6339 = !DILocalVariable(name: "h", scope: !6331, file: !5730, line: 382, type: !3491)
!6340 = !DILocalVariable(name: "c", scope: !6331, file: !5730, line: 399, type: !3496)
!6341 = !DILocalVariable(name: "rc", scope: !6331, file: !5730, line: 400, type: !3496)
!6342 = !DILocalVariable(name: "align_gap", scope: !6331, file: !5730, line: 401, type: !153)
!6343 = !DILocalVariable(name: "chunks_need", scope: !6331, file: !5730, line: 402, type: !5875)
!6344 = !DILocalVariable(name: "split_size", scope: !6345, file: !5730, line: 435, type: !5875)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !5730, line: 433, column: 61)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !5730, line: 432, column: 13)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !5730, line: 409, column: 13)
!6348 = distinct !DILexicalBlock(scope: !6349, file: !5730, line: 406, column: 13)
!6349 = distinct !DILexicalBlock(scope: !6331, file: !5730, line: 404, column: 6)
!6350 = !DILocalVariable(name: "ptr2", scope: !6331, file: !5730, line: 474, type: !102)
!6351 = !DILocalVariable(name: "prev_size", scope: !6352, file: !5730, line: 477, type: !153)
!6352 = distinct !DILexicalBlock(scope: !6353, file: !5730, line: 476, column: 20)
!6353 = distinct !DILexicalBlock(scope: !6331, file: !5730, line: 476, column: 6)
!6354 = !DILocation(line: 0, scope: !6331)
!6355 = !DILocation(line: 382, column: 27, scope: !6331)
!6356 = !DILocation(line: 385, column: 10, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6331, file: !5730, line: 385, column: 6)
!6358 = !DILocation(line: 385, column: 6, scope: !6331)
!6359 = !DILocation(line: 386, column: 10, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6357, file: !5730, line: 385, column: 19)
!6361 = !DILocation(line: 386, column: 3, scope: !6360)
!6362 = !DILocation(line: 388, column: 12, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6331, file: !5730, line: 388, column: 6)
!6364 = !DILocation(line: 388, column: 6, scope: !6331)
!6365 = !DILocation(line: 389, column: 3, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6363, file: !5730, line: 388, column: 18)
!6367 = !DILocation(line: 390, column: 3, scope: !6366)
!6368 = !DILocation(line: 393, column: 2, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6370, file: !5730, line: 393, column: 2)
!6370 = distinct !DILexicalBlock(scope: !6331, file: !5730, line: 393, column: 2)
!6371 = !DILocation(line: 393, column: 2, scope: !6370)
!6372 = !DILocation(line: 393, column: 2, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6369, file: !5730, line: 393, column: 2)
!6374 = !DILocation(line: 395, column: 6, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6331, file: !5730, line: 395, column: 6)
!6376 = !DILocation(line: 395, column: 6, scope: !6331)
!6377 = !DILocation(line: 399, column: 16, scope: !6331)
!6378 = !DILocation(line: 400, column: 17, scope: !6331)
!6379 = !DILocation(line: 401, column: 49, scope: !6331)
!6380 = !DILocation(line: 401, column: 36, scope: !6331)
!6381 = !DILocation(line: 402, column: 52, scope: !6331)
!6382 = !DILocation(line: 402, column: 26, scope: !6331)
!6383 = !DILocation(line: 404, column: 6, scope: !6349)
!6384 = !DILocation(line: 404, column: 12, scope: !6349)
!6385 = !DILocation(line: 406, column: 13, scope: !6348)
!6386 = !DILocation(line: 406, column: 30, scope: !6348)
!6387 = !DILocation(line: 406, column: 13, scope: !6349)
!6388 = !DILocation(line: 409, column: 30, scope: !6347)
!6389 = !DILocation(line: 409, column: 13, scope: !6348)
!6390 = !DILocation(line: 420, column: 24, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6347, file: !5730, line: 409, column: 45)
!6392 = !DILocation(line: 420, column: 3, scope: !6391)
!6393 = !DILocation(line: 421, column: 3, scope: !6391)
!6394 = !DILocation(line: 422, column: 3, scope: !6391)
!6395 = !DILocation(line: 431, column: 3, scope: !6391)
!6396 = !DILocation(line: 432, column: 14, scope: !6346)
!6397 = !DILocation(line: 432, column: 32, scope: !6346)
!6398 = !DILocation(line: 433, column: 26, scope: !6346)
!6399 = !DILocation(line: 433, column: 24, scope: !6346)
!6400 = !DILocation(line: 433, column: 44, scope: !6346)
!6401 = !DILocation(line: 432, column: 13, scope: !6347)
!6402 = !DILocation(line: 435, column: 38, scope: !6345)
!6403 = !DILocation(line: 0, scope: !6345)
!6404 = !DILocation(line: 445, column: 3, scope: !6345)
!6405 = !DILocation(line: 447, column: 20, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6345, file: !5730, line: 447, column: 7)
!6407 = !DILocation(line: 447, column: 18, scope: !6406)
!6408 = !DILocation(line: 447, column: 7, scope: !6345)
!6409 = !DILocation(line: 448, column: 27, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6406, file: !5730, line: 447, column: 39)
!6411 = !DILocation(line: 448, column: 4, scope: !6410)
!6412 = !DILocation(line: 449, column: 4, scope: !6410)
!6413 = !DILocation(line: 450, column: 3, scope: !6410)
!6414 = !DILocation(line: 452, column: 3, scope: !6345)
!6415 = !DILocation(line: 453, column: 3, scope: !6345)
!6416 = !DILocation(line: 474, column: 15, scope: !6331)
!6417 = !DILocation(line: 476, column: 11, scope: !6353)
!6418 = !DILocation(line: 476, column: 6, scope: !6331)
!6419 = !DILocation(line: 477, column: 42, scope: !6352)
!6420 = !DILocation(line: 477, column: 22, scope: !6352)
!6421 = !DILocation(line: 477, column: 60, scope: !6352)
!6422 = !DILocation(line: 0, scope: !6352)
!6423 = !DILocation(line: 479, column: 21, scope: !6352)
!6424 = !DILocation(line: 479, column: 3, scope: !6352)
!6425 = !DILocation(line: 480, column: 3, scope: !6352)
!6426 = !DILocation(line: 481, column: 2, scope: !6352)
!6427 = !DILocation(line: 483, column: 1, scope: !6331)
!6428 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !3478, file: !3478, line: 245, type: !6429, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6431)
!6429 = !DISubroutineType(types: !6430)
!6430 = !{!153, !3491, !5875}
!6431 = !{!6432, !6433}
!6432 = !DILocalVariable(name: "h", arg: 1, scope: !6428, file: !3478, line: 245, type: !3491)
!6433 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !6428, file: !3478, line: 245, type: !5875)
!6434 = !DILocation(line: 0, scope: !6428)
!6435 = !DILocation(line: 247, column: 20, scope: !6428)
!6436 = !DILocation(line: 247, column: 33, scope: !6428)
!6437 = !DILocation(line: 247, column: 2, scope: !6428)
!6438 = distinct !DISubprogram(name: "sys_heap_init", scope: !5730, file: !5730, line: 485, type: !6439, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3474, retainedNodes: !6441)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{null, !5733, !102, !153}
!6441 = !{!6442, !6443, !6444, !6445, !6446, !6447, !6448, !6449, !6450, !6451}
!6442 = !DILocalVariable(name: "heap", arg: 1, scope: !6438, file: !5730, line: 485, type: !5733)
!6443 = !DILocalVariable(name: "mem", arg: 2, scope: !6438, file: !5730, line: 485, type: !102)
!6444 = !DILocalVariable(name: "bytes", arg: 3, scope: !6438, file: !5730, line: 485, type: !153)
!6445 = !DILocalVariable(name: "addr", scope: !6438, file: !5730, line: 502, type: !22)
!6446 = !DILocalVariable(name: "end", scope: !6438, file: !5730, line: 503, type: !22)
!6447 = !DILocalVariable(name: "heap_sz", scope: !6438, file: !5730, line: 504, type: !5875)
!6448 = !DILocalVariable(name: "h", scope: !6438, file: !5730, line: 509, type: !3491)
!6449 = !DILocalVariable(name: "nb_buckets", scope: !6438, file: !5730, line: 520, type: !103)
!6450 = !DILocalVariable(name: "chunk0_size", scope: !6438, file: !5730, line: 521, type: !5875)
!6451 = !DILocalVariable(name: "i", scope: !6452, file: !5730, line: 526, type: !103)
!6452 = distinct !DILexicalBlock(scope: !6438, file: !5730, line: 526, column: 2)
!6453 = !DILocation(line: 0, scope: !6438)
!6454 = !DILocation(line: 491, column: 3, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !5730, line: 491, column: 3)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !5730, line: 491, column: 3)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !5730, line: 489, column: 46)
!6458 = distinct !DILexicalBlock(scope: !6438, file: !5730, line: 489, column: 6)
!6459 = !DILocation(line: 491, column: 3, scope: !6456)
!6460 = !DILocation(line: 491, column: 3, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6455, file: !5730, line: 491, column: 3)
!6462 = !DILocation(line: 498, column: 2, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !5730, line: 498, column: 2)
!6464 = distinct !DILexicalBlock(scope: !6438, file: !5730, line: 498, column: 2)
!6465 = !DILocation(line: 498, column: 2, scope: !6464)
!6466 = !DILocation(line: 498, column: 2, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6463, file: !5730, line: 498, column: 2)
!6468 = !DILocation(line: 499, column: 8, scope: !6438)
!6469 = !DILocation(line: 502, column: 19, scope: !6438)
!6470 = !DILocation(line: 503, column: 18, scope: !6438)
!6471 = !DILocation(line: 504, column: 27, scope: !6438)
!6472 = !DILocation(line: 504, column: 35, scope: !6438)
!6473 = !DILocation(line: 507, column: 2, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6475, file: !5730, line: 507, column: 2)
!6475 = distinct !DILexicalBlock(scope: !6438, file: !5730, line: 507, column: 2)
!6476 = !DILocation(line: 507, column: 2, scope: !6475)
!6477 = !DILocation(line: 507, column: 2, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6474, file: !5730, line: 507, column: 2)
!6479 = !DILocation(line: 509, column: 21, scope: !6438)
!6480 = !DILocation(line: 510, column: 8, scope: !6438)
!6481 = !DILocation(line: 510, column: 13, scope: !6438)
!6482 = !DILocation(line: 511, column: 5, scope: !6438)
!6483 = !DILocation(line: 511, column: 15, scope: !6438)
!6484 = !DILocation(line: 512, column: 5, scope: !6438)
!6485 = !DILocation(line: 512, column: 19, scope: !6438)
!6486 = !DILocation(line: 520, column: 19, scope: !6438)
!6487 = !DILocation(line: 522, column: 21, scope: !6438)
!6488 = !DILocation(line: 521, column: 56, scope: !6438)
!6489 = !DILocation(line: 521, column: 26, scope: !6438)
!6490 = !DILocation(line: 524, column: 2, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !5730, line: 524, column: 2)
!6492 = distinct !DILexicalBlock(scope: !6438, file: !5730, line: 524, column: 2)
!6493 = !DILocation(line: 524, column: 2, scope: !6492)
!6494 = !DILocation(line: 0, scope: !6452)
!6495 = !DILocation(line: 526, column: 20, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6452, file: !5730, line: 526, column: 2)
!6497 = !DILocation(line: 526, column: 2, scope: !6452)
!6498 = !DILocation(line: 524, column: 2, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6491, file: !5730, line: 524, column: 2)
!6500 = !DILocation(line: 531, column: 2, scope: !6438)
!6501 = !DILocation(line: 532, column: 2, scope: !6438)
!6502 = !DILocation(line: 533, column: 2, scope: !6438)
!6503 = !DILocation(line: 536, column: 41, scope: !6438)
!6504 = !DILocation(line: 536, column: 2, scope: !6438)
!6505 = !DILocation(line: 537, column: 2, scope: !6438)
!6506 = !DILocation(line: 540, column: 2, scope: !6438)
!6507 = !DILocation(line: 541, column: 2, scope: !6438)
!6508 = !DILocation(line: 542, column: 2, scope: !6438)
!6509 = !DILocation(line: 544, column: 2, scope: !6438)
!6510 = !DILocation(line: 545, column: 1, scope: !6438)
!6511 = !DILocation(line: 527, column: 17, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6496, file: !5730, line: 526, column: 39)
!6513 = !DILocation(line: 527, column: 22, scope: !6512)
!6514 = !DILocation(line: 526, column: 35, scope: !6496)
!6515 = distinct !{!6515, !6497, !6516}
!6516 = !DILocation(line: 528, column: 2, scope: !6452)
!6517 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3511, file: !3511, line: 1338, type: !6518, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !6526)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{!103, !4886, !102, !336, !6520, !108}
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4504, line: 99, baseType: !6521)
!6521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4504, line: 40, baseType: !6522)
!6522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3511, baseType: !6523)
!6523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6524)
!6524 = !{!6525}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6523, file: !3511, baseType: !102, size: 32)
!6526 = !{!6527, !6528, !6529, !6530, !6531, !6532, !6536, !6537, !6538, !6540, !6545, !6588, !6591, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6603, !6604, !6605, !6609, !6612, !6614, !6617, !6618, !6619, !6624, !6630, !6633, !6637, !6643, !6647, !6650, !6652, !6655}
!6527 = !DILocalVariable(name: "out", arg: 1, scope: !6517, file: !3511, line: 1338, type: !4886)
!6528 = !DILocalVariable(name: "ctx", arg: 2, scope: !6517, file: !3511, line: 1338, type: !102)
!6529 = !DILocalVariable(name: "fp", arg: 3, scope: !6517, file: !3511, line: 1338, type: !336)
!6530 = !DILocalVariable(name: "ap", arg: 4, scope: !6517, file: !3511, line: 1339, type: !6520)
!6531 = !DILocalVariable(name: "flags", arg: 5, scope: !6517, file: !3511, line: 1339, type: !108)
!6532 = !DILocalVariable(name: "buf", scope: !6517, file: !3511, line: 1341, type: !6533)
!6533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 176, elements: !6534)
!6534 = !{!6535}
!6535 = !DISubrange(count: 22)
!6536 = !DILocalVariable(name: "count", scope: !6517, file: !3511, line: 1342, type: !153)
!6537 = !DILocalVariable(name: "sint", scope: !6517, file: !3511, line: 1343, type: !3530)
!6538 = !DILocalVariable(name: "tagged_ap", scope: !6517, file: !3511, line: 1345, type: !6539)
!6539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!6540 = !DILocalVariable(name: "rc", scope: !6541, file: !3511, line: 1377, type: !103)
!6541 = distinct !DILexicalBlock(scope: !6542, file: !3511, line: 1377, column: 4)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !3511, line: 1376, column: 19)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1376, column: 7)
!6544 = distinct !DILexicalBlock(scope: !6517, file: !3511, line: 1375, column: 19)
!6545 = !DILocalVariable(name: "state", scope: !6544, file: !3511, line: 1395, type: !6546)
!6546 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6517, file: !3511, line: 1392, size: 192, elements: !6547)
!6547 = !{!6548, !6556}
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6546, file: !3511, line: 1393, baseType: !6549, size: 64)
!6549 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3511, line: 166, size: 64, elements: !6550)
!6550 = !{!6551, !6552, !6553, !6554, !6555}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6549, file: !3511, line: 168, baseType: !3530, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6549, file: !3511, line: 171, baseType: !3533, size: 64)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6549, file: !3511, line: 174, baseType: !776, size: 64)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6549, file: !3511, line: 177, baseType: !774, size: 64)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6549, file: !3511, line: 180, baseType: !102, size: 32)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6546, file: !3511, line: 1394, baseType: !6557, size: 96, offset: 64)
!6557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3511, line: 189, size: 96, elements: !6558)
!6558 = !{!6559, !6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567, !6568, !6569, !6570, !6571, !6572, !6573, !6574, !6575, !6576, !6577, !6578, !6583}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6557, file: !3511, line: 191, baseType: !119, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6557, file: !3511, line: 194, baseType: !119, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6557, file: !3511, line: 197, baseType: !119, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6557, file: !3511, line: 200, baseType: !119, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6557, file: !3511, line: 203, baseType: !119, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6557, file: !3511, line: 206, baseType: !119, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6557, file: !3511, line: 209, baseType: !119, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6557, file: !3511, line: 212, baseType: !119, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6557, file: !3511, line: 219, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6557, file: !3511, line: 222, baseType: !119, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6557, file: !3511, line: 229, baseType: !119, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6557, file: !3511, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6557, file: !3511, line: 238, baseType: !119, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6557, file: !3511, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6557, file: !3511, line: 244, baseType: !119, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6557, file: !3511, line: 247, baseType: !119, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6557, file: !3511, line: 252, baseType: !119, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6557, file: !3511, line: 257, baseType: !119, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6557, file: !3511, line: 260, baseType: !165, size: 8, offset: 24)
!6578 = !DIDerivedType(tag: DW_TAG_member, scope: !6557, file: !3511, line: 262, baseType: !6579, size: 32, offset: 32)
!6579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6557, file: !3511, line: 262, size: 32, elements: !6580)
!6580 = !{!6581, !6582}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6579, file: !3511, line: 267, baseType: !103, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6579, file: !3511, line: 289, baseType: !103, size: 32)
!6583 = !DIDerivedType(tag: DW_TAG_member, scope: !6557, file: !3511, line: 292, baseType: !6584, size: 32, offset: 64)
!6584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6557, file: !3511, line: 292, size: 32, elements: !6585)
!6585 = !{!6586, !6587}
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6584, file: !3511, line: 297, baseType: !103, size: 32)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6584, file: !3511, line: 306, baseType: !103, size: 32)
!6588 = !DILocalVariable(name: "conv", scope: !6544, file: !3511, line: 1400, type: !6589)
!6589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6590)
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6557, size: 32)
!6591 = !DILocalVariable(name: "value", scope: !6544, file: !3511, line: 1401, type: !6592)
!6592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6593)
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 32)
!6594 = !DILocalVariable(name: "sp", scope: !6544, file: !3511, line: 1402, type: !336)
!6595 = !DILocalVariable(name: "width", scope: !6544, file: !3511, line: 1403, type: !103)
!6596 = !DILocalVariable(name: "precision", scope: !6544, file: !3511, line: 1404, type: !103)
!6597 = !DILocalVariable(name: "bps", scope: !6544, file: !3511, line: 1405, type: !336)
!6598 = !DILocalVariable(name: "bpe", scope: !6544, file: !3511, line: 1406, type: !336)
!6599 = !DILocalVariable(name: "sign", scope: !6544, file: !3511, line: 1407, type: !158)
!6600 = !DILocalVariable(name: "arg", scope: !6601, file: !3511, line: 1432, type: !103)
!6601 = distinct !DILexicalBlock(scope: !6602, file: !3511, line: 1431, column: 24)
!6602 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1431, column: 7)
!6603 = !DILocalVariable(name: "specifier_cat", scope: !6544, file: !3511, line: 1468, type: !3510)
!6604 = !DILocalVariable(name: "length_mod", scope: !6544, file: !3511, line: 1470, type: !3518)
!6605 = !DILocalVariable(name: "rc", scope: !6606, file: !3511, line: 1575, type: !103)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !3511, line: 1575, column: 4)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !3511, line: 1574, column: 43)
!6608 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1574, column: 7)
!6609 = !DILocalVariable(name: "rc", scope: !6610, file: !3511, line: 1584, type: !103)
!6610 = distinct !DILexicalBlock(scope: !6611, file: !3511, line: 1584, column: 4)
!6611 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1582, column: 28)
!6612 = !DILocalVariable(name: "len", scope: !6613, file: !3511, line: 1589, type: !153)
!6613 = distinct !DILexicalBlock(scope: !6611, file: !3511, line: 1586, column: 13)
!6614 = !DILocalVariable(name: "len", scope: !6615, file: !3511, line: 1641, type: !153)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !3511, line: 1640, column: 24)
!6616 = distinct !DILexicalBlock(scope: !6611, file: !3511, line: 1640, column: 8)
!6617 = !DILocalVariable(name: "nj_len", scope: !6544, file: !3511, line: 1722, type: !153)
!6618 = !DILocalVariable(name: "pad_len", scope: !6544, file: !3511, line: 1723, type: !103)
!6619 = !DILocalVariable(name: "pad", scope: !6620, file: !3511, line: 1751, type: !158)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3511, line: 1750, column: 26)
!6621 = distinct !DILexicalBlock(scope: !6622, file: !3511, line: 1750, column: 8)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !3511, line: 1747, column: 18)
!6623 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1747, column: 7)
!6624 = !DILocalVariable(name: "rc", scope: !6625, file: !3511, line: 1758, type: !103)
!6625 = distinct !DILexicalBlock(scope: !6626, file: !3511, line: 1758, column: 7)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !3511, line: 1757, column: 21)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !3511, line: 1757, column: 10)
!6628 = distinct !DILexicalBlock(scope: !6629, file: !3511, line: 1756, column: 26)
!6629 = distinct !DILexicalBlock(scope: !6620, file: !3511, line: 1756, column: 9)
!6630 = !DILocalVariable(name: "rc", scope: !6631, file: !3511, line: 1765, type: !103)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !3511, line: 1765, column: 6)
!6632 = distinct !DILexicalBlock(scope: !6620, file: !3511, line: 1764, column: 25)
!6633 = !DILocalVariable(name: "rc", scope: !6634, file: !3511, line: 1774, type: !103)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3511, line: 1774, column: 4)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !3511, line: 1773, column: 18)
!6636 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1773, column: 7)
!6637 = !DILocalVariable(name: "rc", scope: !6638, file: !3511, line: 1819, type: !103)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !3511, line: 1819, column: 5)
!6639 = distinct !DILexicalBlock(scope: !6640, file: !3511, line: 1818, column: 44)
!6640 = distinct !DILexicalBlock(scope: !6641, file: !3511, line: 1818, column: 8)
!6641 = distinct !DILexicalBlock(scope: !6642, file: !3511, line: 1817, column: 10)
!6642 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1777, column: 7)
!6643 = !DILocalVariable(name: "rc", scope: !6644, file: !3511, line: 1823, type: !103)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !3511, line: 1823, column: 5)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !3511, line: 1822, column: 26)
!6646 = distinct !DILexicalBlock(scope: !6641, file: !3511, line: 1822, column: 8)
!6647 = !DILocalVariable(name: "rc", scope: !6648, file: !3511, line: 1828, type: !103)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !3511, line: 1828, column: 5)
!6649 = distinct !DILexicalBlock(scope: !6641, file: !3511, line: 1827, column: 26)
!6650 = !DILocalVariable(name: "rc", scope: !6651, file: !3511, line: 1831, type: !103)
!6651 = distinct !DILexicalBlock(scope: !6641, file: !3511, line: 1831, column: 4)
!6652 = !DILocalVariable(name: "rc", scope: !6653, file: !3511, line: 1836, type: !103)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !3511, line: 1836, column: 4)
!6654 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1835, column: 21)
!6655 = !DILabel(scope: !6611, name: "prec_int_pad0", file: !3511, line: 1634)
!6656 = !DILocation(line: 0, scope: !6517)
!6657 = !DILocation(line: 1341, column: 2, scope: !6517)
!6658 = !DILocation(line: 1341, column: 7, scope: !6517)
!6659 = !DILocation(line: 1375, column: 2, scope: !6517)
!6660 = !DILocation(line: 1342, column: 9, scope: !6517)
!6661 = !DILocation(line: 1375, column: 9, scope: !6517)
!6662 = !DILocation(line: 1377, column: 4, scope: !6541)
!6663 = !DILocation(line: 0, scope: !6541)
!6664 = !DILocation(line: 1377, column: 4, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6541, file: !3511, line: 1377, column: 4)
!6666 = distinct !{!6666, !6659, !6667}
!6667 = !DILocation(line: 1839, column: 2, scope: !6517)
!6668 = !DILocation(line: 1392, column: 3, scope: !6544)
!6669 = !DILocation(line: 1395, column: 5, scope: !6544)
!6670 = !DILocation(line: 0, scope: !6544)
!6671 = !DILocation(line: 1409, column: 8, scope: !6544)
!6672 = !DILocation(line: 1414, column: 13, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1414, column: 7)
!6674 = !DILocation(line: 1414, column: 7, scope: !6544)
!6675 = !DILocation(line: 1415, column: 12, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6673, file: !3511, line: 1414, column: 25)
!6677 = !DILocation(line: 1417, column: 14, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6676, file: !3511, line: 1417, column: 8)
!6679 = !DILocation(line: 1417, column: 8, scope: !6676)
!6680 = !DILocation(line: 1418, column: 21, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6678, file: !3511, line: 1417, column: 19)
!6682 = !DILocation(line: 1419, column: 13, scope: !6681)
!6683 = !DILocation(line: 1420, column: 4, scope: !6681)
!6684 = !DILocation(line: 1421, column: 20, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6673, file: !3511, line: 1421, column: 14)
!6686 = !DILocation(line: 1421, column: 14, scope: !6673)
!6687 = !DILocation(line: 1431, column: 13, scope: !6602)
!6688 = !DILocation(line: 1431, column: 7, scope: !6544)
!6689 = !DILocation(line: 1432, column: 14, scope: !6601)
!6690 = !DILocation(line: 0, scope: !6601)
!6691 = !DILocation(line: 1434, column: 12, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6601, file: !3511, line: 1434, column: 8)
!6693 = !DILocation(line: 1434, column: 8, scope: !6601)
!6694 = !DILocation(line: 1435, column: 24, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6692, file: !3511, line: 1434, column: 17)
!6696 = !DILocation(line: 1436, column: 4, scope: !6695)
!6697 = !DILocation(line: 1439, column: 20, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6602, file: !3511, line: 1439, column: 14)
!6699 = !DILocation(line: 1439, column: 14, scope: !6602)
!6700 = !DILocation(line: 1469, column: 37, scope: !6544)
!6701 = !DILocation(line: 1448, column: 20, scope: !6544)
!6702 = !DILocation(line: 1449, column: 22, scope: !6544)
!6703 = !DILocation(line: 1471, column: 34, scope: !6544)
!6704 = !DILocation(line: 1478, column: 7, scope: !6544)
!6705 = !DILocation(line: 1479, column: 4, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !3511, line: 1478, column: 40)
!6707 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1478, column: 7)
!6708 = !DILocation(line: 1484, column: 19, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6706, file: !3511, line: 1479, column: 24)
!6710 = !DILocation(line: 1484, column: 17, scope: !6709)
!6711 = !DILocation(line: 1485, column: 5, scope: !6709)
!6712 = !DILocation(line: 1492, column: 20, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !3511, line: 1491, column: 12)
!6714 = distinct !DILexicalBlock(scope: !6709, file: !3511, line: 1487, column: 9)
!6715 = !DILocation(line: 1492, column: 18, scope: !6713)
!6716 = !DILocation(line: 1494, column: 5, scope: !6709)
!6717 = !DILocation(line: 1497, column: 23, scope: !6709)
!6718 = !DILocation(line: 1496, column: 17, scope: !6709)
!6719 = !DILocation(line: 1498, column: 5, scope: !6709)
!6720 = !DILocation(line: 1501, column: 23, scope: !6709)
!6721 = !DILocation(line: 1500, column: 17, scope: !6709)
!6722 = !DILocation(line: 1502, column: 5, scope: !6709)
!6723 = !DILocation(line: 1513, column: 23, scope: !6709)
!6724 = !DILocation(line: 1513, column: 6, scope: !6709)
!6725 = !DILocation(line: 1512, column: 17, scope: !6709)
!6726 = !DILocation(line: 1514, column: 5, scope: !6709)
!6727 = !DILocation(line: 0, scope: !6709)
!6728 = !DILocation(line: 1516, column: 8, scope: !6706)
!6729 = !DILocation(line: 1517, column: 19, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !3511, line: 1516, column: 33)
!6731 = distinct !DILexicalBlock(scope: !6706, file: !3511, line: 1516, column: 8)
!6732 = !DILocation(line: 1517, column: 17, scope: !6730)
!6733 = !DILocation(line: 1518, column: 4, scope: !6730)
!6734 = !DILocation(line: 1519, column: 19, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3511, line: 1518, column: 39)
!6736 = distinct !DILexicalBlock(scope: !6731, file: !3511, line: 1518, column: 15)
!6737 = !DILocation(line: 1519, column: 17, scope: !6735)
!6738 = !DILocation(line: 1520, column: 4, scope: !6735)
!6739 = !DILocation(line: 1522, column: 4, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !3511, line: 1521, column: 47)
!6741 = distinct !DILexicalBlock(scope: !6707, file: !3511, line: 1521, column: 14)
!6742 = !DILocation(line: 1527, column: 19, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6740, file: !3511, line: 1522, column: 24)
!6744 = !DILocation(line: 1527, column: 17, scope: !6743)
!6745 = !DILocation(line: 1528, column: 5, scope: !6743)
!6746 = !DILocation(line: 0, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !3511, line: 1530, column: 9)
!6748 = !DILocation(line: 1540, column: 23, scope: !6743)
!6749 = !DILocation(line: 1539, column: 17, scope: !6743)
!6750 = !DILocation(line: 1542, column: 5, scope: !6743)
!6751 = !DILocation(line: 1545, column: 23, scope: !6743)
!6752 = !DILocation(line: 1544, column: 17, scope: !6743)
!6753 = !DILocation(line: 1547, column: 5, scope: !6743)
!6754 = !DILocation(line: 1551, column: 23, scope: !6743)
!6755 = !DILocation(line: 1551, column: 6, scope: !6743)
!6756 = !DILocation(line: 1550, column: 17, scope: !6743)
!6757 = !DILocation(line: 1552, column: 5, scope: !6743)
!6758 = !DILocation(line: 0, scope: !6743)
!6759 = !DILocation(line: 1554, column: 8, scope: !6740)
!6760 = !DILocation(line: 1555, column: 19, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !3511, line: 1554, column: 33)
!6762 = distinct !DILexicalBlock(scope: !6740, file: !3511, line: 1554, column: 8)
!6763 = !DILocation(line: 1555, column: 17, scope: !6761)
!6764 = !DILocation(line: 1556, column: 4, scope: !6761)
!6765 = !DILocation(line: 1557, column: 19, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !3511, line: 1556, column: 39)
!6767 = distinct !DILexicalBlock(scope: !6762, file: !3511, line: 1556, column: 15)
!6768 = !DILocation(line: 1557, column: 17, scope: !6766)
!6769 = !DILocation(line: 1558, column: 4, scope: !6766)
!6770 = !DILocation(line: 0, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !3511, line: 1560, column: 8)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !3511, line: 1559, column: 45)
!6773 = distinct !DILexicalBlock(scope: !6741, file: !3511, line: 1559, column: 14)
!6774 = !DILocation(line: 1566, column: 17, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !3511, line: 1565, column: 46)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !3511, line: 1565, column: 14)
!6777 = !DILocation(line: 1566, column: 15, scope: !6775)
!6778 = !DILocation(line: 1567, column: 3, scope: !6775)
!6779 = !DILocation(line: 1574, column: 21, scope: !6608)
!6780 = !DILocation(line: 1575, column: 4, scope: !6606)
!6781 = !DILocation(line: 0, scope: !6606)
!6782 = !DILocation(line: 1575, column: 4, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6606, file: !3511, line: 1575, column: 4)
!6784 = !DILocation(line: 1582, column: 17, scope: !6544)
!6785 = !DILocation(line: 1582, column: 3, scope: !6544)
!6786 = !DILocation(line: 1584, column: 4, scope: !6610)
!6787 = !DILocation(line: 0, scope: !6610)
!6788 = !DILocation(line: 1584, column: 4, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6610, file: !3511, line: 1584, column: 4)
!6790 = !DILocation(line: 1587, column: 31, scope: !6613)
!6791 = !DILocation(line: 1591, column: 18, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6613, file: !3511, line: 1591, column: 8)
!6793 = !DILocation(line: 1591, column: 8, scope: !6613)
!6794 = !DILocation(line: 1592, column: 11, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6792, file: !3511, line: 1591, column: 24)
!6796 = !DILocation(line: 0, scope: !6613)
!6797 = !DILocation(line: 1593, column: 4, scope: !6795)
!6798 = !DILocation(line: 1594, column: 11, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !3511, line: 1593, column: 11)
!6800 = !DILocation(line: 1604, column: 51, scope: !6611)
!6801 = !DILocation(line: 1604, column: 13, scope: !6611)
!6802 = !DILocation(line: 1604, column: 11, scope: !6611)
!6803 = !DILocation(line: 1606, column: 4, scope: !6611)
!6804 = !DILocation(line: 1609, column: 14, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6611, file: !3511, line: 1609, column: 8)
!6806 = !DILocation(line: 1609, column: 8, scope: !6611)
!6807 = !DILocation(line: 1619, column: 18, scope: !6611)
!6808 = !DILocation(line: 1620, column: 13, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6611, file: !3511, line: 1620, column: 8)
!6810 = !DILocation(line: 1620, column: 8, scope: !6611)
!6811 = !DILocation(line: 1622, column: 36, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6809, file: !3511, line: 1620, column: 18)
!6813 = !DILocation(line: 1622, column: 17, scope: !6812)
!6814 = !DILocation(line: 1623, column: 4, scope: !6812)
!6815 = !DILocation(line: 1632, column: 29, scope: !6611)
!6816 = !DILocation(line: 1632, column: 10, scope: !6611)
!6817 = !DILocation(line: 1632, column: 4, scope: !6611)
!6818 = !DILocation(line: 1407, column: 8, scope: !6544)
!6819 = !DILocation(line: 0, scope: !6611)
!6820 = !DILocation(line: 1634, column: 3, scope: !6611)
!6821 = !DILocation(line: 1640, column: 18, scope: !6616)
!6822 = !DILocation(line: 1640, column: 8, scope: !6611)
!6823 = !DILocation(line: 1729, column: 13, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1729, column: 7)
!6825 = !DILocation(line: 1641, column: 22, scope: !6615)
!6826 = !DILocation(line: 0, scope: !6615)
!6827 = !DILocation(line: 1646, column: 21, scope: !6615)
!6828 = !DILocation(line: 1649, column: 13, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6615, file: !3511, line: 1649, column: 9)
!6830 = !DILocation(line: 1649, column: 9, scope: !6615)
!6831 = !DILocation(line: 1650, column: 35, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6829, file: !3511, line: 1649, column: 34)
!6833 = !DILocation(line: 1650, column: 23, scope: !6832)
!6834 = !DILocation(line: 1651, column: 5, scope: !6832)
!6835 = !DILocation(line: 1660, column: 15, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6611, file: !3511, line: 1660, column: 8)
!6837 = !DILocation(line: 1660, column: 19, scope: !6836)
!6838 = !DILocation(line: 1660, column: 8, scope: !6611)
!6839 = !DILocation(line: 1661, column: 23, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6836, file: !3511, line: 1660, column: 28)
!6841 = !DILocation(line: 1661, column: 11, scope: !6840)
!6842 = !DILocation(line: 1665, column: 22, scope: !6840)
!6843 = !DILocation(line: 1666, column: 21, scope: !6840)
!6844 = !DILocation(line: 1668, column: 5, scope: !6840)
!6845 = !DILocation(line: 1677, column: 30, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !3511, line: 1676, column: 49)
!6847 = distinct !DILexicalBlock(scope: !6611, file: !3511, line: 1676, column: 8)
!6848 = !DILocation(line: 1677, column: 5, scope: !6846)
!6849 = !DILocation(line: 1680, column: 4, scope: !6611)
!6850 = !DILocation(line: 0, scope: !6792)
!6851 = !DILocation(line: 1597, column: 14, scope: !6613)
!6852 = !DILocation(line: 1699, column: 11, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1699, column: 7)
!6854 = !DILocation(line: 1699, column: 7, scope: !6544)
!6855 = !DILocation(line: 1725, column: 7, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1725, column: 7)
!6857 = !DILocation(line: 1725, column: 12, scope: !6856)
!6858 = !DILocation(line: 1747, column: 13, scope: !6623)
!6859 = !DILocation(line: 1747, column: 7, scope: !6544)
!6860 = !DILocation(line: 1722, column: 24, scope: !6544)
!6861 = !DILocation(line: 1725, column: 7, scope: !6544)
!6862 = !DILocation(line: 1729, column: 7, scope: !6544)
!6863 = !DILocation(line: 1736, column: 13, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6544, file: !3511, line: 1736, column: 7)
!6865 = !DILocation(line: 1735, column: 19, scope: !6544)
!6866 = !DILocation(line: 1736, column: 7, scope: !6544)
!6867 = !DILocation(line: 1748, column: 10, scope: !6622)
!6868 = !DILocation(line: 1750, column: 15, scope: !6621)
!6869 = !DILocation(line: 1750, column: 8, scope: !6622)
!6870 = !DILocation(line: 0, scope: !6620)
!6871 = !DILocation(line: 1756, column: 15, scope: !6629)
!6872 = !DILocation(line: 1756, column: 9, scope: !6620)
!6873 = !DILocation(line: 1758, column: 7, scope: !6625)
!6874 = !DILocation(line: 0, scope: !6625)
!6875 = !DILocation(line: 1758, column: 7, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6625, file: !3511, line: 1758, column: 7)
!6877 = !DILocation(line: 1764, column: 5, scope: !6620)
!6878 = !DILocation(line: 0, scope: !6622)
!6879 = !DILocation(line: 1764, column: 20, scope: !6620)
!6880 = !DILocation(line: 1764, column: 17, scope: !6620)
!6881 = !DILocation(line: 1765, column: 6, scope: !6631)
!6882 = !DILocation(line: 0, scope: !6631)
!6883 = !DILocation(line: 1765, column: 6, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6631, file: !3511, line: 1765, column: 6)
!6885 = distinct !{!6885, !6877, !6886}
!6886 = !DILocation(line: 1766, column: 5, scope: !6620)
!6887 = !DILocation(line: 1773, column: 12, scope: !6636)
!6888 = !DILocation(line: 1773, column: 7, scope: !6544)
!6889 = !DILocation(line: 1773, column: 7, scope: !6636)
!6890 = !DILocation(line: 1774, column: 4, scope: !6634)
!6891 = !DILocation(line: 0, scope: !6634)
!6892 = !DILocation(line: 1774, column: 4, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6634, file: !3511, line: 1774, column: 4)
!6894 = !DILocation(line: 1818, column: 8, scope: !6640)
!6895 = !DILocation(line: 1818, column: 27, scope: !6640)
!6896 = !DILocation(line: 1818, column: 25, scope: !6640)
!6897 = !DILocation(line: 1818, column: 8, scope: !6641)
!6898 = !DILocation(line: 1819, column: 5, scope: !6638)
!6899 = !DILocation(line: 0, scope: !6638)
!6900 = !DILocation(line: 1819, column: 5, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6638, file: !3511, line: 1819, column: 5)
!6902 = !DILocation(line: 1822, column: 14, scope: !6646)
!6903 = !DILocation(line: 1822, column: 8, scope: !6641)
!6904 = !DILocation(line: 1823, column: 5, scope: !6644)
!6905 = !DILocation(line: 0, scope: !6644)
!6906 = !DILocation(line: 1823, column: 5, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6644, file: !3511, line: 1823, column: 5)
!6908 = !DILocation(line: 1826, column: 20, scope: !6641)
!6909 = !DILocation(line: 1827, column: 4, scope: !6641)
!6910 = !DILocation(line: 0, scope: !6641)
!6911 = !DILocation(line: 1827, column: 21, scope: !6641)
!6912 = !DILocation(line: 1827, column: 18, scope: !6641)
!6913 = !DILocation(line: 1828, column: 5, scope: !6648)
!6914 = !DILocation(line: 0, scope: !6648)
!6915 = !DILocation(line: 1828, column: 5, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6648, file: !3511, line: 1828, column: 5)
!6917 = distinct !{!6917, !6909, !6918}
!6918 = !DILocation(line: 1829, column: 4, scope: !6641)
!6919 = !DILocation(line: 1831, column: 4, scope: !6651)
!6920 = !DILocation(line: 0, scope: !6651)
!6921 = !DILocation(line: 1831, column: 4, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6651, file: !3511, line: 1831, column: 4)
!6923 = !DILocation(line: 1835, column: 16, scope: !6544)
!6924 = !DILocation(line: 1835, column: 3, scope: !6544)
!6925 = !DILocation(line: 1836, column: 4, scope: !6653)
!6926 = !DILocation(line: 0, scope: !6653)
!6927 = !DILocation(line: 1836, column: 4, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6653, file: !3511, line: 1836, column: 4)
!6929 = !DILocation(line: 1837, column: 4, scope: !6654)
!6930 = distinct !{!6930, !6924, !6931}
!6931 = !DILocation(line: 1838, column: 3, scope: !6544)
!6932 = !DILocation(line: 1844, column: 1, scope: !6517)
!6933 = distinct !DISubprogram(name: "extract_conversion", scope: !3511, file: !3511, line: 642, type: !6934, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !6936)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{!336, !6590, !336}
!6936 = !{!6937, !6938}
!6937 = !DILocalVariable(name: "conv", arg: 1, scope: !6933, file: !3511, line: 642, type: !6590)
!6938 = !DILocalVariable(name: "sp", arg: 2, scope: !6933, file: !3511, line: 643, type: !336)
!6939 = !DILocation(line: 0, scope: !6933)
!6940 = !DILocation(line: 645, column: 10, scope: !6933)
!6941 = !DILocation(line: 653, column: 2, scope: !6933)
!6942 = !DILocation(line: 654, column: 6, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6933, file: !3511, line: 654, column: 6)
!6944 = !DILocation(line: 654, column: 10, scope: !6943)
!6945 = !DILocation(line: 654, column: 6, scope: !6933)
!6946 = !DILocation(line: 655, column: 24, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6943, file: !3511, line: 654, column: 18)
!6948 = !DILocation(line: 655, column: 19, scope: !6947)
!6949 = !DILocation(line: 656, column: 3, scope: !6947)
!6950 = !DILocation(line: 659, column: 7, scope: !6933)
!6951 = !DILocation(line: 660, column: 7, scope: !6933)
!6952 = !DILocation(line: 661, column: 7, scope: !6933)
!6953 = !DILocation(line: 662, column: 7, scope: !6933)
!6954 = !DILocation(line: 663, column: 7, scope: !6933)
!6955 = !DILocation(line: 665, column: 2, scope: !6933)
!6956 = !DILocation(line: 666, column: 1, scope: !6933)
!6957 = distinct !DISubprogram(name: "outs", scope: !3511, file: !3511, line: 1319, type: !6958, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !6960)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!103, !4886, !102, !336, !336}
!6960 = !{!6961, !6962, !6963, !6964, !6965, !6966}
!6961 = !DILocalVariable(name: "out", arg: 1, scope: !6957, file: !3511, line: 1319, type: !4886)
!6962 = !DILocalVariable(name: "ctx", arg: 2, scope: !6957, file: !3511, line: 1320, type: !102)
!6963 = !DILocalVariable(name: "sp", arg: 3, scope: !6957, file: !3511, line: 1321, type: !336)
!6964 = !DILocalVariable(name: "ep", arg: 4, scope: !6957, file: !3511, line: 1322, type: !336)
!6965 = !DILocalVariable(name: "count", scope: !6957, file: !3511, line: 1324, type: !153)
!6966 = !DILocalVariable(name: "rc", scope: !6967, file: !3511, line: 1327, type: !103)
!6967 = distinct !DILexicalBlock(scope: !6957, file: !3511, line: 1326, column: 45)
!6968 = !DILocation(line: 0, scope: !6957)
!6969 = !DILocation(line: 1326, column: 2, scope: !6957)
!6970 = !DILocation(line: 1324, column: 9, scope: !6957)
!6971 = !DILocation(line: 1326, column: 13, scope: !6957)
!6972 = !DILocation(line: 1326, column: 19, scope: !6957)
!6973 = !DILocation(line: 1327, column: 21, scope: !6967)
!6974 = !DILocation(line: 1326, column: 36, scope: !6957)
!6975 = !DILocation(line: 1326, column: 39, scope: !6957)
!6976 = !DILocation(line: 1327, column: 24, scope: !6967)
!6977 = !DILocation(line: 1327, column: 16, scope: !6967)
!6978 = !DILocation(line: 1327, column: 12, scope: !6967)
!6979 = !DILocation(line: 0, scope: !6967)
!6980 = !DILocation(line: 1329, column: 10, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6967, file: !3511, line: 1329, column: 7)
!6982 = !DILocation(line: 1329, column: 7, scope: !6967)
!6983 = distinct !{!6983, !6969, !6984}
!6984 = !DILocation(line: 1333, column: 2, scope: !6957)
!6985 = !DILocation(line: 1336, column: 1, scope: !6957)
!6986 = distinct !DISubprogram(name: "encode_uint", scope: !3511, file: !3511, line: 788, type: !6987, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !6989)
!6987 = !DISubroutineType(types: !6988)
!6988 = !{!157, !3533, !6590, !157, !336}
!6989 = !{!6990, !6991, !6992, !6993, !6994, !6995, !6997, !6998}
!6990 = !DILocalVariable(name: "value", arg: 1, scope: !6986, file: !3511, line: 788, type: !3533)
!6991 = !DILocalVariable(name: "conv", arg: 2, scope: !6986, file: !3511, line: 789, type: !6590)
!6992 = !DILocalVariable(name: "bps", arg: 3, scope: !6986, file: !3511, line: 790, type: !157)
!6993 = !DILocalVariable(name: "bpe", arg: 4, scope: !6986, file: !3511, line: 791, type: !336)
!6994 = !DILocalVariable(name: "upcase", scope: !6986, file: !3511, line: 793, type: !119)
!6995 = !DILocalVariable(name: "radix", scope: !6986, file: !3511, line: 794, type: !6996)
!6996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6997 = !DILocalVariable(name: "bp", scope: !6986, file: !3511, line: 795, type: !157)
!6998 = !DILocalVariable(name: "lsv", scope: !6999, file: !3511, line: 798, type: !32)
!6999 = distinct !DILexicalBlock(scope: !6986, file: !3511, line: 797, column: 5)
!7000 = !DILocation(line: 0, scope: !6986)
!7001 = !DILocation(line: 793, column: 35, scope: !6986)
!7002 = !DILocation(line: 793, column: 24, scope: !6986)
!7003 = !DILocation(line: 793, column: 16, scope: !6986)
!7004 = !DILocation(line: 794, column: 29, scope: !6986)
!7005 = !DILocation(line: 795, column: 24, scope: !6986)
!7006 = !DILocation(line: 795, column: 17, scope: !6986)
!7007 = !DILocation(line: 797, column: 2, scope: !6986)
!7008 = !DILocation(line: 802, column: 9, scope: !6999)
!7009 = !DILocation(line: 798, column: 22, scope: !6999)
!7010 = !DILocation(line: 0, scope: !6999)
!7011 = !DILocation(line: 800, column: 16, scope: !6999)
!7012 = !DILocation(line: 800, column: 11, scope: !6999)
!7013 = !DILocation(line: 800, column: 4, scope: !6999)
!7014 = !DILocation(line: 800, column: 9, scope: !6999)
!7015 = !DILocation(line: 803, column: 18, scope: !6986)
!7016 = !DILocation(line: 803, column: 24, scope: !6986)
!7017 = !DILocation(line: 803, column: 2, scope: !6999)
!7018 = distinct !{!7018, !7007, !7019}
!7019 = !DILocation(line: 803, column: 37, scope: !6986)
!7020 = !DILocation(line: 808, column: 12, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6986, file: !3511, line: 808, column: 6)
!7022 = !DILocation(line: 808, column: 6, scope: !6986)
!7023 = !DILocation(line: 809, column: 7, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7021, file: !3511, line: 808, column: 23)
!7025 = !DILocation(line: 813, column: 3, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !3511, line: 811, column: 27)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !3511, line: 811, column: 14)
!7028 = distinct !DILexicalBlock(scope: !7024, file: !3511, line: 809, column: 7)
!7029 = !DILocation(line: 0, scope: !7028)
!7030 = !DILocation(line: 818, column: 2, scope: !6986)
!7031 = distinct !DISubprogram(name: "store_count", scope: !3511, file: !3511, line: 1280, type: !7032, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7036)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{null, !7034, !102, !103}
!7034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7035, size: 32)
!7035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6557)
!7036 = !{!7037, !7038, !7039}
!7037 = !DILocalVariable(name: "conv", arg: 1, scope: !7031, file: !3511, line: 1280, type: !7034)
!7038 = !DILocalVariable(name: "dp", arg: 2, scope: !7031, file: !3511, line: 1281, type: !102)
!7039 = !DILocalVariable(name: "count", arg: 3, scope: !7031, file: !3511, line: 1282, type: !103)
!7040 = !DILocation(line: 0, scope: !7031)
!7041 = !DILocation(line: 1284, column: 38, scope: !7031)
!7042 = !DILocation(line: 1284, column: 2, scope: !7031)
!7043 = !DILocation(line: 1286, column: 4, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7031, file: !3511, line: 1284, column: 50)
!7045 = !DILocation(line: 1286, column: 14, scope: !7044)
!7046 = !DILocation(line: 1287, column: 3, scope: !7044)
!7047 = !DILocation(line: 1289, column: 24, scope: !7044)
!7048 = !DILocation(line: 1289, column: 22, scope: !7044)
!7049 = !DILocation(line: 1290, column: 3, scope: !7044)
!7050 = !DILocation(line: 1292, column: 18, scope: !7044)
!7051 = !DILocation(line: 1292, column: 4, scope: !7044)
!7052 = !DILocation(line: 1292, column: 16, scope: !7044)
!7053 = !DILocation(line: 1293, column: 3, scope: !7044)
!7054 = !DILocation(line: 1295, column: 4, scope: !7044)
!7055 = !DILocation(line: 1295, column: 15, scope: !7044)
!7056 = !DILocation(line: 1296, column: 3, scope: !7044)
!7057 = !DILocation(line: 1298, column: 22, scope: !7044)
!7058 = !DILocation(line: 1298, column: 4, scope: !7044)
!7059 = !DILocation(line: 1298, column: 20, scope: !7044)
!7060 = !DILocation(line: 1299, column: 3, scope: !7044)
!7061 = !DILocation(line: 1301, column: 21, scope: !7044)
!7062 = !DILocation(line: 1301, column: 4, scope: !7044)
!7063 = !DILocation(line: 1301, column: 19, scope: !7044)
!7064 = !DILocation(line: 1302, column: 3, scope: !7044)
!7065 = !DILocation(line: 1304, column: 4, scope: !7044)
!7066 = !DILocation(line: 1304, column: 17, scope: !7044)
!7067 = !DILocation(line: 1305, column: 3, scope: !7044)
!7068 = !DILocation(line: 1307, column: 4, scope: !7044)
!7069 = !DILocation(line: 1307, column: 20, scope: !7044)
!7070 = !DILocation(line: 1308, column: 3, scope: !7044)
!7071 = !DILocation(line: 1316, column: 1, scope: !7031)
!7072 = distinct !DISubprogram(name: "isupper", scope: !7073, file: !7073, line: 16, type: !800, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7074)
!7073 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7074 = !{!7075}
!7075 = !DILocalVariable(name: "a", arg: 1, scope: !7072, file: !7073, line: 16, type: !103)
!7076 = !DILocation(line: 0, scope: !7072)
!7077 = !DILocation(line: 18, column: 29, scope: !7072)
!7078 = !DILocation(line: 18, column: 45, scope: !7072)
!7079 = !DILocation(line: 18, column: 2, scope: !7072)
!7080 = distinct !DISubprogram(name: "conversion_radix", scope: !3511, file: !3511, line: 761, type: !7081, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7083)
!7081 = !DISubroutineType(types: !7082)
!7082 = !{!153, !158}
!7083 = !{!7084}
!7084 = !DILocalVariable(name: "specifier", arg: 1, scope: !7080, file: !3511, line: 761, type: !158)
!7085 = !DILocation(line: 0, scope: !7080)
!7086 = !DILocation(line: 763, column: 2, scope: !7080)
!7087 = !DILocation(line: 770, column: 3, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7080, file: !3511, line: 763, column: 21)
!7089 = !DILocation(line: 774, column: 3, scope: !7088)
!7090 = !DILocation(line: 0, scope: !7088)
!7091 = !DILocation(line: 776, column: 1, scope: !7080)
!7092 = distinct !DISubprogram(name: "extract_flags", scope: !3511, file: !3511, line: 339, type: !6934, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7093)
!7093 = !{!7094, !7095, !7096}
!7094 = !DILocalVariable(name: "conv", arg: 1, scope: !7092, file: !3511, line: 339, type: !6590)
!7095 = !DILocalVariable(name: "sp", arg: 2, scope: !7092, file: !3511, line: 340, type: !336)
!7096 = !DILocalVariable(name: "loop", scope: !7092, file: !3511, line: 342, type: !119)
!7097 = !DILocation(line: 0, scope: !7092)
!7098 = !DILocation(line: 344, column: 2, scope: !7092)
!7099 = !DILocation(line: 345, column: 11, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7092, file: !3511, line: 344, column: 5)
!7101 = !DILocation(line: 345, column: 3, scope: !7100)
!7102 = !DILocation(line: 351, column: 4, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7100, file: !3511, line: 345, column: 16)
!7104 = !DILocation(line: 354, column: 4, scope: !7103)
!7105 = !DILocation(line: 357, column: 4, scope: !7103)
!7106 = !DILocation(line: 360, column: 4, scope: !7103)
!7107 = !DILocation(line: 0, scope: !7103)
!7108 = !DILocation(line: 370, column: 12, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7092, file: !3511, line: 370, column: 6)
!7110 = !DILocation(line: 370, column: 22, scope: !7109)
!7111 = !DILocation(line: 371, column: 19, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7109, file: !3511, line: 370, column: 42)
!7113 = !DILocation(line: 372, column: 2, scope: !7112)
!7114 = !DILocation(line: 376, column: 2, scope: !7092)
!7115 = distinct !DISubprogram(name: "extract_width", scope: !3511, file: !3511, line: 388, type: !6934, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7116)
!7116 = !{!7117, !7118, !7119, !7120}
!7117 = !DILocalVariable(name: "conv", arg: 1, scope: !7115, file: !3511, line: 388, type: !6590)
!7118 = !DILocalVariable(name: "sp", arg: 2, scope: !7115, file: !3511, line: 389, type: !336)
!7119 = !DILocalVariable(name: "wp", scope: !7115, file: !3511, line: 398, type: !336)
!7120 = !DILocalVariable(name: "width", scope: !7115, file: !3511, line: 399, type: !153)
!7121 = !DILocation(line: 0, scope: !7115)
!7122 = !DILocation(line: 391, column: 8, scope: !7115)
!7123 = !DILocation(line: 391, column: 22, scope: !7115)
!7124 = !DILocation(line: 393, column: 6, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7115, file: !3511, line: 393, column: 6)
!7126 = !DILocation(line: 393, column: 10, scope: !7125)
!7127 = !DILocation(line: 393, column: 6, scope: !7115)
!7128 = !DILocation(line: 394, column: 20, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7125, file: !3511, line: 393, column: 18)
!7130 = !DILocation(line: 395, column: 10, scope: !7129)
!7131 = !DILocation(line: 395, column: 3, scope: !7129)
!7132 = !DILocation(line: 399, column: 17, scope: !7115)
!7133 = !DILocation(line: 401, column: 6, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7115, file: !3511, line: 401, column: 6)
!7135 = !DILocation(line: 401, column: 9, scope: !7134)
!7136 = !DILocation(line: 401, column: 6, scope: !7115)
!7137 = !DILocation(line: 402, column: 23, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7134, file: !3511, line: 401, column: 16)
!7139 = !DILocation(line: 403, column: 9, scope: !7138)
!7140 = !DILocation(line: 403, column: 21, scope: !7138)
!7141 = !DILocation(line: 405, column: 11, scope: !7138)
!7142 = !DILocation(line: 404, column: 21, scope: !7138)
!7143 = !DILocation(line: 406, column: 2, scope: !7138)
!7144 = !DILocation(line: 409, column: 1, scope: !7115)
!7145 = distinct !DISubprogram(name: "extract_prec", scope: !3511, file: !3511, line: 420, type: !6934, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7146)
!7146 = !{!7147, !7148, !7149}
!7147 = !DILocalVariable(name: "conv", arg: 1, scope: !7145, file: !3511, line: 420, type: !6590)
!7148 = !DILocalVariable(name: "sp", arg: 2, scope: !7145, file: !3511, line: 421, type: !336)
!7149 = !DILocalVariable(name: "prec", scope: !7145, file: !3511, line: 435, type: !153)
!7150 = !DILocation(line: 0, scope: !7145)
!7151 = !DILocation(line: 423, column: 24, scope: !7145)
!7152 = !DILocation(line: 423, column: 28, scope: !7145)
!7153 = !DILocation(line: 423, column: 8, scope: !7145)
!7154 = !DILocation(line: 423, column: 21, scope: !7145)
!7155 = !DILocation(line: 425, column: 6, scope: !7145)
!7156 = !DILocation(line: 428, column: 2, scope: !7145)
!7157 = !DILocation(line: 430, column: 6, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7145, file: !3511, line: 430, column: 6)
!7159 = !DILocation(line: 430, column: 10, scope: !7158)
!7160 = !DILocation(line: 430, column: 6, scope: !7145)
!7161 = !DILocation(line: 431, column: 19, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7158, file: !3511, line: 430, column: 18)
!7163 = !DILocation(line: 432, column: 10, scope: !7162)
!7164 = !DILocation(line: 432, column: 3, scope: !7162)
!7165 = !DILocation(line: 435, column: 16, scope: !7145)
!7166 = !DILocation(line: 437, column: 8, scope: !7145)
!7167 = !DILocation(line: 437, column: 19, scope: !7145)
!7168 = !DILocation(line: 439, column: 10, scope: !7145)
!7169 = !DILocation(line: 438, column: 20, scope: !7145)
!7170 = !DILocation(line: 441, column: 9, scope: !7145)
!7171 = !DILocation(line: 442, column: 1, scope: !7145)
!7172 = distinct !DISubprogram(name: "extract_length", scope: !3511, file: !3511, line: 453, type: !6934, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7173)
!7173 = !{!7174, !7175}
!7174 = !DILocalVariable(name: "conv", arg: 1, scope: !7172, file: !3511, line: 453, type: !6590)
!7175 = !DILocalVariable(name: "sp", arg: 2, scope: !7172, file: !3511, line: 454, type: !336)
!7176 = !DILocation(line: 0, scope: !7172)
!7177 = !DILocation(line: 456, column: 10, scope: !7172)
!7178 = !DILocation(line: 456, column: 2, scope: !7172)
!7179 = !DILocation(line: 458, column: 8, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !3511, line: 458, column: 7)
!7181 = distinct !DILexicalBlock(scope: !7172, file: !3511, line: 456, column: 15)
!7182 = !DILocation(line: 458, column: 7, scope: !7180)
!7183 = !DILocation(line: 458, column: 13, scope: !7180)
!7184 = !DILocation(line: 0, scope: !7180)
!7185 = !DILocation(line: 458, column: 7, scope: !7181)
!7186 = !DILocation(line: 459, column: 21, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7180, file: !3511, line: 458, column: 21)
!7188 = !DILocation(line: 460, column: 4, scope: !7187)
!7189 = !DILocation(line: 461, column: 3, scope: !7187)
!7190 = !DILocation(line: 462, column: 21, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7180, file: !3511, line: 461, column: 10)
!7192 = !DILocation(line: 466, column: 8, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7181, file: !3511, line: 466, column: 7)
!7194 = !DILocation(line: 466, column: 7, scope: !7193)
!7195 = !DILocation(line: 466, column: 13, scope: !7193)
!7196 = !DILocation(line: 0, scope: !7193)
!7197 = !DILocation(line: 466, column: 7, scope: !7181)
!7198 = !DILocation(line: 467, column: 21, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7193, file: !3511, line: 466, column: 21)
!7200 = !DILocation(line: 468, column: 4, scope: !7199)
!7201 = !DILocation(line: 469, column: 3, scope: !7199)
!7202 = !DILocation(line: 470, column: 21, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7193, file: !3511, line: 469, column: 10)
!7204 = !DILocation(line: 474, column: 9, scope: !7181)
!7205 = !DILocation(line: 474, column: 20, scope: !7181)
!7206 = !DILocation(line: 475, column: 3, scope: !7181)
!7207 = !DILocation(line: 476, column: 3, scope: !7181)
!7208 = !DILocation(line: 478, column: 9, scope: !7181)
!7209 = !DILocation(line: 478, column: 20, scope: !7181)
!7210 = !DILocation(line: 479, column: 3, scope: !7181)
!7211 = !DILocation(line: 480, column: 3, scope: !7181)
!7212 = !DILocation(line: 482, column: 9, scope: !7181)
!7213 = !DILocation(line: 482, column: 20, scope: !7181)
!7214 = !DILocation(line: 483, column: 3, scope: !7181)
!7215 = !DILocation(line: 484, column: 3, scope: !7181)
!7216 = !DILocation(line: 486, column: 9, scope: !7181)
!7217 = !DILocation(line: 486, column: 20, scope: !7181)
!7218 = !DILocation(line: 487, column: 3, scope: !7181)
!7219 = !DILocation(line: 492, column: 21, scope: !7181)
!7220 = !DILocation(line: 493, column: 3, scope: !7181)
!7221 = !DILocation(line: 495, column: 9, scope: !7181)
!7222 = !DILocation(line: 495, column: 20, scope: !7181)
!7223 = !DILocation(line: 496, column: 3, scope: !7181)
!7224 = !DILocation(line: 498, column: 2, scope: !7172)
!7225 = distinct !DISubprogram(name: "extract_specifier", scope: !3511, file: !3511, line: 513, type: !6934, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7226)
!7226 = !{!7227, !7228, !7229, !7230}
!7227 = !DILocalVariable(name: "conv", arg: 1, scope: !7225, file: !3511, line: 513, type: !6590)
!7228 = !DILocalVariable(name: "sp", arg: 2, scope: !7225, file: !3511, line: 514, type: !336)
!7229 = !DILocalVariable(name: "unsupported", scope: !7225, file: !3511, line: 516, type: !119)
!7230 = !DILabel(scope: !7231, name: "int_conv", file: !3511, line: 526)
!7231 = distinct !DILexicalBlock(scope: !7225, file: !3511, line: 520, column: 27)
!7232 = !DILocation(line: 0, scope: !7225)
!7233 = !DILocation(line: 518, column: 20, scope: !7225)
!7234 = !DILocation(line: 518, column: 8, scope: !7225)
!7235 = !DILocation(line: 518, column: 18, scope: !7225)
!7236 = !DILocation(line: 520, column: 2, scope: !7225)
!7237 = !DILocation(line: 525, column: 3, scope: !7231)
!7238 = !DILocation(line: 0, scope: !7231)
!7239 = !DILocation(line: 526, column: 1, scope: !7231)
!7240 = !DILocation(line: 528, column: 24, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7231, file: !3511, line: 528, column: 7)
!7242 = !DILocation(line: 528, column: 7, scope: !7231)
!7243 = !DILocation(line: 535, column: 23, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7231, file: !3511, line: 535, column: 7)
!7245 = !DILocation(line: 535, column: 7, scope: !7231)
!7246 = !DILocation(line: 536, column: 36, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7244, file: !3511, line: 535, column: 31)
!7248 = !DILocation(line: 537, column: 3, scope: !7247)
!7249 = !DILocation(line: 570, column: 9, scope: !7231)
!7250 = !DILocation(line: 570, column: 23, scope: !7231)
!7251 = !DILocation(line: 575, column: 4, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !3511, line: 573, column: 48)
!7253 = distinct !DILexicalBlock(scope: !7231, file: !3511, line: 573, column: 7)
!7254 = !DILocation(line: 603, column: 9, scope: !7231)
!7255 = !DILocation(line: 603, column: 23, scope: !7231)
!7256 = !DILocation(line: 605, column: 24, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7231, file: !3511, line: 605, column: 7)
!7258 = !DILocation(line: 605, column: 7, scope: !7231)
!7259 = !DILocation(line: 612, column: 9, scope: !7231)
!7260 = !DILocation(line: 612, column: 23, scope: !7231)
!7261 = !DILocation(line: 619, column: 24, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7231, file: !3511, line: 619, column: 7)
!7263 = !DILocation(line: 619, column: 7, scope: !7231)
!7264 = !DILocation(line: 625, column: 9, scope: !7231)
!7265 = !DILocation(line: 625, column: 17, scope: !7231)
!7266 = !DILocation(line: 626, column: 3, scope: !7231)
!7267 = !DILocation(line: 629, column: 20, scope: !7225)
!7268 = !DILocation(line: 629, column: 8, scope: !7225)
!7269 = !DILocation(line: 518, column: 23, scope: !7225)
!7270 = !DILocation(line: 631, column: 2, scope: !7225)
!7271 = distinct !DISubprogram(name: "extract_decimal", scope: !3511, file: !3511, line: 318, type: !7272, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7274)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{!153, !777}
!7274 = !{!7275, !7276, !7277}
!7275 = !DILocalVariable(name: "str", arg: 1, scope: !7271, file: !3511, line: 318, type: !777)
!7276 = !DILocalVariable(name: "sp", scope: !7271, file: !3511, line: 320, type: !336)
!7277 = !DILocalVariable(name: "val", scope: !7271, file: !3511, line: 321, type: !153)
!7278 = !DILocation(line: 0, scope: !7271)
!7279 = !DILocation(line: 320, column: 19, scope: !7271)
!7280 = !DILocation(line: 323, column: 37, scope: !7271)
!7281 = !DILocation(line: 323, column: 17, scope: !7271)
!7282 = !DILocation(line: 323, column: 9, scope: !7271)
!7283 = !DILocation(line: 323, column: 2, scope: !7271)
!7284 = !DILocation(line: 324, column: 13, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7271, file: !3511, line: 323, column: 43)
!7286 = !DILocation(line: 324, column: 24, scope: !7285)
!7287 = !DILocation(line: 324, column: 19, scope: !7285)
!7288 = !DILocation(line: 324, column: 27, scope: !7285)
!7289 = distinct !{!7289, !7283, !7290}
!7290 = !DILocation(line: 325, column: 2, scope: !7271)
!7291 = !DILocation(line: 326, column: 7, scope: !7271)
!7292 = !DILocation(line: 327, column: 2, scope: !7271)
!7293 = distinct !DISubprogram(name: "isdigit", scope: !7073, file: !7073, line: 43, type: !800, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3507, retainedNodes: !7294)
!7294 = !{!7295}
!7295 = !DILocalVariable(name: "a", arg: 1, scope: !7293, file: !7073, line: 43, type: !103)
!7296 = !DILocation(line: 0, scope: !7293)
!7297 = !DILocation(line: 45, column: 29, scope: !7293)
!7298 = !DILocation(line: 45, column: 45, scope: !7293)
!7299 = !DILocation(line: 45, column: 2, scope: !7293)
!7300 = distinct !DISubprogram(name: "assert_post_action", scope: !7301, file: !7301, line: 26, type: !7302, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3541, retainedNodes: !7304)
!7301 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7302 = !DISubroutineType(types: !7303)
!7303 = !{null, !336, !32}
!7304 = !{!7305, !7306}
!7305 = !DILocalVariable(name: "file", arg: 1, scope: !7300, file: !7301, line: 26, type: !336)
!7306 = !DILocalVariable(name: "line", arg: 2, scope: !7300, file: !7301, line: 26, type: !32)
!7307 = !DILocation(line: 0, scope: !7300)
!7308 = !DILocation(line: 43, column: 2, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7300, file: !7301, line: 43, column: 2)
!7310 = !{i64 2155071459, i64 2155071475, i64 2155071501, i64 2155071529, i64 2155071549}
!7311 = !DILocation(line: 44, column: 1, scope: !7300)
!7312 = distinct !DISubprogram(name: "assert_print", scope: !7301, file: !7301, line: 46, type: !5496, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3541, retainedNodes: !7313)
!7313 = !{!7314, !7315}
!7314 = !DILocalVariable(name: "fmt", arg: 1, scope: !7312, file: !7301, line: 46, type: !336)
!7315 = !DILocalVariable(name: "ap", scope: !7312, file: !7301, line: 48, type: !7316)
!7316 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4504, line: 99, baseType: !7317)
!7317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4504, line: 40, baseType: !7318)
!7318 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7301, baseType: !7319)
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7320)
!7320 = !{!7321}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7319, file: !7301, line: 48, baseType: !102, size: 32)
!7322 = !DILocation(line: 0, scope: !7312)
!7323 = !DILocation(line: 48, column: 2, scope: !7312)
!7324 = !DILocation(line: 48, column: 10, scope: !7312)
!7325 = !DILocation(line: 50, column: 2, scope: !7312)
!7326 = !DILocation(line: 52, column: 2, scope: !7312)
!7327 = !DILocation(line: 54, column: 2, scope: !7312)
!7328 = !DILocation(line: 55, column: 1, scope: !7312)
!7329 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !7330, file: !7330, line: 9, type: !333, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3543, retainedNodes: !2953)
!7330 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!7331 = !DILocation(line: 11, column: 1, scope: !7329)
!7332 = !{i64 2147565340, i64 2147565383, i64 2147565423}
!7333 = !DILocation(line: 12, column: 1, scope: !7329)
!7334 = !{i64 2147569567, i64 2147569610, i64 2147569650}
!7335 = !DILocation(line: 13, column: 1, scope: !7329)
!7336 = !{i64 2147569776, i64 2147569819, i64 2147569859}
!7337 = !DILocation(line: 14, column: 1, scope: !7329)
!7338 = !{i64 2147569945, i64 2147569988, i64 2147570028}
!7339 = !DILocation(line: 15, column: 1, scope: !7329)
!7340 = !{i64 2147570108, i64 2147570151, i64 2147570191}
!7341 = !DILocation(line: 16, column: 1, scope: !7329)
!7342 = !{i64 2147570292, i64 2147570335, i64 2147570375}
!7343 = !DILocation(line: 17, column: 1, scope: !7329)
!7344 = !{i64 2147570471, i64 2147570514, i64 2147570554}
!7345 = !DILocation(line: 18, column: 1, scope: !7329)
!7346 = !{i64 2147570713, i64 2147570756, i64 2147570796}
!7347 = !DILocation(line: 19, column: 1, scope: !7329)
!7348 = !{i64 2147570948, i64 2147570991, i64 2147571031}
!7349 = !DILocation(line: 20, column: 1, scope: !7329)
!7350 = !{i64 2147571134, i64 2147571177, i64 2147571217}
!7351 = !DILocation(line: 21, column: 1, scope: !7329)
!7352 = !{i64 2147571350, i64 2147571393, i64 2147571433}
!7353 = !DILocation(line: 22, column: 1, scope: !7329)
!7354 = !{i64 2147571553, i64 2147571596, i64 2147571636}
!7355 = !DILocation(line: 23, column: 1, scope: !7329)
!7356 = !{i64 2147571756, i64 2147571799, i64 2147571839}
!7357 = !DILocation(line: 24, column: 1, scope: !7329)
!7358 = !{i64 2147571931, i64 2147571974, i64 2147572014}
!7359 = !DILocation(line: 25, column: 1, scope: !7329)
!7360 = !{i64 2147572139, i64 2147572182, i64 2147572222}
!7361 = !DILocation(line: 26, column: 1, scope: !7329)
!7362 = !{i64 2147572343, i64 2147572386, i64 2147572426}
!7363 = !DILocation(line: 27, column: 1, scope: !7329)
!7364 = !{i64 2147572536, i64 2147572579, i64 2147572619}
!7365 = !DILocation(line: 28, column: 1, scope: !7329)
!7366 = !{i64 2147572738, i64 2147572781, i64 2147572821}
!7367 = !DILocation(line: 29, column: 1, scope: !7329)
!7368 = !{i64 2147572937, i64 2147572980, i64 2147573020}
!7369 = !DILocation(line: 30, column: 1, scope: !7329)
!7370 = !{i64 2147573164, i64 2147573207, i64 2147573247}
!7371 = !DILocation(line: 31, column: 1, scope: !7329)
!7372 = !{i64 2147573366, i64 2147573409, i64 2147573449}
!7373 = !DILocation(line: 32, column: 1, scope: !7329)
!7374 = !{i64 2147573581, i64 2147573624, i64 2147573664}
!7375 = !DILocation(line: 33, column: 1, scope: !7329)
!7376 = !{i64 2147573753, i64 2147573796, i64 2147573836}
!7377 = !DILocation(line: 34, column: 1, scope: !7329)
!7378 = !{i64 2147573955, i64 2147573998, i64 2147574038}
!7379 = !DILocation(line: 35, column: 1, scope: !7329)
!7380 = !{i64 2147574181, i64 2147574224, i64 2147574264}
!7381 = !DILocation(line: 36, column: 1, scope: !7329)
!7382 = !{i64 2147574380, i64 2147574423, i64 2147574463}
!7383 = !DILocation(line: 37, column: 1, scope: !7329)
!7384 = !{i64 2147574555, i64 2147574598, i64 2147574638}
!7385 = !DILocation(line: 38, column: 1, scope: !7329)
!7386 = !{i64 2147574808, i64 2147574851, i64 2147574891}
!7387 = !DILocation(line: 39, column: 1, scope: !7329)
!7388 = !{i64 2147575049, i64 2147575092, i64 2147575132}
!7389 = !DILocation(line: 40, column: 1, scope: !7329)
!7390 = !{i64 2147575284, i64 2147575327, i64 2147575367}
!7391 = !DILocation(line: 41, column: 1, scope: !7329)
!7392 = !{i64 2147575516, i64 2147575559, i64 2147575599}
!7393 = !DILocation(line: 42, column: 1, scope: !7329)
!7394 = !{i64 2147575742, i64 2147575785, i64 2147575825}
!7395 = !DILocation(line: 43, column: 1, scope: !7329)
!7396 = !{i64 2147575968, i64 2147576011, i64 2147576051}
!7397 = !DILocation(line: 44, column: 1, scope: !7329)
!7398 = !{i64 2147576194, i64 2147576237, i64 2147576277}
!7399 = !DILocation(line: 45, column: 1, scope: !7329)
!7400 = !{i64 2147576429, i64 2147576472, i64 2147576512}
!7401 = !DILocation(line: 46, column: 1, scope: !7329)
!7402 = !{i64 2147576673, i64 2147576716, i64 2147576756}
!7403 = !DILocation(line: 47, column: 1, scope: !7329)
!7404 = !{i64 2147576920, i64 2147576963, i64 2147577003}
!7405 = !DILocation(line: 48, column: 1, scope: !7329)
!7406 = !{i64 2147577152, i64 2147577195, i64 2147577235}
!7407 = !DILocation(line: 49, column: 1, scope: !7329)
!7408 = !{i64 2147577396, i64 2147577439, i64 2147577479}
!7409 = !DILocation(line: 50, column: 1, scope: !7329)
!7410 = !{i64 2147577634, i64 2147577677, i64 2147577717}
!7411 = !DILocation(line: 51, column: 1, scope: !7329)
!7412 = !{i64 2147577908, i64 2147577951, i64 2147577991}
!7413 = !DILocation(line: 52, column: 1, scope: !7329)
!7414 = !{i64 2147578146, i64 2147578189, i64 2147578229}
!7415 = !DILocation(line: 53, column: 1, scope: !7329)
!7416 = !{i64 2147582460, i64 2147582503, i64 2147582543}
!7417 = !DILocation(line: 54, column: 1, scope: !7329)
!7418 = !{i64 2147582704, i64 2147582747, i64 2147582787}
!7419 = !DILocation(line: 55, column: 1, scope: !7329)
!7420 = !{i64 2147582939, i64 2147582982, i64 2147583022}
!7421 = !DILocation(line: 56, column: 1, scope: !7329)
!7422 = !{i64 2147583189, i64 2147583232, i64 2147583272}
!7423 = !DILocation(line: 57, column: 1, scope: !7329)
!7424 = !{i64 2147583436, i64 2147583479, i64 2147583519}
!7425 = !DILocation(line: 58, column: 1, scope: !7329)
!7426 = !{i64 2147583671, i64 2147583714, i64 2147583754}
!7427 = !DILocation(line: 59, column: 1, scope: !7329)
!7428 = !{i64 2147583906, i64 2147583949, i64 2147583989}
!7429 = !DILocation(line: 60, column: 1, scope: !7329)
!7430 = !{i64 2147584141, i64 2147584184, i64 2147584224}
!7431 = !DILocation(line: 61, column: 1, scope: !7329)
!7432 = !{i64 2147584376, i64 2147584419, i64 2147584459}
!7433 = !DILocation(line: 62, column: 1, scope: !7329)
!7434 = !{i64 2147584620, i64 2147584663, i64 2147584703}
!7435 = !DILocation(line: 63, column: 1, scope: !7329)
!7436 = !{i64 2147584858, i64 2147584901, i64 2147584941}
!7437 = !DILocation(line: 64, column: 1, scope: !7329)
!7438 = !{i64 2147585099, i64 2147585142, i64 2147585182}
!7439 = !DILocation(line: 65, column: 1, scope: !7329)
!7440 = !{i64 2147585379, i64 2147585422, i64 2147585462}
!7441 = !DILocation(line: 66, column: 1, scope: !7329)
!7442 = !{i64 2147585638, i64 2147585681, i64 2147585721}
!7443 = !DILocation(line: 67, column: 1, scope: !7329)
!7444 = !{i64 2147585876, i64 2147585919, i64 2147585959}
!7445 = !DILocation(line: 68, column: 1, scope: !7329)
!7446 = !{i64 2147586105, i64 2147586148, i64 2147586188}
!7447 = !DILocation(line: 69, column: 1, scope: !7329)
!7448 = !{i64 2147586313, i64 2147586356, i64 2147586396}
!7449 = !DILocation(line: 70, column: 1, scope: !7329)
!7450 = !{i64 2147586524, i64 2147586567, i64 2147586607}
!7451 = !DILocation(line: 71, column: 1, scope: !7329)
!7452 = !{i64 2147586759, i64 2147586802, i64 2147586842}
!7453 = !DILocation(line: 72, column: 1, scope: !7329)
!7454 = !{i64 2147586988, i64 2147587031, i64 2147587071}
!7455 = !DILocation(line: 73, column: 1, scope: !7329)
!7456 = !{i64 2147587205, i64 2147587248, i64 2147587288}
!7457 = !DILocation(line: 74, column: 1, scope: !7329)
!7458 = !{i64 2147587434, i64 2147587477, i64 2147587517}
!7459 = !DILocation(line: 75, column: 1, scope: !7329)
!7460 = !{i64 2147587672, i64 2147587715, i64 2147587755}
!7461 = !DILocation(line: 76, column: 1, scope: !7329)
!7462 = !{i64 2147587904, i64 2147587947, i64 2147587987}
!7463 = !DILocation(line: 77, column: 1, scope: !7329)
!7464 = !{i64 2147588130, i64 2147588173, i64 2147588213}
!7465 = !DILocation(line: 78, column: 1, scope: !7329)
!7466 = !{i64 2147588347, i64 2147588390, i64 2147588430}
!7467 = !DILocation(line: 79, column: 1, scope: !7329)
!7468 = !{i64 2147588579, i64 2147588622, i64 2147588662}
!7469 = !DILocation(line: 80, column: 1, scope: !7329)
!7470 = !{i64 2147588805, i64 2147588848, i64 2147588888}
!7471 = !DILocation(line: 81, column: 1, scope: !7329)
!7472 = !{i64 2147589019, i64 2147589062, i64 2147589102}
!7473 = !DILocation(line: 82, column: 1, scope: !7329)
!7474 = !{i64 2147589239, i64 2147589282, i64 2147589322}
!7475 = !DILocation(line: 83, column: 1, scope: !7329)
!7476 = !{i64 2147589471, i64 2147589514, i64 2147589554}
!7477 = !DILocation(line: 84, column: 1, scope: !7329)
!7478 = !{i64 2147589679, i64 2147589722, i64 2147589762}
!7479 = !DILocation(line: 85, column: 1, scope: !7329)
!7480 = !{i64 2147589884, i64 2147589927, i64 2147589967}
!7481 = !DILocation(line: 86, column: 1, scope: !7329)
!7482 = !{i64 2147590101, i64 2147590144, i64 2147590184}
!7483 = !DILocation(line: 87, column: 1, scope: !7329)
!7484 = !{i64 2147590315, i64 2147590358, i64 2147590398}
!7485 = !DILocation(line: 88, column: 1, scope: !7329)
!7486 = !{i64 2147594602, i64 2147594645, i64 2147594685}
!7487 = !DILocation(line: 89, column: 1, scope: !7329)
!7488 = !{i64 2147594822, i64 2147594865, i64 2147594905}
!7489 = !DILocation(line: 90, column: 1, scope: !7329)
!7490 = !{i64 2147595027, i64 2147595070, i64 2147595110}
!7491 = !DILocation(line: 91, column: 1, scope: !7329)
!7492 = !{i64 2147595259, i64 2147595302, i64 2147595342}
!7493 = !DILocation(line: 92, column: 1, scope: !7329)
!7494 = !{i64 2147595494, i64 2147595537, i64 2147595577}
!7495 = !DILocation(line: 93, column: 1, scope: !7329)
!7496 = !{i64 2147595744, i64 2147595787, i64 2147595827}
!7497 = !DILocation(line: 94, column: 1, scope: !7329)
!7498 = !{i64 2147595994, i64 2147596037, i64 2147596077}
!7499 = !DILocation(line: 95, column: 1, scope: !7329)
!7500 = !{i64 2147596232, i64 2147596275, i64 2147596315}
!7501 = !DILocation(line: 96, column: 1, scope: !7329)
!7502 = !{i64 2147596443, i64 2147596486, i64 2147596526}
!7503 = !DILocation(line: 97, column: 1, scope: !7329)
!7504 = !{i64 2147596660, i64 2147596703, i64 2147596743}
!7505 = !DILocation(line: 98, column: 1, scope: !7329)
!7506 = !{i64 2147596856, i64 2147596899, i64 2147596939}
!7507 = !DILocation(line: 99, column: 1, scope: !7329)
!7508 = !{i64 2147597058, i64 2147597101, i64 2147597141}
!7509 = !DILocation(line: 100, column: 1, scope: !7329)
!7510 = !{i64 2147597251, i64 2147597294, i64 2147597334}
!7511 = !DILocation(line: 101, column: 1, scope: !7329)
!7512 = !{i64 2147597459, i64 2147597502, i64 2147597542}
!7513 = !DILocation(line: 102, column: 1, scope: !7329)
!7514 = !{i64 2147597655, i64 2147597698, i64 2147597738}
!7515 = !DILocation(line: 103, column: 1, scope: !7329)
!7516 = !{i64 2147597887, i64 2147597930, i64 2147597970}
!7517 = !DILocation(line: 104, column: 1, scope: !7329)
!7518 = !{i64 2147598098, i64 2147598141, i64 2147598181}
!7519 = !DILocation(line: 105, column: 1, scope: !7329)
!7520 = !{i64 2147598297, i64 2147598340, i64 2147598380}
!7521 = !DILocation(line: 106, column: 1, scope: !7329)
!7522 = !{i64 2147598472, i64 2147598515, i64 2147598555}
!7523 = !DILocation(line: 107, column: 1, scope: !7329)
!7524 = !{i64 2147598656, i64 2147598699, i64 2147598739}
!7525 = !DILocation(line: 108, column: 1, scope: !7329)
!7526 = !{i64 2147598858, i64 2147598901, i64 2147598941}
!7527 = !DILocation(line: 109, column: 1, scope: !7329)
!7528 = !{i64 2147599057, i64 2147599100, i64 2147599140}
!7529 = !DILocation(line: 110, column: 1, scope: !7329)
!7530 = !{i64 2147599262, i64 2147599305, i64 2147599345}
!7531 = !DILocation(line: 111, column: 1, scope: !7329)
!7532 = !{i64 2147599455, i64 2147599498, i64 2147599538}
!7533 = !DILocation(line: 112, column: 1, scope: !7329)
!7534 = !{i64 2147599621, i64 2147599664, i64 2147599704}
!7535 = !DILocation(line: 113, column: 1, scope: !7329)
!7536 = !{i64 2147599805, i64 2147599848, i64 2147599888}
!7537 = !DILocation(line: 114, column: 1, scope: !7329)
!7538 = !{i64 2147599995, i64 2147600038, i64 2147600078}
!7539 = !DILocation(line: 115, column: 1, scope: !7329)
!7540 = !{i64 2147600179, i64 2147600222, i64 2147600262}
!7541 = !DILocation(line: 116, column: 1, scope: !7329)
!7542 = !{i64 2147600393, i64 2147600436, i64 2147600476}
!7543 = !DILocation(line: 117, column: 1, scope: !7329)
!7544 = !{i64 2147600604, i64 2147600647, i64 2147600687}
!7545 = !DILocation(line: 118, column: 1, scope: !7329)
!7546 = !{i64 2147600827, i64 2147600870, i64 2147600910}
!7547 = !DILocation(line: 119, column: 1, scope: !7329)
!7548 = !{i64 2147601011, i64 2147601054, i64 2147601094}
!7549 = !DILocation(line: 120, column: 1, scope: !7329)
!7550 = !{i64 2147601225, i64 2147601268, i64 2147601308}
!7551 = !DILocation(line: 121, column: 1, scope: !7329)
!7552 = !{i64 2147601391, i64 2147601434, i64 2147601474}
!7553 = !DILocation(line: 122, column: 1, scope: !7329)
!7554 = !{i64 2147601572, i64 2147601615, i64 2147601655}
!7555 = !DILocation(line: 123, column: 1, scope: !7329)
!7556 = !{i64 2147601765, i64 2147601808, i64 2147601848}
!7557 = !DILocation(line: 124, column: 1, scope: !7329)
!7558 = !{i64 2147601991, i64 2147602034, i64 2147602074}
!7559 = !DILocation(line: 125, column: 1, scope: !7329)
!7560 = !{i64 2147602205, i64 2147602248, i64 2147602288}
!7561 = !DILocation(line: 126, column: 1, scope: !7329)
!7562 = !{i64 2147602431, i64 2147602474, i64 2147602514}
!7563 = !DILocation(line: 127, column: 1, scope: !7329)
!7564 = !{i64 2147602648, i64 2147602691, i64 2147602731}
!7565 = !DILocation(line: 128, column: 1, scope: !7329)
!7566 = !{i64 2147602925, i64 2147602968, i64 2147603008}
!7567 = !DILocation(line: 129, column: 1, scope: !7329)
!7568 = !{i64 2147603151, i64 2147603194, i64 2147603234}
!7569 = !DILocation(line: 130, column: 1, scope: !7329)
!7570 = !{i64 2147603359, i64 2147603402, i64 2147603442}
!7571 = !DILocation(line: 131, column: 1, scope: !7329)
!7572 = !{i64 2147603555, i64 2147603598, i64 2147603638}
!7573 = !DILocation(line: 132, column: 1, scope: !7329)
!7574 = !{i64 2147607881, i64 2147607924, i64 2147607964}
!7575 = !DILocation(line: 133, column: 1, scope: !7329)
!7576 = !{i64 2147608095, i64 2147608138, i64 2147608178}
!7577 = !DILocation(line: 134, column: 1, scope: !7329)
!7578 = !{i64 2147608270, i64 2147608313, i64 2147608353}
!7579 = !DILocation(line: 135, column: 1, scope: !7329)
!7580 = !{i64 2147608524, i64 2147608567, i64 2147608607}
!7581 = !DILocation(line: 136, column: 1, scope: !7329)
!7582 = !{i64 2147608723, i64 2147608766, i64 2147608806}
!7583 = !DILocation(line: 137, column: 1, scope: !7329)
!7584 = !{i64 2147608965, i64 2147609008, i64 2147609048}
!7585 = !DILocation(line: 138, column: 1, scope: !7329)
!7586 = !{i64 2147609128, i64 2147609171, i64 2147609211}
!7587 = !DILocation(line: 139, column: 1, scope: !7329)
!7588 = !{i64 2147609315, i64 2147609358, i64 2147609398}
!7589 = !DILocation(line: 140, column: 1, scope: !7329)
!7590 = !{i64 2147609523, i64 2147609566, i64 2147609606}
!7591 = !DILocation(line: 141, column: 1, scope: !7329)
!7592 = !{i64 2147609719, i64 2147609762, i64 2147609802}
!7593 = !DILocation(line: 142, column: 1, scope: !7329)
!7594 = !{i64 2147609912, i64 2147609955, i64 2147609995}
!7595 = !DILocation(line: 143, column: 1, scope: !7329)
!7596 = !{i64 2147610095, i64 2147610138, i64 2147610178}
!7597 = !DILocation(line: 144, column: 1, scope: !7329)
!7598 = !{i64 2147610309, i64 2147610352, i64 2147610392}
!7599 = !DILocation(line: 145, column: 1, scope: !7329)
!7600 = !{i64 2147610520, i64 2147610563, i64 2147610603}
!7601 = !DILocation(line: 146, column: 1, scope: !7329)
!7602 = !{i64 2147610740, i64 2147610783, i64 2147610823}
!7603 = !DILocation(line: 147, column: 1, scope: !7329)
!7604 = !{i64 2147610947, i64 2147610990, i64 2147611030}
!7605 = !DILocation(line: 148, column: 1, scope: !7329)
!7606 = !{i64 2147611220, i64 2147611263, i64 2147611303}
!7607 = !DILocation(line: 149, column: 1, scope: !7329)
!7608 = !{i64 2147611468, i64 2147611511, i64 2147611551}
!7609 = !DILocation(line: 150, column: 1, scope: !7329)
!7610 = !{i64 2147611667, i64 2147611710, i64 2147611750}
!7611 = !DILocation(line: 151, column: 1, scope: !7329)
!7612 = !{i64 2147611902, i64 2147611945, i64 2147611985}
!7613 = !DILocation(line: 152, column: 1, scope: !7329)
!7614 = !{i64 2147612152, i64 2147612195, i64 2147612235}
!7615 = !DILocation(line: 153, column: 1, scope: !7329)
!7616 = !{i64 2147612354, i64 2147612397, i64 2147612437}
!7617 = !DILocation(line: 154, column: 1, scope: !7329)
!7618 = !{i64 2147612577, i64 2147612620, i64 2147612660}
!7619 = !DILocation(line: 155, column: 1, scope: !7329)
!7620 = !{i64 2147612791, i64 2147612834, i64 2147612874}
!7621 = !DILocation(line: 156, column: 1, scope: !7329)
!7622 = !{i64 2147613035, i64 2147613078, i64 2147613118}
!7623 = !DILocation(line: 157, column: 1, scope: !7329)
!7624 = !{i64 2147613264, i64 2147613307, i64 2147613347}
!7625 = !DILocation(line: 158, column: 1, scope: !7329)
!7626 = !{i64 2147613493, i64 2147613536, i64 2147613576}
!7627 = !DILocation(line: 159, column: 1, scope: !7329)
!7628 = !{i64 2147613701, i64 2147613744, i64 2147613784}
!7629 = !DILocation(line: 160, column: 1, scope: !7329)
!7630 = !{i64 2147613939, i64 2147613982, i64 2147614022}
!7631 = !DILocation(line: 161, column: 1, scope: !7329)
!7632 = !{i64 2147614165, i64 2147614208, i64 2147614248}
!7633 = !DILocation(line: 162, column: 1, scope: !7329)
!7634 = !{i64 2147614424, i64 2147614467, i64 2147614507}
!7635 = !DILocation(line: 163, column: 1, scope: !7329)
!7636 = !{i64 2147614644, i64 2147614687, i64 2147614727}
!7637 = !DILocation(line: 164, column: 1, scope: !7329)
!7638 = !{i64 2147614876, i64 2147614919, i64 2147614959}
!7639 = !DILocation(line: 165, column: 1, scope: !7329)
!7640 = !{i64 2147615117, i64 2147615160, i64 2147615200}
!7641 = !DILocation(line: 166, column: 1, scope: !7329)
!7642 = !{i64 2147615358, i64 2147615401, i64 2147615441}
!7643 = !DILocation(line: 167, column: 1, scope: !7329)
!7644 = !{i64 2147615581, i64 2147615624, i64 2147615664}
!7645 = !DILocation(line: 168, column: 1, scope: !7329)
!7646 = !{i64 2147615798, i64 2147615841, i64 2147615881}
!7647 = !DILocation(line: 169, column: 1, scope: !7329)
!7648 = !{i64 2147616039, i64 2147616082, i64 2147616122}
!7649 = !DILocation(line: 170, column: 1, scope: !7329)
!7650 = !{i64 2147620287, i64 2147620330, i64 2147620370}
!7651 = !DILocation(line: 171, column: 1, scope: !7329)
!7652 = !{i64 2147620474, i64 2147620517, i64 2147620557}
!7653 = !DILocation(line: 172, column: 1, scope: !7329)
!7654 = !{i64 2147620637, i64 2147620680, i64 2147620720}
!7655 = !DILocation(line: 173, column: 1, scope: !7329)
!7656 = !{i64 2147620842, i64 2147620885, i64 2147620925}
!7657 = !DILocation(line: 174, column: 1, scope: !7329)
!7658 = !{i64 2147621035, i64 2147621078, i64 2147621118}
!7659 = !DILocation(line: 175, column: 1, scope: !7329)
!7660 = !{i64 2147621294, i64 2147621337, i64 2147621377}
!7661 = !DILocation(line: 176, column: 1, scope: !7329)
!7662 = !{i64 2147621517, i64 2147621560, i64 2147621600}
!7663 = !DILocation(line: 177, column: 1, scope: !7329)
!7664 = !{i64 2147621746, i64 2147621789, i64 2147621829}
!7665 = !DILocation(line: 178, column: 1, scope: !7329)
!7666 = !{i64 2147621960, i64 2147622003, i64 2147622043}
!7667 = !DILocation(line: 179, column: 1, scope: !7329)
!7668 = !{i64 2147622162, i64 2147622205, i64 2147622245}
!7669 = !DILocation(line: 180, column: 1, scope: !7329)
!7670 = !{i64 2147622358, i64 2147622401, i64 2147622441}
!7671 = !DILocation(line: 181, column: 1, scope: !7329)
!7672 = !{i64 2147622570, i64 2147622613, i64 2147622653}
!7673 = !DILocation(line: 182, column: 1, scope: !7329)
!7674 = !{i64 2147622791, i64 2147622834, i64 2147622874}
!7675 = !DILocation(line: 183, column: 1, scope: !7329)
!7676 = !{i64 2147623005, i64 2147623048, i64 2147623088}
!7677 = !DILocation(line: 184, column: 1, scope: !7329)
!7678 = !{i64 2147623195, i64 2147623238, i64 2147623278}
!7679 = !DILocation(line: 185, column: 1, scope: !7329)
!7680 = !{i64 2147623394, i64 2147623437, i64 2147623477}
!7681 = !DILocation(line: 186, column: 1, scope: !7329)
!7682 = !{i64 2147623599, i64 2147623642, i64 2147623682}
!7683 = !DILocation(line: 187, column: 1, scope: !7329)
!7684 = !{i64 2147623819, i64 2147623862, i64 2147623902}
!7685 = !DILocation(line: 188, column: 1, scope: !7329)
!7686 = !{i64 2147624020, i64 2147624063, i64 2147624103}
!7687 = !DILocation(line: 189, column: 1, scope: !7329)
!7688 = !{i64 2147624219, i64 2147624262, i64 2147624302}
!7689 = !DILocation(line: 190, column: 1, scope: !7329)
!7690 = !{i64 2147624424, i64 2147624467, i64 2147624507}
!7691 = !DILocation(line: 191, column: 1, scope: !7329)
!7692 = !{i64 2147624593, i64 2147624636, i64 2147624676}
!7693 = !DILocation(line: 192, column: 1, scope: !7329)
!7694 = !{i64 2147624777, i64 2147624820, i64 2147624860}
!7695 = !DILocation(line: 193, column: 1, scope: !7329)
!7696 = !{i64 2147624961, i64 2147625004, i64 2147625044}
!7697 = !DILocation(line: 194, column: 1, scope: !7329)
!7698 = !{i64 2147625145, i64 2147625188, i64 2147625228}
!7699 = !DILocation(line: 195, column: 1, scope: !7329)
!7700 = !{i64 2147625383, i64 2147625426, i64 2147625466}
!7701 = !DILocation(line: 196, column: 1, scope: !7329)
!7702 = !{i64 2147625613, i64 2147625656, i64 2147625696}
!7703 = !DILocation(line: 197, column: 1, scope: !7329)
!7704 = !{i64 2147625842, i64 2147625885, i64 2147625925}
!7705 = !DILocation(line: 198, column: 1, scope: !7329)
!7706 = !{i64 2147626029, i64 2147626072, i64 2147626112}
!7707 = !DILocation(line: 199, column: 1, scope: !7329)
!7708 = !{i64 2147626225, i64 2147626268, i64 2147626308}
!7709 = !DILocation(line: 200, column: 1, scope: !7329)
!7710 = !{i64 2147626433, i64 2147626476, i64 2147626516}
!7711 = !DILocation(line: 201, column: 1, scope: !7329)
!7712 = !{i64 2147626645, i64 2147626688, i64 2147626728}
!7713 = !DILocation(line: 202, column: 1, scope: !7329)
!7714 = !{i64 2147626844, i64 2147626887, i64 2147626927}
!7715 = !DILocation(line: 203, column: 1, scope: !7329)
!7716 = !{i64 2147627082, i64 2147627125, i64 2147627165}
!7717 = !DILocation(line: 204, column: 1, scope: !7329)
!7718 = !{i64 2147627278, i64 2147627321, i64 2147627361}
!7719 = !DILocation(line: 205, column: 1, scope: !7329)
!7720 = !{i64 2147627480, i64 2147627523, i64 2147627563}
!7721 = !DILocation(line: 206, column: 1, scope: !7329)
!7722 = !{i64 2147627673, i64 2147627716, i64 2147627756}
!7723 = !DILocation(line: 207, column: 1, scope: !7329)
!7724 = !{i64 2147627907, i64 2147627950, i64 2147627990}
!7725 = !DILocation(line: 208, column: 1, scope: !7329)
!7726 = !{i64 2147628070, i64 2147628113, i64 2147628153}
!7727 = !DILocation(line: 209, column: 1, scope: !7329)
!7728 = !{i64 2147628309, i64 2147628352, i64 2147628392}
!7729 = !DILocation(line: 210, column: 1, scope: !7329)
!7730 = !{i64 2147628548, i64 2147628591, i64 2147628631}
!7731 = !DILocation(line: 211, column: 1, scope: !7329)
!7732 = !{i64 2147628784, i64 2147628827, i64 2147628867}
!7733 = !DILocation(line: 212, column: 1, scope: !7329)
!7734 = !{i64 2147629014, i64 2147629057, i64 2147629097}
!7735 = !DILocation(line: 213, column: 1, scope: !7329)
!7736 = !{i64 2147629201, i64 2147629244, i64 2147629284}
!7737 = !DILocation(line: 214, column: 1, scope: !7329)
!7738 = !{i64 2147629400, i64 2147629443, i64 2147629483}
!7739 = !DILocation(line: 215, column: 1, scope: !7329)
!7740 = !{i64 2147633732, i64 2147633775, i64 2147633815}
!7741 = !DILocation(line: 216, column: 1, scope: !7329)
!7742 = !{i64 2147633907, i64 2147633950, i64 2147633990}
!7743 = !DILocation(line: 217, column: 1, scope: !7329)
!7744 = !{i64 2147634141, i64 2147634184, i64 2147634224}
!7745 = !DILocation(line: 218, column: 1, scope: !7329)
!7746 = !{i64 2147634349, i64 2147634392, i64 2147634432}
!7747 = !DILocation(line: 219, column: 1, scope: !7329)
!7748 = !{i64 2147634567, i64 2147634610, i64 2147634650}
!7749 = !DILocation(line: 220, column: 1, scope: !7329)
!7750 = !{i64 2147634757, i64 2147634800, i64 2147634840}
!7751 = !DILocation(line: 221, column: 1, scope: !7329)
!7752 = !{i64 2147634989, i64 2147635032, i64 2147635072}
!7753 = !DILocation(line: 222, column: 1, scope: !7329)
!7754 = !{i64 2147635209, i64 2147635252, i64 2147635292}
!7755 = !DILocation(line: 223, column: 1, scope: !7329)
!7756 = !{i64 2147635405, i64 2147635448, i64 2147635488}
!7757 = !DILocation(line: 224, column: 1, scope: !7329)
!7758 = !{i64 2147635611, i64 2147635654, i64 2147635694}
!7759 = !DILocation(line: 225, column: 1, scope: !7329)
!7760 = !{i64 2147635816, i64 2147635859, i64 2147635899}
!7761 = !DILocation(line: 226, column: 1, scope: !7329)
!7762 = !{i64 2147636030, i64 2147636073, i64 2147636113}
!7763 = !DILocation(line: 227, column: 1, scope: !7329)
!7764 = !{i64 2147636256, i64 2147636299, i64 2147636339}
!7765 = !DILocation(line: 228, column: 1, scope: !7329)
!7766 = !{i64 2147636464, i64 2147636507, i64 2147636547}
!7767 = !DILocation(line: 229, column: 1, scope: !7329)
!7768 = !{i64 2147636660, i64 2147636703, i64 2147636743}
!7769 = !DILocation(line: 230, column: 1, scope: !7329)
!7770 = !{i64 2147636892, i64 2147636935, i64 2147636975}
!7771 = !DILocation(line: 231, column: 1, scope: !7329)
!7772 = !{i64 2147637076, i64 2147637119, i64 2147637159}
!7773 = !DILocation(line: 232, column: 1, scope: !7329)
!7774 = !{i64 2147637285, i64 2147637328, i64 2147637368}
!7775 = !DILocation(line: 233, column: 1, scope: !7329)
!7776 = !{i64 2147637493, i64 2147637536, i64 2147637576}
!7777 = !DILocation(line: 234, column: 1, scope: !7329)
!7778 = !{i64 2147637689, i64 2147637732, i64 2147637772}
!7779 = !DILocation(line: 235, column: 1, scope: !7329)
!7780 = !{i64 2147637873, i64 2147637916, i64 2147637956}
!7781 = !DILocation(line: 236, column: 1, scope: !7329)
!7782 = !{i64 2147638099, i64 2147638142, i64 2147638182}
!7783 = !DILocation(line: 237, column: 1, scope: !7329)
!7784 = !{i64 2147638325, i64 2147638368, i64 2147638408}
!7785 = !DILocation(line: 238, column: 1, scope: !7329)
!7786 = !{i64 2147638551, i64 2147638594, i64 2147638634}
!7787 = !DILocation(line: 239, column: 1, scope: !7329)
!7788 = !{i64 2147638777, i64 2147638820, i64 2147638860}
!7789 = !DILocation(line: 240, column: 1, scope: !7329)
!7790 = !{i64 2147639003, i64 2147639046, i64 2147639086}
!7791 = !DILocation(line: 241, column: 1, scope: !7329)
!7792 = !{i64 2147639235, i64 2147639278, i64 2147639318}
!7793 = !DILocation(line: 242, column: 1, scope: !7329)
!7794 = !{i64 2147639473, i64 2147639516, i64 2147639556}
!7795 = !DILocation(line: 243, column: 1, scope: !7329)
!7796 = !{i64 2147639693, i64 2147639736, i64 2147639776}
!7797 = !DILocation(line: 244, column: 1, scope: !7329)
!7798 = !{i64 2147639937, i64 2147639980, i64 2147640020}
!7799 = !DILocation(line: 245, column: 1, scope: !7329)
!7800 = !{i64 2147640178, i64 2147640221, i64 2147640261}
!7801 = !DILocation(line: 246, column: 1, scope: !7329)
!7802 = !{i64 2147640413, i64 2147640456, i64 2147640496}
!7803 = !DILocation(line: 247, column: 1, scope: !7329)
!7804 = !{i64 2147640645, i64 2147640688, i64 2147640728}
!7805 = !DILocation(line: 248, column: 1, scope: !7329)
!7806 = !{i64 2147640847, i64 2147640890, i64 2147640930}
!7807 = !DILocation(line: 249, column: 1, scope: !7329)
!7808 = !{i64 2147641097, i64 2147641140, i64 2147641180}
!7809 = !DILocation(line: 250, column: 1, scope: !7329)
!7810 = !{i64 2147641335, i64 2147641378, i64 2147641418}
!7811 = !DILocation(line: 251, column: 1, scope: !7329)
!7812 = !{i64 2147641543, i64 2147641586, i64 2147641626}
!7813 = !DILocation(line: 252, column: 1, scope: !7329)
!7814 = !{i64 2147641739, i64 2147641782, i64 2147641822}
!7815 = !DILocation(line: 253, column: 1, scope: !7329)
!7816 = !{i64 2147641923, i64 2147641966, i64 2147642006}
!7817 = !DILocation(line: 254, column: 1, scope: !7329)
!7818 = !{i64 2147642140, i64 2147642183, i64 2147642223}
!7819 = !DILocation(line: 255, column: 1, scope: !7329)
!7820 = !{i64 2147646406, i64 2147646449, i64 2147646489}
!7821 = !DILocation(line: 256, column: 1, scope: !7329)
!7822 = !{i64 2147646641, i64 2147646684, i64 2147646724}
!7823 = !DILocation(line: 257, column: 1, scope: !7329)
!7824 = !{i64 2147646864, i64 2147646907, i64 2147646947}
!7825 = !DILocation(line: 258, column: 1, scope: !7329)
!7826 = !{i64 2147647088, i64 2147647131, i64 2147647171}
!7827 = !DILocation(line: 259, column: 1, scope: !7329)
!7828 = !{i64 2147647326, i64 2147647369, i64 2147647409}
!7829 = !DILocation(line: 260, column: 1, scope: !7329)
!7830 = !{i64 2147647564, i64 2147647607, i64 2147647647}
!7831 = !DILocation(line: 261, column: 1, scope: !7329)
!7832 = !{i64 2147647781, i64 2147647824, i64 2147647864}
!7833 = !DILocation(line: 262, column: 1, scope: !7329)
!7834 = !{i64 2147647986, i64 2147648029, i64 2147648069}
!7835 = !DILocation(line: 263, column: 1, scope: !7329)
!7836 = !{i64 2147648179, i64 2147648222, i64 2147648262}
!7837 = !DILocation(line: 264, column: 1, scope: !7329)
!7838 = !{i64 2147648432, i64 2147648475, i64 2147648515}
!7839 = !DILocation(line: 265, column: 1, scope: !7329)
!7840 = !{i64 2147648640, i64 2147648683, i64 2147648723}
!7841 = !DILocation(line: 266, column: 1, scope: !7329)
!7842 = !{i64 2147648836, i64 2147648879, i64 2147648919}
!7843 = !DILocation(line: 267, column: 1, scope: !7329)
!7844 = !{i64 2147649050, i64 2147649093, i64 2147649133}
!7845 = !DILocation(line: 268, column: 1, scope: !7329)
!7846 = !{i64 2147649258, i64 2147649301, i64 2147649341}
!7847 = !DILocation(line: 269, column: 1, scope: !7329)
!7848 = !{i64 2147649448, i64 2147649491, i64 2147649531}
!7849 = !DILocation(line: 270, column: 1, scope: !7329)
!7850 = !{i64 2147649662, i64 2147649705, i64 2147649745}
!7851 = !DILocation(line: 271, column: 1, scope: !7329)
!7852 = !{i64 2147649924, i64 2147649967, i64 2147650007}
!7853 = !DILocation(line: 272, column: 1, scope: !7329)
!7854 = !{i64 2147650135, i64 2147650178, i64 2147650218}
!7855 = !DILocation(line: 273, column: 1, scope: !7329)
!7856 = !{i64 2147650379, i64 2147650422, i64 2147650462}
!7857 = !DILocation(line: 274, column: 1, scope: !7329)
!7858 = !{i64 2147650590, i64 2147650633, i64 2147650673}
!7859 = !DILocation(line: 275, column: 1, scope: !7329)
!7860 = !{i64 2147650819, i64 2147650862, i64 2147650902}
!7861 = !DILocation(line: 276, column: 1, scope: !7329)
!7862 = !{i64 2147651084, i64 2147651127, i64 2147651167}
!7863 = !DILocation(line: 277, column: 1, scope: !7329)
!7864 = !{i64 2147651289, i64 2147651332, i64 2147651372}
!7865 = !DILocation(line: 278, column: 1, scope: !7329)
!7866 = !{i64 2147651485, i64 2147651528, i64 2147651568}
!7867 = !DILocation(line: 279, column: 1, scope: !7329)
!7868 = !{i64 2147651708, i64 2147651751, i64 2147651791}
!7869 = !DILocation(line: 280, column: 1, scope: !7329)
!7870 = !{i64 2147651871, i64 2147651914, i64 2147651954}
!7871 = !DILocation(line: 281, column: 1, scope: !7329)
!7872 = !{i64 2147652076, i64 2147652119, i64 2147652159}
!7873 = !DILocation(line: 282, column: 1, scope: !7329)
!7874 = !{i64 2147652296, i64 2147652339, i64 2147652379}
!7875 = !DILocation(line: 283, column: 1, scope: !7329)
!7876 = !{i64 2147652510, i64 2147652553, i64 2147652593}
!7877 = !DILocation(line: 284, column: 1, scope: !7329)
!7878 = !{i64 2147652754, i64 2147652797, i64 2147652837}
!7879 = !DILocation(line: 285, column: 1, scope: !7329)
!7880 = !{i64 2147652986, i64 2147653029, i64 2147653069}
!7881 = !DILocation(line: 286, column: 1, scope: !7329)
!7882 = !{i64 2147653200, i64 2147653243, i64 2147653283}
!7883 = !DILocation(line: 287, column: 1, scope: !7329)
!7884 = !{i64 2147653411, i64 2147653454, i64 2147653494}
!7885 = !DILocation(line: 288, column: 1, scope: !7329)
!7886 = !{i64 2147653604, i64 2147653647, i64 2147653687}
!7887 = !DILocation(line: 289, column: 1, scope: !7329)
!7888 = !{i64 2147653803, i64 2147653846, i64 2147653886}
!7889 = !DILocation(line: 290, column: 1, scope: !7329)
!7890 = !{i64 2147653975, i64 2147654018, i64 2147654058}
!7891 = !DILocation(line: 291, column: 1, scope: !7329)
!7892 = !{i64 2147654147, i64 2147654190, i64 2147654230}
!7893 = !DILocation(line: 292, column: 1, scope: !7329)
!7894 = !{i64 2147654337, i64 2147654380, i64 2147654420}
!7895 = !DILocation(line: 293, column: 1, scope: !7329)
!7896 = !{i64 2147654530, i64 2147654573, i64 2147654613}
!7897 = !DILocation(line: 294, column: 1, scope: !7329)
!7898 = !{i64 2147654726, i64 2147654769, i64 2147654809}
!7899 = !DILocation(line: 295, column: 1, scope: !7329)
!7900 = !{i64 2147654889, i64 2147654932, i64 2147654972}
!7901 = !DILocation(line: 296, column: 1, scope: !7329)
!7902 = !{i64 2147655091, i64 2147655134, i64 2147655174}
!7903 = !DILocation(line: 297, column: 1, scope: !7329)
!7904 = !{i64 2147659357, i64 2147659400, i64 2147659440}
!7905 = !DILocation(line: 298, column: 1, scope: !7329)
!7906 = !{i64 2147659565, i64 2147659608, i64 2147659648}
!7907 = !DILocation(line: 299, column: 1, scope: !7329)
!7908 = !{i64 2147659758, i64 2147659801, i64 2147659841}
!7909 = !DILocation(line: 300, column: 1, scope: !7329)
!7910 = !{i64 2147659945, i64 2147659988, i64 2147660028}
!7911 = !DILocation(line: 301, column: 1, scope: !7329)
!7912 = !{i64 2147660172, i64 2147660215, i64 2147660255}
!7913 = !DILocation(line: 302, column: 1, scope: !7329)
!7914 = !{i64 2147660338, i64 2147660381, i64 2147660421}
!7915 = !DILocation(line: 303, column: 1, scope: !7329)
!7916 = !{i64 2147660576, i64 2147660619, i64 2147660659}
!7917 = !DILocation(line: 304, column: 1, scope: !7329)
!7918 = !{i64 2147660826, i64 2147660869, i64 2147660909}
!7919 = !DILocation(line: 305, column: 1, scope: !7329)
!7920 = !{i64 2147661034, i64 2147661077, i64 2147661117}
!7921 = !DILocation(line: 306, column: 1, scope: !7329)
!7922 = !{i64 2147661230, i64 2147661273, i64 2147661313}
!7923 = !DILocation(line: 307, column: 1, scope: !7329)
!7924 = !{i64 2147661447, i64 2147661490, i64 2147661530}
!7925 = !DILocation(line: 308, column: 1, scope: !7329)
!7926 = !{i64 2147661739, i64 2147661782, i64 2147661822}
!7927 = !DILocation(line: 309, column: 1, scope: !7329)
!7928 = !{i64 2147661971, i64 2147662014, i64 2147662054}
!7929 = !DILocation(line: 310, column: 1, scope: !7329)
!7930 = !{i64 2147662188, i64 2147662231, i64 2147662271}
!7931 = !DILocation(line: 311, column: 1, scope: !7329)
!7932 = !{i64 2147662395, i64 2147662438, i64 2147662478}
!7933 = !DILocation(line: 312, column: 1, scope: !7329)
!7934 = !{i64 2147662596, i64 2147662639, i64 2147662679}
!7935 = !DILocation(line: 313, column: 1, scope: !7329)
!7936 = !{i64 2147662828, i64 2147662871, i64 2147662911}
!7937 = !DILocation(line: 314, column: 1, scope: !7329)
!7938 = !{i64 2147663036, i64 2147663079, i64 2147663119}
!7939 = !DILocation(line: 315, column: 1, scope: !7329)
!7940 = !{i64 2147663226, i64 2147663269, i64 2147663309}
!7941 = !DILocation(line: 316, column: 1, scope: !7329)
!7942 = !{i64 2147663452, i64 2147663495, i64 2147663535}
!7943 = !DILocation(line: 317, column: 1, scope: !7329)
!7944 = !{i64 2147663641, i64 2147663684, i64 2147663724}
!7945 = !DILocation(line: 318, column: 1, scope: !7329)
!7946 = !{i64 2147663912, i64 2147663955, i64 2147663995}
!7947 = !DILocation(line: 319, column: 1, scope: !7329)
!7948 = !{i64 2147664132, i64 2147664175, i64 2147664215}
!7949 = !DILocation(line: 320, column: 1, scope: !7329)
!7950 = !{i64 2147664385, i64 2147664428, i64 2147664468}
!7951 = !DILocation(line: 321, column: 1, scope: !7329)
!7952 = !{i64 2147664593, i64 2147664636, i64 2147664676}
!7953 = !DILocation(line: 322, column: 1, scope: !7329)
!7954 = !{i64 2147664825, i64 2147664868, i64 2147664908}
!7955 = !DILocation(line: 323, column: 1, scope: !7329)
!7956 = !{i64 2147665036, i64 2147665079, i64 2147665119}
!7957 = !DILocation(line: 324, column: 1, scope: !7329)
!7958 = !{i64 2147665226, i64 2147665269, i64 2147665309}
!7959 = !DILocation(line: 325, column: 1, scope: !7329)
!7960 = !{i64 2147665440, i64 2147665483, i64 2147665523}
!7961 = !DILocation(line: 326, column: 1, scope: !7329)
!7962 = !{i64 2147665639, i64 2147665682, i64 2147665722}
!7963 = !DILocation(line: 327, column: 1, scope: !7329)
!7964 = !{i64 2147665826, i64 2147665869, i64 2147665909}
!7965 = !DILocation(line: 328, column: 1, scope: !7329)
!7966 = !{i64 2147666034, i64 2147666077, i64 2147666117}
!7967 = !DILocation(line: 329, column: 1, scope: !7329)
!7968 = !{i64 2147666263, i64 2147666306, i64 2147666346}
!7969 = !DILocation(line: 330, column: 1, scope: !7329)
!7970 = !{i64 2147666465, i64 2147666508, i64 2147666548}
!7971 = !DILocation(line: 331, column: 1, scope: !7329)
!7972 = !{i64 2147666664, i64 2147666707, i64 2147666747}
!7973 = !DILocation(line: 332, column: 1, scope: !7329)
!7974 = !{i64 2147666881, i64 2147666924, i64 2147666964}
!7975 = !DILocation(line: 334, column: 1, scope: !7329)
!7976 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !821, file: !821, line: 30, type: !828, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7977)
!7977 = !{!7978, !7979}
!7978 = !DILocalVariable(name: "arg", arg: 1, scope: !7976, file: !821, line: 30, type: !830)
!7979 = !DILocalVariable(name: "key", scope: !7976, file: !821, line: 32, type: !108)
!7980 = !DILocation(line: 0, scope: !7976)
!7981 = !DILocation(line: 37, column: 2, scope: !7976)
!7982 = !DILocation(line: 38, column: 2, scope: !7976)
!7983 = !DILocation(line: 55, column: 2, scope: !7984, inlinedAt: !7991)
!7984 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7988)
!7985 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7986 = !DISubroutineType(types: !7987)
!7987 = !{!32}
!7988 = !{!7989, !7990}
!7989 = !DILocalVariable(name: "key", scope: !7984, file: !7985, line: 44, type: !32)
!7990 = !DILocalVariable(name: "tmp", scope: !7984, file: !7985, line: 53, type: !32)
!7991 = distinct !DILocation(line: 40, column: 8, scope: !7976)
!7992 = !{i64 2189167}
!7993 = !DILocation(line: 0, scope: !7984, inlinedAt: !7991)
!7994 = !DILocalVariable(name: "key", arg: 1, scope: !7995, file: !7985, line: 84, type: !32)
!7995 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !7998)
!7996 = !DISubroutineType(types: !7997)
!7997 = !{null, !32}
!7998 = !{!7994}
!7999 = !DILocation(line: 0, scope: !7995, inlinedAt: !8000)
!8000 = distinct !DILocation(line: 47, column: 2, scope: !7976)
!8001 = !DILocation(line: 95, column: 2, scope: !7995, inlinedAt: !8000)
!8002 = !{i64 2189984}
!8003 = !DILocation(line: 51, column: 18, scope: !7976)
!8004 = !DILocation(line: 53, column: 2, scope: !7976)
!8005 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !8006, file: !8006, line: 1609, type: !333, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2953)
!8006 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8007 = !DILocation(line: 1611, column: 3, scope: !8005)
!8008 = !DILocation(line: 1612, column: 1, scope: !8005)
!8009 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !8006, file: !8006, line: 1629, type: !333, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !804, retainedNodes: !2953)
!8010 = !DILocation(line: 1631, column: 3, scope: !8009)
!8011 = !DILocation(line: 1632, column: 1, scope: !8009)
!8012 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !857, file: !857, line: 26, type: !863, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !854, retainedNodes: !8013)
!8013 = !{!8014}
!8014 = !DILocalVariable(name: "dev", arg: 1, scope: !8012, file: !857, line: 26, type: !865)
!8015 = !DILocation(line: 0, scope: !8012)
!8016 = !DILocation(line: 68, column: 2, scope: !8012)
!8017 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !8018, file: !8018, line: 14, type: !5496, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3545, retainedNodes: !8019)
!8018 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8019 = !{!8020, !8021}
!8020 = !DILocalVariable(name: "fmt", arg: 1, scope: !8017, file: !8018, line: 14, type: !336)
!8021 = !DILocalVariable(name: "ap", scope: !8017, file: !8018, line: 16, type: !8022)
!8022 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4504, line: 99, baseType: !8023)
!8023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4504, line: 40, baseType: !8024)
!8024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !8018, baseType: !8025)
!8025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !8026)
!8026 = !{!8027}
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !8025, file: !8018, line: 16, baseType: !102, size: 32)
!8028 = !DILocation(line: 0, scope: !8017)
!8029 = !DILocation(line: 16, column: 2, scope: !8017)
!8030 = !DILocation(line: 16, column: 10, scope: !8017)
!8031 = !DILocation(line: 18, column: 2, scope: !8017)
!8032 = !DILocation(line: 19, column: 2, scope: !8017)
!8033 = !DILocation(line: 20, column: 2, scope: !8017)
!8034 = !DILocation(line: 21, column: 1, scope: !8017)
!8035 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !8018, file: !8018, line: 23, type: !8036, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3545, retainedNodes: !8038)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{null, !336, !8022}
!8038 = !{!8039, !8040}
!8039 = !DILocalVariable(name: "fmt", arg: 1, scope: !8035, file: !8018, line: 23, type: !336)
!8040 = !DILocalVariable(name: "ap", arg: 2, scope: !8035, file: !8018, line: 23, type: !8022)
!8041 = !DILocation(line: 0, scope: !8035)
!8042 = !DILocation(line: 25, column: 2, scope: !8035)
!8043 = !DILocation(line: 26, column: 1, scope: !8035)
!8044 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !8018, file: !8018, line: 52, type: !8045, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3545, retainedNodes: !8047)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{null, !103, !13, !153}
!8047 = !{!8048, !8049, !8050, !8051}
!8048 = !DILocalVariable(name: "level", arg: 1, scope: !8044, file: !8018, line: 52, type: !103)
!8049 = !DILocalVariable(name: "data", arg: 2, scope: !8044, file: !8018, line: 52, type: !13)
!8050 = !DILocalVariable(name: "size", arg: 3, scope: !8044, file: !8018, line: 52, type: !153)
!8051 = !DILocalVariable(name: "data_buffer", scope: !8044, file: !8018, line: 54, type: !336)
!8052 = !DILocation(line: 0, scope: !8044)
!8053 = !DILocation(line: 55, column: 14, scope: !8044)
!8054 = !DILocation(line: 55, column: 2, scope: !8044)
!8055 = !DILocation(line: 56, column: 3, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8044, file: !8018, line: 55, column: 20)
!8057 = !DILocation(line: 57, column: 3, scope: !8056)
!8058 = !DILocation(line: 59, column: 7, scope: !8056)
!8059 = distinct !{!8059, !8054, !8060}
!8060 = !DILocation(line: 65, column: 2, scope: !8044)
!8061 = !DILocation(line: 66, column: 1, scope: !8044)
!8062 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !8063, file: !8063, line: 175, type: !8064, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3545, retainedNodes: !8066)
!8063 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8064 = !DISubroutineType(types: !8065)
!8065 = !{!158, !103}
!8066 = !{!8067}
!8067 = !DILocalVariable(name: "level", arg: 1, scope: !8062, file: !8063, line: 175, type: !103)
!8068 = !DILocation(line: 0, scope: !8062)
!8069 = !DILocation(line: 177, column: 2, scope: !8062)
!8070 = !DILocation(line: 189, column: 1, scope: !8062)
!8071 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !8018, file: !8018, line: 28, type: !8072, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3545, retainedNodes: !8074)
!8072 = !DISubroutineType(types: !8073)
!8073 = !{null, !336, !153}
!8074 = !{!8075, !8076, !8077, !8079, !8081}
!8075 = !DILocalVariable(name: "data", arg: 1, scope: !8071, file: !8018, line: 28, type: !336)
!8076 = !DILocalVariable(name: "length", arg: 2, scope: !8071, file: !8018, line: 28, type: !153)
!8077 = !DILocalVariable(name: "i", scope: !8078, file: !8018, line: 30, type: !153)
!8078 = distinct !DILexicalBlock(scope: !8071, file: !8018, line: 30, column: 2)
!8079 = !DILocalVariable(name: "i", scope: !8080, file: !8018, line: 40, type: !153)
!8080 = distinct !DILexicalBlock(scope: !8071, file: !8018, line: 40, column: 2)
!8081 = !DILocalVariable(name: "c", scope: !8082, file: !8018, line: 42, type: !165)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !8018, line: 41, column: 19)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !8018, line: 41, column: 7)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !8018, line: 40, column: 54)
!8085 = distinct !DILexicalBlock(scope: !8080, file: !8018, line: 40, column: 2)
!8086 = !DILocation(line: 0, scope: !8071)
!8087 = !DILocation(line: 0, scope: !8078)
!8088 = !DILocation(line: 30, column: 2, scope: !8078)
!8089 = !DILocation(line: 38, column: 2, scope: !8071)
!8090 = !DILocation(line: 0, scope: !8080)
!8091 = !DILocation(line: 40, column: 2, scope: !8080)
!8092 = !DILocation(line: 31, column: 9, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8094, file: !8018, line: 31, column: 7)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !8018, line: 30, column: 54)
!8095 = distinct !DILexicalBlock(scope: !8078, file: !8018, line: 30, column: 2)
!8096 = !DILocation(line: 31, column: 7, scope: !8094)
!8097 = !DILocation(line: 32, column: 35, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8093, file: !8018, line: 31, column: 19)
!8099 = !DILocation(line: 32, column: 20, scope: !8098)
!8100 = !DILocation(line: 32, column: 4, scope: !8098)
!8101 = !DILocation(line: 33, column: 3, scope: !8098)
!8102 = !DILocation(line: 34, column: 4, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8093, file: !8018, line: 33, column: 10)
!8104 = !DILocation(line: 30, column: 50, scope: !8095)
!8105 = !DILocation(line: 30, column: 24, scope: !8095)
!8106 = distinct !{!8106, !8088, !8107}
!8107 = !DILocation(line: 36, column: 2, scope: !8078)
!8108 = !DILocation(line: 49, column: 2, scope: !8071)
!8109 = !DILocation(line: 50, column: 1, scope: !8071)
!8110 = !DILocation(line: 41, column: 9, scope: !8083)
!8111 = !DILocation(line: 41, column: 7, scope: !8084)
!8112 = !DILocation(line: 42, column: 22, scope: !8082)
!8113 = !DILocation(line: 0, scope: !8082)
!8114 = !DILocation(line: 44, column: 25, scope: !8082)
!8115 = !DILocation(line: 44, column: 17, scope: !8082)
!8116 = !DILocation(line: 44, column: 33, scope: !8082)
!8117 = !DILocation(line: 44, column: 4, scope: !8082)
!8118 = !DILocation(line: 45, column: 3, scope: !8082)
!8119 = !DILocation(line: 46, column: 4, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8083, file: !8018, line: 45, column: 10)
!8121 = !DILocation(line: 40, column: 50, scope: !8085)
!8122 = !DILocation(line: 40, column: 24, scope: !8085)
!8123 = distinct !{!8123, !8091, !8124}
!8124 = !DILocation(line: 48, column: 2, scope: !8080)
!8125 = distinct !DISubprogram(name: "isprint", scope: !7073, file: !7073, line: 37, type: !800, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3545, retainedNodes: !8126)
!8126 = !{!8127}
!8127 = !DILocalVariable(name: "c", arg: 1, scope: !8125, file: !7073, line: 37, type: !103)
!8128 = !DILocation(line: 0, scope: !8125)
!8129 = !DILocation(line: 39, column: 38, scope: !8125)
!8130 = !DILocation(line: 39, column: 2, scope: !8125)
!8131 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8132, file: !8132, line: 57, type: !8133, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3548, retainedNodes: !8179)
!8132 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8133 = !DISubroutineType(types: !8134)
!8134 = !{null, !32, !8135}
!8135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 32)
!8136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8137)
!8137 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3668, line: 141, baseType: !8138)
!8138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3668, line: 97, size: 256, elements: !8139)
!8139 = !{!8140}
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8138, file: !3668, line: 107, baseType: !8141, size: 256)
!8141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3668, line: 98, size: 256, elements: !8142)
!8142 = !{!8143, !8148, !8153, !8158, !8163, !8168, !8173, !8178}
!8143 = !DIDerivedType(tag: DW_TAG_member, scope: !8141, file: !3668, line: 99, baseType: !8144, size: 32)
!8144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8141, file: !3668, line: 99, size: 32, elements: !8145)
!8145 = !{!8146, !8147}
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8144, file: !3668, line: 99, baseType: !108, size: 32)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8144, file: !3668, line: 99, baseType: !108, size: 32)
!8148 = !DIDerivedType(tag: DW_TAG_member, scope: !8141, file: !3668, line: 100, baseType: !8149, size: 32, offset: 32)
!8149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8141, file: !3668, line: 100, size: 32, elements: !8150)
!8150 = !{!8151, !8152}
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8149, file: !3668, line: 100, baseType: !108, size: 32)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8149, file: !3668, line: 100, baseType: !108, size: 32)
!8153 = !DIDerivedType(tag: DW_TAG_member, scope: !8141, file: !3668, line: 101, baseType: !8154, size: 32, offset: 64)
!8154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8141, file: !3668, line: 101, size: 32, elements: !8155)
!8155 = !{!8156, !8157}
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8154, file: !3668, line: 101, baseType: !108, size: 32)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8154, file: !3668, line: 101, baseType: !108, size: 32)
!8158 = !DIDerivedType(tag: DW_TAG_member, scope: !8141, file: !3668, line: 102, baseType: !8159, size: 32, offset: 96)
!8159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8141, file: !3668, line: 102, size: 32, elements: !8160)
!8160 = !{!8161, !8162}
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8159, file: !3668, line: 102, baseType: !108, size: 32)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8159, file: !3668, line: 102, baseType: !108, size: 32)
!8163 = !DIDerivedType(tag: DW_TAG_member, scope: !8141, file: !3668, line: 103, baseType: !8164, size: 32, offset: 128)
!8164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8141, file: !3668, line: 103, size: 32, elements: !8165)
!8165 = !{!8166, !8167}
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8164, file: !3668, line: 103, baseType: !108, size: 32)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8164, file: !3668, line: 103, baseType: !108, size: 32)
!8168 = !DIDerivedType(tag: DW_TAG_member, scope: !8141, file: !3668, line: 104, baseType: !8169, size: 32, offset: 160)
!8169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8141, file: !3668, line: 104, size: 32, elements: !8170)
!8170 = !{!8171, !8172}
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8169, file: !3668, line: 104, baseType: !108, size: 32)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8169, file: !3668, line: 104, baseType: !108, size: 32)
!8173 = !DIDerivedType(tag: DW_TAG_member, scope: !8141, file: !3668, line: 105, baseType: !8174, size: 32, offset: 192)
!8174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8141, file: !3668, line: 105, size: 32, elements: !8175)
!8175 = !{!8176, !8177}
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8174, file: !3668, line: 105, baseType: !108, size: 32)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8174, file: !3668, line: 105, baseType: !108, size: 32)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8141, file: !3668, line: 106, baseType: !108, size: 32, offset: 224)
!8179 = !{!8180, !8181}
!8180 = !DILocalVariable(name: "reason", arg: 1, scope: !8131, file: !8132, line: 57, type: !32)
!8181 = !DILocalVariable(name: "esf", arg: 2, scope: !8131, file: !8132, line: 57, type: !8135)
!8182 = !DILocation(line: 0, scope: !8131)
!8183 = !DILocation(line: 60, column: 10, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8131, file: !8132, line: 60, column: 6)
!8185 = !DILocation(line: 60, column: 6, scope: !8131)
!8186 = !DILocation(line: 61, column: 3, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8184, file: !8132, line: 60, column: 19)
!8188 = !DILocation(line: 62, column: 2, scope: !8187)
!8189 = !DILocation(line: 63, column: 2, scope: !8131)
!8190 = !DILocation(line: 64, column: 1, scope: !8131)
!8191 = distinct !DISubprogram(name: "esf_dump", scope: !8132, file: !8132, line: 20, type: !8192, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3548, retainedNodes: !8194)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{null, !8135}
!8194 = !{!8195}
!8195 = !DILocalVariable(name: "esf", arg: 1, scope: !8191, file: !8132, line: 20, type: !8135)
!8196 = !DILocation(line: 0, scope: !8191)
!8197 = !DILocation(line: 22, column: 2, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !8132, line: 22, column: 2)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !8132, line: 22, column: 2)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !8132, line: 22, column: 2)
!8201 = distinct !DILexicalBlock(scope: !8191, file: !8132, line: 22, column: 2)
!8202 = !DILocation(line: 24, column: 2, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !8132, line: 24, column: 2)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !8132, line: 24, column: 2)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !8132, line: 24, column: 2)
!8206 = distinct !DILexicalBlock(scope: !8191, file: !8132, line: 24, column: 2)
!8207 = !DILocation(line: 26, column: 2, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !8132, line: 26, column: 2)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !8132, line: 26, column: 2)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !8132, line: 26, column: 2)
!8211 = distinct !DILexicalBlock(scope: !8191, file: !8132, line: 26, column: 2)
!8212 = !DILocation(line: 53, column: 2, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !8132, line: 53, column: 2)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !8132, line: 53, column: 2)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !8132, line: 53, column: 2)
!8216 = distinct !DILexicalBlock(scope: !8191, file: !8132, line: 53, column: 2)
!8217 = !DILocation(line: 55, column: 1, scope: !8191)
!8218 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8132, file: !8132, line: 82, type: !8219, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3548, retainedNodes: !8234)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{null, !8135, !8221}
!8221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8222, size: 32)
!8222 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !244, line: 37, baseType: !8223)
!8223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8224)
!8224 = !{!8225, !8226, !8227, !8228, !8229, !8230, !8231, !8232, !8233}
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8223, file: !244, line: 26, baseType: !108, size: 32)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8223, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8223, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8223, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8223, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8223, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8223, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8223, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8223, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8234 = !{!8235, !8236, !8237}
!8235 = !DILocalVariable(name: "esf", arg: 1, scope: !8218, file: !8132, line: 82, type: !8135)
!8236 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8218, file: !8132, line: 82, type: !8221)
!8237 = !DILocalVariable(name: "reason", scope: !8218, file: !8132, line: 88, type: !32)
!8238 = !DILocation(line: 0, scope: !8218)
!8239 = !DILocation(line: 88, column: 35, scope: !8218)
!8240 = !DILocation(line: 108, column: 2, scope: !8218)
!8241 = !DILocation(line: 131, column: 1, scope: !8218)
!8242 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8132, file: !8132, line: 133, type: !8243, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3548, retainedNodes: !8245)
!8243 = !DISubroutineType(types: !8244)
!8244 = !{null, !102}
!8245 = !{!8246, !8247, !8248}
!8246 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8242, file: !8132, line: 133, type: !102)
!8247 = !DILocalVariable(name: "ssf_contents", scope: !8242, file: !8132, line: 135, type: !1753)
!8248 = !DILocalVariable(name: "oops_esf", scope: !8242, file: !8132, line: 136, type: !8137)
!8249 = !DILocation(line: 0, scope: !8242)
!8250 = !DILocation(line: 136, column: 2, scope: !8242)
!8251 = !DILocation(line: 136, column: 15, scope: !8242)
!8252 = !DILocation(line: 139, column: 22, scope: !8242)
!8253 = !DILocation(line: 139, column: 17, scope: !8242)
!8254 = !DILocation(line: 139, column: 20, scope: !8242)
!8255 = !DILocation(line: 141, column: 2, scope: !8242)
!8256 = !DILocation(line: 142, column: 2, scope: !8242)
!8257 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8258, file: !8258, line: 40, type: !7996, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8259)
!8258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8259 = !{!8260}
!8260 = !DILocalVariable(name: "irq", arg: 1, scope: !8257, file: !8258, line: 40, type: !32)
!8261 = !DILocation(line: 0, scope: !8257)
!8262 = !DILocation(line: 42, column: 2, scope: !8257)
!8263 = !DILocation(line: 43, column: 1, scope: !8257)
!8264 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1028, file: !1028, line: 1684, type: !8265, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8267)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{null, !1651}
!8267 = !{!8268}
!8268 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8264, file: !1028, line: 1684, type: !1651)
!8269 = !DILocation(line: 0, scope: !8264)
!8270 = !DILocation(line: 1686, column: 23, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8264, file: !1028, line: 1686, column: 7)
!8272 = !DILocation(line: 1686, column: 7, scope: !8264)
!8273 = !DILocation(line: 1688, column: 5, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8271, file: !1028, line: 1687, column: 3)
!8275 = !{i64 2151257943}
!8276 = !DILocation(line: 1689, column: 81, scope: !8274)
!8277 = !DILocation(line: 1689, column: 60, scope: !8274)
!8278 = !DILocation(line: 1689, column: 34, scope: !8274)
!8279 = !DILocation(line: 1689, column: 5, scope: !8274)
!8280 = !DILocation(line: 1689, column: 43, scope: !8274)
!8281 = !DILocation(line: 1690, column: 5, scope: !8274)
!8282 = !{i64 2151258057}
!8283 = !DILocation(line: 1691, column: 3, scope: !8274)
!8284 = !DILocation(line: 1692, column: 1, scope: !8264)
!8285 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8258, file: !8258, line: 45, type: !7996, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8286)
!8286 = !{!8287}
!8287 = !DILocalVariable(name: "irq", arg: 1, scope: !8285, file: !8258, line: 45, type: !32)
!8288 = !DILocation(line: 0, scope: !8285)
!8289 = !DILocation(line: 47, column: 2, scope: !8285)
!8290 = !DILocation(line: 48, column: 1, scope: !8285)
!8291 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1028, file: !1028, line: 1722, type: !8265, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8292)
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8291, file: !1028, line: 1722, type: !1651)
!8294 = !DILocation(line: 0, scope: !8291)
!8295 = !DILocation(line: 1724, column: 23, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8291, file: !1028, line: 1724, column: 7)
!8297 = !DILocation(line: 1724, column: 7, scope: !8291)
!8298 = !DILocation(line: 1726, column: 81, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8296, file: !1028, line: 1725, column: 3)
!8300 = !DILocation(line: 1726, column: 60, scope: !8299)
!8301 = !DILocation(line: 1726, column: 34, scope: !8299)
!8302 = !DILocation(line: 1726, column: 5, scope: !8299)
!8303 = !DILocation(line: 1726, column: 43, scope: !8299)
!8304 = !DILocation(line: 271, column: 3, scope: !8305, inlinedAt: !8307)
!8305 = distinct !DISubprogram(name: "__DSB", scope: !8306, file: !8306, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !2953)
!8306 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8307 = distinct !DILocation(line: 1727, column: 5, scope: !8299)
!8308 = !{i64 3712326}
!8309 = !DILocation(line: 260, column: 3, scope: !8310, inlinedAt: !8311)
!8310 = distinct !DISubprogram(name: "__ISB", scope: !8306, file: !8306, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !2953)
!8311 = distinct !DILocation(line: 1728, column: 5, scope: !8299)
!8312 = !{i64 3712043}
!8313 = !DILocation(line: 1729, column: 3, scope: !8299)
!8314 = !DILocation(line: 1730, column: 1, scope: !8291)
!8315 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8258, file: !8258, line: 50, type: !8316, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8318)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{!103, !32}
!8318 = !{!8319}
!8319 = !DILocalVariable(name: "irq", arg: 1, scope: !8315, file: !8258, line: 50, type: !32)
!8320 = !DILocation(line: 0, scope: !8315)
!8321 = !DILocation(line: 52, column: 20, scope: !8315)
!8322 = !DILocation(line: 52, column: 9, scope: !8315)
!8323 = !DILocation(line: 52, column: 41, scope: !8315)
!8324 = !DILocation(line: 52, column: 39, scope: !8315)
!8325 = !DILocation(line: 52, column: 2, scope: !8315)
!8326 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8258, file: !8258, line: 64, type: !8327, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8329)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{null, !32, !32, !108}
!8329 = !{!8330, !8331, !8332}
!8330 = !DILocalVariable(name: "irq", arg: 1, scope: !8326, file: !8258, line: 64, type: !32)
!8331 = !DILocalVariable(name: "prio", arg: 2, scope: !8326, file: !8258, line: 64, type: !32)
!8332 = !DILocalVariable(name: "flags", arg: 3, scope: !8326, file: !8258, line: 64, type: !108)
!8333 = !DILocation(line: 0, scope: !8326)
!8334 = !DILocation(line: 83, column: 8, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !8258, line: 82, column: 9)
!8336 = distinct !DILexicalBlock(scope: !8326, file: !8258, line: 76, column: 6)
!8337 = !DILocation(line: 91, column: 2, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !8258, line: 91, column: 2)
!8339 = distinct !DILexicalBlock(scope: !8326, file: !8258, line: 91, column: 2)
!8340 = !DILocation(line: 91, column: 2, scope: !8339)
!8341 = !DILocation(line: 91, column: 2, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8338, file: !8258, line: 91, column: 2)
!8343 = !DILocation(line: 95, column: 2, scope: !8326)
!8344 = !DILocation(line: 96, column: 1, scope: !8326)
!8345 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1028, file: !1028, line: 1814, type: !8346, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8348)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{null, !1651, !108}
!8348 = !{!8349, !8350}
!8349 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8345, file: !1028, line: 1814, type: !1651)
!8350 = !DILocalVariable(name: "priority", arg: 2, scope: !8345, file: !1028, line: 1814, type: !108)
!8351 = !DILocation(line: 0, scope: !8345)
!8352 = !DILocation(line: 0, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8345, file: !1028, line: 1816, column: 7)
!8354 = !DILocation(line: 1816, column: 7, scope: !8345)
!8355 = !DILocation(line: 1824, column: 1, scope: !8345)
!8356 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8258, file: !8258, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3559, retainedNodes: !8357)
!8357 = !{!8358}
!8358 = !DILocalVariable(name: "unused", arg: 1, scope: !8356, file: !8258, line: 155, type: !13)
!8359 = !DILocation(line: 0, scope: !8356)
!8360 = !DILocation(line: 159, column: 2, scope: !8356)
!8361 = !DILocation(line: 160, column: 1, scope: !8356)
!8362 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8363, file: !8363, line: 87, type: !333, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !2953)
!8363 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8364 = !DILocation(line: 89, column: 2, scope: !8362)
!8365 = !DILocation(line: 90, column: 2, scope: !8362)
!8366 = !DILocation(line: 91, column: 1, scope: !8362)
!8367 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8363, file: !8363, line: 23, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!8368 = !DISubprogram(name: "z_arm_int_exit", scope: !8369, file: !8369, line: 153, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!8369 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8370 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8371, file: !8371, line: 256, type: !333, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3607, retainedNodes: !2953)
!8371 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8372 = !DILocation(line: 258, column: 2, scope: !8370)
!8373 = !DILocation(line: 260, column: 2, scope: !8370)
!8374 = !DILocation(line: 262, column: 2, scope: !8370)
!8375 = !DILocation(line: 263, column: 2, scope: !8370)
!8376 = !DILocation(line: 267, column: 2, scope: !8370)
!8377 = !DILocation(line: 268, column: 2, scope: !8370)
!8378 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8371, file: !8371, line: 53, type: !333, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3607, retainedNodes: !2953)
!8379 = !DILocation(line: 55, column: 12, scope: !8378)
!8380 = !DILocation(line: 271, column: 3, scope: !8381, inlinedAt: !8382)
!8381 = distinct !DISubprogram(name: "__DSB", scope: !8306, file: !8306, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3607, retainedNodes: !2953)
!8382 = distinct !DILocation(line: 56, column: 2, scope: !8378)
!8383 = !{i64 3710997}
!8384 = !DILocation(line: 260, column: 3, scope: !8385, inlinedAt: !8386)
!8385 = distinct !DISubprogram(name: "__ISB", scope: !8306, file: !8306, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3607, retainedNodes: !2953)
!8386 = distinct !DILocation(line: 57, column: 2, scope: !8378)
!8387 = !{i64 3710714}
!8388 = !DILocation(line: 58, column: 1, scope: !8378)
!8389 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8371, file: !8371, line: 96, type: !333, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3607, retainedNodes: !2953)
!8390 = !DILocation(line: 103, column: 13, scope: !8389)
!8391 = !DILocation(line: 975, column: 3, scope: !8392, inlinedAt: !8397)
!8392 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8306, file: !8306, line: 971, type: !8393, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3607, retainedNodes: !8395)
!8393 = !DISubroutineType(types: !8394)
!8394 = !{!108}
!8395 = !{!8396}
!8396 = !DILocalVariable(name: "result", scope: !8392, file: !8306, line: 973, type: !108)
!8397 = distinct !DILocation(line: 189, column: 16, scope: !8389)
!8398 = !{i64 3731827}
!8399 = !DILocation(line: 0, scope: !8392, inlinedAt: !8397)
!8400 = !DILocation(line: 189, column: 32, scope: !8389)
!8401 = !DILocalVariable(name: "control", arg: 1, scope: !8402, file: !8306, line: 1001, type: !108)
!8402 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8306, file: !8306, line: 1001, type: !8403, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3607, retainedNodes: !8405)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{null, !108}
!8405 = !{!8401}
!8406 = !DILocation(line: 0, scope: !8402, inlinedAt: !8407)
!8407 = distinct !DILocation(line: 189, column: 2, scope: !8389)
!8408 = !DILocation(line: 1003, column: 3, scope: !8402, inlinedAt: !8407)
!8409 = !{i64 3732547}
!8410 = !DILocation(line: 260, column: 3, scope: !8385, inlinedAt: !8411)
!8411 = distinct !DILocation(line: 1004, column: 3, scope: !8402, inlinedAt: !8407)
!8412 = !DILocation(line: 191, column: 1, scope: !8389)
!8413 = distinct !DISubprogram(name: "arch_swap", scope: !8414, file: !8414, line: 33, type: !8316, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3635, retainedNodes: !8415)
!8414 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8415 = !{!8416}
!8416 = !DILocalVariable(name: "key", arg: 1, scope: !8413, file: !8414, line: 33, type: !32)
!8417 = !DILocation(line: 0, scope: !8413)
!8418 = !DILocation(line: 36, column: 2, scope: !8413)
!8419 = !DILocation(line: 36, column: 17, scope: !8413)
!8420 = !DILocation(line: 36, column: 25, scope: !8413)
!8421 = !DILocation(line: 37, column: 37, scope: !8413)
!8422 = !DILocation(line: 37, column: 17, scope: !8413)
!8423 = !DILocation(line: 37, column: 35, scope: !8413)
!8424 = !DILocation(line: 41, column: 12, scope: !8413)
!8425 = !DILocalVariable(name: "key", arg: 1, scope: !8426, file: !7985, line: 84, type: !32)
!8426 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3635, retainedNodes: !8427)
!8427 = !{!8425}
!8428 = !DILocation(line: 0, scope: !8426, inlinedAt: !8429)
!8429 = distinct !DILocation(line: 44, column: 2, scope: !8413)
!8430 = !DILocation(line: 95, column: 2, scope: !8426, inlinedAt: !8429)
!8431 = !{i64 2281498}
!8432 = !DILocation(line: 53, column: 9, scope: !8413)
!8433 = !DILocation(line: 53, column: 24, scope: !8413)
!8434 = !DILocation(line: 53, column: 2, scope: !8413)
!8435 = distinct !DISubprogram(name: "arch_new_thread", scope: !8436, file: !8436, line: 56, type: !8437, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3663, retainedNodes: !8546)
!8436 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8437 = !DISubroutineType(types: !8438)
!8438 = !{null, !8439, !8541, !157, !320, !102, !102, !102}
!8439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8440, size: 32)
!8440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !8441)
!8441 = !{!8442, !8500, !8512, !8513, !8514, !8515, !8521, !8536}
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8440, file: !195, line: 247, baseType: !8443, size: 384)
!8443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !8444)
!8444 = !{!8445, !8469, !8476, !8477, !8478, !8487, !8488, !8489}
!8445 = !DIDerivedType(tag: DW_TAG_member, scope: !8443, file: !195, line: 60, baseType: !8446, size: 64)
!8446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8443, file: !195, line: 60, size: 64, elements: !8447)
!8447 = !{!8448, !8463}
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8446, file: !195, line: 61, baseType: !8449, size: 64)
!8449 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !8450)
!8450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !8451)
!8451 = !{!8452, !8458}
!8452 = !DIDerivedType(tag: DW_TAG_member, scope: !8450, file: !133, line: 38, baseType: !8453, size: 32)
!8453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8450, file: !133, line: 38, size: 32, elements: !8454)
!8454 = !{!8455, !8457}
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8453, file: !133, line: 39, baseType: !8456, size: 32)
!8456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8450, size: 32)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8453, file: !133, line: 40, baseType: !8456, size: 32)
!8458 = !DIDerivedType(tag: DW_TAG_member, scope: !8450, file: !133, line: 42, baseType: !8459, size: 32, offset: 32)
!8459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8450, file: !133, line: 42, size: 32, elements: !8460)
!8460 = !{!8461, !8462}
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8459, file: !133, line: 43, baseType: !8456, size: 32)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8459, file: !133, line: 44, baseType: !8456, size: 32)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8446, file: !195, line: 62, baseType: !8464, size: 64)
!8464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !8465)
!8465 = !{!8466}
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8464, file: !207, line: 50, baseType: !8467, size: 64)
!8467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8468, size: 64, elements: !212)
!8468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8464, size: 32)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8443, file: !195, line: 68, baseType: !8470, size: 32, offset: 64)
!8470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8471, size: 32)
!8471 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !8472)
!8472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !8473)
!8473 = !{!8474}
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8472, file: !128, line: 232, baseType: !8475, size: 64)
!8475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !8450)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8443, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8443, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!8478 = !DIDerivedType(tag: DW_TAG_member, scope: !8443, file: !195, line: 90, baseType: !8479, size: 16, offset: 112)
!8479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8443, file: !195, line: 90, size: 16, elements: !8480)
!8480 = !{!8481, !8486}
!8481 = !DIDerivedType(tag: DW_TAG_member, scope: !8479, file: !195, line: 91, baseType: !8482, size: 16)
!8482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8479, file: !195, line: 91, size: 16, elements: !8483)
!8483 = !{!8484, !8485}
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8482, file: !195, line: 96, baseType: !225, size: 8)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8482, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8479, file: !195, line: 100, baseType: !177, size: 16)
!8487 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8443, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8443, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8443, file: !195, line: 131, baseType: !8490, size: 192, offset: 192)
!8490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !8491)
!8491 = !{!8492, !8493, !8499}
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8490, file: !128, line: 245, baseType: !8449, size: 64)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8490, file: !128, line: 246, baseType: !8494, size: 32, offset: 64)
!8494 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !8495)
!8495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8496, size: 32)
!8496 = !DISubroutineType(types: !8497)
!8497 = !{null, !8498}
!8498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8490, size: 32)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8490, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8440, file: !195, line: 250, baseType: !8501, size: 288, offset: 384)
!8501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8502)
!8502 = !{!8503, !8504, !8505, !8506, !8507, !8508, !8509, !8510, !8511}
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8501, file: !244, line: 26, baseType: !108, size: 32)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8501, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8501, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8501, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8501, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8501, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8501, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8501, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8501, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8440, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8440, file: !195, line: 256, baseType: !8471, size: 64, offset: 704)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8440, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8440, file: !195, line: 300, baseType: !8516, size: 96, offset: 800)
!8516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !8517)
!8517 = !{!8518, !8519, !8520}
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8516, file: !195, line: 153, baseType: !22, size: 32)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8516, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8516, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8440, file: !195, line: 325, baseType: !8522, size: 32, offset: 896)
!8522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8523, size: 32)
!8523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !8524)
!8524 = !{!8525, !8531, !8532}
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8523, file: !124, line: 5074, baseType: !8526, size: 96)
!8526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !8527)
!8527 = !{!8528, !8529, !8530}
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8526, file: !270, line: 57, baseType: !273, size: 32)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8526, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8526, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8523, file: !124, line: 5075, baseType: !8471, size: 64, offset: 96)
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8523, file: !124, line: 5076, baseType: !8533, size: 32, offset: 160)
!8533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !8534)
!8534 = !{!8535}
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8533, file: !149, line: 52, baseType: !22, size: 32)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8440, file: !195, line: 343, baseType: !8537, size: 64, offset: 928)
!8537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !8538)
!8538 = !{!8539, !8540}
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8537, file: !244, line: 63, baseType: !108, size: 32)
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8537, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!8541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8542, size: 32)
!8542 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !8543)
!8543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !8544)
!8544 = !{!8545}
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8543, file: !315, line: 48, baseType: !158, size: 8)
!8546 = !{!8547, !8548, !8549, !8550, !8551, !8552, !8553, !8554}
!8547 = !DILocalVariable(name: "thread", arg: 1, scope: !8435, file: !8436, line: 56, type: !8439)
!8548 = !DILocalVariable(name: "stack", arg: 2, scope: !8435, file: !8436, line: 56, type: !8541)
!8549 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8435, file: !8436, line: 57, type: !157)
!8550 = !DILocalVariable(name: "entry", arg: 4, scope: !8435, file: !8436, line: 57, type: !320)
!8551 = !DILocalVariable(name: "p1", arg: 5, scope: !8435, file: !8436, line: 58, type: !102)
!8552 = !DILocalVariable(name: "p2", arg: 6, scope: !8435, file: !8436, line: 58, type: !102)
!8553 = !DILocalVariable(name: "p3", arg: 7, scope: !8435, file: !8436, line: 58, type: !102)
!8554 = !DILocalVariable(name: "iframe", scope: !8435, file: !8436, line: 60, type: !3666)
!8555 = !DILocation(line: 0, scope: !8435)
!8556 = !DILocation(line: 85, column: 11, scope: !8435)
!8557 = !DILocation(line: 93, column: 10, scope: !8435)
!8558 = !DILocation(line: 98, column: 13, scope: !8435)
!8559 = !DILocation(line: 100, column: 15, scope: !8435)
!8560 = !DILocation(line: 100, column: 10, scope: !8435)
!8561 = !DILocation(line: 100, column: 13, scope: !8435)
!8562 = !DILocation(line: 101, column: 15, scope: !8435)
!8563 = !DILocation(line: 101, column: 10, scope: !8435)
!8564 = !DILocation(line: 101, column: 13, scope: !8435)
!8565 = !DILocation(line: 102, column: 15, scope: !8435)
!8566 = !DILocation(line: 102, column: 10, scope: !8435)
!8567 = !DILocation(line: 102, column: 13, scope: !8435)
!8568 = !DILocation(line: 103, column: 15, scope: !8435)
!8569 = !DILocation(line: 103, column: 10, scope: !8435)
!8570 = !DILocation(line: 103, column: 13, scope: !8435)
!8571 = !DILocation(line: 106, column: 10, scope: !8435)
!8572 = !DILocation(line: 106, column: 15, scope: !8435)
!8573 = !DILocation(line: 122, column: 29, scope: !8435)
!8574 = !DILocation(line: 122, column: 23, scope: !8435)
!8575 = !DILocation(line: 122, column: 27, scope: !8435)
!8576 = !DILocation(line: 123, column: 15, scope: !8435)
!8577 = !DILocation(line: 123, column: 23, scope: !8435)
!8578 = !DILocation(line: 143, column: 1, scope: !8435)
!8579 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8436, file: !8436, line: 385, type: !8580, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3663, retainedNodes: !8583)
!8580 = !DISubroutineType(types: !8581)
!8581 = !{!108, !8582, !8582}
!8582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!8583 = !{!8584, !8585, !8586, !8589}
!8584 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8579, file: !8436, line: 385, type: !8582)
!8585 = !DILocalVariable(name: "psp", arg: 2, scope: !8579, file: !8436, line: 385, type: !8582)
!8586 = !DILocalVariable(name: "thread", scope: !8579, file: !8436, line: 388, type: !8587)
!8587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8588, size: 32)
!8588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8440)
!8589 = !DILocalVariable(name: "guard_len", scope: !8579, file: !8436, line: 405, type: !108)
!8590 = !DILocation(line: 0, scope: !8579)
!8591 = !DILocation(line: 388, column: 34, scope: !8579)
!8592 = !DILocation(line: 390, column: 13, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8579, file: !8436, line: 390, column: 6)
!8594 = !DILocation(line: 390, column: 6, scope: !8579)
!8595 = !DILocation(line: 438, column: 6, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8579, file: !8436, line: 438, column: 6)
!8597 = !DILocation(line: 438, column: 6, scope: !8579)
!8598 = !DILocation(line: 442, column: 3, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8596, file: !8436, line: 440, column: 22)
!8600 = !DILocation(line: 455, column: 1, scope: !8579)
!8601 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8436, file: !8436, line: 530, type: !8602, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3663, retainedNodes: !8604)
!8602 = !DISubroutineType(types: !8603)
!8603 = !{null, !8439, !157, !320}
!8604 = !{!8605, !8606, !8607}
!8605 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8601, file: !8436, line: 530, type: !8439)
!8606 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8601, file: !8436, line: 530, type: !157)
!8607 = !DILocalVariable(name: "_main", arg: 3, scope: !8601, file: !8436, line: 531, type: !320)
!8608 = !DILocation(line: 0, scope: !8601)
!8609 = !DILocation(line: 535, column: 11, scope: !8601)
!8610 = !DILocation(line: 560, column: 2, scope: !8601)
!8611 = !DILocation(line: 576, column: 2, scope: !8601)
!8612 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8613 = !DILocation(line: 603, column: 2, scope: !8601)
!8614 = distinct !DISubprogram(name: "z_arm_fault", scope: !8615, file: !8615, line: 1036, type: !8616, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8631)
!8615 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8616 = !DISubroutineType(types: !8617)
!8617 = !{null, !108, !108, !108, !8618}
!8618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8619, size: 32)
!8619 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !244, line: 37, baseType: !8620)
!8620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8621)
!8621 = !{!8622, !8623, !8624, !8625, !8626, !8627, !8628, !8629, !8630}
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8620, file: !244, line: 26, baseType: !108, size: 32)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8620, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8620, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8620, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8620, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8620, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8620, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8620, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8620, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8631 = !{!8632, !8633, !8634, !8635, !8636, !8637, !8638, !8639, !8640, !8641}
!8632 = !DILocalVariable(name: "msp", arg: 1, scope: !8614, file: !8615, line: 1036, type: !108)
!8633 = !DILocalVariable(name: "psp", arg: 2, scope: !8614, file: !8615, line: 1036, type: !108)
!8634 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8614, file: !8615, line: 1036, type: !108)
!8635 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8614, file: !8615, line: 1037, type: !8618)
!8636 = !DILocalVariable(name: "reason", scope: !8614, file: !8615, line: 1039, type: !108)
!8637 = !DILocalVariable(name: "fault", scope: !8614, file: !8615, line: 1040, type: !103)
!8638 = !DILocalVariable(name: "recoverable", scope: !8614, file: !8615, line: 1041, type: !119)
!8639 = !DILocalVariable(name: "nested_exc", scope: !8614, file: !8615, line: 1041, type: !119)
!8640 = !DILocalVariable(name: "esf", scope: !8614, file: !8615, line: 1042, type: !3734)
!8641 = !DILocalVariable(name: "esf_copy", scope: !8614, file: !8615, line: 1047, type: !3735)
!8642 = !DILocation(line: 0, scope: !8614)
!8643 = !DILocation(line: 1040, column: 19, scope: !8614)
!8644 = !DILocation(line: 1041, column: 2, scope: !8614)
!8645 = !DILocation(line: 1047, column: 2, scope: !8614)
!8646 = !DILocation(line: 1047, column: 15, scope: !8614)
!8647 = !DILocalVariable(name: "key", arg: 1, scope: !8648, file: !7985, line: 84, type: !32)
!8648 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8649)
!8649 = !{!8647}
!8650 = !DILocation(line: 0, scope: !8648, inlinedAt: !8651)
!8651 = distinct !DILocation(line: 1050, column: 2, scope: !8614)
!8652 = !DILocation(line: 95, column: 2, scope: !8648, inlinedAt: !8651)
!8653 = !{i64 2314742}
!8654 = !DILocation(line: 1055, column: 9, scope: !8614)
!8655 = !DILocation(line: 1056, column: 2, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8615, line: 1056, column: 2)
!8657 = distinct !DILexicalBlock(scope: !8614, file: !8615, line: 1056, column: 2)
!8658 = !DILocation(line: 1056, column: 2, scope: !8657)
!8659 = !DILocation(line: 1056, column: 2, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8656, file: !8615, line: 1056, column: 2)
!8661 = !DILocation(line: 1040, column: 24, scope: !8614)
!8662 = !DILocation(line: 1063, column: 11, scope: !8614)
!8663 = !DILocation(line: 1064, column: 6, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8614, file: !8615, line: 1064, column: 6)
!8665 = !{i8 0, i8 2}
!8666 = !DILocation(line: 1064, column: 6, scope: !8614)
!8667 = !DILocation(line: 1070, column: 20, scope: !8614)
!8668 = !DILocation(line: 1070, column: 2, scope: !8614)
!8669 = !DILocation(line: 1089, column: 6, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8614, file: !8615, line: 1089, column: 6)
!8671 = !DILocation(line: 0, scope: !8670)
!8672 = !DILocation(line: 1089, column: 6, scope: !8614)
!8673 = !DILocation(line: 1090, column: 28, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8675, file: !8615, line: 1090, column: 7)
!8675 = distinct !DILexicalBlock(scope: !8670, file: !8615, line: 1089, column: 18)
!8676 = !DILocation(line: 1090, column: 44, scope: !8674)
!8677 = !DILocation(line: 1090, column: 7, scope: !8675)
!8678 = !DILocation(line: 1091, column: 24, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8674, file: !8615, line: 1090, column: 50)
!8680 = !DILocation(line: 1092, column: 3, scope: !8679)
!8681 = !DILocation(line: 1094, column: 23, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8670, file: !8615, line: 1093, column: 9)
!8683 = !DILocation(line: 1097, column: 2, scope: !8614)
!8684 = !DILocation(line: 1098, column: 1, scope: !8614)
!8685 = distinct !DISubprogram(name: "get_esf", scope: !8615, file: !8615, line: 894, type: !8686, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8689)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{!3734, !108, !108, !108, !8688}
!8688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!8689 = !{!8690, !8691, !8692, !8693, !8694, !8695}
!8690 = !DILocalVariable(name: "msp", arg: 1, scope: !8685, file: !8615, line: 894, type: !108)
!8691 = !DILocalVariable(name: "psp", arg: 2, scope: !8685, file: !8615, line: 894, type: !108)
!8692 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8685, file: !8615, line: 894, type: !108)
!8693 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8685, file: !8615, line: 895, type: !8688)
!8694 = !DILocalVariable(name: "alternative_state_exc", scope: !8685, file: !8615, line: 897, type: !119)
!8695 = !DILocalVariable(name: "ptr_esf", scope: !8685, file: !8615, line: 898, type: !3734)
!8696 = !DILocation(line: 0, scope: !8685)
!8697 = !DILocation(line: 900, column: 14, scope: !8685)
!8698 = !DILocation(line: 902, column: 49, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8685, file: !8615, line: 902, column: 6)
!8700 = !DILocation(line: 902, column: 6, scope: !8685)
!8701 = !DILocation(line: 983, column: 44, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8685, file: !8615, line: 983, column: 6)
!8703 = !DILocation(line: 985, column: 3, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !8615, line: 985, column: 3)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !8615, line: 985, column: 3)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !8615, line: 985, column: 3)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !8615, line: 985, column: 3)
!8708 = distinct !DILexicalBlock(scope: !8702, file: !8615, line: 984, column: 47)
!8709 = !DILocation(line: 986, column: 3, scope: !8708)
!8710 = !DILocation(line: 983, column: 18, scope: !8702)
!8711 = !DILocation(line: 991, column: 7, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !8615, line: 990, column: 30)
!8713 = distinct !DILexicalBlock(scope: !8685, file: !8615, line: 990, column: 6)
!8714 = !DILocation(line: 998, column: 16, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !8615, line: 995, column: 10)
!8716 = distinct !DILexicalBlock(scope: !8712, file: !8615, line: 991, column: 7)
!8717 = !DILocation(line: 1002, column: 2, scope: !8685)
!8718 = !DILocation(line: 1003, column: 1, scope: !8685)
!8719 = distinct !DISubprogram(name: "fault_handle", scope: !8615, file: !8615, line: 786, type: !8720, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8722)
!8720 = !DISubroutineType(types: !8721)
!8721 = !{!108, !3734, !103, !8688}
!8722 = !{!8723, !8724, !8725, !8726}
!8723 = !DILocalVariable(name: "esf", arg: 1, scope: !8719, file: !8615, line: 786, type: !3734)
!8724 = !DILocalVariable(name: "fault", arg: 2, scope: !8719, file: !8615, line: 786, type: !103)
!8725 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8719, file: !8615, line: 786, type: !8688)
!8726 = !DILocalVariable(name: "reason", scope: !8719, file: !8615, line: 788, type: !108)
!8727 = !DILocation(line: 0, scope: !8719)
!8728 = !DILocation(line: 790, column: 15, scope: !8719)
!8729 = !DILocation(line: 792, column: 2, scope: !8719)
!8730 = !DILocation(line: 794, column: 12, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8719, file: !8615, line: 792, column: 17)
!8732 = !DILocation(line: 795, column: 3, scope: !8731)
!8733 = !DILocation(line: 800, column: 12, scope: !8731)
!8734 = !DILocation(line: 801, column: 3, scope: !8731)
!8735 = !DILocation(line: 803, column: 12, scope: !8731)
!8736 = !DILocation(line: 804, column: 3, scope: !8731)
!8737 = !DILocation(line: 806, column: 12, scope: !8731)
!8738 = !DILocation(line: 807, column: 3, scope: !8731)
!8739 = !DILocation(line: 814, column: 3, scope: !8731)
!8740 = !DILocation(line: 815, column: 3, scope: !8731)
!8741 = !DILocation(line: 820, column: 3, scope: !8731)
!8742 = !DILocation(line: 821, column: 3, scope: !8731)
!8743 = !DILocation(line: 829, column: 2, scope: !8719)
!8744 = distinct !DISubprogram(name: "hard_fault", scope: !8615, file: !8615, line: 709, type: !8745, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8747)
!8745 = !DISubroutineType(types: !8746)
!8746 = !{!108, !3734, !8688}
!8747 = !{!8748, !8749, !8750}
!8748 = !DILocalVariable(name: "esf", arg: 1, scope: !8744, file: !8615, line: 709, type: !3734)
!8749 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8744, file: !8615, line: 709, type: !8688)
!8750 = !DILocalVariable(name: "reason", scope: !8744, file: !8615, line: 711, type: !108)
!8751 = !DILocation(line: 0, scope: !8744)
!8752 = !DILocation(line: 713, column: 2, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8754, file: !8615, line: 713, column: 2)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !8615, line: 713, column: 2)
!8755 = distinct !DILexicalBlock(scope: !8756, file: !8615, line: 713, column: 2)
!8756 = distinct !DILexicalBlock(scope: !8744, file: !8615, line: 713, column: 2)
!8757 = !DILocation(line: 732, column: 15, scope: !8744)
!8758 = !DILocation(line: 734, column: 12, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8744, file: !8615, line: 734, column: 6)
!8760 = !DILocation(line: 734, column: 17, scope: !8759)
!8761 = !DILocation(line: 734, column: 41, scope: !8759)
!8762 = !DILocation(line: 734, column: 6, scope: !8744)
!8763 = !DILocation(line: 735, column: 3, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !8615, line: 735, column: 3)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !8615, line: 735, column: 3)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !8615, line: 735, column: 3)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !8615, line: 735, column: 3)
!8768 = distinct !DILexicalBlock(scope: !8759, file: !8615, line: 734, column: 47)
!8769 = !DILocation(line: 736, column: 2, scope: !8768)
!8770 = !DILocation(line: 736, column: 19, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8759, file: !8615, line: 736, column: 13)
!8772 = !DILocation(line: 736, column: 49, scope: !8771)
!8773 = !DILocation(line: 736, column: 13, scope: !8759)
!8774 = !DILocation(line: 737, column: 3, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !8615, line: 737, column: 3)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !8615, line: 737, column: 3)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !8615, line: 737, column: 3)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !8615, line: 737, column: 3)
!8779 = distinct !DILexicalBlock(scope: !8771, file: !8615, line: 736, column: 55)
!8780 = !DILocation(line: 738, column: 2, scope: !8779)
!8781 = !DILocation(line: 738, column: 19, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8771, file: !8615, line: 738, column: 13)
!8783 = !DILocation(line: 738, column: 24, scope: !8782)
!8784 = !DILocation(line: 738, column: 47, scope: !8782)
!8785 = !DILocation(line: 738, column: 13, scope: !8771)
!8786 = !DILocation(line: 739, column: 3, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !8615, line: 739, column: 3)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !8615, line: 739, column: 3)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !8615, line: 739, column: 3)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !8615, line: 739, column: 3)
!8791 = distinct !DILexicalBlock(scope: !8782, file: !8615, line: 738, column: 53)
!8792 = !DILocation(line: 740, column: 7, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8791, file: !8615, line: 740, column: 7)
!8794 = !DILocation(line: 740, column: 7, scope: !8791)
!8795 = !DILocation(line: 741, column: 4, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !8615, line: 741, column: 4)
!8797 = distinct !DILexicalBlock(scope: !8798, file: !8615, line: 741, column: 4)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !8615, line: 741, column: 4)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !8615, line: 741, column: 4)
!8800 = distinct !DILexicalBlock(scope: !8793, file: !8615, line: 740, column: 38)
!8801 = !DILocation(line: 742, column: 24, scope: !8800)
!8802 = !DILocation(line: 743, column: 3, scope: !8800)
!8803 = !DILocation(line: 743, column: 20, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8793, file: !8615, line: 743, column: 14)
!8805 = !DILocation(line: 743, column: 25, scope: !8804)
!8806 = !DILocation(line: 743, column: 52, scope: !8804)
!8807 = !DILocation(line: 743, column: 14, scope: !8793)
!8808 = !DILocation(line: 744, column: 13, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8804, file: !8615, line: 743, column: 58)
!8810 = !DILocation(line: 745, column: 3, scope: !8809)
!8811 = !DILocation(line: 745, column: 20, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8804, file: !8615, line: 745, column: 14)
!8813 = !DILocation(line: 745, column: 25, scope: !8812)
!8814 = !DILocation(line: 745, column: 52, scope: !8812)
!8815 = !DILocation(line: 745, column: 14, scope: !8804)
!8816 = !DILocation(line: 746, column: 13, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8812, file: !8615, line: 745, column: 58)
!8818 = !DILocation(line: 747, column: 3, scope: !8817)
!8819 = !DILocation(line: 747, column: 20, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8812, file: !8615, line: 747, column: 14)
!8821 = !DILocation(line: 747, column: 52, scope: !8820)
!8822 = !DILocation(line: 747, column: 14, scope: !8812)
!8823 = !DILocation(line: 748, column: 13, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8820, file: !8615, line: 747, column: 58)
!8825 = !DILocation(line: 754, column: 4, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !8615, line: 754, column: 4)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !8615, line: 754, column: 4)
!8828 = distinct !DILexicalBlock(scope: !8829, file: !8615, line: 754, column: 4)
!8829 = distinct !DILexicalBlock(scope: !8820, file: !8615, line: 753, column: 10)
!8830 = !DILocation(line: 758, column: 3, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !8615, line: 758, column: 3)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !8615, line: 758, column: 3)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !8615, line: 758, column: 3)
!8834 = distinct !DILexicalBlock(scope: !8782, file: !8615, line: 757, column: 9)
!8835 = !DILocation(line: 766, column: 2, scope: !8744)
!8836 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8615, file: !8615, line: 229, type: !8720, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8837)
!8837 = !{!8838, !8839, !8840, !8841, !8842, !8843, !8846}
!8838 = !DILocalVariable(name: "esf", arg: 1, scope: !8836, file: !8615, line: 229, type: !3734)
!8839 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8836, file: !8615, line: 229, type: !103)
!8840 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8836, file: !8615, line: 230, type: !8688)
!8841 = !DILocalVariable(name: "reason", scope: !8836, file: !8615, line: 232, type: !108)
!8842 = !DILocalVariable(name: "mmfar", scope: !8836, file: !8615, line: 233, type: !108)
!8843 = !DILocalVariable(name: "temp", scope: !8844, file: !8615, line: 254, type: !108)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !8615, line: 244, column: 48)
!8845 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 244, column: 6)
!8846 = !DILocalVariable(name: "min_stack_ptr", scope: !8847, file: !8615, line: 309, type: !108)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !8615, line: 308, column: 43)
!8848 = distinct !DILexicalBlock(scope: !8849, file: !8615, line: 308, column: 7)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !8615, line: 289, column: 40)
!8850 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 288, column: 6)
!8851 = !DILocation(line: 0, scope: !8836)
!8852 = !DILocation(line: 235, column: 2, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !8615, line: 235, column: 2)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !8615, line: 235, column: 2)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !8615, line: 235, column: 2)
!8856 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 235, column: 2)
!8857 = !DILocation(line: 237, column: 12, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 237, column: 6)
!8859 = !DILocation(line: 237, column: 17, scope: !8858)
!8860 = !DILocation(line: 237, column: 41, scope: !8858)
!8861 = !DILocation(line: 237, column: 6, scope: !8836)
!8862 = !DILocation(line: 238, column: 3, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !8615, line: 238, column: 3)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !8615, line: 238, column: 3)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !8615, line: 238, column: 3)
!8866 = distinct !DILexicalBlock(scope: !8867, file: !8615, line: 238, column: 3)
!8867 = distinct !DILexicalBlock(scope: !8858, file: !8615, line: 237, column: 47)
!8868 = !DILocation(line: 240, column: 2, scope: !8867)
!8869 = !DILocation(line: 241, column: 12, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 241, column: 6)
!8871 = !DILocation(line: 241, column: 17, scope: !8870)
!8872 = !DILocation(line: 241, column: 43, scope: !8870)
!8873 = !DILocation(line: 241, column: 6, scope: !8836)
!8874 = !DILocation(line: 242, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8876, file: !8615, line: 242, column: 3)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !8615, line: 242, column: 3)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !8615, line: 242, column: 3)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !8615, line: 242, column: 3)
!8879 = distinct !DILexicalBlock(scope: !8870, file: !8615, line: 241, column: 49)
!8880 = !DILocation(line: 243, column: 2, scope: !8879)
!8881 = !DILocation(line: 244, column: 12, scope: !8845)
!8882 = !DILocation(line: 244, column: 17, scope: !8845)
!8883 = !DILocation(line: 244, column: 42, scope: !8845)
!8884 = !DILocation(line: 244, column: 6, scope: !8836)
!8885 = !DILocation(line: 245, column: 3, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8887, file: !8615, line: 245, column: 3)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !8615, line: 245, column: 3)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !8615, line: 245, column: 3)
!8889 = distinct !DILexicalBlock(scope: !8844, file: !8615, line: 245, column: 3)
!8890 = !DILocation(line: 254, column: 24, scope: !8844)
!8891 = !DILocation(line: 0, scope: !8844)
!8892 = !DILocation(line: 256, column: 13, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8844, file: !8615, line: 256, column: 7)
!8894 = !DILocation(line: 256, column: 18, scope: !8893)
!8895 = !DILocation(line: 256, column: 44, scope: !8893)
!8896 = !DILocation(line: 256, column: 7, scope: !8844)
!8897 = !DILocation(line: 258, column: 4, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !8615, line: 258, column: 4)
!8899 = distinct !DILexicalBlock(scope: !8900, file: !8615, line: 258, column: 4)
!8900 = distinct !DILexicalBlock(scope: !8901, file: !8615, line: 258, column: 4)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !8615, line: 258, column: 4)
!8902 = distinct !DILexicalBlock(scope: !8893, file: !8615, line: 256, column: 50)
!8903 = !DILocation(line: 259, column: 24, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8902, file: !8615, line: 259, column: 8)
!8905 = !DILocation(line: 259, column: 8, scope: !8902)
!8906 = !DILocation(line: 261, column: 15, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !8615, line: 259, column: 30)
!8908 = !DILocation(line: 262, column: 4, scope: !8907)
!8909 = !DILocation(line: 265, column: 12, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 265, column: 6)
!8911 = !DILocation(line: 265, column: 17, scope: !8910)
!8912 = !DILocation(line: 265, column: 42, scope: !8910)
!8913 = !DILocation(line: 265, column: 6, scope: !8836)
!8914 = !DILocation(line: 266, column: 3, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !8615, line: 266, column: 3)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !8615, line: 266, column: 3)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !8615, line: 266, column: 3)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !8615, line: 266, column: 3)
!8919 = distinct !DILexicalBlock(scope: !8910, file: !8615, line: 265, column: 48)
!8920 = !DILocation(line: 267, column: 2, scope: !8919)
!8921 = !DILocation(line: 269, column: 12, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 269, column: 6)
!8923 = !DILocation(line: 269, column: 17, scope: !8922)
!8924 = !DILocation(line: 269, column: 41, scope: !8922)
!8925 = !DILocation(line: 269, column: 6, scope: !8836)
!8926 = !DILocation(line: 270, column: 3, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8928, file: !8615, line: 270, column: 3)
!8928 = distinct !DILexicalBlock(scope: !8929, file: !8615, line: 270, column: 3)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !8615, line: 270, column: 3)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !8615, line: 270, column: 3)
!8931 = distinct !DILexicalBlock(scope: !8922, file: !8615, line: 269, column: 47)
!8932 = !DILocation(line: 272, column: 2, scope: !8931)
!8933 = !DILocation(line: 288, column: 12, scope: !8850)
!8934 = !DILocation(line: 288, column: 17, scope: !8850)
!8935 = !DILocation(line: 288, column: 41, scope: !8850)
!8936 = !DILocation(line: 289, column: 9, scope: !8850)
!8937 = !DILocation(line: 289, column: 14, scope: !8850)
!8938 = !DILocation(line: 288, column: 6, scope: !8836)
!8939 = !DILocation(line: 308, column: 12, scope: !8848)
!8940 = !DILocation(line: 308, column: 17, scope: !8848)
!8941 = !DILocation(line: 308, column: 7, scope: !8849)
!8942 = !DILocation(line: 310, column: 6, scope: !8847)
!8943 = !DILocation(line: 309, column: 29, scope: !8847)
!8944 = !DILocation(line: 0, scope: !8847)
!8945 = !DILocation(line: 312, column: 8, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8847, file: !8615, line: 312, column: 8)
!8947 = !DILocation(line: 312, column: 8, scope: !8847)
!8948 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8949, file: !8306, line: 1099, type: !108)
!8949 = distinct !DISubprogram(name: "__set_PSP", scope: !8306, file: !8306, line: 1099, type: !8403, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8950)
!8950 = !{!8948}
!8951 = !DILocation(line: 0, scope: !8949, inlinedAt: !8952)
!8952 = distinct !DILocation(line: 338, column: 5, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8946, file: !8615, line: 312, column: 23)
!8954 = !DILocation(line: 1101, column: 3, scope: !8949, inlinedAt: !8952)
!8955 = !{i64 3761966}
!8956 = !DILocation(line: 341, column: 4, scope: !8953)
!8957 = !DILocation(line: 342, column: 5, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !8615, line: 342, column: 5)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !8615, line: 342, column: 5)
!8960 = distinct !DILexicalBlock(scope: !8946, file: !8615, line: 341, column: 11)
!8961 = !DILocation(line: 342, column: 5, scope: !8959)
!8962 = !DILocation(line: 342, column: 5, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8958, file: !8615, line: 342, column: 5)
!8964 = !DILocation(line: 360, column: 12, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8836, file: !8615, line: 360, column: 6)
!8966 = !DILocation(line: 360, column: 17, scope: !8965)
!8967 = !DILocation(line: 360, column: 41, scope: !8965)
!8968 = !DILocation(line: 360, column: 6, scope: !8836)
!8969 = !DILocation(line: 361, column: 14, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8965, file: !8615, line: 360, column: 47)
!8971 = !DILocation(line: 362, column: 2, scope: !8970)
!8972 = !DILocation(line: 366, column: 12, scope: !8836)
!8973 = !DILocation(line: 369, column: 15, scope: !8836)
!8974 = !DILocation(line: 371, column: 2, scope: !8836)
!8975 = distinct !DISubprogram(name: "bus_fault", scope: !8615, file: !8615, line: 383, type: !8976, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !8978)
!8976 = !DISubroutineType(types: !8977)
!8977 = !{!103, !3734, !103, !8688}
!8978 = !{!8979, !8980, !8981, !8982, !8983}
!8979 = !DILocalVariable(name: "esf", arg: 1, scope: !8975, file: !8615, line: 383, type: !3734)
!8980 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8975, file: !8615, line: 383, type: !103)
!8981 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8975, file: !8615, line: 383, type: !8688)
!8982 = !DILocalVariable(name: "reason", scope: !8975, file: !8615, line: 385, type: !108)
!8983 = !DILocalVariable(name: "bfar", scope: !8984, file: !8615, line: 405, type: !108)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !8615, line: 395, column: 42)
!8985 = distinct !DILexicalBlock(scope: !8975, file: !8615, line: 395, column: 6)
!8986 = !DILocation(line: 0, scope: !8975)
!8987 = !DILocation(line: 387, column: 2, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8989, file: !8615, line: 387, column: 2)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !8615, line: 387, column: 2)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !8615, line: 387, column: 2)
!8991 = distinct !DILexicalBlock(scope: !8975, file: !8615, line: 387, column: 2)
!8992 = !DILocation(line: 389, column: 11, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8975, file: !8615, line: 389, column: 6)
!8994 = !DILocation(line: 389, column: 16, scope: !8993)
!8995 = !DILocation(line: 389, column: 6, scope: !8975)
!8996 = !DILocation(line: 390, column: 3, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !8615, line: 390, column: 3)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !8615, line: 390, column: 3)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !8615, line: 390, column: 3)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !8615, line: 390, column: 3)
!9001 = distinct !DILexicalBlock(scope: !8993, file: !8615, line: 389, column: 39)
!9002 = !DILocation(line: 391, column: 2, scope: !9001)
!9003 = !DILocation(line: 392, column: 11, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8975, file: !8615, line: 392, column: 6)
!9005 = !DILocation(line: 392, column: 16, scope: !9004)
!9006 = !DILocation(line: 392, column: 6, scope: !8975)
!9007 = !DILocation(line: 393, column: 3, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !8615, line: 393, column: 3)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !8615, line: 393, column: 3)
!9010 = distinct !DILexicalBlock(scope: !9011, file: !8615, line: 393, column: 3)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !8615, line: 393, column: 3)
!9012 = distinct !DILexicalBlock(scope: !9004, file: !8615, line: 392, column: 41)
!9013 = !DILocation(line: 394, column: 2, scope: !9012)
!9014 = !DILocation(line: 395, column: 11, scope: !8985)
!9015 = !DILocation(line: 395, column: 16, scope: !8985)
!9016 = !DILocation(line: 395, column: 6, scope: !8975)
!9017 = !DILocation(line: 396, column: 3, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9019, file: !8615, line: 396, column: 3)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !8615, line: 396, column: 3)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !8615, line: 396, column: 3)
!9021 = distinct !DILexicalBlock(scope: !8984, file: !8615, line: 396, column: 3)
!9022 = !DILocation(line: 405, column: 3, scope: !8984)
!9023 = !DILocation(line: 0, scope: !8984)
!9024 = !DILocation(line: 407, column: 13, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !8984, file: !8615, line: 407, column: 7)
!9026 = !DILocation(line: 407, column: 18, scope: !9025)
!9027 = !DILocation(line: 407, column: 44, scope: !9025)
!9028 = !DILocation(line: 407, column: 7, scope: !8984)
!9029 = !DILocation(line: 408, column: 4, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !8615, line: 408, column: 4)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !8615, line: 408, column: 4)
!9032 = distinct !DILexicalBlock(scope: !9033, file: !8615, line: 408, column: 4)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !8615, line: 408, column: 4)
!9034 = distinct !DILexicalBlock(scope: !9025, file: !8615, line: 407, column: 50)
!9035 = !DILocation(line: 409, column: 24, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9034, file: !8615, line: 409, column: 8)
!9037 = !DILocation(line: 409, column: 8, scope: !9034)
!9038 = !DILocation(line: 411, column: 15, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9036, file: !8615, line: 409, column: 30)
!9040 = !DILocation(line: 412, column: 4, scope: !9039)
!9041 = !DILocation(line: 415, column: 11, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !8975, file: !8615, line: 415, column: 6)
!9043 = !DILocation(line: 415, column: 16, scope: !9042)
!9044 = !DILocation(line: 415, column: 6, scope: !8975)
!9045 = !DILocation(line: 416, column: 3, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8615, line: 416, column: 3)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !8615, line: 416, column: 3)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !8615, line: 416, column: 3)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !8615, line: 416, column: 3)
!9050 = distinct !DILexicalBlock(scope: !9042, file: !8615, line: 415, column: 44)
!9051 = !DILocation(line: 417, column: 2, scope: !9050)
!9052 = !DILocation(line: 418, column: 12, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !8975, file: !8615, line: 418, column: 6)
!9054 = !DILocation(line: 418, column: 17, scope: !9053)
!9055 = !DILocation(line: 418, column: 41, scope: !9053)
!9056 = !DILocation(line: 418, column: 6, scope: !8975)
!9057 = !DILocation(line: 423, column: 18, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9053, file: !8615, line: 423, column: 13)
!9059 = !DILocation(line: 423, column: 23, scope: !9058)
!9060 = !DILocation(line: 423, column: 13, scope: !9053)
!9061 = !DILocation(line: 0, scope: !9053)
!9062 = !DILocation(line: 524, column: 12, scope: !8975)
!9063 = !DILocation(line: 526, column: 15, scope: !8975)
!9064 = !DILocation(line: 528, column: 2, scope: !8975)
!9065 = distinct !DISubprogram(name: "usage_fault", scope: !8615, file: !8615, line: 539, type: !9066, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !9070)
!9066 = !DISubroutineType(types: !9067)
!9067 = !{!108, !9068}
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3735)
!9070 = !{!9071, !9072}
!9071 = !DILocalVariable(name: "esf", arg: 1, scope: !9065, file: !8615, line: 539, type: !9068)
!9072 = !DILocalVariable(name: "reason", scope: !9065, file: !8615, line: 541, type: !108)
!9073 = !DILocation(line: 0, scope: !9065)
!9074 = !DILocation(line: 543, column: 2, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9076, file: !8615, line: 543, column: 2)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !8615, line: 543, column: 2)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !8615, line: 543, column: 2)
!9078 = distinct !DILexicalBlock(scope: !9065, file: !8615, line: 543, column: 2)
!9079 = !DILocation(line: 546, column: 12, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9065, file: !8615, line: 546, column: 6)
!9081 = !DILocation(line: 546, column: 17, scope: !9080)
!9082 = !DILocation(line: 546, column: 43, scope: !9080)
!9083 = !DILocation(line: 546, column: 6, scope: !9065)
!9084 = !DILocation(line: 547, column: 3, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !8615, line: 547, column: 3)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !8615, line: 547, column: 3)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !8615, line: 547, column: 3)
!9088 = distinct !DILexicalBlock(scope: !9089, file: !8615, line: 547, column: 3)
!9089 = distinct !DILexicalBlock(scope: !9080, file: !8615, line: 546, column: 49)
!9090 = !DILocation(line: 548, column: 2, scope: !9089)
!9091 = !DILocation(line: 549, column: 12, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9065, file: !8615, line: 549, column: 6)
!9093 = !DILocation(line: 549, column: 17, scope: !9092)
!9094 = !DILocation(line: 549, column: 43, scope: !9092)
!9095 = !DILocation(line: 549, column: 6, scope: !9065)
!9096 = !DILocation(line: 550, column: 3, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !8615, line: 550, column: 3)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !8615, line: 550, column: 3)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !8615, line: 550, column: 3)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !8615, line: 550, column: 3)
!9101 = distinct !DILexicalBlock(scope: !9092, file: !8615, line: 549, column: 49)
!9102 = !DILocation(line: 551, column: 2, scope: !9101)
!9103 = !DILocation(line: 567, column: 12, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9065, file: !8615, line: 567, column: 6)
!9105 = !DILocation(line: 567, column: 17, scope: !9104)
!9106 = !DILocation(line: 567, column: 38, scope: !9104)
!9107 = !DILocation(line: 567, column: 6, scope: !9065)
!9108 = !DILocation(line: 568, column: 3, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !8615, line: 568, column: 3)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !8615, line: 568, column: 3)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !8615, line: 568, column: 3)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !8615, line: 568, column: 3)
!9113 = distinct !DILexicalBlock(scope: !9104, file: !8615, line: 567, column: 44)
!9114 = !DILocation(line: 569, column: 2, scope: !9113)
!9115 = !DILocation(line: 570, column: 12, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9065, file: !8615, line: 570, column: 6)
!9117 = !DILocation(line: 570, column: 17, scope: !9116)
!9118 = !DILocation(line: 570, column: 39, scope: !9116)
!9119 = !DILocation(line: 570, column: 6, scope: !9065)
!9120 = !DILocation(line: 571, column: 3, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !8615, line: 571, column: 3)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !8615, line: 571, column: 3)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !8615, line: 571, column: 3)
!9124 = distinct !DILexicalBlock(scope: !9125, file: !8615, line: 571, column: 3)
!9125 = distinct !DILexicalBlock(scope: !9116, file: !8615, line: 570, column: 45)
!9126 = !DILocation(line: 572, column: 2, scope: !9125)
!9127 = !DILocation(line: 573, column: 12, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9065, file: !8615, line: 573, column: 6)
!9129 = !DILocation(line: 573, column: 17, scope: !9128)
!9130 = !DILocation(line: 573, column: 42, scope: !9128)
!9131 = !DILocation(line: 573, column: 6, scope: !9065)
!9132 = !DILocation(line: 574, column: 3, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !8615, line: 574, column: 3)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !8615, line: 574, column: 3)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !8615, line: 574, column: 3)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !8615, line: 574, column: 3)
!9137 = distinct !DILexicalBlock(scope: !9128, file: !8615, line: 573, column: 48)
!9138 = !DILocation(line: 575, column: 2, scope: !9137)
!9139 = !DILocation(line: 576, column: 12, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9065, file: !8615, line: 576, column: 6)
!9141 = !DILocation(line: 576, column: 17, scope: !9140)
!9142 = !DILocation(line: 576, column: 44, scope: !9140)
!9143 = !DILocation(line: 576, column: 6, scope: !9065)
!9144 = !DILocation(line: 577, column: 3, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !8615, line: 577, column: 3)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !8615, line: 577, column: 3)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !8615, line: 577, column: 3)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !8615, line: 577, column: 3)
!9149 = distinct !DILexicalBlock(scope: !9140, file: !8615, line: 576, column: 50)
!9150 = !DILocation(line: 578, column: 2, scope: !9149)
!9151 = !DILocation(line: 581, column: 12, scope: !9065)
!9152 = !DILocation(line: 583, column: 2, scope: !9065)
!9153 = distinct !DISubprogram(name: "debug_monitor", scope: !8615, file: !8615, line: 632, type: !9154, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !9156)
!9154 = !DISubroutineType(types: !9155)
!9155 = !{null, !3734, !8688}
!9156 = !{!9157, !9158}
!9157 = !DILocalVariable(name: "esf", arg: 1, scope: !9153, file: !8615, line: 632, type: !3734)
!9158 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9153, file: !8615, line: 632, type: !8688)
!9159 = !DILocation(line: 0, scope: !9153)
!9160 = !DILocation(line: 634, column: 15, scope: !9153)
!9161 = !DILocation(line: 636, column: 2, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !8615, line: 636, column: 2)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !8615, line: 636, column: 2)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !8615, line: 636, column: 2)
!9165 = distinct !DILexicalBlock(scope: !9153, file: !8615, line: 636, column: 2)
!9166 = !DILocation(line: 652, column: 1, scope: !9153)
!9167 = distinct !DISubprogram(name: "reserved_exception", scope: !8615, file: !8615, line: 776, type: !9168, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !9170)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{null, !9068, !103}
!9170 = !{!9171, !9172}
!9171 = !DILocalVariable(name: "esf", arg: 1, scope: !9167, file: !8615, line: 776, type: !9068)
!9172 = !DILocalVariable(name: "fault", arg: 2, scope: !9167, file: !8615, line: 776, type: !103)
!9173 = !DILocation(line: 0, scope: !9167)
!9174 = !DILocation(line: 780, column: 2, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !8615, line: 780, column: 2)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !8615, line: 780, column: 2)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !8615, line: 780, column: 2)
!9178 = distinct !DILexicalBlock(scope: !9167, file: !8615, line: 780, column: 2)
!9179 = !DILocation(line: 783, column: 1, scope: !9167)
!9180 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8615, file: !8615, line: 658, type: !9181, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !9183)
!9181 = !DISubroutineType(types: !9182)
!9182 = !{!119, !3734}
!9183 = !{!9184, !9185, !9186}
!9184 = !DILocalVariable(name: "esf", arg: 1, scope: !9180, file: !8615, line: 658, type: !3734)
!9185 = !DILocalVariable(name: "ret_addr", scope: !9180, file: !8615, line: 660, type: !3506)
!9186 = !DILocalVariable(name: "fault_insn", scope: !9180, file: !8615, line: 686, type: !177)
!9187 = !DILocation(line: 0, scope: !9180)
!9188 = !DILocation(line: 660, column: 46, scope: !9180)
!9189 = !DILocation(line: 660, column: 23, scope: !9180)
!9190 = !DILocation(line: 682, column: 11, scope: !9180)
!9191 = !DILocation(line: 271, column: 3, scope: !9192, inlinedAt: !9193)
!9192 = distinct !DISubprogram(name: "__DSB", scope: !8306, file: !8306, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !2953)
!9193 = distinct !DILocation(line: 683, column: 2, scope: !9180)
!9194 = !{i64 3738101}
!9195 = !DILocation(line: 260, column: 3, scope: !9196, inlinedAt: !9197)
!9196 = distinct !DISubprogram(name: "__ISB", scope: !8306, file: !8306, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !2953)
!9197 = distinct !DILocation(line: 684, column: 2, scope: !9180)
!9198 = !{i64 3737818}
!9199 = !DILocation(line: 686, column: 35, scope: !9180)
!9200 = !DILocation(line: 686, column: 24, scope: !9180)
!9201 = !DILocation(line: 688, column: 11, scope: !9180)
!9202 = !DILocation(line: 271, column: 3, scope: !9192, inlinedAt: !9203)
!9203 = distinct !DILocation(line: 689, column: 2, scope: !9180)
!9204 = !DILocation(line: 260, column: 3, scope: !9196, inlinedAt: !9205)
!9205 = distinct !DILocation(line: 690, column: 2, scope: !9180)
!9206 = !DILocation(line: 693, column: 45, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9180, file: !8615, line: 693, column: 6)
!9208 = !DILocation(line: 699, column: 1, scope: !9180)
!9209 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8615, file: !8615, line: 1107, type: !333, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3706, retainedNodes: !2953)
!9210 = !DILocation(line: 1111, column: 11, scope: !9209)
!9211 = !DILocation(line: 1136, column: 1, scope: !9209)
!9212 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9213, file: !9213, line: 26, type: !333, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3777, retainedNodes: !9214)
!9213 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9214 = !{!9215}
!9215 = !DILocalVariable(name: "irq", scope: !9212, file: !9213, line: 28, type: !103)
!9216 = !DILocation(line: 0, scope: !9212)
!9217 = !DILocation(line: 30, column: 2, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9212, file: !9213, line: 30, column: 2)
!9219 = !DILocation(line: 31, column: 3, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !9213, line: 30, column: 39)
!9221 = distinct !DILexicalBlock(scope: !9218, file: !9213, line: 30, column: 2)
!9222 = !DILocation(line: 30, column: 35, scope: !9221)
!9223 = !DILocation(line: 30, column: 13, scope: !9221)
!9224 = distinct !{!9224, !9217, !9225}
!9225 = !DILocation(line: 32, column: 2, scope: !9218)
!9226 = !DILocation(line: 33, column: 1, scope: !9212)
!9227 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1028, file: !1028, line: 1814, type: !8346, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3777, retainedNodes: !9228)
!9228 = !{!9229, !9230}
!9229 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9227, file: !1028, line: 1814, type: !1651)
!9230 = !DILocalVariable(name: "priority", arg: 2, scope: !9227, file: !1028, line: 1814, type: !108)
!9231 = !DILocation(line: 0, scope: !9227)
!9232 = !DILocation(line: 1816, column: 7, scope: !9227)
!9233 = !DILocation(line: 0, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9227, file: !1028, line: 1816, column: 7)
!9235 = !DILocation(line: 1824, column: 1, scope: !9227)
!9236 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9237, file: !9237, line: 27, type: !9238, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3822, retainedNodes: !9343)
!9237 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9238 = !DISubroutineType(types: !9239)
!9239 = !{null, !9240}
!9240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !9241)
!9241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9242, size: 32)
!9242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !9243)
!9243 = !{!9244, !9302, !9314, !9315, !9316, !9317, !9323, !9338}
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9242, file: !195, line: 247, baseType: !9245, size: 384)
!9245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !9246)
!9246 = !{!9247, !9271, !9278, !9279, !9280, !9289, !9290, !9291}
!9247 = !DIDerivedType(tag: DW_TAG_member, scope: !9245, file: !195, line: 60, baseType: !9248, size: 64)
!9248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9245, file: !195, line: 60, size: 64, elements: !9249)
!9249 = !{!9250, !9265}
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9248, file: !195, line: 61, baseType: !9251, size: 64)
!9251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !9252)
!9252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !9253)
!9253 = !{!9254, !9260}
!9254 = !DIDerivedType(tag: DW_TAG_member, scope: !9252, file: !133, line: 38, baseType: !9255, size: 32)
!9255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9252, file: !133, line: 38, size: 32, elements: !9256)
!9256 = !{!9257, !9259}
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9255, file: !133, line: 39, baseType: !9258, size: 32)
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9252, size: 32)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9255, file: !133, line: 40, baseType: !9258, size: 32)
!9260 = !DIDerivedType(tag: DW_TAG_member, scope: !9252, file: !133, line: 42, baseType: !9261, size: 32, offset: 32)
!9261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9252, file: !133, line: 42, size: 32, elements: !9262)
!9262 = !{!9263, !9264}
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9261, file: !133, line: 43, baseType: !9258, size: 32)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9261, file: !133, line: 44, baseType: !9258, size: 32)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9248, file: !195, line: 62, baseType: !9266, size: 64)
!9266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !9267)
!9267 = !{!9268}
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9266, file: !207, line: 50, baseType: !9269, size: 64)
!9269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9270, size: 64, elements: !212)
!9270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9266, size: 32)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9245, file: !195, line: 68, baseType: !9272, size: 32, offset: 64)
!9272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9273, size: 32)
!9273 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !9274)
!9274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !9275)
!9275 = !{!9276}
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9274, file: !128, line: 232, baseType: !9277, size: 64)
!9277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !9252)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9245, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9245, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!9280 = !DIDerivedType(tag: DW_TAG_member, scope: !9245, file: !195, line: 90, baseType: !9281, size: 16, offset: 112)
!9281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9245, file: !195, line: 90, size: 16, elements: !9282)
!9282 = !{!9283, !9288}
!9283 = !DIDerivedType(tag: DW_TAG_member, scope: !9281, file: !195, line: 91, baseType: !9284, size: 16)
!9284 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9281, file: !195, line: 91, size: 16, elements: !9285)
!9285 = !{!9286, !9287}
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9284, file: !195, line: 96, baseType: !225, size: 8)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9284, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9281, file: !195, line: 100, baseType: !177, size: 16)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9245, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9245, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9245, file: !195, line: 131, baseType: !9292, size: 192, offset: 192)
!9292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !9293)
!9293 = !{!9294, !9295, !9301}
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9292, file: !128, line: 245, baseType: !9251, size: 64)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9292, file: !128, line: 246, baseType: !9296, size: 32, offset: 64)
!9296 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !9297)
!9297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9298, size: 32)
!9298 = !DISubroutineType(types: !9299)
!9299 = !{null, !9300}
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9292, size: 32)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9292, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9242, file: !195, line: 250, baseType: !9303, size: 288, offset: 384)
!9303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !9304)
!9304 = !{!9305, !9306, !9307, !9308, !9309, !9310, !9311, !9312, !9313}
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9303, file: !244, line: 26, baseType: !108, size: 32)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9303, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9303, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9303, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9303, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9303, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9303, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9303, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9303, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9242, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9242, file: !195, line: 256, baseType: !9273, size: 64, offset: 704)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9242, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9242, file: !195, line: 300, baseType: !9318, size: 96, offset: 800)
!9318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !9319)
!9319 = !{!9320, !9321, !9322}
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9318, file: !195, line: 153, baseType: !22, size: 32)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9318, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9318, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9242, file: !195, line: 325, baseType: !9324, size: 32, offset: 896)
!9324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9325, size: 32)
!9325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !9326)
!9326 = !{!9327, !9333, !9334}
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9325, file: !124, line: 5074, baseType: !9328, size: 96)
!9328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !9329)
!9329 = !{!9330, !9331, !9332}
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9328, file: !270, line: 57, baseType: !273, size: 32)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9328, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9328, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9325, file: !124, line: 5075, baseType: !9273, size: 64, offset: 96)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9325, file: !124, line: 5076, baseType: !9335, size: 32, offset: 160)
!9335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !9336)
!9336 = !{!9337}
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9335, file: !149, line: 52, baseType: !22, size: 32)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9242, file: !195, line: 343, baseType: !9339, size: 64, offset: 928)
!9339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !9340)
!9340 = !{!9341, !9342}
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9339, file: !244, line: 63, baseType: !108, size: 32)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9339, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!9343 = !{!9344}
!9344 = !DILocalVariable(name: "thread", arg: 1, scope: !9236, file: !9237, line: 27, type: !9240)
!9345 = !DILocation(line: 0, scope: !9236)
!9346 = !DILocation(line: 29, column: 6, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9236, file: !9237, line: 29, column: 6)
!9348 = !DILocation(line: 29, column: 15, scope: !9347)
!9349 = !DILocation(line: 29, column: 6, scope: !9236)
!9350 = !DILocation(line: 1031, column: 3, scope: !9351, inlinedAt: !9354)
!9351 = distinct !DISubprogram(name: "__get_IPSR", scope: !8306, file: !8306, line: 1027, type: !8393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3822, retainedNodes: !9352)
!9352 = !{!9353}
!9353 = !DILocalVariable(name: "result", scope: !9351, file: !8306, line: 1029, type: !108)
!9354 = distinct !DILocation(line: 48, column: 10, scope: !9355, inlinedAt: !9359)
!9355 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9356, file: !9356, line: 46, type: !9357, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3822, retainedNodes: !2953)
!9356 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!119}
!9359 = distinct !DILocation(line: 30, column: 7, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !9237, line: 30, column: 7)
!9361 = distinct !DILexicalBlock(scope: !9347, file: !9237, line: 29, column: 26)
!9362 = !{i64 3726949}
!9363 = !DILocation(line: 0, scope: !9351, inlinedAt: !9354)
!9364 = !DILocation(line: 48, column: 9, scope: !9355, inlinedAt: !9359)
!9365 = !DILocation(line: 30, column: 7, scope: !9361)
!9366 = !DILocation(line: 42, column: 14, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9360, file: !9237, line: 30, column: 25)
!9368 = !DILocation(line: 48, column: 15, scope: !9367)
!9369 = !DILocation(line: 49, column: 3, scope: !9367)
!9370 = !DILocation(line: 52, column: 2, scope: !9236)
!9371 = !DILocation(line: 53, column: 1, scope: !9236)
!9372 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !890, file: !890, line: 127, type: !333, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !883, retainedNodes: !2953)
!9373 = !DILocation(line: 134, column: 2, scope: !9372)
!9374 = !DILocation(line: 156, column: 1, scope: !9372)
!9375 = !DILocation(line: 0, scope: !889)
!9376 = !DILocation(line: 289, column: 36, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !889, file: !890, line: 285, column: 2)
!9378 = !DILocation(line: 289, column: 42, scope: !9377)
!9379 = !DILocation(line: 300, column: 36, scope: !889)
!9380 = !DILocation(line: 301, column: 35, scope: !889)
!9381 = !DILocation(line: 302, column: 37, scope: !889)
!9382 = !DILocation(line: 311, column: 2, scope: !889)
!9383 = !DILocation(line: 316, column: 1, scope: !889)
!9384 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !1056, file: !1056, line: 180, type: !333, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !2953)
!9385 = !DILocation(line: 188, column: 12, scope: !9384)
!9386 = !DILocation(line: 271, column: 3, scope: !9387, inlinedAt: !9388)
!9387 = distinct !DISubprogram(name: "__DSB", scope: !8306, file: !8306, line: 269, type: !333, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !2953)
!9388 = distinct !DILocation(line: 192, column: 2, scope: !9384)
!9389 = !{i64 3917839}
!9390 = !DILocation(line: 260, column: 3, scope: !9391, inlinedAt: !9392)
!9391 = distinct !DISubprogram(name: "__ISB", scope: !8306, file: !8306, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !2953)
!9392 = distinct !DILocation(line: 193, column: 2, scope: !9384)
!9393 = !{i64 3917556}
!9394 = !DILocation(line: 194, column: 1, scope: !9384)
!9395 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !1056, file: !1056, line: 199, type: !333, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !2953)
!9396 = !DILocation(line: 282, column: 3, scope: !9397, inlinedAt: !9398)
!9397 = distinct !DISubprogram(name: "__DMB", scope: !8306, file: !8306, line: 280, type: !333, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !2953)
!9398 = distinct !DILocation(line: 202, column: 2, scope: !9395)
!9399 = !{i64 3918115}
!9400 = !DILocation(line: 205, column: 12, scope: !9395)
!9401 = !DILocation(line: 206, column: 1, scope: !9395)
!9402 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !1056, file: !1056, line: 275, type: !9403, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9416)
!9403 = !DISubroutineType(types: !9404)
!9404 = !{null, !9405, !2738, !8582, !8582}
!9405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9406, size: 32)
!9406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9407)
!9407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !1002, line: 52, size: 96, elements: !9408)
!9408 = !{!9409, !9410, !9411}
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9407, file: !1002, line: 53, baseType: !22, size: 32)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9407, file: !1002, line: 54, baseType: !153, size: 32, offset: 32)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9407, file: !1002, line: 55, baseType: !9412, size: 32, offset: 64)
!9412 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !1008, line: 151, baseType: !9413)
!9413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1008, line: 149, size: 32, elements: !9414)
!9414 = !{!9415}
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9413, file: !1008, line: 150, baseType: !108, size: 32)
!9416 = !{!9417, !9418, !9419, !9420}
!9417 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9402, file: !1056, line: 276, type: !9405)
!9418 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9402, file: !1056, line: 276, type: !2738)
!9419 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9402, file: !1056, line: 277, type: !8582)
!9420 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9402, file: !1056, line: 277, type: !8582)
!9421 = !DILocation(line: 0, scope: !9402)
!9422 = !DILocation(line: 279, column: 6, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9402, file: !1056, line: 279, column: 6)
!9424 = !DILocation(line: 280, column: 57, scope: !9423)
!9425 = !DILocation(line: 279, column: 6, scope: !9402)
!9426 = !DILocation(line: 282, column: 3, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !1056, line: 282, column: 3)
!9428 = distinct !DILexicalBlock(scope: !9429, file: !1056, line: 282, column: 3)
!9429 = distinct !DILexicalBlock(scope: !9430, file: !1056, line: 282, column: 3)
!9430 = distinct !DILexicalBlock(scope: !9423, file: !1056, line: 280, column: 69)
!9431 = !DILocation(line: 285, column: 1, scope: !9402)
!9432 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9433, file: !9433, line: 220, type: !9434, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9436)
!9433 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9434 = !DISubroutineType(types: !9435)
!9435 = !{!103, !9405, !2738, !8582, !8582}
!9436 = !{!9437, !9438, !9439, !9440, !9441}
!9437 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9432, file: !9433, line: 221, type: !9405)
!9438 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9432, file: !9433, line: 221, type: !2738)
!9439 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9432, file: !9433, line: 222, type: !8582)
!9440 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9432, file: !9433, line: 223, type: !8582)
!9441 = !DILocalVariable(name: "mpu_reg_index", scope: !9432, file: !9433, line: 225, type: !103)
!9442 = !DILocation(line: 0, scope: !9432)
!9443 = !DILocation(line: 225, column: 22, scope: !9432)
!9444 = !DILocation(line: 233, column: 18, scope: !9432)
!9445 = !DILocation(line: 236, column: 23, scope: !9432)
!9446 = !DILocation(line: 236, column: 21, scope: !9432)
!9447 = !DILocation(line: 238, column: 2, scope: !9432)
!9448 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !1056, file: !1056, line: 105, type: !9449, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9451)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{!103, !9405, !164, !164, !119}
!9451 = !{!9452, !9453, !9454, !9455, !9456, !9457}
!9452 = !DILocalVariable(name: "regions", arg: 1, scope: !9448, file: !1056, line: 106, type: !9405)
!9453 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9448, file: !1056, line: 106, type: !164)
!9454 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9448, file: !1056, line: 106, type: !164)
!9455 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9448, file: !1056, line: 107, type: !119)
!9456 = !DILocalVariable(name: "i", scope: !9448, file: !1056, line: 109, type: !103)
!9457 = !DILocalVariable(name: "reg_index", scope: !9448, file: !1056, line: 110, type: !103)
!9458 = !DILocation(line: 0, scope: !9448)
!9459 = !DILocation(line: 110, column: 18, scope: !9448)
!9460 = !DILocation(line: 112, column: 16, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !1056, line: 112, column: 2)
!9462 = distinct !DILexicalBlock(scope: !9448, file: !1056, line: 112, column: 2)
!9463 = !DILocation(line: 112, column: 2, scope: !9462)
!9464 = !DILocation(line: 113, column: 7, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !1056, line: 113, column: 7)
!9466 = distinct !DILexicalBlock(scope: !9461, file: !1056, line: 112, column: 36)
!9467 = !DILocation(line: 113, column: 18, scope: !9465)
!9468 = !DILocation(line: 113, column: 23, scope: !9465)
!9469 = !DILocation(line: 113, column: 7, scope: !9466)
!9470 = !DILocation(line: 118, column: 23, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9466, file: !1056, line: 118, column: 7)
!9472 = !DILocation(line: 119, column: 7, scope: !9471)
!9473 = !DILocation(line: 118, column: 7, scope: !9466)
!9474 = !DILocation(line: 120, column: 4, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !1056, line: 120, column: 4)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !1056, line: 120, column: 4)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !1056, line: 120, column: 4)
!9478 = distinct !DILexicalBlock(scope: !9479, file: !1056, line: 120, column: 4)
!9479 = distinct !DILexicalBlock(scope: !9471, file: !1056, line: 119, column: 45)
!9480 = !DILocation(line: 121, column: 4, scope: !9479)
!9481 = !DILocation(line: 124, column: 36, scope: !9466)
!9482 = !DILocation(line: 124, column: 15, scope: !9466)
!9483 = !DILocation(line: 126, column: 17, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9466, file: !1056, line: 126, column: 7)
!9485 = !DILocation(line: 126, column: 7, scope: !9466)
!9486 = !DILocation(line: 131, column: 12, scope: !9466)
!9487 = !DILocation(line: 132, column: 2, scope: !9466)
!9488 = !DILocation(line: 112, column: 32, scope: !9461)
!9489 = distinct !{!9489, !9463, !9490}
!9490 = !DILocation(line: 132, column: 2, scope: !9462)
!9491 = !DILocation(line: 135, column: 1, scope: !9448)
!9492 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9433, file: !9433, line: 63, type: !9493, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9495)
!9493 = !DISubroutineType(types: !9494)
!9494 = !{!103, !9405}
!9495 = !{!9496, !9497}
!9496 = !DILocalVariable(name: "part", arg: 1, scope: !9492, file: !9433, line: 63, type: !9405)
!9497 = !DILocalVariable(name: "partition_is_valid", scope: !9492, file: !9433, line: 70, type: !103)
!9498 = !DILocation(line: 0, scope: !9492)
!9499 = !DILocation(line: 71, column: 11, scope: !9492)
!9500 = !DILocation(line: 71, column: 37, scope: !9492)
!9501 = !DILocation(line: 72, column: 3, scope: !9492)
!9502 = !DILocation(line: 71, column: 30, scope: !9492)
!9503 = !DILocation(line: 75, column: 11, scope: !9492)
!9504 = !DILocation(line: 75, column: 17, scope: !9492)
!9505 = !DILocation(line: 75, column: 38, scope: !9492)
!9506 = !DILocation(line: 77, column: 2, scope: !9492)
!9507 = distinct !DISubprogram(name: "mpu_configure_region", scope: !1056, file: !1056, line: 79, type: !9508, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9510)
!9508 = !DISubroutineType(types: !9509)
!9509 = !{!103, !2738, !9405}
!9510 = !{!9511, !9512, !9513}
!9511 = !DILocalVariable(name: "index", arg: 1, scope: !9507, file: !1056, line: 79, type: !2738)
!9512 = !DILocalVariable(name: "new_region", arg: 2, scope: !9507, file: !1056, line: 80, type: !9405)
!9513 = !DILocalVariable(name: "region_conf", scope: !9507, file: !1056, line: 82, type: !1045)
!9514 = !DILocation(line: 0, scope: !9507)
!9515 = !DILocation(line: 82, column: 2, scope: !9507)
!9516 = !DILocation(line: 82, column: 24, scope: !9507)
!9517 = !DILocation(line: 87, column: 33, scope: !9507)
!9518 = !DILocation(line: 87, column: 14, scope: !9507)
!9519 = !DILocation(line: 87, column: 19, scope: !9507)
!9520 = !DILocation(line: 91, column: 55, scope: !9507)
!9521 = !DILocation(line: 92, column: 16, scope: !9507)
!9522 = !DILocation(line: 92, column: 53, scope: !9507)
!9523 = !DILocation(line: 91, column: 2, scope: !9507)
!9524 = !DILocation(line: 95, column: 9, scope: !9507)
!9525 = !DILocation(line: 97, column: 1, scope: !9507)
!9526 = !DILocation(line: 95, column: 2, scope: !9507)
!9527 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9433, file: !9433, line: 113, type: !9528, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9533)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{null, !9530, !9531, !108, !108}
!9530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!9531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9532, size: 32)
!9532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9412)
!9533 = !{!9534, !9535, !9536, !9537}
!9534 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9527, file: !9433, line: 114, type: !9530)
!9535 = !DILocalVariable(name: "attr", arg: 2, scope: !9527, file: !9433, line: 115, type: !9531)
!9536 = !DILocalVariable(name: "base", arg: 3, scope: !9527, file: !9433, line: 115, type: !108)
!9537 = !DILocalVariable(name: "size", arg: 4, scope: !9527, file: !9433, line: 115, type: !108)
!9538 = !DILocation(line: 0, scope: !9527)
!9539 = !DILocation(line: 127, column: 23, scope: !9527)
!9540 = !DILocation(line: 127, column: 35, scope: !9527)
!9541 = !DILocation(line: 127, column: 33, scope: !9527)
!9542 = !DILocation(line: 127, column: 10, scope: !9527)
!9543 = !DILocation(line: 127, column: 15, scope: !9527)
!9544 = !DILocation(line: 129, column: 1, scope: !9527)
!9545 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !1056, file: !1056, line: 57, type: !9546, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9548)
!9546 = !DISubroutineType(types: !9547)
!9547 = !{!103, !2738, !1043}
!9548 = !{!9549, !9550}
!9549 = !DILocalVariable(name: "index", arg: 1, scope: !9545, file: !1056, line: 57, type: !2738)
!9550 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9545, file: !1056, line: 58, type: !1043)
!9551 = !DILocation(line: 0, scope: !9545)
!9552 = !DILocation(line: 61, column: 6, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9545, file: !1056, line: 61, column: 6)
!9554 = !DILocation(line: 61, column: 12, scope: !9553)
!9555 = !DILocation(line: 61, column: 6, scope: !9545)
!9556 = !DILocation(line: 64, column: 3, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9558, file: !1056, line: 64, column: 3)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !1056, line: 64, column: 3)
!9559 = distinct !DILexicalBlock(scope: !9560, file: !1056, line: 64, column: 3)
!9560 = distinct !DILexicalBlock(scope: !9561, file: !1056, line: 64, column: 3)
!9561 = distinct !DILexicalBlock(scope: !9553, file: !1056, line: 61, column: 40)
!9562 = !DILocation(line: 65, column: 3, scope: !9561)
!9563 = !DILocation(line: 71, column: 2, scope: !9545)
!9564 = !DILocation(line: 73, column: 2, scope: !9545)
!9565 = !DILocation(line: 74, column: 1, scope: !9545)
!9566 = distinct !DISubprogram(name: "region_init", scope: !9433, file: !9433, line: 29, type: !9567, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9569)
!9567 = !DISubroutineType(types: !9568)
!9568 = !{null, !8582, !1043}
!9569 = !{!9570, !9571}
!9570 = !DILocalVariable(name: "index", arg: 1, scope: !9566, file: !9433, line: 29, type: !8582)
!9571 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9566, file: !9433, line: 30, type: !1043)
!9572 = !DILocation(line: 0, scope: !9566)
!9573 = !DILocation(line: 33, column: 2, scope: !9566)
!9574 = !DILocation(line: 47, column: 28, scope: !9566)
!9575 = !DILocation(line: 47, column: 33, scope: !9566)
!9576 = !DILocation(line: 48, column: 26, scope: !9566)
!9577 = !DILocation(line: 47, column: 12, scope: !9566)
!9578 = !DILocation(line: 49, column: 32, scope: !9566)
!9579 = !DILocation(line: 49, column: 37, scope: !9566)
!9580 = !DILocation(line: 49, column: 12, scope: !9566)
!9581 = !DILocation(line: 53, column: 1, scope: !9566)
!9582 = distinct !DISubprogram(name: "set_region_number", scope: !9583, file: !9583, line: 32, type: !8403, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9584)
!9583 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9584 = !{!9585}
!9585 = !DILocalVariable(name: "index", arg: 1, scope: !9582, file: !9583, line: 32, type: !108)
!9586 = !DILocation(line: 0, scope: !9582)
!9587 = !DILocation(line: 34, column: 11, scope: !9582)
!9588 = !DILocation(line: 35, column: 1, scope: !9582)
!9589 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9433, file: !9433, line: 88, type: !9590, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9592)
!9590 = !DISubroutineType(types: !9591)
!9591 = !{!108, !108}
!9592 = !{!9593}
!9593 = !DILocalVariable(name: "size", arg: 1, scope: !9589, file: !9433, line: 88, type: !108)
!9594 = !DILocation(line: 0, scope: !9589)
!9595 = !DILocation(line: 91, column: 11, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9589, file: !9433, line: 91, column: 6)
!9597 = !DILocation(line: 91, column: 6, scope: !9589)
!9598 = !DILocation(line: 100, column: 11, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9589, file: !9433, line: 100, column: 6)
!9600 = !DILocation(line: 100, column: 6, scope: !9589)
!9601 = !DILocation(line: 104, column: 35, scope: !9589)
!9602 = !DILocation(line: 104, column: 16, scope: !9589)
!9603 = !DILocation(line: 104, column: 50, scope: !9589)
!9604 = !DILocation(line: 104, column: 72, scope: !9589)
!9605 = !DILocation(line: 104, column: 2, scope: !9589)
!9606 = !DILocation(line: 106, column: 1, scope: !9589)
!9607 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !1056, file: !1056, line: 307, type: !9608, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9610)
!9608 = !DISubroutineType(types: !9609)
!9609 = !{null, !9405, !164}
!9610 = !{!9611, !9612}
!9611 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9607, file: !1056, line: 308, type: !9405)
!9612 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9607, file: !1056, line: 308, type: !164)
!9613 = !DILocation(line: 0, scope: !9607)
!9614 = !DILocation(line: 310, column: 6, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9607, file: !1056, line: 310, column: 6)
!9616 = !DILocation(line: 311, column: 3, scope: !9615)
!9617 = !DILocation(line: 310, column: 6, scope: !9607)
!9618 = !DILocation(line: 313, column: 3, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !1056, line: 313, column: 3)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !1056, line: 313, column: 3)
!9621 = distinct !DILexicalBlock(scope: !9622, file: !1056, line: 313, column: 3)
!9622 = distinct !DILexicalBlock(scope: !9615, file: !1056, line: 311, column: 15)
!9623 = !DILocation(line: 316, column: 1, scope: !9607)
!9624 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9433, file: !9433, line: 249, type: !9625, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9627)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!103, !9405, !164}
!9627 = !{!9628, !9629, !9630, !9631}
!9628 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9624, file: !9433, line: 250, type: !9405)
!9629 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9624, file: !9433, line: 250, type: !164)
!9630 = !DILocalVariable(name: "mpu_reg_index", scope: !9624, file: !9433, line: 252, type: !103)
!9631 = !DILocalVariable(name: "i", scope: !9632, file: !9433, line: 264, type: !103)
!9632 = distinct !DILexicalBlock(scope: !9633, file: !9433, line: 264, column: 3)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !9433, line: 261, column: 32)
!9634 = distinct !DILexicalBlock(scope: !9624, file: !9433, line: 261, column: 6)
!9635 = !DILocation(line: 0, scope: !9624)
!9636 = !DILocation(line: 252, column: 22, scope: !9624)
!9637 = !DILocation(line: 258, column: 18, scope: !9624)
!9638 = !DILocation(line: 261, column: 20, scope: !9634)
!9639 = !DILocation(line: 261, column: 6, scope: !9624)
!9640 = !DILocation(line: 0, scope: !9632)
!9641 = !DILocation(line: 265, column: 4, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9643, file: !9433, line: 264, column: 59)
!9643 = distinct !DILexicalBlock(scope: !9632, file: !9433, line: 264, column: 3)
!9644 = !DILocation(line: 264, column: 55, scope: !9643)
!9645 = !DILocation(line: 264, column: 33, scope: !9643)
!9646 = !DILocation(line: 264, column: 3, scope: !9632)
!9647 = distinct !{!9647, !9646, !9648}
!9648 = !DILocation(line: 266, column: 3, scope: !9632)
!9649 = !DILocation(line: 269, column: 2, scope: !9624)
!9650 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9651, file: !9651, line: 218, type: !8403, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9652)
!9651 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9652 = !{!9653}
!9653 = !DILocalVariable(name: "rnr", arg: 1, scope: !9650, file: !9651, line: 218, type: !108)
!9654 = !DILocation(line: 0, scope: !9650)
!9655 = !DILocation(line: 220, column: 12, scope: !9650)
!9656 = !DILocation(line: 221, column: 13, scope: !9650)
!9657 = !DILocation(line: 222, column: 1, scope: !9650)
!9658 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !1056, file: !1056, line: 326, type: !9659, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1023, retainedNodes: !9661)
!9659 = !DISubroutineType(types: !9660)
!9660 = !{!103}
!9661 = !{!9662}
!9662 = !DILocalVariable(name: "r_index", scope: !9658, file: !1056, line: 328, type: !108)
!9663 = !DILocation(line: 330, column: 17, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9658, file: !1056, line: 330, column: 6)
!9665 = !DILocation(line: 330, column: 29, scope: !9664)
!9666 = !DILocation(line: 330, column: 6, scope: !9658)
!9667 = !DILocation(line: 337, column: 3, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9669, file: !1056, line: 337, column: 3)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !1056, line: 337, column: 3)
!9670 = distinct !DILexicalBlock(scope: !9671, file: !1056, line: 337, column: 3)
!9671 = distinct !DILexicalBlock(scope: !9664, file: !1056, line: 330, column: 50)
!9672 = !DILocation(line: 347, column: 2, scope: !9658)
!9673 = !DILocation(line: 0, scope: !9658)
!9674 = !DILocation(line: 364, column: 29, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !1056, line: 364, column: 2)
!9676 = distinct !DILexicalBlock(scope: !9658, file: !1056, line: 364, column: 2)
!9677 = !DILocation(line: 364, column: 2, scope: !9676)
!9678 = !DILocation(line: 365, column: 25, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9675, file: !1056, line: 364, column: 66)
!9680 = !DILocation(line: 365, column: 3, scope: !9679)
!9681 = !DILocation(line: 364, column: 62, scope: !9675)
!9682 = distinct !{!9682, !9677, !9683}
!9683 = !DILocation(line: 366, column: 2, scope: !9676)
!9684 = !DILocation(line: 369, column: 23, scope: !9658)
!9685 = !DILocation(line: 369, column: 21, scope: !9658)
!9686 = !DILocation(line: 372, column: 2, scope: !9658)
!9687 = !DILocation(line: 433, column: 2, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9689, file: !1056, line: 433, column: 2)
!9689 = distinct !DILexicalBlock(scope: !9658, file: !1056, line: 433, column: 2)
!9690 = !DILocation(line: 433, column: 2, scope: !9689)
!9691 = !DILocation(line: 433, column: 2, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9688, file: !1056, line: 433, column: 2)
!9693 = !DILocation(line: 444, column: 1, scope: !9658)
!9694 = distinct !DISubprogram(name: "strcpy", scope: !9695, file: !9695, line: 20, type: !9696, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9700)
!9695 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9696 = !DISubroutineType(types: !9697)
!9697 = !{!157, !9698, !9699}
!9698 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !157)
!9699 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !336)
!9700 = !{!9701, !9702, !9703}
!9701 = !DILocalVariable(name: "d", arg: 1, scope: !9694, file: !9695, line: 20, type: !9698)
!9702 = !DILocalVariable(name: "s", arg: 2, scope: !9694, file: !9695, line: 20, type: !9699)
!9703 = !DILocalVariable(name: "dest", scope: !9694, file: !9695, line: 22, type: !157)
!9704 = !DILocation(line: 0, scope: !9694)
!9705 = !DILocation(line: 24, column: 9, scope: !9694)
!9706 = !DILocation(line: 24, column: 12, scope: !9694)
!9707 = !DILocation(line: 24, column: 2, scope: !9694)
!9708 = !DILocation(line: 25, column: 6, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9694, file: !9695, line: 24, column: 21)
!9710 = !DILocation(line: 26, column: 4, scope: !9709)
!9711 = !DILocation(line: 27, column: 4, scope: !9709)
!9712 = distinct !{!9712, !9707, !9713}
!9713 = !DILocation(line: 28, column: 2, scope: !9694)
!9714 = !DILocation(line: 30, column: 5, scope: !9694)
!9715 = !DILocation(line: 32, column: 2, scope: !9694)
!9716 = distinct !DISubprogram(name: "strncpy", scope: !9695, file: !9695, line: 42, type: !9717, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9719)
!9717 = !DISubroutineType(types: !9718)
!9718 = !{!157, !9698, !9699, !153}
!9719 = !{!9720, !9721, !9722, !9723}
!9720 = !DILocalVariable(name: "d", arg: 1, scope: !9716, file: !9695, line: 42, type: !9698)
!9721 = !DILocalVariable(name: "s", arg: 2, scope: !9716, file: !9695, line: 42, type: !9699)
!9722 = !DILocalVariable(name: "n", arg: 3, scope: !9716, file: !9695, line: 42, type: !153)
!9723 = !DILocalVariable(name: "dest", scope: !9716, file: !9695, line: 44, type: !157)
!9724 = !DILocation(line: 0, scope: !9716)
!9725 = !DILocation(line: 46, column: 12, scope: !9716)
!9726 = !DILocation(line: 46, column: 17, scope: !9716)
!9727 = !DILocation(line: 46, column: 20, scope: !9716)
!9728 = !DILocation(line: 46, column: 23, scope: !9716)
!9729 = !DILocation(line: 46, column: 2, scope: !9716)
!9730 = !DILocation(line: 47, column: 6, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9716, file: !9695, line: 46, column: 32)
!9732 = !DILocation(line: 48, column: 4, scope: !9731)
!9733 = !DILocation(line: 49, column: 4, scope: !9731)
!9734 = !DILocation(line: 50, column: 4, scope: !9731)
!9735 = distinct !{!9735, !9729, !9736}
!9736 = !DILocation(line: 51, column: 2, scope: !9716)
!9737 = !DILocation(line: 54, column: 6, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9716, file: !9695, line: 53, column: 16)
!9739 = !DILocation(line: 55, column: 4, scope: !9738)
!9740 = !DILocation(line: 56, column: 4, scope: !9738)
!9741 = !DILocation(line: 53, column: 11, scope: !9716)
!9742 = !DILocation(line: 53, column: 2, scope: !9716)
!9743 = distinct !{!9743, !9742, !9744}
!9744 = !DILocation(line: 57, column: 2, scope: !9716)
!9745 = !DILocation(line: 59, column: 2, scope: !9716)
!9746 = distinct !DISubprogram(name: "strchr", scope: !9695, file: !9695, line: 69, type: !9747, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9749)
!9747 = !DISubroutineType(types: !9748)
!9748 = !{!157, !336, !103}
!9749 = !{!9750, !9751, !9752}
!9750 = !DILocalVariable(name: "s", arg: 1, scope: !9746, file: !9695, line: 69, type: !336)
!9751 = !DILocalVariable(name: "c", arg: 2, scope: !9746, file: !9695, line: 69, type: !103)
!9752 = !DILocalVariable(name: "tmp", scope: !9746, file: !9695, line: 71, type: !158)
!9753 = !DILocation(line: 0, scope: !9746)
!9754 = !DILocation(line: 73, column: 2, scope: !9746)
!9755 = !DILocation(line: 73, column: 10, scope: !9746)
!9756 = !DILocation(line: 73, column: 13, scope: !9746)
!9757 = !DILocation(line: 73, column: 21, scope: !9746)
!9758 = !DILocation(line: 74, column: 4, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9746, file: !9695, line: 73, column: 38)
!9760 = distinct !{!9760, !9754, !9761}
!9761 = !DILocation(line: 75, column: 2, scope: !9746)
!9762 = !DILocation(line: 77, column: 9, scope: !9746)
!9763 = !DILocation(line: 77, column: 2, scope: !9746)
!9764 = distinct !DISubprogram(name: "strrchr", scope: !9695, file: !9695, line: 87, type: !9747, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9765)
!9765 = !{!9766, !9767, !9768}
!9766 = !DILocalVariable(name: "s", arg: 1, scope: !9764, file: !9695, line: 87, type: !336)
!9767 = !DILocalVariable(name: "c", arg: 2, scope: !9764, file: !9695, line: 87, type: !103)
!9768 = !DILocalVariable(name: "match", scope: !9764, file: !9695, line: 89, type: !157)
!9769 = !DILocation(line: 0, scope: !9764)
!9770 = !DILocation(line: 91, column: 2, scope: !9764)
!9771 = !DILocation(line: 92, column: 7, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !9695, line: 92, column: 7)
!9773 = distinct !DILexicalBlock(scope: !9764, file: !9695, line: 91, column: 5)
!9774 = !DILocation(line: 92, column: 10, scope: !9772)
!9775 = !DILocation(line: 92, column: 7, scope: !9773)
!9776 = !DILocation(line: 95, column: 13, scope: !9764)
!9777 = !DILocation(line: 95, column: 2, scope: !9773)
!9778 = distinct !{!9778, !9770, !9779}
!9779 = !DILocation(line: 95, column: 15, scope: !9764)
!9780 = !DILocation(line: 97, column: 2, scope: !9764)
!9781 = distinct !DISubprogram(name: "strlen", scope: !9695, file: !9695, line: 107, type: !9782, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9784)
!9782 = !DISubroutineType(types: !9783)
!9783 = !{!153, !336}
!9784 = !{!9785, !9786}
!9785 = !DILocalVariable(name: "s", arg: 1, scope: !9781, file: !9695, line: 107, type: !336)
!9786 = !DILocalVariable(name: "n", scope: !9781, file: !9695, line: 109, type: !153)
!9787 = !DILocation(line: 0, scope: !9781)
!9788 = !DILocation(line: 111, column: 9, scope: !9781)
!9789 = !DILocation(line: 111, column: 12, scope: !9781)
!9790 = !DILocation(line: 111, column: 2, scope: !9781)
!9791 = !DILocation(line: 112, column: 4, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9781, file: !9695, line: 111, column: 21)
!9793 = !DILocation(line: 113, column: 4, scope: !9792)
!9794 = distinct !{!9794, !9790, !9795}
!9795 = !DILocation(line: 114, column: 2, scope: !9781)
!9796 = !DILocation(line: 116, column: 2, scope: !9781)
!9797 = distinct !DISubprogram(name: "strnlen", scope: !9695, file: !9695, line: 126, type: !9798, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9800)
!9798 = !DISubroutineType(types: !9799)
!9799 = !{!153, !336, !153}
!9800 = !{!9801, !9802, !9803}
!9801 = !DILocalVariable(name: "s", arg: 1, scope: !9797, file: !9695, line: 126, type: !336)
!9802 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9797, file: !9695, line: 126, type: !153)
!9803 = !DILocalVariable(name: "n", scope: !9797, file: !9695, line: 128, type: !153)
!9804 = !DILocation(line: 0, scope: !9797)
!9805 = !DILocation(line: 130, column: 9, scope: !9797)
!9806 = !DILocation(line: 130, column: 12, scope: !9797)
!9807 = !DILocation(line: 130, column: 20, scope: !9797)
!9808 = !DILocation(line: 130, column: 2, scope: !9797)
!9809 = !DILocation(line: 131, column: 4, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9797, file: !9695, line: 130, column: 35)
!9811 = !DILocation(line: 132, column: 4, scope: !9810)
!9812 = distinct !{!9812, !9808, !9813}
!9813 = !DILocation(line: 133, column: 2, scope: !9797)
!9814 = !DILocation(line: 135, column: 2, scope: !9797)
!9815 = distinct !DISubprogram(name: "strcmp", scope: !9695, file: !9695, line: 145, type: !9816, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9818)
!9816 = !DISubroutineType(types: !9817)
!9817 = !{!103, !336, !336}
!9818 = !{!9819, !9820}
!9819 = !DILocalVariable(name: "s1", arg: 1, scope: !9815, file: !9695, line: 145, type: !336)
!9820 = !DILocalVariable(name: "s2", arg: 2, scope: !9815, file: !9695, line: 145, type: !336)
!9821 = !DILocation(line: 0, scope: !9815)
!9822 = !DILocation(line: 147, column: 10, scope: !9815)
!9823 = !DILocation(line: 147, column: 17, scope: !9815)
!9824 = !DILocation(line: 147, column: 14, scope: !9815)
!9825 = !DILocation(line: 147, column: 22, scope: !9815)
!9826 = !DILocation(line: 148, column: 5, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9815, file: !9695, line: 147, column: 40)
!9828 = !DILocation(line: 149, column: 5, scope: !9827)
!9829 = distinct !{!9829, !9830, !9831}
!9830 = !DILocation(line: 147, column: 2, scope: !9815)
!9831 = !DILocation(line: 150, column: 2, scope: !9815)
!9832 = !DILocation(line: 152, column: 9, scope: !9815)
!9833 = !DILocation(line: 152, column: 15, scope: !9815)
!9834 = !DILocation(line: 152, column: 13, scope: !9815)
!9835 = !DILocation(line: 152, column: 2, scope: !9815)
!9836 = distinct !DISubprogram(name: "strncmp", scope: !9695, file: !9695, line: 162, type: !9837, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9839)
!9837 = !DISubroutineType(types: !9838)
!9838 = !{!103, !336, !336, !153}
!9839 = !{!9840, !9841, !9842}
!9840 = !DILocalVariable(name: "s1", arg: 1, scope: !9836, file: !9695, line: 162, type: !336)
!9841 = !DILocalVariable(name: "s2", arg: 2, scope: !9836, file: !9695, line: 162, type: !336)
!9842 = !DILocalVariable(name: "n", arg: 3, scope: !9836, file: !9695, line: 162, type: !153)
!9843 = !DILocation(line: 0, scope: !9836)
!9844 = !DILocation(line: 164, column: 17, scope: !9836)
!9845 = !DILocation(line: 164, column: 21, scope: !9836)
!9846 = !DILocation(line: 164, column: 28, scope: !9836)
!9847 = !DILocation(line: 164, column: 25, scope: !9836)
!9848 = !DILocation(line: 164, column: 33, scope: !9836)
!9849 = !DILocation(line: 165, column: 5, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9836, file: !9695, line: 164, column: 51)
!9851 = !DILocation(line: 166, column: 5, scope: !9850)
!9852 = !DILocation(line: 167, column: 4, scope: !9850)
!9853 = distinct !{!9853, !9854, !9855}
!9854 = !DILocation(line: 164, column: 2, scope: !9836)
!9855 = !DILocation(line: 168, column: 2, scope: !9836)
!9856 = !DILocation(line: 170, column: 25, scope: !9836)
!9857 = !DILocation(line: 170, column: 31, scope: !9836)
!9858 = !DILocation(line: 170, column: 29, scope: !9836)
!9859 = !DILocation(line: 170, column: 9, scope: !9836)
!9860 = !DILocation(line: 170, column: 2, scope: !9836)
!9861 = distinct !DISubprogram(name: "strtok_r", scope: !9695, file: !9695, line: 180, type: !9862, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9864)
!9862 = !DISubroutineType(types: !9863)
!9863 = !{!157, !157, !336, !782}
!9864 = !{!9865, !9866, !9867, !9868, !9869}
!9865 = !DILocalVariable(name: "str", arg: 1, scope: !9861, file: !9695, line: 180, type: !157)
!9866 = !DILocalVariable(name: "sep", arg: 2, scope: !9861, file: !9695, line: 180, type: !336)
!9867 = !DILocalVariable(name: "state", arg: 3, scope: !9861, file: !9695, line: 180, type: !782)
!9868 = !DILocalVariable(name: "start", scope: !9861, file: !9695, line: 182, type: !157)
!9869 = !DILocalVariable(name: "end", scope: !9861, file: !9695, line: 182, type: !157)
!9870 = !DILocation(line: 0, scope: !9861)
!9871 = !DILocation(line: 184, column: 10, scope: !9861)
!9872 = !DILocation(line: 184, column: 22, scope: !9861)
!9873 = !DILocation(line: 187, column: 9, scope: !9861)
!9874 = !DILocation(line: 187, column: 16, scope: !9861)
!9875 = !DILocation(line: 187, column: 19, scope: !9861)
!9876 = !DILocation(line: 187, column: 2, scope: !9861)
!9877 = !DILocation(line: 188, column: 8, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9861, file: !9695, line: 187, column: 40)
!9879 = distinct !{!9879, !9876, !9880}
!9880 = !DILocation(line: 189, column: 2, scope: !9861)
!9881 = !DILocation(line: 198, column: 9, scope: !9861)
!9882 = !DILocation(line: 198, column: 18, scope: !9861)
!9883 = !DILocation(line: 198, column: 17, scope: !9861)
!9884 = !DILocation(line: 198, column: 2, scope: !9861)
!9885 = !DILocation(line: 199, column: 6, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9861, file: !9695, line: 198, column: 37)
!9887 = !DILocation(line: 198, column: 14, scope: !9861)
!9888 = distinct !{!9888, !9884, !9889}
!9889 = !DILocation(line: 200, column: 2, scope: !9861)
!9890 = !DILocation(line: 203, column: 8, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9892, file: !9695, line: 202, column: 20)
!9892 = distinct !DILexicalBlock(scope: !9861, file: !9695, line: 202, column: 6)
!9893 = !DILocation(line: 204, column: 16, scope: !9891)
!9894 = !DILocation(line: 205, column: 2, scope: !9891)
!9895 = !DILocation(line: 210, column: 1, scope: !9861)
!9896 = distinct !DISubprogram(name: "strcat", scope: !9695, file: !9695, line: 212, type: !9696, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9897)
!9897 = !{!9898, !9899}
!9898 = !DILocalVariable(name: "dest", arg: 1, scope: !9896, file: !9695, line: 212, type: !9698)
!9899 = !DILocalVariable(name: "src", arg: 2, scope: !9896, file: !9695, line: 212, type: !9699)
!9900 = !DILocation(line: 0, scope: !9896)
!9901 = !DILocation(line: 214, column: 16, scope: !9896)
!9902 = !DILocation(line: 214, column: 14, scope: !9896)
!9903 = !DILocation(line: 214, column: 2, scope: !9896)
!9904 = !DILocation(line: 215, column: 2, scope: !9896)
!9905 = distinct !DISubprogram(name: "strncat", scope: !9695, file: !9695, line: 218, type: !9717, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9906)
!9906 = !{!9907, !9908, !9909, !9910, !9911}
!9907 = !DILocalVariable(name: "dest", arg: 1, scope: !9905, file: !9695, line: 218, type: !9698)
!9908 = !DILocalVariable(name: "src", arg: 2, scope: !9905, file: !9695, line: 218, type: !9699)
!9909 = !DILocalVariable(name: "n", arg: 3, scope: !9905, file: !9695, line: 219, type: !153)
!9910 = !DILocalVariable(name: "orig_dest", scope: !9905, file: !9695, line: 221, type: !157)
!9911 = !DILocalVariable(name: "len", scope: !9905, file: !9695, line: 222, type: !153)
!9912 = !DILocation(line: 0, scope: !9905)
!9913 = !DILocation(line: 222, column: 15, scope: !9905)
!9914 = !DILocation(line: 224, column: 7, scope: !9905)
!9915 = !DILocation(line: 225, column: 14, scope: !9905)
!9916 = !DILocation(line: 225, column: 19, scope: !9905)
!9917 = !DILocation(line: 225, column: 11, scope: !9905)
!9918 = !DILocation(line: 225, column: 23, scope: !9905)
!9919 = !DILocation(line: 225, column: 28, scope: !9905)
!9920 = !DILocation(line: 225, column: 2, scope: !9905)
!9921 = !DILocation(line: 226, column: 17, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9905, file: !9695, line: 225, column: 38)
!9923 = !DILocation(line: 226, column: 8, scope: !9922)
!9924 = !DILocation(line: 226, column: 11, scope: !9922)
!9925 = distinct !{!9925, !9920, !9926}
!9926 = !DILocation(line: 227, column: 2, scope: !9905)
!9927 = !DILocation(line: 228, column: 8, scope: !9905)
!9928 = !DILocation(line: 230, column: 2, scope: !9905)
!9929 = distinct !DISubprogram(name: "memcmp", scope: !9695, file: !9695, line: 239, type: !9930, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9932)
!9930 = !DISubroutineType(types: !9931)
!9931 = !{!103, !13, !13, !153}
!9932 = !{!9933, !9934, !9935, !9936, !9937}
!9933 = !DILocalVariable(name: "m1", arg: 1, scope: !9929, file: !9695, line: 239, type: !13)
!9934 = !DILocalVariable(name: "m2", arg: 2, scope: !9929, file: !9695, line: 239, type: !13)
!9935 = !DILocalVariable(name: "n", arg: 3, scope: !9929, file: !9695, line: 239, type: !153)
!9936 = !DILocalVariable(name: "c1", scope: !9929, file: !9695, line: 241, type: !336)
!9937 = !DILocalVariable(name: "c2", scope: !9929, file: !9695, line: 242, type: !336)
!9938 = !DILocation(line: 0, scope: !9929)
!9939 = !DILocation(line: 244, column: 7, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9929, file: !9695, line: 244, column: 6)
!9941 = !DILocation(line: 244, column: 6, scope: !9929)
!9942 = !DILocation(line: 248, column: 10, scope: !9929)
!9943 = !DILocation(line: 248, column: 14, scope: !9929)
!9944 = !DILocation(line: 248, column: 19, scope: !9929)
!9945 = !DILocation(line: 248, column: 2, scope: !9929)
!9946 = !DILocation(line: 248, column: 23, scope: !9929)
!9947 = !DILocation(line: 248, column: 30, scope: !9929)
!9948 = !DILocation(line: 248, column: 27, scope: !9929)
!9949 = !DILocation(line: 249, column: 5, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9929, file: !9695, line: 248, column: 36)
!9951 = !DILocation(line: 250, column: 5, scope: !9950)
!9952 = distinct !{!9952, !9945, !9953}
!9953 = !DILocation(line: 251, column: 2, scope: !9929)
!9954 = !DILocation(line: 253, column: 9, scope: !9929)
!9955 = !DILocation(line: 253, column: 15, scope: !9929)
!9956 = !DILocation(line: 253, column: 13, scope: !9929)
!9957 = !DILocation(line: 253, column: 2, scope: !9929)
!9958 = !DILocation(line: 254, column: 1, scope: !9929)
!9959 = distinct !DISubprogram(name: "memmove", scope: !9695, file: !9695, line: 263, type: !9960, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !9962)
!9960 = !DISubroutineType(types: !9961)
!9961 = !{!102, !102, !13, !153}
!9962 = !{!9963, !9964, !9965, !9966, !9967}
!9963 = !DILocalVariable(name: "d", arg: 1, scope: !9959, file: !9695, line: 263, type: !102)
!9964 = !DILocalVariable(name: "s", arg: 2, scope: !9959, file: !9695, line: 263, type: !13)
!9965 = !DILocalVariable(name: "n", arg: 3, scope: !9959, file: !9695, line: 263, type: !153)
!9966 = !DILocalVariable(name: "dest", scope: !9959, file: !9695, line: 265, type: !157)
!9967 = !DILocalVariable(name: "src", scope: !9959, file: !9695, line: 266, type: !336)
!9968 = !DILocation(line: 0, scope: !9959)
!9969 = !DILocation(line: 268, column: 21, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9959, file: !9695, line: 268, column: 6)
!9971 = !DILocation(line: 268, column: 28, scope: !9970)
!9972 = !DILocation(line: 268, column: 6, scope: !9959)
!9973 = !DILocation(line: 280, column: 12, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9970, file: !9695, line: 278, column: 9)
!9975 = !DILocation(line: 280, column: 3, scope: !9974)
!9976 = !DILocation(line: 275, column: 5, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !9695, line: 274, column: 17)
!9978 = distinct !DILexicalBlock(scope: !9970, file: !9695, line: 268, column: 33)
!9979 = !DILocation(line: 276, column: 14, scope: !9977)
!9980 = !DILocation(line: 276, column: 4, scope: !9977)
!9981 = !DILocation(line: 276, column: 12, scope: !9977)
!9982 = !DILocation(line: 274, column: 12, scope: !9978)
!9983 = !DILocation(line: 274, column: 3, scope: !9978)
!9984 = distinct !{!9984, !9983, !9985}
!9985 = !DILocation(line: 277, column: 3, scope: !9978)
!9986 = !DILocation(line: 281, column: 12, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9974, file: !9695, line: 280, column: 17)
!9988 = !DILocation(line: 281, column: 10, scope: !9987)
!9989 = !DILocation(line: 282, column: 8, scope: !9987)
!9990 = !DILocation(line: 283, column: 7, scope: !9987)
!9991 = !DILocation(line: 284, column: 5, scope: !9987)
!9992 = distinct !{!9992, !9975, !9993}
!9993 = !DILocation(line: 285, column: 3, scope: !9974)
!9994 = !DILocation(line: 288, column: 2, scope: !9959)
!9995 = distinct !DISubprogram(name: "memcpy", scope: !9695, file: !9695, line: 298, type: !9996, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !10000)
!9996 = !DISubroutineType(types: !9997)
!9997 = !{!102, !9998, !9999, !153}
!9998 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9999 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!10000 = !{!10001, !10002, !10003, !10004, !10005}
!10001 = !DILocalVariable(name: "d", arg: 1, scope: !9995, file: !9695, line: 298, type: !9998)
!10002 = !DILocalVariable(name: "s", arg: 2, scope: !9995, file: !9695, line: 298, type: !9999)
!10003 = !DILocalVariable(name: "n", arg: 3, scope: !9995, file: !9695, line: 298, type: !153)
!10004 = !DILocalVariable(name: "d_byte", scope: !9995, file: !9695, line: 302, type: !1858)
!10005 = !DILocalVariable(name: "s_byte", scope: !9995, file: !9695, line: 303, type: !3853)
!10006 = !DILocation(line: 0, scope: !9995)
!10007 = !DILocation(line: 337, column: 11, scope: !9995)
!10008 = !DILocation(line: 337, column: 2, scope: !9995)
!10009 = !DILocation(line: 338, column: 25, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9995, file: !9695, line: 337, column: 16)
!10011 = !DILocation(line: 338, column: 17, scope: !10010)
!10012 = !DILocation(line: 338, column: 11, scope: !10010)
!10013 = !DILocation(line: 338, column: 15, scope: !10010)
!10014 = !DILocation(line: 339, column: 4, scope: !10010)
!10015 = distinct !{!10015, !10008, !10016}
!10016 = !DILocation(line: 340, column: 2, scope: !9995)
!10017 = !DILocation(line: 342, column: 2, scope: !9995)
!10018 = distinct !DISubprogram(name: "memset", scope: !9695, file: !9695, line: 352, type: !10019, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !10021)
!10019 = !DISubroutineType(types: !10020)
!10020 = !{!102, !102, !103, !153}
!10021 = !{!10022, !10023, !10024, !10025, !10026}
!10022 = !DILocalVariable(name: "buf", arg: 1, scope: !10018, file: !9695, line: 352, type: !102)
!10023 = !DILocalVariable(name: "c", arg: 2, scope: !10018, file: !9695, line: 352, type: !103)
!10024 = !DILocalVariable(name: "n", arg: 3, scope: !10018, file: !9695, line: 352, type: !153)
!10025 = !DILocalVariable(name: "d_byte", scope: !10018, file: !9695, line: 356, type: !1858)
!10026 = !DILocalVariable(name: "c_byte", scope: !10018, file: !9695, line: 357, type: !165)
!10027 = !DILocation(line: 0, scope: !10018)
!10028 = !DILocation(line: 357, column: 25, scope: !10018)
!10029 = !DILocation(line: 389, column: 11, scope: !10018)
!10030 = !DILocation(line: 389, column: 2, scope: !10018)
!10031 = !DILocation(line: 390, column: 11, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10018, file: !9695, line: 389, column: 16)
!10033 = !DILocation(line: 390, column: 15, scope: !10032)
!10034 = !DILocation(line: 391, column: 4, scope: !10032)
!10035 = distinct !{!10035, !10030, !10036}
!10036 = !DILocation(line: 392, column: 2, scope: !10018)
!10037 = !DILocation(line: 394, column: 2, scope: !10018)
!10038 = distinct !DISubprogram(name: "memchr", scope: !9695, file: !9695, line: 404, type: !10039, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3850, retainedNodes: !10041)
!10039 = !DISubroutineType(types: !10040)
!10040 = !{!102, !13, !103, !153}
!10041 = !{!10042, !10043, !10044, !10045}
!10042 = !DILocalVariable(name: "s", arg: 1, scope: !10038, file: !9695, line: 404, type: !13)
!10043 = !DILocalVariable(name: "c", arg: 2, scope: !10038, file: !9695, line: 404, type: !103)
!10044 = !DILocalVariable(name: "n", arg: 3, scope: !10038, file: !9695, line: 404, type: !153)
!10045 = !DILocalVariable(name: "p", scope: !10046, file: !9695, line: 407, type: !3853)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !9695, line: 406, column: 14)
!10047 = distinct !DILexicalBlock(scope: !10038, file: !9695, line: 406, column: 6)
!10048 = !DILocation(line: 0, scope: !10038)
!10049 = !DILocation(line: 406, column: 8, scope: !10047)
!10050 = !DILocation(line: 406, column: 6, scope: !10038)
!10051 = !DILocation(line: 409, column: 3, scope: !10046)
!10052 = !DILocation(line: 0, scope: !10046)
!10053 = !DILocation(line: 410, column: 8, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !9695, line: 410, column: 8)
!10055 = distinct !DILexicalBlock(scope: !10046, file: !9695, line: 409, column: 6)
!10056 = !DILocation(line: 410, column: 13, scope: !10054)
!10057 = !DILocation(line: 410, column: 8, scope: !10055)
!10058 = distinct !{!10058, !10051, !10059}
!10059 = !DILocation(line: 414, column: 20, scope: !10046)
!10060 = !DILocation(line: 417, column: 2, scope: !10038)
!10061 = !DILocation(line: 418, column: 1, scope: !10038)
!10062 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1066, file: !1066, line: 23, type: !5420, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10063)
!10063 = !{!10064}
!10064 = !DILocalVariable(name: "hook", arg: 1, scope: !10062, file: !1066, line: 23, type: !799)
!10065 = !DILocation(line: 0, scope: !10062)
!10066 = !DILocation(line: 25, column: 15, scope: !10062)
!10067 = !DILocation(line: 26, column: 1, scope: !10062)
!10068 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1066, file: !1066, line: 14, type: !800, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10069)
!10069 = !{!10070}
!10070 = !DILocalVariable(name: "c", arg: 1, scope: !10068, file: !1066, line: 14, type: !103)
!10071 = !DILocation(line: 0, scope: !10068)
!10072 = !DILocation(line: 18, column: 2, scope: !10068)
!10073 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1066, file: !1066, line: 28, type: !10074, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10076)
!10074 = !DISubroutineType(types: !10075)
!10075 = !{!103, !103, !1062}
!10076 = !{!10077, !10078}
!10077 = !DILocalVariable(name: "c", arg: 1, scope: !10073, file: !1066, line: 28, type: !103)
!10078 = !DILocalVariable(name: "stream", arg: 2, scope: !10073, file: !1066, line: 28, type: !1062)
!10079 = !DILocation(line: 0, scope: !10073)
!10080 = !DILocation(line: 30, column: 27, scope: !10073)
!10081 = !DILocation(line: 30, column: 50, scope: !10073)
!10082 = !DILocation(line: 30, column: 9, scope: !10073)
!10083 = !DILocation(line: 30, column: 2, scope: !10073)
!10084 = distinct !DISubprogram(name: "fputc", scope: !1066, file: !1066, line: 41, type: !10074, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10085)
!10085 = !{!10086, !10087}
!10086 = !DILocalVariable(name: "c", arg: 1, scope: !10084, file: !1066, line: 41, type: !103)
!10087 = !DILocalVariable(name: "stream", arg: 2, scope: !10084, file: !1066, line: 41, type: !1062)
!10088 = !DILocation(line: 0, scope: !10084)
!10089 = !DILocation(line: 43, column: 9, scope: !10084)
!10090 = !DILocation(line: 43, column: 2, scope: !10084)
!10091 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10092, file: !10092, line: 72, type: !10074, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10093)
!10092 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!10093 = !{!10094, !10095}
!10094 = !DILocalVariable(name: "c", arg: 1, scope: !10091, file: !10092, line: 72, type: !103)
!10095 = !DILocalVariable(name: "stream", arg: 2, scope: !10091, file: !10092, line: 72, type: !1062)
!10096 = !DILocation(line: 0, scope: !10091)
!10097 = !DILocation(line: 81, column: 2, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10091, file: !10092, line: 81, column: 2)
!10099 = !{i64 2155131664}
!10100 = !DILocation(line: 82, column: 9, scope: !10091)
!10101 = !DILocation(line: 82, column: 2, scope: !10091)
!10102 = distinct !DISubprogram(name: "fputs", scope: !1066, file: !1066, line: 46, type: !10103, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10106)
!10103 = !DISubroutineType(types: !10104)
!10104 = !{!103, !9699, !10105}
!10105 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1062)
!10106 = !{!10107, !10108, !10109, !10110}
!10107 = !DILocalVariable(name: "s", arg: 1, scope: !10102, file: !1066, line: 46, type: !9699)
!10108 = !DILocalVariable(name: "stream", arg: 2, scope: !10102, file: !1066, line: 46, type: !10105)
!10109 = !DILocalVariable(name: "len", scope: !10102, file: !1066, line: 48, type: !103)
!10110 = !DILocalVariable(name: "ret", scope: !10102, file: !1066, line: 49, type: !103)
!10111 = !DILocation(line: 0, scope: !10102)
!10112 = !DILocation(line: 48, column: 12, scope: !10102)
!10113 = !DILocation(line: 51, column: 8, scope: !10102)
!10114 = !DILocation(line: 53, column: 13, scope: !10102)
!10115 = !DILocation(line: 53, column: 9, scope: !10102)
!10116 = !DILocation(line: 53, column: 2, scope: !10102)
!10117 = distinct !DISubprogram(name: "fwrite", scope: !1066, file: !1066, line: 99, type: !10118, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10120)
!10118 = !DISubroutineType(types: !10119)
!10119 = !{!153, !9999, !153, !153, !10105}
!10120 = !{!10121, !10122, !10123, !10124}
!10121 = !DILocalVariable(name: "ptr", arg: 1, scope: !10117, file: !1066, line: 99, type: !9999)
!10122 = !DILocalVariable(name: "size", arg: 2, scope: !10117, file: !1066, line: 99, type: !153)
!10123 = !DILocalVariable(name: "nitems", arg: 3, scope: !10117, file: !1066, line: 99, type: !153)
!10124 = !DILocalVariable(name: "stream", arg: 4, scope: !10117, file: !1066, line: 100, type: !10105)
!10125 = !DILocation(line: 0, scope: !10117)
!10126 = !DILocation(line: 102, column: 9, scope: !10117)
!10127 = !DILocation(line: 102, column: 2, scope: !10117)
!10128 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10092, file: !10092, line: 96, type: !10118, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10129)
!10129 = !{!10130, !10131, !10132, !10133}
!10130 = !DILocalVariable(name: "ptr", arg: 1, scope: !10128, file: !10092, line: 96, type: !9999)
!10131 = !DILocalVariable(name: "size", arg: 2, scope: !10128, file: !10092, line: 96, type: !153)
!10132 = !DILocalVariable(name: "nitems", arg: 3, scope: !10128, file: !10092, line: 96, type: !153)
!10133 = !DILocalVariable(name: "stream", arg: 4, scope: !10128, file: !10092, line: 96, type: !10105)
!10134 = !DILocation(line: 0, scope: !10128)
!10135 = !DILocation(line: 107, column: 2, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10128, file: !10092, line: 107, column: 2)
!10137 = !{i64 2155131768}
!10138 = !DILocation(line: 108, column: 9, scope: !10128)
!10139 = !DILocation(line: 108, column: 2, scope: !10128)
!10140 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1066, file: !1066, line: 56, type: !10118, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10141)
!10141 = !{!10142, !10143, !10144, !10145, !10146, !10147, !10148, !10149}
!10142 = !DILocalVariable(name: "ptr", arg: 1, scope: !10140, file: !1066, line: 56, type: !9999)
!10143 = !DILocalVariable(name: "size", arg: 2, scope: !10140, file: !1066, line: 56, type: !153)
!10144 = !DILocalVariable(name: "nitems", arg: 3, scope: !10140, file: !1066, line: 57, type: !153)
!10145 = !DILocalVariable(name: "stream", arg: 4, scope: !10140, file: !1066, line: 57, type: !10105)
!10146 = !DILocalVariable(name: "i", scope: !10140, file: !1066, line: 59, type: !153)
!10147 = !DILocalVariable(name: "j", scope: !10140, file: !1066, line: 60, type: !153)
!10148 = !DILocalVariable(name: "p", scope: !10140, file: !1066, line: 61, type: !3853)
!10149 = !DILabel(scope: !10140, name: "done", file: !1066, line: 82)
!10150 = !DILocation(line: 0, scope: !10140)
!10151 = !DILocation(line: 63, column: 14, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10140, file: !1066, line: 63, column: 6)
!10153 = !DILocation(line: 63, column: 24, scope: !10152)
!10154 = !DILocation(line: 72, column: 3, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10140, file: !1066, line: 70, column: 5)
!10156 = !DILocation(line: 0, scope: !10155)
!10157 = !DILocation(line: 73, column: 8, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10159, file: !1066, line: 73, column: 8)
!10159 = distinct !DILexicalBlock(scope: !10155, file: !1066, line: 72, column: 6)
!10160 = !DILocation(line: 73, column: 29, scope: !10158)
!10161 = !DILocation(line: 73, column: 27, scope: !10158)
!10162 = !DILocation(line: 73, column: 21, scope: !10158)
!10163 = !DILocation(line: 73, column: 33, scope: !10158)
!10164 = !DILocation(line: 73, column: 8, scope: !10159)
!10165 = !DILocation(line: 76, column: 5, scope: !10159)
!10166 = !DILocation(line: 77, column: 14, scope: !10155)
!10167 = !DILocation(line: 77, column: 3, scope: !10159)
!10168 = distinct !{!10168, !10154, !10169}
!10169 = !DILocation(line: 77, column: 17, scope: !10155)
!10170 = !DILocation(line: 79, column: 4, scope: !10155)
!10171 = !DILocation(line: 80, column: 13, scope: !10140)
!10172 = !DILocation(line: 80, column: 2, scope: !10155)
!10173 = distinct !{!10173, !10174, !10175}
!10174 = !DILocation(line: 70, column: 2, scope: !10140)
!10175 = !DILocation(line: 80, column: 16, scope: !10140)
!10176 = !DILocation(line: 82, column: 1, scope: !10140)
!10177 = !DILocation(line: 83, column: 17, scope: !10140)
!10178 = !DILocation(line: 83, column: 2, scope: !10140)
!10179 = !DILocation(line: 84, column: 1, scope: !10140)
!10180 = distinct !DISubprogram(name: "puts", scope: !1066, file: !1066, line: 106, type: !10181, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1059, retainedNodes: !10183)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!103, !336}
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "s", arg: 1, scope: !10180, file: !1066, line: 106, type: !336)
!10185 = !DILocation(line: 0, scope: !10180)
!10186 = !DILocation(line: 108, column: 6, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10180, file: !1066, line: 108, column: 6)
!10188 = !DILocation(line: 108, column: 23, scope: !10187)
!10189 = !DILocation(line: 108, column: 6, scope: !10180)
!10190 = !DILocation(line: 112, column: 9, scope: !10180)
!10191 = !DILocation(line: 112, column: 29, scope: !10180)
!10192 = !DILocation(line: 112, column: 2, scope: !10180)
!10193 = !DILocation(line: 113, column: 1, scope: !10180)
!10194 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1262, file: !1262, line: 12, type: !10195, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10201)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!10197, !109}
!10197 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !10198)
!10198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !10199)
!10199 = !{!10200}
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10198, file: !105, line: 66, baseType: !104, size: 64)
!10201 = !{!10202, !10203}
!10202 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !10194, file: !1262, line: 12, type: !109)
!10203 = !DILocalVariable(name: "now_ticks", scope: !10194, file: !1262, line: 14, type: !106)
!10204 = !DILocation(line: 0, scope: !10194)
!10205 = !DILocation(line: 14, column: 22, scope: !10194)
!10206 = !DILocation(line: 16, column: 9, scope: !10194)
!10207 = !DILocation(line: 17, column: 1, scope: !10194)
!10208 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1262, file: !1262, line: 103, type: !10209, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10211)
!10209 = !DISubroutineType(types: !10210)
!10210 = !{!103, !1153, !13, !10197}
!10211 = !{!10212, !10213, !10214, !10215, !10216}
!10212 = !DILocalVariable(name: "chan", arg: 1, scope: !10208, file: !1262, line: 103, type: !1153)
!10213 = !DILocalVariable(name: "msg", arg: 2, scope: !10208, file: !1262, line: 103, type: !13)
!10214 = !DILocalVariable(name: "timeout", arg: 3, scope: !10208, file: !1262, line: 103, type: !10197)
!10215 = !DILocalVariable(name: "err", scope: !10208, file: !1262, line: 105, type: !103)
!10216 = !DILocalVariable(name: "end_ticks", scope: !10208, file: !1262, line: 106, type: !109)
!10217 = !DILocation(line: 0, scope: !10208)
!10218 = !DILocation(line: 106, column: 23, scope: !10208)
!10219 = !DILocation(line: 108, column: 2, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !1262, line: 108, column: 2)
!10221 = distinct !DILexicalBlock(scope: !10208, file: !1262, line: 108, column: 2)
!10222 = !DILocation(line: 108, column: 2, scope: !10221)
!10223 = !DILocation(line: 108, column: 2, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10220, file: !1262, line: 108, column: 2)
!10225 = !DILocation(line: 109, column: 2, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10227, file: !1262, line: 109, column: 2)
!10227 = distinct !DILexicalBlock(scope: !10208, file: !1262, line: 109, column: 2)
!10228 = !DILocation(line: 109, column: 2, scope: !10227)
!10229 = !DILocation(line: 109, column: 2, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10226, file: !1262, line: 109, column: 2)
!10231 = !DILocation(line: 110, column: 2, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10233, file: !1262, line: 110, column: 2)
!10233 = distinct !DILexicalBlock(scope: !10208, file: !1262, line: 110, column: 2)
!10234 = !DILocation(line: 110, column: 2, scope: !10233)
!10235 = !DILocation(line: 110, column: 2, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10232, file: !1262, line: 110, column: 2)
!10237 = !DILocation(line: 112, column: 12, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10208, file: !1262, line: 112, column: 6)
!10239 = !DILocation(line: 112, column: 22, scope: !10238)
!10240 = !DILocation(line: 112, column: 30, scope: !10238)
!10241 = !DILocation(line: 112, column: 61, scope: !10238)
!10242 = !DILocation(line: 112, column: 55, scope: !10238)
!10243 = !DILocation(line: 112, column: 34, scope: !10238)
!10244 = !DILocation(line: 112, column: 6, scope: !10208)
!10245 = !DILocation(line: 116, column: 27, scope: !10208)
!10246 = !DILocation(line: 116, column: 8, scope: !10208)
!10247 = !DILocation(line: 117, column: 6, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10208, file: !1262, line: 117, column: 6)
!10249 = !DILocation(line: 117, column: 6, scope: !10208)
!10250 = !DILocation(line: 121, column: 15, scope: !10208)
!10251 = !DILocation(line: 121, column: 35, scope: !10208)
!10252 = !DILocation(line: 121, column: 29, scope: !10208)
!10253 = !DILocation(line: 121, column: 2, scope: !10208)
!10254 = !DILocation(line: 123, column: 8, scope: !10208)
!10255 = !DILocation(line: 125, column: 23, scope: !10208)
!10256 = !DILocation(line: 125, column: 2, scope: !10208)
!10257 = !DILocation(line: 127, column: 2, scope: !10208)
!10258 = !DILocation(line: 128, column: 1, scope: !10208)
!10259 = distinct !DISubprogram(name: "k_mutex_lock", scope: !4485, file: !4485, line: 927, type: !10260, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10262)
!10260 = !DISubroutineType(types: !10261)
!10261 = !{!103, !1162, !10197}
!10262 = !{!10263, !10264}
!10263 = !DILocalVariable(name: "mutex", arg: 1, scope: !10259, file: !4485, line: 927, type: !1162)
!10264 = !DILocalVariable(name: "timeout", arg: 2, scope: !10259, file: !4485, line: 927, type: !10197)
!10265 = !DILocation(line: 0, scope: !10259)
!10266 = !DILocation(line: 936, column: 2, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10259, file: !4485, line: 936, column: 2)
!10268 = !{i64 2155073225}
!10269 = !DILocation(line: 937, column: 9, scope: !10259)
!10270 = !DILocation(line: 937, column: 2, scope: !10259)
!10271 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1262, file: !1262, line: 66, type: !10272, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10274)
!10272 = !DISubroutineType(types: !10273)
!10273 = !{!103, !1153, !109}
!10274 = !{!10275, !10276, !10277, !10278, !10279, !10281}
!10275 = !DILocalVariable(name: "chan", arg: 1, scope: !10271, file: !1262, line: 66, type: !1153)
!10276 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !10271, file: !1262, line: 66, type: !109)
!10277 = !DILocalVariable(name: "last_error", scope: !10271, file: !1262, line: 68, type: !103)
!10278 = !DILocalVariable(name: "err", scope: !10271, file: !1262, line: 68, type: !103)
!10279 = !DILocalVariable(name: "obs", scope: !10280, file: !1262, line: 70, type: !1259)
!10280 = distinct !DILexicalBlock(scope: !10271, file: !1262, line: 70, column: 2)
!10281 = !DILocalVariable(name: "obs", scope: !10282, file: !1262, line: 81, type: !1259)
!10282 = distinct !DILexicalBlock(scope: !10271, file: !1262, line: 81, column: 2)
!10283 = !DILocation(line: 0, scope: !10271)
!10284 = !DILocation(line: 70, column: 54, scope: !10280)
!10285 = !DILocation(line: 0, scope: !10280)
!10286 = !DILocation(line: 70, column: 65, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10280, file: !1262, line: 70, column: 2)
!10288 = !DILocation(line: 70, column: 70, scope: !10287)
!10289 = !DILocation(line: 70, column: 2, scope: !10280)
!10290 = !DILocation(line: 77, column: 2, scope: !10271)
!10291 = !DILocation(line: 81, column: 54, scope: !10282)
!10292 = !DILocation(line: 0, scope: !10282)
!10293 = !DILocation(line: 81, column: 65, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10282, file: !1262, line: 81, column: 2)
!10295 = !DILocation(line: 81, column: 70, scope: !10294)
!10296 = !DILocation(line: 81, column: 2, scope: !10282)
!10297 = !DILocation(line: 71, column: 15, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10299, file: !1262, line: 71, column: 7)
!10299 = distinct !DILexicalBlock(scope: !10287, file: !1262, line: 70, column: 86)
!10300 = !DILocation(line: 71, column: 23, scope: !10298)
!10301 = !DILocation(line: 71, column: 35, scope: !10298)
!10302 = !DILocation(line: 71, column: 44, scope: !10298)
!10303 = !DILocation(line: 71, column: 7, scope: !10299)
!10304 = !DILocation(line: 72, column: 4, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10298, file: !1262, line: 71, column: 54)
!10306 = !DILocation(line: 73, column: 3, scope: !10305)
!10307 = !DILocation(line: 70, column: 79, scope: !10287)
!10308 = distinct !{!10308, !10289, !10309}
!10309 = !DILocation(line: 74, column: 2, scope: !10280)
!10310 = !DILocation(line: 95, column: 41, scope: !10271)
!10311 = !DILocation(line: 95, column: 8, scope: !10271)
!10312 = !DILocation(line: 100, column: 2, scope: !10271)
!10313 = !DILocation(line: 82, column: 15, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !1262, line: 82, column: 7)
!10315 = distinct !DILexicalBlock(scope: !10294, file: !1262, line: 81, column: 86)
!10316 = !DILocation(line: 82, column: 23, scope: !10314)
!10317 = !DILocation(line: 82, column: 35, scope: !10314)
!10318 = !DILocation(line: 82, column: 41, scope: !10314)
!10319 = !DILocation(line: 82, column: 7, scope: !10315)
!10320 = !DILocation(line: 83, column: 43, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10314, file: !1262, line: 82, column: 51)
!10322 = !DILocation(line: 83, column: 10, scope: !10321)
!10323 = !DILocation(line: 84, column: 4, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !1262, line: 84, column: 4)
!10325 = distinct !DILexicalBlock(scope: !10321, file: !1262, line: 84, column: 4)
!10326 = !DILocation(line: 84, column: 4, scope: !10325)
!10327 = !DILocation(line: 84, column: 4, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10324, file: !1262, line: 84, column: 4)
!10329 = !DILocation(line: 81, column: 79, scope: !10294)
!10330 = distinct !{!10330, !10296, !10331}
!10331 = !DILocation(line: 92, column: 2, scope: !10282)
!10332 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !4485, file: !4485, line: 944, type: !10333, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10335)
!10333 = !DISubroutineType(types: !10334)
!10334 = !{!103, !1162}
!10335 = !{!10336}
!10336 = !DILocalVariable(name: "mutex", arg: 1, scope: !10332, file: !4485, line: 944, type: !1162)
!10337 = !DILocation(line: 0, scope: !10332)
!10338 = !DILocation(line: 952, column: 2, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10332, file: !4485, line: 952, column: 2)
!10340 = !{i64 2155073293}
!10341 = !DILocation(line: 953, column: 9, scope: !10332)
!10342 = !DILocation(line: 953, column: 2, scope: !10332)
!10343 = distinct !DISubprogram(name: "_zbus_notify_runtime_listeners", scope: !1262, file: !1262, line: 20, type: !1151, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10344)
!10344 = !{!10345, !10346, !10347}
!10345 = !DILocalVariable(name: "chan", arg: 1, scope: !10343, file: !1262, line: 20, type: !1153)
!10346 = !DILocalVariable(name: "obs_nd", scope: !10343, file: !1262, line: 24, type: !1097)
!10347 = !DILocalVariable(name: "tmp", scope: !10343, file: !1262, line: 24, type: !1097)
!10348 = !DILocation(line: 0, scope: !10343)
!10349 = !DILocation(line: 22, column: 2, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !1262, line: 22, column: 2)
!10351 = distinct !DILexicalBlock(scope: !10343, file: !1262, line: 22, column: 2)
!10352 = !DILocation(line: 22, column: 2, scope: !10351)
!10353 = !DILocation(line: 22, column: 2, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10350, file: !1262, line: 22, column: 2)
!10355 = !DILocation(line: 26, column: 2, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10343, file: !1262, line: 26, column: 2)
!10357 = !DILocation(line: 0, scope: !10356)
!10358 = !DILocation(line: 30, column: 15, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !1262, line: 30, column: 7)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !1262, line: 26, column: 80)
!10361 = distinct !DILexicalBlock(scope: !10356, file: !1262, line: 26, column: 2)
!10362 = !DILocation(line: 30, column: 20, scope: !10359)
!10363 = !DILocation(line: 30, column: 28, scope: !10359)
!10364 = !DILocation(line: 30, column: 45, scope: !10359)
!10365 = !DILocation(line: 30, column: 54, scope: !10359)
!10366 = !DILocation(line: 30, column: 7, scope: !10360)
!10367 = !DILocation(line: 31, column: 4, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10359, file: !1262, line: 30, column: 64)
!10369 = !DILocation(line: 32, column: 3, scope: !10368)
!10370 = !DILocation(line: 26, column: 2, scope: !10361)
!10371 = !DILocation(line: 34, column: 1, scope: !10343)
!10372 = distinct !DISubprogram(name: "_zbus_notify_runtime_subscribers", scope: !1262, file: !1262, line: 36, type: !10272, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10373)
!10373 = !{!10374, !10375, !10376, !10377, !10378, !10379}
!10374 = !DILocalVariable(name: "chan", arg: 1, scope: !10372, file: !1262, line: 36, type: !1153)
!10375 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !10372, file: !1262, line: 37, type: !109)
!10376 = !DILocalVariable(name: "last_error", scope: !10372, file: !1262, line: 41, type: !103)
!10377 = !DILocalVariable(name: "err", scope: !10372, file: !1262, line: 41, type: !103)
!10378 = !DILocalVariable(name: "obs_nd", scope: !10372, file: !1262, line: 42, type: !1097)
!10379 = !DILocalVariable(name: "tmp", scope: !10372, file: !1262, line: 42, type: !1097)
!10380 = !DILocation(line: 0, scope: !10372)
!10381 = !DILocation(line: 39, column: 2, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !1262, line: 39, column: 2)
!10383 = distinct !DILexicalBlock(scope: !10372, file: !1262, line: 39, column: 2)
!10384 = !DILocation(line: 39, column: 2, scope: !10383)
!10385 = !DILocation(line: 39, column: 2, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10382, file: !1262, line: 39, column: 2)
!10387 = !DILocation(line: 44, column: 2, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10372, file: !1262, line: 44, column: 2)
!10389 = !DILocation(line: 48, column: 15, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10391, file: !1262, line: 48, column: 7)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !1262, line: 44, column: 80)
!10392 = distinct !DILexicalBlock(scope: !10388, file: !1262, line: 44, column: 2)
!10393 = !DILocation(line: 48, column: 20, scope: !10390)
!10394 = !DILocation(line: 48, column: 28, scope: !10390)
!10395 = !DILocation(line: 48, column: 45, scope: !10390)
!10396 = !DILocation(line: 48, column: 51, scope: !10390)
!10397 = !DILocation(line: 48, column: 7, scope: !10391)
!10398 = !DILocation(line: 50, column: 7, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10390, file: !1262, line: 48, column: 61)
!10400 = !DILocation(line: 49, column: 10, scope: !10399)
!10401 = !DILocation(line: 52, column: 4, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10403, file: !1262, line: 52, column: 4)
!10403 = distinct !DILexicalBlock(scope: !10399, file: !1262, line: 52, column: 4)
!10404 = !DILocation(line: 52, column: 4, scope: !10403)
!10405 = !DILocation(line: 52, column: 4, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10402, file: !1262, line: 52, column: 4)
!10407 = !DILocation(line: 44, column: 2, scope: !10392)
!10408 = !DILocation(line: 62, column: 2, scope: !10372)
!10409 = distinct !DISubprogram(name: "k_msgq_put", scope: !4485, file: !4485, line: 1129, type: !10410, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10412)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{!103, !1114, !13, !10197}
!10412 = !{!10413, !10414, !10415}
!10413 = !DILocalVariable(name: "msgq", arg: 1, scope: !10409, file: !4485, line: 1129, type: !1114)
!10414 = !DILocalVariable(name: "data", arg: 2, scope: !10409, file: !4485, line: 1129, type: !13)
!10415 = !DILocalVariable(name: "timeout", arg: 3, scope: !10409, file: !4485, line: 1129, type: !10197)
!10416 = !DILocation(line: 0, scope: !10409)
!10417 = !DILocation(line: 1139, column: 2, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10409, file: !4485, line: 1139, column: 2)
!10419 = !{i64 2155074041}
!10420 = !DILocation(line: 1140, column: 9, scope: !10409)
!10421 = !DILocation(line: 1140, column: 2, scope: !10409)
!10422 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !289, file: !289, line: 231, type: !10423, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10425)
!10423 = !DISubroutineType(types: !10424)
!10424 = !{!1256, !1251}
!10425 = !{!10426}
!10426 = !DILocalVariable(name: "list", arg: 1, scope: !10422, file: !289, line: 231, type: !1251)
!10427 = !DILocation(line: 0, scope: !10422)
!10428 = !DILocation(line: 233, column: 15, scope: !10422)
!10429 = !DILocation(line: 233, column: 2, scope: !10422)
!10430 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !289, file: !289, line: 285, type: !10431, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10433)
!10431 = !DISubroutineType(types: !10432)
!10432 = !{!1256, !1256}
!10433 = !{!10434}
!10434 = !DILocalVariable(name: "node", arg: 1, scope: !10430, file: !289, line: 285, type: !1256)
!10435 = !DILocation(line: 0, scope: !10430)
!10436 = !DILocation(line: 285, column: 1, scope: !10430)
!10437 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !289, file: !289, line: 274, type: !10431, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10438)
!10438 = !{!10439}
!10439 = !DILocalVariable(name: "node", arg: 1, scope: !10437, file: !289, line: 274, type: !1256)
!10440 = !DILocation(line: 0, scope: !10437)
!10441 = !DILocation(line: 274, column: 1, scope: !10437)
!10442 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !289, file: !289, line: 204, type: !10431, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10443)
!10443 = !{!10444}
!10444 = !DILocalVariable(name: "node", arg: 1, scope: !10442, file: !289, line: 204, type: !1256)
!10445 = !DILocation(line: 0, scope: !10442)
!10446 = !DILocation(line: 206, column: 15, scope: !10442)
!10447 = !DILocation(line: 206, column: 2, scope: !10442)
!10448 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1262, file: !1262, line: 130, type: !10449, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10451)
!10449 = !DISubroutineType(types: !10450)
!10450 = !{!103, !1153, !102, !10197}
!10451 = !{!10452, !10453, !10454, !10455}
!10452 = !DILocalVariable(name: "chan", arg: 1, scope: !10448, file: !1262, line: 130, type: !1153)
!10453 = !DILocalVariable(name: "msg", arg: 2, scope: !10448, file: !1262, line: 130, type: !102)
!10454 = !DILocalVariable(name: "timeout", arg: 3, scope: !10448, file: !1262, line: 130, type: !10197)
!10455 = !DILocalVariable(name: "err", scope: !10448, file: !1262, line: 132, type: !103)
!10456 = !DILocation(line: 0, scope: !10448)
!10457 = !DILocation(line: 134, column: 2, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10459, file: !1262, line: 134, column: 2)
!10459 = distinct !DILexicalBlock(scope: !10448, file: !1262, line: 134, column: 2)
!10460 = !DILocation(line: 134, column: 2, scope: !10459)
!10461 = !DILocation(line: 134, column: 2, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10458, file: !1262, line: 134, column: 2)
!10463 = !DILocation(line: 135, column: 2, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10465, file: !1262, line: 135, column: 2)
!10465 = distinct !DILexicalBlock(scope: !10448, file: !1262, line: 135, column: 2)
!10466 = !DILocation(line: 135, column: 2, scope: !10465)
!10467 = !DILocation(line: 135, column: 2, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10464, file: !1262, line: 135, column: 2)
!10469 = !DILocation(line: 136, column: 2, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10471, file: !1262, line: 136, column: 2)
!10471 = distinct !DILexicalBlock(scope: !10448, file: !1262, line: 136, column: 2)
!10472 = !DILocation(line: 136, column: 2, scope: !10471)
!10473 = !DILocation(line: 136, column: 2, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10470, file: !1262, line: 136, column: 2)
!10475 = !DILocation(line: 138, column: 27, scope: !10448)
!10476 = !DILocation(line: 138, column: 8, scope: !10448)
!10477 = !DILocation(line: 139, column: 6, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10448, file: !1262, line: 139, column: 6)
!10479 = !DILocation(line: 139, column: 6, scope: !10448)
!10480 = !DILocation(line: 143, column: 20, scope: !10448)
!10481 = !DILocation(line: 143, column: 35, scope: !10448)
!10482 = !DILocation(line: 143, column: 29, scope: !10448)
!10483 = !DILocation(line: 143, column: 2, scope: !10448)
!10484 = !DILocation(line: 145, column: 30, scope: !10448)
!10485 = !DILocation(line: 145, column: 9, scope: !10448)
!10486 = !DILocation(line: 145, column: 2, scope: !10448)
!10487 = !DILocation(line: 146, column: 1, scope: !10448)
!10488 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1262, file: !1262, line: 148, type: !10489, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10491)
!10489 = !DISubroutineType(types: !10490)
!10490 = !{!103, !1153, !10197}
!10491 = !{!10492, !10493, !10494, !10495}
!10492 = !DILocalVariable(name: "chan", arg: 1, scope: !10488, file: !1262, line: 148, type: !1153)
!10493 = !DILocalVariable(name: "timeout", arg: 2, scope: !10488, file: !1262, line: 148, type: !10197)
!10494 = !DILocalVariable(name: "err", scope: !10488, file: !1262, line: 150, type: !103)
!10495 = !DILocalVariable(name: "end_ticks", scope: !10488, file: !1262, line: 151, type: !109)
!10496 = !DILocation(line: 0, scope: !10488)
!10497 = !DILocation(line: 151, column: 23, scope: !10488)
!10498 = !DILocation(line: 153, column: 2, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !1262, line: 153, column: 2)
!10500 = distinct !DILexicalBlock(scope: !10488, file: !1262, line: 153, column: 2)
!10501 = !DILocation(line: 153, column: 2, scope: !10500)
!10502 = !DILocation(line: 153, column: 2, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10499, file: !1262, line: 153, column: 2)
!10504 = !DILocation(line: 154, column: 2, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !1262, line: 154, column: 2)
!10506 = distinct !DILexicalBlock(scope: !10488, file: !1262, line: 154, column: 2)
!10507 = !DILocation(line: 154, column: 2, scope: !10506)
!10508 = !DILocation(line: 154, column: 2, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10505, file: !1262, line: 154, column: 2)
!10510 = !DILocation(line: 156, column: 27, scope: !10488)
!10511 = !DILocation(line: 156, column: 8, scope: !10488)
!10512 = !DILocation(line: 157, column: 6, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10488, file: !1262, line: 157, column: 6)
!10514 = !DILocation(line: 157, column: 6, scope: !10488)
!10515 = !DILocation(line: 161, column: 8, scope: !10488)
!10516 = !DILocation(line: 163, column: 23, scope: !10488)
!10517 = !DILocation(line: 163, column: 2, scope: !10488)
!10518 = !DILocation(line: 165, column: 2, scope: !10488)
!10519 = !DILocation(line: 166, column: 1, scope: !10488)
!10520 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1262, file: !1262, line: 168, type: !10489, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10521)
!10521 = !{!10522, !10523, !10524}
!10522 = !DILocalVariable(name: "chan", arg: 1, scope: !10520, file: !1262, line: 168, type: !1153)
!10523 = !DILocalVariable(name: "timeout", arg: 2, scope: !10520, file: !1262, line: 168, type: !10197)
!10524 = !DILocalVariable(name: "err", scope: !10520, file: !1262, line: 173, type: !103)
!10525 = !DILocation(line: 0, scope: !10520)
!10526 = !DILocation(line: 170, column: 2, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !1262, line: 170, column: 2)
!10528 = distinct !DILexicalBlock(scope: !10520, file: !1262, line: 170, column: 2)
!10529 = !DILocation(line: 170, column: 2, scope: !10528)
!10530 = !DILocation(line: 170, column: 2, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10527, file: !1262, line: 170, column: 2)
!10532 = !DILocation(line: 171, column: 2, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10534, file: !1262, line: 171, column: 2)
!10534 = distinct !DILexicalBlock(scope: !10520, file: !1262, line: 171, column: 2)
!10535 = !DILocation(line: 171, column: 2, scope: !10534)
!10536 = !DILocation(line: 171, column: 2, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10533, file: !1262, line: 171, column: 2)
!10538 = !DILocation(line: 173, column: 31, scope: !10520)
!10539 = !DILocation(line: 173, column: 12, scope: !10520)
!10540 = !DILocation(line: 180, column: 1, scope: !10520)
!10541 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1262, file: !1262, line: 182, type: !10542, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10544)
!10542 = !DISubroutineType(types: !10543)
!10543 = !{!103, !1153}
!10544 = !{!10545, !10546}
!10545 = !DILocalVariable(name: "chan", arg: 1, scope: !10541, file: !1262, line: 182, type: !1153)
!10546 = !DILocalVariable(name: "err", scope: !10541, file: !1262, line: 187, type: !103)
!10547 = !DILocation(line: 0, scope: !10541)
!10548 = !DILocation(line: 184, column: 2, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10550, file: !1262, line: 184, column: 2)
!10550 = distinct !DILexicalBlock(scope: !10541, file: !1262, line: 184, column: 2)
!10551 = !DILocation(line: 184, column: 2, scope: !10550)
!10552 = !DILocation(line: 184, column: 2, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10549, file: !1262, line: 184, column: 2)
!10554 = !DILocation(line: 185, column: 2, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !1262, line: 185, column: 2)
!10556 = distinct !DILexicalBlock(scope: !10541, file: !1262, line: 185, column: 2)
!10557 = !DILocation(line: 185, column: 2, scope: !10556)
!10558 = !DILocation(line: 185, column: 2, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10555, file: !1262, line: 185, column: 2)
!10560 = !DILocation(line: 187, column: 33, scope: !10541)
!10561 = !DILocation(line: 187, column: 12, scope: !10541)
!10562 = !DILocation(line: 189, column: 2, scope: !10541)
!10563 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1262, file: !1262, line: 192, type: !10564, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10567)
!10564 = !DISubroutineType(types: !10565)
!10565 = !{!103, !1107, !10566, !10197}
!10566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!10567 = !{!10568, !10569, !10570}
!10568 = !DILocalVariable(name: "sub", arg: 1, scope: !10563, file: !1262, line: 192, type: !1107)
!10569 = !DILocalVariable(name: "chan", arg: 2, scope: !10563, file: !1262, line: 192, type: !10566)
!10570 = !DILocalVariable(name: "timeout", arg: 3, scope: !10563, file: !1262, line: 193, type: !10197)
!10571 = !DILocation(line: 0, scope: !10563)
!10572 = !DILocation(line: 195, column: 2, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !1262, line: 195, column: 2)
!10574 = distinct !DILexicalBlock(scope: !10563, file: !1262, line: 195, column: 2)
!10575 = !DILocation(line: 195, column: 2, scope: !10574)
!10576 = !DILocation(line: 195, column: 2, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10573, file: !1262, line: 195, column: 2)
!10578 = !DILocation(line: 196, column: 2, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !1262, line: 196, column: 2)
!10580 = distinct !DILexicalBlock(scope: !10563, file: !1262, line: 196, column: 2)
!10581 = !DILocation(line: 196, column: 2, scope: !10580)
!10582 = !DILocation(line: 196, column: 2, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !1262, line: 196, column: 2)
!10584 = !DILocation(line: 197, column: 2, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !1262, line: 197, column: 2)
!10586 = distinct !DILexicalBlock(scope: !10563, file: !1262, line: 197, column: 2)
!10587 = !DILocation(line: 197, column: 2, scope: !10586)
!10588 = !DILocation(line: 197, column: 2, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10585, file: !1262, line: 197, column: 2)
!10590 = !DILocation(line: 199, column: 11, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10563, file: !1262, line: 199, column: 6)
!10592 = !DILocation(line: 199, column: 17, scope: !10591)
!10593 = !DILocation(line: 199, column: 6, scope: !10563)
!10594 = !DILocation(line: 203, column: 32, scope: !10563)
!10595 = !DILocation(line: 203, column: 9, scope: !10563)
!10596 = !DILocation(line: 203, column: 2, scope: !10563)
!10597 = !DILocation(line: 204, column: 1, scope: !10563)
!10598 = distinct !DISubprogram(name: "k_msgq_get", scope: !4485, file: !4485, line: 1147, type: !10599, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1094, retainedNodes: !10601)
!10599 = !DISubroutineType(types: !10600)
!10600 = !{!103, !1114, !102, !10197}
!10601 = !{!10602, !10603, !10604}
!10602 = !DILocalVariable(name: "msgq", arg: 1, scope: !10598, file: !4485, line: 1147, type: !1114)
!10603 = !DILocalVariable(name: "data", arg: 2, scope: !10598, file: !4485, line: 1147, type: !102)
!10604 = !DILocalVariable(name: "timeout", arg: 3, scope: !10598, file: !4485, line: 1147, type: !10197)
!10605 = !DILocation(line: 0, scope: !10598)
!10606 = !DILocation(line: 1157, column: 2, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10598, file: !4485, line: 1157, column: 2)
!10608 = !{i64 2155074109}
!10609 = !DILocation(line: 1158, column: 9, scope: !10598)
!10610 = !DILocation(line: 1158, column: 2, scope: !10598)
!10611 = distinct !DISubprogram(name: "zbus_runtime_obs_pool", scope: !1441, file: !1441, line: 14, type: !10612, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !2953)
!10612 = !DISubroutineType(types: !10613)
!10613 = !{!10614}
!10614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!10615 = !DILocation(line: 16, column: 2, scope: !10611)
!10616 = distinct !DISubprogram(name: "zbus_chan_add_obs", scope: !1441, file: !1441, line: 19, type: !10617, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10623)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!103, !1329, !1283, !10619}
!10619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !10620)
!10620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !10621)
!10621 = !{!10622}
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10620, file: !105, line: 66, baseType: !104, size: 64)
!10623 = !{!10624, !10625, !10626, !10627, !10628, !10629, !10630, !10631}
!10624 = !DILocalVariable(name: "chan", arg: 1, scope: !10616, file: !1441, line: 19, type: !1329)
!10625 = !DILocalVariable(name: "obs", arg: 2, scope: !10616, file: !1441, line: 19, type: !1283)
!10626 = !DILocalVariable(name: "timeout", arg: 3, scope: !10616, file: !1441, line: 20, type: !10619)
!10627 = !DILocalVariable(name: "err", scope: !10616, file: !1441, line: 22, type: !103)
!10628 = !DILocalVariable(name: "obs_nd", scope: !10616, file: !1441, line: 23, type: !1273)
!10629 = !DILocalVariable(name: "tmp", scope: !10616, file: !1441, line: 23, type: !1273)
!10630 = !DILocalVariable(name: "end_ticks", scope: !10616, file: !1441, line: 24, type: !109)
!10631 = !DILocalVariable(name: "static_obs", scope: !10632, file: !1441, line: 31, type: !1435)
!10632 = distinct !DILexicalBlock(scope: !10616, file: !1441, line: 31, column: 2)
!10633 = !DILocation(line: 0, scope: !10616)
!10634 = !DILocation(line: 23, column: 2, scope: !10616)
!10635 = !DILocation(line: 24, column: 23, scope: !10616)
!10636 = !DILocation(line: 26, column: 2, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !1441, line: 26, column: 2)
!10638 = distinct !DILexicalBlock(scope: !10616, file: !1441, line: 26, column: 2)
!10639 = !DILocation(line: 26, column: 2, scope: !10638)
!10640 = !DILocation(line: 26, column: 2, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10637, file: !1441, line: 26, column: 2)
!10642 = !DILocation(line: 27, column: 2, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10644, file: !1441, line: 27, column: 2)
!10644 = distinct !DILexicalBlock(scope: !10616, file: !1441, line: 27, column: 2)
!10645 = !DILocation(line: 27, column: 2, scope: !10644)
!10646 = !DILocation(line: 27, column: 2, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10643, file: !1441, line: 27, column: 2)
!10648 = !DILocation(line: 28, column: 2, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10650, file: !1441, line: 28, column: 2)
!10650 = distinct !DILexicalBlock(scope: !10616, file: !1441, line: 28, column: 2)
!10651 = !DILocation(line: 28, column: 2, scope: !10650)
!10652 = !DILocation(line: 28, column: 2, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10649, file: !1441, line: 28, column: 2)
!10654 = !DILocation(line: 31, column: 61, scope: !10632)
!10655 = !DILocation(line: 0, scope: !10632)
!10656 = !DILocation(line: 31, column: 72, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10632, file: !1441, line: 31, column: 2)
!10658 = !DILocation(line: 31, column: 84, scope: !10657)
!10659 = !DILocation(line: 31, column: 2, scope: !10632)
!10660 = distinct !{!10660, !10659, !10661}
!10661 = !DILocation(line: 36, column: 2, scope: !10632)
!10662 = !DILocation(line: 33, column: 19, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10664, file: !1441, line: 33, column: 7)
!10664 = distinct !DILexicalBlock(scope: !10657, file: !1441, line: 32, column: 21)
!10665 = !DILocation(line: 32, column: 7, scope: !10657)
!10666 = !DILocation(line: 33, column: 7, scope: !10664)
!10667 = !DILocation(line: 38, column: 27, scope: !10616)
!10668 = !DILocation(line: 38, column: 8, scope: !10616)
!10669 = !DILocation(line: 39, column: 6, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10616, file: !1441, line: 39, column: 6)
!10671 = !DILocation(line: 39, column: 6, scope: !10616)
!10672 = !DILocation(line: 44, column: 2, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10616, file: !1441, line: 44, column: 2)
!10674 = !DILocation(line: 45, column: 15, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10676, file: !1441, line: 45, column: 7)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !1441, line: 44, column: 80)
!10677 = distinct !DILexicalBlock(scope: !10673, file: !1441, line: 44, column: 2)
!10678 = !DILocation(line: 45, column: 19, scope: !10675)
!10679 = !DILocation(line: 45, column: 7, scope: !10676)
!10680 = !DILocation(line: 46, column: 25, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10675, file: !1441, line: 45, column: 27)
!10682 = !DILocation(line: 46, column: 4, scope: !10681)
!10683 = !DILocation(line: 48, column: 4, scope: !10681)
!10684 = !DILocation(line: 44, column: 2, scope: !10677)
!10685 = !DILocation(line: 52, column: 50, scope: !10616)
!10686 = !DILocation(line: 53, column: 11, scope: !10616)
!10687 = !DILocation(line: 52, column: 8, scope: !10616)
!10688 = !DILocation(line: 55, column: 6, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10616, file: !1441, line: 55, column: 6)
!10690 = !DILocation(line: 55, column: 6, scope: !10616)
!10691 = !DILocation(line: 56, column: 3, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10693, file: !1441, line: 56, column: 3)
!10693 = distinct !DILexicalBlock(scope: !10694, file: !1441, line: 56, column: 3)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !1441, line: 56, column: 3)
!10695 = distinct !DILexicalBlock(scope: !10696, file: !1441, line: 56, column: 3)
!10696 = distinct !DILexicalBlock(scope: !10689, file: !1441, line: 55, column: 11)
!10697 = !DILocation(line: 58, column: 24, scope: !10696)
!10698 = !DILocation(line: 58, column: 3, scope: !10696)
!10699 = !DILocation(line: 60, column: 3, scope: !10696)
!10700 = !DILocation(line: 63, column: 2, scope: !10616)
!10701 = !DILocation(line: 63, column: 10, scope: !10616)
!10702 = !DILocation(line: 63, column: 14, scope: !10616)
!10703 = !DILocation(line: 65, column: 25, scope: !10616)
!10704 = !DILocation(line: 65, column: 53, scope: !10616)
!10705 = !DILocation(line: 65, column: 2, scope: !10616)
!10706 = !DILocation(line: 67, column: 23, scope: !10616)
!10707 = !DILocation(line: 67, column: 2, scope: !10616)
!10708 = !DILocation(line: 69, column: 2, scope: !10616)
!10709 = !DILocation(line: 70, column: 1, scope: !10616)
!10710 = distinct !DISubprogram(name: "k_mutex_lock", scope: !4485, file: !4485, line: 927, type: !10711, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10713)
!10711 = !DISubroutineType(types: !10712)
!10712 = !{!103, !1338, !10619}
!10713 = !{!10714, !10715}
!10714 = !DILocalVariable(name: "mutex", arg: 1, scope: !10710, file: !4485, line: 927, type: !1338)
!10715 = !DILocalVariable(name: "timeout", arg: 2, scope: !10710, file: !4485, line: 927, type: !10619)
!10716 = !DILocation(line: 0, scope: !10710)
!10717 = !DILocation(line: 936, column: 2, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10710, file: !4485, line: 936, column: 2)
!10719 = !{i64 2155070513}
!10720 = !DILocation(line: 937, column: 9, scope: !10710)
!10721 = !DILocation(line: 937, column: 2, scope: !10710)
!10722 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !289, file: !289, line: 231, type: !10723, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10725)
!10723 = !DISubroutineType(types: !10724)
!10724 = !{!1432, !1427}
!10725 = !{!10726}
!10726 = !DILocalVariable(name: "list", arg: 1, scope: !10722, file: !289, line: 231, type: !1427)
!10727 = !DILocation(line: 0, scope: !10722)
!10728 = !DILocation(line: 233, column: 15, scope: !10722)
!10729 = !DILocation(line: 233, column: 2, scope: !10722)
!10730 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !289, file: !289, line: 285, type: !10731, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10733)
!10731 = !DISubroutineType(types: !10732)
!10732 = !{!1432, !1432}
!10733 = !{!10734}
!10734 = !DILocalVariable(name: "node", arg: 1, scope: !10730, file: !289, line: 285, type: !1432)
!10735 = !DILocation(line: 0, scope: !10730)
!10736 = !DILocation(line: 285, column: 1, scope: !10730)
!10737 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !4485, file: !4485, line: 944, type: !10738, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10740)
!10738 = !DISubroutineType(types: !10739)
!10739 = !{!103, !1338}
!10740 = !{!10741}
!10741 = !DILocalVariable(name: "mutex", arg: 1, scope: !10737, file: !4485, line: 944, type: !1338)
!10742 = !DILocation(line: 0, scope: !10737)
!10743 = !DILocation(line: 952, column: 2, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10737, file: !4485, line: 952, column: 2)
!10745 = !{i64 2155070581}
!10746 = !DILocation(line: 953, column: 9, scope: !10737)
!10747 = !DILocation(line: 953, column: 2, scope: !10737)
!10748 = distinct !DISubprogram(name: "sys_slist_append", scope: !289, file: !289, line: 311, type: !10749, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10751)
!10749 = !DISubroutineType(types: !10750)
!10750 = !{null, !1427, !1432}
!10751 = !{!10752, !10753}
!10752 = !DILocalVariable(name: "list", arg: 1, scope: !10748, file: !289, line: 311, type: !1427)
!10753 = !DILocalVariable(name: "node", arg: 2, scope: !10748, file: !289, line: 311, type: !1432)
!10754 = !DILocation(line: 0, scope: !10748)
!10755 = !DILocation(line: 311, column: 1, scope: !10748)
!10756 = !DILocation(line: 311, column: 1, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10748, file: !289, line: 311, column: 1)
!10758 = !DILocation(line: 311, column: 1, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10757, file: !289, line: 311, column: 1)
!10760 = !DILocation(line: 311, column: 1, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10757, file: !289, line: 311, column: 1)
!10762 = distinct !DISubprogram(name: "z_snode_next_set", scope: !289, file: !289, line: 209, type: !10763, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10765)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{null, !1432, !1432}
!10765 = !{!10766, !10767}
!10766 = !DILocalVariable(name: "parent", arg: 1, scope: !10762, file: !289, line: 209, type: !1432)
!10767 = !DILocalVariable(name: "child", arg: 2, scope: !10762, file: !289, line: 209, type: !1432)
!10768 = !DILocation(line: 0, scope: !10762)
!10769 = !DILocation(line: 211, column: 10, scope: !10762)
!10770 = !DILocation(line: 211, column: 15, scope: !10762)
!10771 = !DILocation(line: 212, column: 1, scope: !10762)
!10772 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !289, file: !289, line: 243, type: !10723, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10773)
!10773 = !{!10774}
!10774 = !DILocalVariable(name: "list", arg: 1, scope: !10772, file: !289, line: 243, type: !1427)
!10775 = !DILocation(line: 0, scope: !10772)
!10776 = !DILocation(line: 245, column: 15, scope: !10772)
!10777 = !DILocation(line: 245, column: 2, scope: !10772)
!10778 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !289, file: !289, line: 219, type: !10749, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10779)
!10779 = !{!10780, !10781}
!10780 = !DILocalVariable(name: "list", arg: 1, scope: !10778, file: !289, line: 219, type: !1427)
!10781 = !DILocalVariable(name: "node", arg: 2, scope: !10778, file: !289, line: 219, type: !1432)
!10782 = !DILocation(line: 0, scope: !10778)
!10783 = !DILocation(line: 221, column: 8, scope: !10778)
!10784 = !DILocation(line: 221, column: 13, scope: !10778)
!10785 = !DILocation(line: 222, column: 1, scope: !10778)
!10786 = distinct !DISubprogram(name: "z_slist_head_set", scope: !289, file: !289, line: 214, type: !10749, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10787)
!10787 = !{!10788, !10789}
!10788 = !DILocalVariable(name: "list", arg: 1, scope: !10786, file: !289, line: 214, type: !1427)
!10789 = !DILocalVariable(name: "node", arg: 2, scope: !10786, file: !289, line: 214, type: !1432)
!10790 = !DILocation(line: 0, scope: !10786)
!10791 = !DILocation(line: 216, column: 8, scope: !10786)
!10792 = !DILocation(line: 216, column: 13, scope: !10786)
!10793 = !DILocation(line: 217, column: 1, scope: !10786)
!10794 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !289, file: !289, line: 274, type: !10731, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10795)
!10795 = !{!10796}
!10796 = !DILocalVariable(name: "node", arg: 1, scope: !10794, file: !289, line: 274, type: !1432)
!10797 = !DILocation(line: 0, scope: !10794)
!10798 = !DILocation(line: 274, column: 1, scope: !10794)
!10799 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !289, file: !289, line: 204, type: !10731, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10800)
!10800 = !{!10801}
!10801 = !DILocalVariable(name: "node", arg: 1, scope: !10799, file: !289, line: 204, type: !1432)
!10802 = !DILocation(line: 0, scope: !10799)
!10803 = !DILocation(line: 206, column: 15, scope: !10799)
!10804 = !DILocation(line: 206, column: 2, scope: !10799)
!10805 = distinct !DISubprogram(name: "zbus_chan_rm_obs", scope: !1441, file: !1441, line: 72, type: !10617, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10806)
!10806 = !{!10807, !10808, !10809, !10810, !10811, !10812, !10813}
!10807 = !DILocalVariable(name: "chan", arg: 1, scope: !10805, file: !1441, line: 72, type: !1329)
!10808 = !DILocalVariable(name: "obs", arg: 2, scope: !10805, file: !1441, line: 72, type: !1283)
!10809 = !DILocalVariable(name: "timeout", arg: 3, scope: !10805, file: !1441, line: 73, type: !10619)
!10810 = !DILocalVariable(name: "err", scope: !10805, file: !1441, line: 75, type: !103)
!10811 = !DILocalVariable(name: "obs_nd", scope: !10805, file: !1441, line: 76, type: !1273)
!10812 = !DILocalVariable(name: "tmp", scope: !10805, file: !1441, line: 76, type: !1273)
!10813 = !DILocalVariable(name: "prev_obs_nd", scope: !10805, file: !1441, line: 77, type: !1273)
!10814 = !DILocation(line: 0, scope: !10805)
!10815 = !DILocation(line: 76, column: 2, scope: !10805)
!10816 = !DILocation(line: 79, column: 2, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !1441, line: 79, column: 2)
!10818 = distinct !DILexicalBlock(scope: !10805, file: !1441, line: 79, column: 2)
!10819 = !DILocation(line: 79, column: 2, scope: !10818)
!10820 = !DILocation(line: 79, column: 2, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10817, file: !1441, line: 79, column: 2)
!10822 = !DILocation(line: 80, column: 2, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10824, file: !1441, line: 80, column: 2)
!10824 = distinct !DILexicalBlock(scope: !10805, file: !1441, line: 80, column: 2)
!10825 = !DILocation(line: 80, column: 2, scope: !10824)
!10826 = !DILocation(line: 80, column: 2, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10823, file: !1441, line: 80, column: 2)
!10828 = !DILocation(line: 81, column: 2, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !1441, line: 81, column: 2)
!10830 = distinct !DILexicalBlock(scope: !10805, file: !1441, line: 81, column: 2)
!10831 = !DILocation(line: 81, column: 2, scope: !10830)
!10832 = !DILocation(line: 81, column: 2, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10829, file: !1441, line: 81, column: 2)
!10834 = !DILocation(line: 83, column: 27, scope: !10805)
!10835 = !DILocation(line: 83, column: 8, scope: !10805)
!10836 = !DILocation(line: 84, column: 6, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10805, file: !1441, line: 84, column: 6)
!10838 = !DILocation(line: 84, column: 6, scope: !10805)
!10839 = !DILocation(line: 88, column: 2, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10805, file: !1441, line: 88, column: 2)
!10841 = !DILocation(line: 89, column: 15, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !1441, line: 89, column: 7)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !1441, line: 88, column: 80)
!10844 = distinct !DILexicalBlock(scope: !10840, file: !1441, line: 88, column: 2)
!10845 = !DILocation(line: 89, column: 19, scope: !10842)
!10846 = !DILocation(line: 89, column: 7, scope: !10843)
!10847 = !DILocation(line: 88, column: 2, scope: !10844)
!10848 = !DILocation(line: 90, column: 60, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10842, file: !1441, line: 89, column: 27)
!10850 = !DILocation(line: 90, column: 4, scope: !10849)
!10851 = !DILocation(line: 93, column: 45, scope: !10849)
!10852 = !DILocation(line: 93, column: 4, scope: !10849)
!10853 = !DILocation(line: 95, column: 25, scope: !10849)
!10854 = !DILocation(line: 95, column: 4, scope: !10849)
!10855 = !DILocation(line: 97, column: 4, scope: !10849)
!10856 = !DILocation(line: 103, column: 23, scope: !10805)
!10857 = !DILocation(line: 103, column: 2, scope: !10805)
!10858 = !DILocation(line: 105, column: 2, scope: !10805)
!10859 = !DILocation(line: 106, column: 1, scope: !10805)
!10860 = distinct !DISubprogram(name: "sys_slist_remove", scope: !289, file: !289, line: 401, type: !10861, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !10863)
!10861 = !DISubroutineType(types: !10862)
!10862 = !{null, !1427, !1432, !1432}
!10863 = !{!10864, !10865, !10866}
!10864 = !DILocalVariable(name: "list", arg: 1, scope: !10860, file: !289, line: 401, type: !1427)
!10865 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10860, file: !289, line: 401, type: !1432)
!10866 = !DILocalVariable(name: "node", arg: 3, scope: !10860, file: !289, line: 401, type: !1432)
!10867 = !DILocation(line: 0, scope: !10860)
!10868 = !DILocation(line: 401, column: 1, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10860, file: !289, line: 401, column: 1)
!10870 = !DILocation(line: 0, scope: !10869)
!10871 = !DILocation(line: 401, column: 1, scope: !10860)
!10872 = !DILocation(line: 401, column: 1, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10869, file: !289, line: 401, column: 1)
!10874 = !DILocation(line: 401, column: 1, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10873, file: !289, line: 401, column: 1)
!10876 = !DILocation(line: 401, column: 1, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10875, file: !289, line: 401, column: 1)
!10878 = !DILocation(line: 401, column: 1, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10869, file: !289, line: 401, column: 1)
!10880 = !DILocation(line: 401, column: 1, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10879, file: !289, line: 401, column: 1)
!10882 = !DILocation(line: 401, column: 1, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10881, file: !289, line: 401, column: 1)
!10884 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1566, file: !1566, line: 368, type: !1619, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10885)
!10885 = !{!10886}
!10886 = !DILocalVariable(name: "dev", arg: 1, scope: !10884, file: !1566, line: 368, type: !1595)
!10887 = !DILocation(line: 0, scope: !10884)
!10888 = !DILocation(line: 370, column: 2, scope: !10884)
!10889 = !DILocation(line: 371, column: 1, scope: !10884)
!10890 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1566, file: !1566, line: 243, type: !10891, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10893)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{null, !103, !103, !1595}
!10893 = !{!10894, !10895, !10896, !10897, !10899}
!10894 = !DILocalVariable(name: "min", arg: 1, scope: !10890, file: !1566, line: 243, type: !103)
!10895 = !DILocalVariable(name: "max", arg: 2, scope: !10890, file: !1566, line: 243, type: !103)
!10896 = !DILocalVariable(name: "dev", arg: 3, scope: !10890, file: !1566, line: 243, type: !1595)
!10897 = !DILocalVariable(name: "data", scope: !10890, file: !1566, line: 245, type: !10898)
!10898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!10899 = !DILocalVariable(name: "line", scope: !10890, file: !1566, line: 246, type: !103)
!10900 = !DILocation(line: 0, scope: !10890)
!10901 = !DILocation(line: 245, column: 38, scope: !10890)
!10902 = !DILocation(line: 249, column: 24, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !1566, line: 249, column: 2)
!10904 = distinct !DILexicalBlock(scope: !10890, file: !1566, line: 249, column: 2)
!10905 = !DILocation(line: 249, column: 2, scope: !10904)
!10906 = !DILocation(line: 251, column: 7, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !1566, line: 251, column: 7)
!10908 = distinct !DILexicalBlock(scope: !10903, file: !1566, line: 249, column: 39)
!10909 = !DILocation(line: 251, column: 7, scope: !10908)
!10910 = !DILocation(line: 253, column: 4, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10907, file: !1566, line: 251, column: 36)
!10912 = !DILocation(line: 256, column: 24, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10911, file: !1566, line: 256, column: 8)
!10914 = !DILocation(line: 256, column: 9, scope: !10913)
!10915 = !DILocation(line: 256, column: 8, scope: !10911)
!10916 = !DILocation(line: 260, column: 43, scope: !10911)
!10917 = !DILocation(line: 260, column: 4, scope: !10911)
!10918 = !DILocation(line: 261, column: 3, scope: !10911)
!10919 = !DILocation(line: 249, column: 35, scope: !10903)
!10920 = distinct !{!10920, !10905, !10921}
!10921 = !DILocation(line: 262, column: 2, scope: !10904)
!10922 = !DILocation(line: 263, column: 1, scope: !10890)
!10923 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1566, file: !1566, line: 158, type: !800, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10924)
!10924 = !{!10925}
!10925 = !DILocalVariable(name: "line", arg: 1, scope: !10923, file: !1566, line: 158, type: !103)
!10926 = !DILocation(line: 0, scope: !10923)
!10927 = !DILocation(line: 170, column: 38, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10929, file: !1566, line: 160, column: 17)
!10929 = distinct !DILexicalBlock(scope: !10923, file: !1566, line: 160, column: 6)
!10930 = !DILocation(line: 170, column: 10, scope: !10928)
!10931 = !DILocation(line: 176, column: 1, scope: !10923)
!10932 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1566, file: !1566, line: 183, type: !10933, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10935)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{null, !103}
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "line", arg: 1, scope: !10932, file: !1566, line: 183, type: !103)
!10937 = !DILocation(line: 0, scope: !10932)
!10938 = !DILocation(line: 195, column: 28, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !1566, line: 185, column: 17)
!10940 = distinct !DILexicalBlock(scope: !10932, file: !1566, line: 185, column: 6)
!10941 = !DILocation(line: 195, column: 3, scope: !10939)
!10942 = !DILocation(line: 200, column: 1, scope: !10932)
!10943 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10944, file: !10944, line: 910, type: !8403, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10945)
!10944 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10945 = !{!10946}
!10946 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10943, file: !10944, line: 910, type: !108)
!10947 = !DILocation(line: 0, scope: !10943)
!10948 = !DILocation(line: 912, column: 3, scope: !10943)
!10949 = !DILocation(line: 913, column: 1, scope: !10943)
!10950 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10944, file: !10944, line: 834, type: !9590, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10951)
!10951 = !{!10952}
!10952 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10950, file: !10944, line: 834, type: !108)
!10953 = !DILocation(line: 0, scope: !10950)
!10954 = !DILocation(line: 836, column: 11, scope: !10950)
!10955 = !DILocation(line: 836, column: 40, scope: !10950)
!10956 = !DILocation(line: 836, column: 3, scope: !10950)
!10957 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1566, file: !1566, line: 304, type: !1619, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10958)
!10958 = !{!10959}
!10959 = !DILocalVariable(name: "dev", arg: 1, scope: !10957, file: !1566, line: 304, type: !1595)
!10960 = !DILocation(line: 0, scope: !10957)
!10961 = !DILocation(line: 306, column: 2, scope: !10957)
!10962 = !DILocation(line: 307, column: 1, scope: !10957)
!10963 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1566, file: !1566, line: 299, type: !1619, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10964)
!10964 = !{!10965}
!10965 = !DILocalVariable(name: "dev", arg: 1, scope: !10963, file: !1566, line: 299, type: !1595)
!10966 = !DILocation(line: 0, scope: !10963)
!10967 = !DILocation(line: 301, column: 2, scope: !10963)
!10968 = !DILocation(line: 302, column: 1, scope: !10963)
!10969 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1566, file: !1566, line: 294, type: !1619, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10970)
!10970 = !{!10971}
!10971 = !DILocalVariable(name: "dev", arg: 1, scope: !10969, file: !1566, line: 294, type: !1595)
!10972 = !DILocation(line: 0, scope: !10969)
!10973 = !DILocation(line: 296, column: 2, scope: !10969)
!10974 = !DILocation(line: 297, column: 1, scope: !10969)
!10975 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !1566, file: !1566, line: 397, type: !1619, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10976)
!10976 = !{!10977}
!10977 = !DILocalVariable(name: "dev", arg: 1, scope: !10975, file: !1566, line: 397, type: !1595)
!10978 = !DILocation(line: 0, scope: !10975)
!10979 = !DILocation(line: 399, column: 2, scope: !10975)
!10980 = !DILocation(line: 400, column: 1, scope: !10975)
!10981 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !1566, file: !1566, line: 392, type: !1619, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10982)
!10982 = !{!10983}
!10983 = !DILocalVariable(name: "dev", arg: 1, scope: !10981, file: !1566, line: 392, type: !1595)
!10984 = !DILocation(line: 0, scope: !10981)
!10985 = !DILocation(line: 394, column: 2, scope: !10981)
!10986 = !DILocation(line: 395, column: 1, scope: !10981)
!10987 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1566, file: !1566, line: 289, type: !1619, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10988)
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "dev", arg: 1, scope: !10987, file: !1566, line: 289, type: !1595)
!10990 = !DILocation(line: 0, scope: !10987)
!10991 = !DILocation(line: 291, column: 2, scope: !10987)
!10992 = !DILocation(line: 292, column: 1, scope: !10987)
!10993 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !1566, file: !1566, line: 387, type: !1619, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !10994)
!10994 = !{!10995}
!10995 = !DILocalVariable(name: "dev", arg: 1, scope: !10993, file: !1566, line: 387, type: !1595)
!10996 = !DILocation(line: 0, scope: !10993)
!10997 = !DILocation(line: 389, column: 2, scope: !10993)
!10998 = !DILocation(line: 390, column: 1, scope: !10993)
!10999 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !1566, file: !1566, line: 382, type: !1619, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11000)
!11000 = !{!11001}
!11001 = !DILocalVariable(name: "dev", arg: 1, scope: !10999, file: !1566, line: 382, type: !1595)
!11002 = !DILocation(line: 0, scope: !10999)
!11003 = !DILocation(line: 384, column: 2, scope: !10999)
!11004 = !DILocation(line: 385, column: 1, scope: !10999)
!11005 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1566, file: !1566, line: 373, type: !1619, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11006)
!11006 = !{!11007}
!11007 = !DILocalVariable(name: "dev", arg: 1, scope: !11005, file: !1566, line: 373, type: !1595)
!11008 = !DILocation(line: 0, scope: !11005)
!11009 = !DILocation(line: 375, column: 2, scope: !11005)
!11010 = !DILocation(line: 376, column: 1, scope: !11005)
!11011 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1566, file: !1566, line: 284, type: !1619, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11012)
!11012 = !{!11013}
!11013 = !DILocalVariable(name: "dev", arg: 1, scope: !11011, file: !1566, line: 284, type: !1595)
!11014 = !DILocation(line: 0, scope: !11011)
!11015 = !DILocation(line: 286, column: 2, scope: !11011)
!11016 = !DILocation(line: 287, column: 1, scope: !11011)
!11017 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1566, file: !1566, line: 416, type: !1593, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11018)
!11018 = !{!11019}
!11019 = !DILocalVariable(name: "dev", arg: 1, scope: !11017, file: !1566, line: 416, type: !1595)
!11020 = !DILocation(line: 0, scope: !11017)
!11021 = !DILocation(line: 418, column: 2, scope: !11017)
!11022 = !DILocation(line: 420, column: 2, scope: !11017)
!11023 = !DILocation(line: 0, scope: !1618)
!11024 = !DILocation(line: 493, column: 2, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 493, column: 2)
!11026 = !DILocation(line: 497, column: 2, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 497, column: 2)
!11028 = !DILocation(line: 507, column: 2, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 507, column: 2)
!11030 = !DILocation(line: 512, column: 2, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 512, column: 2)
!11032 = !DILocation(line: 516, column: 2, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 516, column: 2)
!11034 = !DILocation(line: 523, column: 2, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 523, column: 2)
!11036 = !DILocation(line: 527, column: 2, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 527, column: 2)
!11038 = !DILocation(line: 581, column: 2, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 581, column: 2)
!11040 = !DILocation(line: 586, column: 2, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 586, column: 2)
!11042 = !DILocation(line: 591, column: 2, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 591, column: 2)
!11044 = !DILocation(line: 595, column: 2, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !1618, file: !1566, line: 595, column: 2)
!11046 = !DILocation(line: 607, column: 1, scope: !1618)
!11047 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1566, file: !1566, line: 112, type: !10933, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11048)
!11048 = !{!11049, !11050}
!11049 = !DILocalVariable(name: "line", arg: 1, scope: !11047, file: !1566, line: 112, type: !103)
!11050 = !DILocalVariable(name: "irqnum", scope: !11047, file: !1566, line: 114, type: !103)
!11051 = !DILocation(line: 0, scope: !11047)
!11052 = !DILocation(line: 122, column: 13, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11047, file: !1566, line: 122, column: 6)
!11054 = !DILocation(line: 122, column: 6, scope: !11047)
!11055 = !DILocation(line: 123, column: 3, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1566, line: 123, column: 3)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !1566, line: 123, column: 3)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !1566, line: 123, column: 3)
!11059 = distinct !DILexicalBlock(scope: !11053, file: !1566, line: 122, column: 22)
!11060 = !DILocation(line: 121, column: 11, scope: !11047)
!11061 = !DILocation(line: 130, column: 26, scope: !11047)
!11062 = !DILocation(line: 130, column: 2, scope: !11047)
!11063 = !DILocation(line: 134, column: 2, scope: !11047)
!11064 = !DILocation(line: 135, column: 1, scope: !11047)
!11065 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10944, file: !10944, line: 268, type: !8403, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11066)
!11066 = !{!11067}
!11067 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11065, file: !10944, line: 268, type: !108)
!11068 = !DILocation(line: 0, scope: !11065)
!11069 = !DILocation(line: 270, column: 3, scope: !11065)
!11070 = !DILocation(line: 271, column: 1, scope: !11065)
!11071 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1566, file: !1566, line: 137, type: !10933, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11072)
!11072 = !{!11073}
!11073 = !DILocalVariable(name: "line", arg: 1, scope: !11071, file: !1566, line: 137, type: !103)
!11074 = !DILocation(line: 0, scope: !11071)
!11075 = !DILocation(line: 141, column: 11, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11071, file: !1566, line: 141, column: 6)
!11077 = !DILocation(line: 141, column: 6, scope: !11071)
!11078 = !DILocation(line: 145, column: 28, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11076, file: !1566, line: 141, column: 17)
!11080 = !DILocation(line: 145, column: 3, scope: !11079)
!11081 = !DILocation(line: 147, column: 2, scope: !11079)
!11082 = !DILocation(line: 151, column: 1, scope: !11071)
!11083 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10944, file: !10944, line: 309, type: !8403, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11084)
!11084 = !{!11085}
!11085 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11083, file: !10944, line: 309, type: !108)
!11086 = !DILocation(line: 0, scope: !11083)
!11087 = !DILocation(line: 311, column: 3, scope: !11083)
!11088 = !DILocation(line: 312, column: 1, scope: !11083)
!11089 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1566, file: !1566, line: 202, type: !11090, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11092)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{null, !103, !103}
!11092 = !{!11093, !11094}
!11093 = !DILocalVariable(name: "line", arg: 1, scope: !11089, file: !1566, line: 202, type: !103)
!11094 = !DILocalVariable(name: "trigger", arg: 2, scope: !11089, file: !1566, line: 202, type: !103)
!11095 = !DILocation(line: 0, scope: !11089)
!11096 = !DILocation(line: 211, column: 2, scope: !11089)
!11097 = !DILocation(line: 213, column: 36, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11089, file: !1566, line: 211, column: 19)
!11099 = !DILocation(line: 213, column: 3, scope: !11098)
!11100 = !DILocation(line: 214, column: 3, scope: !11098)
!11101 = !DILocation(line: 215, column: 3, scope: !11098)
!11102 = !DILocation(line: 217, column: 35, scope: !11098)
!11103 = !DILocation(line: 217, column: 3, scope: !11098)
!11104 = !DILocation(line: 218, column: 3, scope: !11098)
!11105 = !DILocation(line: 219, column: 3, scope: !11098)
!11106 = !DILocation(line: 221, column: 36, scope: !11098)
!11107 = !DILocation(line: 221, column: 3, scope: !11098)
!11108 = !DILocation(line: 222, column: 3, scope: !11098)
!11109 = !DILocation(line: 223, column: 3, scope: !11098)
!11110 = !DILocation(line: 225, column: 35, scope: !11098)
!11111 = !DILocation(line: 225, column: 3, scope: !11098)
!11112 = !DILocation(line: 226, column: 3, scope: !11098)
!11113 = !DILocation(line: 227, column: 3, scope: !11098)
!11114 = !DILocation(line: 232, column: 1, scope: !11089)
!11115 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10944, file: !10944, line: 573, type: !8403, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11116)
!11116 = !{!11117}
!11117 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11115, file: !10944, line: 573, type: !108)
!11118 = !DILocation(line: 0, scope: !11115)
!11119 = !DILocation(line: 575, column: 3, scope: !11115)
!11120 = !DILocation(line: 577, column: 1, scope: !11115)
!11121 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10944, file: !10944, line: 703, type: !8403, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11122)
!11122 = !{!11123}
!11123 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11121, file: !10944, line: 703, type: !108)
!11124 = !DILocation(line: 0, scope: !11121)
!11125 = !DILocation(line: 705, column: 3, scope: !11121)
!11126 = !DILocation(line: 706, column: 1, scope: !11121)
!11127 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10944, file: !10944, line: 529, type: !8403, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11128)
!11128 = !{!11129}
!11129 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11127, file: !10944, line: 529, type: !108)
!11130 = !DILocation(line: 0, scope: !11127)
!11131 = !DILocation(line: 531, column: 3, scope: !11127)
!11132 = !DILocation(line: 533, column: 1, scope: !11127)
!11133 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10944, file: !10944, line: 661, type: !8403, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11134)
!11134 = !{!11135}
!11135 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !11133, file: !10944, line: 661, type: !108)
!11136 = !DILocation(line: 0, scope: !11133)
!11137 = !DILocation(line: 663, column: 3, scope: !11133)
!11138 = !DILocation(line: 664, column: 1, scope: !11133)
!11139 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1566, file: !1566, line: 433, type: !11140, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11142)
!11140 = !DISubroutineType(types: !11141)
!11141 = !{!103, !103, !1606, !102}
!11142 = !{!11143, !11144, !11145, !11146, !11148}
!11143 = !DILocalVariable(name: "line", arg: 1, scope: !11139, file: !1566, line: 433, type: !103)
!11144 = !DILocalVariable(name: "cb", arg: 2, scope: !11139, file: !1566, line: 433, type: !1606)
!11145 = !DILocalVariable(name: "arg", arg: 3, scope: !11139, file: !1566, line: 433, type: !102)
!11146 = !DILocalVariable(name: "dev", scope: !11139, file: !1566, line: 435, type: !11147)
!11147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!11148 = !DILocalVariable(name: "data", scope: !11139, file: !1566, line: 436, type: !10898)
!11149 = !DILocation(line: 0, scope: !11139)
!11150 = !DILocation(line: 438, column: 21, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11139, file: !1566, line: 438, column: 6)
!11152 = !DILocation(line: 438, column: 6, scope: !11151)
!11153 = !DILocation(line: 438, column: 6, scope: !11139)
!11154 = !DILocation(line: 442, column: 20, scope: !11139)
!11155 = !DILocation(line: 443, column: 17, scope: !11139)
!11156 = !DILocation(line: 443, column: 22, scope: !11139)
!11157 = !DILocation(line: 445, column: 2, scope: !11139)
!11158 = !DILocation(line: 446, column: 1, scope: !11139)
!11159 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1566, file: !1566, line: 448, type: !10933, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1453, retainedNodes: !11160)
!11160 = !{!11161, !11162, !11163}
!11161 = !DILocalVariable(name: "line", arg: 1, scope: !11159, file: !1566, line: 448, type: !103)
!11162 = !DILocalVariable(name: "dev", scope: !11159, file: !1566, line: 450, type: !11147)
!11163 = !DILocalVariable(name: "data", scope: !11159, file: !1566, line: 451, type: !10898)
!11164 = !DILocation(line: 0, scope: !11159)
!11165 = !DILocation(line: 453, column: 17, scope: !11159)
!11166 = !DILocation(line: 453, column: 20, scope: !11159)
!11167 = !DILocation(line: 454, column: 17, scope: !11159)
!11168 = !DILocation(line: 454, column: 22, scope: !11159)
!11169 = !DILocation(line: 455, column: 1, scope: !11159)
!11170 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1757, file: !1757, line: 183, type: !1795, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11171)
!11171 = !{!11172, !11173, !11174, !11175, !11176}
!11172 = !DILocalVariable(name: "dev", arg: 1, scope: !11170, file: !1757, line: 183, type: !1786)
!11173 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11170, file: !1757, line: 184, type: !1797)
!11174 = !DILocalVariable(name: "pclken", scope: !11170, file: !1757, line: 186, type: !1747)
!11175 = !DILocalVariable(name: "reg", scope: !11170, file: !1757, line: 187, type: !2336)
!11176 = !DILocalVariable(name: "reg_val", scope: !11170, file: !1757, line: 188, type: !108)
!11177 = !DILocation(line: 0, scope: !11170)
!11178 = !DILocation(line: 192, column: 6, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11170, file: !1757, line: 192, column: 6)
!11180 = !DILocation(line: 192, column: 6, scope: !11170)
!11181 = !DILocation(line: 197, column: 52, scope: !11170)
!11182 = !DILocation(line: 197, column: 8, scope: !11170)
!11183 = !DILocation(line: 198, column: 12, scope: !11170)
!11184 = !DILocation(line: 199, column: 21, scope: !11170)
!11185 = !DILocation(line: 199, column: 10, scope: !11170)
!11186 = !DILocation(line: 200, column: 7, scope: !11170)
!11187 = !DILocation(line: 202, column: 2, scope: !11170)
!11188 = !DILocation(line: 203, column: 1, scope: !11170)
!11189 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1757, file: !1757, line: 205, type: !1795, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11190)
!11190 = !{!11191, !11192, !11193, !11194, !11195}
!11191 = !DILocalVariable(name: "dev", arg: 1, scope: !11189, file: !1757, line: 205, type: !1786)
!11192 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11189, file: !1757, line: 206, type: !1797)
!11193 = !DILocalVariable(name: "pclken", scope: !11189, file: !1757, line: 208, type: !1747)
!11194 = !DILocalVariable(name: "reg", scope: !11189, file: !1757, line: 209, type: !2336)
!11195 = !DILocalVariable(name: "reg_val", scope: !11189, file: !1757, line: 210, type: !108)
!11196 = !DILocation(line: 0, scope: !11189)
!11197 = !DILocation(line: 214, column: 6, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11189, file: !1757, line: 214, column: 6)
!11199 = !DILocation(line: 214, column: 6, scope: !11189)
!11200 = !DILocation(line: 219, column: 52, scope: !11189)
!11201 = !DILocation(line: 219, column: 8, scope: !11189)
!11202 = !DILocation(line: 220, column: 12, scope: !11189)
!11203 = !DILocation(line: 221, column: 22, scope: !11189)
!11204 = !DILocation(line: 221, column: 13, scope: !11189)
!11205 = !DILocation(line: 221, column: 10, scope: !11189)
!11206 = !DILocation(line: 222, column: 7, scope: !11189)
!11207 = !DILocation(line: 224, column: 2, scope: !11189)
!11208 = !DILocation(line: 225, column: 1, scope: !11189)
!11209 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1757, file: !1757, line: 262, type: !1811, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11210)
!11210 = !{!11211, !11212, !11213, !11214, !11215, !11216, !11217, !11218}
!11211 = !DILocalVariable(name: "clock", arg: 1, scope: !11209, file: !1757, line: 262, type: !1786)
!11212 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11209, file: !1757, line: 263, type: !1797)
!11213 = !DILocalVariable(name: "rate", arg: 3, scope: !11209, file: !1757, line: 264, type: !1753)
!11214 = !DILocalVariable(name: "pclken", scope: !11209, file: !1757, line: 266, type: !1747)
!11215 = !DILocalVariable(name: "ahb_clock", scope: !11209, file: !1757, line: 273, type: !108)
!11216 = !DILocalVariable(name: "apb1_clock", scope: !11209, file: !1757, line: 274, type: !108)
!11217 = !DILocalVariable(name: "apb2_clock", scope: !11209, file: !1757, line: 276, type: !108)
!11218 = !DILocalVariable(name: "ahb3_clock", scope: !11209, file: !1757, line: 286, type: !108)
!11219 = !DILocation(line: 0, scope: !11209)
!11220 = !DILocation(line: 273, column: 23, scope: !11209)
!11221 = !DILocation(line: 299, column: 18, scope: !11209)
!11222 = !DILocation(line: 299, column: 2, scope: !11209)
!11223 = !DILocation(line: 274, column: 24, scope: !11209)
!11224 = !DILocation(line: 319, column: 3, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11209, file: !1757, line: 299, column: 23)
!11226 = !DILocation(line: 276, column: 24, scope: !11209)
!11227 = !DILocation(line: 323, column: 3, scope: !11225)
!11228 = !DILocation(line: 346, column: 33, scope: !11225)
!11229 = !DILocation(line: 346, column: 11, scope: !11225)
!11230 = !DILocation(line: 350, column: 3, scope: !11225)
!11231 = !DILocation(line: 354, column: 33, scope: !11225)
!11232 = !DILocation(line: 354, column: 11, scope: !11225)
!11233 = !DILocation(line: 358, column: 3, scope: !11225)
!11234 = !DILocation(line: 374, column: 3, scope: !11225)
!11235 = !DILocation(line: 379, column: 3, scope: !11225)
!11236 = !DILocation(line: 0, scope: !11225)
!11237 = !DILocation(line: 396, column: 1, scope: !11209)
!11238 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1757, file: !1757, line: 227, type: !1827, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11239)
!11239 = !{!11240, !11241, !11242, !11243, !11244, !11245, !11246, !11247}
!11240 = !DILocalVariable(name: "dev", arg: 1, scope: !11238, file: !1757, line: 227, type: !1786)
!11241 = !DILocalVariable(name: "sub_system", arg: 2, scope: !11238, file: !1757, line: 228, type: !1797)
!11242 = !DILocalVariable(name: "data", arg: 3, scope: !11238, file: !1757, line: 229, type: !102)
!11243 = !DILocalVariable(name: "pclken", scope: !11238, file: !1757, line: 233, type: !1747)
!11244 = !DILocalVariable(name: "reg", scope: !11238, file: !1757, line: 234, type: !2336)
!11245 = !DILocalVariable(name: "reg_val", scope: !11238, file: !1757, line: 235, type: !108)
!11246 = !DILocalVariable(name: "dt_val", scope: !11238, file: !1757, line: 235, type: !108)
!11247 = !DILocalVariable(name: "err", scope: !11238, file: !1757, line: 236, type: !103)
!11248 = !DILocation(line: 0, scope: !11238)
!11249 = !DILocation(line: 241, column: 30, scope: !11238)
!11250 = !DILocation(line: 241, column: 8, scope: !11238)
!11251 = !DILocation(line: 242, column: 10, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11238, file: !1757, line: 242, column: 6)
!11253 = !DILocation(line: 242, column: 6, scope: !11238)
!11254 = !DILocation(line: 247, column: 11, scope: !11238)
!11255 = !DILocation(line: 248, column: 6, scope: !11238)
!11256 = !DILocation(line: 247, column: 44, scope: !11238)
!11257 = !DILocation(line: 250, column: 6, scope: !11238)
!11258 = !DILocation(line: 249, column: 52, scope: !11238)
!11259 = !DILocation(line: 249, column: 8, scope: !11238)
!11260 = !DILocation(line: 251, column: 12, scope: !11238)
!11261 = !DILocation(line: 252, column: 10, scope: !11238)
!11262 = !DILocation(line: 253, column: 7, scope: !11238)
!11263 = !DILocation(line: 255, column: 2, scope: !11238)
!11264 = !DILocation(line: 260, column: 1, scope: !11238)
!11265 = distinct !DISubprogram(name: "enabled_clock", scope: !1757, file: !1757, line: 100, type: !11266, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11268)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!103, !108}
!11268 = !{!11269, !11270}
!11269 = !DILocalVariable(name: "src_clk", arg: 1, scope: !11265, file: !1757, line: 100, type: !108)
!11270 = !DILocalVariable(name: "r", scope: !11265, file: !1757, line: 102, type: !103)
!11271 = !DILocation(line: 0, scope: !11265)
!11272 = !DILocation(line: 104, column: 2, scope: !11265)
!11273 = !DILocation(line: 180, column: 2, scope: !11265)
!11274 = !DILocation(line: 181, column: 1, scope: !11265)
!11275 = distinct !DISubprogram(name: "get_bus_clock", scope: !1757, file: !1757, line: 79, type: !11276, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11278)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{!108, !108, !108}
!11278 = !{!11279, !11280}
!11279 = !DILocalVariable(name: "clock", arg: 1, scope: !11275, file: !1757, line: 79, type: !108)
!11280 = !DILocalVariable(name: "prescaler", arg: 2, scope: !11275, file: !1757, line: 79, type: !108)
!11281 = !DILocation(line: 0, scope: !11275)
!11282 = !DILocation(line: 81, column: 15, scope: !11275)
!11283 = !DILocation(line: 81, column: 2, scope: !11275)
!11284 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1757, file: !1757, line: 68, type: !11285, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11287)
!11285 = !DISubroutineType(types: !11286)
!11286 = !{!108, !108, !103, !103, !103}
!11287 = !{!11288, !11289, !11290, !11291}
!11288 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !11284, file: !1757, line: 68, type: !108)
!11289 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !11284, file: !1757, line: 69, type: !103)
!11290 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !11284, file: !1757, line: 70, type: !103)
!11291 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !11284, file: !1757, line: 71, type: !103)
!11292 = !DILocation(line: 0, scope: !11284)
!11293 = !DILocation(line: 75, column: 22, scope: !11284)
!11294 = !DILocation(line: 76, column: 13, scope: !11284)
!11295 = !DILocation(line: 75, column: 34, scope: !11284)
!11296 = !DILocation(line: 75, column: 2, scope: !11284)
!11297 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1757, file: !1757, line: 641, type: !1784, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11298)
!11298 = !{!11299, !11300, !11301}
!11299 = !DILocalVariable(name: "dev", arg: 1, scope: !11297, file: !1757, line: 641, type: !1786)
!11300 = !DILocalVariable(name: "old_flash_freq", scope: !11297, file: !1757, line: 664, type: !108)
!11301 = !DILocalVariable(name: "new_flash_freq", scope: !11297, file: !1757, line: 665, type: !108)
!11302 = !DILocation(line: 0, scope: !11297)
!11303 = !DILocation(line: 646, column: 2, scope: !11297)
!11304 = !DILocation(line: 667, column: 19, scope: !11297)
!11305 = !DILocation(line: 674, column: 21, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11297, file: !1757, line: 674, column: 6)
!11307 = !DILocation(line: 674, column: 6, scope: !11297)
!11308 = !DILocation(line: 675, column: 3, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11306, file: !1757, line: 674, column: 59)
!11310 = !DILocation(line: 676, column: 2, scope: !11309)
!11311 = !DILocation(line: 680, column: 2, scope: !11297)
!11312 = !DILocation(line: 683, column: 2, scope: !11297)
!11313 = !DILocation(line: 690, column: 3, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !1757, line: 689, column: 9)
!11315 = distinct !DILexicalBlock(scope: !11297, file: !1757, line: 685, column: 6)
!11316 = !DILocation(line: 695, column: 2, scope: !11297)
!11317 = !DILocation(line: 696, column: 2, scope: !11297)
!11318 = !DILocation(line: 696, column: 9, scope: !11297)
!11319 = !DILocation(line: 696, column: 34, scope: !11297)
!11320 = distinct !{!11320, !11317, !11321}
!11321 = !DILocation(line: 697, column: 2, scope: !11297)
!11322 = !DILocation(line: 720, column: 21, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11297, file: !1757, line: 720, column: 6)
!11324 = !DILocation(line: 720, column: 6, scope: !11297)
!11325 = !DILocation(line: 721, column: 3, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11323, file: !1757, line: 720, column: 60)
!11327 = !DILocation(line: 722, column: 2, scope: !11326)
!11328 = !DILocation(line: 725, column: 18, scope: !11297)
!11329 = !DILocation(line: 728, column: 2, scope: !11297)
!11330 = !DILocation(line: 730, column: 2, scope: !11297)
!11331 = !DILocation(line: 745, column: 2, scope: !11297)
!11332 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !11333, file: !11333, line: 3275, type: !8393, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11333 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11334 = !DILocation(line: 3277, column: 21, scope: !11332)
!11335 = !DILocation(line: 3277, column: 3, scope: !11332)
!11336 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1757, file: !1757, line: 507, type: !333, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11337 = !DILocation(line: 516, column: 4, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11339, file: !1757, line: 515, column: 10)
!11339 = distinct !DILexicalBlock(scope: !11340, file: !1757, line: 513, column: 7)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !1757, line: 510, column: 37)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !1757, line: 510, column: 6)
!11342 = !DILocation(line: 526, column: 3, scope: !11340)
!11343 = !DILocation(line: 527, column: 3, scope: !11340)
!11344 = !DILocation(line: 527, column: 10, scope: !11340)
!11345 = !DILocation(line: 527, column: 31, scope: !11340)
!11346 = distinct !{!11346, !11343, !11347}
!11347 = !DILocation(line: 529, column: 3, scope: !11340)
!11348 = !DILocation(line: 583, column: 3, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11350, file: !1757, line: 577, column: 37)
!11350 = distinct !DILexicalBlock(scope: !11336, file: !1757, line: 577, column: 6)
!11351 = !DILocation(line: 584, column: 3, scope: !11349)
!11352 = !DILocation(line: 584, column: 10, scope: !11349)
!11353 = !DILocation(line: 584, column: 31, scope: !11349)
!11354 = distinct !{!11354, !11351, !11355}
!11355 = !DILocation(line: 585, column: 3, scope: !11349)
!11356 = !DILocation(line: 627, column: 1, scope: !11336)
!11357 = distinct !DISubprogram(name: "set_up_plls", scope: !1757, file: !1757, line: 448, type: !333, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11358 = !DILocation(line: 460, column: 6, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11357, file: !1757, line: 460, column: 6)
!11360 = !DILocation(line: 460, column: 31, scope: !11359)
!11361 = !DILocation(line: 460, column: 6, scope: !11357)
!11362 = !DILocation(line: 461, column: 3, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11359, file: !1757, line: 460, column: 67)
!11364 = !DILocation(line: 462, column: 3, scope: !11363)
!11365 = !DILocation(line: 463, column: 2, scope: !11363)
!11366 = !DILocation(line: 464, column: 2, scope: !11357)
!11367 = !DILocation(line: 488, column: 2, scope: !11357)
!11368 = !DILocation(line: 492, column: 2, scope: !11357)
!11369 = !DILocation(line: 496, column: 2, scope: !11357)
!11370 = !DILocation(line: 499, column: 2, scope: !11357)
!11371 = !DILocation(line: 500, column: 2, scope: !11357)
!11372 = !DILocation(line: 500, column: 9, scope: !11357)
!11373 = !DILocation(line: 500, column: 30, scope: !11357)
!11374 = distinct !{!11374, !11371, !11375}
!11375 = !DILocation(line: 502, column: 2, scope: !11357)
!11376 = !DILocation(line: 505, column: 1, scope: !11357)
!11377 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !11333, file: !11333, line: 3224, type: !8403, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11378)
!11378 = !{!11379}
!11379 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11377, file: !11333, line: 3224, type: !108)
!11380 = !DILocation(line: 0, scope: !11377)
!11381 = !DILocation(line: 3226, column: 3, scope: !11377)
!11382 = !DILocation(line: 3227, column: 1, scope: !11377)
!11383 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !11333, file: !11333, line: 3188, type: !8403, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11384)
!11384 = !{!11385}
!11385 = !DILocalVariable(name: "Source", arg: 1, scope: !11383, file: !11333, line: 3188, type: !108)
!11386 = !DILocation(line: 0, scope: !11383)
!11387 = !DILocation(line: 3190, column: 3, scope: !11383)
!11388 = !DILocation(line: 3191, column: 1, scope: !11383)
!11389 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !11333, file: !11333, line: 3204, type: !8393, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11390 = !DILocation(line: 3206, column: 21, scope: !11389)
!11391 = !DILocation(line: 3206, column: 3, scope: !11389)
!11392 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !11333, file: !11333, line: 3240, type: !8403, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11393)
!11393 = !{!11394}
!11394 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11392, file: !11333, line: 3240, type: !108)
!11395 = !DILocation(line: 0, scope: !11392)
!11396 = !DILocation(line: 3242, column: 3, scope: !11392)
!11397 = !DILocation(line: 3243, column: 1, scope: !11392)
!11398 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !11333, file: !11333, line: 3256, type: !8403, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !11399)
!11399 = !{!11400}
!11400 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11398, file: !11333, line: 3256, type: !108)
!11401 = !DILocation(line: 0, scope: !11398)
!11402 = !DILocation(line: 3258, column: 3, scope: !11398)
!11403 = !DILocation(line: 3259, column: 1, scope: !11398)
!11404 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1757, file: !1757, line: 409, type: !333, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11405 = !DILocation(line: 412, column: 6, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11404, file: !1757, line: 412, column: 6)
!11407 = !DILocation(line: 412, column: 27, scope: !11406)
!11408 = !DILocation(line: 412, column: 6, scope: !11404)
!11409 = !DILocation(line: 414, column: 3, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11406, file: !1757, line: 412, column: 33)
!11411 = !DILocation(line: 415, column: 3, scope: !11410)
!11412 = !DILocation(line: 415, column: 10, scope: !11410)
!11413 = !DILocation(line: 415, column: 31, scope: !11410)
!11414 = distinct !{!11414, !11411, !11415}
!11415 = !DILocation(line: 417, column: 3, scope: !11410)
!11416 = !DILocation(line: 421, column: 2, scope: !11404)
!11417 = !DILocation(line: 422, column: 2, scope: !11404)
!11418 = !DILocation(line: 422, column: 9, scope: !11404)
!11419 = !DILocation(line: 422, column: 34, scope: !11404)
!11420 = distinct !{!11420, !11417, !11421}
!11421 = !DILocation(line: 423, column: 2, scope: !11404)
!11422 = !DILocation(line: 424, column: 1, scope: !11404)
!11423 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !11333, file: !11333, line: 4195, type: !333, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11424 = !DILocation(line: 4197, column: 3, scope: !11423)
!11425 = !DILocation(line: 4198, column: 1, scope: !11423)
!11426 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !11333, file: !11333, line: 4184, type: !333, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11427 = !DILocation(line: 4186, column: 3, scope: !11426)
!11428 = !DILocation(line: 4187, column: 1, scope: !11426)
!11429 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !11333, file: !11333, line: 4205, type: !8393, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11430 = !DILocation(line: 4207, column: 11, scope: !11429)
!11431 = !DILocation(line: 4207, column: 44, scope: !11429)
!11432 = !DILocation(line: 4207, column: 3, scope: !11429)
!11433 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !11333, file: !11333, line: 3007, type: !8393, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11434 = !DILocation(line: 3009, column: 11, scope: !11433)
!11435 = !DILocation(line: 3009, column: 44, scope: !11433)
!11436 = !DILocation(line: 3009, column: 3, scope: !11433)
!11437 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !11333, file: !11333, line: 2987, type: !333, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11438 = !DILocation(line: 2989, column: 3, scope: !11437)
!11439 = !DILocation(line: 2990, column: 1, scope: !11437)
!11440 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !11333, file: !11333, line: 2939, type: !333, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11441 = !DILocation(line: 2941, column: 3, scope: !11440)
!11442 = !DILocation(line: 2942, column: 1, scope: !11440)
!11443 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !11333, file: !11333, line: 2949, type: !333, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11444 = !DILocation(line: 2951, column: 3, scope: !11443)
!11445 = !DILocation(line: 2952, column: 1, scope: !11443)
!11446 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !11333, file: !11333, line: 2969, type: !8393, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11447 = !DILocation(line: 2971, column: 11, scope: !11446)
!11448 = !DILocation(line: 2971, column: 44, scope: !11446)
!11449 = !DILocation(line: 2971, column: 3, scope: !11446)
!11450 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !11333, file: !11333, line: 3143, type: !333, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11451 = !DILocation(line: 3145, column: 3, scope: !11450)
!11452 = !DILocation(line: 3146, column: 1, scope: !11450)
!11453 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !11333, file: !11333, line: 3163, type: !8393, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !2953)
!11454 = !DILocation(line: 3165, column: 11, scope: !11453)
!11455 = !DILocation(line: 3165, column: 46, scope: !11453)
!11456 = !DILocation(line: 3165, column: 3, scope: !11453)
!11457 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !11458, file: !11458, line: 40, type: !8393, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3855, retainedNodes: !2953)
!11458 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11459 = !DILocation(line: 45, column: 3, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11458, line: 44, column: 44)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !11458, line: 44, column: 13)
!11462 = distinct !DILexicalBlock(scope: !11457, file: !11458, line: 42, column: 6)
!11463 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !11458, file: !11458, line: 56, type: !333, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3855, retainedNodes: !2953)
!11464 = !DILocation(line: 58, column: 2, scope: !11463)
!11465 = !DILocation(line: 62, column: 1, scope: !11463)
!11466 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !11333, file: !11333, line: 4304, type: !11467, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3855, retainedNodes: !11469)
!11467 = !DISubroutineType(types: !11468)
!11468 = !{null, !108, !108, !108, !108}
!11469 = !{!11470, !11471, !11472, !11473}
!11470 = !DILocalVariable(name: "Source", arg: 1, scope: !11466, file: !11333, line: 4304, type: !108)
!11471 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11466, file: !11333, line: 4304, type: !108)
!11472 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11466, file: !11333, line: 4304, type: !108)
!11473 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11466, file: !11333, line: 4304, type: !108)
!11474 = !DILocation(line: 0, scope: !11466)
!11475 = !DILocation(line: 4306, column: 3, scope: !11466)
!11476 = !DILocation(line: 4308, column: 3, scope: !11466)
!11477 = !DILocation(line: 4310, column: 3, scope: !11466)
!11478 = !DILocation(line: 4312, column: 1, scope: !11466)
!11479 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !11458, file: !11458, line: 69, type: !333, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3855, retainedNodes: !2953)
!11480 = !DILocation(line: 72, column: 2, scope: !11479)
!11481 = !DILocation(line: 73, column: 1, scope: !11479)
!11482 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !11483, file: !11483, line: 1185, type: !8403, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3855, retainedNodes: !11484)
!11483 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11484 = !{!11485, !11486}
!11485 = !DILocalVariable(name: "Periphs", arg: 1, scope: !11482, file: !11483, line: 1185, type: !108)
!11486 = !DILocalVariable(name: "tmpreg", scope: !11482, file: !11483, line: 1187, type: !813)
!11487 = !DILocation(line: 0, scope: !11482)
!11488 = !DILocation(line: 1187, column: 3, scope: !11482)
!11489 = !DILocation(line: 1187, column: 17, scope: !11482)
!11490 = !DILocation(line: 1188, column: 3, scope: !11482)
!11491 = !DILocation(line: 1190, column: 12, scope: !11482)
!11492 = !DILocation(line: 1190, column: 10, scope: !11482)
!11493 = !DILocation(line: 1191, column: 9, scope: !11482)
!11494 = !DILocation(line: 1192, column: 1, scope: !11482)
!11495 = distinct !DISubprogram(name: "uart_console_init", scope: !1888, file: !1888, line: 588, type: !1865, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "arg", arg: 1, scope: !11495, file: !1888, line: 588, type: !1843)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 593, column: 7, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11495, file: !1888, line: 593, column: 6)
!11501 = !DILocation(line: 593, column: 6, scope: !11495)
!11502 = !DILocation(line: 597, column: 2, scope: !11495)
!11503 = !DILocation(line: 599, column: 2, scope: !11495)
!11504 = !DILocation(line: 600, column: 1, scope: !11495)
!11505 = distinct !DISubprogram(name: "device_is_ready", scope: !11506, file: !11506, line: 47, type: !11507, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11509)
!11506 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!11507 = !DISubroutineType(types: !11508)
!11508 = !{!119, !1843}
!11509 = !{!11510}
!11510 = !DILocalVariable(name: "dev", arg: 1, scope: !11505, file: !11506, line: 47, type: !1843)
!11511 = !DILocation(line: 0, scope: !11505)
!11512 = !DILocation(line: 55, column: 2, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11505, file: !11506, line: 55, column: 2)
!11514 = !{i64 2155297745}
!11515 = !DILocation(line: 56, column: 9, scope: !11505)
!11516 = !DILocation(line: 56, column: 2, scope: !11505)
!11517 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1888, file: !1888, line: 573, type: !333, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2953)
!11518 = !DILocation(line: 576, column: 2, scope: !11517)
!11519 = !DILocation(line: 579, column: 2, scope: !11517)
!11520 = !DILocation(line: 581, column: 1, scope: !11517)
!11521 = distinct !DISubprogram(name: "console_out", scope: !1888, file: !1888, line: 77, type: !800, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11522)
!11522 = !{!11523}
!11523 = !DILocalVariable(name: "c", arg: 1, scope: !11521, file: !1888, line: 77, type: !103)
!11524 = !DILocation(line: 0, scope: !11521)
!11525 = !DILocation(line: 89, column: 11, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11521, file: !1888, line: 89, column: 6)
!11527 = !DILocation(line: 89, column: 6, scope: !11521)
!11528 = !DILocation(line: 90, column: 3, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11526, file: !1888, line: 89, column: 17)
!11530 = !DILocation(line: 91, column: 2, scope: !11529)
!11531 = !DILocation(line: 92, column: 34, scope: !11521)
!11532 = !DILocation(line: 92, column: 2, scope: !11521)
!11533 = !DILocation(line: 94, column: 2, scope: !11521)
!11534 = distinct !DISubprogram(name: "uart_poll_out", scope: !11535, file: !11535, line: 95, type: !1861, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11536)
!11535 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/runtime_obs_registration")
!11536 = !{!11537, !11538}
!11537 = !DILocalVariable(name: "dev", arg: 1, scope: !11534, file: !11535, line: 95, type: !1843)
!11538 = !DILocalVariable(name: "out_char", arg: 2, scope: !11534, file: !11535, line: 95, type: !165)
!11539 = !DILocation(line: 0, scope: !11534)
!11540 = !DILocation(line: 105, column: 2, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11534, file: !11535, line: 105, column: 2)
!11542 = !{i64 2155381136}
!11543 = !DILocation(line: 106, column: 2, scope: !11534)
!11544 = !DILocation(line: 107, column: 1, scope: !11534)
!11545 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1837, file: !1837, line: 574, type: !1861, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11546)
!11546 = !{!11547, !11548, !11549}
!11547 = !DILocalVariable(name: "dev", arg: 1, scope: !11545, file: !1837, line: 574, type: !1843)
!11548 = !DILocalVariable(name: "out_char", arg: 2, scope: !11545, file: !1837, line: 575, type: !165)
!11549 = !DILocalVariable(name: "api", scope: !11545, file: !1837, line: 577, type: !1834)
!11550 = !DILocation(line: 0, scope: !11545)
!11551 = !DILocation(line: 578, column: 40, scope: !11545)
!11552 = !DILocation(line: 580, column: 7, scope: !11545)
!11553 = !DILocation(line: 580, column: 2, scope: !11545)
!11554 = !DILocation(line: 581, column: 1, scope: !11545)
!11555 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !833, file: !833, line: 730, type: !11507, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11556)
!11556 = !{!11557}
!11557 = !DILocalVariable(name: "dev", arg: 1, scope: !11555, file: !833, line: 730, type: !1843)
!11558 = !DILocation(line: 0, scope: !11555)
!11559 = !DILocation(line: 732, column: 9, scope: !11555)
!11560 = !DILocation(line: 732, column: 2, scope: !11555)
!11561 = distinct !DISubprogram(name: "uart_register_input", scope: !1888, file: !1888, line: 560, type: !11562, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !11609)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{null, !11564, !11564, !11606}
!11564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11565, size: 32)
!11565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !124, line: 2208, size: 160, elements: !11566)
!11566 = !{!11567}
!11567 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !11565, file: !124, line: 2209, baseType: !11568, size: 160)
!11568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !124, line: 1709, size: 160, elements: !11569)
!11569 = !{!11570, !11583, !11587}
!11570 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !11568, file: !124, line: 1710, baseType: !11571, size: 64)
!11571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !11572, line: 46, baseType: !11573)
!11572 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !11572, line: 41, size: 64, elements: !11574)
!11574 = !{!11575, !11582}
!11575 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11573, file: !11572, line: 42, baseType: !11576, size: 32)
!11576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11577, size: 32)
!11577 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !11572, line: 39, baseType: !11578)
!11578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !11572, line: 35, size: 32, elements: !11579)
!11579 = !{!11580}
!11580 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !11578, file: !11572, line: 36, baseType: !11581, size: 32)
!11581 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !11572, line: 32, baseType: !108)
!11582 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11573, file: !11572, line: 43, baseType: !11576, size: 32, offset: 32)
!11583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11568, file: !124, line: 1711, baseType: !11584, size: 32, offset: 64)
!11584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !11585)
!11585 = !{!11586}
!11586 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11584, file: !149, line: 52, baseType: !22, size: 32)
!11587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11568, file: !124, line: 1712, baseType: !11588, size: 64, offset: 96)
!11588 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !11589)
!11589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !11590)
!11590 = !{!11591}
!11591 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11589, file: !128, line: 232, baseType: !11592, size: 64)
!11592 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !11593)
!11593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !11594)
!11594 = !{!11595, !11601}
!11595 = !DIDerivedType(tag: DW_TAG_member, scope: !11593, file: !133, line: 38, baseType: !11596, size: 32)
!11596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11593, file: !133, line: 38, size: 32, elements: !11597)
!11597 = !{!11598, !11600}
!11598 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11596, file: !133, line: 39, baseType: !11599, size: 32)
!11599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11593, size: 32)
!11600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11596, file: !133, line: 40, baseType: !11599, size: 32)
!11601 = !DIDerivedType(tag: DW_TAG_member, scope: !11593, file: !133, line: 42, baseType: !11602, size: 32, offset: 32)
!11602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11593, file: !133, line: 42, size: 32, elements: !11603)
!11603 = !{!11604, !11605}
!11604 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11602, file: !133, line: 43, baseType: !11599, size: 32)
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11602, file: !133, line: 44, baseType: !11599, size: 32)
!11606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11607, size: 32)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{!164, !157, !164}
!11609 = !{!11610, !11611, !11612}
!11610 = !DILocalVariable(name: "avail", arg: 1, scope: !11561, file: !1888, line: 560, type: !11564)
!11611 = !DILocalVariable(name: "lines", arg: 2, scope: !11561, file: !1888, line: 560, type: !11564)
!11612 = !DILocalVariable(name: "completion", arg: 3, scope: !11561, file: !1888, line: 561, type: !11606)
!11613 = !DILocation(line: 0, scope: !11561)
!11614 = !DILocation(line: 566, column: 1, scope: !11561)
!11615 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !2067, file: !2067, line: 523, type: !1924, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11616)
!11616 = !{!11617, !11618, !11619, !11620, !11621}
!11617 = !DILocalVariable(name: "dev", arg: 1, scope: !11615, file: !2067, line: 523, type: !1926)
!11618 = !DILocalVariable(name: "pin", arg: 2, scope: !11615, file: !2067, line: 524, type: !1941)
!11619 = !DILocalVariable(name: "flags", arg: 3, scope: !11615, file: !2067, line: 524, type: !1942)
!11620 = !DILocalVariable(name: "err", scope: !11615, file: !2067, line: 526, type: !103)
!11621 = !DILocalVariable(name: "pincfg", scope: !11615, file: !2067, line: 527, type: !103)
!11622 = !DILocation(line: 0, scope: !11615)
!11623 = !DILocation(line: 527, column: 2, scope: !11615)
!11624 = !DILocation(line: 532, column: 8, scope: !11615)
!11625 = !DILocation(line: 533, column: 10, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11615, file: !2067, line: 533, column: 6)
!11627 = !DILocation(line: 533, column: 6, scope: !11615)
!11628 = !DILocation(line: 543, column: 13, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11615, file: !2067, line: 543, column: 6)
!11630 = !DILocation(line: 543, column: 28, scope: !11629)
!11631 = !DILocation(line: 543, column: 6, scope: !11615)
!11632 = !DILocation(line: 544, column: 14, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11634, file: !2067, line: 544, column: 7)
!11634 = distinct !DILexicalBlock(scope: !11629, file: !2067, line: 543, column: 34)
!11635 = !DILocation(line: 544, column: 39, scope: !11633)
!11636 = !DILocation(line: 544, column: 7, scope: !11634)
!11637 = !DILocation(line: 545, column: 38, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11633, file: !2067, line: 544, column: 45)
!11639 = !DILocation(line: 545, column: 4, scope: !11638)
!11640 = !DILocation(line: 546, column: 3, scope: !11638)
!11641 = !DILocation(line: 546, column: 21, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11633, file: !2067, line: 546, column: 14)
!11643 = !DILocation(line: 546, column: 45, scope: !11642)
!11644 = !DILocation(line: 546, column: 14, scope: !11633)
!11645 = !DILocation(line: 547, column: 40, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11642, file: !2067, line: 546, column: 51)
!11647 = !DILocation(line: 547, column: 4, scope: !11646)
!11648 = !DILocation(line: 548, column: 3, scope: !11646)
!11649 = !DILocation(line: 551, column: 32, scope: !11615)
!11650 = !DILocation(line: 551, column: 37, scope: !11615)
!11651 = !DILocation(line: 551, column: 2, scope: !11615)
!11652 = !DILocation(line: 554, column: 6, scope: !11615)
!11653 = !DILocation(line: 562, column: 1, scope: !11615)
!11654 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !2067, file: !2067, line: 410, type: !11655, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11657)
!11655 = !DISubroutineType(types: !11656)
!11656 = !{!103, !1926, !1753}
!11657 = !{!11658, !11659, !11660, !11662}
!11658 = !DILocalVariable(name: "dev", arg: 1, scope: !11654, file: !2067, line: 410, type: !1926)
!11659 = !DILocalVariable(name: "value", arg: 2, scope: !11654, file: !2067, line: 410, type: !1753)
!11660 = !DILocalVariable(name: "cfg", scope: !11654, file: !2067, line: 412, type: !11661)
!11661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 32)
!11662 = !DILocalVariable(name: "gpio", scope: !11654, file: !2067, line: 413, type: !1998)
!11663 = !DILocation(line: 0, scope: !11654)
!11664 = !DILocation(line: 412, column: 45, scope: !11654)
!11665 = !DILocation(line: 413, column: 44, scope: !11654)
!11666 = !DILocation(line: 415, column: 11, scope: !11654)
!11667 = !DILocation(line: 415, column: 9, scope: !11654)
!11668 = !DILocation(line: 417, column: 2, scope: !11654)
!11669 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !2067, file: !2067, line: 420, type: !1951, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11670)
!11670 = !{!11671, !11672, !11673, !11674, !11675, !11676}
!11671 = !DILocalVariable(name: "dev", arg: 1, scope: !11669, file: !2067, line: 420, type: !1926)
!11672 = !DILocalVariable(name: "mask", arg: 2, scope: !11669, file: !2067, line: 421, type: !1953)
!11673 = !DILocalVariable(name: "value", arg: 3, scope: !11669, file: !2067, line: 422, type: !1948)
!11674 = !DILocalVariable(name: "cfg", scope: !11669, file: !2067, line: 424, type: !11661)
!11675 = !DILocalVariable(name: "gpio", scope: !11669, file: !2067, line: 425, type: !1998)
!11676 = !DILocalVariable(name: "port_value", scope: !11669, file: !2067, line: 426, type: !108)
!11677 = !DILocation(line: 0, scope: !11669)
!11678 = !DILocation(line: 424, column: 45, scope: !11669)
!11679 = !DILocation(line: 425, column: 44, scope: !11669)
!11680 = !DILocation(line: 430, column: 15, scope: !11669)
!11681 = !DILocation(line: 431, column: 46, scope: !11669)
!11682 = !DILocation(line: 431, column: 44, scope: !11669)
!11683 = !DILocation(line: 431, column: 61, scope: !11669)
!11684 = !DILocation(line: 431, column: 53, scope: !11669)
!11685 = !DILocation(line: 431, column: 2, scope: !11669)
!11686 = !DILocation(line: 435, column: 2, scope: !11669)
!11687 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !2067, file: !2067, line: 438, type: !1956, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11688)
!11688 = !{!11689, !11690, !11691, !11692}
!11689 = !DILocalVariable(name: "dev", arg: 1, scope: !11687, file: !2067, line: 438, type: !1926)
!11690 = !DILocalVariable(name: "pins", arg: 2, scope: !11687, file: !2067, line: 439, type: !1953)
!11691 = !DILocalVariable(name: "cfg", scope: !11687, file: !2067, line: 441, type: !11661)
!11692 = !DILocalVariable(name: "gpio", scope: !11687, file: !2067, line: 442, type: !1998)
!11693 = !DILocation(line: 0, scope: !11687)
!11694 = !DILocation(line: 441, column: 45, scope: !11687)
!11695 = !DILocation(line: 442, column: 44, scope: !11687)
!11696 = !DILocation(line: 448, column: 2, scope: !11687)
!11697 = !DILocation(line: 450, column: 2, scope: !11687)
!11698 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !2067, file: !2067, line: 453, type: !1956, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11699)
!11699 = !{!11700, !11701, !11702, !11703}
!11700 = !DILocalVariable(name: "dev", arg: 1, scope: !11698, file: !2067, line: 453, type: !1926)
!11701 = !DILocalVariable(name: "pins", arg: 2, scope: !11698, file: !2067, line: 454, type: !1953)
!11702 = !DILocalVariable(name: "cfg", scope: !11698, file: !2067, line: 456, type: !11661)
!11703 = !DILocalVariable(name: "gpio", scope: !11698, file: !2067, line: 457, type: !1998)
!11704 = !DILocation(line: 0, scope: !11698)
!11705 = !DILocation(line: 456, column: 45, scope: !11698)
!11706 = !DILocation(line: 457, column: 44, scope: !11698)
!11707 = !DILocation(line: 467, column: 2, scope: !11698)
!11708 = !DILocation(line: 470, column: 2, scope: !11698)
!11709 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !2067, file: !2067, line: 473, type: !1956, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11710)
!11710 = !{!11711, !11712, !11713, !11714}
!11711 = !DILocalVariable(name: "dev", arg: 1, scope: !11709, file: !2067, line: 473, type: !1926)
!11712 = !DILocalVariable(name: "pins", arg: 2, scope: !11709, file: !2067, line: 474, type: !1953)
!11713 = !DILocalVariable(name: "cfg", scope: !11709, file: !2067, line: 476, type: !11661)
!11714 = !DILocalVariable(name: "gpio", scope: !11709, file: !2067, line: 477, type: !1998)
!11715 = !DILocation(line: 0, scope: !11709)
!11716 = !DILocation(line: 476, column: 45, scope: !11709)
!11717 = !DILocation(line: 477, column: 44, scope: !11709)
!11718 = !DILocation(line: 484, column: 2, scope: !11709)
!11719 = !DILocation(line: 487, column: 2, scope: !11709)
!11720 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !2067, file: !2067, line: 594, type: !1962, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11721)
!11721 = !{!11722, !11723, !11724, !11725, !11726, !11727, !11729, !11730, !11731}
!11722 = !DILocalVariable(name: "dev", arg: 1, scope: !11720, file: !2067, line: 594, type: !1926)
!11723 = !DILocalVariable(name: "pin", arg: 2, scope: !11720, file: !2067, line: 595, type: !1941)
!11724 = !DILocalVariable(name: "mode", arg: 3, scope: !11720, file: !2067, line: 596, type: !1900)
!11725 = !DILocalVariable(name: "trig", arg: 4, scope: !11720, file: !2067, line: 597, type: !1906)
!11726 = !DILocalVariable(name: "cfg", scope: !11720, file: !2067, line: 599, type: !11661)
!11727 = !DILocalVariable(name: "data", scope: !11720, file: !2067, line: 600, type: !11728)
!11728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!11729 = !DILocalVariable(name: "edge", scope: !11720, file: !2067, line: 601, type: !103)
!11730 = !DILocalVariable(name: "err", scope: !11720, file: !2067, line: 602, type: !103)
!11731 = !DILabel(scope: !11720, name: "exit", file: !2067, line: 643)
!11732 = !DILocation(line: 0, scope: !11720)
!11733 = !DILocation(line: 599, column: 45, scope: !11720)
!11734 = !DILocation(line: 604, column: 6, scope: !11720)
!11735 = !DILocation(line: 605, column: 34, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !2067, line: 605, column: 7)
!11737 = distinct !DILexicalBlock(scope: !11738, file: !2067, line: 604, column: 38)
!11738 = distinct !DILexicalBlock(scope: !11720, file: !2067, line: 604, column: 6)
!11739 = !DILocation(line: 605, column: 7, scope: !11736)
!11740 = !DILocation(line: 605, column: 47, scope: !11736)
!11741 = !DILocation(line: 605, column: 39, scope: !11736)
!11742 = !DILocation(line: 605, column: 7, scope: !11737)
!11743 = !DILocation(line: 606, column: 4, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11736, file: !2067, line: 605, column: 53)
!11745 = !DILocation(line: 607, column: 4, scope: !11744)
!11746 = !DILocation(line: 608, column: 4, scope: !11744)
!11747 = !DILocation(line: 609, column: 3, scope: !11744)
!11748 = !DILocation(line: 600, column: 38, scope: !11720)
!11749 = !DILocation(line: 620, column: 30, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11720, file: !2067, line: 620, column: 6)
!11751 = !DILocation(line: 620, column: 6, scope: !11750)
!11752 = !DILocation(line: 620, column: 57, scope: !11750)
!11753 = !DILocation(line: 620, column: 6, scope: !11720)
!11754 = !DILocation(line: 625, column: 29, scope: !11720)
!11755 = !DILocation(line: 625, column: 2, scope: !11720)
!11756 = !DILocation(line: 627, column: 2, scope: !11720)
!11757 = !DILocation(line: 630, column: 3, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11720, file: !2067, line: 627, column: 16)
!11759 = !DILocation(line: 633, column: 3, scope: !11758)
!11760 = !DILocation(line: 636, column: 3, scope: !11758)
!11761 = !DILocation(line: 639, column: 2, scope: !11720)
!11762 = !DILocation(line: 641, column: 2, scope: !11720)
!11763 = !DILocation(line: 643, column: 1, scope: !11720)
!11764 = !DILocation(line: 644, column: 2, scope: !11720)
!11765 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !2067, file: !2067, line: 647, type: !1966, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11766)
!11766 = !{!11767, !11768, !11769, !11770}
!11767 = !DILocalVariable(name: "dev", arg: 1, scope: !11765, file: !2067, line: 647, type: !1926)
!11768 = !DILocalVariable(name: "callback", arg: 2, scope: !11765, file: !2067, line: 648, type: !1968)
!11769 = !DILocalVariable(name: "set", arg: 3, scope: !11765, file: !2067, line: 649, type: !119)
!11770 = !DILocalVariable(name: "data", scope: !11765, file: !2067, line: 651, type: !11728)
!11771 = !DILocation(line: 0, scope: !11765)
!11772 = !DILocation(line: 651, column: 38, scope: !11765)
!11773 = !DILocation(line: 653, column: 37, scope: !11765)
!11774 = !DILocation(line: 653, column: 9, scope: !11765)
!11775 = !DILocation(line: 653, column: 2, scope: !11765)
!11776 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11777, file: !11777, line: 38, type: !11778, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11781)
!11777 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11778 = !DISubroutineType(types: !11779)
!11779 = !{!103, !11780, !1968, !119}
!11780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!11781 = !{!11782, !11783, !11784}
!11782 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11776, file: !11777, line: 38, type: !11780)
!11783 = !DILocalVariable(name: "callback", arg: 2, scope: !11776, file: !11777, line: 39, type: !1968)
!11784 = !DILocalVariable(name: "set", arg: 3, scope: !11776, file: !11777, line: 40, type: !119)
!11785 = !DILocation(line: 0, scope: !11776)
!11786 = !DILocation(line: 42, column: 2, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !11777, line: 42, column: 2)
!11788 = distinct !DILexicalBlock(scope: !11776, file: !11777, line: 42, column: 2)
!11789 = !DILocation(line: 42, column: 2, scope: !11788)
!11790 = !DILocation(line: 42, column: 2, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11787, file: !11777, line: 42, column: 2)
!11792 = !DILocation(line: 43, column: 2, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11794, file: !11777, line: 43, column: 2)
!11794 = distinct !DILexicalBlock(scope: !11776, file: !11777, line: 43, column: 2)
!11795 = !DILocation(line: 43, column: 2, scope: !11794)
!11796 = !DILocation(line: 43, column: 2, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11793, file: !11777, line: 43, column: 2)
!11798 = !DILocation(line: 45, column: 7, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11776, file: !11777, line: 45, column: 6)
!11800 = !DILocation(line: 45, column: 6, scope: !11776)
!11801 = !DILocation(line: 46, column: 56, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11803, file: !11777, line: 46, column: 7)
!11803 = distinct !DILexicalBlock(scope: !11799, file: !11777, line: 45, column: 38)
!11804 = !DILocation(line: 46, column: 8, scope: !11802)
!11805 = !DILocation(line: 46, column: 7, scope: !11803)
!11806 = !DILocation(line: 51, column: 13, scope: !11799)
!11807 = !DILocation(line: 56, column: 43, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !11777, line: 55, column: 11)
!11809 = distinct !DILexicalBlock(scope: !11776, file: !11777, line: 55, column: 6)
!11810 = !DILocation(line: 56, column: 3, scope: !11808)
!11811 = !DILocation(line: 57, column: 2, scope: !11808)
!11812 = !DILocation(line: 60, column: 1, scope: !11776)
!11813 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !289, file: !289, line: 261, type: !11814, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11816)
!11814 = !DISubroutineType(types: !11815)
!11815 = !{!119, !11780}
!11816 = !{!11817}
!11817 = !DILocalVariable(name: "list", arg: 1, scope: !11813, file: !289, line: 261, type: !11780)
!11818 = !DILocation(line: 0, scope: !11813)
!11819 = !DILocation(line: 261, column: 1, scope: !11813)
!11820 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !289, file: !289, line: 417, type: !11821, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11823)
!11821 = !DISubroutineType(types: !11822)
!11822 = !{!119, !11780, !2140}
!11823 = !{!11824, !11825, !11826, !11827}
!11824 = !DILocalVariable(name: "list", arg: 1, scope: !11820, file: !289, line: 417, type: !11780)
!11825 = !DILocalVariable(name: "node", arg: 2, scope: !11820, file: !289, line: 417, type: !2140)
!11826 = !DILocalVariable(name: "prev", scope: !11820, file: !289, line: 417, type: !2140)
!11827 = !DILocalVariable(name: "test", scope: !11820, file: !289, line: 417, type: !2140)
!11828 = !DILocation(line: 0, scope: !11820)
!11829 = !DILocation(line: 417, column: 1, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11820, file: !289, line: 417, column: 1)
!11831 = !DILocation(line: 417, column: 1, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11830, file: !289, line: 417, column: 1)
!11833 = !DILocation(line: 417, column: 1, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !289, line: 417, column: 1)
!11835 = distinct !DILexicalBlock(scope: !11832, file: !289, line: 417, column: 1)
!11836 = !DILocation(line: 417, column: 1, scope: !11835)
!11837 = distinct !{!11837, !11829, !11829}
!11838 = !DILocation(line: 417, column: 1, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11834, file: !289, line: 417, column: 1)
!11840 = !DILocation(line: 417, column: 1, scope: !11820)
!11841 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !289, file: !289, line: 298, type: !11842, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11844)
!11842 = !DISubroutineType(types: !11843)
!11843 = !{null, !11780, !2140}
!11844 = !{!11845, !11846}
!11845 = !DILocalVariable(name: "list", arg: 1, scope: !11841, file: !289, line: 298, type: !11780)
!11846 = !DILocalVariable(name: "node", arg: 2, scope: !11841, file: !289, line: 298, type: !2140)
!11847 = !DILocation(line: 0, scope: !11841)
!11848 = !DILocation(line: 298, column: 1, scope: !11841)
!11849 = !DILocation(line: 298, column: 1, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11841, file: !289, line: 298, column: 1)
!11851 = !DILocation(line: 298, column: 1, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11850, file: !289, line: 298, column: 1)
!11853 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !289, file: !289, line: 231, type: !11854, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11856)
!11854 = !DISubroutineType(types: !11855)
!11855 = !{!2140, !11780}
!11856 = !{!11857}
!11857 = !DILocalVariable(name: "list", arg: 1, scope: !11853, file: !289, line: 231, type: !11780)
!11858 = !DILocation(line: 0, scope: !11853)
!11859 = !DILocation(line: 233, column: 15, scope: !11853)
!11860 = !DILocation(line: 233, column: 2, scope: !11853)
!11861 = distinct !DISubprogram(name: "z_snode_next_set", scope: !289, file: !289, line: 209, type: !11862, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11864)
!11862 = !DISubroutineType(types: !11863)
!11863 = !{null, !2140, !2140}
!11864 = !{!11865, !11866}
!11865 = !DILocalVariable(name: "parent", arg: 1, scope: !11861, file: !289, line: 209, type: !2140)
!11866 = !DILocalVariable(name: "child", arg: 2, scope: !11861, file: !289, line: 209, type: !2140)
!11867 = !DILocation(line: 0, scope: !11861)
!11868 = !DILocation(line: 211, column: 10, scope: !11861)
!11869 = !DILocation(line: 211, column: 15, scope: !11861)
!11870 = !DILocation(line: 212, column: 1, scope: !11861)
!11871 = distinct !DISubprogram(name: "z_slist_head_set", scope: !289, file: !289, line: 214, type: !11842, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11872)
!11872 = !{!11873, !11874}
!11873 = !DILocalVariable(name: "list", arg: 1, scope: !11871, file: !289, line: 214, type: !11780)
!11874 = !DILocalVariable(name: "node", arg: 2, scope: !11871, file: !289, line: 214, type: !2140)
!11875 = !DILocation(line: 0, scope: !11871)
!11876 = !DILocation(line: 216, column: 8, scope: !11871)
!11877 = !DILocation(line: 216, column: 13, scope: !11871)
!11878 = !DILocation(line: 217, column: 1, scope: !11871)
!11879 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !289, file: !289, line: 243, type: !11854, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11880)
!11880 = !{!11881}
!11881 = !DILocalVariable(name: "list", arg: 1, scope: !11879, file: !289, line: 243, type: !11780)
!11882 = !DILocation(line: 0, scope: !11879)
!11883 = !DILocation(line: 245, column: 15, scope: !11879)
!11884 = !DILocation(line: 245, column: 2, scope: !11879)
!11885 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !289, file: !289, line: 219, type: !11842, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11886)
!11886 = !{!11887, !11888}
!11887 = !DILocalVariable(name: "list", arg: 1, scope: !11885, file: !289, line: 219, type: !11780)
!11888 = !DILocalVariable(name: "node", arg: 2, scope: !11885, file: !289, line: 219, type: !2140)
!11889 = !DILocation(line: 0, scope: !11885)
!11890 = !DILocation(line: 221, column: 8, scope: !11885)
!11891 = !DILocation(line: 221, column: 13, scope: !11885)
!11892 = !DILocation(line: 222, column: 1, scope: !11885)
!11893 = distinct !DISubprogram(name: "sys_slist_remove", scope: !289, file: !289, line: 401, type: !11894, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11896)
!11894 = !DISubroutineType(types: !11895)
!11895 = !{null, !11780, !2140, !2140}
!11896 = !{!11897, !11898, !11899}
!11897 = !DILocalVariable(name: "list", arg: 1, scope: !11893, file: !289, line: 401, type: !11780)
!11898 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11893, file: !289, line: 401, type: !2140)
!11899 = !DILocalVariable(name: "node", arg: 3, scope: !11893, file: !289, line: 401, type: !2140)
!11900 = !DILocation(line: 0, scope: !11893)
!11901 = !DILocation(line: 401, column: 1, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11893, file: !289, line: 401, column: 1)
!11903 = !DILocation(line: 0, scope: !11902)
!11904 = !DILocation(line: 401, column: 1, scope: !11893)
!11905 = !DILocation(line: 401, column: 1, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11902, file: !289, line: 401, column: 1)
!11907 = !DILocation(line: 401, column: 1, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11906, file: !289, line: 401, column: 1)
!11909 = !DILocation(line: 401, column: 1, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11908, file: !289, line: 401, column: 1)
!11911 = !DILocation(line: 401, column: 1, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11902, file: !289, line: 401, column: 1)
!11913 = !DILocation(line: 401, column: 1, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11912, file: !289, line: 401, column: 1)
!11915 = !DILocation(line: 401, column: 1, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11914, file: !289, line: 401, column: 1)
!11917 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !289, file: !289, line: 285, type: !11918, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11920)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!2140, !2140}
!11920 = !{!11921}
!11921 = !DILocalVariable(name: "node", arg: 1, scope: !11917, file: !289, line: 285, type: !2140)
!11922 = !DILocation(line: 0, scope: !11917)
!11923 = !DILocation(line: 285, column: 1, scope: !11917)
!11924 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !289, file: !289, line: 274, type: !11918, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11925)
!11925 = !{!11926}
!11926 = !DILocalVariable(name: "node", arg: 1, scope: !11924, file: !289, line: 274, type: !2140)
!11927 = !DILocation(line: 0, scope: !11924)
!11928 = !DILocation(line: 274, column: 1, scope: !11924)
!11929 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !289, file: !289, line: 204, type: !11918, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11930)
!11930 = !{!11931}
!11931 = !DILocalVariable(name: "node", arg: 1, scope: !11929, file: !289, line: 204, type: !2140)
!11932 = !DILocation(line: 0, scope: !11929)
!11933 = !DILocation(line: 206, column: 15, scope: !11929)
!11934 = !DILocation(line: 206, column: 2, scope: !11929)
!11935 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !2067, file: !2067, line: 342, type: !800, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11936)
!11936 = !{!11937, !11938, !11939}
!11937 = !DILocalVariable(name: "pin", arg: 1, scope: !11935, file: !2067, line: 342, type: !103)
!11938 = !DILocalVariable(name: "line", scope: !11935, file: !2067, line: 344, type: !108)
!11939 = !DILocalVariable(name: "port", scope: !11935, file: !2067, line: 345, type: !103)
!11940 = !DILocation(line: 0, scope: !11935)
!11941 = !DILocation(line: 344, column: 18, scope: !11935)
!11942 = !{i32 983040, i32 0}
!11943 = !DILocation(line: 356, column: 9, scope: !11935)
!11944 = !DILocation(line: 370, column: 2, scope: !11935)
!11945 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !2067, file: !2067, line: 37, type: !1609, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11946)
!11946 = !{!11947, !11948, !11949}
!11947 = !DILocalVariable(name: "line", arg: 1, scope: !11945, file: !2067, line: 37, type: !103)
!11948 = !DILocalVariable(name: "arg", arg: 2, scope: !11945, file: !2067, line: 37, type: !102)
!11949 = !DILocalVariable(name: "data", scope: !11945, file: !2067, line: 39, type: !11728)
!11950 = !DILocation(line: 0, scope: !11945)
!11951 = !DILocation(line: 41, column: 29, scope: !11945)
!11952 = !DILocation(line: 41, column: 39, scope: !11945)
!11953 = !DILocation(line: 41, column: 44, scope: !11945)
!11954 = !DILocation(line: 41, column: 2, scope: !11945)
!11955 = !DILocation(line: 42, column: 1, scope: !11945)
!11956 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !2067, file: !2067, line: 376, type: !11957, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11959)
!11957 = !DISubroutineType(types: !11958)
!11958 = !{!103, !103, !103}
!11959 = !{!11960, !11961, !11962, !11964, !11965}
!11960 = !DILocalVariable(name: "port", arg: 1, scope: !11956, file: !2067, line: 376, type: !103)
!11961 = !DILocalVariable(name: "pin", arg: 2, scope: !11956, file: !2067, line: 376, type: !103)
!11962 = !DILocalVariable(name: "clk", scope: !11956, file: !2067, line: 386, type: !11963)
!11963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1926)
!11964 = !DILocalVariable(name: "pclken", scope: !11956, file: !2067, line: 387, type: !2183)
!11965 = !DILocalVariable(name: "ret", scope: !11956, file: !2067, line: 396, type: !103)
!11966 = !DILocation(line: 0, scope: !11956)
!11967 = !DILocation(line: 387, column: 2, scope: !11956)
!11968 = !DILocation(line: 387, column: 22, scope: !11956)
!11969 = !DILocation(line: 399, column: 8, scope: !11956)
!11970 = !DILocation(line: 400, column: 10, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11956, file: !2067, line: 400, column: 6)
!11972 = !DILocation(line: 400, column: 6, scope: !11956)
!11973 = !DILocation(line: 405, column: 2, scope: !11956)
!11974 = !DILocation(line: 407, column: 2, scope: !11956)
!11975 = !DILocation(line: 408, column: 1, scope: !11956)
!11976 = distinct !DISubprogram(name: "clock_control_on", scope: !1701, file: !1701, line: 123, type: !2032, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11977)
!11977 = !{!11978, !11979, !11980}
!11978 = !DILocalVariable(name: "dev", arg: 1, scope: !11976, file: !1701, line: 123, type: !1926)
!11979 = !DILocalVariable(name: "sys", arg: 2, scope: !11976, file: !1701, line: 124, type: !1797)
!11980 = !DILocalVariable(name: "api", scope: !11976, file: !1701, line: 126, type: !2025)
!11981 = !DILocation(line: 0, scope: !11976)
!11982 = !DILocation(line: 127, column: 49, scope: !11976)
!11983 = !DILocation(line: 129, column: 14, scope: !11976)
!11984 = !DILocation(line: 129, column: 9, scope: !11976)
!11985 = !DILocation(line: 129, column: 2, scope: !11976)
!11986 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !2067, file: !2067, line: 311, type: !11090, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11987)
!11987 = !{!11988, !11989, !11990}
!11988 = !DILocalVariable(name: "port", arg: 1, scope: !11986, file: !2067, line: 311, type: !103)
!11989 = !DILocalVariable(name: "pin", arg: 2, scope: !11986, file: !2067, line: 311, type: !103)
!11990 = !DILocalVariable(name: "line", scope: !11986, file: !2067, line: 313, type: !108)
!11991 = !DILocation(line: 0, scope: !11986)
!11992 = !DILocation(line: 313, column: 18, scope: !11986)
!11993 = !DILocation(line: 337, column: 2, scope: !11986)
!11994 = !DILocation(line: 340, column: 1, scope: !11986)
!11995 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !2067, file: !2067, line: 295, type: !11996, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !11998)
!11996 = !DISubroutineType(types: !11997)
!11997 = !{!108, !103}
!11998 = !{!11999}
!11999 = !DILocalVariable(name: "pin", arg: 1, scope: !11995, file: !2067, line: 295, type: !103)
!12000 = !DILocation(line: 0, scope: !11995)
!12001 = !DILocation(line: 307, column: 46, scope: !11995)
!12002 = !DILocation(line: 307, column: 27, scope: !11995)
!12003 = !DILocation(line: 307, column: 32, scope: !11995)
!12004 = !DILocation(line: 307, column: 14, scope: !11995)
!12005 = !DILocation(line: 307, column: 39, scope: !11995)
!12006 = !DILocation(line: 307, column: 2, scope: !11995)
!12007 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !8006, file: !8006, line: 671, type: !12008, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12010)
!12008 = !DISubroutineType(types: !12009)
!12009 = !{null, !108, !108}
!12010 = !{!12011, !12012}
!12011 = !DILocalVariable(name: "Port", arg: 1, scope: !12007, file: !8006, line: 671, type: !108)
!12012 = !DILocalVariable(name: "Line", arg: 2, scope: !12007, file: !8006, line: 671, type: !108)
!12013 = !DILocation(line: 0, scope: !12007)
!12014 = !DILocation(line: 673, column: 3, scope: !12007)
!12015 = !DILocalVariable(name: "value", arg: 1, scope: !12016, file: !8306, line: 373, type: !108)
!12016 = distinct !DISubprogram(name: "__RBIT", scope: !8306, file: !8306, line: 373, type: !9590, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12017)
!12017 = !{!12015, !12018}
!12018 = !DILocalVariable(name: "result", scope: !12016, file: !8306, line: 375, type: !108)
!12019 = !DILocation(line: 0, scope: !12016, inlinedAt: !12020)
!12020 = distinct !DILocation(line: 673, column: 3, scope: !12007)
!12021 = !DILocation(line: 380, column: 4, scope: !12016, inlinedAt: !12020)
!12022 = !{i64 3734249}
!12023 = !DILocalVariable(name: "value", arg: 1, scope: !12024, file: !8306, line: 403, type: !108)
!12024 = distinct !DISubprogram(name: "__CLZ", scope: !8306, file: !8306, line: 403, type: !12025, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12027)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{!164, !108}
!12027 = !{!12023}
!12028 = !DILocation(line: 0, scope: !12024, inlinedAt: !12029)
!12029 = distinct !DILocation(line: 673, column: 3, scope: !12007)
!12030 = !DILocation(line: 414, column: 7, scope: !12024, inlinedAt: !12029)
!12031 = !DILocation(line: 674, column: 1, scope: !12007)
!12032 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11777, file: !11777, line: 69, type: !12033, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12035)
!12033 = !DISubroutineType(types: !12034)
!12034 = !{null, !11780, !1926, !108}
!12035 = !{!12036, !12037, !12038, !12039, !12040}
!12036 = !DILocalVariable(name: "list", arg: 1, scope: !12032, file: !11777, line: 69, type: !11780)
!12037 = !DILocalVariable(name: "port", arg: 2, scope: !12032, file: !11777, line: 70, type: !1926)
!12038 = !DILocalVariable(name: "pins", arg: 3, scope: !12032, file: !11777, line: 71, type: !108)
!12039 = !DILocalVariable(name: "cb", scope: !12032, file: !11777, line: 73, type: !1968)
!12040 = !DILocalVariable(name: "tmp", scope: !12032, file: !11777, line: 73, type: !1968)
!12041 = !DILocation(line: 0, scope: !12032)
!12042 = !DILocation(line: 75, column: 2, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12032, file: !11777, line: 75, column: 2)
!12044 = !DILocation(line: 0, scope: !12043)
!12045 = !DILocation(line: 76, column: 11, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12047, file: !11777, line: 76, column: 7)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !11777, line: 75, column: 57)
!12048 = distinct !DILexicalBlock(scope: !12043, file: !11777, line: 75, column: 2)
!12049 = !DILocation(line: 76, column: 20, scope: !12046)
!12050 = !DILocation(line: 76, column: 7, scope: !12047)
!12051 = !DILocation(line: 77, column: 4, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12053, file: !11777, line: 77, column: 4)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !11777, line: 77, column: 4)
!12054 = distinct !DILexicalBlock(scope: !12046, file: !11777, line: 76, column: 28)
!12055 = !DILocation(line: 77, column: 4, scope: !12053)
!12056 = !DILocation(line: 77, column: 4, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12052, file: !11777, line: 77, column: 4)
!12058 = !DILocation(line: 78, column: 4, scope: !12054)
!12059 = !DILocation(line: 79, column: 3, scope: !12054)
!12060 = !DILocation(line: 75, column: 2, scope: !12048)
!12061 = !DILocation(line: 81, column: 1, scope: !12032)
!12062 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !8006, file: !8006, line: 710, type: !9590, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12063)
!12063 = !{!12064}
!12064 = !DILocalVariable(name: "Line", arg: 1, scope: !12062, file: !8006, line: 710, type: !108)
!12065 = !DILocation(line: 0, scope: !12062)
!12066 = !DILocation(line: 712, column: 21, scope: !12062)
!12067 = !DILocation(line: 0, scope: !12016, inlinedAt: !12068)
!12068 = distinct !DILocation(line: 712, column: 76, scope: !12062)
!12069 = !DILocation(line: 380, column: 4, scope: !12016, inlinedAt: !12068)
!12070 = !DILocation(line: 0, scope: !12024, inlinedAt: !12071)
!12071 = distinct !DILocation(line: 712, column: 76, scope: !12062)
!12072 = !DILocation(line: 414, column: 7, scope: !12024, inlinedAt: !12071)
!12073 = !DILocation(line: 712, column: 73, scope: !12062)
!12074 = !DILocation(line: 712, column: 3, scope: !12062)
!12075 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !12076, file: !12076, line: 910, type: !12077, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12079)
!12076 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12077 = !DISubroutineType(types: !12078)
!12078 = !{null, !1998, !108}
!12079 = !{!12080, !12081}
!12080 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12075, file: !12076, line: 910, type: !1998)
!12081 = !DILocalVariable(name: "PinMask", arg: 2, scope: !12075, file: !12076, line: 910, type: !108)
!12082 = !DILocation(line: 0, scope: !12075)
!12083 = !DILocation(line: 912, column: 3, scope: !12075)
!12084 = !DILocation(line: 913, column: 1, scope: !12075)
!12085 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !12076, file: !12076, line: 823, type: !12086, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12088)
!12086 = !DISubroutineType(types: !12087)
!12087 = !{!108, !1998}
!12088 = !{!12089}
!12089 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12085, file: !12076, line: 823, type: !1998)
!12090 = !DILocation(line: 0, scope: !12085)
!12091 = !DILocation(line: 825, column: 21, scope: !12085)
!12092 = !DILocation(line: 825, column: 3, scope: !12085)
!12093 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !12076, file: !12076, line: 812, type: !12077, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12094)
!12094 = !{!12095, !12096}
!12095 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12093, file: !12076, line: 812, type: !1998)
!12096 = !DILocalVariable(name: "PortValue", arg: 2, scope: !12093, file: !12076, line: 812, type: !108)
!12097 = !DILocation(line: 0, scope: !12093)
!12098 = !DILocation(line: 814, column: 3, scope: !12093)
!12099 = !DILocation(line: 815, column: 1, scope: !12093)
!12100 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !12076, file: !12076, line: 771, type: !12086, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12101)
!12101 = !{!12102}
!12102 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12100, file: !12076, line: 771, type: !1998)
!12103 = !DILocation(line: 0, scope: !12100)
!12104 = !DILocation(line: 773, column: 21, scope: !12100)
!12105 = !DILocation(line: 773, column: 3, scope: !12100)
!12106 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !2067, file: !2067, line: 47, type: !12107, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12109)
!12107 = !DISubroutineType(types: !12108)
!12108 = !{!103, !1942, !778}
!12109 = !{!12110, !12111}
!12110 = !DILocalVariable(name: "flags", arg: 1, scope: !12106, file: !2067, line: 47, type: !1942)
!12111 = !DILocalVariable(name: "pincfg", arg: 2, scope: !12106, file: !2067, line: 47, type: !778)
!12112 = !DILocation(line: 0, scope: !12106)
!12113 = !DILocation(line: 50, column: 13, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12106, file: !2067, line: 50, column: 6)
!12115 = !DILocation(line: 50, column: 28, scope: !12114)
!12116 = !DILocation(line: 50, column: 6, scope: !12106)
!12117 = !DILocation(line: 53, column: 11, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12114, file: !2067, line: 50, column: 34)
!12119 = !DILocation(line: 55, column: 14, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12118, file: !2067, line: 55, column: 7)
!12121 = !DILocation(line: 55, column: 35, scope: !12120)
!12122 = !DILocation(line: 55, column: 7, scope: !12118)
!12123 = !DILocation(line: 56, column: 14, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12125, file: !2067, line: 56, column: 8)
!12125 = distinct !DILexicalBlock(scope: !12120, file: !2067, line: 55, column: 41)
!12126 = !DILocation(line: 56, column: 8, scope: !12125)
!12127 = !DILocation(line: 0, scope: !12120)
!12128 = !DILocation(line: 66, column: 14, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12118, file: !2067, line: 66, column: 7)
!12130 = !DILocation(line: 66, column: 30, scope: !12129)
!12131 = !DILocation(line: 66, column: 7, scope: !12118)
!12132 = !DILocation(line: 67, column: 12, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12129, file: !2067, line: 66, column: 36)
!12134 = !DILocation(line: 68, column: 3, scope: !12133)
!12135 = !DILocation(line: 68, column: 21, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12129, file: !2067, line: 68, column: 14)
!12137 = !DILocation(line: 68, column: 39, scope: !12136)
!12138 = !DILocation(line: 68, column: 14, scope: !12129)
!12139 = !DILocation(line: 69, column: 12, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !2067, line: 68, column: 45)
!12141 = !DILocation(line: 70, column: 3, scope: !12140)
!12142 = !DILocation(line: 72, column: 21, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12114, file: !2067, line: 72, column: 14)
!12144 = !DILocation(line: 72, column: 35, scope: !12143)
!12145 = !DILocation(line: 72, column: 14, scope: !12114)
!12146 = !DILocation(line: 77, column: 14, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !2067, line: 77, column: 7)
!12148 = distinct !DILexicalBlock(scope: !12143, file: !2067, line: 72, column: 41)
!12149 = !DILocation(line: 77, column: 30, scope: !12147)
!12150 = !DILocation(line: 77, column: 7, scope: !12148)
!12151 = !DILocation(line: 0, scope: !12114)
!12152 = !DILocation(line: 90, column: 1, scope: !12106)
!12153 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !2067, file: !2067, line: 157, type: !12154, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12156)
!12154 = !DISubroutineType(types: !12155)
!12155 = !{null, !1926, !103, !103, !103}
!12156 = !{!12157, !12158, !12159, !12160, !12161, !12162, !12163, !12164, !12165, !12166, !12167}
!12157 = !DILocalVariable(name: "dev", arg: 1, scope: !12153, file: !2067, line: 157, type: !1926)
!12158 = !DILocalVariable(name: "pin", arg: 2, scope: !12153, file: !2067, line: 157, type: !103)
!12159 = !DILocalVariable(name: "conf", arg: 3, scope: !12153, file: !2067, line: 158, type: !103)
!12160 = !DILocalVariable(name: "func", arg: 4, scope: !12153, file: !2067, line: 158, type: !103)
!12161 = !DILocalVariable(name: "cfg", scope: !12153, file: !2067, line: 160, type: !11661)
!12162 = !DILocalVariable(name: "gpio", scope: !12153, file: !2067, line: 161, type: !1998)
!12163 = !DILocalVariable(name: "pin_ll", scope: !12153, file: !2067, line: 163, type: !103)
!12164 = !DILocalVariable(name: "mode", scope: !12153, file: !2067, line: 227, type: !32)
!12165 = !DILocalVariable(name: "otype", scope: !12153, file: !2067, line: 227, type: !32)
!12166 = !DILocalVariable(name: "ospeed", scope: !12153, file: !2067, line: 227, type: !32)
!12167 = !DILocalVariable(name: "pupd", scope: !12153, file: !2067, line: 227, type: !32)
!12168 = !DILocation(line: 0, scope: !12153)
!12169 = !DILocation(line: 160, column: 45, scope: !12153)
!12170 = !DILocation(line: 161, column: 44, scope: !12153)
!12171 = !DILocation(line: 163, column: 15, scope: !12153)
!12172 = !DILocation(line: 229, column: 14, scope: !12153)
!12173 = !DILocation(line: 246, column: 47, scope: !12153)
!12174 = !DILocation(line: 246, column: 2, scope: !12153)
!12175 = !DILocation(line: 248, column: 43, scope: !12153)
!12176 = !DILocation(line: 248, column: 2, scope: !12153)
!12177 = !DILocation(line: 250, column: 40, scope: !12153)
!12178 = !DILocation(line: 250, column: 2, scope: !12153)
!12179 = !DILocation(line: 252, column: 11, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12153, file: !2067, line: 252, column: 6)
!12181 = !DILocation(line: 252, column: 6, scope: !12153)
!12182 = !DILocation(line: 253, column: 11, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !2067, line: 253, column: 7)
!12184 = distinct !DILexicalBlock(scope: !12180, file: !2067, line: 252, column: 36)
!12185 = !DILocation(line: 253, column: 7, scope: !12184)
!12186 = !DILocation(line: 254, column: 4, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12183, file: !2067, line: 253, column: 16)
!12188 = !DILocation(line: 255, column: 3, scope: !12187)
!12189 = !DILocation(line: 256, column: 4, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12183, file: !2067, line: 255, column: 10)
!12191 = !DILocation(line: 260, column: 40, scope: !12153)
!12192 = !DILocation(line: 260, column: 2, scope: !12153)
!12193 = !DILocation(line: 265, column: 1, scope: !12153)
!12194 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !2067, file: !2067, line: 137, type: !11996, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12195)
!12195 = !{!12196, !12197}
!12196 = !DILocalVariable(name: "pin", arg: 1, scope: !12194, file: !2067, line: 137, type: !103)
!12197 = !DILocalVariable(name: "pinval", scope: !12194, file: !2067, line: 139, type: !108)
!12198 = !DILocation(line: 0, scope: !12194)
!12199 = !DILocation(line: 149, column: 13, scope: !12194)
!12200 = !DILocation(line: 151, column: 2, scope: !12194)
!12201 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !12076, file: !12076, line: 342, type: !12202, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12204)
!12202 = !DISubroutineType(types: !12203)
!12203 = !{null, !1998, !108, !108}
!12204 = !{!12205, !12206, !12207}
!12205 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12201, file: !12076, line: 342, type: !1998)
!12206 = !DILocalVariable(name: "PinMask", arg: 2, scope: !12201, file: !12076, line: 342, type: !108)
!12207 = !DILocalVariable(name: "OutputType", arg: 3, scope: !12201, file: !12076, line: 342, type: !108)
!12208 = !DILocation(line: 0, scope: !12201)
!12209 = !DILocation(line: 344, column: 3, scope: !12201)
!12210 = !DILocation(line: 345, column: 1, scope: !12201)
!12211 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !12076, file: !12076, line: 413, type: !12202, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12212)
!12212 = !{!12213, !12214, !12215}
!12213 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12211, file: !12076, line: 413, type: !1998)
!12214 = !DILocalVariable(name: "Pin", arg: 2, scope: !12211, file: !12076, line: 413, type: !108)
!12215 = !DILocalVariable(name: "Speed", arg: 3, scope: !12211, file: !12076, line: 413, type: !108)
!12216 = !DILocation(line: 0, scope: !12211)
!12217 = !DILocation(line: 415, column: 3, scope: !12211)
!12218 = !DILocation(line: 0, scope: !12016, inlinedAt: !12219)
!12219 = distinct !DILocation(line: 415, column: 3, scope: !12211)
!12220 = !DILocation(line: 380, column: 4, scope: !12016, inlinedAt: !12219)
!12221 = !DILocation(line: 0, scope: !12024, inlinedAt: !12222)
!12222 = distinct !DILocation(line: 415, column: 3, scope: !12211)
!12223 = !DILocation(line: 414, column: 7, scope: !12024, inlinedAt: !12222)
!12224 = !DILocation(line: 0, scope: !12016, inlinedAt: !12225)
!12225 = distinct !DILocation(line: 415, column: 3, scope: !12211)
!12226 = !DILocation(line: 0, scope: !12024, inlinedAt: !12227)
!12227 = distinct !DILocation(line: 415, column: 3, scope: !12211)
!12228 = !DILocation(line: 417, column: 1, scope: !12211)
!12229 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !12076, file: !12076, line: 484, type: !12202, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12230)
!12230 = !{!12231, !12232, !12233}
!12231 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12229, file: !12076, line: 484, type: !1998)
!12232 = !DILocalVariable(name: "Pin", arg: 2, scope: !12229, file: !12076, line: 484, type: !108)
!12233 = !DILocalVariable(name: "Pull", arg: 3, scope: !12229, file: !12076, line: 484, type: !108)
!12234 = !DILocation(line: 0, scope: !12229)
!12235 = !DILocation(line: 486, column: 3, scope: !12229)
!12236 = !DILocation(line: 0, scope: !12016, inlinedAt: !12237)
!12237 = distinct !DILocation(line: 486, column: 3, scope: !12229)
!12238 = !DILocation(line: 380, column: 4, scope: !12016, inlinedAt: !12237)
!12239 = !DILocation(line: 0, scope: !12024, inlinedAt: !12240)
!12240 = distinct !DILocation(line: 486, column: 3, scope: !12229)
!12241 = !DILocation(line: 414, column: 7, scope: !12024, inlinedAt: !12240)
!12242 = !DILocation(line: 0, scope: !12016, inlinedAt: !12243)
!12243 = distinct !DILocation(line: 486, column: 3, scope: !12229)
!12244 = !DILocation(line: 0, scope: !12024, inlinedAt: !12245)
!12245 = distinct !DILocation(line: 486, column: 3, scope: !12229)
!12246 = !DILocation(line: 487, column: 1, scope: !12229)
!12247 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !12076, file: !12076, line: 556, type: !12202, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12248)
!12248 = !{!12249, !12250, !12251}
!12249 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12247, file: !12076, line: 556, type: !1998)
!12250 = !DILocalVariable(name: "Pin", arg: 2, scope: !12247, file: !12076, line: 556, type: !108)
!12251 = !DILocalVariable(name: "Alternate", arg: 3, scope: !12247, file: !12076, line: 556, type: !108)
!12252 = !DILocation(line: 0, scope: !12247)
!12253 = !DILocation(line: 558, column: 3, scope: !12247)
!12254 = !DILocation(line: 0, scope: !12016, inlinedAt: !12255)
!12255 = distinct !DILocation(line: 558, column: 3, scope: !12247)
!12256 = !DILocation(line: 380, column: 4, scope: !12016, inlinedAt: !12255)
!12257 = !DILocation(line: 0, scope: !12024, inlinedAt: !12258)
!12258 = distinct !DILocation(line: 558, column: 3, scope: !12247)
!12259 = !DILocation(line: 414, column: 7, scope: !12024, inlinedAt: !12258)
!12260 = !DILocation(line: 0, scope: !12016, inlinedAt: !12261)
!12261 = distinct !DILocation(line: 558, column: 3, scope: !12247)
!12262 = !DILocation(line: 0, scope: !12024, inlinedAt: !12263)
!12263 = distinct !DILocation(line: 558, column: 3, scope: !12247)
!12264 = !DILocation(line: 560, column: 1, scope: !12247)
!12265 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !12076, file: !12076, line: 633, type: !12202, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12266)
!12266 = !{!12267, !12268, !12269}
!12267 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12265, file: !12076, line: 633, type: !1998)
!12268 = !DILocalVariable(name: "Pin", arg: 2, scope: !12265, file: !12076, line: 633, type: !108)
!12269 = !DILocalVariable(name: "Alternate", arg: 3, scope: !12265, file: !12076, line: 633, type: !108)
!12270 = !DILocation(line: 0, scope: !12265)
!12271 = !DILocation(line: 635, column: 3, scope: !12265)
!12272 = !DILocation(line: 0, scope: !12016, inlinedAt: !12273)
!12273 = distinct !DILocation(line: 635, column: 3, scope: !12265)
!12274 = !DILocation(line: 380, column: 4, scope: !12016, inlinedAt: !12273)
!12275 = !DILocation(line: 0, scope: !12024, inlinedAt: !12276)
!12276 = distinct !DILocation(line: 635, column: 3, scope: !12265)
!12277 = !DILocation(line: 414, column: 7, scope: !12024, inlinedAt: !12276)
!12278 = !DILocation(line: 0, scope: !12016, inlinedAt: !12279)
!12279 = distinct !DILocation(line: 635, column: 3, scope: !12265)
!12280 = !DILocation(line: 0, scope: !12024, inlinedAt: !12281)
!12281 = distinct !DILocation(line: 635, column: 3, scope: !12265)
!12282 = !DILocation(line: 637, column: 1, scope: !12265)
!12283 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !12076, file: !12076, line: 273, type: !12202, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12284)
!12284 = !{!12285, !12286, !12287}
!12285 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !12283, file: !12076, line: 273, type: !1998)
!12286 = !DILocalVariable(name: "Pin", arg: 2, scope: !12283, file: !12076, line: 273, type: !108)
!12287 = !DILocalVariable(name: "Mode", arg: 3, scope: !12283, file: !12076, line: 273, type: !108)
!12288 = !DILocation(line: 0, scope: !12283)
!12289 = !DILocation(line: 275, column: 3, scope: !12283)
!12290 = !DILocation(line: 0, scope: !12016, inlinedAt: !12291)
!12291 = distinct !DILocation(line: 275, column: 3, scope: !12283)
!12292 = !DILocation(line: 380, column: 4, scope: !12016, inlinedAt: !12291)
!12293 = !DILocation(line: 0, scope: !12024, inlinedAt: !12294)
!12294 = distinct !DILocation(line: 275, column: 3, scope: !12283)
!12295 = !DILocation(line: 414, column: 7, scope: !12024, inlinedAt: !12294)
!12296 = !DILocation(line: 0, scope: !12016, inlinedAt: !12297)
!12297 = distinct !DILocation(line: 275, column: 3, scope: !12283)
!12298 = !DILocation(line: 0, scope: !12024, inlinedAt: !12299)
!12299 = distinct !DILocation(line: 275, column: 3, scope: !12283)
!12300 = !DILocation(line: 276, column: 1, scope: !12283)
!12301 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !2067, file: !2067, line: 698, type: !2080, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12302)
!12302 = !{!12303, !12304, !12305}
!12303 = !DILocalVariable(name: "dev", arg: 1, scope: !12301, file: !2067, line: 698, type: !1926)
!12304 = !DILocalVariable(name: "data", scope: !12301, file: !2067, line: 700, type: !11728)
!12305 = !DILocalVariable(name: "ret", scope: !12301, file: !2067, line: 701, type: !103)
!12306 = !DILocation(line: 0, scope: !12301)
!12307 = !DILocation(line: 700, column: 38, scope: !12301)
!12308 = !DILocation(line: 703, column: 8, scope: !12301)
!12309 = !DILocation(line: 703, column: 12, scope: !12301)
!12310 = !DILocation(line: 705, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12301, file: !2067, line: 705, column: 6)
!12312 = !DILocation(line: 705, column: 6, scope: !12301)
!12313 = !DILocation(line: 722, column: 8, scope: !12301)
!12314 = !DILocation(line: 723, column: 10, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12301, file: !2067, line: 723, column: 6)
!12316 = !DILocation(line: 723, column: 6, scope: !12301)
!12317 = !DILocation(line: 731, column: 1, scope: !12301)
!12318 = distinct !DISubprogram(name: "device_is_ready", scope: !11506, file: !11506, line: 47, type: !12319, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12321)
!12319 = !DISubroutineType(types: !12320)
!12320 = !{!119, !1926}
!12321 = !{!12322}
!12322 = !DILocalVariable(name: "dev", arg: 1, scope: !12318, file: !11506, line: 47, type: !1926)
!12323 = !DILocation(line: 0, scope: !12318)
!12324 = !DILocation(line: 55, column: 2, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12318, file: !11506, line: 55, column: 2)
!12326 = !{i64 2155288952}
!12327 = !DILocation(line: 56, column: 9, scope: !12318)
!12328 = !DILocation(line: 56, column: 2, scope: !12318)
!12329 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !2067, file: !2067, line: 270, type: !12330, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12332)
!12330 = !DISubroutineType(types: !12331)
!12331 = !{!103, !1926, !119}
!12332 = !{!12333, !12334, !12335, !12336, !12337}
!12333 = !DILocalVariable(name: "dev", arg: 1, scope: !12329, file: !2067, line: 270, type: !1926)
!12334 = !DILocalVariable(name: "on", arg: 2, scope: !12329, file: !2067, line: 270, type: !119)
!12335 = !DILocalVariable(name: "cfg", scope: !12329, file: !2067, line: 272, type: !11661)
!12336 = !DILocalVariable(name: "ret", scope: !12329, file: !2067, line: 273, type: !103)
!12337 = !DILocalVariable(name: "clk", scope: !12329, file: !2067, line: 278, type: !11963)
!12338 = !DILocation(line: 0, scope: !12329)
!12339 = !DILocation(line: 272, column: 45, scope: !12329)
!12340 = !DILocation(line: 282, column: 38, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !2067, line: 280, column: 10)
!12342 = distinct !DILexicalBlock(scope: !12329, file: !2067, line: 280, column: 6)
!12343 = !DILocation(line: 282, column: 6, scope: !12341)
!12344 = !DILocation(line: 281, column: 9, scope: !12341)
!12345 = !DILocation(line: 293, column: 1, scope: !12329)
!12346 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !833, file: !833, line: 730, type: !12319, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12347)
!12347 = !{!12348}
!12348 = !DILocalVariable(name: "dev", arg: 1, scope: !12346, file: !833, line: 730, type: !1926)
!12349 = !DILocation(line: 0, scope: !12346)
!12350 = !DILocation(line: 732, column: 9, scope: !12346)
!12351 = !DILocation(line: 732, column: 2, scope: !12346)
!12352 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !2067, file: !2067, line: 496, type: !12353, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!103, !1926, !103, !103, !103}
!12355 = !{!12356, !12357, !12358, !12359, !12360, !12361}
!12356 = !DILocalVariable(name: "dev", arg: 1, scope: !12352, file: !2067, line: 496, type: !1926)
!12357 = !DILocalVariable(name: "pin", arg: 2, scope: !12352, file: !2067, line: 496, type: !103)
!12358 = !DILocalVariable(name: "conf", arg: 3, scope: !12352, file: !2067, line: 496, type: !103)
!12359 = !DILocalVariable(name: "func", arg: 4, scope: !12352, file: !2067, line: 496, type: !103)
!12360 = !DILocalVariable(name: "ret", scope: !12352, file: !2067, line: 498, type: !103)
!12361 = !DILocalVariable(name: "gpio_out", scope: !12362, file: !2067, line: 508, type: !108)
!12362 = distinct !DILexicalBlock(scope: !12363, file: !2067, line: 507, column: 27)
!12363 = distinct !DILexicalBlock(scope: !12352, file: !2067, line: 507, column: 6)
!12364 = !DILocation(line: 0, scope: !12352)
!12365 = !DILocation(line: 505, column: 2, scope: !12352)
!12366 = !DILocation(line: 507, column: 11, scope: !12363)
!12367 = !DILocation(line: 507, column: 6, scope: !12352)
!12368 = !DILocation(line: 508, column: 28, scope: !12362)
!12369 = !DILocation(line: 0, scope: !12362)
!12370 = !DILocation(line: 510, column: 16, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12362, file: !2067, line: 510, column: 7)
!12372 = !DILocation(line: 0, scope: !12371)
!12373 = !DILocation(line: 510, column: 7, scope: !12362)
!12374 = !DILocation(line: 511, column: 4, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12371, file: !2067, line: 510, column: 32)
!12376 = !DILocation(line: 512, column: 3, scope: !12375)
!12377 = !DILocation(line: 513, column: 4, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12379, file: !2067, line: 512, column: 39)
!12379 = distinct !DILexicalBlock(scope: !12371, file: !2067, line: 512, column: 14)
!12380 = !DILocation(line: 514, column: 3, scope: !12378)
!12381 = !DILocation(line: 518, column: 1, scope: !12352)
!12382 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !2340, file: !2340, line: 526, type: !2243, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12383)
!12383 = !{!12384, !12385, !12386}
!12384 = !DILocalVariable(name: "dev", arg: 1, scope: !12382, file: !2340, line: 526, type: !2245)
!12385 = !DILocalVariable(name: "c", arg: 2, scope: !12382, file: !2340, line: 526, type: !1858)
!12386 = !DILocalVariable(name: "config", scope: !12382, file: !2340, line: 528, type: !12387)
!12387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!12388 = !DILocation(line: 0, scope: !12382)
!12389 = !DILocation(line: 528, column: 48, scope: !12382)
!12390 = !DILocation(line: 531, column: 40, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12382, file: !2340, line: 531, column: 6)
!12392 = !DILocation(line: 531, column: 6, scope: !12391)
!12393 = !DILocation(line: 531, column: 6, scope: !12382)
!12394 = !DILocation(line: 532, column: 34, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12391, file: !2340, line: 531, column: 48)
!12396 = !DILocation(line: 532, column: 3, scope: !12395)
!12397 = !DILocation(line: 533, column: 2, scope: !12395)
!12398 = !DILocation(line: 539, column: 42, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12382, file: !2340, line: 539, column: 6)
!12400 = !DILocation(line: 539, column: 7, scope: !12399)
!12401 = !DILocation(line: 539, column: 6, scope: !12382)
!12402 = !DILocation(line: 543, column: 52, scope: !12382)
!12403 = !DILocation(line: 543, column: 22, scope: !12382)
!12404 = !DILocation(line: 543, column: 5, scope: !12382)
!12405 = !DILocation(line: 545, column: 2, scope: !12382)
!12406 = !DILocation(line: 546, column: 1, scope: !12382)
!12407 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !2340, file: !2340, line: 548, type: !2262, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12408)
!12408 = !{!12409, !12410, !12411, !12412}
!12409 = !DILocalVariable(name: "dev", arg: 1, scope: !12407, file: !2340, line: 548, type: !2245)
!12410 = !DILocalVariable(name: "c", arg: 2, scope: !12407, file: !2340, line: 549, type: !165)
!12411 = !DILocalVariable(name: "config", scope: !12407, file: !2340, line: 551, type: !12387)
!12412 = !DILocalVariable(name: "key", scope: !12407, file: !2340, line: 555, type: !32)
!12413 = !DILocation(line: 0, scope: !12407)
!12414 = !DILocation(line: 551, column: 48, scope: !12407)
!12415 = !DILocation(line: 562, column: 2, scope: !12407)
!12416 = !DILocation(line: 563, column: 41, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !2340, line: 563, column: 7)
!12418 = distinct !DILexicalBlock(scope: !12407, file: !2340, line: 562, column: 12)
!12419 = !DILocation(line: 563, column: 7, scope: !12417)
!12420 = !DILocation(line: 563, column: 7, scope: !12418)
!12421 = !DILocation(line: 55, column: 2, scope: !12422, inlinedAt: !12426)
!12422 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12423)
!12423 = !{!12424, !12425}
!12424 = !DILocalVariable(name: "key", scope: !12422, file: !7985, line: 44, type: !32)
!12425 = !DILocalVariable(name: "tmp", scope: !12422, file: !7985, line: 53, type: !32)
!12426 = distinct !DILocation(line: 564, column: 10, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12417, file: !2340, line: 563, column: 49)
!12428 = !{i64 2331099}
!12429 = !DILocation(line: 0, scope: !12422, inlinedAt: !12426)
!12430 = !DILocation(line: 565, column: 42, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12427, file: !2340, line: 565, column: 8)
!12432 = !DILocation(line: 565, column: 8, scope: !12431)
!12433 = !DILocation(line: 565, column: 8, scope: !12427)
!12434 = !DILocalVariable(name: "key", arg: 1, scope: !12435, file: !7985, line: 84, type: !32)
!12435 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12436)
!12436 = !{!12434}
!12437 = !DILocation(line: 0, scope: !12435, inlinedAt: !12438)
!12438 = distinct !DILocation(line: 568, column: 4, scope: !12427)
!12439 = !DILocation(line: 95, column: 2, scope: !12435, inlinedAt: !12438)
!12440 = !{i64 2331916}
!12441 = !DILocation(line: 569, column: 3, scope: !12427)
!12442 = distinct !{!12442, !12415, !12443}
!12443 = !DILocation(line: 570, column: 2, scope: !12407)
!12444 = !DILocation(line: 592, column: 33, scope: !12407)
!12445 = !DILocation(line: 592, column: 2, scope: !12407)
!12446 = !DILocation(line: 0, scope: !12435, inlinedAt: !12447)
!12447 = distinct !DILocation(line: 593, column: 2, scope: !12407)
!12448 = !DILocation(line: 95, column: 2, scope: !12435, inlinedAt: !12447)
!12449 = !DILocation(line: 594, column: 1, scope: !12407)
!12450 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !2340, file: !2340, line: 596, type: !2266, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12451)
!12451 = !{!12452, !12453, !12454}
!12452 = !DILocalVariable(name: "dev", arg: 1, scope: !12450, file: !2340, line: 596, type: !2245)
!12453 = !DILocalVariable(name: "config", scope: !12450, file: !2340, line: 598, type: !12387)
!12454 = !DILocalVariable(name: "err", scope: !12450, file: !2340, line: 599, type: !108)
!12455 = !DILocation(line: 0, scope: !12450)
!12456 = !DILocation(line: 598, column: 48, scope: !12450)
!12457 = !DILocation(line: 606, column: 40, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 606, column: 6)
!12459 = !DILocation(line: 606, column: 6, scope: !12458)
!12460 = !DILocation(line: 606, column: 6, scope: !12450)
!12461 = !DILocation(line: 610, column: 39, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 610, column: 6)
!12463 = !DILocation(line: 610, column: 6, scope: !12462)
!12464 = !DILocation(line: 610, column: 6, scope: !12450)
!12465 = !DILocation(line: 614, column: 39, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 614, column: 6)
!12467 = !DILocation(line: 614, column: 6, scope: !12466)
!12468 = !DILocation(line: 614, column: 6, scope: !12450)
!12469 = !DILocation(line: 619, column: 40, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 619, column: 6)
!12471 = !DILocation(line: 619, column: 6, scope: !12470)
!12472 = !DILocation(line: 619, column: 6, scope: !12450)
!12473 = !DILocation(line: 623, column: 10, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 623, column: 6)
!12475 = !DILocation(line: 623, column: 6, scope: !12450)
!12476 = !DILocation(line: 624, column: 34, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12474, file: !2340, line: 623, column: 24)
!12478 = !DILocation(line: 624, column: 3, scope: !12477)
!12479 = !DILocation(line: 625, column: 2, scope: !12477)
!12480 = !DILocation(line: 632, column: 10, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 632, column: 6)
!12482 = !DILocation(line: 632, column: 6, scope: !12450)
!12483 = !DILocation(line: 633, column: 34, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12481, file: !2340, line: 632, column: 32)
!12485 = !DILocation(line: 633, column: 3, scope: !12484)
!12486 = !DILocation(line: 634, column: 2, scope: !12484)
!12487 = !DILocation(line: 636, column: 10, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 636, column: 6)
!12489 = !DILocation(line: 636, column: 6, scope: !12450)
!12490 = !DILocation(line: 637, column: 33, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12488, file: !2340, line: 636, column: 31)
!12492 = !DILocation(line: 637, column: 3, scope: !12491)
!12493 = !DILocation(line: 638, column: 2, scope: !12491)
!12494 = !DILocation(line: 640, column: 10, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12450, file: !2340, line: 640, column: 6)
!12496 = !DILocation(line: 640, column: 6, scope: !12450)
!12497 = !DILocation(line: 641, column: 33, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12495, file: !2340, line: 640, column: 32)
!12499 = !DILocation(line: 641, column: 3, scope: !12498)
!12500 = !DILocation(line: 642, column: 2, scope: !12498)
!12501 = !DILocation(line: 646, column: 32, scope: !12450)
!12502 = !DILocation(line: 646, column: 2, scope: !12450)
!12503 = !DILocation(line: 648, column: 2, scope: !12450)
!12504 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !2340, file: !2340, line: 419, type: !2270, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12505)
!12505 = !{!12506, !12507, !12508, !12509, !12511, !12512, !12513, !12514}
!12506 = !DILocalVariable(name: "dev", arg: 1, scope: !12504, file: !2340, line: 419, type: !2245)
!12507 = !DILocalVariable(name: "cfg", arg: 2, scope: !12504, file: !2340, line: 420, type: !2272)
!12508 = !DILocalVariable(name: "config", scope: !12504, file: !2340, line: 422, type: !12387)
!12509 = !DILocalVariable(name: "data", scope: !12504, file: !2340, line: 423, type: !12510)
!12510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 32)
!12511 = !DILocalVariable(name: "parity", scope: !12504, file: !2340, line: 424, type: !8582)
!12512 = !DILocalVariable(name: "stopbits", scope: !12504, file: !2340, line: 425, type: !8582)
!12513 = !DILocalVariable(name: "databits", scope: !12504, file: !2340, line: 426, type: !8582)
!12514 = !DILocalVariable(name: "flowctrl", scope: !12504, file: !2340, line: 428, type: !8582)
!12515 = !DILocation(line: 0, scope: !12504)
!12516 = !DILocation(line: 422, column: 48, scope: !12504)
!12517 = !DILocation(line: 423, column: 38, scope: !12504)
!12518 = !DILocation(line: 424, column: 56, scope: !12504)
!12519 = !DILocation(line: 424, column: 51, scope: !12504)
!12520 = !DILocation(line: 424, column: 26, scope: !12504)
!12521 = !DILocation(line: 425, column: 60, scope: !12504)
!12522 = !DILocation(line: 425, column: 55, scope: !12504)
!12523 = !DILocation(line: 425, column: 28, scope: !12504)
!12524 = !DILocation(line: 426, column: 60, scope: !12504)
!12525 = !DILocation(line: 426, column: 55, scope: !12504)
!12526 = !DILocation(line: 426, column: 28, scope: !12504)
!12527 = !DILocation(line: 428, column: 58, scope: !12504)
!12528 = !DILocation(line: 428, column: 53, scope: !12504)
!12529 = !DILocation(line: 428, column: 28, scope: !12504)
!12530 = !DILocation(line: 431, column: 44, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 431, column: 6)
!12532 = !DILocation(line: 438, column: 22, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 437, column: 6)
!12534 = !DILocation(line: 437, column: 6, scope: !12504)
!12535 = !DILocation(line: 448, column: 6, scope: !12504)
!12536 = !DILocation(line: 465, column: 47, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 465, column: 6)
!12538 = !DILocation(line: 475, column: 21, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 475, column: 6)
!12540 = !DILocation(line: 475, column: 6, scope: !12504)
!12541 = !DILocation(line: 476, column: 8, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !2340, line: 476, column: 7)
!12543 = distinct !DILexicalBlock(scope: !12539, file: !2340, line: 475, column: 49)
!12544 = !DILocation(line: 477, column: 34, scope: !12542)
!12545 = !DILocation(line: 476, column: 7, scope: !12543)
!12546 = !DILocation(line: 482, column: 27, scope: !12504)
!12547 = !DILocation(line: 482, column: 2, scope: !12504)
!12548 = !DILocation(line: 484, column: 16, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 484, column: 6)
!12550 = !DILocation(line: 484, column: 13, scope: !12549)
!12551 = !DILocation(line: 484, column: 6, scope: !12504)
!12552 = !DILocation(line: 485, column: 3, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12549, file: !2340, line: 484, column: 44)
!12554 = !DILocation(line: 486, column: 2, scope: !12553)
!12555 = !DILocation(line: 488, column: 18, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 488, column: 6)
!12557 = !DILocation(line: 488, column: 15, scope: !12556)
!12558 = !DILocation(line: 488, column: 6, scope: !12504)
!12559 = !DILocation(line: 489, column: 3, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12556, file: !2340, line: 488, column: 48)
!12561 = !DILocation(line: 490, column: 2, scope: !12560)
!12562 = !DILocation(line: 492, column: 18, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 492, column: 6)
!12564 = !DILocation(line: 492, column: 15, scope: !12563)
!12565 = !DILocation(line: 492, column: 6, scope: !12504)
!12566 = !DILocation(line: 493, column: 3, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12563, file: !2340, line: 492, column: 48)
!12568 = !DILocation(line: 494, column: 2, scope: !12567)
!12569 = !DILocation(line: 496, column: 18, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 496, column: 6)
!12571 = !DILocation(line: 496, column: 15, scope: !12570)
!12572 = !DILocation(line: 496, column: 6, scope: !12504)
!12573 = !DILocation(line: 497, column: 3, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12570, file: !2340, line: 496, column: 46)
!12575 = !DILocation(line: 498, column: 2, scope: !12574)
!12576 = !DILocation(line: 500, column: 11, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12504, file: !2340, line: 500, column: 6)
!12578 = !DILocation(line: 500, column: 29, scope: !12577)
!12579 = !DILocation(line: 500, column: 20, scope: !12577)
!12580 = !DILocation(line: 500, column: 6, scope: !12504)
!12581 = !DILocation(line: 501, column: 3, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12577, file: !2340, line: 500, column: 40)
!12583 = !DILocation(line: 502, column: 26, scope: !12582)
!12584 = !DILocation(line: 502, column: 19, scope: !12582)
!12585 = !DILocation(line: 503, column: 2, scope: !12582)
!12586 = !DILocation(line: 505, column: 26, scope: !12504)
!12587 = !DILocation(line: 505, column: 2, scope: !12504)
!12588 = !DILocation(line: 506, column: 2, scope: !12504)
!12589 = !DILocation(line: 507, column: 1, scope: !12504)
!12590 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !2340, file: !2340, line: 509, type: !2283, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12591)
!12591 = !{!12592, !12593, !12594}
!12592 = !DILocalVariable(name: "dev", arg: 1, scope: !12590, file: !2340, line: 509, type: !2245)
!12593 = !DILocalVariable(name: "cfg", arg: 2, scope: !12590, file: !2340, line: 510, type: !2285)
!12594 = !DILocalVariable(name: "data", scope: !12590, file: !2340, line: 512, type: !12510)
!12595 = !DILocation(line: 0, scope: !12590)
!12596 = !DILocation(line: 512, column: 38, scope: !12590)
!12597 = !DILocation(line: 514, column: 24, scope: !12590)
!12598 = !DILocation(line: 514, column: 7, scope: !12590)
!12599 = !DILocation(line: 514, column: 16, scope: !12590)
!12600 = !DILocation(line: 515, column: 41, scope: !12590)
!12601 = !{i32 0, i32 1537}
!12602 = !DILocation(line: 515, column: 16, scope: !12590)
!12603 = !DILocation(line: 515, column: 7, scope: !12590)
!12604 = !DILocation(line: 515, column: 14, scope: !12590)
!12605 = !DILocation(line: 517, column: 3, scope: !12590)
!12606 = !{i32 0, i32 12289}
!12607 = !DILocation(line: 516, column: 19, scope: !12590)
!12608 = !DILocation(line: 516, column: 7, scope: !12590)
!12609 = !DILocation(line: 516, column: 17, scope: !12590)
!12610 = !DILocation(line: 519, column: 3, scope: !12590)
!12611 = !DILocation(line: 519, column: 33, scope: !12590)
!12612 = !DILocation(line: 518, column: 19, scope: !12590)
!12613 = !DILocation(line: 518, column: 7, scope: !12590)
!12614 = !DILocation(line: 518, column: 17, scope: !12590)
!12615 = !DILocation(line: 521, column: 3, scope: !12590)
!12616 = !{i32 0, i32 769}
!12617 = !DILocation(line: 520, column: 19, scope: !12590)
!12618 = !DILocation(line: 520, column: 7, scope: !12590)
!12619 = !DILocation(line: 520, column: 17, scope: !12590)
!12620 = !DILocation(line: 522, column: 2, scope: !12590)
!12621 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !2340, file: !2340, line: 205, type: !12622, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12624)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{!108, !2245}
!12624 = !{!12625, !12626}
!12625 = !DILocalVariable(name: "dev", arg: 1, scope: !12621, file: !2340, line: 205, type: !2245)
!12626 = !DILocalVariable(name: "config", scope: !12621, file: !2340, line: 207, type: !12387)
!12627 = !DILocation(line: 0, scope: !12621)
!12628 = !DILocation(line: 207, column: 48, scope: !12621)
!12629 = !DILocation(line: 209, column: 36, scope: !12621)
!12630 = !DILocation(line: 209, column: 9, scope: !12621)
!12631 = !DILocation(line: 209, column: 2, scope: !12621)
!12632 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !2340, file: !2340, line: 270, type: !12633, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12635)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{!2211, !108}
!12635 = !{!12636}
!12636 = !DILocalVariable(name: "parity", arg: 1, scope: !12632, file: !2340, line: 270, type: !108)
!12637 = !DILocation(line: 0, scope: !12632)
!12638 = !DILocation(line: 272, column: 2, scope: !12632)
!12639 = !DILocation(line: 281, column: 1, scope: !12632)
!12640 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !2340, file: !2340, line: 220, type: !12622, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12641)
!12641 = !{!12642, !12643}
!12642 = !DILocalVariable(name: "dev", arg: 1, scope: !12640, file: !2340, line: 220, type: !2245)
!12643 = !DILocalVariable(name: "config", scope: !12640, file: !2340, line: 222, type: !12387)
!12644 = !DILocation(line: 0, scope: !12640)
!12645 = !DILocation(line: 222, column: 48, scope: !12640)
!12646 = !DILocation(line: 224, column: 44, scope: !12640)
!12647 = !DILocation(line: 224, column: 9, scope: !12640)
!12648 = !DILocation(line: 224, column: 2, scope: !12640)
!12649 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !2340, file: !2340, line: 304, type: !12650, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12652)
!12650 = !DISubroutineType(types: !12651)
!12651 = !{!2225, !108}
!12652 = !{!12653}
!12653 = !DILocalVariable(name: "sb", arg: 1, scope: !12649, file: !2340, line: 304, type: !108)
!12654 = !DILocation(line: 0, scope: !12649)
!12655 = !DILocation(line: 306, column: 2, scope: !12649)
!12656 = !DILocation(line: 0, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12649, file: !2340, line: 306, column: 14)
!12658 = !DILocation(line: 323, column: 1, scope: !12649)
!12659 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !2340, file: !2340, line: 235, type: !12622, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12660)
!12660 = !{!12661, !12662}
!12661 = !DILocalVariable(name: "dev", arg: 1, scope: !12659, file: !2340, line: 235, type: !2245)
!12662 = !DILocalVariable(name: "config", scope: !12659, file: !2340, line: 237, type: !12387)
!12663 = !DILocation(line: 0, scope: !12659)
!12664 = !DILocation(line: 237, column: 48, scope: !12659)
!12665 = !DILocation(line: 239, column: 39, scope: !12659)
!12666 = !DILocation(line: 239, column: 9, scope: !12659)
!12667 = !DILocation(line: 239, column: 2, scope: !12659)
!12668 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !2340, file: !2340, line: 355, type: !12669, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12671)
!12669 = !DISubroutineType(types: !12670)
!12670 = !{!2218, !108, !108}
!12671 = !{!12672, !12673}
!12672 = !DILocalVariable(name: "db", arg: 1, scope: !12668, file: !2340, line: 355, type: !108)
!12673 = !DILocalVariable(name: "p", arg: 2, scope: !12668, file: !2340, line: 356, type: !108)
!12674 = !DILocation(line: 0, scope: !12668)
!12675 = !DILocation(line: 358, column: 2, scope: !12668)
!12676 = !DILocation(line: 384, column: 1, scope: !12668)
!12677 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !2340, file: !2340, line: 250, type: !12622, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12678)
!12678 = !{!12679, !12680}
!12679 = !DILocalVariable(name: "dev", arg: 1, scope: !12677, file: !2340, line: 250, type: !2245)
!12680 = !DILocalVariable(name: "config", scope: !12677, file: !2340, line: 252, type: !12387)
!12681 = !DILocation(line: 0, scope: !12677)
!12682 = !DILocation(line: 252, column: 48, scope: !12677)
!12683 = !DILocation(line: 254, column: 40, scope: !12677)
!12684 = !DILocation(line: 254, column: 9, scope: !12677)
!12685 = !DILocation(line: 254, column: 2, scope: !12677)
!12686 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !2340, file: !2340, line: 409, type: !12687, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12689)
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!2231, !108}
!12689 = !{!12690}
!12690 = !DILocalVariable(name: "fc", arg: 1, scope: !12686, file: !2340, line: 409, type: !108)
!12691 = !DILocation(line: 0, scope: !12686)
!12692 = !DILocation(line: 411, column: 9, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12686, file: !2340, line: 411, column: 6)
!12694 = !DILocation(line: 416, column: 1, scope: !12686)
!12695 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12696, file: !12696, line: 967, type: !12697, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12699)
!12696 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12697 = !DISubroutineType(types: !12698)
!12698 = !{!108, !2286}
!12699 = !{!12700}
!12700 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12695, file: !12696, line: 967, type: !2286)
!12701 = !DILocation(line: 0, scope: !12695)
!12702 = !DILocation(line: 969, column: 21, scope: !12695)
!12703 = !DILocation(line: 969, column: 3, scope: !12695)
!12704 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12696, file: !12696, line: 601, type: !12697, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12705)
!12705 = !{!12706}
!12706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12704, file: !12696, line: 601, type: !2286)
!12707 = !DILocation(line: 0, scope: !12704)
!12708 = !DILocation(line: 603, column: 21, scope: !12704)
!12709 = !DILocation(line: 603, column: 3, scope: !12704)
!12710 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12696, file: !12696, line: 820, type: !12697, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12711)
!12711 = !{!12712}
!12712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12710, file: !12696, line: 820, type: !2286)
!12713 = !DILocation(line: 0, scope: !12710)
!12714 = !DILocation(line: 822, column: 21, scope: !12710)
!12715 = !DILocation(line: 822, column: 3, scope: !12710)
!12716 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12696, file: !12696, line: 547, type: !12697, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12717)
!12717 = !{!12718}
!12718 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12716, file: !12696, line: 547, type: !2286)
!12719 = !DILocation(line: 0, scope: !12716)
!12720 = !DILocation(line: 549, column: 21, scope: !12716)
!12721 = !DILocation(line: 549, column: 3, scope: !12716)
!12722 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !2340, file: !2340, line: 257, type: !12723, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12725)
!12723 = !DISubroutineType(types: !12724)
!12724 = !{!108, !2211}
!12725 = !{!12726}
!12726 = !DILocalVariable(name: "parity", arg: 1, scope: !12722, file: !2340, line: 257, type: !2211)
!12727 = !DILocation(line: 0, scope: !12722)
!12728 = !DILocation(line: 259, column: 2, scope: !12722)
!12729 = !DILocation(line: 268, column: 1, scope: !12722)
!12730 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !2340, file: !2340, line: 283, type: !12731, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12733)
!12731 = !DISubroutineType(types: !12732)
!12732 = !{!108, !2225}
!12733 = !{!12734}
!12734 = !DILocalVariable(name: "sb", arg: 1, scope: !12730, file: !2340, line: 283, type: !2225)
!12735 = !DILocation(line: 0, scope: !12730)
!12736 = !DILocation(line: 285, column: 2, scope: !12730)
!12737 = !DILocation(line: 0, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12730, file: !2340, line: 285, column: 14)
!12739 = !DILocation(line: 302, column: 1, scope: !12730)
!12740 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !2340, file: !2340, line: 325, type: !12741, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12743)
!12741 = !DISubroutineType(types: !12742)
!12742 = !{!108, !2218, !2211}
!12743 = !{!12744, !12745}
!12744 = !DILocalVariable(name: "db", arg: 1, scope: !12740, file: !2340, line: 325, type: !2218)
!12745 = !DILocalVariable(name: "p", arg: 2, scope: !12740, file: !2340, line: 326, type: !2211)
!12746 = !DILocation(line: 0, scope: !12740)
!12747 = !DILocation(line: 328, column: 2, scope: !12740)
!12748 = !DILocation(line: 353, column: 1, scope: !12740)
!12749 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !2340, file: !2340, line: 393, type: !12750, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12752)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{!108, !2231}
!12752 = !{!12753}
!12753 = !DILocalVariable(name: "fc", arg: 1, scope: !12749, file: !2340, line: 393, type: !2231)
!12754 = !DILocation(line: 0, scope: !12749)
!12755 = !DILocation(line: 395, column: 9, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12749, file: !2340, line: 395, column: 6)
!12757 = !DILocation(line: 400, column: 1, scope: !12749)
!12758 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12696, file: !12696, line: 424, type: !12759, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{null, !2286}
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12758, file: !12696, line: 424, type: !2286)
!12763 = !DILocation(line: 0, scope: !12758)
!12764 = !DILocation(line: 426, column: 3, scope: !12758)
!12765 = !DILocation(line: 427, column: 1, scope: !12758)
!12766 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !2340, file: !2340, line: 197, type: !12767, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12769)
!12767 = !DISubroutineType(types: !12768)
!12768 = !{null, !2245, !108}
!12769 = !{!12770, !12771, !12772}
!12770 = !DILocalVariable(name: "dev", arg: 1, scope: !12766, file: !2340, line: 197, type: !2245)
!12771 = !DILocalVariable(name: "parity", arg: 2, scope: !12766, file: !2340, line: 198, type: !108)
!12772 = !DILocalVariable(name: "config", scope: !12766, file: !2340, line: 200, type: !12387)
!12773 = !DILocation(line: 0, scope: !12766)
!12774 = !DILocation(line: 200, column: 48, scope: !12766)
!12775 = !DILocation(line: 202, column: 29, scope: !12766)
!12776 = !DILocation(line: 202, column: 2, scope: !12766)
!12777 = !DILocation(line: 203, column: 1, scope: !12766)
!12778 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !2340, file: !2340, line: 212, type: !12767, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12779)
!12779 = !{!12780, !12781, !12782}
!12780 = !DILocalVariable(name: "dev", arg: 1, scope: !12778, file: !2340, line: 212, type: !2245)
!12781 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12778, file: !2340, line: 213, type: !108)
!12782 = !DILocalVariable(name: "config", scope: !12778, file: !2340, line: 215, type: !12387)
!12783 = !DILocation(line: 0, scope: !12778)
!12784 = !DILocation(line: 215, column: 48, scope: !12778)
!12785 = !DILocation(line: 217, column: 37, scope: !12778)
!12786 = !DILocation(line: 217, column: 2, scope: !12778)
!12787 = !DILocation(line: 218, column: 1, scope: !12778)
!12788 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !2340, file: !2340, line: 227, type: !12767, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12789)
!12789 = !{!12790, !12791, !12792}
!12790 = !DILocalVariable(name: "dev", arg: 1, scope: !12788, file: !2340, line: 227, type: !2245)
!12791 = !DILocalVariable(name: "databits", arg: 2, scope: !12788, file: !2340, line: 228, type: !108)
!12792 = !DILocalVariable(name: "config", scope: !12788, file: !2340, line: 230, type: !12387)
!12793 = !DILocation(line: 0, scope: !12788)
!12794 = !DILocation(line: 230, column: 48, scope: !12788)
!12795 = !DILocation(line: 232, column: 32, scope: !12788)
!12796 = !DILocation(line: 232, column: 2, scope: !12788)
!12797 = !DILocation(line: 233, column: 1, scope: !12788)
!12798 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !2340, file: !2340, line: 242, type: !12767, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12799)
!12799 = !{!12800, !12801, !12802}
!12800 = !DILocalVariable(name: "dev", arg: 1, scope: !12798, file: !2340, line: 242, type: !2245)
!12801 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12798, file: !2340, line: 243, type: !108)
!12802 = !DILocalVariable(name: "config", scope: !12798, file: !2340, line: 245, type: !12387)
!12803 = !DILocation(line: 0, scope: !12798)
!12804 = !DILocation(line: 245, column: 48, scope: !12798)
!12805 = !DILocation(line: 247, column: 33, scope: !12798)
!12806 = !DILocation(line: 247, column: 2, scope: !12798)
!12807 = !DILocation(line: 248, column: 1, scope: !12798)
!12808 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !2340, file: !2340, line: 107, type: !12767, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12809)
!12809 = !{!12810, !12811, !12812, !12813, !12814}
!12810 = !DILocalVariable(name: "dev", arg: 1, scope: !12808, file: !2340, line: 107, type: !2245)
!12811 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12808, file: !2340, line: 107, type: !108)
!12812 = !DILocalVariable(name: "config", scope: !12808, file: !2340, line: 109, type: !12387)
!12813 = !DILocalVariable(name: "data", scope: !12808, file: !2340, line: 110, type: !12510)
!12814 = !DILocalVariable(name: "clock_rate", scope: !12808, file: !2340, line: 112, type: !108)
!12815 = !DILocation(line: 0, scope: !12808)
!12816 = !DILocation(line: 109, column: 48, scope: !12808)
!12817 = !DILocation(line: 110, column: 38, scope: !12808)
!12818 = !DILocation(line: 112, column: 2, scope: !12808)
!12819 = !DILocation(line: 123, column: 36, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12821, file: !2340, line: 123, column: 7)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !2340, line: 122, column: 9)
!12822 = distinct !DILexicalBlock(scope: !12808, file: !2340, line: 115, column: 6)
!12823 = !DILocation(line: 124, column: 42, scope: !12820)
!12824 = !DILocation(line: 123, column: 7, scope: !12820)
!12825 = !DILocation(line: 125, column: 22, scope: !12820)
!12826 = !DILocation(line: 123, column: 7, scope: !12821)
!12827 = !DILocation(line: 126, column: 4, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !2340, line: 126, column: 4)
!12829 = distinct !DILexicalBlock(scope: !12830, file: !2340, line: 126, column: 4)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !2340, line: 126, column: 4)
!12831 = distinct !DILexicalBlock(scope: !12832, file: !2340, line: 126, column: 4)
!12832 = distinct !DILexicalBlock(scope: !12820, file: !2340, line: 125, column: 27)
!12833 = !DILocation(line: 127, column: 4, scope: !12832)
!12834 = !DILocation(line: 176, column: 36, scope: !12808)
!12835 = !DILocation(line: 176, column: 3, scope: !12808)
!12836 = !DILocation(line: 179, column: 32, scope: !12808)
!12837 = !DILocation(line: 180, column: 10, scope: !12808)
!12838 = !DILocation(line: 179, column: 3, scope: !12808)
!12839 = !DILocation(line: 189, column: 3, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !2340, line: 189, column: 3)
!12841 = distinct !DILexicalBlock(scope: !12808, file: !2340, line: 189, column: 3)
!12842 = !DILocation(line: 189, column: 3, scope: !12841)
!12843 = !DILocation(line: 189, column: 3, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12840, file: !2340, line: 189, column: 3)
!12845 = !DILocation(line: 195, column: 1, scope: !12808)
!12846 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12696, file: !12696, line: 410, type: !12759, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12847)
!12847 = !{!12848}
!12848 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12846, file: !12696, line: 410, type: !2286)
!12849 = !DILocation(line: 0, scope: !12846)
!12850 = !DILocation(line: 412, column: 3, scope: !12846)
!12851 = !DILocation(line: 413, column: 1, scope: !12846)
!12852 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1701, file: !1701, line: 216, type: !2319, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12853)
!12853 = !{!12854, !12855, !12856, !12857}
!12854 = !DILocalVariable(name: "dev", arg: 1, scope: !12852, file: !1701, line: 216, type: !2245)
!12855 = !DILocalVariable(name: "sys", arg: 2, scope: !12852, file: !1701, line: 217, type: !1797)
!12856 = !DILocalVariable(name: "rate", arg: 3, scope: !12852, file: !1701, line: 218, type: !1753)
!12857 = !DILocalVariable(name: "api", scope: !12852, file: !1701, line: 220, type: !2297)
!12858 = !DILocation(line: 0, scope: !12852)
!12859 = !DILocation(line: 221, column: 49, scope: !12852)
!12860 = !DILocation(line: 223, column: 11, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12852, file: !1701, line: 223, column: 6)
!12862 = !DILocation(line: 223, column: 20, scope: !12861)
!12863 = !DILocation(line: 223, column: 6, scope: !12852)
!12864 = !DILocation(line: 227, column: 9, scope: !12852)
!12865 = !DILocation(line: 227, column: 2, scope: !12852)
!12866 = !DILocation(line: 228, column: 1, scope: !12852)
!12867 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !8063, file: !8063, line: 175, type: !8064, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12868)
!12868 = !{!12869}
!12869 = !DILocalVariable(name: "level", arg: 1, scope: !12867, file: !8063, line: 175, type: !103)
!12870 = !DILocation(line: 0, scope: !12867)
!12871 = !DILocation(line: 177, column: 2, scope: !12867)
!12872 = !DILocation(line: 189, column: 1, scope: !12867)
!12873 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12696, file: !12696, line: 615, type: !12874, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12876)
!12874 = !DISubroutineType(types: !12875)
!12875 = !{null, !2286, !108}
!12876 = !{!12877, !12878}
!12877 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12873, file: !12696, line: 615, type: !2286)
!12878 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12873, file: !12696, line: 615, type: !108)
!12879 = !DILocation(line: 0, scope: !12873)
!12880 = !DILocation(line: 617, column: 3, scope: !12873)
!12881 = !DILocation(line: 618, column: 1, scope: !12873)
!12882 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12696, file: !12696, line: 1020, type: !12883, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12885)
!12883 = !DISubroutineType(types: !12884)
!12884 = !{null, !2286, !108, !108, !108}
!12885 = !{!12886, !12887, !12888, !12889}
!12886 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12882, file: !12696, line: 1020, type: !2286)
!12887 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12882, file: !12696, line: 1020, type: !108)
!12888 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12882, file: !12696, line: 1020, type: !108)
!12889 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12882, file: !12696, line: 1021, type: !108)
!12890 = !DILocation(line: 0, scope: !12882)
!12891 = !DILocation(line: 1029, column: 30, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12893, file: !12696, line: 1028, column: 3)
!12893 = distinct !DILexicalBlock(scope: !12882, file: !12696, line: 1023, column: 7)
!12894 = !DILocation(line: 1029, column: 19, scope: !12892)
!12895 = !DILocation(line: 1029, column: 13, scope: !12892)
!12896 = !DILocation(line: 1029, column: 17, scope: !12892)
!12897 = !DILocation(line: 1031, column: 1, scope: !12882)
!12898 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12696, file: !12696, line: 949, type: !12874, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12899)
!12899 = !{!12900, !12901}
!12900 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12898, file: !12696, line: 949, type: !2286)
!12901 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12898, file: !12696, line: 949, type: !108)
!12902 = !DILocation(line: 0, scope: !12898)
!12903 = !DILocation(line: 951, column: 3, scope: !12898)
!12904 = !DILocation(line: 952, column: 1, scope: !12898)
!12905 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12696, file: !12696, line: 588, type: !12874, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12906)
!12906 = !{!12907, !12908}
!12907 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12905, file: !12696, line: 588, type: !2286)
!12908 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12905, file: !12696, line: 588, type: !108)
!12909 = !DILocation(line: 0, scope: !12905)
!12910 = !DILocation(line: 590, column: 3, scope: !12905)
!12911 = !DILocation(line: 591, column: 1, scope: !12905)
!12912 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12696, file: !12696, line: 805, type: !12874, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12913)
!12913 = !{!12914, !12915}
!12914 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12912, file: !12696, line: 805, type: !2286)
!12915 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12912, file: !12696, line: 805, type: !108)
!12916 = !DILocation(line: 0, scope: !12912)
!12917 = !DILocation(line: 807, column: 3, scope: !12912)
!12918 = !DILocation(line: 808, column: 1, scope: !12912)
!12919 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12696, file: !12696, line: 532, type: !12874, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12920)
!12920 = !{!12921, !12922}
!12921 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12919, file: !12696, line: 532, type: !2286)
!12922 = !DILocalVariable(name: "Parity", arg: 2, scope: !12919, file: !12696, line: 532, type: !108)
!12923 = !DILocation(line: 0, scope: !12919)
!12924 = !DILocation(line: 534, column: 3, scope: !12919)
!12925 = !DILocation(line: 535, column: 1, scope: !12919)
!12926 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12696, file: !12696, line: 1770, type: !12697, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12927)
!12927 = !{!12928}
!12928 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12926, file: !12696, line: 1770, type: !2286)
!12929 = !DILocation(line: 0, scope: !12926)
!12930 = !DILocation(line: 1772, column: 11, scope: !12926)
!12931 = !DILocation(line: 1772, column: 46, scope: !12926)
!12932 = !DILocation(line: 1772, column: 3, scope: !12926)
!12933 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12696, file: !12696, line: 1737, type: !12697, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12934)
!12934 = !{!12935}
!12935 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12933, file: !12696, line: 1737, type: !2286)
!12936 = !DILocation(line: 0, scope: !12933)
!12937 = !DILocation(line: 1739, column: 11, scope: !12933)
!12938 = !DILocation(line: 1739, column: 3, scope: !12933)
!12939 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12696, file: !12696, line: 1748, type: !12697, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12940)
!12940 = !{!12941}
!12941 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12939, file: !12696, line: 1748, type: !2286)
!12942 = !DILocation(line: 0, scope: !12939)
!12943 = !DILocation(line: 1750, column: 11, scope: !12939)
!12944 = !DILocation(line: 1750, column: 45, scope: !12939)
!12945 = !DILocation(line: 1750, column: 3, scope: !12939)
!12946 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12696, file: !12696, line: 1827, type: !12697, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12947)
!12947 = !{!12948}
!12948 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12946, file: !12696, line: 1827, type: !2286)
!12949 = !DILocation(line: 0, scope: !12946)
!12950 = !DILocation(line: 1829, column: 11, scope: !12946)
!12951 = !DILocation(line: 1829, column: 46, scope: !12946)
!12952 = !DILocation(line: 1829, column: 3, scope: !12946)
!12953 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12696, file: !12696, line: 1992, type: !12759, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12954)
!12954 = !{!12955}
!12955 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12953, file: !12696, line: 1992, type: !2286)
!12956 = !DILocation(line: 0, scope: !12953)
!12957 = !DILocation(line: 1994, column: 3, scope: !12953)
!12958 = !DILocation(line: 1995, column: 1, scope: !12953)
!12959 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12696, file: !12696, line: 1934, type: !12759, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12960)
!12960 = !{!12961, !12962}
!12961 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12959, file: !12696, line: 1934, type: !2286)
!12962 = !DILocalVariable(name: "tmpreg", scope: !12959, file: !12696, line: 1936, type: !813)
!12963 = !DILocation(line: 0, scope: !12959)
!12964 = !DILocation(line: 1936, column: 3, scope: !12959)
!12965 = !DILocation(line: 1936, column: 17, scope: !12959)
!12966 = !DILocation(line: 1937, column: 20, scope: !12959)
!12967 = !DILocation(line: 1937, column: 10, scope: !12959)
!12968 = !DILocation(line: 1938, column: 10, scope: !12959)
!12969 = !DILocation(line: 1939, column: 20, scope: !12959)
!12970 = !DILocation(line: 1939, column: 10, scope: !12959)
!12971 = !DILocation(line: 1940, column: 10, scope: !12959)
!12972 = !DILocation(line: 1941, column: 1, scope: !12959)
!12973 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12696, file: !12696, line: 1877, type: !12759, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12974)
!12974 = !{!12975, !12976}
!12975 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12973, file: !12696, line: 1877, type: !2286)
!12976 = !DILocalVariable(name: "tmpreg", scope: !12973, file: !12696, line: 1879, type: !813)
!12977 = !DILocation(line: 0, scope: !12973)
!12978 = !DILocation(line: 1879, column: 3, scope: !12973)
!12979 = !DILocation(line: 1879, column: 17, scope: !12973)
!12980 = !DILocation(line: 1880, column: 20, scope: !12973)
!12981 = !DILocation(line: 1880, column: 10, scope: !12973)
!12982 = !DILocation(line: 1881, column: 10, scope: !12973)
!12983 = !DILocation(line: 1882, column: 20, scope: !12973)
!12984 = !DILocation(line: 1882, column: 10, scope: !12973)
!12985 = !DILocation(line: 1883, column: 10, scope: !12973)
!12986 = !DILocation(line: 1884, column: 1, scope: !12973)
!12987 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12696, file: !12696, line: 1896, type: !12759, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !12988)
!12988 = !{!12989, !12990}
!12989 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12987, file: !12696, line: 1896, type: !2286)
!12990 = !DILocalVariable(name: "tmpreg", scope: !12987, file: !12696, line: 1898, type: !813)
!12991 = !DILocation(line: 0, scope: !12987)
!12992 = !DILocation(line: 1898, column: 3, scope: !12987)
!12993 = !DILocation(line: 1898, column: 17, scope: !12987)
!12994 = !DILocation(line: 1899, column: 20, scope: !12987)
!12995 = !DILocation(line: 1899, column: 10, scope: !12987)
!12996 = !DILocation(line: 1900, column: 10, scope: !12987)
!12997 = !DILocation(line: 1901, column: 20, scope: !12987)
!12998 = !DILocation(line: 1901, column: 10, scope: !12987)
!12999 = !DILocation(line: 1902, column: 10, scope: !12987)
!13000 = !DILocation(line: 1903, column: 1, scope: !12987)
!13001 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12696, file: !12696, line: 1915, type: !12759, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13002)
!13002 = !{!13003, !13004}
!13003 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13001, file: !12696, line: 1915, type: !2286)
!13004 = !DILocalVariable(name: "tmpreg", scope: !13001, file: !12696, line: 1917, type: !813)
!13005 = !DILocation(line: 0, scope: !13001)
!13006 = !DILocation(line: 1917, column: 3, scope: !13001)
!13007 = !DILocation(line: 1917, column: 17, scope: !13001)
!13008 = !DILocation(line: 1918, column: 20, scope: !13001)
!13009 = !DILocation(line: 1918, column: 10, scope: !13001)
!13010 = !DILocation(line: 1919, column: 10, scope: !13001)
!13011 = !DILocation(line: 1920, column: 20, scope: !13001)
!13012 = !DILocation(line: 1920, column: 10, scope: !13001)
!13013 = !DILocation(line: 1921, column: 10, scope: !13001)
!13014 = !DILocation(line: 1922, column: 1, scope: !13001)
!13015 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12696, file: !12696, line: 1814, type: !12697, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13016)
!13016 = !{!13017}
!13017 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13015, file: !12696, line: 1814, type: !2286)
!13018 = !DILocation(line: 0, scope: !13015)
!13019 = !DILocation(line: 1816, column: 11, scope: !13015)
!13020 = !DILocation(line: 1816, column: 46, scope: !13015)
!13021 = !DILocation(line: 1816, column: 3, scope: !13015)
!13022 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12696, file: !12696, line: 2426, type: !13023, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13025)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{null, !2286, !164}
!13025 = !{!13026, !13027}
!13026 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13022, file: !12696, line: 2426, type: !2286)
!13027 = !DILocalVariable(name: "Value", arg: 2, scope: !13022, file: !12696, line: 2426, type: !164)
!13028 = !DILocation(line: 0, scope: !13022)
!13029 = !DILocation(line: 2428, column: 16, scope: !13022)
!13030 = !DILocation(line: 2428, column: 11, scope: !13022)
!13031 = !DILocation(line: 2428, column: 14, scope: !13022)
!13032 = !DILocation(line: 2429, column: 1, scope: !13022)
!13033 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12696, file: !12696, line: 1792, type: !12697, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13034)
!13034 = !{!13035}
!13035 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13033, file: !12696, line: 1792, type: !2286)
!13036 = !DILocation(line: 0, scope: !13033)
!13037 = !DILocation(line: 1794, column: 11, scope: !13033)
!13038 = !DILocation(line: 1794, column: 47, scope: !13033)
!13039 = !DILocation(line: 1794, column: 3, scope: !13033)
!13040 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12696, file: !12696, line: 2403, type: !13041, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13043)
!13041 = !DISubroutineType(types: !13042)
!13042 = !{!164, !2286}
!13043 = !{!13044}
!13044 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13040, file: !12696, line: 2403, type: !2286)
!13045 = !DILocation(line: 0, scope: !13040)
!13046 = !DILocation(line: 2405, column: 20, scope: !13040)
!13047 = !DILocation(line: 2405, column: 10, scope: !13040)
!13048 = !DILocation(line: 2405, column: 3, scope: !13040)
!13049 = distinct !DISubprogram(name: "uart_stm32_init", scope: !2340, file: !2340, line: 1583, type: !2266, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13050)
!13050 = !{!13051, !13052, !13053, !13054, !13055, !13056}
!13051 = !DILocalVariable(name: "dev", arg: 1, scope: !13049, file: !2340, line: 1583, type: !2245)
!13052 = !DILocalVariable(name: "config", scope: !13049, file: !2340, line: 1585, type: !12387)
!13053 = !DILocalVariable(name: "data", scope: !13049, file: !2340, line: 1586, type: !12510)
!13054 = !DILocalVariable(name: "ll_parity", scope: !13049, file: !2340, line: 1587, type: !108)
!13055 = !DILocalVariable(name: "ll_datawidth", scope: !13049, file: !2340, line: 1588, type: !108)
!13056 = !DILocalVariable(name: "err", scope: !13049, file: !2340, line: 1589, type: !103)
!13057 = !DILocation(line: 0, scope: !13049)
!13058 = !DILocation(line: 1585, column: 48, scope: !13049)
!13059 = !DILocation(line: 1586, column: 38, scope: !13049)
!13060 = !DILocation(line: 1591, column: 2, scope: !13049)
!13061 = !DILocation(line: 1593, column: 29, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13049, file: !2340, line: 1593, column: 6)
!13063 = !DILocation(line: 1593, column: 7, scope: !13062)
!13064 = !DILocation(line: 1593, column: 6, scope: !13049)
!13065 = !DILocation(line: 1594, column: 3, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13067, file: !2340, line: 1594, column: 3)
!13067 = distinct !DILexicalBlock(scope: !13068, file: !2340, line: 1594, column: 3)
!13068 = distinct !DILexicalBlock(scope: !13069, file: !2340, line: 1594, column: 3)
!13069 = distinct !DILexicalBlock(scope: !13070, file: !2340, line: 1594, column: 3)
!13070 = distinct !DILexicalBlock(scope: !13062, file: !2340, line: 1593, column: 37)
!13071 = !DILocation(line: 1595, column: 3, scope: !13070)
!13072 = !DILocation(line: 1599, column: 31, scope: !13049)
!13073 = !DILocation(line: 1599, column: 71, scope: !13049)
!13074 = !DILocation(line: 1599, column: 8, scope: !13049)
!13075 = !DILocation(line: 1600, column: 10, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13049, file: !2340, line: 1600, column: 6)
!13077 = !DILocation(line: 1600, column: 6, scope: !13049)
!13078 = !DILocation(line: 1601, column: 3, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13080, file: !2340, line: 1601, column: 3)
!13080 = distinct !DILexicalBlock(scope: !13081, file: !2340, line: 1601, column: 3)
!13081 = distinct !DILexicalBlock(scope: !13082, file: !2340, line: 1601, column: 3)
!13082 = distinct !DILexicalBlock(scope: !13083, file: !2340, line: 1601, column: 3)
!13083 = distinct !DILexicalBlock(scope: !13076, file: !2340, line: 1600, column: 16)
!13084 = !DILocation(line: 1602, column: 3, scope: !13083)
!13085 = !DILocation(line: 1616, column: 36, scope: !13049)
!13086 = !DILocation(line: 1616, column: 8, scope: !13049)
!13087 = !DILocation(line: 1617, column: 10, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13049, file: !2340, line: 1617, column: 6)
!13089 = !DILocation(line: 1617, column: 6, scope: !13049)
!13090 = !DILocation(line: 1621, column: 27, scope: !13049)
!13091 = !DILocation(line: 1621, column: 2, scope: !13049)
!13092 = !DILocation(line: 1624, column: 40, scope: !13049)
!13093 = !DILocation(line: 1624, column: 2, scope: !13049)
!13094 = !DILocation(line: 1630, column: 14, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13049, file: !2340, line: 1630, column: 6)
!13096 = !DILocation(line: 1630, column: 6, scope: !13049)
!13097 = !DILocation(line: 1640, column: 4, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13099, file: !2340, line: 1640, column: 4)
!13099 = distinct !DILexicalBlock(scope: !13100, file: !2340, line: 1640, column: 4)
!13100 = distinct !DILexicalBlock(scope: !13101, file: !2340, line: 1640, column: 4)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !2340, line: 1640, column: 4)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !2340, line: 1639, column: 28)
!13103 = distinct !DILexicalBlock(scope: !13104, file: !2340, line: 1639, column: 7)
!13104 = distinct !DILexicalBlock(scope: !13105, file: !2340, line: 1638, column: 9)
!13105 = distinct !DILexicalBlock(scope: !13095, file: !2340, line: 1634, column: 13)
!13106 = !DILocation(line: 0, scope: !13095)
!13107 = !DILocation(line: 1649, column: 35, scope: !13049)
!13108 = !DILocation(line: 1649, column: 2, scope: !13049)
!13109 = !DILocation(line: 1654, column: 14, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13049, file: !2340, line: 1654, column: 6)
!13111 = !DILocation(line: 1654, column: 6, scope: !13049)
!13112 = !DILocation(line: 1655, column: 3, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13110, file: !2340, line: 1654, column: 31)
!13114 = !DILocation(line: 1656, column: 2, scope: !13113)
!13115 = !DILocation(line: 1659, column: 37, scope: !13049)
!13116 = !DILocation(line: 1659, column: 2, scope: !13049)
!13117 = !DILocation(line: 1662, column: 14, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13049, file: !2340, line: 1662, column: 6)
!13119 = !DILocation(line: 1662, column: 6, scope: !13049)
!13120 = !DILocation(line: 1663, column: 37, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13118, file: !2340, line: 1662, column: 27)
!13122 = !DILocation(line: 1663, column: 3, scope: !13121)
!13123 = !DILocation(line: 1664, column: 2, scope: !13121)
!13124 = !DILocation(line: 1684, column: 26, scope: !13049)
!13125 = !DILocation(line: 1684, column: 2, scope: !13049)
!13126 = !DILocation(line: 1722, column: 2, scope: !13049)
!13127 = !DILocation(line: 1724, column: 1, scope: !13049)
!13128 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !2340, file: !2340, line: 651, type: !13129, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13131)
!13129 = !DISubroutineType(types: !13130)
!13130 = !{null, !2245}
!13131 = !{!13132, !13133, !13134}
!13132 = !DILocalVariable(name: "dev", arg: 1, scope: !13128, file: !2340, line: 651, type: !2245)
!13133 = !DILocalVariable(name: "data", scope: !13128, file: !2340, line: 653, type: !12510)
!13134 = !DILocalVariable(name: "clk", scope: !13128, file: !2340, line: 654, type: !13135)
!13135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2245)
!13136 = !DILocation(line: 0, scope: !13128)
!13137 = !DILocation(line: 653, column: 38, scope: !13128)
!13138 = !DILocation(line: 656, column: 8, scope: !13128)
!13139 = !DILocation(line: 656, column: 14, scope: !13128)
!13140 = !DILocation(line: 657, column: 1, scope: !13128)
!13141 = distinct !DISubprogram(name: "device_is_ready", scope: !11506, file: !11506, line: 47, type: !13142, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13144)
!13142 = !DISubroutineType(types: !13143)
!13143 = !{!119, !2245}
!13144 = !{!13145}
!13145 = !DILocalVariable(name: "dev", arg: 1, scope: !13141, file: !11506, line: 47, type: !2245)
!13146 = !DILocation(line: 0, scope: !13141)
!13147 = !DILocation(line: 55, column: 2, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13141, file: !11506, line: 55, column: 2)
!13149 = !{i64 2155380115}
!13150 = !DILocation(line: 56, column: 9, scope: !13141)
!13151 = !DILocation(line: 56, column: 2, scope: !13141)
!13152 = distinct !DISubprogram(name: "clock_control_on", scope: !1701, file: !1701, line: 123, type: !2304, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13153)
!13153 = !{!13154, !13155, !13156}
!13154 = !DILocalVariable(name: "dev", arg: 1, scope: !13152, file: !1701, line: 123, type: !2245)
!13155 = !DILocalVariable(name: "sys", arg: 2, scope: !13152, file: !1701, line: 124, type: !1797)
!13156 = !DILocalVariable(name: "api", scope: !13152, file: !1701, line: 126, type: !2297)
!13157 = !DILocation(line: 0, scope: !13152)
!13158 = !DILocation(line: 127, column: 49, scope: !13152)
!13159 = !DILocation(line: 129, column: 14, scope: !13152)
!13160 = !DILocation(line: 129, column: 9, scope: !13152)
!13161 = !DILocation(line: 129, column: 2, scope: !13152)
!13162 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2404, file: !2404, line: 342, type: !13163, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13165)
!13163 = !DISubroutineType(types: !13164)
!13164 = !{!103, !2401, !164}
!13165 = !{!13166, !13167, !13168, !13169}
!13166 = !DILocalVariable(name: "config", arg: 1, scope: !13162, file: !2404, line: 342, type: !2401)
!13167 = !DILocalVariable(name: "id", arg: 2, scope: !13162, file: !2404, line: 343, type: !164)
!13168 = !DILocalVariable(name: "ret", scope: !13162, file: !2404, line: 345, type: !103)
!13169 = !DILocalVariable(name: "state", scope: !13162, file: !2404, line: 346, type: !2407)
!13170 = !DILocation(line: 0, scope: !13162)
!13171 = !DILocation(line: 346, column: 2, scope: !13162)
!13172 = !DILocation(line: 348, column: 8, scope: !13162)
!13173 = !DILocation(line: 349, column: 10, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13162, file: !2404, line: 349, column: 6)
!13175 = !DILocation(line: 349, column: 6, scope: !13162)
!13176 = !DILocation(line: 353, column: 44, scope: !13162)
!13177 = !DILocation(line: 353, column: 9, scope: !13162)
!13178 = !DILocation(line: 353, column: 2, scope: !13162)
!13179 = !DILocation(line: 354, column: 1, scope: !13162)
!13180 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12696, file: !12696, line: 497, type: !12874, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13181)
!13181 = !{!13182, !13183, !13184}
!13182 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13180, file: !12696, line: 497, type: !2286)
!13183 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !13180, file: !12696, line: 497, type: !108)
!13184 = !DILocalVariable(name: "val", scope: !13185, file: !12696, line: 499, type: !108)
!13185 = distinct !DILexicalBlock(scope: !13180, file: !12696, line: 499, column: 3)
!13186 = !DILocation(line: 0, scope: !13180)
!13187 = !DILocation(line: 499, column: 3, scope: !13185)
!13188 = !DILocalVariable(name: "addr", arg: 1, scope: !13189, file: !8306, line: 476, type: !2336)
!13189 = distinct !DISubprogram(name: "__LDREXW", scope: !8306, file: !8306, line: 476, type: !13190, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13192)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!108, !2336}
!13192 = !{!13188, !13193}
!13193 = !DILocalVariable(name: "result", scope: !13189, file: !8306, line: 478, type: !108)
!13194 = !DILocation(line: 0, scope: !13189, inlinedAt: !13195)
!13195 = distinct !DILocation(line: 499, column: 3, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13185, file: !12696, line: 499, column: 3)
!13197 = !DILocation(line: 480, column: 4, scope: !13189, inlinedAt: !13195)
!13198 = !{i64 3761856}
!13199 = !DILocation(line: 499, column: 3, scope: !13196)
!13200 = !DILocation(line: 0, scope: !13185)
!13201 = !DILocalVariable(name: "value", arg: 1, scope: !13202, file: !8306, line: 527, type: !108)
!13202 = distinct !DISubprogram(name: "__STREXW", scope: !8306, file: !8306, line: 527, type: !13203, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13205)
!13203 = !DISubroutineType(types: !13204)
!13204 = !{!108, !108, !2336}
!13205 = !{!13201, !13206, !13207}
!13206 = !DILocalVariable(name: "addr", arg: 2, scope: !13202, file: !8306, line: 527, type: !2336)
!13207 = !DILocalVariable(name: "result", scope: !13202, file: !8306, line: 529, type: !108)
!13208 = !DILocation(line: 0, scope: !13202, inlinedAt: !13209)
!13209 = distinct !DILocation(line: 499, column: 3, scope: !13185)
!13210 = !DILocation(line: 531, column: 4, scope: !13202, inlinedAt: !13209)
!13211 = !{i64 3763292}
!13212 = distinct !{!13212, !13187, !13187}
!13213 = !DILocation(line: 500, column: 1, scope: !13180)
!13214 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12696, file: !12696, line: 850, type: !12883, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13215)
!13215 = !{!13216, !13217, !13218, !13219}
!13216 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13214, file: !12696, line: 850, type: !2286)
!13217 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !13214, file: !12696, line: 850, type: !108)
!13218 = !DILocalVariable(name: "Parity", arg: 3, scope: !13214, file: !12696, line: 850, type: !108)
!13219 = !DILocalVariable(name: "StopBits", arg: 4, scope: !13214, file: !12696, line: 851, type: !108)
!13220 = !DILocation(line: 0, scope: !13214)
!13221 = !DILocation(line: 853, column: 3, scope: !13214)
!13222 = !DILocation(line: 854, column: 3, scope: !13214)
!13223 = !DILocation(line: 855, column: 1, scope: !13214)
!13224 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12696, file: !12696, line: 1337, type: !12759, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13225)
!13225 = !{!13226}
!13226 = !DILocalVariable(name: "USARTx", arg: 1, scope: !13224, file: !12696, line: 1337, type: !2286)
!13227 = !DILocation(line: 0, scope: !13224)
!13228 = !DILocation(line: 1339, column: 3, scope: !13224)
!13229 = !DILocation(line: 1340, column: 1, scope: !13224)
!13230 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2404, file: !2404, line: 316, type: !13231, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13233)
!13231 = !DISubroutineType(types: !13232)
!13232 = !{!103, !2401, !2407}
!13233 = !{!13234, !13235, !13236}
!13234 = !DILocalVariable(name: "config", arg: 1, scope: !13230, file: !2404, line: 317, type: !2401)
!13235 = !DILocalVariable(name: "state", arg: 2, scope: !13230, file: !2404, line: 318, type: !2407)
!13236 = !DILocalVariable(name: "reg", scope: !13230, file: !2404, line: 320, type: !22)
!13237 = !DILocation(line: 0, scope: !13230)
!13238 = !DILocation(line: 329, column: 39, scope: !13230)
!13239 = !DILocation(line: 329, column: 52, scope: !13230)
!13240 = !DILocation(line: 329, column: 9, scope: !13230)
!13241 = !DILocation(line: 329, column: 2, scope: !13230)
!13242 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !833, file: !833, line: 730, type: !13142, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2201, retainedNodes: !13243)
!13243 = !{!13244}
!13244 = !DILocalVariable(name: "dev", arg: 1, scope: !13242, file: !833, line: 730, type: !2245)
!13245 = !DILocation(line: 0, scope: !13242)
!13246 = !DILocation(line: 732, column: 9, scope: !13242)
!13247 = !DILocation(line: 732, column: 2, scope: !13242)
!13248 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2563, file: !2563, line: 270, type: !2569, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13249)
!13249 = !{!13250}
!13250 = !DILocalVariable(name: "dev", arg: 1, scope: !13248, file: !2563, line: 270, type: !2571)
!13251 = !DILocation(line: 0, scope: !13248)
!13252 = !DILocation(line: 274, column: 2, scope: !13248)
!13253 = !DILocation(line: 275, column: 12, scope: !13248)
!13254 = !DILocation(line: 276, column: 15, scope: !13248)
!13255 = !DILocation(line: 277, column: 16, scope: !13248)
!13256 = !DILocation(line: 278, column: 15, scope: !13248)
!13257 = !DILocation(line: 279, column: 16, scope: !13248)
!13258 = !DILocation(line: 282, column: 2, scope: !13248)
!13259 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1028, file: !1028, line: 1814, type: !8346, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13260)
!13260 = !{!13261, !13262}
!13261 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13259, file: !1028, line: 1814, type: !1651)
!13262 = !DILocalVariable(name: "priority", arg: 2, scope: !13259, file: !1028, line: 1814, type: !108)
!13263 = !DILocation(line: 0, scope: !13259)
!13264 = !DILocation(line: 1822, column: 46, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13266, file: !1028, line: 1821, column: 3)
!13266 = distinct !DILexicalBlock(scope: !13259, file: !1028, line: 1816, column: 7)
!13267 = !DILocation(line: 1824, column: 1, scope: !13259)
!13268 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2563, file: !2563, line: 118, type: !8243, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13269)
!13269 = !{!13270, !13271}
!13270 = !DILocalVariable(name: "arg", arg: 1, scope: !13268, file: !2563, line: 118, type: !102)
!13271 = !DILocalVariable(name: "dticks", scope: !13268, file: !2563, line: 121, type: !108)
!13272 = !DILocation(line: 0, scope: !13268)
!13273 = !DILocation(line: 124, column: 2, scope: !13268)
!13274 = !DILocation(line: 129, column: 17, scope: !13268)
!13275 = !DILocation(line: 129, column: 14, scope: !13268)
!13276 = !DILocation(line: 130, column: 15, scope: !13268)
!13277 = !DILocation(line: 145, column: 27, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13279, file: !2563, line: 132, column: 16)
!13279 = distinct !DILexicalBlock(scope: !13268, file: !2563, line: 132, column: 6)
!13280 = !DILocation(line: 145, column: 25, scope: !13278)
!13281 = !DILocation(line: 145, column: 45, scope: !13278)
!13282 = !DILocation(line: 146, column: 30, scope: !13278)
!13283 = !DILocation(line: 146, column: 20, scope: !13278)
!13284 = !DILocation(line: 147, column: 3, scope: !13278)
!13285 = !DILocation(line: 151, column: 2, scope: !13268)
!13286 = !DILocation(line: 152, column: 1, scope: !13268)
!13287 = distinct !DISubprogram(name: "elapsed", scope: !2563, file: !2563, line: 85, type: !8393, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13288)
!13288 = !{!13289, !13290, !13291}
!13289 = !DILocalVariable(name: "val1", scope: !13287, file: !2563, line: 87, type: !108)
!13290 = !DILocalVariable(name: "ctrl", scope: !13287, file: !2563, line: 88, type: !108)
!13291 = !DILocalVariable(name: "val2", scope: !13287, file: !2563, line: 89, type: !108)
!13292 = !DILocation(line: 87, column: 27, scope: !13287)
!13293 = !DILocation(line: 0, scope: !13287)
!13294 = !DILocation(line: 88, column: 27, scope: !13287)
!13295 = !DILocation(line: 89, column: 27, scope: !13287)
!13296 = !DILocation(line: 105, column: 12, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13287, file: !2563, line: 105, column: 6)
!13298 = !DILocation(line: 106, column: 6, scope: !13297)
!13299 = !DILocation(line: 107, column: 16, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13297, file: !2563, line: 106, column: 24)
!13301 = !DILocation(line: 111, column: 18, scope: !13300)
!13302 = !DILocation(line: 112, column: 2, scope: !13300)
!13303 = !DILocation(line: 114, column: 20, scope: !13287)
!13304 = !DILocation(line: 114, column: 30, scope: !13287)
!13305 = !DILocation(line: 114, column: 28, scope: !13287)
!13306 = !DILocation(line: 114, column: 2, scope: !13287)
!13307 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2563, file: !2563, line: 154, type: !13308, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13310)
!13308 = !DISubroutineType(types: !13309)
!13309 = !{null, !330, !119}
!13310 = !{!13311, !13312, !13313, !13314, !13315, !13316, !13317, !13322, !13323}
!13311 = !DILocalVariable(name: "ticks", arg: 1, scope: !13307, file: !2563, line: 154, type: !330)
!13312 = !DILocalVariable(name: "idle", arg: 2, scope: !13307, file: !2563, line: 154, type: !119)
!13313 = !DILocalVariable(name: "delay", scope: !13307, file: !2563, line: 169, type: !108)
!13314 = !DILocalVariable(name: "val1", scope: !13307, file: !2563, line: 170, type: !108)
!13315 = !DILocalVariable(name: "val2", scope: !13307, file: !2563, line: 170, type: !108)
!13316 = !DILocalVariable(name: "last_load_", scope: !13307, file: !2563, line: 171, type: !108)
!13317 = !DILocalVariable(name: "key", scope: !13307, file: !2563, line: 176, type: !13318)
!13318 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !13319)
!13319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !13320)
!13320 = !{!13321}
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13319, file: !149, line: 33, baseType: !103, size: 32)
!13322 = !DILocalVariable(name: "pending", scope: !13307, file: !2563, line: 178, type: !108)
!13323 = !DILocalVariable(name: "unannounced", scope: !13307, file: !2563, line: 185, type: !108)
!13324 = !DILocation(line: 0, scope: !13307)
!13325 = !DILocation(line: 162, column: 49, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13307, file: !2563, line: 162, column: 6)
!13327 = !DILocation(line: 163, column: 17, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13326, file: !2563, line: 162, column: 78)
!13329 = !DILocation(line: 164, column: 13, scope: !13328)
!13330 = !DILocation(line: 165, column: 3, scope: !13328)
!13331 = !DILocation(line: 171, column: 24, scope: !13307)
!13332 = !DILocation(line: 173, column: 10, scope: !13307)
!13333 = !DILocation(line: 174, column: 10, scope: !13307)
!13334 = !DILocalVariable(name: "l", arg: 1, scope: !13335, file: !149, line: 136, type: !13338)
!13335 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !13336, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13339)
!13336 = !DISubroutineType(types: !13337)
!13337 = !{!13318, !13338}
!13338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!13339 = !{!13334, !13340}
!13340 = !DILocalVariable(name: "k", scope: !13335, file: !149, line: 139, type: !13318)
!13341 = !DILocation(line: 0, scope: !13335, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 176, column: 25, scope: !13307)
!13343 = !DILocation(line: 55, column: 2, scope: !13344, inlinedAt: !13348)
!13344 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13345)
!13345 = !{!13346, !13347}
!13346 = !DILocalVariable(name: "key", scope: !13344, file: !7985, line: 44, type: !32)
!13347 = !DILocalVariable(name: "tmp", scope: !13344, file: !7985, line: 53, type: !32)
!13348 = distinct !DILocation(line: 145, column: 10, scope: !13335, inlinedAt: !13342)
!13349 = !{i64 2283454}
!13350 = !DILocation(line: 0, scope: !13344, inlinedAt: !13348)
!13351 = !DILocation(line: 148, column: 2, scope: !13352, inlinedAt: !13342)
!13352 = distinct !DILexicalBlock(scope: !13353, file: !149, line: 148, column: 2)
!13353 = distinct !DILexicalBlock(scope: !13335, file: !149, line: 148, column: 2)
!13354 = !DILocation(line: 148, column: 2, scope: !13353, inlinedAt: !13342)
!13355 = !DILocation(line: 148, column: 2, scope: !13356, inlinedAt: !13342)
!13356 = distinct !DILexicalBlock(scope: !13352, file: !149, line: 148, column: 2)
!13357 = !DILocation(line: 160, column: 2, scope: !13335, inlinedAt: !13342)
!13358 = !DILocation(line: 178, column: 21, scope: !13307)
!13359 = !DILocation(line: 180, column: 18, scope: !13307)
!13360 = !DILocation(line: 182, column: 14, scope: !13307)
!13361 = !DILocation(line: 183, column: 15, scope: !13307)
!13362 = !DILocation(line: 185, column: 39, scope: !13307)
!13363 = !DILocation(line: 185, column: 37, scope: !13307)
!13364 = !DILocation(line: 187, column: 27, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13307, file: !2563, line: 187, column: 6)
!13366 = !DILocation(line: 187, column: 6, scope: !13307)
!13367 = !DILocation(line: 202, column: 27, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13365, file: !2563, line: 195, column: 9)
!13369 = !DILocation(line: 202, column: 48, scope: !13368)
!13370 = !DILocation(line: 203, column: 9, scope: !13368)
!13371 = !DILocation(line: 204, column: 11, scope: !13368)
!13372 = !DILocation(line: 205, column: 13, scope: !13373)
!13373 = distinct !DILexicalBlock(scope: !13368, file: !2563, line: 205, column: 7)
!13374 = !DILocation(line: 205, column: 7, scope: !13368)
!13375 = !DILocation(line: 0, scope: !13365)
!13376 = !DILocation(line: 212, column: 18, scope: !13307)
!13377 = !DILocation(line: 214, column: 28, scope: !13307)
!13378 = !DILocation(line: 214, column: 16, scope: !13307)
!13379 = !DILocation(line: 215, column: 15, scope: !13307)
!13380 = !DILocation(line: 227, column: 11, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13307, file: !2563, line: 227, column: 6)
!13382 = !DILocation(line: 227, column: 6, scope: !13307)
!13383 = !DILocation(line: 228, column: 15, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13381, file: !2563, line: 227, column: 19)
!13385 = !DILocation(line: 228, column: 38, scope: !13384)
!13386 = !DILocation(line: 228, column: 24, scope: !13384)
!13387 = !DILocation(line: 229, column: 2, scope: !13384)
!13388 = !DILocation(line: 230, column: 24, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13381, file: !2563, line: 229, column: 9)
!13390 = !DILocation(line: 230, column: 15, scope: !13389)
!13391 = !DILocation(line: 0, scope: !13381)
!13392 = !DILocalVariable(name: "key", arg: 2, scope: !13393, file: !149, line: 190, type: !13318)
!13393 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !13394, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13396)
!13394 = !DISubroutineType(types: !13395)
!13395 = !{null, !13338, !13318}
!13396 = !{!13397, !13392}
!13397 = !DILocalVariable(name: "l", arg: 1, scope: !13393, file: !149, line: 189, type: !13338)
!13398 = !DILocation(line: 0, scope: !13393, inlinedAt: !13399)
!13399 = distinct !DILocation(line: 232, column: 2, scope: !13307)
!13400 = !DILocation(line: 194, column: 2, scope: !13401, inlinedAt: !13399)
!13401 = distinct !DILexicalBlock(scope: !13402, file: !149, line: 194, column: 2)
!13402 = distinct !DILexicalBlock(scope: !13393, file: !149, line: 194, column: 2)
!13403 = !DILocation(line: 194, column: 2, scope: !13402, inlinedAt: !13399)
!13404 = !DILocation(line: 194, column: 2, scope: !13405, inlinedAt: !13399)
!13405 = distinct !DILexicalBlock(scope: !13401, file: !149, line: 194, column: 2)
!13406 = !DILocalVariable(name: "key", arg: 1, scope: !13407, file: !7985, line: 84, type: !32)
!13407 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13408)
!13408 = !{!13406}
!13409 = !DILocation(line: 0, scope: !13407, inlinedAt: !13410)
!13410 = distinct !DILocation(line: 215, column: 2, scope: !13393, inlinedAt: !13399)
!13411 = !DILocation(line: 95, column: 2, scope: !13407, inlinedAt: !13410)
!13412 = !{i64 2284271}
!13413 = !DILocation(line: 234, column: 1, scope: !13307)
!13414 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2563, file: !2563, line: 236, type: !8393, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13415)
!13415 = !{!13416, !13417}
!13416 = !DILocalVariable(name: "key", scope: !13414, file: !2563, line: 242, type: !13318)
!13417 = !DILocalVariable(name: "cyc", scope: !13414, file: !2563, line: 243, type: !108)
!13418 = !DILocation(line: 0, scope: !13335, inlinedAt: !13419)
!13419 = distinct !DILocation(line: 242, column: 25, scope: !13414)
!13420 = !DILocation(line: 55, column: 2, scope: !13344, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 145, column: 10, scope: !13335, inlinedAt: !13419)
!13422 = !DILocation(line: 0, scope: !13344, inlinedAt: !13421)
!13423 = !DILocation(line: 148, column: 2, scope: !13352, inlinedAt: !13419)
!13424 = !DILocation(line: 148, column: 2, scope: !13353, inlinedAt: !13419)
!13425 = !DILocation(line: 148, column: 2, scope: !13356, inlinedAt: !13419)
!13426 = !DILocation(line: 160, column: 2, scope: !13335, inlinedAt: !13419)
!13427 = !DILocation(line: 0, scope: !13414)
!13428 = !DILocation(line: 243, column: 17, scope: !13414)
!13429 = !DILocation(line: 243, column: 29, scope: !13414)
!13430 = !DILocation(line: 243, column: 43, scope: !13414)
!13431 = !DILocation(line: 0, scope: !13393, inlinedAt: !13432)
!13432 = distinct !DILocation(line: 245, column: 2, scope: !13414)
!13433 = !DILocation(line: 194, column: 2, scope: !13401, inlinedAt: !13432)
!13434 = !DILocation(line: 194, column: 2, scope: !13402, inlinedAt: !13432)
!13435 = !DILocation(line: 194, column: 2, scope: !13405, inlinedAt: !13432)
!13436 = !DILocation(line: 243, column: 27, scope: !13414)
!13437 = !DILocation(line: 243, column: 41, scope: !13414)
!13438 = !DILocation(line: 0, scope: !13407, inlinedAt: !13439)
!13439 = distinct !DILocation(line: 215, column: 2, scope: !13393, inlinedAt: !13432)
!13440 = !DILocation(line: 95, column: 2, scope: !13407, inlinedAt: !13439)
!13441 = !DILocation(line: 246, column: 13, scope: !13414)
!13442 = !DILocation(line: 246, column: 2, scope: !13414)
!13443 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2563, file: !2563, line: 249, type: !8393, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !13444)
!13444 = !{!13445, !13446}
!13445 = !DILocalVariable(name: "key", scope: !13443, file: !2563, line: 251, type: !13318)
!13446 = !DILocalVariable(name: "ret", scope: !13443, file: !2563, line: 252, type: !108)
!13447 = !DILocation(line: 0, scope: !13335, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 251, column: 25, scope: !13443)
!13449 = !DILocation(line: 55, column: 2, scope: !13344, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 145, column: 10, scope: !13335, inlinedAt: !13448)
!13451 = !DILocation(line: 0, scope: !13344, inlinedAt: !13450)
!13452 = !DILocation(line: 148, column: 2, scope: !13352, inlinedAt: !13448)
!13453 = !DILocation(line: 148, column: 2, scope: !13353, inlinedAt: !13448)
!13454 = !DILocation(line: 148, column: 2, scope: !13356, inlinedAt: !13448)
!13455 = !DILocation(line: 160, column: 2, scope: !13335, inlinedAt: !13448)
!13456 = !DILocation(line: 0, scope: !13443)
!13457 = !DILocation(line: 252, column: 17, scope: !13443)
!13458 = !DILocation(line: 252, column: 29, scope: !13443)
!13459 = !DILocation(line: 0, scope: !13393, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 254, column: 2, scope: !13443)
!13461 = !DILocation(line: 194, column: 2, scope: !13401, inlinedAt: !13460)
!13462 = !DILocation(line: 194, column: 2, scope: !13402, inlinedAt: !13460)
!13463 = !DILocation(line: 194, column: 2, scope: !13405, inlinedAt: !13460)
!13464 = !DILocation(line: 252, column: 27, scope: !13443)
!13465 = !DILocation(line: 0, scope: !13407, inlinedAt: !13466)
!13466 = distinct !DILocation(line: 215, column: 2, scope: !13393, inlinedAt: !13460)
!13467 = !DILocation(line: 95, column: 2, scope: !13407, inlinedAt: !13466)
!13468 = !DILocation(line: 255, column: 2, scope: !13443)
!13469 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2563, file: !2563, line: 258, type: !333, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2953)
!13470 = !DILocation(line: 260, column: 6, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13469, file: !2563, line: 260, column: 6)
!13472 = !DILocation(line: 260, column: 16, scope: !13471)
!13473 = !DILocation(line: 260, column: 6, scope: !13469)
!13474 = !DILocation(line: 261, column: 17, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13471, file: !2563, line: 260, column: 34)
!13476 = !DILocation(line: 262, column: 2, scope: !13475)
!13477 = !DILocation(line: 263, column: 1, scope: !13469)
!13478 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2563, file: !2563, line: 265, type: !333, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2953)
!13479 = !DILocation(line: 267, column: 16, scope: !13478)
!13480 = !DILocation(line: 268, column: 1, scope: !13478)
!13481 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13482, file: !13482, line: 9, type: !13483, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3896, retainedNodes: !13506)
!13482 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13483 = !DISubroutineType(types: !13484)
!13484 = !{!103, !13485, !164, !13505}
!13485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13486, size: 32)
!13486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13487)
!13487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2404, line: 60, size: 64, elements: !13488)
!13488 = !{!13489, !13504}
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13487, file: !2404, line: 69, baseType: !13490, size: 32)
!13490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13491, size: 32)
!13491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13492)
!13492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2404, line: 50, size: 64, elements: !13493)
!13493 = !{!13494, !13502, !13503}
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13492, file: !2404, line: 52, baseType: !13495, size: 32)
!13495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13496, size: 32)
!13496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13497)
!13497 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2415, line: 37, baseType: !13498)
!13498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2415, line: 32, size: 64, elements: !13499)
!13499 = !{!13500, !13501}
!13500 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13498, file: !2415, line: 34, baseType: !108, size: 32)
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13498, file: !2415, line: 36, baseType: !108, size: 32, offset: 32)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13492, file: !2404, line: 54, baseType: !164, size: 8, offset: 32)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13492, file: !2404, line: 56, baseType: !164, size: 8, offset: 40)
!13504 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13487, file: !2404, line: 71, baseType: !164, size: 8, offset: 32)
!13505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13490, size: 32)
!13506 = !{!13507, !13508, !13509}
!13507 = !DILocalVariable(name: "config", arg: 1, scope: !13481, file: !13482, line: 9, type: !13485)
!13508 = !DILocalVariable(name: "id", arg: 2, scope: !13481, file: !13482, line: 9, type: !164)
!13509 = !DILocalVariable(name: "state", arg: 3, scope: !13481, file: !13482, line: 10, type: !13505)
!13510 = !DILocation(line: 0, scope: !13481)
!13511 = !DILocation(line: 12, column: 20, scope: !13481)
!13512 = !DILocation(line: 13, column: 27, scope: !13481)
!13513 = !DILocation(line: 13, column: 42, scope: !13481)
!13514 = !DILocation(line: 13, column: 19, scope: !13481)
!13515 = !DILocation(line: 13, column: 16, scope: !13481)
!13516 = !DILocation(line: 13, column: 2, scope: !13481)
!13517 = distinct !{!13517, !13516, !13518}
!13518 = !DILocation(line: 19, column: 2, scope: !13481)
!13519 = !DILocation(line: 14, column: 23, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !13482, line: 14, column: 7)
!13521 = distinct !DILexicalBlock(scope: !13481, file: !13482, line: 13, column: 54)
!13522 = !DILocation(line: 14, column: 10, scope: !13520)
!13523 = !DILocation(line: 18, column: 11, scope: !13521)
!13524 = !DILocation(line: 14, column: 7, scope: !13521)
!13525 = !DILocation(line: 22, column: 1, scope: !13481)
!13526 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2682, file: !2682, line: 193, type: !13527, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !13536)
!13527 = !DISubroutineType(types: !13528)
!13528 = !{!103, !13529, !164, !22}
!13529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13530, size: 32)
!13530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13531)
!13531 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2415, line: 37, baseType: !13532)
!13532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2415, line: 32, size: 64, elements: !13533)
!13533 = !{!13534, !13535}
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13532, file: !2415, line: 34, baseType: !108, size: 32)
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13532, file: !2415, line: 36, baseType: !108, size: 32, offset: 32)
!13536 = !{!13537, !13538, !13539, !13540, !13541, !13542, !13543, !13544, !13546}
!13537 = !DILocalVariable(name: "pins", arg: 1, scope: !13526, file: !2682, line: 193, type: !13529)
!13538 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13526, file: !2682, line: 193, type: !164)
!13539 = !DILocalVariable(name: "reg", arg: 3, scope: !13526, file: !2682, line: 194, type: !22)
!13540 = !DILocalVariable(name: "pin", scope: !13526, file: !2682, line: 196, type: !108)
!13541 = !DILocalVariable(name: "mux", scope: !13526, file: !2682, line: 196, type: !108)
!13542 = !DILocalVariable(name: "pin_cgf", scope: !13526, file: !2682, line: 197, type: !108)
!13543 = !DILocalVariable(name: "ret", scope: !13526, file: !2682, line: 198, type: !103)
!13544 = !DILocalVariable(name: "i", scope: !13545, file: !2682, line: 209, type: !164)
!13545 = distinct !DILexicalBlock(scope: !13526, file: !2682, line: 209, column: 2)
!13546 = !DILocalVariable(name: "gpio_out", scope: !13547, file: !2682, line: 239, type: !108)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !2682, line: 238, column: 55)
!13548 = distinct !DILexicalBlock(scope: !13549, file: !2682, line: 238, column: 14)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !2682, line: 236, column: 14)
!13550 = distinct !DILexicalBlock(scope: !13551, file: !2682, line: 234, column: 7)
!13551 = distinct !DILexicalBlock(scope: !13552, file: !2682, line: 209, column: 41)
!13552 = distinct !DILexicalBlock(scope: !13545, file: !2682, line: 209, column: 2)
!13553 = !DILocation(line: 0, scope: !13526)
!13554 = !DILocation(line: 0, scope: !13545)
!13555 = !DILocation(line: 209, column: 25, scope: !13552)
!13556 = !DILocation(line: 209, column: 2, scope: !13545)
!13557 = distinct !{!13557, !13556, !13558}
!13558 = !DILocation(line: 259, column: 2, scope: !13545)
!13559 = !DILocation(line: 210, column: 17, scope: !13551)
!13560 = !DILocation(line: 234, column: 7, scope: !13550)
!13561 = !DILocation(line: 234, column: 33, scope: !13550)
!13562 = !DILocation(line: 234, column: 7, scope: !13551)
!13563 = !DILocation(line: 235, column: 22, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13550, file: !2682, line: 234, column: 49)
!13565 = !DILocation(line: 235, column: 29, scope: !13564)
!13566 = !DILocation(line: 236, column: 3, scope: !13564)
!13567 = !DILocation(line: 236, column: 14, scope: !13550)
!13568 = !DILocation(line: 239, column: 32, scope: !13547)
!13569 = !DILocation(line: 0, scope: !13547)
!13570 = !DILocation(line: 241, column: 8, scope: !13547)
!13571 = !DILocation(line: 246, column: 3, scope: !13547)
!13572 = !DILocation(line: 252, column: 9, scope: !13551)
!13573 = !DILocation(line: 255, column: 9, scope: !13551)
!13574 = !DILocation(line: 256, column: 11, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13551, file: !2682, line: 256, column: 7)
!13576 = !DILocation(line: 209, column: 37, scope: !13552)
!13577 = !DILocation(line: 256, column: 7, scope: !13551)
!13578 = !DILocation(line: 262, column: 1, scope: !13526)
!13579 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2682, file: !2682, line: 176, type: !13580, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !13582)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{!103, !108, !108, !108}
!13582 = !{!13583, !13584, !13585, !13586}
!13583 = !DILocalVariable(name: "pin", arg: 1, scope: !13579, file: !2682, line: 176, type: !108)
!13584 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13579, file: !2682, line: 176, type: !108)
!13585 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13579, file: !2682, line: 176, type: !108)
!13586 = !DILocalVariable(name: "port_device", scope: !13579, file: !2682, line: 178, type: !2612)
!13587 = !DILocation(line: 0, scope: !13579)
!13588 = !DILocation(line: 180, column: 22, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13579, file: !2682, line: 180, column: 6)
!13590 = !DILocation(line: 180, column: 6, scope: !13579)
!13591 = !DILocation(line: 180, column: 6, scope: !13589)
!13592 = !DILocation(line: 184, column: 16, scope: !13579)
!13593 = !DILocation(line: 186, column: 19, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13579, file: !2682, line: 186, column: 6)
!13595 = !DILocation(line: 186, column: 28, scope: !13594)
!13596 = !DILocation(line: 186, column: 33, scope: !13594)
!13597 = !DILocation(line: 186, column: 6, scope: !13579)
!13598 = !DILocation(line: 190, column: 43, scope: !13579)
!13599 = !DILocation(line: 190, column: 9, scope: !13579)
!13600 = !DILocation(line: 190, column: 2, scope: !13579)
!13601 = !DILocation(line: 191, column: 1, scope: !13579)
!13602 = distinct !DISubprogram(name: "device_is_ready", scope: !11506, file: !11506, line: 47, type: !13603, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !13605)
!13603 = !DISubroutineType(types: !13604)
!13604 = !{!119, !2612}
!13605 = !{!13606}
!13606 = !DILocalVariable(name: "dev", arg: 1, scope: !13602, file: !11506, line: 47, type: !2612)
!13607 = !DILocation(line: 0, scope: !13602)
!13608 = !DILocation(line: 55, column: 2, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13602, file: !11506, line: 55, column: 2)
!13610 = !{i64 2149517463}
!13611 = !DILocation(line: 56, column: 9, scope: !13602)
!13612 = !DILocation(line: 56, column: 2, scope: !13602)
!13613 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !833, file: !833, line: 730, type: !13603, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !13614)
!13614 = !{!13615}
!13615 = !DILocalVariable(name: "dev", arg: 1, scope: !13613, file: !833, line: 730, type: !2612)
!13616 = !DILocation(line: 0, scope: !13613)
!13617 = !DILocation(line: 732, column: 9, scope: !13613)
!13618 = !DILocation(line: 732, column: 2, scope: !13613)
!13619 = distinct !DISubprogram(name: "SystemInit", scope: !2734, file: !2734, line: 167, type: !333, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !2953)
!13620 = !DILocation(line: 182, column: 1, scope: !13619)
!13621 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2734, file: !2734, line: 220, type: !333, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !13622)
!13622 = !{!13623, !13624, !13625, !13626, !13627}
!13623 = !DILocalVariable(name: "tmp", scope: !13621, file: !2734, line: 222, type: !108)
!13624 = !DILocalVariable(name: "pllvco", scope: !13621, file: !2734, line: 222, type: !108)
!13625 = !DILocalVariable(name: "pllp", scope: !13621, file: !2734, line: 222, type: !108)
!13626 = !DILocalVariable(name: "pllsource", scope: !13621, file: !2734, line: 222, type: !108)
!13627 = !DILocalVariable(name: "pllm", scope: !13621, file: !2734, line: 222, type: !108)
!13628 = !DILocation(line: 0, scope: !13621)
!13629 = !DILocation(line: 225, column: 14, scope: !13621)
!13630 = !DILocation(line: 225, column: 19, scope: !13621)
!13631 = !DILocation(line: 227, column: 3, scope: !13621)
!13632 = !DILocation(line: 240, column: 25, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13621, file: !2734, line: 228, column: 3)
!13634 = !DILocation(line: 241, column: 19, scope: !13633)
!13635 = !DILocation(line: 241, column: 27, scope: !13633)
!13636 = !DILocation(line: 0, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13633, file: !2734, line: 243, column: 11)
!13638 = !DILocation(line: 254, column: 22, scope: !13633)
!13639 = !DILocation(line: 254, column: 62, scope: !13633)
!13640 = !DILocation(line: 255, column: 31, scope: !13633)
!13641 = !DILocation(line: 256, column: 7, scope: !13633)
!13642 = !DILocation(line: 0, scope: !13633)
!13643 = !DILocation(line: 263, column: 30, scope: !13621)
!13644 = !DILocation(line: 263, column: 52, scope: !13621)
!13645 = !DILocation(line: 263, column: 9, scope: !13621)
!13646 = !DILocation(line: 265, column: 19, scope: !13621)
!13647 = !DILocation(line: 266, column: 1, scope: !13621)
!13648 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !13649, file: !13649, line: 87, type: !13650, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !13689)
!13649 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13650 = !DISubroutineType(types: !13651)
!13651 = !{!13652, !13653}
!13652 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3902, line: 44, baseType: !3901)
!13653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13654, size: 32)
!13654 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !13655, line: 172, baseType: !13656)
!13655 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13655, line: 121, size: 736, elements: !13657)
!13657 = !{!13658, !13659, !13668, !13676, !13677, !13678, !13679, !13680, !13681, !13682, !13683, !13684, !13685, !13686, !13687, !13688}
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !13656, file: !13655, line: 123, baseType: !108, size: 32)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !13656, file: !13655, line: 126, baseType: !13660, size: 160, offset: 32)
!13660 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !13655, line: 97, baseType: !13661)
!13661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13655, line: 79, size: 160, elements: !13662)
!13662 = !{!13663, !13664, !13665, !13666, !13667}
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !13661, file: !13655, line: 81, baseType: !108, size: 32)
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !13661, file: !13655, line: 84, baseType: !108, size: 32, offset: 32)
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !13661, file: !13655, line: 87, baseType: !108, size: 32, offset: 64)
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !13661, file: !13655, line: 90, baseType: !108, size: 32, offset: 96)
!13667 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !13661, file: !13655, line: 94, baseType: !108, size: 32, offset: 128)
!13668 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !13656, file: !13655, line: 129, baseType: !13669, size: 128, offset: 192)
!13669 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !13655, line: 116, baseType: !13670)
!13670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13655, line: 102, size: 128, elements: !13671)
!13671 = !{!13672, !13673, !13674, !13675}
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !13670, file: !13655, line: 104, baseType: !108, size: 32)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !13670, file: !13655, line: 107, baseType: !108, size: 32, offset: 32)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !13670, file: !13655, line: 110, baseType: !108, size: 32, offset: 64)
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !13670, file: !13655, line: 113, baseType: !108, size: 32, offset: 96)
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !13656, file: !13655, line: 132, baseType: !108, size: 32, offset: 320)
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !13656, file: !13655, line: 136, baseType: !108, size: 32, offset: 352)
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !13656, file: !13655, line: 140, baseType: !108, size: 32, offset: 384)
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !13656, file: !13655, line: 143, baseType: !108, size: 32, offset: 416)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !13656, file: !13655, line: 146, baseType: !108, size: 32, offset: 448)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !13656, file: !13655, line: 149, baseType: !108, size: 32, offset: 480)
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !13656, file: !13655, line: 152, baseType: !108, size: 32, offset: 512)
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !13656, file: !13655, line: 155, baseType: !108, size: 32, offset: 544)
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !13656, file: !13655, line: 158, baseType: !108, size: 32, offset: 576)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !13656, file: !13655, line: 161, baseType: !108, size: 32, offset: 608)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !13656, file: !13655, line: 164, baseType: !108, size: 32, offset: 640)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !13656, file: !13655, line: 167, baseType: !108, size: 32, offset: 672)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !13656, file: !13655, line: 170, baseType: !164, size: 8, offset: 704)
!13689 = !{!13690, !13691, !13692, !13693, !13694, !13695, !13696, !13697, !13698, !13699, !13700}
!13690 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !13648, file: !13649, line: 87, type: !13653)
!13691 = !DILocalVariable(name: "tickstart", scope: !13648, file: !13649, line: 89, type: !108)
!13692 = !DILocalVariable(name: "tmpreg1", scope: !13648, file: !13649, line: 90, type: !108)
!13693 = !DILocalVariable(name: "plli2sp", scope: !13648, file: !13649, line: 91, type: !108)
!13694 = !DILocalVariable(name: "plli2sq", scope: !13648, file: !13649, line: 92, type: !108)
!13695 = !DILocalVariable(name: "plli2sr", scope: !13648, file: !13649, line: 93, type: !108)
!13696 = !DILocalVariable(name: "pllsaip", scope: !13648, file: !13649, line: 94, type: !108)
!13697 = !DILocalVariable(name: "pllsaiq", scope: !13648, file: !13649, line: 95, type: !108)
!13698 = !DILocalVariable(name: "plli2sused", scope: !13648, file: !13649, line: 96, type: !108)
!13699 = !DILocalVariable(name: "pllsaiused", scope: !13648, file: !13649, line: 97, type: !108)
!13700 = !DILocalVariable(name: "tmpreg", scope: !13701, file: !13649, line: 184, type: !813)
!13701 = distinct !DILexicalBlock(scope: !13702, file: !13649, line: 184, column: 5)
!13702 = distinct !DILexicalBlock(scope: !13703, file: !13649, line: 179, column: 3)
!13703 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 178, column: 6)
!13704 = !DILocation(line: 0, scope: !13648)
!13705 = !DILocation(line: 103, column: 23, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 103, column: 6)
!13707 = !DILocation(line: 103, column: 45, scope: !13706)
!13708 = !DILocation(line: 103, column: 71, scope: !13706)
!13709 = !DILocation(line: 103, column: 6, scope: !13648)
!13710 = !DILocation(line: 109, column: 5, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13706, file: !13649, line: 104, column: 3)
!13712 = !DILocation(line: 111, column: 23, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13711, file: !13649, line: 111, column: 8)
!13714 = !DILocation(line: 111, column: 45, scope: !13713)
!13715 = !DILocation(line: 111, column: 8, scope: !13711)
!13716 = !DILocation(line: 119, column: 23, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 119, column: 6)
!13718 = !DILocation(line: 119, column: 45, scope: !13717)
!13719 = !DILocation(line: 119, column: 71, scope: !13717)
!13720 = !DILocation(line: 119, column: 6, scope: !13648)
!13721 = !DILocation(line: 125, column: 5, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13717, file: !13649, line: 120, column: 3)
!13723 = !DILocation(line: 127, column: 23, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13722, file: !13649, line: 127, column: 8)
!13725 = !DILocation(line: 127, column: 45, scope: !13724)
!13726 = !DILocation(line: 127, column: 8, scope: !13722)
!13727 = !DILocation(line: 135, column: 23, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 135, column: 6)
!13729 = !DILocation(line: 135, column: 45, scope: !13728)
!13730 = !DILocation(line: 135, column: 67, scope: !13728)
!13731 = !DILocation(line: 135, column: 6, scope: !13648)
!13732 = !DILocation(line: 141, column: 5, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13728, file: !13649, line: 136, column: 3)
!13734 = !DILocation(line: 143, column: 23, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13733, file: !13649, line: 143, column: 8)
!13736 = !DILocation(line: 143, column: 42, scope: !13735)
!13737 = !DILocation(line: 143, column: 8, scope: !13733)
!13738 = !DILocation(line: 148, column: 42, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13733, file: !13649, line: 148, column: 8)
!13740 = !DILocation(line: 148, column: 8, scope: !13733)
!13741 = !DILocation(line: 156, column: 23, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 156, column: 6)
!13743 = !DILocation(line: 156, column: 45, scope: !13742)
!13744 = !DILocation(line: 156, column: 67, scope: !13742)
!13745 = !DILocation(line: 156, column: 6, scope: !13648)
!13746 = !DILocation(line: 162, column: 5, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13742, file: !13649, line: 157, column: 3)
!13748 = !DILocation(line: 165, column: 23, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13747, file: !13649, line: 165, column: 8)
!13750 = !DILocation(line: 165, column: 42, scope: !13749)
!13751 = !DILocation(line: 165, column: 8, scope: !13747)
!13752 = !DILocation(line: 170, column: 42, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13747, file: !13649, line: 170, column: 8)
!13754 = !DILocation(line: 170, column: 8, scope: !13747)
!13755 = !DILocation(line: 178, column: 23, scope: !13703)
!13756 = !DILocation(line: 178, column: 45, scope: !13703)
!13757 = !DILocation(line: 178, column: 66, scope: !13703)
!13758 = !DILocation(line: 178, column: 6, scope: !13648)
!13759 = !DILocation(line: 184, column: 5, scope: !13701)
!13760 = !DILocation(line: 184, column: 5, scope: !13702)
!13761 = !DILocation(line: 187, column: 13, scope: !13702)
!13762 = !DILocation(line: 190, column: 17, scope: !13702)
!13763 = !DILocation(line: 192, column: 5, scope: !13702)
!13764 = !DILocation(line: 192, column: 17, scope: !13702)
!13765 = !DILocation(line: 192, column: 20, scope: !13702)
!13766 = !DILocation(line: 192, column: 34, scope: !13702)
!13767 = !DILocation(line: 194, column: 11, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13769, file: !13649, line: 194, column: 10)
!13769 = distinct !DILexicalBlock(scope: !13702, file: !13649, line: 193, column: 5)
!13770 = !DILocation(line: 194, column: 25, scope: !13768)
!13771 = !DILocation(line: 194, column: 39, scope: !13768)
!13772 = !DILocation(line: 194, column: 10, scope: !13769)
!13773 = distinct !{!13773, !13763, !13774}
!13774 = !DILocation(line: 198, column: 5, scope: !13702)
!13775 = !DILocation(line: 200, column: 21, scope: !13702)
!13776 = !DILocation(line: 200, column: 26, scope: !13702)
!13777 = !DILocation(line: 201, column: 17, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13702, file: !13649, line: 201, column: 8)
!13779 = !DILocation(line: 201, column: 33, scope: !13778)
!13780 = !DILocation(line: 201, column: 66, scope: !13778)
!13781 = !DILocation(line: 201, column: 84, scope: !13778)
!13782 = !DILocation(line: 201, column: 47, scope: !13778)
!13783 = !DILocation(line: 201, column: 8, scope: !13702)
!13784 = !DILocation(line: 204, column: 23, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13778, file: !13649, line: 202, column: 5)
!13786 = !DILocation(line: 204, column: 28, scope: !13785)
!13787 = !DILocation(line: 206, column: 7, scope: !13785)
!13788 = !DILocation(line: 207, column: 7, scope: !13785)
!13789 = !DILocation(line: 209, column: 17, scope: !13785)
!13790 = !DILocation(line: 212, column: 10, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13785, file: !13649, line: 212, column: 10)
!13792 = !DILocation(line: 212, column: 10, scope: !13785)
!13793 = !DILocation(line: 215, column: 21, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13791, file: !13649, line: 213, column: 7)
!13795 = !DILocation(line: 218, column: 9, scope: !13794)
!13796 = !DILocation(line: 218, column: 15, scope: !13794)
!13797 = !DILocation(line: 218, column: 51, scope: !13794)
!13798 = !DILocation(line: 220, column: 15, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13800, file: !13649, line: 220, column: 14)
!13800 = distinct !DILexicalBlock(scope: !13794, file: !13649, line: 219, column: 9)
!13801 = !DILocation(line: 220, column: 29, scope: !13799)
!13802 = !DILocation(line: 220, column: 43, scope: !13799)
!13803 = !DILocation(line: 220, column: 14, scope: !13800)
!13804 = distinct !{!13804, !13795, !13805}
!13805 = !DILocation(line: 224, column: 9, scope: !13794)
!13806 = !DILocation(line: 227, column: 5, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13702, file: !13649, line: 227, column: 5)
!13808 = !DILocation(line: 232, column: 23, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 232, column: 6)
!13810 = !DILocation(line: 228, column: 3, scope: !13702)
!13811 = !DILocation(line: 232, column: 45, scope: !13809)
!13812 = !DILocation(line: 232, column: 66, scope: !13809)
!13813 = !DILocation(line: 232, column: 6, scope: !13648)
!13814 = !DILocation(line: 235, column: 5, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13809, file: !13649, line: 233, column: 3)
!13816 = !DILocation(line: 240, column: 23, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 240, column: 6)
!13818 = !DILocation(line: 236, column: 3, scope: !13815)
!13819 = !DILocation(line: 240, column: 45, scope: !13817)
!13820 = !DILocation(line: 240, column: 70, scope: !13817)
!13821 = !DILocation(line: 240, column: 6, scope: !13648)
!13822 = !DILocation(line: 246, column: 5, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13817, file: !13649, line: 241, column: 3)
!13824 = !DILocation(line: 251, column: 23, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 251, column: 6)
!13826 = !DILocation(line: 247, column: 3, scope: !13823)
!13827 = !DILocation(line: 251, column: 45, scope: !13825)
!13828 = !DILocation(line: 251, column: 66, scope: !13825)
!13829 = !DILocation(line: 251, column: 6, scope: !13648)
!13830 = !DILocation(line: 257, column: 5, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13825, file: !13649, line: 252, column: 3)
!13832 = !DILocation(line: 262, column: 23, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 262, column: 6)
!13834 = !DILocation(line: 258, column: 3, scope: !13831)
!13835 = !DILocation(line: 262, column: 45, scope: !13833)
!13836 = !DILocation(line: 262, column: 68, scope: !13833)
!13837 = !DILocation(line: 262, column: 6, scope: !13648)
!13838 = !DILocation(line: 268, column: 5, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13833, file: !13649, line: 263, column: 3)
!13840 = !DILocation(line: 271, column: 23, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13839, file: !13649, line: 271, column: 8)
!13842 = !DILocation(line: 271, column: 43, scope: !13841)
!13843 = !DILocation(line: 271, column: 8, scope: !13839)
!13844 = !DILocation(line: 279, column: 23, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 279, column: 6)
!13846 = !DILocation(line: 279, column: 45, scope: !13845)
!13847 = !DILocation(line: 279, column: 67, scope: !13845)
!13848 = !DILocation(line: 279, column: 6, scope: !13648)
!13849 = !DILocation(line: 285, column: 5, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13845, file: !13649, line: 280, column: 3)
!13851 = !DILocation(line: 290, column: 23, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 290, column: 6)
!13853 = !DILocation(line: 286, column: 3, scope: !13850)
!13854 = !DILocation(line: 290, column: 45, scope: !13852)
!13855 = !DILocation(line: 290, column: 70, scope: !13852)
!13856 = !DILocation(line: 290, column: 6, scope: !13648)
!13857 = !DILocation(line: 296, column: 5, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13852, file: !13649, line: 291, column: 3)
!13859 = !DILocation(line: 298, column: 23, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13858, file: !13649, line: 298, column: 8)
!13861 = !DILocation(line: 298, column: 43, scope: !13860)
!13862 = !DILocation(line: 298, column: 8, scope: !13858)
!13863 = !DILocation(line: 308, column: 44, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 308, column: 6)
!13865 = !DILocation(line: 308, column: 18, scope: !13864)
!13866 = !DILocation(line: 308, column: 25, scope: !13864)
!13867 = !DILocation(line: 308, column: 65, scope: !13864)
!13868 = !DILocation(line: 308, column: 6, scope: !13648)
!13869 = !DILocation(line: 311, column: 5, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13864, file: !13649, line: 309, column: 3)
!13871 = !DILocation(line: 313, column: 17, scope: !13870)
!13872 = !DILocation(line: 315, column: 5, scope: !13870)
!13873 = !DILocation(line: 315, column: 11, scope: !13870)
!13874 = !DILocation(line: 317, column: 11, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13876, file: !13649, line: 317, column: 10)
!13876 = distinct !DILexicalBlock(scope: !13870, file: !13649, line: 316, column: 5)
!13877 = !DILocation(line: 317, column: 25, scope: !13875)
!13878 = !DILocation(line: 317, column: 39, scope: !13875)
!13879 = !DILocation(line: 317, column: 10, scope: !13876)
!13880 = distinct !{!13880, !13872, !13881}
!13881 = !DILocation(line: 322, column: 5, scope: !13870)
!13882 = !DILocation(line: 329, column: 27, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13870, file: !13649, line: 329, column: 8)
!13884 = !DILocation(line: 329, column: 49, scope: !13883)
!13885 = !DILocation(line: 329, column: 75, scope: !13883)
!13886 = !DILocation(line: 329, column: 102, scope: !13883)
!13887 = !DILocation(line: 329, column: 121, scope: !13883)
!13888 = !DILocation(line: 329, column: 143, scope: !13883)
!13889 = !DILocation(line: 329, column: 176, scope: !13883)
!13890 = !DILocation(line: 330, column: 49, scope: !13883)
!13891 = !DILocation(line: 330, column: 75, scope: !13883)
!13892 = !DILocation(line: 330, column: 102, scope: !13883)
!13893 = !DILocation(line: 330, column: 121, scope: !13883)
!13894 = !DILocation(line: 330, column: 143, scope: !13883)
!13895 = !DILocation(line: 329, column: 8, scope: !13870)
!13896 = !DILocation(line: 336, column: 26, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13883, file: !13649, line: 331, column: 5)
!13898 = !DILocation(line: 336, column: 100, scope: !13897)
!13899 = !DILocation(line: 337, column: 24, scope: !13897)
!13900 = !DILocation(line: 337, column: 61, scope: !13897)
!13901 = !DILocation(line: 341, column: 7, scope: !13897)
!13902 = !DILocation(line: 345, column: 27, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13870, file: !13649, line: 345, column: 8)
!13904 = !DILocation(line: 342, column: 5, scope: !13897)
!13905 = !DILocation(line: 345, column: 49, scope: !13903)
!13906 = !DILocation(line: 345, column: 71, scope: !13903)
!13907 = !DILocation(line: 345, column: 94, scope: !13903)
!13908 = !DILocation(line: 345, column: 113, scope: !13903)
!13909 = !DILocation(line: 345, column: 132, scope: !13903)
!13910 = !DILocation(line: 345, column: 162, scope: !13903)
!13911 = !DILocation(line: 346, column: 49, scope: !13903)
!13912 = !DILocation(line: 346, column: 71, scope: !13903)
!13913 = !DILocation(line: 346, column: 94, scope: !13903)
!13914 = !DILocation(line: 346, column: 113, scope: !13903)
!13915 = !DILocation(line: 346, column: 132, scope: !13903)
!13916 = !DILocation(line: 345, column: 8, scope: !13870)
!13917 = !DILocation(line: 354, column: 26, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13903, file: !13649, line: 347, column: 5)
!13919 = !DILocation(line: 354, column: 100, scope: !13918)
!13920 = !DILocation(line: 355, column: 24, scope: !13918)
!13921 = !DILocation(line: 355, column: 61, scope: !13918)
!13922 = !DILocation(line: 360, column: 7, scope: !13918)
!13923 = !DILocation(line: 363, column: 7, scope: !13918)
!13924 = !DILocation(line: 367, column: 26, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13870, file: !13649, line: 367, column: 8)
!13926 = !DILocation(line: 364, column: 5, scope: !13918)
!13927 = !DILocation(line: 367, column: 48, scope: !13925)
!13928 = !DILocation(line: 367, column: 73, scope: !13925)
!13929 = !DILocation(line: 367, column: 99, scope: !13925)
!13930 = !DILocation(line: 367, column: 118, scope: !13925)
!13931 = !DILocation(line: 367, column: 138, scope: !13925)
!13932 = !DILocation(line: 367, column: 8, scope: !13870)
!13933 = !DILocation(line: 372, column: 26, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13925, file: !13649, line: 368, column: 5)
!13935 = !DILocation(line: 373, column: 24, scope: !13934)
!13936 = !DILocation(line: 373, column: 61, scope: !13934)
!13937 = !DILocation(line: 377, column: 7, scope: !13934)
!13938 = !DILocation(line: 381, column: 24, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13870, file: !13649, line: 381, column: 8)
!13940 = !DILocation(line: 378, column: 5, scope: !13934)
!13941 = !DILocation(line: 381, column: 45, scope: !13939)
!13942 = !DILocation(line: 381, column: 69, scope: !13939)
!13943 = !DILocation(line: 381, column: 8, scope: !13870)
!13944 = !DILocation(line: 390, column: 7, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13939, file: !13649, line: 382, column: 5)
!13946 = !DILocation(line: 391, column: 5, scope: !13945)
!13947 = !DILocation(line: 394, column: 5, scope: !13870)
!13948 = !DILocation(line: 396, column: 17, scope: !13870)
!13949 = !DILocation(line: 398, column: 5, scope: !13870)
!13950 = !DILocation(line: 398, column: 11, scope: !13870)
!13951 = !DILocation(line: 398, column: 51, scope: !13870)
!13952 = !DILocation(line: 400, column: 11, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13954, file: !13649, line: 400, column: 10)
!13954 = distinct !DILexicalBlock(scope: !13870, file: !13649, line: 399, column: 5)
!13955 = !DILocation(line: 400, column: 25, scope: !13953)
!13956 = !DILocation(line: 400, column: 39, scope: !13953)
!13957 = !DILocation(line: 400, column: 10, scope: !13954)
!13958 = distinct !{!13958, !13949, !13959}
!13959 = !DILocation(line: 405, column: 5, scope: !13870)
!13960 = !DILocation(line: 411, column: 17, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13648, file: !13649, line: 411, column: 6)
!13962 = !DILocation(line: 411, column: 6, scope: !13648)
!13963 = !DILocation(line: 414, column: 5, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13961, file: !13649, line: 412, column: 3)
!13965 = !DILocation(line: 416, column: 17, scope: !13964)
!13966 = !DILocation(line: 418, column: 5, scope: !13964)
!13967 = !DILocation(line: 418, column: 11, scope: !13964)
!13968 = !DILocation(line: 420, column: 11, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13970, file: !13649, line: 420, column: 10)
!13970 = distinct !DILexicalBlock(scope: !13964, file: !13649, line: 419, column: 5)
!13971 = !DILocation(line: 420, column: 25, scope: !13969)
!13972 = !DILocation(line: 420, column: 39, scope: !13969)
!13973 = !DILocation(line: 420, column: 10, scope: !13970)
!13974 = distinct !{!13974, !13966, !13975}
!13975 = !DILocation(line: 425, column: 5, scope: !13964)
!13976 = !DILocation(line: 432, column: 27, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13964, file: !13649, line: 432, column: 8)
!13978 = !DILocation(line: 432, column: 49, scope: !13977)
!13979 = !DILocation(line: 432, column: 71, scope: !13977)
!13980 = !DILocation(line: 432, column: 94, scope: !13977)
!13981 = !DILocation(line: 432, column: 113, scope: !13977)
!13982 = !DILocation(line: 432, column: 132, scope: !13977)
!13983 = !DILocation(line: 432, column: 162, scope: !13977)
!13984 = !DILocation(line: 433, column: 49, scope: !13977)
!13985 = !DILocation(line: 433, column: 71, scope: !13977)
!13986 = !DILocation(line: 433, column: 94, scope: !13977)
!13987 = !DILocation(line: 433, column: 113, scope: !13977)
!13988 = !DILocation(line: 433, column: 132, scope: !13977)
!13989 = !DILocation(line: 432, column: 8, scope: !13964)
!13990 = !DILocation(line: 441, column: 26, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13977, file: !13649, line: 434, column: 5)
!13992 = !DILocation(line: 441, column: 100, scope: !13991)
!13993 = !DILocation(line: 445, column: 7, scope: !13991)
!13994 = !DILocation(line: 448, column: 7, scope: !13991)
!13995 = !DILocation(line: 453, column: 26, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13964, file: !13649, line: 453, column: 8)
!13997 = !DILocation(line: 449, column: 5, scope: !13991)
!13998 = !DILocation(line: 453, column: 48, scope: !13996)
!13999 = !DILocation(line: 453, column: 71, scope: !13996)
!14000 = !DILocation(line: 453, column: 95, scope: !13996)
!14001 = !DILocation(line: 453, column: 114, scope: !13996)
!14002 = !DILocation(line: 453, column: 134, scope: !13996)
!14003 = !DILocation(line: 453, column: 8, scope: !13964)
!14004 = !DILocation(line: 458, column: 24, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !13996, file: !13649, line: 454, column: 5)
!14006 = !DILocation(line: 458, column: 61, scope: !14005)
!14007 = !DILocation(line: 462, column: 7, scope: !14005)
!14008 = !DILocation(line: 463, column: 5, scope: !14005)
!14009 = !DILocation(line: 466, column: 5, scope: !13964)
!14010 = !DILocation(line: 468, column: 17, scope: !13964)
!14011 = !DILocation(line: 470, column: 5, scope: !13964)
!14012 = !DILocation(line: 470, column: 11, scope: !13964)
!14013 = !DILocation(line: 470, column: 39, scope: !13964)
!14014 = !DILocation(line: 472, column: 11, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !14016, file: !13649, line: 472, column: 10)
!14016 = distinct !DILexicalBlock(scope: !13964, file: !13649, line: 471, column: 5)
!14017 = !DILocation(line: 472, column: 25, scope: !14015)
!14018 = !DILocation(line: 472, column: 39, scope: !14015)
!14019 = !DILocation(line: 472, column: 10, scope: !14016)
!14020 = distinct !{!14020, !14011, !14021}
!14021 = !DILocation(line: 477, column: 5, scope: !13964)
!14022 = !DILocation(line: 480, column: 1, scope: !13648)
!14023 = !DISubprogram(name: "HAL_GetTick", scope: !14024, file: !14024, line: 234, type: !8393, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!14024 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14025 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !13649, file: !13649, line: 489, type: !14026, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14028)
!14026 = !DISubroutineType(types: !14027)
!14027 = !{null, !13653}
!14028 = !{!14029, !14030}
!14029 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !14025, file: !13649, line: 489, type: !13653)
!14030 = !DILocalVariable(name: "tempreg", scope: !14025, file: !13649, line: 491, type: !108)
!14031 = !DILocation(line: 0, scope: !14025)
!14032 = !DILocation(line: 494, column: 18, scope: !14025)
!14033 = !DILocation(line: 494, column: 39, scope: !14025)
!14034 = !DILocation(line: 502, column: 52, scope: !14025)
!14035 = !DILocation(line: 502, column: 63, scope: !14025)
!14036 = !DILocation(line: 502, column: 25, scope: !14025)
!14037 = !DILocation(line: 502, column: 33, scope: !14025)
!14038 = !DILocation(line: 503, column: 52, scope: !14025)
!14039 = !DILocation(line: 503, column: 89, scope: !14025)
!14040 = !DILocation(line: 503, column: 25, scope: !14025)
!14041 = !DILocation(line: 503, column: 33, scope: !14025)
!14042 = !DILocation(line: 504, column: 54, scope: !14025)
!14043 = !DILocation(line: 504, column: 128, scope: !14025)
!14044 = !DILocation(line: 504, column: 25, scope: !14025)
!14045 = !DILocation(line: 504, column: 33, scope: !14025)
!14046 = !DILocation(line: 505, column: 52, scope: !14025)
!14047 = !DILocation(line: 505, column: 89, scope: !14025)
!14048 = !DILocation(line: 505, column: 25, scope: !14025)
!14049 = !DILocation(line: 505, column: 33, scope: !14025)
!14050 = !DILocation(line: 506, column: 52, scope: !14025)
!14051 = !DILocation(line: 506, column: 89, scope: !14025)
!14052 = !DILocation(line: 506, column: 25, scope: !14025)
!14053 = !DILocation(line: 506, column: 33, scope: !14025)
!14054 = !DILocation(line: 508, column: 52, scope: !14025)
!14055 = !DILocation(line: 508, column: 63, scope: !14025)
!14056 = !DILocation(line: 508, column: 25, scope: !14025)
!14057 = !DILocation(line: 508, column: 33, scope: !14025)
!14058 = !DILocation(line: 509, column: 52, scope: !14025)
!14059 = !DILocation(line: 509, column: 89, scope: !14025)
!14060 = !DILocation(line: 509, column: 25, scope: !14025)
!14061 = !DILocation(line: 509, column: 33, scope: !14025)
!14062 = !DILocation(line: 510, column: 54, scope: !14025)
!14063 = !DILocation(line: 510, column: 128, scope: !14025)
!14064 = !DILocation(line: 510, column: 25, scope: !14025)
!14065 = !DILocation(line: 510, column: 33, scope: !14025)
!14066 = !DILocation(line: 511, column: 52, scope: !14025)
!14067 = !DILocation(line: 511, column: 89, scope: !14025)
!14068 = !DILocation(line: 511, column: 25, scope: !14025)
!14069 = !DILocation(line: 511, column: 33, scope: !14025)
!14070 = !DILocation(line: 513, column: 48, scope: !14025)
!14071 = !DILocation(line: 513, column: 56, scope: !14025)
!14072 = !DILocation(line: 513, column: 18, scope: !14025)
!14073 = !DILocation(line: 513, column: 29, scope: !14025)
!14074 = !DILocation(line: 514, column: 48, scope: !14025)
!14075 = !DILocation(line: 514, column: 82, scope: !14025)
!14076 = !DILocation(line: 514, column: 18, scope: !14025)
!14077 = !DILocation(line: 514, column: 29, scope: !14025)
!14078 = !DILocation(line: 517, column: 39, scope: !14025)
!14079 = !DILocation(line: 517, column: 18, scope: !14025)
!14080 = !DILocation(line: 517, column: 37, scope: !14025)
!14081 = !DILocation(line: 520, column: 39, scope: !14025)
!14082 = !DILocation(line: 520, column: 18, scope: !14025)
!14083 = !DILocation(line: 520, column: 37, scope: !14025)
!14084 = !DILocation(line: 523, column: 42, scope: !14025)
!14085 = !DILocation(line: 523, column: 18, scope: !14025)
!14086 = !DILocation(line: 523, column: 40, scope: !14025)
!14087 = !DILocation(line: 526, column: 42, scope: !14025)
!14088 = !DILocation(line: 526, column: 18, scope: !14025)
!14089 = !DILocation(line: 526, column: 40, scope: !14025)
!14090 = !DILocation(line: 529, column: 19, scope: !14025)
!14091 = !DILocation(line: 529, column: 24, scope: !14025)
!14092 = !DILocation(line: 530, column: 67, scope: !14025)
!14093 = !DILocation(line: 530, column: 72, scope: !14025)
!14094 = !DILocation(line: 530, column: 59, scope: !14025)
!14095 = !DILocation(line: 530, column: 18, scope: !14025)
!14096 = !DILocation(line: 530, column: 36, scope: !14025)
!14097 = !DILocation(line: 533, column: 38, scope: !14025)
!14098 = !DILocation(line: 533, column: 18, scope: !14025)
!14099 = !DILocation(line: 533, column: 36, scope: !14025)
!14100 = !DILocation(line: 536, column: 42, scope: !14025)
!14101 = !DILocation(line: 536, column: 18, scope: !14025)
!14102 = !DILocation(line: 536, column: 40, scope: !14025)
!14103 = !DILocation(line: 539, column: 40, scope: !14025)
!14104 = !DILocation(line: 539, column: 18, scope: !14025)
!14105 = !DILocation(line: 539, column: 38, scope: !14025)
!14106 = !DILocation(line: 542, column: 39, scope: !14025)
!14107 = !DILocation(line: 542, column: 18, scope: !14025)
!14108 = !DILocation(line: 542, column: 37, scope: !14025)
!14109 = !DILocation(line: 545, column: 40, scope: !14025)
!14110 = !DILocation(line: 545, column: 18, scope: !14025)
!14111 = !DILocation(line: 545, column: 38, scope: !14025)
!14112 = !DILocation(line: 548, column: 13, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14025, file: !13649, line: 548, column: 7)
!14114 = !DILocation(line: 548, column: 7, scope: !14025)
!14115 = !DILocation(line: 550, column: 20, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14113, file: !13649, line: 549, column: 3)
!14117 = !DILocation(line: 550, column: 37, scope: !14116)
!14118 = !DILocation(line: 556, column: 1, scope: !14025)
!14119 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !13649, file: !13649, line: 569, type: !9590, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14120)
!14120 = !{!14121, !14122, !14123, !14124, !14125, !14126, !14127}
!14121 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !14119, file: !13649, line: 569, type: !108)
!14122 = !DILocalVariable(name: "tmpreg1", scope: !14119, file: !13649, line: 571, type: !108)
!14123 = !DILocalVariable(name: "frequency", scope: !14119, file: !13649, line: 573, type: !108)
!14124 = !DILocalVariable(name: "vcoinput", scope: !14119, file: !13649, line: 575, type: !108)
!14125 = !DILocalVariable(name: "saiclocksource", scope: !14119, file: !13649, line: 577, type: !108)
!14126 = !DILocalVariable(name: "srcclk", scope: !14119, file: !13649, line: 578, type: !108)
!14127 = !DILocalVariable(name: "vcooutput", scope: !14119, file: !13649, line: 580, type: !108)
!14128 = !DILocation(line: 0, scope: !14119)
!14129 = !DILocation(line: 581, column: 3, scope: !14119)
!14130 = !DILocation(line: 586, column: 29, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14132, file: !13649, line: 585, column: 5)
!14132 = distinct !DILexicalBlock(scope: !14119, file: !13649, line: 582, column: 3)
!14133 = !DILocation(line: 588, column: 7, scope: !14131)
!14134 = !DILocation(line: 594, column: 20, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14136, file: !13649, line: 594, column: 14)
!14136 = distinct !DILexicalBlock(scope: !14137, file: !13649, line: 591, column: 9)
!14137 = distinct !DILexicalBlock(scope: !14131, file: !13649, line: 589, column: 7)
!14138 = !DILocation(line: 0, scope: !14135)
!14139 = !DILocation(line: 606, column: 27, scope: !14136)
!14140 = !DILocation(line: 606, column: 64, scope: !14136)
!14141 = !DILocation(line: 607, column: 42, scope: !14136)
!14142 = !DILocation(line: 607, column: 79, scope: !14136)
!14143 = !DILocation(line: 607, column: 33, scope: !14136)
!14144 = !DILocation(line: 607, column: 86, scope: !14136)
!14145 = !DILocation(line: 610, column: 29, scope: !14136)
!14146 = !DILocation(line: 610, column: 63, scope: !14136)
!14147 = !DILocation(line: 610, column: 70, scope: !14136)
!14148 = !DILocation(line: 611, column: 32, scope: !14136)
!14149 = !DILocation(line: 612, column: 11, scope: !14136)
!14150 = !DILocation(line: 619, column: 20, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14152, file: !13649, line: 619, column: 14)
!14152 = distinct !DILexicalBlock(scope: !14137, file: !13649, line: 616, column: 9)
!14153 = !DILocation(line: 0, scope: !14151)
!14154 = !DILocation(line: 632, column: 27, scope: !14152)
!14155 = !DILocation(line: 632, column: 64, scope: !14152)
!14156 = !DILocation(line: 633, column: 42, scope: !14152)
!14157 = !DILocation(line: 633, column: 79, scope: !14152)
!14158 = !DILocation(line: 633, column: 33, scope: !14152)
!14159 = !DILocation(line: 633, column: 86, scope: !14152)
!14160 = !DILocation(line: 636, column: 28, scope: !14152)
!14161 = !DILocation(line: 636, column: 36, scope: !14152)
!14162 = !DILocation(line: 636, column: 62, scope: !14152)
!14163 = !DILocation(line: 637, column: 32, scope: !14152)
!14164 = !DILocation(line: 638, column: 11, scope: !14152)
!14165 = !DILocation(line: 645, column: 20, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !13649, line: 645, column: 14)
!14167 = distinct !DILexicalBlock(scope: !14137, file: !13649, line: 642, column: 9)
!14168 = !DILocation(line: 0, scope: !14166)
!14169 = !DILocation(line: 658, column: 27, scope: !14167)
!14170 = !DILocation(line: 658, column: 55, scope: !14167)
!14171 = !DILocation(line: 659, column: 42, scope: !14167)
!14172 = !DILocation(line: 659, column: 70, scope: !14167)
!14173 = !DILocation(line: 659, column: 33, scope: !14167)
!14174 = !DILocation(line: 659, column: 77, scope: !14167)
!14175 = !DILocation(line: 660, column: 11, scope: !14167)
!14176 = !DILocation(line: 665, column: 11, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14137, file: !13649, line: 663, column: 9)
!14178 = !DILocation(line: 669, column: 20, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !13649, line: 669, column: 14)
!14180 = distinct !DILexicalBlock(scope: !14137, file: !13649, line: 668, column: 9)
!14181 = !DILocation(line: 691, column: 16, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14132, file: !13649, line: 689, column: 5)
!14183 = !DILocation(line: 692, column: 7, scope: !14182)
!14184 = !DILocation(line: 706, column: 20, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !13649, line: 706, column: 14)
!14186 = distinct !DILexicalBlock(scope: !14187, file: !13649, line: 703, column: 9)
!14187 = distinct !DILexicalBlock(scope: !14182, file: !13649, line: 693, column: 7)
!14188 = !DILocation(line: 0, scope: !14185)
!14189 = !DILocation(line: 718, column: 53, scope: !14186)
!14190 = !DILocation(line: 718, column: 90, scope: !14186)
!14191 = !DILocation(line: 718, column: 43, scope: !14186)
!14192 = !DILocation(line: 720, column: 53, scope: !14186)
!14193 = !DILocation(line: 720, column: 90, scope: !14186)
!14194 = !DILocation(line: 720, column: 44, scope: !14186)
!14195 = !DILocation(line: 721, column: 11, scope: !14186)
!14196 = !DILocation(line: 728, column: 20, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14198, file: !13649, line: 728, column: 14)
!14198 = distinct !DILexicalBlock(scope: !14187, file: !13649, line: 725, column: 9)
!14199 = !DILocation(line: 0, scope: !14197)
!14200 = !DILocation(line: 740, column: 53, scope: !14198)
!14201 = !DILocation(line: 740, column: 81, scope: !14198)
!14202 = !DILocation(line: 740, column: 43, scope: !14198)
!14203 = !DILocation(line: 742, column: 53, scope: !14198)
!14204 = !DILocation(line: 742, column: 81, scope: !14198)
!14205 = !DILocation(line: 742, column: 44, scope: !14198)
!14206 = !DILocation(line: 743, column: 11, scope: !14198)
!14207 = !DILocation(line: 748, column: 20, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !13649, line: 748, column: 14)
!14209 = distinct !DILexicalBlock(scope: !14187, file: !13649, line: 747, column: 9)
!14210 = !DILocation(line: 770, column: 16, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14132, file: !13649, line: 768, column: 5)
!14212 = !DILocation(line: 771, column: 7, scope: !14211)
!14213 = !DILocation(line: 785, column: 20, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14215, file: !13649, line: 785, column: 14)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !13649, line: 782, column: 9)
!14216 = distinct !DILexicalBlock(scope: !14211, file: !13649, line: 772, column: 7)
!14217 = !DILocation(line: 0, scope: !14214)
!14218 = !DILocation(line: 797, column: 53, scope: !14215)
!14219 = !DILocation(line: 797, column: 90, scope: !14215)
!14220 = !DILocation(line: 797, column: 43, scope: !14215)
!14221 = !DILocation(line: 799, column: 53, scope: !14215)
!14222 = !DILocation(line: 799, column: 90, scope: !14215)
!14223 = !DILocation(line: 799, column: 44, scope: !14215)
!14224 = !DILocation(line: 800, column: 11, scope: !14215)
!14225 = !DILocation(line: 807, column: 20, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14227, file: !13649, line: 807, column: 14)
!14227 = distinct !DILexicalBlock(scope: !14216, file: !13649, line: 804, column: 9)
!14228 = !DILocation(line: 0, scope: !14226)
!14229 = !DILocation(line: 819, column: 53, scope: !14227)
!14230 = !DILocation(line: 819, column: 81, scope: !14227)
!14231 = !DILocation(line: 819, column: 43, scope: !14227)
!14232 = !DILocation(line: 821, column: 53, scope: !14227)
!14233 = !DILocation(line: 821, column: 81, scope: !14227)
!14234 = !DILocation(line: 821, column: 44, scope: !14227)
!14235 = !DILocation(line: 822, column: 11, scope: !14227)
!14236 = !DILocation(line: 827, column: 20, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14238, file: !13649, line: 827, column: 14)
!14238 = distinct !DILexicalBlock(scope: !14216, file: !13649, line: 826, column: 9)
!14239 = !DILocation(line: 847, column: 3, scope: !14119)
!14240 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !13649, file: !13649, line: 2766, type: !14241, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14243)
!14241 = !DISubroutineType(types: !14242)
!14242 = !{null, !164}
!14243 = !{!14244}
!14244 = !DILocalVariable(name: "Mode", arg: 1, scope: !14240, file: !13649, line: 2766, type: !164)
!14245 = !DILocation(line: 0, scope: !14240)
!14246 = !DILocation(line: 2770, column: 11, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14240, file: !13649, line: 2770, column: 6)
!14248 = !DILocation(line: 0, scope: !14247)
!14249 = !DILocation(line: 2770, column: 6, scope: !14240)
!14250 = !DILocation(line: 2778, column: 1, scope: !14240)
!14251 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !13649, file: !13649, line: 2803, type: !14252, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14255)
!14252 = !DISubroutineType(types: !14253)
!14253 = !{!13652, !14254}
!14254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13660, size: 32)
!14255 = !{!14256, !14257}
!14256 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !14251, file: !13649, line: 2803, type: !14254)
!14257 = !DILocalVariable(name: "tickstart", scope: !14251, file: !13649, line: 2805, type: !108)
!14258 = !DILocation(line: 0, scope: !14251)
!14259 = !DILocation(line: 2821, column: 3, scope: !14251)
!14260 = !DILocation(line: 2824, column: 15, scope: !14251)
!14261 = !DILocation(line: 2825, column: 3, scope: !14251)
!14262 = !DILocation(line: 2825, column: 9, scope: !14251)
!14263 = !DILocation(line: 2827, column: 9, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !13649, line: 2827, column: 8)
!14265 = distinct !DILexicalBlock(scope: !14251, file: !13649, line: 2826, column: 3)
!14266 = !DILocation(line: 2827, column: 23, scope: !14264)
!14267 = !DILocation(line: 2827, column: 37, scope: !14264)
!14268 = !DILocation(line: 2827, column: 8, scope: !14265)
!14269 = distinct !{!14269, !14261, !14270}
!14270 = !DILocation(line: 2832, column: 3, scope: !14251)
!14271 = !DILocation(line: 2840, column: 3, scope: !14251)
!14272 = !DILocation(line: 2866, column: 3, scope: !14251)
!14273 = !DILocation(line: 2869, column: 15, scope: !14251)
!14274 = !DILocation(line: 2870, column: 3, scope: !14251)
!14275 = !DILocation(line: 2870, column: 9, scope: !14251)
!14276 = !DILocation(line: 2870, column: 48, scope: !14251)
!14277 = !DILocation(line: 2872, column: 9, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14279, file: !13649, line: 2872, column: 8)
!14279 = distinct !DILexicalBlock(scope: !14251, file: !13649, line: 2871, column: 3)
!14280 = !DILocation(line: 2872, column: 23, scope: !14278)
!14281 = !DILocation(line: 2872, column: 37, scope: !14278)
!14282 = !DILocation(line: 2872, column: 8, scope: !14279)
!14283 = distinct !{!14283, !14274, !14284}
!14284 = !DILocation(line: 2877, column: 3, scope: !14251)
!14285 = !DILocation(line: 2880, column: 1, scope: !14251)
!14286 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !13649, file: !13649, line: 2886, type: !14287, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14289)
!14287 = !DISubroutineType(types: !14288)
!14288 = !{!13652}
!14289 = !{!14290}
!14290 = !DILocalVariable(name: "tickstart", scope: !14286, file: !13649, line: 2888, type: !108)
!14291 = !DILocation(line: 2891, column: 3, scope: !14286)
!14292 = !DILocation(line: 2894, column: 15, scope: !14286)
!14293 = !DILocation(line: 0, scope: !14286)
!14294 = !DILocation(line: 2895, column: 3, scope: !14286)
!14295 = !DILocation(line: 2895, column: 9, scope: !14286)
!14296 = !DILocation(line: 2895, column: 45, scope: !14286)
!14297 = !DILocation(line: 2897, column: 9, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14299, file: !13649, line: 2897, column: 8)
!14299 = distinct !DILexicalBlock(scope: !14286, file: !13649, line: 2896, column: 3)
!14300 = !DILocation(line: 2897, column: 23, scope: !14298)
!14301 = !DILocation(line: 2897, column: 36, scope: !14298)
!14302 = !DILocation(line: 2897, column: 8, scope: !14299)
!14303 = distinct !{!14303, !14294, !14304}
!14304 = !DILocation(line: 2902, column: 3, scope: !14286)
!14305 = !DILocation(line: 2905, column: 1, scope: !14286)
!14306 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !13649, file: !13649, line: 2916, type: !14307, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14310)
!14307 = !DISubroutineType(types: !14308)
!14308 = !{!13652, !14309}
!14309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13669, size: 32)
!14310 = !{!14311, !14312}
!14311 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !14306, file: !13649, line: 2916, type: !14309)
!14312 = !DILocalVariable(name: "tickstart", scope: !14306, file: !13649, line: 2918, type: !108)
!14313 = !DILocation(line: 0, scope: !14306)
!14314 = !DILocation(line: 2934, column: 3, scope: !14306)
!14315 = !DILocation(line: 2937, column: 15, scope: !14306)
!14316 = !DILocation(line: 2938, column: 3, scope: !14306)
!14317 = !DILocation(line: 2938, column: 9, scope: !14306)
!14318 = !DILocation(line: 2940, column: 9, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14320, file: !13649, line: 2940, column: 8)
!14320 = distinct !DILexicalBlock(scope: !14306, file: !13649, line: 2939, column: 3)
!14321 = !DILocation(line: 2940, column: 23, scope: !14319)
!14322 = !DILocation(line: 2940, column: 37, scope: !14319)
!14323 = !DILocation(line: 2940, column: 8, scope: !14320)
!14324 = distinct !{!14324, !14316, !14325}
!14325 = !DILocation(line: 2945, column: 3, scope: !14306)
!14326 = !DILocation(line: 2953, column: 3, scope: !14306)
!14327 = !DILocation(line: 2970, column: 3, scope: !14306)
!14328 = !DILocation(line: 2973, column: 15, scope: !14306)
!14329 = !DILocation(line: 2974, column: 3, scope: !14306)
!14330 = !DILocation(line: 2974, column: 9, scope: !14306)
!14331 = !DILocation(line: 2974, column: 37, scope: !14306)
!14332 = !DILocation(line: 2976, column: 9, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14334, file: !13649, line: 2976, column: 8)
!14334 = distinct !DILexicalBlock(scope: !14306, file: !13649, line: 2975, column: 3)
!14335 = !DILocation(line: 2976, column: 23, scope: !14333)
!14336 = !DILocation(line: 2976, column: 37, scope: !14333)
!14337 = !DILocation(line: 2976, column: 8, scope: !14334)
!14338 = distinct !{!14338, !14329, !14339}
!14339 = !DILocation(line: 2981, column: 3, scope: !14306)
!14340 = !DILocation(line: 2984, column: 1, scope: !14306)
!14341 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !13649, file: !13649, line: 2990, type: !14287, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14342)
!14342 = !{!14343}
!14343 = !DILocalVariable(name: "tickstart", scope: !14341, file: !13649, line: 2992, type: !108)
!14344 = !DILocation(line: 2995, column: 3, scope: !14341)
!14345 = !DILocation(line: 2998, column: 15, scope: !14341)
!14346 = !DILocation(line: 0, scope: !14341)
!14347 = !DILocation(line: 2999, column: 3, scope: !14341)
!14348 = !DILocation(line: 2999, column: 9, scope: !14341)
!14349 = !DILocation(line: 3001, column: 9, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14351, file: !13649, line: 3001, column: 8)
!14351 = distinct !DILexicalBlock(scope: !14341, file: !13649, line: 3000, column: 3)
!14352 = !DILocation(line: 3001, column: 23, scope: !14350)
!14353 = !DILocation(line: 3001, column: 36, scope: !14350)
!14354 = !DILocation(line: 3001, column: 8, scope: !14351)
!14355 = distinct !{!14355, !14347, !14356}
!14356 = !DILocation(line: 3006, column: 3, scope: !14341)
!14357 = !DILocation(line: 3009, column: 1, scope: !14341)
!14358 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13649, file: !13649, line: 3051, type: !8393, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14359)
!14359 = !{!14360, !14361, !14362, !14363, !14364}
!14360 = !DILocalVariable(name: "pllm", scope: !14358, file: !13649, line: 3053, type: !108)
!14361 = !DILocalVariable(name: "pllvco", scope: !14358, file: !13649, line: 3054, type: !108)
!14362 = !DILocalVariable(name: "pllp", scope: !14358, file: !13649, line: 3055, type: !108)
!14363 = !DILocalVariable(name: "pllr", scope: !14358, file: !13649, line: 3056, type: !108)
!14364 = !DILocalVariable(name: "sysclockfreq", scope: !14358, file: !13649, line: 3057, type: !108)
!14365 = !DILocation(line: 0, scope: !14358)
!14366 = !DILocation(line: 3060, column: 16, scope: !14358)
!14367 = !DILocation(line: 3060, column: 3, scope: !14358)
!14368 = !DILocation(line: 3076, column: 19, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14370, file: !13649, line: 3073, column: 5)
!14370 = distinct !DILexicalBlock(scope: !14358, file: !13649, line: 3061, column: 3)
!14371 = !DILocation(line: 3076, column: 27, scope: !14369)
!14372 = !DILocation(line: 3077, column: 10, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14369, file: !13649, line: 3077, column: 10)
!14374 = !DILocation(line: 0, scope: !14373)
!14375 = !DILocation(line: 3087, column: 23, scope: !14369)
!14376 = !DILocation(line: 3087, column: 82, scope: !14369)
!14377 = !DILocation(line: 3089, column: 28, scope: !14369)
!14378 = !DILocation(line: 3090, column: 7, scope: !14369)
!14379 = !DILocation(line: 3096, column: 19, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14370, file: !13649, line: 3093, column: 5)
!14381 = !DILocation(line: 3096, column: 27, scope: !14380)
!14382 = !DILocation(line: 3097, column: 10, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14380, file: !13649, line: 3097, column: 10)
!14384 = !DILocation(line: 0, scope: !14383)
!14385 = !DILocation(line: 3107, column: 21, scope: !14380)
!14386 = !DILocation(line: 3107, column: 49, scope: !14380)
!14387 = !DILocation(line: 3109, column: 28, scope: !14380)
!14388 = !DILocation(line: 3110, column: 7, scope: !14380)
!14389 = !DILocation(line: 0, scope: !14370)
!14390 = !DILocation(line: 3118, column: 3, scope: !14358)
!14391 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13649, file: !13649, line: 3143, type: !14287, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14392)
!14392 = !{!14393}
!14393 = !DILocalVariable(name: "tickstart", scope: !14391, file: !13649, line: 3145, type: !108)
!14394 = !DILocation(line: 3148, column: 15, scope: !14391)
!14395 = !DILocation(line: 0, scope: !14391)
!14396 = !DILocation(line: 3151, column: 3, scope: !14391)
!14397 = !DILocation(line: 3154, column: 3, scope: !14391)
!14398 = !DILocation(line: 3154, column: 10, scope: !14391)
!14399 = !DILocation(line: 3154, column: 43, scope: !14391)
!14400 = !DILocation(line: 3156, column: 10, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14402, file: !13649, line: 3156, column: 9)
!14402 = distinct !DILexicalBlock(scope: !14391, file: !13649, line: 3155, column: 3)
!14403 = !DILocation(line: 3156, column: 24, scope: !14401)
!14404 = !DILocation(line: 3156, column: 37, scope: !14401)
!14405 = !DILocation(line: 3156, column: 9, scope: !14402)
!14406 = distinct !{!14406, !14397, !14407}
!14407 = !DILocation(line: 3160, column: 3, scope: !14391)
!14408 = !DILocation(line: 3163, column: 3, scope: !14391)
!14409 = !DILocation(line: 3166, column: 15, scope: !14391)
!14410 = !DILocation(line: 3169, column: 3, scope: !14391)
!14411 = !DILocation(line: 3172, column: 3, scope: !14391)
!14412 = !DILocation(line: 3172, column: 10, scope: !14391)
!14413 = !DILocation(line: 3172, column: 44, scope: !14391)
!14414 = !DILocation(line: 3174, column: 24, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14416, file: !13649, line: 3174, column: 9)
!14416 = distinct !DILexicalBlock(scope: !14391, file: !13649, line: 3173, column: 3)
!14417 = !DILocation(line: 3174, column: 37, scope: !14415)
!14418 = !DILocation(line: 3174, column: 9, scope: !14416)
!14419 = distinct !{!14419, !14411, !14420}
!14420 = !DILocation(line: 3178, column: 3, scope: !14391)
!14421 = !DILocation(line: 3184, column: 3, scope: !14391)
!14422 = !DILocation(line: 3187, column: 3, scope: !14391)
!14423 = !DILocation(line: 3187, column: 10, scope: !14391)
!14424 = !DILocation(line: 3187, column: 43, scope: !14391)
!14425 = !DILocation(line: 3189, column: 24, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !13649, line: 3189, column: 9)
!14427 = distinct !DILexicalBlock(scope: !14391, file: !13649, line: 3188, column: 3)
!14428 = !DILocation(line: 3189, column: 37, scope: !14426)
!14429 = !DILocation(line: 3189, column: 9, scope: !14427)
!14430 = distinct !{!14430, !14422, !14431}
!14431 = !DILocation(line: 3193, column: 3, scope: !14391)
!14432 = !DILocation(line: 3199, column: 3, scope: !14391)
!14433 = !DILocation(line: 3202, column: 3, scope: !14391)
!14434 = !DILocation(line: 3202, column: 10, scope: !14391)
!14435 = !DILocation(line: 3202, column: 43, scope: !14391)
!14436 = !DILocation(line: 3204, column: 24, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14438, file: !13649, line: 3204, column: 9)
!14438 = distinct !DILexicalBlock(scope: !14391, file: !13649, line: 3203, column: 3)
!14439 = !DILocation(line: 3204, column: 37, scope: !14437)
!14440 = !DILocation(line: 3204, column: 9, scope: !14438)
!14441 = distinct !{!14441, !14433, !14442}
!14442 = !DILocation(line: 3208, column: 3, scope: !14391)
!14443 = !DILocation(line: 3215, column: 3, scope: !14391)
!14444 = !DILocation(line: 3218, column: 3, scope: !14391)
!14445 = !DILocation(line: 3218, column: 10, scope: !14391)
!14446 = !DILocation(line: 3218, column: 46, scope: !14391)
!14447 = !DILocation(line: 3220, column: 24, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14449, file: !13649, line: 3220, column: 9)
!14449 = distinct !DILexicalBlock(scope: !14391, file: !13649, line: 3219, column: 3)
!14450 = !DILocation(line: 3220, column: 37, scope: !14448)
!14451 = !DILocation(line: 3220, column: 9, scope: !14449)
!14452 = distinct !{!14452, !14444, !14453}
!14453 = !DILocation(line: 3224, column: 3, scope: !14391)
!14454 = !DILocation(line: 3232, column: 3, scope: !14391)
!14455 = !DILocation(line: 3235, column: 3, scope: !14391)
!14456 = !DILocation(line: 3235, column: 10, scope: !14391)
!14457 = !DILocation(line: 3235, column: 46, scope: !14391)
!14458 = !DILocation(line: 3237, column: 10, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14460, file: !13649, line: 3237, column: 9)
!14460 = distinct !DILexicalBlock(scope: !14391, file: !13649, line: 3236, column: 3)
!14461 = !DILocation(line: 3237, column: 24, scope: !14459)
!14462 = !DILocation(line: 3237, column: 37, scope: !14459)
!14463 = !DILocation(line: 3237, column: 9, scope: !14460)
!14464 = distinct !{!14464, !14455, !14465}
!14465 = !DILocation(line: 3241, column: 3, scope: !14391)
!14466 = !DILocation(line: 3247, column: 16, scope: !14391)
!14467 = !DILocation(line: 3257, column: 19, scope: !14391)
!14468 = !DILocation(line: 3270, column: 19, scope: !14391)
!14469 = !DILocation(line: 3274, column: 3, scope: !14391)
!14470 = !DILocation(line: 3277, column: 3, scope: !14391)
!14471 = !DILocation(line: 3281, column: 3, scope: !14391)
!14472 = !DILocation(line: 3285, column: 3, scope: !14391)
!14473 = !DILocation(line: 3288, column: 3, scope: !14391)
!14474 = !DILocation(line: 3292, column: 3, scope: !14391)
!14475 = !DILocation(line: 3296, column: 3, scope: !14391)
!14476 = !DILocation(line: 3299, column: 3, scope: !14391)
!14477 = !DILocation(line: 3302, column: 19, scope: !14391)
!14478 = !DILocation(line: 3305, column: 19, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14391, file: !13649, line: 3305, column: 6)
!14480 = !DILocation(line: 3305, column: 6, scope: !14479)
!14481 = !DILocation(line: 3305, column: 31, scope: !14479)
!14482 = !DILocation(line: 0, scope: !14479)
!14483 = !DILocation(line: 3313, column: 1, scope: !14391)
!14484 = !DISubprogram(name: "HAL_InitTick", scope: !14024, file: !14024, line: 223, type: !14485, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!14485 = !DISubroutineType(types: !14486)
!14486 = !{!13652, !108}
!14487 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13649, file: !13649, line: 3333, type: !14488, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14512)
!14488 = !DISubroutineType(types: !14489)
!14489 = !{!13652, !14490}
!14490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14491, size: 32)
!14491 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !14492, line: 70, baseType: !14493)
!14492 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14492, line: 49, size: 416, elements: !14494)
!14494 = !{!14495, !14496, !14497, !14498, !14499, !14500, !14501}
!14495 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !14493, file: !14492, line: 51, baseType: !108, size: 32)
!14496 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !14493, file: !14492, line: 54, baseType: !108, size: 32, offset: 32)
!14497 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !14493, file: !14492, line: 57, baseType: !108, size: 32, offset: 64)
!14498 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !14493, file: !14492, line: 60, baseType: !108, size: 32, offset: 96)
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !14493, file: !14492, line: 63, baseType: !108, size: 32, offset: 128)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !14493, file: !14492, line: 66, baseType: !108, size: 32, offset: 160)
!14501 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !14493, file: !14492, line: 69, baseType: !14502, size: 224, offset: 192)
!14502 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13655, line: 73, baseType: !14503)
!14503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13655, line: 45, size: 224, elements: !14504)
!14504 = !{!14505, !14506, !14507, !14508, !14509, !14510, !14511}
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !14503, file: !13655, line: 47, baseType: !108, size: 32)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !14503, file: !13655, line: 50, baseType: !108, size: 32, offset: 32)
!14507 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14503, file: !13655, line: 53, baseType: !108, size: 32, offset: 64)
!14508 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14503, file: !13655, line: 56, baseType: !108, size: 32, offset: 96)
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14503, file: !13655, line: 60, baseType: !108, size: 32, offset: 128)
!14510 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !14503, file: !13655, line: 63, baseType: !108, size: 32, offset: 160)
!14511 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !14503, file: !13655, line: 68, baseType: !108, size: 32, offset: 192)
!14512 = !{!14513, !14514, !14515, !14516, !14520}
!14513 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14487, file: !13649, line: 3333, type: !14490)
!14514 = !DILocalVariable(name: "tickstart", scope: !14487, file: !13649, line: 3335, type: !108)
!14515 = !DILocalVariable(name: "pll_config", scope: !14487, file: !13649, line: 3335, type: !108)
!14516 = !DILocalVariable(name: "pwrclkchanged", scope: !14517, file: !13649, line: 3517, type: !14519)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !13649, line: 3516, column: 3)
!14518 = distinct !DILexicalBlock(scope: !14487, file: !13649, line: 3515, column: 6)
!14519 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1696, line: 188, baseType: !3908)
!14520 = !DILocalVariable(name: "tmpreg", scope: !14521, file: !13649, line: 3526, type: !813)
!14521 = distinct !DILexicalBlock(scope: !14522, file: !13649, line: 3526, column: 7)
!14522 = distinct !DILexicalBlock(scope: !14523, file: !13649, line: 3525, column: 5)
!14523 = distinct !DILexicalBlock(scope: !14517, file: !13649, line: 3524, column: 8)
!14524 = !DILocation(line: 0, scope: !14487)
!14525 = !DILocation(line: 3338, column: 24, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14487, file: !13649, line: 3338, column: 6)
!14527 = !DILocation(line: 3338, column: 6, scope: !14487)
!14528 = !DILocation(line: 3346, column: 27, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !14487, file: !13649, line: 3346, column: 6)
!14530 = !DILocation(line: 3346, column: 43, scope: !14529)
!14531 = !DILocation(line: 3346, column: 69, scope: !14529)
!14532 = !DILocation(line: 3346, column: 6, scope: !14487)
!14533 = !DILocation(line: 3352, column: 9, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14535, file: !13649, line: 3352, column: 8)
!14535 = distinct !DILexicalBlock(scope: !14529, file: !13649, line: 3347, column: 3)
!14536 = !DILocation(line: 3352, column: 39, scope: !14534)
!14537 = !DILocation(line: 3352, column: 128, scope: !14534)
!14538 = !DILocation(line: 3353, column: 9, scope: !14534)
!14539 = !DILocation(line: 3353, column: 39, scope: !14534)
!14540 = !DILocation(line: 3353, column: 60, scope: !14534)
!14541 = !DILocation(line: 3353, column: 70, scope: !14534)
!14542 = !DILocation(line: 3353, column: 78, scope: !14534)
!14543 = !DILocation(line: 3353, column: 100, scope: !14534)
!14544 = !DILocation(line: 3353, column: 128, scope: !14534)
!14545 = !DILocation(line: 3354, column: 9, scope: !14534)
!14546 = !DILocation(line: 3354, column: 39, scope: !14534)
!14547 = !DILocation(line: 3354, column: 61, scope: !14534)
!14548 = !DILocation(line: 3354, column: 71, scope: !14534)
!14549 = !DILocation(line: 3354, column: 79, scope: !14534)
!14550 = !DILocation(line: 3354, column: 101, scope: !14534)
!14551 = !DILocation(line: 3352, column: 8, scope: !14535)
!14552 = !DILocation(line: 3360, column: 11, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !13649, line: 3360, column: 10)
!14554 = distinct !DILexicalBlock(scope: !14534, file: !13649, line: 3359, column: 5)
!14555 = !DILocation(line: 3360, column: 57, scope: !14553)
!14556 = !DILocation(line: 3360, column: 80, scope: !14553)
!14557 = !DILocation(line: 3360, column: 89, scope: !14553)
!14558 = !DILocation(line: 3360, column: 10, scope: !14554)
!14559 = !DILocation(line: 3368, column: 7, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !13649, line: 3368, column: 7)
!14561 = distinct !DILexicalBlock(scope: !14562, file: !13649, line: 3368, column: 7)
!14562 = distinct !DILexicalBlock(scope: !14534, file: !13649, line: 3366, column: 5)
!14563 = !DILocation(line: 3368, column: 7, scope: !14561)
!14564 = !DILocation(line: 3368, column: 7, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14560, file: !13649, line: 3368, column: 7)
!14566 = !DILocation(line: 3368, column: 7, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14568, file: !13649, line: 3368, column: 7)
!14568 = distinct !DILexicalBlock(scope: !14560, file: !13649, line: 3368, column: 7)
!14569 = !DILocation(line: 3368, column: 7, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14568, file: !13649, line: 3368, column: 7)
!14571 = !DILocation(line: 0, scope: !14560)
!14572 = !DILocation(line: 3371, column: 30, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14562, file: !13649, line: 3371, column: 10)
!14574 = !DILocation(line: 3371, column: 40, scope: !14573)
!14575 = !DILocation(line: 0, scope: !14573)
!14576 = !DILocation(line: 3371, column: 10, scope: !14562)
!14577 = !DILocation(line: 3377, column: 15, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14573, file: !13649, line: 3372, column: 7)
!14579 = !DILocation(line: 3377, column: 51, scope: !14578)
!14580 = !DILocation(line: 3377, column: 9, scope: !14578)
!14581 = !DILocation(line: 3379, column: 15, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !13649, line: 3379, column: 14)
!14583 = distinct !DILexicalBlock(scope: !14578, file: !13649, line: 3378, column: 9)
!14584 = !DILocation(line: 3379, column: 29, scope: !14582)
!14585 = !DILocation(line: 3379, column: 43, scope: !14582)
!14586 = !DILocation(line: 3379, column: 14, scope: !14583)
!14587 = distinct !{!14587, !14580, !14588}
!14588 = !DILocation(line: 3383, column: 9, scope: !14578)
!14589 = !DILocation(line: 3391, column: 15, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14573, file: !13649, line: 3386, column: 7)
!14591 = !DILocation(line: 3391, column: 9, scope: !14590)
!14592 = !DILocation(line: 3393, column: 15, scope: !14593)
!14593 = distinct !DILexicalBlock(scope: !14594, file: !13649, line: 3393, column: 14)
!14594 = distinct !DILexicalBlock(scope: !14590, file: !13649, line: 3392, column: 9)
!14595 = !DILocation(line: 3393, column: 29, scope: !14593)
!14596 = !DILocation(line: 3393, column: 43, scope: !14593)
!14597 = !DILocation(line: 3393, column: 14, scope: !14594)
!14598 = distinct !{!14598, !14591, !14599}
!14599 = !DILocation(line: 3397, column: 9, scope: !14590)
!14600 = !DILocation(line: 3402, column: 27, scope: !14601)
!14601 = distinct !DILexicalBlock(scope: !14487, file: !13649, line: 3402, column: 6)
!14602 = !DILocation(line: 3402, column: 43, scope: !14601)
!14603 = !DILocation(line: 3402, column: 69, scope: !14601)
!14604 = !DILocation(line: 3402, column: 6, scope: !14487)
!14605 = !DILocation(line: 3410, column: 9, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14607, file: !13649, line: 3410, column: 8)
!14607 = distinct !DILexicalBlock(scope: !14601, file: !13649, line: 3403, column: 3)
!14608 = !DILocation(line: 3410, column: 39, scope: !14606)
!14609 = !DILocation(line: 3410, column: 128, scope: !14606)
!14610 = !DILocation(line: 3411, column: 9, scope: !14606)
!14611 = !DILocation(line: 3411, column: 39, scope: !14606)
!14612 = !DILocation(line: 3411, column: 60, scope: !14606)
!14613 = !DILocation(line: 3411, column: 70, scope: !14606)
!14614 = !DILocation(line: 3411, column: 78, scope: !14606)
!14615 = !DILocation(line: 3411, column: 100, scope: !14606)
!14616 = !DILocation(line: 3411, column: 128, scope: !14606)
!14617 = !DILocation(line: 3412, column: 9, scope: !14606)
!14618 = !DILocation(line: 3412, column: 39, scope: !14606)
!14619 = !DILocation(line: 3412, column: 61, scope: !14606)
!14620 = !DILocation(line: 3412, column: 71, scope: !14606)
!14621 = !DILocation(line: 3412, column: 79, scope: !14606)
!14622 = !DILocation(line: 3412, column: 101, scope: !14606)
!14623 = !DILocation(line: 3410, column: 8, scope: !14607)
!14624 = !DILocation(line: 3419, column: 11, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14626, file: !13649, line: 3419, column: 10)
!14626 = distinct !DILexicalBlock(scope: !14606, file: !13649, line: 3417, column: 5)
!14627 = !DILocation(line: 3419, column: 57, scope: !14625)
!14628 = !DILocation(line: 3419, column: 80, scope: !14625)
!14629 = !DILocation(line: 3419, column: 89, scope: !14625)
!14630 = !DILocation(line: 3419, column: 10, scope: !14626)
!14631 = !DILocation(line: 3433, column: 30, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14633, file: !13649, line: 3433, column: 10)
!14633 = distinct !DILexicalBlock(scope: !14606, file: !13649, line: 3431, column: 5)
!14634 = !DILocation(line: 3433, column: 39, scope: !14632)
!14635 = !DILocation(line: 3433, column: 10, scope: !14633)
!14636 = !DILocation(line: 3436, column: 9, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14632, file: !13649, line: 3434, column: 7)
!14638 = !DILocation(line: 3439, column: 21, scope: !14637)
!14639 = !DILocation(line: 3442, column: 9, scope: !14637)
!14640 = !DILocation(line: 3442, column: 15, scope: !14637)
!14641 = !DILocation(line: 3442, column: 51, scope: !14637)
!14642 = !DILocation(line: 3444, column: 15, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14644, file: !13649, line: 3444, column: 14)
!14644 = distinct !DILexicalBlock(scope: !14637, file: !13649, line: 3443, column: 9)
!14645 = !DILocation(line: 3444, column: 29, scope: !14643)
!14646 = !DILocation(line: 3444, column: 43, scope: !14643)
!14647 = !DILocation(line: 3444, column: 14, scope: !14644)
!14648 = distinct !{!14648, !14639, !14649}
!14649 = !DILocation(line: 3448, column: 9, scope: !14637)
!14650 = !DILocation(line: 3456, column: 9, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14632, file: !13649, line: 3454, column: 7)
!14652 = !DILocation(line: 3459, column: 21, scope: !14651)
!14653 = !DILocation(line: 3462, column: 9, scope: !14651)
!14654 = !DILocation(line: 3462, column: 15, scope: !14651)
!14655 = !DILocation(line: 3464, column: 15, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14657, file: !13649, line: 3464, column: 14)
!14657 = distinct !DILexicalBlock(scope: !14651, file: !13649, line: 3463, column: 9)
!14658 = !DILocation(line: 3464, column: 29, scope: !14656)
!14659 = !DILocation(line: 3464, column: 43, scope: !14656)
!14660 = !DILocation(line: 3464, column: 14, scope: !14657)
!14661 = distinct !{!14661, !14653, !14662}
!14662 = !DILocation(line: 3468, column: 9, scope: !14651)
!14663 = !DILocation(line: 0, scope: !14606)
!14664 = !DILocation(line: 3473, column: 27, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14487, file: !13649, line: 3473, column: 6)
!14666 = !DILocation(line: 3473, column: 43, scope: !14665)
!14667 = !DILocation(line: 3473, column: 69, scope: !14665)
!14668 = !DILocation(line: 3473, column: 6, scope: !14487)
!14669 = !DILocation(line: 3479, column: 28, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14671, file: !13649, line: 3479, column: 8)
!14671 = distinct !DILexicalBlock(scope: !14665, file: !13649, line: 3474, column: 3)
!14672 = !DILocation(line: 3479, column: 37, scope: !14670)
!14673 = !DILocation(line: 3479, column: 8, scope: !14671)
!14674 = !DILocation(line: 3482, column: 7, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14670, file: !13649, line: 3480, column: 5)
!14676 = !DILocation(line: 3485, column: 19, scope: !14675)
!14677 = !DILocation(line: 3488, column: 7, scope: !14675)
!14678 = !DILocation(line: 3488, column: 13, scope: !14675)
!14679 = !DILocation(line: 3488, column: 49, scope: !14675)
!14680 = !DILocation(line: 3490, column: 13, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14682, file: !13649, line: 3490, column: 12)
!14682 = distinct !DILexicalBlock(scope: !14675, file: !13649, line: 3489, column: 7)
!14683 = !DILocation(line: 3490, column: 27, scope: !14681)
!14684 = !DILocation(line: 3490, column: 41, scope: !14681)
!14685 = !DILocation(line: 3490, column: 12, scope: !14682)
!14686 = distinct !{!14686, !14677, !14687}
!14687 = !DILocation(line: 3494, column: 7, scope: !14675)
!14688 = !DILocation(line: 3499, column: 7, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14670, file: !13649, line: 3497, column: 5)
!14690 = !DILocation(line: 3502, column: 19, scope: !14689)
!14691 = !DILocation(line: 3505, column: 7, scope: !14689)
!14692 = !DILocation(line: 3505, column: 13, scope: !14689)
!14693 = !DILocation(line: 3507, column: 13, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14695, file: !13649, line: 3507, column: 12)
!14695 = distinct !DILexicalBlock(scope: !14689, file: !13649, line: 3506, column: 7)
!14696 = !DILocation(line: 3507, column: 27, scope: !14694)
!14697 = !DILocation(line: 3507, column: 41, scope: !14694)
!14698 = !DILocation(line: 3507, column: 12, scope: !14695)
!14699 = distinct !{!14699, !14691, !14700}
!14700 = !DILocation(line: 3511, column: 7, scope: !14689)
!14701 = !DILocation(line: 3515, column: 27, scope: !14518)
!14702 = !DILocation(line: 3515, column: 43, scope: !14518)
!14703 = !DILocation(line: 3515, column: 69, scope: !14518)
!14704 = !DILocation(line: 3515, column: 6, scope: !14487)
!14705 = !DILocation(line: 0, scope: !14517)
!14706 = !DILocation(line: 3524, column: 8, scope: !14523)
!14707 = !DILocation(line: 3524, column: 8, scope: !14517)
!14708 = !DILocation(line: 3526, column: 7, scope: !14521)
!14709 = !DILocation(line: 3526, column: 7, scope: !14522)
!14710 = !DILocation(line: 3528, column: 5, scope: !14522)
!14711 = !DILocation(line: 3530, column: 8, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14517, file: !13649, line: 3530, column: 8)
!14713 = !DILocation(line: 3530, column: 8, scope: !14517)
!14714 = !DILocation(line: 3533, column: 7, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14712, file: !13649, line: 3531, column: 5)
!14716 = !DILocation(line: 3536, column: 19, scope: !14715)
!14717 = !DILocation(line: 3538, column: 7, scope: !14715)
!14718 = !DILocation(line: 3538, column: 13, scope: !14715)
!14719 = !DILocation(line: 3540, column: 13, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !13649, line: 3540, column: 12)
!14721 = distinct !DILexicalBlock(scope: !14715, file: !13649, line: 3539, column: 7)
!14722 = !DILocation(line: 3540, column: 27, scope: !14720)
!14723 = !DILocation(line: 3540, column: 40, scope: !14720)
!14724 = !DILocation(line: 3540, column: 12, scope: !14721)
!14725 = distinct !{!14725, !14717, !14726}
!14726 = !DILocation(line: 3544, column: 7, scope: !14715)
!14727 = !DILocation(line: 3548, column: 5, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14729, file: !13649, line: 3548, column: 5)
!14729 = distinct !DILexicalBlock(scope: !14517, file: !13649, line: 3548, column: 5)
!14730 = !DILocation(line: 3548, column: 5, scope: !14729)
!14731 = !DILocation(line: 3548, column: 5, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14728, file: !13649, line: 3548, column: 5)
!14733 = !DILocation(line: 3548, column: 5, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14735, file: !13649, line: 3548, column: 5)
!14735 = distinct !DILexicalBlock(scope: !14728, file: !13649, line: 3548, column: 5)
!14736 = !DILocation(line: 3548, column: 5, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14735, file: !13649, line: 3548, column: 5)
!14738 = !DILocation(line: 0, scope: !14728)
!14739 = !DILocation(line: 3550, column: 28, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14517, file: !13649, line: 3550, column: 8)
!14741 = !DILocation(line: 3550, column: 38, scope: !14740)
!14742 = !DILocation(line: 0, scope: !14740)
!14743 = !DILocation(line: 3550, column: 8, scope: !14517)
!14744 = !DILocation(line: 3556, column: 13, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14740, file: !13649, line: 3551, column: 5)
!14746 = !DILocation(line: 3556, column: 49, scope: !14745)
!14747 = !DILocation(line: 3556, column: 7, scope: !14745)
!14748 = !DILocation(line: 3558, column: 13, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14750, file: !13649, line: 3558, column: 12)
!14750 = distinct !DILexicalBlock(scope: !14745, file: !13649, line: 3557, column: 7)
!14751 = !DILocation(line: 3558, column: 27, scope: !14749)
!14752 = !DILocation(line: 3558, column: 41, scope: !14749)
!14753 = !DILocation(line: 3558, column: 12, scope: !14750)
!14754 = distinct !{!14754, !14747, !14755}
!14755 = !DILocation(line: 3562, column: 7, scope: !14745)
!14756 = !DILocation(line: 3570, column: 13, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14740, file: !13649, line: 3565, column: 5)
!14758 = !DILocation(line: 3570, column: 7, scope: !14757)
!14759 = !DILocation(line: 3572, column: 13, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14761, file: !13649, line: 3572, column: 12)
!14761 = distinct !DILexicalBlock(scope: !14757, file: !13649, line: 3571, column: 7)
!14762 = !DILocation(line: 3572, column: 27, scope: !14760)
!14763 = !DILocation(line: 3572, column: 41, scope: !14760)
!14764 = !DILocation(line: 3572, column: 12, scope: !14761)
!14765 = distinct !{!14765, !14758, !14766}
!14766 = !DILocation(line: 3576, column: 7, scope: !14757)
!14767 = !DILocation(line: 3580, column: 8, scope: !14517)
!14768 = !DILocation(line: 3582, column: 7, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !13649, line: 3581, column: 5)
!14770 = distinct !DILexicalBlock(scope: !14517, file: !13649, line: 3580, column: 8)
!14771 = !DILocation(line: 3583, column: 5, scope: !14769)
!14772 = !DILocation(line: 3588, column: 31, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14487, file: !13649, line: 3588, column: 7)
!14774 = !DILocation(line: 3588, column: 41, scope: !14773)
!14775 = !DILocation(line: 3588, column: 7, scope: !14487)
!14776 = !DILocation(line: 3591, column: 8, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !13649, line: 3591, column: 8)
!14778 = distinct !DILexicalBlock(scope: !14773, file: !13649, line: 3589, column: 3)
!14779 = !DILocation(line: 3591, column: 38, scope: !14777)
!14780 = !DILocation(line: 3591, column: 8, scope: !14778)
!14781 = !DILocation(line: 3593, column: 44, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14783, file: !13649, line: 3593, column: 10)
!14783 = distinct !DILexicalBlock(scope: !14777, file: !13649, line: 3592, column: 5)
!14784 = !DILocation(line: 0, scope: !14782)
!14785 = !DILocation(line: 3593, column: 10, scope: !14783)
!14786 = !DILocation(line: 3610, column: 15, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14782, file: !13649, line: 3594, column: 7)
!14788 = !DILocation(line: 3610, column: 9, scope: !14787)
!14789 = !DILocation(line: 3612, column: 15, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14791, file: !13649, line: 3612, column: 14)
!14791 = distinct !DILexicalBlock(scope: !14787, file: !13649, line: 3611, column: 9)
!14792 = !DILocation(line: 3612, column: 29, scope: !14790)
!14793 = !DILocation(line: 3612, column: 43, scope: !14790)
!14794 = !DILocation(line: 3612, column: 14, scope: !14791)
!14795 = distinct !{!14795, !14788, !14796}
!14796 = !DILocation(line: 3616, column: 9, scope: !14787)
!14797 = !DILocation(line: 3619, column: 9, scope: !14787)
!14798 = !DILocation(line: 3626, column: 9, scope: !14787)
!14799 = !DILocation(line: 3629, column: 21, scope: !14787)
!14800 = !DILocation(line: 3632, column: 9, scope: !14787)
!14801 = !DILocation(line: 3632, column: 15, scope: !14787)
!14802 = !DILocation(line: 3632, column: 51, scope: !14787)
!14803 = !DILocation(line: 3634, column: 15, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14805, file: !13649, line: 3634, column: 14)
!14805 = distinct !DILexicalBlock(scope: !14787, file: !13649, line: 3633, column: 9)
!14806 = !DILocation(line: 3634, column: 29, scope: !14804)
!14807 = !DILocation(line: 3634, column: 43, scope: !14804)
!14808 = !DILocation(line: 3634, column: 14, scope: !14805)
!14809 = distinct !{!14809, !14800, !14810}
!14810 = !DILocation(line: 3638, column: 9, scope: !14787)
!14811 = !DILocation(line: 3649, column: 15, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14782, file: !13649, line: 3641, column: 7)
!14813 = !DILocation(line: 3649, column: 9, scope: !14812)
!14814 = !DILocation(line: 3651, column: 15, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14816, file: !13649, line: 3651, column: 14)
!14816 = distinct !DILexicalBlock(scope: !14812, file: !13649, line: 3650, column: 9)
!14817 = !DILocation(line: 3651, column: 29, scope: !14815)
!14818 = !DILocation(line: 3651, column: 43, scope: !14815)
!14819 = !DILocation(line: 3651, column: 14, scope: !14816)
!14820 = distinct !{!14820, !14813, !14821}
!14821 = !DILocation(line: 3655, column: 9, scope: !14812)
!14822 = !DILocation(line: 3661, column: 44, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14824, file: !13649, line: 3661, column: 10)
!14824 = distinct !DILexicalBlock(scope: !14777, file: !13649, line: 3659, column: 5)
!14825 = !DILocation(line: 3661, column: 10, scope: !14824)
!14826 = !DILocation(line: 3668, column: 27, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14823, file: !13649, line: 3666, column: 7)
!14828 = !DILocation(line: 3671, column: 14, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14827, file: !13649, line: 3670, column: 13)
!14830 = !DILocation(line: 3671, column: 81, scope: !14829)
!14831 = !DILocation(line: 3671, column: 55, scope: !14829)
!14832 = !DILocation(line: 3671, column: 92, scope: !14829)
!14833 = !DILocation(line: 3672, column: 14, scope: !14829)
!14834 = !DILocation(line: 3672, column: 80, scope: !14829)
!14835 = !DILocation(line: 3672, column: 53, scope: !14829)
!14836 = !DILocation(line: 3672, column: 111, scope: !14829)
!14837 = !DILocation(line: 3673, column: 14, scope: !14829)
!14838 = !DILocation(line: 3673, column: 80, scope: !14829)
!14839 = !DILocation(line: 3673, column: 86, scope: !14829)
!14840 = !DILocation(line: 3673, column: 53, scope: !14829)
!14841 = !DILocation(line: 3673, column: 111, scope: !14829)
!14842 = !DILocation(line: 3674, column: 14, scope: !14829)
!14843 = !DILocation(line: 3674, column: 82, scope: !14829)
!14844 = !DILocation(line: 3674, column: 101, scope: !14829)
!14845 = !DILocation(line: 3674, column: 53, scope: !14829)
!14846 = !DILocation(line: 3674, column: 126, scope: !14829)
!14847 = !DILocation(line: 3675, column: 14, scope: !14829)
!14848 = !DILocation(line: 3675, column: 80, scope: !14829)
!14849 = !DILocation(line: 3675, column: 85, scope: !14829)
!14850 = !DILocation(line: 3675, column: 53, scope: !14829)
!14851 = !DILocation(line: 3675, column: 111, scope: !14829)
!14852 = !DILocation(line: 3676, column: 14, scope: !14829)
!14853 = !DILocation(line: 3676, column: 80, scope: !14829)
!14854 = !DILocation(line: 3676, column: 85, scope: !14829)
!14855 = !DILocation(line: 3676, column: 53, scope: !14829)
!14856 = !DILocation(line: 3670, column: 13, scope: !14827)
!14857 = !DILocation(line: 3691, column: 3, scope: !14487)
!14858 = !DILocation(line: 3692, column: 1, scope: !14487)
!14859 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13649, file: !13649, line: 3703, type: !14860, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3898, retainedNodes: !14862)
!14860 = !DISubroutineType(types: !14861)
!14861 = !{null, !14490}
!14862 = !{!14863}
!14863 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !14859, file: !13649, line: 3703, type: !14490)
!14864 = !DILocation(line: 0, scope: !14859)
!14865 = !DILocation(line: 3706, column: 22, scope: !14859)
!14866 = !DILocation(line: 3706, column: 37, scope: !14859)
!14867 = !DILocation(line: 3709, column: 12, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14859, file: !13649, line: 3709, column: 6)
!14869 = !DILocation(line: 3709, column: 15, scope: !14868)
!14870 = !DILocation(line: 3709, column: 31, scope: !14868)
!14871 = !DILocation(line: 3709, column: 6, scope: !14859)
!14872 = !DILocation(line: 3711, column: 24, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14868, file: !13649, line: 3710, column: 3)
!14874 = !DILocation(line: 3711, column: 33, scope: !14873)
!14875 = !DILocation(line: 3712, column: 3, scope: !14873)
!14876 = !DILocation(line: 3713, column: 17, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14868, file: !13649, line: 3713, column: 11)
!14878 = !DILocation(line: 3713, column: 20, scope: !14877)
!14879 = !DILocation(line: 3713, column: 35, scope: !14877)
!14880 = !DILocation(line: 0, scope: !14877)
!14881 = !DILocation(line: 3713, column: 11, scope: !14868)
!14882 = !DILocation(line: 3715, column: 33, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14877, file: !13649, line: 3714, column: 3)
!14884 = !DILocation(line: 3716, column: 3, scope: !14883)
!14885 = !DILocation(line: 3719, column: 33, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14877, file: !13649, line: 3718, column: 3)
!14887 = !DILocation(line: 3723, column: 12, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14859, file: !13649, line: 3723, column: 6)
!14889 = !DILocation(line: 3723, column: 15, scope: !14888)
!14890 = !DILocation(line: 3729, column: 24, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14888, file: !13649, line: 3728, column: 3)
!14892 = !DILocation(line: 3729, column: 33, scope: !14891)
!14893 = !DILocation(line: 3732, column: 61, scope: !14859)
!14894 = !DILocation(line: 3732, column: 81, scope: !14859)
!14895 = !DILocation(line: 3732, column: 22, scope: !14859)
!14896 = !DILocation(line: 3732, column: 42, scope: !14859)
!14897 = !DILocation(line: 3735, column: 12, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14859, file: !13649, line: 3735, column: 6)
!14899 = !DILocation(line: 3735, column: 17, scope: !14898)
!14900 = !DILocation(line: 3735, column: 35, scope: !14898)
!14901 = !DILocation(line: 3735, column: 6, scope: !14859)
!14902 = !DILocation(line: 3737, column: 24, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14898, file: !13649, line: 3736, column: 3)
!14904 = !DILocation(line: 3737, column: 33, scope: !14903)
!14905 = !DILocation(line: 3738, column: 3, scope: !14903)
!14906 = !DILocation(line: 3739, column: 17, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14898, file: !13649, line: 3739, column: 11)
!14908 = !DILocation(line: 3739, column: 22, scope: !14907)
!14909 = !DILocation(line: 3739, column: 39, scope: !14907)
!14910 = !DILocation(line: 0, scope: !14907)
!14911 = !DILocation(line: 3739, column: 11, scope: !14898)
!14912 = !DILocation(line: 3741, column: 33, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14907, file: !13649, line: 3740, column: 3)
!14914 = !DILocation(line: 3742, column: 3, scope: !14913)
!14915 = !DILocation(line: 3745, column: 33, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14907, file: !13649, line: 3744, column: 3)
!14917 = !DILocation(line: 3749, column: 12, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14859, file: !13649, line: 3749, column: 6)
!14919 = !DILocation(line: 3749, column: 16, scope: !14918)
!14920 = !DILocation(line: 3755, column: 24, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14918, file: !13649, line: 3754, column: 3)
!14922 = !DILocation(line: 3755, column: 33, scope: !14921)
!14923 = !DILocation(line: 3759, column: 12, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14859, file: !13649, line: 3759, column: 6)
!14925 = !DILocation(line: 3759, column: 15, scope: !14924)
!14926 = !DILocation(line: 3759, column: 30, scope: !14924)
!14927 = !DILocation(line: 3759, column: 6, scope: !14859)
!14928 = !DILocation(line: 3765, column: 28, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14924, file: !13649, line: 3764, column: 3)
!14930 = !DILocation(line: 3765, column: 37, scope: !14929)
!14931 = !DILocation(line: 3767, column: 54, scope: !14859)
!14932 = !DILocation(line: 3767, column: 62, scope: !14859)
!14933 = !DILocation(line: 3767, column: 26, scope: !14859)
!14934 = !DILocation(line: 3767, column: 36, scope: !14859)
!14935 = !DILocation(line: 3768, column: 49, scope: !14859)
!14936 = !DILocation(line: 3768, column: 57, scope: !14859)
!14937 = !DILocation(line: 3768, column: 26, scope: !14859)
!14938 = !DILocation(line: 3768, column: 31, scope: !14859)
!14939 = !DILocation(line: 3769, column: 50, scope: !14859)
!14940 = !DILocation(line: 3769, column: 78, scope: !14859)
!14941 = !DILocation(line: 3769, column: 26, scope: !14859)
!14942 = !DILocation(line: 3769, column: 31, scope: !14859)
!14943 = !DILocation(line: 3770, column: 52, scope: !14859)
!14944 = !DILocation(line: 3770, column: 102, scope: !14859)
!14945 = !DILocation(line: 3770, column: 109, scope: !14859)
!14946 = !DILocation(line: 3770, column: 26, scope: !14859)
!14947 = !DILocation(line: 3770, column: 31, scope: !14859)
!14948 = !DILocation(line: 3771, column: 50, scope: !14859)
!14949 = !DILocation(line: 3771, column: 78, scope: !14859)
!14950 = !DILocation(line: 3771, column: 26, scope: !14859)
!14951 = !DILocation(line: 3771, column: 31, scope: !14859)
!14952 = !DILocation(line: 3772, column: 50, scope: !14859)
!14953 = !DILocation(line: 3772, column: 78, scope: !14859)
!14954 = !DILocation(line: 3772, column: 26, scope: !14859)
!14955 = !DILocation(line: 3772, column: 31, scope: !14859)
!14956 = !DILocation(line: 3773, column: 1, scope: !14859)
!14957 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14958, file: !14958, line: 257, type: !8403, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !14959)
!14958 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14959 = !{!14960}
!14960 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14957, file: !14958, line: 257, type: !108)
!14961 = !DILocation(line: 0, scope: !14957)
!14962 = !DILocation(line: 260, column: 3, scope: !14957)
!14963 = !DILocation(line: 261, column: 1, scope: !14957)
!14964 = distinct !DISubprogram(name: "LL_InitTick", scope: !14965, file: !14965, line: 260, type: !12008, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !14966)
!14965 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14966 = !{!14967, !14968}
!14967 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14964, file: !14965, line: 260, type: !108)
!14968 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14964, file: !14965, line: 260, type: !108)
!14969 = !DILocation(line: 0, scope: !14964)
!14970 = !DILocation(line: 263, column: 46, scope: !14964)
!14971 = !DILocation(line: 263, column: 55, scope: !14964)
!14972 = !DILocation(line: 263, column: 18, scope: !14964)
!14973 = !DILocation(line: 264, column: 18, scope: !14964)
!14974 = !DILocation(line: 265, column: 18, scope: !14964)
!14975 = !DILocation(line: 267, column: 1, scope: !14964)
!14976 = distinct !DISubprogram(name: "LL_mDelay", scope: !14958, file: !14958, line: 273, type: !8403, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !14977)
!14977 = !{!14978, !14979}
!14978 = !DILocalVariable(name: "Delay", arg: 1, scope: !14976, file: !14958, line: 273, type: !108)
!14979 = !DILocalVariable(name: "tmp", scope: !14976, file: !14958, line: 275, type: !813)
!14980 = !DILocation(line: 0, scope: !14976)
!14981 = !DILocation(line: 275, column: 3, scope: !14976)
!14982 = !DILocation(line: 275, column: 18, scope: !14976)
!14983 = !DILocation(line: 275, column: 33, scope: !14976)
!14984 = !DILocation(line: 277, column: 10, scope: !14976)
!14985 = !DILocation(line: 280, column: 12, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14976, file: !14958, line: 280, column: 6)
!14987 = !DILocation(line: 285, column: 3, scope: !14976)
!14988 = !DILocation(line: 287, column: 18, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14990, file: !14958, line: 287, column: 8)
!14990 = distinct !DILexicalBlock(scope: !14976, file: !14958, line: 286, column: 3)
!14991 = !DILocation(line: 292, column: 1, scope: !14976)
!14992 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14958, file: !14958, line: 323, type: !8403, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !14993)
!14993 = !{!14994}
!14994 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14992, file: !14958, line: 323, type: !108)
!14995 = !DILocation(line: 0, scope: !14992)
!14996 = !DILocation(line: 326, column: 19, scope: !14992)
!14997 = !DILocation(line: 327, column: 1, scope: !14992)
!14998 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14958, file: !14958, line: 338, type: !14999, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15002)
!14999 = !DISubroutineType(types: !15000)
!15000 = !{!15001, !108}
!15001 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1696, line: 201, baseType: !1695)
!15002 = !{!15003, !15004, !15005, !15006, !15007}
!15003 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14998, file: !14958, line: 338, type: !108)
!15004 = !DILocalVariable(name: "timeout", scope: !14998, file: !14958, line: 340, type: !108)
!15005 = !DILocalVariable(name: "getlatency", scope: !14998, file: !14958, line: 341, type: !108)
!15006 = !DILocalVariable(name: "latency", scope: !14998, file: !14958, line: 342, type: !108)
!15007 = !DILocalVariable(name: "status", scope: !14998, file: !14958, line: 343, type: !15001)
!15008 = !DILocation(line: 0, scope: !14998)
!15009 = !DILocation(line: 347, column: 21, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !14998, file: !14958, line: 347, column: 6)
!15011 = !DILocation(line: 347, column: 6, scope: !14998)
!15012 = !DILocation(line: 353, column: 8, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !14958, line: 353, column: 8)
!15014 = distinct !DILexicalBlock(scope: !15010, file: !14958, line: 352, column: 3)
!15015 = !DILocation(line: 353, column: 40, scope: !15013)
!15016 = !DILocation(line: 353, column: 8, scope: !15014)
!15017 = !DILocation(line: 356, column: 26, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !15019, file: !14958, line: 356, column: 10)
!15019 = distinct !DILexicalBlock(scope: !15013, file: !14958, line: 354, column: 5)
!15020 = !DILocation(line: 356, column: 55, scope: !15018)
!15021 = !DILocation(line: 362, column: 55, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15019, file: !14958, line: 362, column: 10)
!15023 = !DILocation(line: 368, column: 55, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15019, file: !14958, line: 368, column: 10)
!15025 = !DILocation(line: 374, column: 26, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15019, file: !14958, line: 374, column: 10)
!15027 = !DILocation(line: 374, column: 55, scope: !15026)
!15028 = !DILocation(line: 380, column: 28, scope: !15029)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !14958, line: 380, column: 12)
!15030 = distinct !DILexicalBlock(scope: !15026, file: !14958, line: 379, column: 7)
!15031 = !DILocation(line: 380, column: 57, scope: !15029)
!15032 = !DILocation(line: 387, column: 8, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15014, file: !14958, line: 387, column: 8)
!15034 = !DILocation(line: 387, column: 40, scope: !15033)
!15035 = !DILocation(line: 387, column: 8, scope: !15014)
!15036 = !DILocation(line: 390, column: 26, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15038, file: !14958, line: 390, column: 10)
!15038 = distinct !DILexicalBlock(scope: !15033, file: !14958, line: 388, column: 5)
!15039 = !DILocation(line: 390, column: 55, scope: !15037)
!15040 = !DILocation(line: 396, column: 26, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15038, file: !14958, line: 396, column: 10)
!15042 = !DILocation(line: 396, column: 55, scope: !15041)
!15043 = !DILocation(line: 402, column: 26, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !15038, file: !14958, line: 402, column: 10)
!15045 = !DILocation(line: 402, column: 55, scope: !15044)
!15046 = !DILocation(line: 407, column: 26, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15038, file: !14958, line: 407, column: 10)
!15048 = !DILocation(line: 407, column: 55, scope: !15047)
!15049 = !DILocation(line: 413, column: 28, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15051, file: !14958, line: 413, column: 12)
!15051 = distinct !DILexicalBlock(scope: !15047, file: !14958, line: 412, column: 7)
!15052 = !DILocation(line: 413, column: 57, scope: !15050)
!15053 = !DILocation(line: 0, scope: !15014)
!15054 = !DILocation(line: 420, column: 8, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15014, file: !14958, line: 420, column: 8)
!15056 = !DILocation(line: 420, column: 40, scope: !15055)
!15057 = !DILocation(line: 420, column: 8, scope: !15014)
!15058 = !DILocation(line: 423, column: 26, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15060, file: !14958, line: 423, column: 10)
!15060 = distinct !DILexicalBlock(scope: !15055, file: !14958, line: 421, column: 5)
!15061 = !DILocation(line: 423, column: 55, scope: !15059)
!15062 = !DILocation(line: 429, column: 26, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15060, file: !14958, line: 429, column: 10)
!15064 = !DILocation(line: 429, column: 55, scope: !15063)
!15065 = !DILocation(line: 435, column: 28, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15067, file: !14958, line: 435, column: 12)
!15067 = distinct !DILexicalBlock(scope: !15063, file: !14958, line: 434, column: 7)
!15068 = !DILocation(line: 435, column: 57, scope: !15066)
!15069 = !DILocation(line: 444, column: 5, scope: !15014)
!15070 = !DILocation(line: 448, column: 5, scope: !15014)
!15071 = !DILocation(line: 451, column: 18, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15014, file: !14958, line: 449, column: 5)
!15073 = !DILocation(line: 452, column: 12, scope: !15072)
!15074 = !DILocation(line: 453, column: 26, scope: !15014)
!15075 = !DILocation(line: 453, column: 38, scope: !15014)
!15076 = !DILocation(line: 453, column: 5, scope: !15072)
!15077 = distinct !{!15077, !15070, !15078}
!15078 = !DILocation(line: 453, column: 54, scope: !15014)
!15079 = !DILocation(line: 0, scope: !15010)
!15080 = !DILocation(line: 464, column: 3, scope: !14998)
!15081 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !15082, file: !15082, line: 519, type: !8393, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15082 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15083 = !DILocation(line: 521, column: 21, scope: !15081)
!15084 = !DILocation(line: 521, column: 3, scope: !15081)
!15085 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !8006, file: !8006, line: 1543, type: !8403, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15086)
!15086 = !{!15087}
!15087 = !DILocalVariable(name: "Latency", arg: 1, scope: !15085, file: !8006, line: 1543, type: !108)
!15088 = !DILocation(line: 0, scope: !15085)
!15089 = !DILocation(line: 1545, column: 3, scope: !15085)
!15090 = !DILocation(line: 1546, column: 1, scope: !15085)
!15091 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !8006, file: !8006, line: 1569, type: !8393, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15092 = !DILocation(line: 1571, column: 21, scope: !15091)
!15093 = !DILocation(line: 1571, column: 3, scope: !15091)
!15094 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14958, file: !14958, line: 483, type: !15095, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15111)
!15095 = !DISubroutineType(types: !15096)
!15096 = !{!15001, !15097, !15104}
!15097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15098, size: 32)
!15098 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14965, line: 114, baseType: !15099)
!15099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14965, line: 94, size: 96, elements: !15100)
!15100 = !{!15101, !15102, !15103}
!15101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !15099, file: !14965, line: 96, baseType: !108, size: 32)
!15102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !15099, file: !14965, line: 102, baseType: !108, size: 32, offset: 32)
!15103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !15099, file: !14965, line: 109, baseType: !108, size: 32, offset: 64)
!15104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15105, size: 32)
!15105 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14965, line: 139, baseType: !15106)
!15106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14965, line: 119, size: 96, elements: !15107)
!15107 = !{!15108, !15109, !15110}
!15108 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !15106, file: !14965, line: 121, baseType: !108, size: 32)
!15109 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !15106, file: !14965, line: 127, baseType: !108, size: 32, offset: 32)
!15110 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !15106, file: !14965, line: 133, baseType: !108, size: 32, offset: 64)
!15111 = !{!15112, !15113, !15114, !15115}
!15112 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !15094, file: !14958, line: 483, type: !15097)
!15113 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !15094, file: !14958, line: 484, type: !15104)
!15114 = !DILocalVariable(name: "status", scope: !15094, file: !14958, line: 486, type: !15001)
!15115 = !DILocalVariable(name: "pllfreq", scope: !15094, file: !14958, line: 487, type: !108)
!15116 = !DILocation(line: 0, scope: !15094)
!15117 = !DILocation(line: 490, column: 6, scope: !15118)
!15118 = distinct !DILexicalBlock(scope: !15094, file: !14958, line: 490, column: 6)
!15119 = !DILocation(line: 490, column: 25, scope: !15118)
!15120 = !DILocation(line: 490, column: 6, scope: !15094)
!15121 = !DILocation(line: 493, column: 15, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15118, file: !14958, line: 491, column: 3)
!15123 = !DILocation(line: 496, column: 8, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15122, file: !14958, line: 496, column: 8)
!15125 = !DILocation(line: 496, column: 29, scope: !15124)
!15126 = !DILocation(line: 496, column: 8, scope: !15122)
!15127 = !DILocation(line: 498, column: 7, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15124, file: !14958, line: 497, column: 5)
!15129 = !DILocation(line: 499, column: 7, scope: !15128)
!15130 = !DILocation(line: 499, column: 14, scope: !15128)
!15131 = !DILocation(line: 499, column: 35, scope: !15128)
!15132 = distinct !{!15132, !15129, !15133}
!15133 = !DILocation(line: 502, column: 7, scope: !15128)
!15134 = !DILocation(line: 506, column: 76, scope: !15122)
!15135 = !DILocation(line: 506, column: 103, scope: !15122)
!15136 = !DILocation(line: 507, column: 54, scope: !15122)
!15137 = !DILocation(line: 506, column: 5, scope: !15122)
!15138 = !DILocation(line: 510, column: 14, scope: !15122)
!15139 = !DILocation(line: 511, column: 3, scope: !15122)
!15140 = !DILocation(line: 0, scope: !15118)
!15141 = !DILocation(line: 518, column: 3, scope: !15094)
!15142 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14958, file: !14958, line: 642, type: !15143, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15145)
!15143 = !DISubroutineType(types: !15144)
!15144 = !{!15001}
!15145 = !{!15146}
!15146 = !DILocalVariable(name: "status", scope: !15142, file: !14958, line: 644, type: !15001)
!15147 = !DILocation(line: 0, scope: !15142)
!15148 = !DILocation(line: 647, column: 6, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15142, file: !14958, line: 647, column: 6)
!15150 = !DILocation(line: 647, column: 27, scope: !15149)
!15151 = !DILocation(line: 655, column: 6, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15142, file: !14958, line: 655, column: 6)
!15153 = !DILocation(line: 655, column: 30, scope: !15152)
!15154 = !DILocation(line: 663, column: 6, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15142, file: !14958, line: 663, column: 6)
!15156 = !DILocation(line: 663, column: 30, scope: !15155)
!15157 = !DILocation(line: 663, column: 6, scope: !15142)
!15158 = !DILocation(line: 669, column: 3, scope: !15142)
!15159 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14958, file: !14958, line: 611, type: !15160, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15162)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{!108, !108, !15097}
!15162 = !{!15163, !15164, !15165}
!15163 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !15159, file: !14958, line: 611, type: !108)
!15164 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !15159, file: !14958, line: 611, type: !15097)
!15165 = !DILocalVariable(name: "pllfreq", scope: !15159, file: !14958, line: 613, type: !108)
!15166 = !DILocation(line: 0, scope: !15159)
!15167 = !DILocation(line: 622, column: 56, scope: !15159)
!15168 = !DILocation(line: 622, column: 61, scope: !15159)
!15169 = !DILocation(line: 622, column: 32, scope: !15159)
!15170 = !DILocation(line: 626, column: 45, scope: !15159)
!15171 = !DILocation(line: 626, column: 50, scope: !15159)
!15172 = !DILocation(line: 626, column: 21, scope: !15159)
!15173 = !DILocation(line: 630, column: 47, scope: !15159)
!15174 = !DILocation(line: 630, column: 82, scope: !15159)
!15175 = !DILocation(line: 630, column: 21, scope: !15159)
!15176 = !DILocation(line: 633, column: 3, scope: !15159)
!15177 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !11333, file: !11333, line: 3007, type: !8393, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15178 = !DILocation(line: 3009, column: 11, scope: !15177)
!15179 = !DILocation(line: 3009, column: 44, scope: !15177)
!15180 = !DILocation(line: 3009, column: 3, scope: !15177)
!15181 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !11333, file: !11333, line: 2987, type: !333, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15182 = !DILocation(line: 2989, column: 3, scope: !15181)
!15183 = !DILocation(line: 2990, column: 1, scope: !15181)
!15184 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !11333, file: !11333, line: 4304, type: !11467, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15185)
!15185 = !{!15186, !15187, !15188, !15189}
!15186 = !DILocalVariable(name: "Source", arg: 1, scope: !15184, file: !11333, line: 4304, type: !108)
!15187 = !DILocalVariable(name: "PLLM", arg: 2, scope: !15184, file: !11333, line: 4304, type: !108)
!15188 = !DILocalVariable(name: "PLLN", arg: 3, scope: !15184, file: !11333, line: 4304, type: !108)
!15189 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !15184, file: !11333, line: 4304, type: !108)
!15190 = !DILocation(line: 0, scope: !15184)
!15191 = !DILocation(line: 4306, column: 3, scope: !15184)
!15192 = !DILocation(line: 4308, column: 3, scope: !15184)
!15193 = !DILocation(line: 4310, column: 3, scope: !15184)
!15194 = !DILocation(line: 4312, column: 1, scope: !15184)
!15195 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14958, file: !14958, line: 681, type: !15196, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15198)
!15196 = !DISubroutineType(types: !15197)
!15197 = !{!15001, !108, !15104}
!15198 = !{!15199, !15200, !15201, !15202}
!15199 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !15195, file: !14958, line: 681, type: !108)
!15200 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !15195, file: !14958, line: 681, type: !15104)
!15201 = !DILocalVariable(name: "status", scope: !15195, file: !14958, line: 683, type: !15001)
!15202 = !DILocalVariable(name: "hclk_frequency", scope: !15195, file: !14958, line: 684, type: !108)
!15203 = !DILocation(line: 0, scope: !15195)
!15204 = !DILocation(line: 691, column: 20, scope: !15195)
!15205 = !DILocation(line: 694, column: 6, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15195, file: !14958, line: 694, column: 6)
!15207 = !DILocation(line: 694, column: 22, scope: !15206)
!15208 = !DILocation(line: 694, column: 6, scope: !15195)
!15209 = !DILocation(line: 697, column: 14, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15206, file: !14958, line: 695, column: 3)
!15211 = !DILocation(line: 701, column: 13, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15195, file: !14958, line: 701, column: 6)
!15213 = !DILocation(line: 701, column: 6, scope: !15195)
!15214 = !DILocation(line: 704, column: 5, scope: !15215)
!15215 = distinct !DILexicalBlock(scope: !15212, file: !14958, line: 702, column: 3)
!15216 = !DILocation(line: 705, column: 5, scope: !15215)
!15217 = !DILocation(line: 705, column: 12, scope: !15215)
!15218 = !DILocation(line: 705, column: 33, scope: !15215)
!15219 = distinct !{!15219, !15216, !15220}
!15220 = !DILocation(line: 708, column: 5, scope: !15215)
!15221 = !DILocation(line: 711, column: 49, scope: !15215)
!15222 = !DILocation(line: 711, column: 5, scope: !15215)
!15223 = !DILocation(line: 712, column: 5, scope: !15215)
!15224 = !DILocation(line: 713, column: 5, scope: !15215)
!15225 = !DILocation(line: 713, column: 12, scope: !15215)
!15226 = !DILocation(line: 713, column: 37, scope: !15215)
!15227 = distinct !{!15227, !15224, !15228}
!15228 = !DILocation(line: 716, column: 5, scope: !15215)
!15229 = !DILocation(line: 719, column: 50, scope: !15215)
!15230 = !DILocation(line: 719, column: 5, scope: !15215)
!15231 = !DILocation(line: 720, column: 50, scope: !15215)
!15232 = !DILocation(line: 720, column: 5, scope: !15215)
!15233 = !DILocation(line: 721, column: 3, scope: !15215)
!15234 = !DILocation(line: 724, column: 6, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15195, file: !14958, line: 724, column: 6)
!15236 = !DILocation(line: 724, column: 22, scope: !15235)
!15237 = !DILocation(line: 724, column: 6, scope: !15195)
!15238 = !DILocation(line: 727, column: 14, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15235, file: !14958, line: 725, column: 3)
!15240 = !DILocation(line: 728, column: 3, scope: !15239)
!15241 = !DILocation(line: 731, column: 13, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15195, file: !14958, line: 731, column: 6)
!15243 = !DILocation(line: 731, column: 6, scope: !15195)
!15244 = !DILocation(line: 733, column: 5, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15242, file: !14958, line: 732, column: 3)
!15246 = !DILocation(line: 734, column: 3, scope: !15245)
!15247 = !DILocation(line: 736, column: 3, scope: !15195)
!15248 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !11333, file: !11333, line: 4184, type: !333, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15249 = !DILocation(line: 4186, column: 3, scope: !15248)
!15250 = !DILocation(line: 4187, column: 1, scope: !15248)
!15251 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !11333, file: !11333, line: 4205, type: !8393, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15252 = !DILocation(line: 4207, column: 11, scope: !15251)
!15253 = !DILocation(line: 4207, column: 44, scope: !15251)
!15254 = !DILocation(line: 4207, column: 3, scope: !15251)
!15255 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !11333, file: !11333, line: 3224, type: !8403, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15256)
!15256 = !{!15257}
!15257 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !15255, file: !11333, line: 3224, type: !108)
!15258 = !DILocation(line: 0, scope: !15255)
!15259 = !DILocation(line: 3226, column: 3, scope: !15255)
!15260 = !DILocation(line: 3227, column: 1, scope: !15255)
!15261 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !11333, file: !11333, line: 3188, type: !8403, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "Source", arg: 1, scope: !15261, file: !11333, line: 3188, type: !108)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 3190, column: 3, scope: !15261)
!15266 = !DILocation(line: 3191, column: 1, scope: !15261)
!15267 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !11333, file: !11333, line: 3204, type: !8393, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15268 = !DILocation(line: 3206, column: 21, scope: !15267)
!15269 = !DILocation(line: 3206, column: 3, scope: !15267)
!15270 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !11333, file: !11333, line: 3240, type: !8403, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15271)
!15271 = !{!15272}
!15272 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !15270, file: !11333, line: 3240, type: !108)
!15273 = !DILocation(line: 0, scope: !15270)
!15274 = !DILocation(line: 3242, column: 3, scope: !15270)
!15275 = !DILocation(line: 3243, column: 1, scope: !15270)
!15276 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !11333, file: !11333, line: 3256, type: !8403, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15277)
!15277 = !{!15278}
!15278 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !15276, file: !11333, line: 3256, type: !108)
!15279 = !DILocation(line: 0, scope: !15276)
!15280 = !DILocation(line: 3258, column: 3, scope: !15276)
!15281 = !DILocation(line: 3259, column: 1, scope: !15276)
!15282 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !11333, file: !11333, line: 5969, type: !8393, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15283 = !DILocation(line: 5971, column: 11, scope: !15282)
!15284 = !DILocation(line: 5971, column: 47, scope: !15282)
!15285 = !DILocation(line: 5971, column: 3, scope: !15282)
!15286 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !11333, file: !11333, line: 5153, type: !8393, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15287 = !DILocation(line: 5155, column: 11, scope: !15286)
!15288 = !DILocation(line: 5155, column: 47, scope: !15286)
!15289 = !DILocation(line: 5155, column: 3, scope: !15286)
!15290 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14958, file: !14958, line: 540, type: !15291, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !15293)
!15291 = !DISubroutineType(types: !15292)
!15292 = !{!15001, !108, !108, !15097, !15104}
!15293 = !{!15294, !15295, !15296, !15297, !15298, !15299}
!15294 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !15290, file: !14958, line: 540, type: !108)
!15295 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !15290, file: !14958, line: 540, type: !108)
!15296 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !15290, file: !14958, line: 541, type: !15097)
!15297 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !15290, file: !14958, line: 541, type: !15104)
!15298 = !DILocalVariable(name: "status", scope: !15290, file: !14958, line: 543, type: !15001)
!15299 = !DILocalVariable(name: "pllfreq", scope: !15290, file: !14958, line: 544, type: !108)
!15300 = !DILocation(line: 0, scope: !15290)
!15301 = !DILocation(line: 551, column: 6, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15290, file: !14958, line: 551, column: 6)
!15303 = !DILocation(line: 551, column: 25, scope: !15302)
!15304 = !DILocation(line: 551, column: 6, scope: !15290)
!15305 = !DILocation(line: 554, column: 15, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15302, file: !14958, line: 552, column: 3)
!15307 = !DILocation(line: 557, column: 8, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15306, file: !14958, line: 557, column: 8)
!15309 = !DILocation(line: 557, column: 29, scope: !15308)
!15310 = !DILocation(line: 557, column: 8, scope: !15306)
!15311 = !DILocation(line: 560, column: 20, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15313, file: !14958, line: 560, column: 10)
!15313 = distinct !DILexicalBlock(scope: !15308, file: !14958, line: 558, column: 5)
!15314 = !DILocation(line: 560, column: 10, scope: !15313)
!15315 = !DILocation(line: 562, column: 9, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15312, file: !14958, line: 561, column: 7)
!15317 = !DILocation(line: 563, column: 7, scope: !15316)
!15318 = !DILocation(line: 566, column: 9, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15312, file: !14958, line: 565, column: 7)
!15320 = !DILocation(line: 570, column: 7, scope: !15313)
!15321 = !DILocation(line: 571, column: 7, scope: !15313)
!15322 = !DILocation(line: 571, column: 14, scope: !15313)
!15323 = !DILocation(line: 571, column: 35, scope: !15313)
!15324 = distinct !{!15324, !15321, !15325}
!15325 = !DILocation(line: 574, column: 7, scope: !15313)
!15326 = !DILocation(line: 578, column: 76, scope: !15306)
!15327 = !DILocation(line: 578, column: 103, scope: !15306)
!15328 = !DILocation(line: 579, column: 54, scope: !15306)
!15329 = !DILocation(line: 578, column: 5, scope: !15306)
!15330 = !DILocation(line: 582, column: 14, scope: !15306)
!15331 = !DILocation(line: 583, column: 3, scope: !15306)
!15332 = !DILocation(line: 0, scope: !15302)
!15333 = !DILocation(line: 590, column: 3, scope: !15290)
!15334 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !11333, file: !11333, line: 2969, type: !8393, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15335 = !DILocation(line: 2971, column: 11, scope: !15334)
!15336 = !DILocation(line: 2971, column: 44, scope: !15334)
!15337 = !DILocation(line: 2971, column: 3, scope: !15334)
!15338 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !11333, file: !11333, line: 2929, type: !333, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15339 = !DILocation(line: 2931, column: 3, scope: !15338)
!15340 = !DILocation(line: 2932, column: 1, scope: !15338)
!15341 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !11333, file: !11333, line: 2939, type: !333, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15342 = !DILocation(line: 2941, column: 3, scope: !15341)
!15343 = !DILocation(line: 2942, column: 1, scope: !15341)
!15344 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !11333, file: !11333, line: 2949, type: !333, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3961, retainedNodes: !2953)
!15345 = !DILocation(line: 2951, column: 3, scope: !15344)
!15346 = !DILocation(line: 2952, column: 1, scope: !15344)
!15347 = distinct !DISubprogram(name: "z_device_state_init", scope: !15348, file: !15348, line: 23, type: !333, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15349)
!15348 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15349 = !{!15350}
!15350 = !DILocalVariable(name: "dev", scope: !15347, file: !15348, line: 25, type: !15351)
!15351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15352, size: 32)
!15352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15353)
!15353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !833, line: 378, size: 192, elements: !15354)
!15354 = !{!15355, !15356, !15357, !15358, !15364, !15365}
!15355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !15353, file: !833, line: 380, baseType: !336, size: 32)
!15356 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !15353, file: !833, line: 382, baseType: !13, size: 32, offset: 32)
!15357 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !15353, file: !833, line: 384, baseType: !13, size: 32, offset: 64)
!15358 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !15353, file: !833, line: 386, baseType: !15359, size: 32, offset: 96)
!15359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15360, size: 32)
!15360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !833, line: 351, size: 16, elements: !15361)
!15361 = !{!15362, !15363}
!15362 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !15360, file: !833, line: 359, baseType: !164, size: 8)
!15363 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !15360, file: !833, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!15364 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15353, file: !833, line: 388, baseType: !102, size: 32, offset: 128)
!15365 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !15353, file: !833, line: 396, baseType: !846, size: 32, offset: 160)
!15366 = !DILocation(line: 0, scope: !15347)
!15367 = !DILocation(line: 31, column: 1, scope: !15347)
!15368 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !15348, file: !15348, line: 33, type: !15369, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15371)
!15369 = !DISubroutineType(types: !15370)
!15370 = !{!15351, !336}
!15371 = !{!15372, !15373}
!15372 = !DILocalVariable(name: "name", arg: 1, scope: !15368, file: !15348, line: 33, type: !336)
!15373 = !DILocalVariable(name: "dev", scope: !15368, file: !15348, line: 35, type: !15351)
!15374 = !DILocation(line: 0, scope: !15368)
!15375 = !DILocation(line: 40, column: 12, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15368, file: !15348, line: 40, column: 6)
!15377 = !DILocation(line: 40, column: 21, scope: !15376)
!15378 = !DILocation(line: 40, column: 25, scope: !15376)
!15379 = !DILocation(line: 40, column: 33, scope: !15376)
!15380 = !DILocation(line: 40, column: 6, scope: !15368)
!15381 = !DILocation(line: 55, column: 2, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15368, file: !15348, line: 55, column: 2)
!15383 = !DILocation(line: 50, column: 7, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15385, file: !15348, line: 50, column: 7)
!15385 = distinct !DILexicalBlock(scope: !15386, file: !15348, line: 49, column: 57)
!15386 = distinct !DILexicalBlock(scope: !15387, file: !15348, line: 49, column: 2)
!15387 = distinct !DILexicalBlock(scope: !15368, file: !15348, line: 49, column: 2)
!15388 = !DILocation(line: 50, column: 30, scope: !15384)
!15389 = !DILocation(line: 50, column: 39, scope: !15384)
!15390 = !DILocation(line: 50, column: 44, scope: !15384)
!15391 = !DILocation(line: 50, column: 7, scope: !15385)
!15392 = !DILocation(line: 49, column: 53, scope: !15386)
!15393 = !DILocation(line: 49, column: 33, scope: !15386)
!15394 = !DILocation(line: 49, column: 2, scope: !15387)
!15395 = distinct !{!15395, !15394, !15396}
!15396 = !DILocation(line: 53, column: 2, scope: !15387)
!15397 = !DILocation(line: 56, column: 7, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15399, file: !15348, line: 56, column: 7)
!15399 = distinct !DILexicalBlock(scope: !15400, file: !15348, line: 55, column: 57)
!15400 = distinct !DILexicalBlock(scope: !15382, file: !15348, line: 55, column: 2)
!15401 = !DILocation(line: 56, column: 30, scope: !15398)
!15402 = !DILocation(line: 56, column: 52, scope: !15398)
!15403 = !DILocation(line: 56, column: 34, scope: !15398)
!15404 = !DILocation(line: 56, column: 58, scope: !15398)
!15405 = !DILocation(line: 56, column: 7, scope: !15399)
!15406 = !DILocation(line: 55, column: 53, scope: !15400)
!15407 = !DILocation(line: 55, column: 33, scope: !15400)
!15408 = distinct !{!15408, !15381, !15409}
!15409 = !DILocation(line: 59, column: 2, scope: !15382)
!15410 = !DILocation(line: 62, column: 1, scope: !15368)
!15411 = distinct !DISubprogram(name: "z_device_is_ready", scope: !15348, file: !15348, line: 93, type: !15412, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15414)
!15412 = !DISubroutineType(types: !15413)
!15413 = !{!119, !15351}
!15414 = !{!15415}
!15415 = !DILocalVariable(name: "dev", arg: 1, scope: !15411, file: !15348, line: 93, type: !15351)
!15416 = !DILocation(line: 0, scope: !15411)
!15417 = !DILocation(line: 99, column: 10, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15411, file: !15348, line: 99, column: 6)
!15419 = !DILocation(line: 99, column: 6, scope: !15411)
!15420 = !DILocation(line: 103, column: 14, scope: !15411)
!15421 = !DILocation(line: 103, column: 21, scope: !15411)
!15422 = !DILocation(line: 103, column: 33, scope: !15411)
!15423 = !DILocation(line: 103, column: 49, scope: !15411)
!15424 = !DILocation(line: 103, column: 58, scope: !15411)
!15425 = !DILocation(line: 104, column: 1, scope: !15411)
!15426 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !15348, file: !15348, line: 87, type: !15427, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15430)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{!153, !15429}
!15429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15351, size: 32)
!15430 = !{!15431}
!15431 = !DILocalVariable(name: "devices", arg: 1, scope: !15426, file: !15348, line: 87, type: !15429)
!15432 = !DILocation(line: 0, scope: !15426)
!15433 = !DILocation(line: 89, column: 11, scope: !15426)
!15434 = !DILocation(line: 90, column: 2, scope: !15426)
!15435 = distinct !DISubprogram(name: "device_required_foreach", scope: !15348, file: !15348, line: 125, type: !15436, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15442)
!15436 = !DISubroutineType(types: !15437)
!15437 = !{!103, !15351, !15438, !102}
!15438 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !833, line: 471, baseType: !15439)
!15439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15440, size: 32)
!15440 = !DISubroutineType(types: !15441)
!15441 = !{!103, !15351, !102}
!15442 = !{!15443, !15444, !15445, !15446, !15447}
!15443 = !DILocalVariable(name: "dev", arg: 1, scope: !15435, file: !15348, line: 125, type: !15351)
!15444 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !15435, file: !15348, line: 126, type: !15438)
!15445 = !DILocalVariable(name: "context", arg: 3, scope: !15435, file: !15348, line: 127, type: !102)
!15446 = !DILocalVariable(name: "handle_count", scope: !15435, file: !15348, line: 129, type: !153)
!15447 = !DILocalVariable(name: "handles", scope: !15435, file: !15348, line: 130, type: !846)
!15448 = !DILocation(line: 0, scope: !15435)
!15449 = !DILocation(line: 129, column: 2, scope: !15435)
!15450 = !DILocation(line: 129, column: 9, scope: !15435)
!15451 = !DILocation(line: 130, column: 35, scope: !15435)
!15452 = !DILocation(line: 132, column: 33, scope: !15435)
!15453 = !DILocation(line: 132, column: 9, scope: !15435)
!15454 = !DILocation(line: 133, column: 1, scope: !15435)
!15455 = !DILocation(line: 132, column: 2, scope: !15435)
!15456 = distinct !DISubprogram(name: "device_required_handles_get", scope: !833, file: !833, line: 493, type: !15457, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15459)
!15457 = !DISubroutineType(types: !15458)
!15458 = !{!846, !15351, !3538}
!15459 = !{!15460, !15461, !15462, !15463}
!15460 = !DILocalVariable(name: "dev", arg: 1, scope: !15456, file: !833, line: 493, type: !15351)
!15461 = !DILocalVariable(name: "count", arg: 2, scope: !15456, file: !833, line: 493, type: !3538)
!15462 = !DILocalVariable(name: "rv", scope: !15456, file: !833, line: 495, type: !846)
!15463 = !DILocalVariable(name: "i", scope: !15464, file: !833, line: 498, type: !153)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !833, line: 497, column: 18)
!15465 = distinct !DILexicalBlock(scope: !15456, file: !833, line: 497, column: 6)
!15466 = !DILocation(line: 0, scope: !15456)
!15467 = !DILocation(line: 495, column: 35, scope: !15456)
!15468 = !DILocation(line: 497, column: 9, scope: !15465)
!15469 = !DILocation(line: 497, column: 6, scope: !15456)
!15470 = !DILocation(line: 0, scope: !15464)
!15471 = !DILocation(line: 500, column: 11, scope: !15464)
!15472 = !DILocation(line: 500, column: 40, scope: !15464)
!15473 = !DILocation(line: 502, column: 4, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15464, file: !833, line: 501, column: 40)
!15475 = distinct !{!15475, !15476, !15477}
!15476 = !DILocation(line: 500, column: 3, scope: !15464)
!15477 = !DILocation(line: 503, column: 3, scope: !15464)
!15478 = !DILocation(line: 504, column: 10, scope: !15464)
!15479 = !DILocation(line: 505, column: 2, scope: !15464)
!15480 = !DILocation(line: 507, column: 2, scope: !15456)
!15481 = distinct !DISubprogram(name: "device_visitor", scope: !15348, file: !15348, line: 106, type: !15482, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15484)
!15482 = !DISubroutineType(types: !15483)
!15483 = !{!103, !846, !153, !15438, !102}
!15484 = !{!15485, !15486, !15487, !15488, !15489, !15491, !15494, !15495}
!15485 = !DILocalVariable(name: "handles", arg: 1, scope: !15481, file: !15348, line: 106, type: !846)
!15486 = !DILocalVariable(name: "handle_count", arg: 2, scope: !15481, file: !15348, line: 107, type: !153)
!15487 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !15481, file: !15348, line: 108, type: !15438)
!15488 = !DILocalVariable(name: "context", arg: 4, scope: !15481, file: !15348, line: 109, type: !102)
!15489 = !DILocalVariable(name: "i", scope: !15490, file: !15348, line: 112, type: !153)
!15490 = distinct !DILexicalBlock(scope: !15481, file: !15348, line: 112, column: 2)
!15491 = !DILocalVariable(name: "dh", scope: !15492, file: !15348, line: 113, type: !848)
!15492 = distinct !DILexicalBlock(scope: !15493, file: !15348, line: 112, column: 44)
!15493 = distinct !DILexicalBlock(scope: !15490, file: !15348, line: 112, column: 2)
!15494 = !DILocalVariable(name: "rdev", scope: !15492, file: !15348, line: 114, type: !15351)
!15495 = !DILocalVariable(name: "rc", scope: !15492, file: !15348, line: 115, type: !103)
!15496 = !DILocation(line: 0, scope: !15481)
!15497 = !DILocation(line: 0, scope: !15490)
!15498 = !DILocation(line: 112, column: 23, scope: !15493)
!15499 = !DILocation(line: 112, column: 2, scope: !15490)
!15500 = distinct !{!15500, !15499, !15501}
!15501 = !DILocation(line: 120, column: 2, scope: !15490)
!15502 = !DILocation(line: 113, column: 24, scope: !15492)
!15503 = !DILocation(line: 0, scope: !15492)
!15504 = !DILocation(line: 114, column: 31, scope: !15492)
!15505 = !DILocation(line: 115, column: 12, scope: !15492)
!15506 = !DILocation(line: 117, column: 10, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15492, file: !15348, line: 117, column: 7)
!15508 = !DILocation(line: 112, column: 39, scope: !15493)
!15509 = !DILocation(line: 123, column: 1, scope: !15481)
!15510 = distinct !DISubprogram(name: "device_from_handle", scope: !833, file: !833, line: 439, type: !15511, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15513)
!15511 = !DISubroutineType(types: !15512)
!15512 = !{!15351, !848}
!15513 = !{!15514, !15515, !15516}
!15514 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !15510, file: !833, line: 439, type: !848)
!15515 = !DILocalVariable(name: "dev", scope: !15510, file: !833, line: 443, type: !15351)
!15516 = !DILocalVariable(name: "numdev", scope: !15510, file: !833, line: 444, type: !153)
!15517 = !DILocation(line: 0, scope: !15510)
!15518 = !DILocation(line: 446, column: 7, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15510, file: !833, line: 446, column: 6)
!15520 = !DILocation(line: 446, column: 18, scope: !15519)
!15521 = !DILocation(line: 446, column: 23, scope: !15519)
!15522 = !DILocation(line: 450, column: 2, scope: !15510)
!15523 = distinct !DISubprogram(name: "device_supported_foreach", scope: !15348, file: !15348, line: 135, type: !15436, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15524)
!15524 = !{!15525, !15526, !15527, !15528, !15529}
!15525 = !DILocalVariable(name: "dev", arg: 1, scope: !15523, file: !15348, line: 135, type: !15351)
!15526 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !15523, file: !15348, line: 136, type: !15438)
!15527 = !DILocalVariable(name: "context", arg: 3, scope: !15523, file: !15348, line: 137, type: !102)
!15528 = !DILocalVariable(name: "handle_count", scope: !15523, file: !15348, line: 139, type: !153)
!15529 = !DILocalVariable(name: "handles", scope: !15523, file: !15348, line: 140, type: !846)
!15530 = !DILocation(line: 0, scope: !15523)
!15531 = !DILocation(line: 139, column: 2, scope: !15523)
!15532 = !DILocation(line: 139, column: 9, scope: !15523)
!15533 = !DILocation(line: 140, column: 35, scope: !15523)
!15534 = !DILocation(line: 142, column: 33, scope: !15523)
!15535 = !DILocation(line: 142, column: 9, scope: !15523)
!15536 = !DILocation(line: 143, column: 1, scope: !15523)
!15537 = !DILocation(line: 142, column: 2, scope: !15523)
!15538 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !833, file: !833, line: 573, type: !15457, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4028, retainedNodes: !15539)
!15539 = !{!15540, !15541, !15542, !15543, !15544}
!15540 = !DILocalVariable(name: "dev", arg: 1, scope: !15538, file: !833, line: 573, type: !15351)
!15541 = !DILocalVariable(name: "count", arg: 2, scope: !15538, file: !833, line: 573, type: !3538)
!15542 = !DILocalVariable(name: "rv", scope: !15538, file: !833, line: 575, type: !846)
!15543 = !DILocalVariable(name: "region", scope: !15538, file: !833, line: 576, type: !153)
!15544 = !DILocalVariable(name: "i", scope: !15538, file: !833, line: 577, type: !153)
!15545 = !DILocation(line: 0, scope: !15538)
!15546 = !DILocation(line: 575, column: 35, scope: !15538)
!15547 = !DILocation(line: 579, column: 9, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15538, file: !833, line: 579, column: 6)
!15549 = !DILocation(line: 579, column: 6, scope: !15538)
!15550 = !DILocation(line: 582, column: 8, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15552, file: !833, line: 582, column: 8)
!15552 = distinct !DILexicalBlock(scope: !15553, file: !833, line: 581, column: 23)
!15553 = distinct !DILexicalBlock(scope: !15548, file: !833, line: 579, column: 18)
!15554 = !DILocation(line: 582, column: 12, scope: !15551)
!15555 = !DILocation(line: 585, column: 6, scope: !15552)
!15556 = !DILocation(line: 0, scope: !15553)
!15557 = !DILocation(line: 581, column: 17, scope: !15553)
!15558 = !DILocation(line: 581, column: 3, scope: !15553)
!15559 = !DILocation(line: 588, column: 10, scope: !15553)
!15560 = !DILocation(line: 588, column: 16, scope: !15553)
!15561 = !DILocation(line: 589, column: 4, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15553, file: !833, line: 588, column: 39)
!15563 = !DILocation(line: 588, column: 3, scope: !15553)
!15564 = distinct !{!15564, !15563, !15565}
!15565 = !DILocation(line: 590, column: 3, scope: !15553)
!15566 = !DILocation(line: 591, column: 10, scope: !15553)
!15567 = !DILocation(line: 592, column: 2, scope: !15553)
!15568 = !DILocation(line: 575, column: 25, scope: !15538)
!15569 = !DILocation(line: 594, column: 2, scope: !15538)
!15570 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2745, file: !2745, line: 49, type: !15571, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2742, retainedNodes: !2953)
!15571 = !DISubroutineType(types: !15572)
!15572 = !{!778}
!15573 = !DILocation(line: 51, column: 10, scope: !15570)
!15574 = !DILocation(line: 51, column: 20, scope: !15570)
!15575 = !DILocation(line: 51, column: 2, scope: !15570)
!15576 = distinct !DISubprogram(name: "coredump", scope: !4035, file: !4035, line: 209, type: !15577, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15725)
!15577 = !DISubroutineType(types: !15578)
!15578 = !{null, !32, !15579, !15623}
!15579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15580, size: 32)
!15580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15581)
!15581 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3668, line: 141, baseType: !15582)
!15582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3668, line: 97, size: 256, elements: !15583)
!15583 = !{!15584}
!15584 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !15582, file: !3668, line: 107, baseType: !15585, size: 256)
!15585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3668, line: 98, size: 256, elements: !15586)
!15586 = !{!15587, !15592, !15597, !15602, !15607, !15612, !15617, !15622}
!15587 = !DIDerivedType(tag: DW_TAG_member, scope: !15585, file: !3668, line: 99, baseType: !15588, size: 32)
!15588 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15585, file: !3668, line: 99, size: 32, elements: !15589)
!15589 = !{!15590, !15591}
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !15588, file: !3668, line: 99, baseType: !108, size: 32)
!15591 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !15588, file: !3668, line: 99, baseType: !108, size: 32)
!15592 = !DIDerivedType(tag: DW_TAG_member, scope: !15585, file: !3668, line: 100, baseType: !15593, size: 32, offset: 32)
!15593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15585, file: !3668, line: 100, size: 32, elements: !15594)
!15594 = !{!15595, !15596}
!15595 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !15593, file: !3668, line: 100, baseType: !108, size: 32)
!15596 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !15593, file: !3668, line: 100, baseType: !108, size: 32)
!15597 = !DIDerivedType(tag: DW_TAG_member, scope: !15585, file: !3668, line: 101, baseType: !15598, size: 32, offset: 64)
!15598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15585, file: !3668, line: 101, size: 32, elements: !15599)
!15599 = !{!15600, !15601}
!15600 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !15598, file: !3668, line: 101, baseType: !108, size: 32)
!15601 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !15598, file: !3668, line: 101, baseType: !108, size: 32)
!15602 = !DIDerivedType(tag: DW_TAG_member, scope: !15585, file: !3668, line: 102, baseType: !15603, size: 32, offset: 96)
!15603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15585, file: !3668, line: 102, size: 32, elements: !15604)
!15604 = !{!15605, !15606}
!15605 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !15603, file: !3668, line: 102, baseType: !108, size: 32)
!15606 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !15603, file: !3668, line: 102, baseType: !108, size: 32)
!15607 = !DIDerivedType(tag: DW_TAG_member, scope: !15585, file: !3668, line: 103, baseType: !15608, size: 32, offset: 128)
!15608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15585, file: !3668, line: 103, size: 32, elements: !15609)
!15609 = !{!15610, !15611}
!15610 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !15608, file: !3668, line: 103, baseType: !108, size: 32)
!15611 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !15608, file: !3668, line: 103, baseType: !108, size: 32)
!15612 = !DIDerivedType(tag: DW_TAG_member, scope: !15585, file: !3668, line: 104, baseType: !15613, size: 32, offset: 160)
!15613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15585, file: !3668, line: 104, size: 32, elements: !15614)
!15614 = !{!15615, !15616}
!15615 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !15613, file: !3668, line: 104, baseType: !108, size: 32)
!15616 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !15613, file: !3668, line: 104, baseType: !108, size: 32)
!15617 = !DIDerivedType(tag: DW_TAG_member, scope: !15585, file: !3668, line: 105, baseType: !15618, size: 32, offset: 192)
!15618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15585, file: !3668, line: 105, size: 32, elements: !15619)
!15619 = !{!15620, !15621}
!15620 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !15618, file: !3668, line: 105, baseType: !108, size: 32)
!15621 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !15618, file: !3668, line: 105, baseType: !108, size: 32)
!15622 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !15585, file: !3668, line: 106, baseType: !108, size: 32, offset: 224)
!15623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15624, size: 32)
!15624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !15625)
!15625 = !{!15626, !15684, !15696, !15697, !15698, !15699, !15705, !15720}
!15626 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15624, file: !195, line: 247, baseType: !15627, size: 384)
!15627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !15628)
!15628 = !{!15629, !15653, !15660, !15661, !15662, !15671, !15672, !15673}
!15629 = !DIDerivedType(tag: DW_TAG_member, scope: !15627, file: !195, line: 60, baseType: !15630, size: 64)
!15630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15627, file: !195, line: 60, size: 64, elements: !15631)
!15631 = !{!15632, !15647}
!15632 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15630, file: !195, line: 61, baseType: !15633, size: 64)
!15633 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !15634)
!15634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !15635)
!15635 = !{!15636, !15642}
!15636 = !DIDerivedType(tag: DW_TAG_member, scope: !15634, file: !133, line: 38, baseType: !15637, size: 32)
!15637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15634, file: !133, line: 38, size: 32, elements: !15638)
!15638 = !{!15639, !15641}
!15639 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !15637, file: !133, line: 39, baseType: !15640, size: 32)
!15640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15634, size: 32)
!15641 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15637, file: !133, line: 40, baseType: !15640, size: 32)
!15642 = !DIDerivedType(tag: DW_TAG_member, scope: !15634, file: !133, line: 42, baseType: !15643, size: 32, offset: 32)
!15643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15634, file: !133, line: 42, size: 32, elements: !15644)
!15644 = !{!15645, !15646}
!15645 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !15643, file: !133, line: 43, baseType: !15640, size: 32)
!15646 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15643, file: !133, line: 44, baseType: !15640, size: 32)
!15647 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15630, file: !195, line: 62, baseType: !15648, size: 64)
!15648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !15649)
!15649 = !{!15650}
!15650 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15648, file: !207, line: 50, baseType: !15651, size: 64)
!15651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15652, size: 64, elements: !212)
!15652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15648, size: 32)
!15653 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15627, file: !195, line: 68, baseType: !15654, size: 32, offset: 64)
!15654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15655, size: 32)
!15655 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !15656)
!15656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !15657)
!15657 = !{!15658}
!15658 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15656, file: !128, line: 232, baseType: !15659, size: 64)
!15659 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !15634)
!15660 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15627, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!15661 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15627, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!15662 = !DIDerivedType(tag: DW_TAG_member, scope: !15627, file: !195, line: 90, baseType: !15663, size: 16, offset: 112)
!15663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15627, file: !195, line: 90, size: 16, elements: !15664)
!15664 = !{!15665, !15670}
!15665 = !DIDerivedType(tag: DW_TAG_member, scope: !15663, file: !195, line: 91, baseType: !15666, size: 16)
!15666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15663, file: !195, line: 91, size: 16, elements: !15667)
!15667 = !{!15668, !15669}
!15668 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15666, file: !195, line: 96, baseType: !225, size: 8)
!15669 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15666, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!15670 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15663, file: !195, line: 100, baseType: !177, size: 16)
!15671 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15627, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!15672 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15627, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!15673 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15627, file: !195, line: 131, baseType: !15674, size: 192, offset: 192)
!15674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !15675)
!15675 = !{!15676, !15677, !15683}
!15676 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15674, file: !128, line: 245, baseType: !15633, size: 64)
!15677 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15674, file: !128, line: 246, baseType: !15678, size: 32, offset: 64)
!15678 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !15679)
!15679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15680, size: 32)
!15680 = !DISubroutineType(types: !15681)
!15681 = !{null, !15682}
!15682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15674, size: 32)
!15683 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15674, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!15684 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15624, file: !195, line: 250, baseType: !15685, size: 288, offset: 384)
!15685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !15686)
!15686 = !{!15687, !15688, !15689, !15690, !15691, !15692, !15693, !15694, !15695}
!15687 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15685, file: !244, line: 26, baseType: !108, size: 32)
!15688 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15685, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!15689 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15685, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!15690 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15685, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!15691 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15685, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!15692 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15685, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!15693 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15685, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!15694 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15685, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15685, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!15696 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15624, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!15697 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15624, file: !195, line: 256, baseType: !15655, size: 64, offset: 704)
!15698 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15624, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15624, file: !195, line: 300, baseType: !15700, size: 96, offset: 800)
!15700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !15701)
!15701 = !{!15702, !15703, !15704}
!15702 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15700, file: !195, line: 153, baseType: !22, size: 32)
!15703 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15700, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!15704 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15700, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!15705 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15624, file: !195, line: 325, baseType: !15706, size: 32, offset: 896)
!15706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15707, size: 32)
!15707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !15708)
!15708 = !{!15709, !15715, !15716}
!15709 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15707, file: !124, line: 5074, baseType: !15710, size: 96)
!15710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !15711)
!15711 = !{!15712, !15713, !15714}
!15712 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15710, file: !270, line: 57, baseType: !273, size: 32)
!15713 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15710, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!15714 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15710, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!15715 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15707, file: !124, line: 5075, baseType: !15655, size: 64, offset: 96)
!15716 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15707, file: !124, line: 5076, baseType: !15717, size: 32, offset: 160)
!15717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !15718)
!15718 = !{!15719}
!15719 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !15717, file: !149, line: 52, baseType: !22, size: 32)
!15720 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15624, file: !195, line: 343, baseType: !15721, size: 64, offset: 928)
!15721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !15722)
!15722 = !{!15723, !15724}
!15723 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15721, file: !244, line: 63, baseType: !108, size: 32)
!15724 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15721, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!15725 = !{!15726, !15727, !15728}
!15726 = !DILocalVariable(name: "reason", arg: 1, scope: !15576, file: !4035, line: 209, type: !32)
!15727 = !DILocalVariable(name: "esf", arg: 2, scope: !15576, file: !4035, line: 209, type: !15579)
!15728 = !DILocalVariable(name: "thread", arg: 3, scope: !15576, file: !4035, line: 210, type: !15623)
!15729 = !DILocation(line: 0, scope: !15576)
!15730 = !DILocation(line: 212, column: 1, scope: !15576)
!15731 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !4035, file: !4035, line: 214, type: !15732, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15734)
!15732 = !DISubroutineType(types: !15733)
!15733 = !{null, !22, !22}
!15734 = !{!15735, !15736}
!15735 = !DILocalVariable(name: "start_addr", arg: 1, scope: !15731, file: !4035, line: 214, type: !22)
!15736 = !DILocalVariable(name: "end_addr", arg: 2, scope: !15731, file: !4035, line: 214, type: !22)
!15737 = !DILocation(line: 0, scope: !15731)
!15738 = !DILocation(line: 216, column: 1, scope: !15731)
!15739 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !4035, file: !4035, line: 218, type: !15740, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15742)
!15740 = !DISubroutineType(types: !15741)
!15741 = !{null, !783, !153}
!15742 = !{!15743, !15744}
!15743 = !DILocalVariable(name: "buf", arg: 1, scope: !15739, file: !4035, line: 218, type: !783)
!15744 = !DILocalVariable(name: "buflen", arg: 2, scope: !15739, file: !4035, line: 218, type: !153)
!15745 = !DILocation(line: 0, scope: !15739)
!15746 = !DILocation(line: 220, column: 1, scope: !15739)
!15747 = distinct !DISubprogram(name: "coredump_query", scope: !4035, file: !4035, line: 222, type: !15748, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15750)
!15748 = !DISubroutineType(types: !15749)
!15749 = !{!103, !4034, !102}
!15750 = !{!15751, !15752}
!15751 = !DILocalVariable(name: "query_id", arg: 1, scope: !15747, file: !4035, line: 222, type: !4034)
!15752 = !DILocalVariable(name: "arg", arg: 2, scope: !15747, file: !4035, line: 222, type: !102)
!15753 = !DILocation(line: 0, scope: !15747)
!15754 = !DILocation(line: 224, column: 2, scope: !15747)
!15755 = distinct !DISubprogram(name: "coredump_cmd", scope: !4035, file: !4035, line: 227, type: !15756, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15758)
!15756 = !DISubroutineType(types: !15757)
!15757 = !{!103, !4041, !102}
!15758 = !{!15759, !15760}
!15759 = !DILocalVariable(name: "query_id", arg: 1, scope: !15755, file: !4035, line: 227, type: !4041)
!15760 = !DILocalVariable(name: "arg", arg: 2, scope: !15755, file: !4035, line: 227, type: !102)
!15761 = !DILocation(line: 0, scope: !15755)
!15762 = !DILocation(line: 229, column: 2, scope: !15755)
!15763 = distinct !DISubprogram(name: "arch_system_halt", scope: !15764, file: !15764, line: 23, type: !7996, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15765)
!15764 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15765 = !{!15766}
!15766 = !DILocalVariable(name: "reason", arg: 1, scope: !15763, file: !15764, line: 23, type: !32)
!15767 = !DILocation(line: 0, scope: !15763)
!15768 = !DILocation(line: 55, column: 2, scope: !15769, inlinedAt: !15773)
!15769 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15770)
!15770 = !{!15771, !15772}
!15771 = !DILocalVariable(name: "key", scope: !15769, file: !7985, line: 44, type: !32)
!15772 = !DILocalVariable(name: "tmp", scope: !15769, file: !7985, line: 53, type: !32)
!15773 = distinct !DILocation(line: 31, column: 8, scope: !15763)
!15774 = !{i64 2283659}
!15775 = !DILocation(line: 0, scope: !15769, inlinedAt: !15773)
!15776 = !DILocation(line: 32, column: 2, scope: !15763)
!15777 = !DILocation(line: 32, column: 2, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15779, file: !15764, line: 32, column: 2)
!15779 = distinct !DILexicalBlock(scope: !15763, file: !15764, line: 32, column: 2)
!15780 = distinct !{!15780, !15781, !15782}
!15781 = !DILocation(line: 32, column: 2, scope: !15779)
!15782 = !DILocation(line: 34, column: 2, scope: !15779)
!15783 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !15764, file: !15764, line: 39, type: !15784, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15786)
!15784 = !DISubroutineType(types: !15785)
!15785 = !{null, !32, !15579}
!15786 = !{!15787, !15788}
!15787 = !DILocalVariable(name: "reason", arg: 1, scope: !15783, file: !15764, line: 39, type: !32)
!15788 = !DILocalVariable(name: "esf", arg: 2, scope: !15783, file: !15764, line: 40, type: !15579)
!15789 = !DILocation(line: 0, scope: !15783)
!15790 = !DILocation(line: 45, column: 2, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15792, file: !15764, line: 45, column: 2)
!15792 = distinct !DILexicalBlock(scope: !15793, file: !15764, line: 45, column: 2)
!15793 = distinct !DILexicalBlock(scope: !15794, file: !15764, line: 45, column: 2)
!15794 = distinct !DILexicalBlock(scope: !15783, file: !15764, line: 45, column: 2)
!15795 = !DILocation(line: 46, column: 2, scope: !15783)
!15796 = distinct !DISubprogram(name: "k_fatal_halt", scope: !15764, file: !15764, line: 81, type: !7996, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15797)
!15797 = !{!15798}
!15798 = !DILocalVariable(name: "reason", arg: 1, scope: !15796, file: !15764, line: 81, type: !32)
!15799 = !DILocation(line: 0, scope: !15796)
!15800 = !DILocation(line: 83, column: 2, scope: !15796)
!15801 = distinct !DISubprogram(name: "z_fatal_error", scope: !15764, file: !15764, line: 96, type: !15784, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15802)
!15802 = !{!15803, !15804, !15805, !15806}
!15803 = !DILocalVariable(name: "reason", arg: 1, scope: !15801, file: !15764, line: 96, type: !32)
!15804 = !DILocalVariable(name: "esf", arg: 2, scope: !15801, file: !15764, line: 96, type: !15579)
!15805 = !DILocalVariable(name: "key", scope: !15801, file: !15764, line: 102, type: !32)
!15806 = !DILocalVariable(name: "thread", scope: !15801, file: !15764, line: 103, type: !15623)
!15807 = !DILocation(line: 0, scope: !15801)
!15808 = !DILocation(line: 55, column: 2, scope: !15769, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 102, column: 21, scope: !15801)
!15810 = !DILocation(line: 0, scope: !15769, inlinedAt: !15809)
!15811 = !DILocation(line: 104, column: 4, scope: !15801)
!15812 = !DILocation(line: 109, column: 2, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15814, file: !15764, line: 109, column: 2)
!15814 = distinct !DILexicalBlock(scope: !15815, file: !15764, line: 109, column: 2)
!15815 = distinct !DILexicalBlock(scope: !15816, file: !15764, line: 109, column: 2)
!15816 = distinct !DILexicalBlock(scope: !15801, file: !15764, line: 109, column: 2)
!15817 = !DILocation(line: 119, column: 11, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15801, file: !15764, line: 119, column: 6)
!15819 = !DILocation(line: 119, column: 20, scope: !15818)
!15820 = !DILocalVariable(name: "esf", arg: 1, scope: !15821, file: !9356, line: 71, type: !15579)
!15821 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9356, file: !9356, line: 71, type: !15822, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15824)
!15822 = !DISubroutineType(types: !15823)
!15823 = !{!119, !15579}
!15824 = !{!15820}
!15825 = !DILocation(line: 0, scope: !15821, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 119, column: 23, scope: !15818)
!15827 = !DILocation(line: 73, column: 21, scope: !15821, inlinedAt: !15826)
!15828 = !DILocation(line: 73, column: 26, scope: !15821, inlinedAt: !15826)
!15829 = !DILocation(line: 73, column: 9, scope: !15821, inlinedAt: !15826)
!15830 = !DILocation(line: 119, column: 6, scope: !15801)
!15831 = !DILocation(line: 120, column: 3, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15833, file: !15764, line: 120, column: 3)
!15833 = distinct !DILexicalBlock(scope: !15834, file: !15764, line: 120, column: 3)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !15764, line: 120, column: 3)
!15835 = distinct !DILexicalBlock(scope: !15836, file: !15764, line: 120, column: 3)
!15836 = distinct !DILexicalBlock(scope: !15818, file: !15764, line: 119, column: 57)
!15837 = !DILocation(line: 121, column: 2, scope: !15836)
!15838 = !DILocation(line: 124, column: 2, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15840, file: !15764, line: 124, column: 2)
!15840 = distinct !DILexicalBlock(scope: !15841, file: !15764, line: 124, column: 2)
!15841 = distinct !DILexicalBlock(scope: !15842, file: !15764, line: 124, column: 2)
!15842 = distinct !DILexicalBlock(scope: !15801, file: !15764, line: 124, column: 2)
!15843 = !DILocation(line: 131, column: 2, scope: !15801)
!15844 = !DILocation(line: 147, column: 3, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15846, file: !15764, line: 147, column: 3)
!15846 = distinct !DILexicalBlock(scope: !15847, file: !15764, line: 147, column: 3)
!15847 = distinct !DILexicalBlock(scope: !15848, file: !15764, line: 146, column: 32)
!15848 = distinct !DILexicalBlock(scope: !15801, file: !15764, line: 146, column: 6)
!15849 = !DILocation(line: 147, column: 3, scope: !15846)
!15850 = !DILocation(line: 147, column: 3, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15845, file: !15764, line: 147, column: 3)
!15852 = !DILocalVariable(name: "key", arg: 1, scope: !15853, file: !7985, line: 84, type: !32)
!15853 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15854)
!15854 = !{!15852}
!15855 = !DILocation(line: 0, scope: !15853, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 186, column: 2, scope: !15801)
!15857 = !DILocation(line: 95, column: 2, scope: !15853, inlinedAt: !15856)
!15858 = !{i64 2284476}
!15859 = !DILocation(line: 189, column: 3, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15861, file: !15764, line: 188, column: 41)
!15861 = distinct !DILexicalBlock(scope: !15801, file: !15764, line: 188, column: 6)
!15862 = !DILocation(line: 191, column: 1, scope: !15801)
!15863 = distinct !DISubprogram(name: "k_current_get", scope: !124, file: !124, line: 530, type: !15864, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !2953)
!15864 = !DISubroutineType(types: !15865)
!15865 = !{!15866}
!15866 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !15623)
!15867 = !DILocation(line: 535, column: 9, scope: !15863)
!15868 = !DILocation(line: 535, column: 2, scope: !15863)
!15869 = distinct !DISubprogram(name: "reason_to_str", scope: !15764, file: !15764, line: 62, type: !15870, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15872)
!15870 = !DISubroutineType(types: !15871)
!15871 = !{!336, !32}
!15872 = !{!15873}
!15873 = !DILocalVariable(name: "reason", arg: 1, scope: !15869, file: !15764, line: 62, type: !32)
!15874 = !DILocation(line: 0, scope: !15869)
!15875 = !DILocation(line: 64, column: 2, scope: !15869)
!15876 = !DILocation(line: 0, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15869, file: !15764, line: 64, column: 18)
!15878 = !DILocation(line: 78, column: 1, scope: !15869)
!15879 = distinct !DISubprogram(name: "thread_name_get", scope: !15764, file: !15764, line: 51, type: !15880, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15882)
!15880 = !DISubroutineType(types: !15881)
!15881 = !{!336, !15623}
!15882 = !{!15883, !15884}
!15883 = !DILocalVariable(name: "thread", arg: 1, scope: !15879, file: !15764, line: 51, type: !15623)
!15884 = !DILocalVariable(name: "thread_name", scope: !15879, file: !15764, line: 53, type: !336)
!15885 = !DILocation(line: 0, scope: !15879)
!15886 = !DILocation(line: 53, column: 36, scope: !15879)
!15887 = !DILocation(line: 53, column: 28, scope: !15879)
!15888 = !DILocation(line: 53, column: 47, scope: !15879)
!15889 = !DILocation(line: 55, column: 19, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15879, file: !15764, line: 55, column: 6)
!15891 = !DILocation(line: 55, column: 28, scope: !15890)
!15892 = !DILocation(line: 55, column: 32, scope: !15890)
!15893 = !DILocation(line: 55, column: 47, scope: !15890)
!15894 = !DILocation(line: 55, column: 6, scope: !15879)
!15895 = !DILocation(line: 57, column: 2, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15890, file: !15764, line: 55, column: 57)
!15897 = !DILocation(line: 59, column: 2, scope: !15879)
!15898 = distinct !DISubprogram(name: "k_thread_abort", scope: !4485, file: !4485, line: 188, type: !15899, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !15901)
!15899 = !DISubroutineType(types: !15900)
!15900 = !{null, !15866}
!15901 = !{!15902}
!15902 = !DILocalVariable(name: "thread", arg: 1, scope: !15898, file: !4485, line: 188, type: !15866)
!15903 = !DILocation(line: 0, scope: !15898)
!15904 = !DILocation(line: 197, column: 2, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15898, file: !4485, line: 197, column: 2)
!15906 = !{i64 2155069820}
!15907 = !DILocation(line: 198, column: 2, scope: !15898)
!15908 = !DILocation(line: 199, column: 1, scope: !15898)
!15909 = distinct !DISubprogram(name: "z_current_get", scope: !4485, file: !4485, line: 173, type: !15864, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4031, retainedNodes: !2953)
!15910 = !DILocation(line: 180, column: 2, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15909, file: !4485, line: 180, column: 2)
!15912 = !{i64 2155069752}
!15913 = !DILocation(line: 181, column: 9, scope: !15909)
!15914 = !DILocation(line: 181, column: 2, scope: !15909)
!15915 = distinct !DISubprogram(name: "z_early_memset", scope: !2753, file: !2753, line: 108, type: !15916, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15918)
!15916 = !DISubroutineType(types: !15917)
!15917 = !{null, !102, !103, !153}
!15918 = !{!15919, !15920, !15921}
!15919 = !DILocalVariable(name: "dst", arg: 1, scope: !15915, file: !2753, line: 108, type: !102)
!15920 = !DILocalVariable(name: "c", arg: 2, scope: !15915, file: !2753, line: 108, type: !103)
!15921 = !DILocalVariable(name: "n", arg: 3, scope: !15915, file: !2753, line: 108, type: !153)
!15922 = !DILocation(line: 0, scope: !15915)
!15923 = !DILocation(line: 110, column: 9, scope: !15915)
!15924 = !DILocation(line: 111, column: 1, scope: !15915)
!15925 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2753, file: !2753, line: 121, type: !15926, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15928)
!15926 = !DISubroutineType(types: !15927)
!15927 = !{null, !102, !13, !153}
!15928 = !{!15929, !15930, !15931}
!15929 = !DILocalVariable(name: "dst", arg: 1, scope: !15925, file: !2753, line: 121, type: !102)
!15930 = !DILocalVariable(name: "src", arg: 2, scope: !15925, file: !2753, line: 121, type: !13)
!15931 = !DILocalVariable(name: "n", arg: 3, scope: !15925, file: !2753, line: 121, type: !153)
!15932 = !DILocation(line: 0, scope: !15925)
!15933 = !DILocation(line: 123, column: 9, scope: !15925)
!15934 = !DILocation(line: 124, column: 1, scope: !15925)
!15935 = distinct !DISubprogram(name: "z_bss_zero", scope: !2753, file: !2753, line: 132, type: !333, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !2953)
!15936 = !DILocation(line: 143, column: 2, scope: !15935)
!15937 = !DILocation(line: 168, column: 1, scope: !15935)
!15938 = distinct !DISubprogram(name: "z_init_cpu", scope: !2753, file: !2753, line: 372, type: !10933, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15939)
!15939 = !{!15940}
!15940 = !DILocalVariable(name: "id", arg: 1, scope: !15938, file: !2753, line: 372, type: !103)
!15941 = !DILocation(line: 0, scope: !15938)
!15942 = !DILocation(line: 374, column: 2, scope: !15938)
!15943 = !DILocation(line: 375, column: 34, scope: !15938)
!15944 = !DILocation(line: 375, column: 19, scope: !15938)
!15945 = !DILocation(line: 375, column: 31, scope: !15938)
!15946 = !DILocation(line: 376, column: 24, scope: !15938)
!15947 = !DILocation(line: 376, column: 19, scope: !15938)
!15948 = !DILocation(line: 376, column: 22, scope: !15938)
!15949 = !DILocation(line: 378, column: 26, scope: !15938)
!15950 = !DILocation(line: 378, column: 4, scope: !15938)
!15951 = !DILocation(line: 378, column: 50, scope: !15938)
!15952 = !DILocation(line: 377, column: 19, scope: !15938)
!15953 = !DILocation(line: 377, column: 29, scope: !15938)
!15954 = !DILocation(line: 384, column: 1, scope: !15938)
!15955 = distinct !DISubprogram(name: "init_idle_thread", scope: !2753, file: !2753, line: 343, type: !10933, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15956)
!15956 = !{!15957, !15958, !15959, !15962}
!15957 = !DILocalVariable(name: "i", arg: 1, scope: !15955, file: !2753, line: 343, type: !103)
!15958 = !DILocalVariable(name: "thread", scope: !15955, file: !2753, line: 345, type: !2845)
!15959 = !DILocalVariable(name: "stack", scope: !15955, file: !2753, line: 346, type: !15960)
!15960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15961, size: 32)
!15961 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !2962)
!15962 = !DILocalVariable(name: "tname", scope: !15955, file: !2753, line: 358, type: !157)
!15963 = !DILocation(line: 0, scope: !15955)
!15964 = !DILocation(line: 345, column: 29, scope: !15955)
!15965 = !DILocation(line: 346, column: 28, scope: !15955)
!15966 = !DILocation(line: 362, column: 37, scope: !15955)
!15967 = !DILocation(line: 362, column: 36, scope: !15955)
!15968 = !DILocation(line: 361, column: 2, scope: !15955)
!15969 = !DILocation(line: 365, column: 2, scope: !15955)
!15970 = !DILocation(line: 370, column: 1, scope: !15955)
!15971 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !315, file: !315, line: 331, type: !15972, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15974)
!15972 = !DISubroutineType(types: !15973)
!15973 = !{!157, !15960}
!15974 = !{!15975}
!15975 = !DILocalVariable(name: "sym", arg: 1, scope: !15971, file: !315, line: 331, type: !15960)
!15976 = !DILocation(line: 0, scope: !15971)
!15977 = !DILocation(line: 333, column: 21, scope: !15971)
!15978 = !DILocation(line: 333, column: 2, scope: !15971)
!15979 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15980, file: !15980, line: 155, type: !15981, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15983)
!15980 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15981 = !DISubroutineType(types: !15982)
!15982 = !{null, !2845}
!15983 = !{!15984}
!15984 = !DILocalVariable(name: "thread", arg: 1, scope: !15979, file: !15980, line: 155, type: !2845)
!15985 = !DILocation(line: 0, scope: !15979)
!15986 = !DILocation(line: 157, column: 15, scope: !15979)
!15987 = !DILocation(line: 157, column: 28, scope: !15979)
!15988 = !DILocation(line: 158, column: 1, scope: !15979)
!15989 = distinct !DISubprogram(name: "z_cstart", scope: !2753, file: !2753, line: 501, type: !333, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15990)
!15990 = !{!15991}
!15991 = !DILocalVariable(name: "dummy_thread", scope: !15989, file: !2753, line: 518, type: !2846)
!15992 = !DILocation(line: 507, column: 2, scope: !15989)
!15993 = !DILocation(line: 43, column: 14, scope: !15994, inlinedAt: !15998)
!15994 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15995, file: !15995, line: 40, type: !333, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !15996)
!15995 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15996 = !{!15997}
!15997 = !DILocalVariable(name: "msp", scope: !15994, file: !15995, line: 42, type: !108)
!15998 = distinct !DILocation(line: 44, column: 2, scope: !15999, inlinedAt: !16001)
!15999 = distinct !DISubprogram(name: "arch_kernel_init", scope: !16000, file: !16000, line: 42, type: !333, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !2953)
!16000 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16001 = distinct !DILocation(line: 510, column: 2, scope: !15989)
!16002 = !DILocation(line: 43, column: 3, scope: !15994, inlinedAt: !15998)
!16003 = !DILocation(line: 43, column: 60, scope: !15994, inlinedAt: !15998)
!16004 = !DILocation(line: 0, scope: !15994, inlinedAt: !15998)
!16005 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !16006, file: !8306, line: 1153, type: !108)
!16006 = distinct !DISubprogram(name: "__set_MSP", scope: !8306, file: !8306, line: 1153, type: !8403, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !16007)
!16007 = !{!16005}
!16008 = !DILocation(line: 0, scope: !16006, inlinedAt: !16009)
!16009 = distinct !DILocation(line: 46, column: 2, scope: !15994, inlinedAt: !15998)
!16010 = !DILocation(line: 1155, column: 3, scope: !16006, inlinedAt: !16009)
!16011 = !{i64 3749598}
!16012 = !DILocation(line: 62, column: 11, scope: !15994, inlinedAt: !15998)
!16013 = !DILocation(line: 102, column: 2, scope: !16014, inlinedAt: !16015)
!16014 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9356, file: !9356, line: 97, type: !333, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !2953)
!16015 = distinct !DILocation(line: 45, column: 2, scope: !15999, inlinedAt: !16001)
!16016 = !DILocation(line: 108, column: 2, scope: !16014, inlinedAt: !16015)
!16017 = !DILocation(line: 112, column: 2, scope: !16014, inlinedAt: !16015)
!16018 = !DILocation(line: 113, column: 2, scope: !16014, inlinedAt: !16015)
!16019 = !DILocation(line: 114, column: 2, scope: !16014, inlinedAt: !16015)
!16020 = !DILocation(line: 116, column: 2, scope: !16014, inlinedAt: !16015)
!16021 = !DILocation(line: 123, column: 13, scope: !16014, inlinedAt: !16015)
!16022 = !DILocation(line: 46, column: 2, scope: !15999, inlinedAt: !16001)
!16023 = !DILocation(line: 47, column: 2, scope: !15999, inlinedAt: !16001)
!16024 = !DILocation(line: 174, column: 12, scope: !16025, inlinedAt: !16026)
!16025 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9356, file: !9356, line: 169, type: !333, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !2953)
!16026 = distinct !DILocation(line: 48, column: 2, scope: !15999, inlinedAt: !16001)
!16027 = !DILocation(line: 179, column: 12, scope: !16025, inlinedAt: !16026)
!16028 = !DILocation(line: 50, column: 2, scope: !15999, inlinedAt: !16001)
!16029 = !DILocation(line: 57, column: 2, scope: !15999, inlinedAt: !16001)
!16030 = !DILocation(line: 518, column: 2, scope: !15989)
!16031 = !DILocation(line: 518, column: 18, scope: !15989)
!16032 = !DILocation(line: 520, column: 2, scope: !15989)
!16033 = !DILocation(line: 523, column: 2, scope: !15989)
!16034 = !DILocation(line: 526, column: 2, scope: !15989)
!16035 = !DILocation(line: 527, column: 2, scope: !15989)
!16036 = !DILocation(line: 543, column: 24, scope: !15989)
!16037 = !DILocation(line: 543, column: 2, scope: !15989)
!16038 = !DILocation(line: 0, scope: !2986)
!16039 = !DILocation(line: 246, column: 15, scope: !3004)
!16040 = !DILocation(line: 246, column: 36, scope: !3003)
!16041 = !DILocation(line: 246, column: 2, scope: !3004)
!16042 = !DILocation(line: 247, column: 37, scope: !3002)
!16043 = !DILocation(line: 0, scope: !3002)
!16044 = !DILocation(line: 248, column: 19, scope: !3002)
!16045 = !DILocation(line: 248, column: 12, scope: !3002)
!16046 = !DILocation(line: 250, column: 11, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !3002, file: !2753, line: 250, column: 7)
!16048 = !DILocation(line: 250, column: 7, scope: !3002)
!16049 = !DILocation(line: 254, column: 11, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16051, file: !2753, line: 254, column: 8)
!16051 = distinct !DILexicalBlock(scope: !16047, file: !2753, line: 250, column: 20)
!16052 = !DILocation(line: 254, column: 8, scope: !16051)
!16053 = !DILocation(line: 255, column: 9, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16050, file: !2753, line: 254, column: 17)
!16055 = !DILocation(line: 258, column: 9, scope: !16054)
!16056 = !DILocation(line: 261, column: 28, scope: !16054)
!16057 = !DILocation(line: 261, column: 10, scope: !16054)
!16058 = !DILocation(line: 261, column: 17, scope: !16054)
!16059 = !DILocation(line: 261, column: 26, scope: !16054)
!16060 = !DILocation(line: 262, column: 4, scope: !16054)
!16061 = !DILocation(line: 263, column: 9, scope: !16051)
!16062 = !DILocation(line: 263, column: 16, scope: !16051)
!16063 = !DILocation(line: 263, column: 28, scope: !16051)
!16064 = !DILocation(line: 264, column: 3, scope: !16051)
!16065 = !DILocation(line: 246, column: 60, scope: !3003)
!16066 = distinct !{!16066, !16041, !16067}
!16067 = !DILocation(line: 265, column: 2, scope: !3004)
!16068 = !DILocation(line: 266, column: 1, scope: !2986)
!16069 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1028, file: !1028, line: 1814, type: !8346, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !16070)
!16070 = !{!16071, !16072}
!16071 = !DILocalVariable(name: "IRQn", arg: 1, scope: !16069, file: !1028, line: 1814, type: !1651)
!16072 = !DILocalVariable(name: "priority", arg: 2, scope: !16069, file: !1028, line: 1814, type: !108)
!16073 = !DILocation(line: 0, scope: !16069)
!16074 = !DILocation(line: 1822, column: 48, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16076, file: !1028, line: 1821, column: 3)
!16076 = distinct !DILexicalBlock(scope: !16069, file: !1028, line: 1816, column: 7)
!16077 = !DILocation(line: 1822, column: 32, scope: !16075)
!16078 = !DILocation(line: 1822, column: 40, scope: !16075)
!16079 = !DILocation(line: 1822, column: 5, scope: !16075)
!16080 = !DILocation(line: 1822, column: 46, scope: !16075)
!16081 = !DILocation(line: 1824, column: 1, scope: !16069)
!16082 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !16000, file: !16000, line: 32, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!16083 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !16084, file: !16084, line: 215, type: !15981, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !16085)
!16084 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16085 = !{!16086}
!16086 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !16083, file: !16084, line: 215, type: !2845)
!16087 = !DILocation(line: 0, scope: !16083)
!16088 = !DILocation(line: 217, column: 21, scope: !16083)
!16089 = !DILocation(line: 217, column: 34, scope: !16083)
!16090 = !DILocation(line: 221, column: 21, scope: !16083)
!16091 = !DILocation(line: 221, column: 34, scope: !16083)
!16092 = !DILocation(line: 223, column: 27, scope: !16083)
!16093 = !DILocation(line: 223, column: 33, scope: !16083)
!16094 = !DILocation(line: 224, column: 27, scope: !16083)
!16095 = !DILocation(line: 224, column: 32, scope: !16083)
!16096 = !DILocation(line: 232, column: 16, scope: !16083)
!16097 = !DILocation(line: 232, column: 30, scope: !16083)
!16098 = !DILocation(line: 239, column: 24, scope: !16083)
!16099 = !DILocation(line: 240, column: 1, scope: !16083)
!16100 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2753, file: !2753, line: 399, type: !16101, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !16103)
!16101 = !DISubroutineType(types: !16102)
!16102 = !{!157}
!16103 = !{!16104}
!16104 = !DILocalVariable(name: "stack_ptr", scope: !16100, file: !2753, line: 401, type: !157)
!16105 = !DILocation(line: 404, column: 2, scope: !16100)
!16106 = !DILocation(line: 416, column: 24, scope: !16100)
!16107 = !DILocation(line: 418, column: 14, scope: !16100)
!16108 = !DILocation(line: 0, scope: !16100)
!16109 = !DILocation(line: 423, column: 2, scope: !16100)
!16110 = !DILocation(line: 424, column: 2, scope: !16100)
!16111 = !DILocation(line: 426, column: 2, scope: !16100)
!16112 = !DILocation(line: 428, column: 2, scope: !16100)
!16113 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2753, file: !2753, line: 432, type: !16114, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !16116)
!16114 = !DISubroutineType(types: !16115)
!16115 = !{null, !157}
!16116 = !{!16117}
!16117 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !16113, file: !2753, line: 432, type: !157)
!16118 = !DILocation(line: 0, scope: !16113)
!16119 = !DILocation(line: 435, column: 2, scope: !16113)
!16120 = !DILocation(line: 445, column: 2, scope: !16113)
!16121 = distinct !DISubprogram(name: "bg_thread_main", scope: !2753, file: !2753, line: 277, type: !322, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !16122)
!16122 = !{!16123, !16124, !16125}
!16123 = !DILocalVariable(name: "unused1", arg: 1, scope: !16121, file: !2753, line: 277, type: !102)
!16124 = !DILocalVariable(name: "unused2", arg: 2, scope: !16121, file: !2753, line: 277, type: !102)
!16125 = !DILocalVariable(name: "unused3", arg: 3, scope: !16121, file: !2753, line: 277, type: !102)
!16126 = !DILocation(line: 0, scope: !16121)
!16127 = !DILocation(line: 291, column: 20, scope: !16121)
!16128 = !DILocation(line: 293, column: 2, scope: !16121)
!16129 = !DILocation(line: 297, column: 2, scope: !16121)
!16130 = !DILocation(line: 305, column: 2, scope: !16121)
!16131 = !DILocation(line: 307, column: 2, scope: !16121)
!16132 = !DILocation(line: 330, column: 8, scope: !16121)
!16133 = !DILocation(line: 333, column: 34, scope: !16121)
!16134 = !DILocation(line: 339, column: 1, scope: !16121)
!16135 = distinct !DISubprogram(name: "init_mem_slab_module", scope: !3036, file: !3036, line: 56, type: !3042, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16136)
!16136 = !{!16137, !16138, !16139, !16159}
!16137 = !DILocalVariable(name: "dev", arg: 1, scope: !16135, file: !3036, line: 56, type: !3044)
!16138 = !DILocalVariable(name: "rc", scope: !16135, file: !3036, line: 58, type: !103)
!16139 = !DILocalVariable(name: "slab", scope: !16140, file: !3036, line: 61, type: !16141)
!16140 = distinct !DILexicalBlock(scope: !16135, file: !3036, line: 61, column: 2)
!16141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16142, size: 32)
!16142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_slab", file: !124, line: 4836, size: 256, elements: !16143)
!16143 = !{!16144, !16150, !16154, !16155, !16156, !16157, !16158}
!16144 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16142, file: !124, line: 4837, baseType: !16145, size: 64)
!16145 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !16146)
!16146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !16147)
!16147 = !{!16148}
!16148 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16146, file: !128, line: 232, baseType: !16149, size: 64)
!16149 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3022)
!16150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16142, file: !124, line: 4838, baseType: !16151, size: 32, offset: 64)
!16151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !16152)
!16152 = !{!16153}
!16153 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !16151, file: !149, line: 52, baseType: !22, size: 32)
!16154 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !16142, file: !124, line: 4839, baseType: !108, size: 32, offset: 96)
!16155 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !16142, file: !124, line: 4840, baseType: !153, size: 32, offset: 128)
!16156 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !16142, file: !124, line: 4841, baseType: !157, size: 32, offset: 160)
!16157 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !16142, file: !124, line: 4842, baseType: !157, size: 32, offset: 192)
!16158 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !16142, file: !124, line: 4843, baseType: !108, size: 32, offset: 224)
!16159 = !DILabel(scope: !16135, name: "out", file: !3036, line: 69)
!16160 = !DILocation(line: 0, scope: !16135)
!16161 = !DILocation(line: 0, scope: !16140)
!16162 = !DILocation(line: 61, column: 2, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16164, file: !3036, line: 61, column: 2)
!16164 = distinct !DILexicalBlock(scope: !16165, file: !3036, line: 61, column: 2)
!16165 = distinct !DILexicalBlock(scope: !16140, file: !3036, line: 61, column: 2)
!16166 = !DILocation(line: 61, column: 2, scope: !16167)
!16167 = distinct !DILexicalBlock(scope: !16163, file: !3036, line: 61, column: 2)
!16168 = distinct !{!16168, !16169, !16170}
!16169 = !DILocation(line: 61, column: 2, scope: !16140)
!16170 = !DILocation(line: 67, column: 2, scope: !16140)
!16171 = !DILocation(line: 61, column: 2, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16167, file: !3036, line: 61, column: 2)
!16173 = !DILocation(line: 61, column: 2, scope: !16164)
!16174 = !DILocation(line: 62, column: 8, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16165, file: !3036, line: 61, column: 43)
!16176 = !DILocation(line: 63, column: 10, scope: !16177)
!16177 = distinct !DILexicalBlock(scope: !16175, file: !3036, line: 63, column: 7)
!16178 = !DILocation(line: 61, column: 2, scope: !16165)
!16179 = !DILocation(line: 63, column: 7, scope: !16175)
!16180 = !DILocation(line: 71, column: 1, scope: !16135)
!16181 = distinct !DISubprogram(name: "create_free_list", scope: !3036, file: !3036, line: 27, type: !16182, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16184)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{!103, !16141}
!16184 = !{!16185, !16186, !16187}
!16185 = !DILocalVariable(name: "slab", arg: 1, scope: !16181, file: !3036, line: 27, type: !16141)
!16186 = !DILocalVariable(name: "j", scope: !16181, file: !3036, line: 29, type: !108)
!16187 = !DILocalVariable(name: "p", scope: !16181, file: !3036, line: 30, type: !157)
!16188 = !DILocation(line: 0, scope: !16181)
!16189 = !DILocation(line: 33, column: 2, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16181, file: !3036, line: 33, column: 2)
!16191 = !DILocation(line: 33, column: 2, scope: !16181)
!16192 = !DILocation(line: 38, column: 8, scope: !16181)
!16193 = !DILocation(line: 38, column: 18, scope: !16181)
!16194 = !DILocation(line: 41, column: 25, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16196, file: !3036, line: 41, column: 2)
!16196 = distinct !DILexicalBlock(scope: !16181, file: !3036, line: 41, column: 2)
!16197 = !DILocation(line: 41, column: 17, scope: !16195)
!16198 = !DILocation(line: 41, column: 2, scope: !16196)
!16199 = !DILocation(line: 42, column: 23, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16195, file: !3036, line: 41, column: 42)
!16201 = !DILocation(line: 42, column: 3, scope: !16200)
!16202 = !DILocation(line: 42, column: 15, scope: !16200)
!16203 = !DILocation(line: 43, column: 19, scope: !16200)
!16204 = !DILocation(line: 44, column: 14, scope: !16200)
!16205 = !DILocation(line: 44, column: 5, scope: !16200)
!16206 = !DILocation(line: 41, column: 38, scope: !16195)
!16207 = distinct !{!16207, !16198, !16208}
!16208 = !DILocation(line: 45, column: 2, scope: !16196)
!16209 = !DILocation(line: 47, column: 1, scope: !16181)
!16210 = distinct !DISubprogram(name: "k_mem_slab_init", scope: !3036, file: !3036, line: 76, type: !16211, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16213)
!16211 = !DISubroutineType(types: !16212)
!16212 = !{!103, !16141, !102, !153, !108}
!16213 = !{!16214, !16215, !16216, !16217, !16218, !16219}
!16214 = !DILocalVariable(name: "slab", arg: 1, scope: !16210, file: !3036, line: 76, type: !16141)
!16215 = !DILocalVariable(name: "buffer", arg: 2, scope: !16210, file: !3036, line: 76, type: !102)
!16216 = !DILocalVariable(name: "block_size", arg: 3, scope: !16210, file: !3036, line: 77, type: !153)
!16217 = !DILocalVariable(name: "num_blocks", arg: 4, scope: !16210, file: !3036, line: 77, type: !108)
!16218 = !DILocalVariable(name: "rc", scope: !16210, file: !3036, line: 79, type: !103)
!16219 = !DILabel(scope: !16210, name: "out", file: !3036, line: 98)
!16220 = !DILocation(line: 0, scope: !16210)
!16221 = !DILocation(line: 81, column: 8, scope: !16210)
!16222 = !DILocation(line: 81, column: 19, scope: !16210)
!16223 = !DILocation(line: 82, column: 8, scope: !16210)
!16224 = !DILocation(line: 82, column: 19, scope: !16210)
!16225 = !DILocation(line: 83, column: 8, scope: !16210)
!16226 = !DILocation(line: 83, column: 15, scope: !16210)
!16227 = !DILocation(line: 84, column: 8, scope: !16210)
!16228 = !DILocation(line: 84, column: 17, scope: !16210)
!16229 = !DILocation(line: 85, column: 15, scope: !16210)
!16230 = !DILocation(line: 91, column: 7, scope: !16210)
!16231 = !DILocation(line: 92, column: 9, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16210, file: !3036, line: 92, column: 6)
!16233 = !DILocation(line: 92, column: 6, scope: !16210)
!16234 = !DILocation(line: 96, column: 22, scope: !16210)
!16235 = !DILocation(line: 96, column: 2, scope: !16210)
!16236 = !DILocation(line: 97, column: 2, scope: !16210)
!16237 = !DILocation(line: 98, column: 1, scope: !16210)
!16238 = !DILocation(line: 101, column: 2, scope: !16210)
!16239 = distinct !DISubprogram(name: "z_waitq_init", scope: !16240, file: !16240, line: 47, type: !16241, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16244)
!16240 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16241 = !DISubroutineType(types: !16242)
!16242 = !{null, !16243}
!16243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16145, size: 32)
!16244 = !{!16245}
!16245 = !DILocalVariable(name: "w", arg: 1, scope: !16239, file: !16240, line: 47, type: !16243)
!16246 = !DILocation(line: 0, scope: !16239)
!16247 = !DILocation(line: 49, column: 21, scope: !16239)
!16248 = !DILocation(line: 49, column: 2, scope: !16239)
!16249 = !DILocation(line: 50, column: 1, scope: !16239)
!16250 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !16251, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16254)
!16251 = !DISubroutineType(types: !16252)
!16252 = !{null, !16253}
!16253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16149, size: 32)
!16254 = !{!16255}
!16255 = !DILocalVariable(name: "list", arg: 1, scope: !16250, file: !133, line: 197, type: !16253)
!16256 = !DILocation(line: 0, scope: !16250)
!16257 = !DILocation(line: 199, column: 8, scope: !16250)
!16258 = !DILocation(line: 199, column: 13, scope: !16250)
!16259 = !DILocation(line: 200, column: 8, scope: !16250)
!16260 = !DILocation(line: 200, column: 13, scope: !16250)
!16261 = !DILocation(line: 201, column: 1, scope: !16250)
!16262 = distinct !DISubprogram(name: "k_mem_slab_alloc", scope: !3036, file: !3036, line: 104, type: !16263, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16269)
!16263 = !DISubroutineType(types: !16264)
!16264 = !{!103, !16141, !1437, !16265}
!16265 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16266)
!16266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16267)
!16267 = !{!16268}
!16268 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16266, file: !105, line: 66, baseType: !104, size: 64)
!16269 = !{!16270, !16271, !16272, !16273, !16278}
!16270 = !DILocalVariable(name: "slab", arg: 1, scope: !16262, file: !3036, line: 104, type: !16141)
!16271 = !DILocalVariable(name: "mem", arg: 2, scope: !16262, file: !3036, line: 104, type: !1437)
!16272 = !DILocalVariable(name: "timeout", arg: 3, scope: !16262, file: !3036, line: 104, type: !16265)
!16273 = !DILocalVariable(name: "key", scope: !16262, file: !3036, line: 106, type: !16274)
!16274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !16275)
!16275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !16276)
!16276 = !{!16277}
!16277 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16275, file: !149, line: 33, baseType: !103, size: 32)
!16278 = !DILocalVariable(name: "result", scope: !16262, file: !3036, line: 107, type: !103)
!16279 = !DILocation(line: 0, scope: !16262)
!16280 = !DILocation(line: 106, column: 44, scope: !16262)
!16281 = !DILocalVariable(name: "l", arg: 1, scope: !16282, file: !149, line: 136, type: !16285)
!16282 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !16283, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16286)
!16283 = !DISubroutineType(types: !16284)
!16284 = !{!16274, !16285}
!16285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16151, size: 32)
!16286 = !{!16281, !16287}
!16287 = !DILocalVariable(name: "k", scope: !16282, file: !149, line: 139, type: !16274)
!16288 = !DILocation(line: 0, scope: !16282, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 106, column: 25, scope: !16262)
!16290 = !DILocation(line: 55, column: 2, scope: !16291, inlinedAt: !16295)
!16291 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16292)
!16292 = !{!16293, !16294}
!16293 = !DILocalVariable(name: "key", scope: !16291, file: !7985, line: 44, type: !32)
!16294 = !DILocalVariable(name: "tmp", scope: !16291, file: !7985, line: 53, type: !32)
!16295 = distinct !DILocation(line: 145, column: 10, scope: !16282, inlinedAt: !16289)
!16296 = !{i64 2283748}
!16297 = !DILocation(line: 0, scope: !16291, inlinedAt: !16295)
!16298 = !DILocation(line: 148, column: 2, scope: !16299, inlinedAt: !16289)
!16299 = distinct !DILexicalBlock(scope: !16300, file: !149, line: 148, column: 2)
!16300 = distinct !DILexicalBlock(scope: !16282, file: !149, line: 148, column: 2)
!16301 = !DILocation(line: 148, column: 2, scope: !16300, inlinedAt: !16289)
!16302 = !DILocation(line: 148, column: 2, scope: !16303, inlinedAt: !16289)
!16303 = distinct !DILexicalBlock(scope: !16299, file: !149, line: 148, column: 2)
!16304 = !DILocation(line: 160, column: 2, scope: !16282, inlinedAt: !16289)
!16305 = !DILocation(line: 111, column: 12, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16262, file: !3036, line: 111, column: 6)
!16307 = !DILocation(line: 111, column: 22, scope: !16306)
!16308 = !DILocation(line: 111, column: 6, scope: !16262)
!16309 = !DILocation(line: 113, column: 8, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16306, file: !3036, line: 111, column: 31)
!16311 = !DILocation(line: 114, column: 38, scope: !16310)
!16312 = !DILocation(line: 114, column: 21, scope: !16310)
!16313 = !DILocation(line: 114, column: 19, scope: !16310)
!16314 = !DILocation(line: 115, column: 9, scope: !16310)
!16315 = !DILocation(line: 115, column: 17, scope: !16310)
!16316 = !DILocation(line: 122, column: 2, scope: !16310)
!16317 = !DILocation(line: 122, column: 13, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16306, file: !3036, line: 122, column: 13)
!16319 = !DILocation(line: 122, column: 13, scope: !16306)
!16320 = !DILocation(line: 125, column: 8, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16318, file: !3036, line: 123, column: 42)
!16322 = !DILocation(line: 131, column: 49, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16318, file: !3036, line: 127, column: 9)
!16324 = !DILocation(line: 131, column: 12, scope: !16323)
!16325 = !DILocation(line: 132, column: 14, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16323, file: !3036, line: 132, column: 7)
!16327 = !DILocation(line: 132, column: 7, scope: !16323)
!16328 = !DILocation(line: 133, column: 11, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16326, file: !3036, line: 132, column: 20)
!16330 = !DILocation(line: 133, column: 26, scope: !16329)
!16331 = !DILocation(line: 133, column: 9, scope: !16329)
!16332 = !DILocation(line: 134, column: 3, scope: !16329)
!16333 = !DILocation(line: 0, scope: !16306)
!16334 = !DILocalVariable(name: "key", arg: 2, scope: !16335, file: !149, line: 190, type: !16274)
!16335 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !16336, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16338)
!16336 = !DISubroutineType(types: !16337)
!16337 = !{null, !16285, !16274}
!16338 = !{!16339, !16334}
!16339 = !DILocalVariable(name: "l", arg: 1, scope: !16335, file: !149, line: 189, type: !16285)
!16340 = !DILocation(line: 0, scope: !16335, inlinedAt: !16341)
!16341 = distinct !DILocation(line: 143, column: 2, scope: !16262)
!16342 = !DILocation(line: 194, column: 2, scope: !16343, inlinedAt: !16341)
!16343 = distinct !DILexicalBlock(scope: !16344, file: !149, line: 194, column: 2)
!16344 = distinct !DILexicalBlock(scope: !16335, file: !149, line: 194, column: 2)
!16345 = !DILocation(line: 194, column: 2, scope: !16344, inlinedAt: !16341)
!16346 = !DILocation(line: 194, column: 2, scope: !16347, inlinedAt: !16341)
!16347 = distinct !DILexicalBlock(scope: !16343, file: !149, line: 194, column: 2)
!16348 = !DILocalVariable(name: "key", arg: 1, scope: !16349, file: !7985, line: 84, type: !32)
!16349 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16350)
!16350 = !{!16348}
!16351 = !DILocation(line: 0, scope: !16349, inlinedAt: !16352)
!16352 = distinct !DILocation(line: 215, column: 2, scope: !16335, inlinedAt: !16341)
!16353 = !DILocation(line: 95, column: 2, scope: !16349, inlinedAt: !16352)
!16354 = !{i64 2284565}
!16355 = !DILocation(line: 145, column: 2, scope: !16262)
!16356 = !DILocation(line: 146, column: 1, scope: !16262)
!16357 = distinct !DISubprogram(name: "k_mem_slab_free", scope: !3036, file: !3036, line: 148, type: !16358, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16360)
!16358 = !DISubroutineType(types: !16359)
!16359 = !{null, !16141, !1437}
!16360 = !{!16361, !16362, !16363, !16364}
!16361 = !DILocalVariable(name: "slab", arg: 1, scope: !16357, file: !3036, line: 148, type: !16141)
!16362 = !DILocalVariable(name: "mem", arg: 2, scope: !16357, file: !3036, line: 148, type: !1437)
!16363 = !DILocalVariable(name: "key", scope: !16357, file: !3036, line: 150, type: !16274)
!16364 = !DILocalVariable(name: "pending_thread", scope: !16365, file: !3036, line: 154, type: !16367)
!16365 = distinct !DILexicalBlock(scope: !16366, file: !3036, line: 153, column: 68)
!16366 = distinct !DILexicalBlock(scope: !16357, file: !3036, line: 153, column: 6)
!16367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16368, size: 32)
!16368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 1024, elements: !16369)
!16369 = !{!16370, !16408, !16420, !16421, !16422, !16423, !16429, !16441}
!16370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16368, file: !195, line: 247, baseType: !16371, size: 384)
!16371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !16372)
!16372 = !{!16373, !16383, !16384, !16385, !16386, !16395, !16396, !16397}
!16373 = !DIDerivedType(tag: DW_TAG_member, scope: !16371, file: !195, line: 60, baseType: !16374, size: 64)
!16374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16371, file: !195, line: 60, size: 64, elements: !16375)
!16375 = !{!16376, !16377}
!16376 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16374, file: !195, line: 61, baseType: !3021, size: 64)
!16377 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16374, file: !195, line: 62, baseType: !16378, size: 64)
!16378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !16379)
!16379 = !{!16380}
!16380 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16378, file: !207, line: 50, baseType: !16381, size: 64)
!16381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16382, size: 64, elements: !212)
!16382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16378, size: 32)
!16383 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16371, file: !195, line: 68, baseType: !16243, size: 32, offset: 64)
!16384 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16371, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!16385 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16371, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!16386 = !DIDerivedType(tag: DW_TAG_member, scope: !16371, file: !195, line: 90, baseType: !16387, size: 16, offset: 112)
!16387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16371, file: !195, line: 90, size: 16, elements: !16388)
!16388 = !{!16389, !16394}
!16389 = !DIDerivedType(tag: DW_TAG_member, scope: !16387, file: !195, line: 91, baseType: !16390, size: 16)
!16390 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16387, file: !195, line: 91, size: 16, elements: !16391)
!16391 = !{!16392, !16393}
!16392 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16390, file: !195, line: 96, baseType: !225, size: 8)
!16393 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16390, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!16394 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16387, file: !195, line: 100, baseType: !177, size: 16)
!16395 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16371, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!16396 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16371, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!16397 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16371, file: !195, line: 131, baseType: !16398, size: 192, offset: 192)
!16398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !16399)
!16399 = !{!16400, !16401, !16407}
!16400 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16398, file: !128, line: 245, baseType: !3021, size: 64)
!16401 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16398, file: !128, line: 246, baseType: !16402, size: 32, offset: 64)
!16402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !16403)
!16403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16404, size: 32)
!16404 = !DISubroutineType(types: !16405)
!16405 = !{null, !16406}
!16406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16398, size: 32)
!16407 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16398, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!16408 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16368, file: !195, line: 250, baseType: !16409, size: 288, offset: 384)
!16409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !16410)
!16410 = !{!16411, !16412, !16413, !16414, !16415, !16416, !16417, !16418, !16419}
!16411 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16409, file: !244, line: 26, baseType: !108, size: 32)
!16412 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16409, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!16413 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16409, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!16414 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16409, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!16415 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16409, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!16416 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16409, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!16417 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16409, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!16418 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16409, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!16419 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16409, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!16420 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16368, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!16421 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16368, file: !195, line: 256, baseType: !16145, size: 64, offset: 704)
!16422 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16368, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!16423 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16368, file: !195, line: 300, baseType: !16424, size: 96, offset: 800)
!16424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !195, line: 149, size: 96, elements: !16425)
!16425 = !{!16426, !16427, !16428}
!16426 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16424, file: !195, line: 153, baseType: !22, size: 32)
!16427 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16424, file: !195, line: 162, baseType: !153, size: 32, offset: 32)
!16428 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16424, file: !195, line: 168, baseType: !153, size: 32, offset: 64)
!16429 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16368, file: !195, line: 325, baseType: !16430, size: 32, offset: 896)
!16430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16431, size: 32)
!16431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !16432)
!16432 = !{!16433, !16439, !16440}
!16433 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16431, file: !124, line: 5074, baseType: !16434, size: 96)
!16434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !16435)
!16435 = !{!16436, !16437, !16438}
!16436 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16434, file: !270, line: 57, baseType: !273, size: 32)
!16437 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16434, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!16438 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16434, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!16439 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16431, file: !124, line: 5075, baseType: !16145, size: 64, offset: 96)
!16440 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16431, file: !124, line: 5076, baseType: !16151, size: 32, offset: 160)
!16441 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16368, file: !195, line: 343, baseType: !16442, size: 64, offset: 928)
!16442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !16443)
!16443 = !{!16444, !16445}
!16444 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16442, file: !244, line: 63, baseType: !108, size: 32)
!16445 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16442, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!16446 = !DILocation(line: 0, scope: !16357)
!16447 = !DILocation(line: 150, column: 44, scope: !16357)
!16448 = !DILocation(line: 0, scope: !16282, inlinedAt: !16449)
!16449 = distinct !DILocation(line: 150, column: 25, scope: !16357)
!16450 = !DILocation(line: 55, column: 2, scope: !16291, inlinedAt: !16451)
!16451 = distinct !DILocation(line: 145, column: 10, scope: !16282, inlinedAt: !16449)
!16452 = !DILocation(line: 0, scope: !16291, inlinedAt: !16451)
!16453 = !DILocation(line: 148, column: 2, scope: !16299, inlinedAt: !16449)
!16454 = !DILocation(line: 148, column: 2, scope: !16300, inlinedAt: !16449)
!16455 = !DILocation(line: 148, column: 2, scope: !16303, inlinedAt: !16449)
!16456 = !DILocation(line: 160, column: 2, scope: !16282, inlinedAt: !16449)
!16457 = !DILocation(line: 153, column: 12, scope: !16366)
!16458 = !DILocation(line: 153, column: 22, scope: !16366)
!16459 = !DILocation(line: 153, column: 6, scope: !16357)
!16460 = !DILocation(line: 154, column: 66, scope: !16365)
!16461 = !DILocation(line: 154, column: 37, scope: !16365)
!16462 = !DILocation(line: 0, scope: !16365)
!16463 = !DILocation(line: 156, column: 22, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16365, file: !3036, line: 156, column: 7)
!16465 = !DILocation(line: 156, column: 7, scope: !16365)
!16466 = !DILocation(line: 165, column: 27, scope: !16357)
!16467 = !DILocation(line: 159, column: 59, scope: !16468)
!16468 = distinct !DILexicalBlock(scope: !16464, file: !3036, line: 156, column: 31)
!16469 = !DILocalVariable(name: "thread", arg: 1, scope: !16470, file: !16471, line: 134, type: !16367)
!16470 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16471, file: !16471, line: 134, type: !16472, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16474)
!16471 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16472 = !DISubroutineType(types: !16473)
!16473 = !{null, !16367, !32, !102}
!16474 = !{!16469, !16475, !16476}
!16475 = !DILocalVariable(name: "value", arg: 2, scope: !16470, file: !16471, line: 135, type: !32)
!16476 = !DILocalVariable(name: "data", arg: 3, scope: !16470, file: !16471, line: 136, type: !102)
!16477 = !DILocation(line: 0, scope: !16470, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 159, column: 4, scope: !16468)
!16479 = !DILocalVariable(name: "thread", arg: 1, scope: !16480, file: !16000, line: 65, type: !16367)
!16480 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !16000, file: !16000, line: 65, type: !16481, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16483)
!16481 = !DISubroutineType(types: !16482)
!16482 = !{null, !16367, !32}
!16483 = !{!16479, !16484}
!16484 = !DILocalVariable(name: "value", arg: 2, scope: !16480, file: !16000, line: 65, type: !32)
!16485 = !DILocation(line: 0, scope: !16480, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 138, column: 2, scope: !16470, inlinedAt: !16478)
!16487 = !DILocation(line: 67, column: 15, scope: !16480, inlinedAt: !16486)
!16488 = !DILocation(line: 67, column: 33, scope: !16480, inlinedAt: !16486)
!16489 = !DILocation(line: 139, column: 15, scope: !16470, inlinedAt: !16478)
!16490 = !DILocation(line: 139, column: 25, scope: !16470, inlinedAt: !16478)
!16491 = !DILocation(line: 160, column: 4, scope: !16468)
!16492 = !DILocation(line: 161, column: 4, scope: !16468)
!16493 = !DILocation(line: 165, column: 3, scope: !16357)
!16494 = !DILocation(line: 165, column: 19, scope: !16357)
!16495 = !DILocation(line: 166, column: 20, scope: !16357)
!16496 = !DILocation(line: 166, column: 18, scope: !16357)
!16497 = !DILocation(line: 167, column: 8, scope: !16357)
!16498 = !DILocation(line: 167, column: 16, scope: !16357)
!16499 = !DILocation(line: 0, scope: !16335, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 171, column: 2, scope: !16357)
!16501 = !DILocation(line: 194, column: 2, scope: !16343, inlinedAt: !16500)
!16502 = !DILocation(line: 194, column: 2, scope: !16344, inlinedAt: !16500)
!16503 = !DILocation(line: 194, column: 2, scope: !16347, inlinedAt: !16500)
!16504 = !DILocation(line: 0, scope: !16349, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 215, column: 2, scope: !16335, inlinedAt: !16500)
!16506 = !DILocation(line: 95, column: 2, scope: !16349, inlinedAt: !16505)
!16507 = !DILocation(line: 172, column: 1, scope: !16357)
!16508 = distinct !DISubprogram(name: "k_mem_slab_runtime_stats_get", scope: !3036, file: !3036, line: 174, type: !16509, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3016, retainedNodes: !16518)
!16509 = !DISubroutineType(types: !16510)
!16510 = !{!103, !16141, !16511}
!16511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16512, size: 32)
!16512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !16513, line: 24, size: 96, elements: !16514)
!16513 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16514 = !{!16515, !16516, !16517}
!16515 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !16512, file: !16513, line: 25, baseType: !153, size: 32)
!16516 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !16512, file: !16513, line: 26, baseType: !153, size: 32, offset: 32)
!16517 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !16512, file: !16513, line: 27, baseType: !153, size: 32, offset: 64)
!16518 = !{!16519, !16520, !16521}
!16519 = !DILocalVariable(name: "slab", arg: 1, scope: !16508, file: !3036, line: 174, type: !16141)
!16520 = !DILocalVariable(name: "stats", arg: 2, scope: !16508, file: !3036, line: 174, type: !16511)
!16521 = !DILocalVariable(name: "key", scope: !16508, file: !3036, line: 180, type: !16274)
!16522 = !DILocation(line: 0, scope: !16508)
!16523 = !DILocation(line: 176, column: 12, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16508, file: !3036, line: 176, column: 6)
!16525 = !DILocation(line: 176, column: 21, scope: !16524)
!16526 = !DILocation(line: 180, column: 44, scope: !16508)
!16527 = !DILocation(line: 0, scope: !16282, inlinedAt: !16528)
!16528 = distinct !DILocation(line: 180, column: 25, scope: !16508)
!16529 = !DILocation(line: 55, column: 2, scope: !16291, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 145, column: 10, scope: !16282, inlinedAt: !16528)
!16531 = !DILocation(line: 0, scope: !16291, inlinedAt: !16530)
!16532 = !DILocation(line: 148, column: 2, scope: !16299, inlinedAt: !16528)
!16533 = !DILocation(line: 148, column: 2, scope: !16300, inlinedAt: !16528)
!16534 = !DILocation(line: 148, column: 2, scope: !16303, inlinedAt: !16528)
!16535 = !DILocation(line: 160, column: 2, scope: !16282, inlinedAt: !16528)
!16536 = !DILocation(line: 182, column: 33, scope: !16508)
!16537 = !DILocation(line: 182, column: 50, scope: !16508)
!16538 = !DILocation(line: 182, column: 42, scope: !16508)
!16539 = !DILocation(line: 182, column: 9, scope: !16508)
!16540 = !DILocation(line: 182, column: 25, scope: !16508)
!16541 = !DILocation(line: 183, column: 29, scope: !16508)
!16542 = !DILocation(line: 183, column: 48, scope: !16508)
!16543 = !DILocation(line: 183, column: 40, scope: !16508)
!16544 = !DILocation(line: 183, column: 66, scope: !16508)
!16545 = !DILocation(line: 183, column: 58, scope: !16508)
!16546 = !DILocation(line: 183, column: 9, scope: !16508)
!16547 = !DILocation(line: 183, column: 20, scope: !16508)
!16548 = !DILocation(line: 187, column: 9, scope: !16508)
!16549 = !DILocation(line: 187, column: 29, scope: !16508)
!16550 = !DILocation(line: 0, scope: !16335, inlinedAt: !16551)
!16551 = distinct !DILocation(line: 190, column: 2, scope: !16508)
!16552 = !DILocation(line: 194, column: 2, scope: !16343, inlinedAt: !16551)
!16553 = !DILocation(line: 194, column: 2, scope: !16344, inlinedAt: !16551)
!16554 = !DILocation(line: 194, column: 2, scope: !16347, inlinedAt: !16551)
!16555 = !DILocation(line: 0, scope: !16349, inlinedAt: !16556)
!16556 = distinct !DILocation(line: 215, column: 2, scope: !16335, inlinedAt: !16551)
!16557 = !DILocation(line: 95, column: 2, scope: !16349, inlinedAt: !16556)
!16558 = !DILocation(line: 193, column: 1, scope: !16508)
!16559 = distinct !DISubprogram(name: "k_thread_foreach", scope: !3051, file: !3051, line: 45, type: !16560, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16568)
!16560 = !DISubroutineType(types: !16561)
!16561 = !{null, !16562, !102}
!16562 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !124, line: 103, baseType: !16563)
!16563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16564, size: 32)
!16564 = !DISubroutineType(types: !16565)
!16565 = !{null, !16566, !102}
!16566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16567, size: 32)
!16567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3056)
!16568 = !{!16569, !16570}
!16569 = !DILocalVariable(name: "user_cb", arg: 1, scope: !16559, file: !3051, line: 45, type: !16562)
!16570 = !DILocalVariable(name: "user_data", arg: 2, scope: !16559, file: !3051, line: 45, type: !102)
!16571 = !DILocation(line: 0, scope: !16559)
!16572 = !DILocation(line: 71, column: 1, scope: !16559)
!16573 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !3051, file: !3051, line: 73, type: !16560, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16574)
!16574 = !{!16575, !16576}
!16575 = !DILocalVariable(name: "user_cb", arg: 1, scope: !16573, file: !3051, line: 73, type: !16562)
!16576 = !DILocalVariable(name: "user_data", arg: 2, scope: !16573, file: !3051, line: 73, type: !102)
!16577 = !DILocation(line: 0, scope: !16573)
!16578 = !DILocation(line: 95, column: 1, scope: !16573)
!16579 = distinct !DISubprogram(name: "k_is_in_isr", scope: !3051, file: !3051, line: 97, type: !9357, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !2953)
!16580 = !DILocation(line: 1031, column: 3, scope: !16581, inlinedAt: !16584)
!16581 = distinct !DISubprogram(name: "__get_IPSR", scope: !8306, file: !8306, line: 1027, type: !8393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16582)
!16582 = !{!16583}
!16583 = !DILocalVariable(name: "result", scope: !16581, file: !8306, line: 1029, type: !108)
!16584 = distinct !DILocation(line: 48, column: 10, scope: !16585, inlinedAt: !16586)
!16585 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9356, file: !9356, line: 46, type: !9357, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !2953)
!16586 = distinct !DILocation(line: 99, column: 9, scope: !16579)
!16587 = !{i64 3755249}
!16588 = !DILocation(line: 0, scope: !16581, inlinedAt: !16584)
!16589 = !DILocation(line: 48, column: 9, scope: !16585, inlinedAt: !16586)
!16590 = !DILocation(line: 99, column: 2, scope: !16579)
!16591 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !3051, file: !3051, line: 106, type: !333, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !2953)
!16592 = !DILocation(line: 108, column: 2, scope: !16591)
!16593 = !DILocation(line: 108, column: 17, scope: !16591)
!16594 = !DILocation(line: 108, column: 30, scope: !16591)
!16595 = !DILocation(line: 109, column: 1, scope: !16591)
!16596 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !3051, file: !3051, line: 116, type: !333, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !2953)
!16597 = !DILocation(line: 118, column: 2, scope: !16596)
!16598 = !DILocation(line: 118, column: 17, scope: !16596)
!16599 = !DILocation(line: 118, column: 30, scope: !16596)
!16600 = !DILocation(line: 119, column: 1, scope: !16596)
!16601 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !3051, file: !3051, line: 126, type: !9357, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !2953)
!16602 = !DILocation(line: 128, column: 10, scope: !16601)
!16603 = !DILocation(line: 128, column: 25, scope: !16601)
!16604 = !DILocation(line: 128, column: 38, scope: !16601)
!16605 = !DILocation(line: 128, column: 53, scope: !16601)
!16606 = !DILocation(line: 128, column: 2, scope: !16601)
!16607 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !3051, file: !3051, line: 187, type: !16608, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16610)
!16608 = !DISubroutineType(types: !16609)
!16609 = !{!103, !3055, !336}
!16610 = !{!16611, !16612}
!16611 = !DILocalVariable(name: "thread", arg: 1, scope: !16607, file: !3051, line: 187, type: !3055)
!16612 = !DILocalVariable(name: "value", arg: 2, scope: !16607, file: !3051, line: 187, type: !336)
!16613 = !DILocation(line: 0, scope: !16607)
!16614 = !DILocation(line: 206, column: 2, scope: !16607)
!16615 = distinct !DISubprogram(name: "k_thread_name_get", scope: !3051, file: !3051, line: 238, type: !16616, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16618)
!16616 = !DISubroutineType(types: !16617)
!16617 = !{!336, !3055}
!16618 = !{!16619}
!16619 = !DILocalVariable(name: "thread", arg: 1, scope: !16615, file: !3051, line: 238, type: !3055)
!16620 = !DILocation(line: 0, scope: !16615)
!16621 = !DILocation(line: 244, column: 2, scope: !16615)
!16622 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !3051, file: !3051, line: 248, type: !16623, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16625)
!16623 = !DISubroutineType(types: !16624)
!16624 = !{!103, !3054, !157, !153}
!16625 = !{!16626, !16627, !16628}
!16626 = !DILocalVariable(name: "thread", arg: 1, scope: !16622, file: !3051, line: 248, type: !3054)
!16627 = !DILocalVariable(name: "buf", arg: 2, scope: !16622, file: !3051, line: 248, type: !157)
!16628 = !DILocalVariable(name: "size", arg: 3, scope: !16622, file: !3051, line: 248, type: !153)
!16629 = !DILocation(line: 0, scope: !16622)
!16630 = !DILocation(line: 257, column: 2, scope: !16622)
!16631 = !DILocation(line: 0, scope: !3050)
!16632 = !DILocation(line: 281, column: 11, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !3050, file: !3051, line: 281, column: 6)
!16634 = !DILocation(line: 281, column: 20, scope: !16633)
!16635 = !DILocation(line: 275, column: 45, scope: !3050)
!16636 = !DILocation(line: 285, column: 10, scope: !3050)
!16637 = !DILocation(line: 0, scope: !3173)
!16638 = !DILocation(line: 293, column: 39, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !3173, file: !3051, line: 293, column: 2)
!16640 = !DILocation(line: 293, column: 2, scope: !3173)
!16641 = !DILocation(line: 273, column: 14, scope: !3050)
!16642 = !DILocation(line: 309, column: 2, scope: !3050)
!16643 = !DILocation(line: 309, column: 11, scope: !3050)
!16644 = !DILocation(line: 311, column: 2, scope: !3050)
!16645 = !DILocation(line: 293, column: 26, scope: !16639)
!16646 = !DILocation(line: 294, column: 9, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16639, file: !3051, line: 293, column: 54)
!16648 = !DILocation(line: 295, column: 21, scope: !16649)
!16649 = distinct !DILexicalBlock(scope: !16647, file: !3051, line: 295, column: 7)
!16650 = !DILocation(line: 295, column: 28, scope: !16649)
!16651 = !DILocation(line: 295, column: 7, scope: !16647)
!16652 = !DILocation(line: 299, column: 25, scope: !16647)
!16653 = !DILocation(line: 299, column: 41, scope: !16647)
!16654 = !DILocation(line: 300, column: 7, scope: !16647)
!16655 = !DILocation(line: 300, column: 26, scope: !16647)
!16656 = !DILocation(line: 299, column: 10, scope: !16647)
!16657 = !DILocation(line: 299, column: 7, scope: !16647)
!16658 = !DILocation(line: 302, column: 16, scope: !16647)
!16659 = !DILocation(line: 304, column: 20, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16647, file: !3051, line: 304, column: 7)
!16661 = !DILocation(line: 304, column: 7, scope: !16647)
!16662 = !DILocation(line: 305, column: 26, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16660, file: !3051, line: 304, column: 26)
!16664 = !DILocation(line: 305, column: 42, scope: !16663)
!16665 = !DILocation(line: 305, column: 11, scope: !16663)
!16666 = !DILocation(line: 305, column: 8, scope: !16663)
!16667 = !DILocation(line: 306, column: 3, scope: !16663)
!16668 = !DILocation(line: 293, column: 50, scope: !16639)
!16669 = !DILocation(line: 312, column: 1, scope: !3050)
!16670 = distinct !DISubprogram(name: "copy_bytes", scope: !3051, file: !3051, line: 261, type: !16671, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16673)
!16671 = !DISubroutineType(types: !16672)
!16672 = !{!153, !157, !153, !336, !153}
!16673 = !{!16674, !16675, !16676, !16677, !16678}
!16674 = !DILocalVariable(name: "dest", arg: 1, scope: !16670, file: !3051, line: 261, type: !157)
!16675 = !DILocalVariable(name: "dest_size", arg: 2, scope: !16670, file: !3051, line: 261, type: !153)
!16676 = !DILocalVariable(name: "src", arg: 3, scope: !16670, file: !3051, line: 261, type: !336)
!16677 = !DILocalVariable(name: "src_size", arg: 4, scope: !16670, file: !3051, line: 261, type: !153)
!16678 = !DILocalVariable(name: "bytes_to_copy", scope: !16670, file: !3051, line: 263, type: !153)
!16679 = !DILocation(line: 0, scope: !16670)
!16680 = !DILocation(line: 265, column: 18, scope: !16670)
!16681 = !DILocation(line: 266, column: 2, scope: !16670)
!16682 = !DILocation(line: 268, column: 2, scope: !16670)
!16683 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !3051, file: !3051, line: 383, type: !16684, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16686)
!16684 = !DISubroutineType(types: !16685)
!16685 = !{null, !3055}
!16686 = !{!16687}
!16687 = !DILocalVariable(name: "thread", arg: 1, scope: !16683, file: !3051, line: 383, type: !3055)
!16688 = !DILocation(line: 0, scope: !16683)
!16689 = !DILocation(line: 387, column: 2, scope: !16683)
!16690 = !DILocation(line: 388, column: 1, scope: !16683)
!16691 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !3051, file: !3051, line: 528, type: !16692, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16699)
!16692 = !DISubroutineType(types: !16693)
!16693 = !{!157, !3055, !16694, !153, !320, !102, !102, !102, !103, !108, !336}
!16694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16695, size: 32)
!16695 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !313, line: 44, baseType: !16696)
!16696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !315, line: 47, size: 8, elements: !16697)
!16697 = !{!16698}
!16698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !16696, file: !315, line: 48, baseType: !158, size: 8)
!16699 = !{!16700, !16701, !16702, !16703, !16704, !16705, !16706, !16707, !16708, !16709, !16710}
!16700 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16691, file: !3051, line: 528, type: !3055)
!16701 = !DILocalVariable(name: "stack", arg: 2, scope: !16691, file: !3051, line: 529, type: !16694)
!16702 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16691, file: !3051, line: 529, type: !153)
!16703 = !DILocalVariable(name: "entry", arg: 4, scope: !16691, file: !3051, line: 530, type: !320)
!16704 = !DILocalVariable(name: "p1", arg: 5, scope: !16691, file: !3051, line: 531, type: !102)
!16705 = !DILocalVariable(name: "p2", arg: 6, scope: !16691, file: !3051, line: 531, type: !102)
!16706 = !DILocalVariable(name: "p3", arg: 7, scope: !16691, file: !3051, line: 531, type: !102)
!16707 = !DILocalVariable(name: "prio", arg: 8, scope: !16691, file: !3051, line: 532, type: !103)
!16708 = !DILocalVariable(name: "options", arg: 9, scope: !16691, file: !3051, line: 532, type: !108)
!16709 = !DILocalVariable(name: "name", arg: 10, scope: !16691, file: !3051, line: 532, type: !336)
!16710 = !DILocalVariable(name: "stack_ptr", scope: !16691, file: !3051, line: 534, type: !157)
!16711 = !DILocation(line: 0, scope: !16691)
!16712 = !DILocation(line: 536, column: 2, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16714, file: !3051, line: 536, column: 2)
!16714 = distinct !DILexicalBlock(scope: !16715, file: !3051, line: 536, column: 2)
!16715 = distinct !DILexicalBlock(scope: !16691, file: !3051, line: 536, column: 2)
!16716 = !DILocation(line: 536, column: 2, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16713, file: !3051, line: 536, column: 2)
!16718 = !DILocation(line: 550, column: 28, scope: !16691)
!16719 = !DILocation(line: 550, column: 2, scope: !16691)
!16720 = !DILocation(line: 553, column: 34, scope: !16691)
!16721 = !DILocation(line: 553, column: 2, scope: !16691)
!16722 = !DILocation(line: 554, column: 14, scope: !16691)
!16723 = !DILocation(line: 564, column: 2, scope: !16691)
!16724 = !DILocation(line: 567, column: 14, scope: !16691)
!16725 = !DILocation(line: 567, column: 24, scope: !16691)
!16726 = !DILocation(line: 612, column: 7, scope: !16727)
!16727 = distinct !DILexicalBlock(scope: !16691, file: !3051, line: 612, column: 6)
!16728 = !DILocation(line: 612, column: 6, scope: !16691)
!16729 = !DILocation(line: 627, column: 40, scope: !16691)
!16730 = !DILocation(line: 637, column: 2, scope: !16691)
!16731 = !DILocation(line: 613, column: 15, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16727, file: !3051, line: 612, column: 17)
!16733 = !DILocation(line: 613, column: 29, scope: !16732)
!16734 = !DILocation(line: 638, column: 1, scope: !16691)
!16735 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !15980, file: !15980, line: 78, type: !16736, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16738)
!16736 = !DISubroutineType(types: !16737)
!16737 = !{!119, !102}
!16738 = !{!16739}
!16739 = !DILocalVariable(name: "entry_point", arg: 1, scope: !16735, file: !15980, line: 78, type: !102)
!16740 = !DILocation(line: 0, scope: !16735)
!16741 = !DILocation(line: 80, column: 21, scope: !16735)
!16742 = !DILocation(line: 80, column: 2, scope: !16735)
!16743 = distinct !DISubprogram(name: "z_waitq_init", scope: !16240, file: !16240, line: 47, type: !16744, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16746)
!16744 = !DISubroutineType(types: !16745)
!16745 = !{null, !3086}
!16746 = !{!16747}
!16747 = !DILocalVariable(name: "w", arg: 1, scope: !16743, file: !16240, line: 47, type: !3086)
!16748 = !DILocation(line: 0, scope: !16743)
!16749 = !DILocation(line: 49, column: 21, scope: !16743)
!16750 = !DILocation(line: 49, column: 2, scope: !16743)
!16751 = !DILocation(line: 50, column: 1, scope: !16743)
!16752 = distinct !DISubprogram(name: "z_init_thread_base", scope: !3051, file: !3051, line: 791, type: !16753, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16756)
!16753 = !DISubroutineType(types: !16754)
!16754 = !{null, !16755, !103, !108, !32}
!16755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 32)
!16756 = !{!16757, !16758, !16759, !16760}
!16757 = !DILocalVariable(name: "thread_base", arg: 1, scope: !16752, file: !3051, line: 791, type: !16755)
!16758 = !DILocalVariable(name: "priority", arg: 2, scope: !16752, file: !3051, line: 791, type: !103)
!16759 = !DILocalVariable(name: "initial_state", arg: 3, scope: !16752, file: !3051, line: 792, type: !108)
!16760 = !DILocalVariable(name: "options", arg: 4, scope: !16752, file: !3051, line: 792, type: !32)
!16761 = !DILocation(line: 0, scope: !16752)
!16762 = !DILocation(line: 795, column: 15, scope: !16752)
!16763 = !DILocation(line: 795, column: 25, scope: !16752)
!16764 = !DILocation(line: 796, column: 30, scope: !16752)
!16765 = !DILocation(line: 796, column: 15, scope: !16752)
!16766 = !DILocation(line: 796, column: 28, scope: !16752)
!16767 = !DILocation(line: 797, column: 30, scope: !16752)
!16768 = !DILocation(line: 797, column: 15, scope: !16752)
!16769 = !DILocation(line: 797, column: 28, scope: !16752)
!16770 = !DILocation(line: 799, column: 22, scope: !16752)
!16771 = !DILocation(line: 799, column: 15, scope: !16752)
!16772 = !DILocation(line: 799, column: 20, scope: !16752)
!16773 = !DILocation(line: 801, column: 15, scope: !16752)
!16774 = !DILocation(line: 801, column: 28, scope: !16752)
!16775 = !DILocation(line: 814, column: 2, scope: !16752)
!16776 = !DILocation(line: 815, column: 1, scope: !16752)
!16777 = distinct !DISubprogram(name: "setup_thread_stack", scope: !3051, file: !3051, line: 449, type: !16778, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16780)
!16778 = !DISubroutineType(types: !16779)
!16779 = !{!157, !3055, !16694, !153}
!16780 = !{!16781, !16782, !16783, !16784, !16785, !16786, !16787, !16788}
!16781 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16777, file: !3051, line: 449, type: !3055)
!16782 = !DILocalVariable(name: "stack", arg: 2, scope: !16777, file: !3051, line: 450, type: !16694)
!16783 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16777, file: !3051, line: 450, type: !153)
!16784 = !DILocalVariable(name: "stack_obj_size", scope: !16777, file: !3051, line: 452, type: !153)
!16785 = !DILocalVariable(name: "stack_buf_size", scope: !16777, file: !3051, line: 452, type: !153)
!16786 = !DILocalVariable(name: "stack_ptr", scope: !16777, file: !3051, line: 453, type: !157)
!16787 = !DILocalVariable(name: "stack_buf_start", scope: !16777, file: !3051, line: 453, type: !157)
!16788 = !DILocalVariable(name: "delta", scope: !16777, file: !3051, line: 454, type: !153)
!16789 = !DILocation(line: 0, scope: !16777)
!16790 = !DILocation(line: 465, column: 20, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16777, file: !3051, line: 463, column: 2)
!16792 = !DILocation(line: 466, column: 21, scope: !16791)
!16793 = !DILocation(line: 473, column: 28, scope: !16777)
!16794 = !DILocation(line: 514, column: 33, scope: !16777)
!16795 = !DILocation(line: 514, column: 25, scope: !16777)
!16796 = !DILocation(line: 514, column: 31, scope: !16777)
!16797 = !DILocation(line: 515, column: 25, scope: !16777)
!16798 = !DILocation(line: 515, column: 30, scope: !16777)
!16799 = !DILocation(line: 516, column: 25, scope: !16777)
!16800 = !DILocation(line: 516, column: 31, scope: !16777)
!16801 = !DILocation(line: 520, column: 2, scope: !16777)
!16802 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !315, file: !315, line: 331, type: !16803, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16805)
!16803 = !DISubroutineType(types: !16804)
!16804 = !{!157, !16694}
!16805 = !{!16806}
!16806 = !DILocalVariable(name: "sym", arg: 1, scope: !16802, file: !315, line: 331, type: !16694)
!16807 = !DILocation(line: 0, scope: !16802)
!16808 = !DILocation(line: 333, column: 21, scope: !16802)
!16809 = !DILocation(line: 333, column: 2, scope: !16802)
!16810 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !16811, file: !16811, line: 40, type: !16812, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16814)
!16811 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16812 = !DISubroutineType(types: !16813)
!16813 = !{null, !16755}
!16814 = !{!16815}
!16815 = !DILocalVariable(name: "thread_base", arg: 1, scope: !16810, file: !16811, line: 40, type: !16755)
!16816 = !DILocation(line: 0, scope: !16810)
!16817 = !DILocation(line: 42, column: 31, scope: !16810)
!16818 = !DILocation(line: 42, column: 2, scope: !16810)
!16819 = !DILocation(line: 43, column: 1, scope: !16810)
!16820 = distinct !DISubprogram(name: "z_init_timeout", scope: !16811, file: !16811, line: 25, type: !3112, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16821)
!16821 = !{!16822}
!16822 = !DILocalVariable(name: "to", arg: 1, scope: !16820, file: !16811, line: 25, type: !3114)
!16823 = !DILocation(line: 0, scope: !16820)
!16824 = !DILocation(line: 27, column: 22, scope: !16820)
!16825 = !DILocation(line: 27, column: 2, scope: !16820)
!16826 = !DILocation(line: 28, column: 1, scope: !16820)
!16827 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !16828, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16830)
!16828 = !DISubroutineType(types: !16829)
!16829 = !{null, !3160}
!16830 = !{!16831}
!16831 = !DILocalVariable(name: "node", arg: 1, scope: !16827, file: !133, line: 211, type: !3160)
!16832 = !DILocation(line: 0, scope: !16827)
!16833 = !DILocation(line: 213, column: 8, scope: !16827)
!16834 = !DILocation(line: 213, column: 13, scope: !16827)
!16835 = !DILocation(line: 214, column: 8, scope: !16827)
!16836 = !DILocation(line: 214, column: 13, scope: !16827)
!16837 = !DILocation(line: 215, column: 1, scope: !16827)
!16838 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !16839, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16842)
!16839 = !DISubroutineType(types: !16840)
!16840 = !{null, !16841}
!16841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 32)
!16842 = !{!16843}
!16843 = !DILocalVariable(name: "list", arg: 1, scope: !16838, file: !133, line: 197, type: !16841)
!16844 = !DILocation(line: 0, scope: !16838)
!16845 = !DILocation(line: 199, column: 8, scope: !16838)
!16846 = !DILocation(line: 199, column: 13, scope: !16838)
!16847 = !DILocation(line: 200, column: 8, scope: !16838)
!16848 = !DILocation(line: 200, column: 13, scope: !16838)
!16849 = !DILocation(line: 201, column: 1, scope: !16838)
!16850 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !3051, file: !3051, line: 641, type: !16851, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16857)
!16851 = !DISubroutineType(types: !16852)
!16852 = !{!3054, !3055, !16694, !153, !320, !102, !102, !102, !103, !108, !16853}
!16853 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16854)
!16854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16855)
!16855 = !{!16856}
!16856 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16854, file: !105, line: 66, baseType: !104, size: 64)
!16857 = !{!16858, !16859, !16860, !16861, !16862, !16863, !16864, !16865, !16866, !16867}
!16858 = !DILocalVariable(name: "new_thread", arg: 1, scope: !16850, file: !3051, line: 641, type: !3055)
!16859 = !DILocalVariable(name: "stack", arg: 2, scope: !16850, file: !3051, line: 642, type: !16694)
!16860 = !DILocalVariable(name: "stack_size", arg: 3, scope: !16850, file: !3051, line: 643, type: !153)
!16861 = !DILocalVariable(name: "entry", arg: 4, scope: !16850, file: !3051, line: 643, type: !320)
!16862 = !DILocalVariable(name: "p1", arg: 5, scope: !16850, file: !3051, line: 644, type: !102)
!16863 = !DILocalVariable(name: "p2", arg: 6, scope: !16850, file: !3051, line: 644, type: !102)
!16864 = !DILocalVariable(name: "p3", arg: 7, scope: !16850, file: !3051, line: 644, type: !102)
!16865 = !DILocalVariable(name: "prio", arg: 8, scope: !16850, file: !3051, line: 645, type: !103)
!16866 = !DILocalVariable(name: "options", arg: 9, scope: !16850, file: !3051, line: 645, type: !108)
!16867 = !DILocalVariable(name: "delay", arg: 10, scope: !16850, file: !3051, line: 645, type: !16853)
!16868 = !DILocation(line: 0, scope: !16850)
!16869 = !DILocation(line: 1031, column: 3, scope: !16581, inlinedAt: !16870)
!16870 = distinct !DILocation(line: 48, column: 10, scope: !16585, inlinedAt: !16871)
!16871 = distinct !DILocation(line: 647, column: 2, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16873, file: !3051, line: 647, column: 2)
!16873 = distinct !DILexicalBlock(scope: !16850, file: !3051, line: 647, column: 2)
!16874 = !DILocation(line: 0, scope: !16581, inlinedAt: !16870)
!16875 = !DILocation(line: 48, column: 9, scope: !16585, inlinedAt: !16871)
!16876 = !DILocation(line: 647, column: 2, scope: !16873)
!16877 = !DILocation(line: 647, column: 2, scope: !16878)
!16878 = distinct !DILexicalBlock(scope: !16872, file: !3051, line: 647, column: 2)
!16879 = !DILocation(line: 649, column: 2, scope: !16850)
!16880 = !DILocation(line: 652, column: 7, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16850, file: !3051, line: 652, column: 6)
!16882 = !DILocation(line: 652, column: 6, scope: !16850)
!16883 = !DILocation(line: 653, column: 3, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16881, file: !3051, line: 652, column: 39)
!16885 = !DILocation(line: 654, column: 2, scope: !16884)
!16886 = !DILocation(line: 656, column: 2, scope: !16850)
!16887 = distinct !DISubprogram(name: "schedule_new_thread", scope: !3051, file: !3051, line: 401, type: !16888, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16890)
!16888 = !DISubroutineType(types: !16889)
!16889 = !{null, !3055, !16853}
!16890 = !{!16891, !16892}
!16891 = !DILocalVariable(name: "thread", arg: 1, scope: !16887, file: !3051, line: 401, type: !3055)
!16892 = !DILocalVariable(name: "delay", arg: 2, scope: !16887, file: !3051, line: 401, type: !16853)
!16893 = !DILocation(line: 0, scope: !16887)
!16894 = !DILocation(line: 404, column: 6, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16887, file: !3051, line: 404, column: 6)
!16896 = !DILocation(line: 404, column: 6, scope: !16887)
!16897 = !DILocation(line: 405, column: 3, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16895, file: !3051, line: 404, column: 38)
!16899 = !DILocation(line: 406, column: 2, scope: !16898)
!16900 = !DILocation(line: 407, column: 3, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16895, file: !3051, line: 406, column: 9)
!16902 = !DILocation(line: 413, column: 1, scope: !16887)
!16903 = distinct !DISubprogram(name: "k_thread_start", scope: !4485, file: !4485, line: 205, type: !16904, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16906)
!16904 = !DISubroutineType(types: !16905)
!16905 = !{null, !3054}
!16906 = !{!16907}
!16907 = !DILocalVariable(name: "thread", arg: 1, scope: !16903, file: !4485, line: 205, type: !3054)
!16908 = !DILocation(line: 0, scope: !16903)
!16909 = !DILocation(line: 214, column: 2, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16903, file: !4485, line: 214, column: 2)
!16911 = !{i64 2155095044}
!16912 = !DILocation(line: 215, column: 2, scope: !16903)
!16913 = !DILocation(line: 216, column: 1, scope: !16903)
!16914 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !16811, file: !16811, line: 47, type: !16888, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16915)
!16915 = !{!16916, !16917}
!16916 = !DILocalVariable(name: "thread", arg: 1, scope: !16914, file: !16811, line: 47, type: !3055)
!16917 = !DILocalVariable(name: "ticks", arg: 2, scope: !16914, file: !16811, line: 47, type: !16853)
!16918 = !DILocation(line: 0, scope: !16914)
!16919 = !DILocation(line: 49, column: 30, scope: !16914)
!16920 = !DILocation(line: 49, column: 2, scope: !16914)
!16921 = !DILocation(line: 50, column: 1, scope: !16914)
!16922 = distinct !DISubprogram(name: "z_init_static_threads", scope: !3051, file: !3051, line: 748, type: !333, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16923)
!16923 = !{!16924, !16941}
!16924 = !DILocalVariable(name: "thread_data", scope: !16925, file: !3051, line: 750, type: !16926)
!16925 = distinct !DILexicalBlock(scope: !16922, file: !3051, line: 750, column: 2)
!16926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16927, size: 32)
!16927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !16928)
!16928 = !{!16929, !16930, !16931, !16932, !16933, !16934, !16935, !16936, !16937, !16938, !16939, !16940}
!16929 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !16927, file: !124, line: 621, baseType: !3055, size: 32)
!16930 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !16927, file: !124, line: 622, baseType: !16694, size: 32, offset: 32)
!16931 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !16927, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!16932 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !16927, file: !124, line: 624, baseType: !320, size: 32, offset: 96)
!16933 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !16927, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!16934 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !16927, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!16935 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !16927, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!16936 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !16927, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!16937 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !16927, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!16938 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !16927, file: !124, line: 630, baseType: !330, size: 32, offset: 288)
!16939 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !16927, file: !124, line: 631, baseType: !332, size: 32, offset: 320)
!16940 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !16927, file: !124, line: 632, baseType: !336, size: 32, offset: 352)
!16941 = !DILocalVariable(name: "thread_data", scope: !16942, file: !3051, line: 781, type: !16926)
!16942 = distinct !DILexicalBlock(scope: !16922, file: !3051, line: 781, column: 2)
!16943 = !DILocation(line: 0, scope: !16925)
!16944 = !DILocation(line: 750, column: 2, scope: !16945)
!16945 = distinct !DILexicalBlock(scope: !16946, file: !3051, line: 750, column: 2)
!16946 = distinct !DILexicalBlock(scope: !16947, file: !3051, line: 750, column: 2)
!16947 = distinct !DILexicalBlock(scope: !16925, file: !3051, line: 750, column: 2)
!16948 = !DILocation(line: 750, column: 2, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16950, file: !3051, line: 750, column: 2)
!16950 = distinct !DILexicalBlock(scope: !16945, file: !3051, line: 750, column: 2)
!16951 = !DILocation(line: 750, column: 2, scope: !16946)
!16952 = !DILocation(line: 750, column: 2, scope: !16925)
!16953 = !DILocation(line: 780, column: 2, scope: !16922)
!16954 = !DILocation(line: 0, scope: !16942)
!16955 = !DILocation(line: 781, column: 2, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16957, file: !3051, line: 781, column: 2)
!16957 = distinct !DILexicalBlock(scope: !16958, file: !3051, line: 781, column: 2)
!16958 = distinct !DILexicalBlock(scope: !16942, file: !3051, line: 781, column: 2)
!16959 = !DILocation(line: 752, column: 17, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16947, file: !3051, line: 750, column: 38)
!16961 = !DILocation(line: 753, column: 17, scope: !16960)
!16962 = !DILocation(line: 754, column: 17, scope: !16960)
!16963 = !DILocation(line: 755, column: 17, scope: !16960)
!16964 = !DILocation(line: 756, column: 17, scope: !16960)
!16965 = !DILocation(line: 757, column: 17, scope: !16960)
!16966 = !DILocation(line: 758, column: 17, scope: !16960)
!16967 = !DILocation(line: 759, column: 17, scope: !16960)
!16968 = !DILocation(line: 760, column: 17, scope: !16960)
!16969 = !DILocation(line: 751, column: 3, scope: !16960)
!16970 = !DILocation(line: 763, column: 16, scope: !16960)
!16971 = !DILocation(line: 763, column: 29, scope: !16960)
!16972 = !DILocation(line: 763, column: 39, scope: !16960)
!16973 = !DILocation(line: 750, column: 2, scope: !16947)
!16974 = !DILocation(line: 750, column: 2, scope: !16950)
!16975 = distinct !{!16975, !16952, !16976}
!16976 = !DILocation(line: 764, column: 2, scope: !16925)
!16977 = !DILocation(line: 781, column: 2, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16979, file: !3051, line: 781, column: 2)
!16979 = distinct !DILexicalBlock(scope: !16956, file: !3051, line: 781, column: 2)
!16980 = !DILocation(line: 781, column: 2, scope: !16957)
!16981 = !DILocation(line: 781, column: 2, scope: !16942)
!16982 = !DILocation(line: 787, column: 2, scope: !16922)
!16983 = !DILocation(line: 788, column: 1, scope: !16922)
!16984 = !DILocation(line: 782, column: 20, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16986, file: !3051, line: 782, column: 7)
!16986 = distinct !DILexicalBlock(scope: !16958, file: !3051, line: 781, column: 38)
!16987 = !DILocation(line: 782, column: 31, scope: !16985)
!16988 = !DILocation(line: 782, column: 7, scope: !16986)
!16989 = !DILocation(line: 783, column: 37, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16985, file: !3051, line: 782, column: 51)
!16991 = !DILocation(line: 784, column: 10, scope: !16990)
!16992 = !DILocation(line: 783, column: 4, scope: !16990)
!16993 = !DILocation(line: 785, column: 3, scope: !16990)
!16994 = !DILocation(line: 781, column: 2, scope: !16958)
!16995 = !DILocation(line: 781, column: 2, scope: !16979)
!16996 = distinct !{!16996, !16981, !16997}
!16997 = !DILocation(line: 786, column: 2, scope: !16942)
!16998 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !4443, file: !4443, line: 403, type: !4444, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !16999)
!16999 = !{!17000}
!17000 = !DILocalVariable(name: "t", arg: 1, scope: !16998, file: !4443, line: 403, type: !109)
!17001 = !DILocation(line: 0, scope: !16998)
!17002 = !DILocalVariable(name: "t", arg: 1, scope: !17003, file: !4443, line: 102, type: !109)
!17003 = distinct !DISubprogram(name: "z_tmcvt", scope: !4443, file: !4443, line: 102, type: !4451, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17004)
!17004 = !{!17002, !17005, !17006, !17007, !17008, !17009, !17010, !17011, !17012, !17013, !17014}
!17005 = !DILocalVariable(name: "from_hz", arg: 2, scope: !17003, file: !4443, line: 102, type: !108)
!17006 = !DILocalVariable(name: "to_hz", arg: 3, scope: !17003, file: !4443, line: 103, type: !108)
!17007 = !DILocalVariable(name: "const_hz", arg: 4, scope: !17003, file: !4443, line: 103, type: !119)
!17008 = !DILocalVariable(name: "result32", arg: 5, scope: !17003, file: !4443, line: 104, type: !119)
!17009 = !DILocalVariable(name: "round_up", arg: 6, scope: !17003, file: !4443, line: 104, type: !119)
!17010 = !DILocalVariable(name: "round_off", arg: 7, scope: !17003, file: !4443, line: 105, type: !119)
!17011 = !DILocalVariable(name: "mul_ratio", scope: !17003, file: !4443, line: 107, type: !119)
!17012 = !DILocalVariable(name: "div_ratio", scope: !17003, file: !4443, line: 109, type: !119)
!17013 = !DILocalVariable(name: "off", scope: !17003, file: !4443, line: 116, type: !109)
!17014 = !DILocalVariable(name: "rdivisor", scope: !17015, file: !4443, line: 119, type: !108)
!17015 = distinct !DILexicalBlock(scope: !17016, file: !4443, line: 118, column: 18)
!17016 = distinct !DILexicalBlock(scope: !17003, file: !4443, line: 118, column: 6)
!17017 = !DILocation(line: 0, scope: !17003, inlinedAt: !17018)
!17018 = distinct !DILocation(line: 406, column: 9, scope: !16998)
!17019 = !DILocation(line: 145, column: 13, scope: !17020, inlinedAt: !17018)
!17020 = distinct !DILexicalBlock(scope: !17021, file: !4443, line: 144, column: 10)
!17021 = distinct !DILexicalBlock(scope: !17022, file: !4443, line: 142, column: 7)
!17022 = distinct !DILexicalBlock(scope: !17023, file: !4443, line: 141, column: 24)
!17023 = distinct !DILexicalBlock(scope: !17024, file: !4443, line: 141, column: 13)
!17024 = distinct !DILexicalBlock(scope: !17003, file: !4443, line: 134, column: 6)
!17025 = !DILocation(line: 406, column: 2, scope: !16998)
!17026 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !3051, file: !3051, line: 817, type: !5592, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17027)
!17027 = !{!17028, !17029, !17030, !17031}
!17028 = !DILocalVariable(name: "entry", arg: 1, scope: !17026, file: !3051, line: 817, type: !320)
!17029 = !DILocalVariable(name: "p1", arg: 2, scope: !17026, file: !3051, line: 818, type: !102)
!17030 = !DILocalVariable(name: "p2", arg: 3, scope: !17026, file: !3051, line: 818, type: !102)
!17031 = !DILocalVariable(name: "p3", arg: 4, scope: !17026, file: !3051, line: 818, type: !102)
!17032 = !DILocation(line: 0, scope: !17026)
!17033 = !DILocation(line: 822, column: 2, scope: !17026)
!17034 = !DILocation(line: 822, column: 17, scope: !17026)
!17035 = !DILocation(line: 822, column: 30, scope: !17026)
!17036 = !DILocation(line: 823, column: 2, scope: !17026)
!17037 = !DILocation(line: 845, column: 2, scope: !17026)
!17038 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !3051, file: !3051, line: 853, type: !17039, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17042)
!17039 = !DISubroutineType(types: !17040)
!17040 = !{!119, !17041}
!17041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!17042 = !{!17043, !17044}
!17043 = !DILocalVariable(name: "l", arg: 1, scope: !17038, file: !3051, line: 853, type: !17041)
!17044 = !DILocalVariable(name: "thread_cpu", scope: !17038, file: !3051, line: 855, type: !22)
!17045 = !DILocation(line: 0, scope: !17038)
!17046 = !DILocation(line: 855, column: 28, scope: !17038)
!17047 = !DILocation(line: 857, column: 17, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17038, file: !3051, line: 857, column: 6)
!17049 = !DILocation(line: 857, column: 6, scope: !17038)
!17050 = !DILocation(line: 858, column: 19, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !17052, file: !3051, line: 858, column: 7)
!17052 = distinct !DILexicalBlock(scope: !17048, file: !3051, line: 857, column: 24)
!17053 = !DILocation(line: 858, column: 42, scope: !17051)
!17054 = !DILocation(line: 858, column: 28, scope: !17051)
!17055 = !DILocation(line: 858, column: 25, scope: !17051)
!17056 = !DILocation(line: 858, column: 7, scope: !17052)
!17057 = !DILocation(line: 862, column: 2, scope: !17038)
!17058 = !DILocation(line: 863, column: 1, scope: !17038)
!17059 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !3051, file: !3051, line: 865, type: !17039, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17060)
!17060 = !{!17061}
!17061 = !DILocalVariable(name: "l", arg: 1, scope: !17059, file: !3051, line: 865, type: !17041)
!17062 = !DILocation(line: 0, scope: !17059)
!17063 = !DILocation(line: 867, column: 9, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17059, file: !3051, line: 867, column: 6)
!17065 = !DILocation(line: 867, column: 38, scope: !17064)
!17066 = !DILocation(line: 867, column: 24, scope: !17064)
!17067 = !DILocation(line: 867, column: 54, scope: !17064)
!17068 = !DILocation(line: 867, column: 43, scope: !17064)
!17069 = !DILocation(line: 867, column: 41, scope: !17064)
!17070 = !DILocation(line: 867, column: 20, scope: !17064)
!17071 = !DILocation(line: 867, column: 6, scope: !17059)
!17072 = !DILocation(line: 870, column: 16, scope: !17059)
!17073 = !DILocation(line: 871, column: 2, scope: !17059)
!17074 = !DILocation(line: 872, column: 1, scope: !17059)
!17075 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !3051, file: !3051, line: 874, type: !17076, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17078)
!17076 = !DISubroutineType(types: !17077)
!17077 = !{null, !17041}
!17078 = !{!17079}
!17079 = !DILocalVariable(name: "l", arg: 1, scope: !17075, file: !3051, line: 874, type: !17041)
!17080 = !DILocation(line: 0, scope: !17075)
!17081 = !DILocation(line: 876, column: 32, scope: !17075)
!17082 = !DILocation(line: 876, column: 18, scope: !17075)
!17083 = !DILocation(line: 876, column: 48, scope: !17075)
!17084 = !DILocation(line: 876, column: 37, scope: !17075)
!17085 = !DILocation(line: 876, column: 35, scope: !17075)
!17086 = !DILocation(line: 876, column: 5, scope: !17075)
!17087 = !DILocation(line: 876, column: 16, scope: !17075)
!17088 = !DILocation(line: 877, column: 1, scope: !17075)
!17089 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !3051, file: !3051, line: 888, type: !17090, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17092)
!17090 = !DISubroutineType(types: !17091)
!17091 = !{!103, !3055}
!17092 = !{!17093}
!17093 = !DILocalVariable(name: "thread", arg: 1, scope: !17089, file: !3051, line: 888, type: !3055)
!17094 = !DILocation(line: 0, scope: !17089)
!17095 = !DILocation(line: 893, column: 2, scope: !17089)
!17096 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !3051, file: !3051, line: 897, type: !17097, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17099)
!17097 = !DISubroutineType(types: !17098)
!17098 = !{!103, !3055, !32}
!17099 = !{!17100, !17101}
!17100 = !DILocalVariable(name: "thread", arg: 1, scope: !17096, file: !3051, line: 897, type: !3055)
!17101 = !DILocalVariable(name: "options", arg: 2, scope: !17096, file: !3051, line: 897, type: !32)
!17102 = !DILocation(line: 0, scope: !17096)
!17103 = !DILocation(line: 902, column: 2, scope: !17096)
!17104 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !3051, file: !3051, line: 1072, type: !17105, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17110)
!17105 = !DISubroutineType(types: !17106)
!17106 = !{!103, !3054, !17107}
!17107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17108, size: 32)
!17108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !195, line: 234, baseType: !17109)
!17109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !195, line: 192, elements: !2953)
!17110 = !{!17111, !17112}
!17111 = !DILocalVariable(name: "thread", arg: 1, scope: !17104, file: !3051, line: 1072, type: !3054)
!17112 = !DILocalVariable(name: "stats", arg: 2, scope: !17104, file: !3051, line: 1073, type: !17107)
!17113 = !DILocation(line: 0, scope: !17104)
!17114 = !DILocation(line: 1075, column: 14, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17104, file: !3051, line: 1075, column: 6)
!17116 = !DILocation(line: 1075, column: 23, scope: !17115)
!17117 = !DILocation(line: 1086, column: 1, scope: !17104)
!17118 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !3051, file: !3051, line: 1088, type: !17119, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3157, retainedNodes: !17121)
!17119 = !DISubroutineType(types: !17120)
!17120 = !{!103, !17107}
!17121 = !{!17122}
!17122 = !DILocalVariable(name: "stats", arg: 1, scope: !17118, file: !3051, line: 1088, type: !17107)
!17123 = !DILocation(line: 0, scope: !17118)
!17124 = !DILocation(line: 1094, column: 12, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17118, file: !3051, line: 1094, column: 6)
!17126 = !DILocation(line: 1120, column: 1, scope: !17118)
!17127 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !17128, file: !17128, line: 20, type: !333, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4049, retainedNodes: !2953)
!17128 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17129 = !DILocation(line: 30, column: 2, scope: !17127)
!17130 = !DILocation(line: 31, column: 1, scope: !17127)
!17131 = distinct !DISubprogram(name: "idle", scope: !17128, file: !17128, line: 33, type: !322, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4049, retainedNodes: !17132)
!17132 = !{!17133, !17134, !17135}
!17133 = !DILocalVariable(name: "unused1", arg: 1, scope: !17131, file: !17128, line: 33, type: !102)
!17134 = !DILocalVariable(name: "unused2", arg: 2, scope: !17131, file: !17128, line: 33, type: !102)
!17135 = !DILocalVariable(name: "unused3", arg: 3, scope: !17131, file: !17128, line: 33, type: !102)
!17136 = !DILocation(line: 0, scope: !17131)
!17137 = !DILocation(line: 39, column: 2, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17139, file: !17128, line: 39, column: 2)
!17139 = distinct !DILexicalBlock(scope: !17131, file: !17128, line: 39, column: 2)
!17140 = !DILocation(line: 39, column: 2, scope: !17139)
!17141 = !DILocation(line: 39, column: 2, scope: !17142)
!17142 = distinct !DILexicalBlock(scope: !17138, file: !17128, line: 39, column: 2)
!17143 = !DILocation(line: 55, column: 2, scope: !17144, inlinedAt: !17148)
!17144 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4049, retainedNodes: !17145)
!17145 = !{!17146, !17147}
!17146 = !DILocalVariable(name: "key", scope: !17144, file: !7985, line: 44, type: !32)
!17147 = !DILocalVariable(name: "tmp", scope: !17144, file: !7985, line: 53, type: !32)
!17148 = distinct !DILocation(line: 62, column: 10, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17131, file: !17128, line: 41, column: 15)
!17150 = !{i64 2282001}
!17151 = !DILocation(line: 0, scope: !17144, inlinedAt: !17148)
!17152 = !DILocation(line: 86, column: 3, scope: !17149)
!17153 = !DILocation(line: 41, column: 2, scope: !17131)
!17154 = distinct !{!17154, !17153, !17155}
!17155 = !DILocation(line: 105, column: 2, scope: !17131)
!17156 = distinct !DISubprogram(name: "k_cpu_idle", scope: !124, file: !124, line: 5627, type: !333, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4049, retainedNodes: !2953)
!17157 = !DILocation(line: 5629, column: 2, scope: !17156)
!17158 = !DILocation(line: 5630, column: 1, scope: !17156)
!17159 = !DISubprogram(name: "arch_cpu_idle", scope: !313, file: !313, line: 167, type: !333, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!17160 = distinct !DISubprogram(name: "k_msgq_init", scope: !17161, file: !17161, line: 35, type: !17162, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17177)
!17161 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17162 = !DISubroutineType(types: !17163)
!17163 = !{null, !17164, !157, !153, !108}
!17164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17165, size: 32)
!17165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !17166)
!17166 = !{!17167, !17168, !17169, !17170, !17171, !17172, !17173, !17174, !17175, !17176}
!17167 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17165, file: !124, line: 4206, baseType: !4087, size: 64)
!17168 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17165, file: !124, line: 4208, baseType: !4149, size: 32, offset: 64)
!17169 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !17165, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!17170 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !17165, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!17171 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !17165, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!17172 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !17165, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!17173 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !17165, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!17174 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !17165, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!17175 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !17165, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!17176 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !17165, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!17177 = !{!17178, !17179, !17180, !17181}
!17178 = !DILocalVariable(name: "msgq", arg: 1, scope: !17160, file: !17161, line: 35, type: !17164)
!17179 = !DILocalVariable(name: "buffer", arg: 2, scope: !17160, file: !17161, line: 35, type: !157)
!17180 = !DILocalVariable(name: "msg_size", arg: 3, scope: !17160, file: !17161, line: 35, type: !153)
!17181 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !17160, file: !17161, line: 36, type: !108)
!17182 = !DILocation(line: 0, scope: !17160)
!17183 = !DILocation(line: 38, column: 8, scope: !17160)
!17184 = !DILocation(line: 38, column: 17, scope: !17160)
!17185 = !DILocation(line: 39, column: 8, scope: !17160)
!17186 = !DILocation(line: 39, column: 17, scope: !17160)
!17187 = !DILocation(line: 40, column: 8, scope: !17160)
!17188 = !DILocation(line: 40, column: 21, scope: !17160)
!17189 = !DILocation(line: 41, column: 40, scope: !17160)
!17190 = !DILocation(line: 41, column: 28, scope: !17160)
!17191 = !DILocation(line: 41, column: 8, scope: !17160)
!17192 = !DILocation(line: 41, column: 19, scope: !17160)
!17193 = !DILocation(line: 42, column: 8, scope: !17160)
!17194 = !DILocation(line: 42, column: 17, scope: !17160)
!17195 = !DILocation(line: 43, column: 8, scope: !17160)
!17196 = !DILocation(line: 43, column: 18, scope: !17160)
!17197 = !DILocation(line: 44, column: 8, scope: !17160)
!17198 = !DILocation(line: 44, column: 18, scope: !17160)
!17199 = !DILocation(line: 45, column: 8, scope: !17160)
!17200 = !DILocation(line: 45, column: 14, scope: !17160)
!17201 = !DILocation(line: 46, column: 22, scope: !17160)
!17202 = !DILocation(line: 46, column: 2, scope: !17160)
!17203 = !DILocation(line: 47, column: 15, scope: !17160)
!17204 = !DILocation(line: 55, column: 1, scope: !17160)
!17205 = distinct !DISubprogram(name: "z_waitq_init", scope: !16240, file: !16240, line: 47, type: !17206, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17208)
!17206 = !DISubroutineType(types: !17207)
!17207 = !{null, !4086}
!17208 = !{!17209}
!17209 = !DILocalVariable(name: "w", arg: 1, scope: !17205, file: !16240, line: 47, type: !4086)
!17210 = !DILocation(line: 0, scope: !17205)
!17211 = !DILocation(line: 49, column: 21, scope: !17205)
!17212 = !DILocation(line: 49, column: 2, scope: !17205)
!17213 = !DILocation(line: 50, column: 1, scope: !17205)
!17214 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !17215, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17218)
!17215 = !DISubroutineType(types: !17216)
!17216 = !{null, !17217}
!17217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 32)
!17218 = !{!17219}
!17219 = !DILocalVariable(name: "list", arg: 1, scope: !17214, file: !133, line: 197, type: !17217)
!17220 = !DILocation(line: 0, scope: !17214)
!17221 = !DILocation(line: 199, column: 8, scope: !17214)
!17222 = !DILocation(line: 199, column: 13, scope: !17214)
!17223 = !DILocation(line: 200, column: 8, scope: !17214)
!17224 = !DILocation(line: 200, column: 13, scope: !17214)
!17225 = !DILocation(line: 201, column: 1, scope: !17214)
!17226 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !17161, file: !17161, line: 57, type: !17227, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17229)
!17227 = !DISubroutineType(types: !17228)
!17228 = !{!103, !17164, !153, !108}
!17229 = !{!17230, !17231, !17232, !17233, !17234, !17235}
!17230 = !DILocalVariable(name: "msgq", arg: 1, scope: !17226, file: !17161, line: 57, type: !17164)
!17231 = !DILocalVariable(name: "msg_size", arg: 2, scope: !17226, file: !17161, line: 57, type: !153)
!17232 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !17226, file: !17161, line: 58, type: !108)
!17233 = !DILocalVariable(name: "buffer", scope: !17226, file: !17161, line: 60, type: !102)
!17234 = !DILocalVariable(name: "ret", scope: !17226, file: !17161, line: 61, type: !103)
!17235 = !DILocalVariable(name: "total_size", scope: !17226, file: !17161, line: 62, type: !153)
!17236 = !DILocation(line: 0, scope: !17226)
!17237 = !DILocation(line: 62, column: 2, scope: !17226)
!17238 = !DILocation(line: 66, column: 6, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17226, file: !17161, line: 66, column: 6)
!17240 = !DILocation(line: 66, column: 6, scope: !17226)
!17241 = !DILocation(line: 69, column: 28, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17239, file: !17161, line: 68, column: 9)
!17243 = !DILocation(line: 69, column: 12, scope: !17242)
!17244 = !DILocation(line: 70, column: 14, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17242, file: !17161, line: 70, column: 7)
!17246 = !DILocation(line: 70, column: 7, scope: !17242)
!17247 = !DILocation(line: 71, column: 4, scope: !17248)
!17248 = distinct !DILexicalBlock(scope: !17245, file: !17161, line: 70, column: 23)
!17249 = !DILocation(line: 72, column: 10, scope: !17248)
!17250 = !DILocation(line: 72, column: 16, scope: !17248)
!17251 = !DILocation(line: 74, column: 3, scope: !17248)
!17252 = !DILocation(line: 0, scope: !17239)
!17253 = !DILocation(line: 82, column: 1, scope: !17226)
!17254 = !DILocation(line: 81, column: 2, scope: !17226)
!17255 = distinct !DISubprogram(name: "size_mul_overflow", scope: !17256, file: !17256, line: 105, type: !17257, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17259)
!17256 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17257 = !DISubroutineType(types: !17258)
!17258 = !{!119, !153, !153, !3538}
!17259 = !{!17260, !17261, !17262}
!17260 = !DILocalVariable(name: "a", arg: 1, scope: !17255, file: !17256, line: 105, type: !153)
!17261 = !DILocalVariable(name: "b", arg: 2, scope: !17255, file: !17256, line: 105, type: !153)
!17262 = !DILocalVariable(name: "result", arg: 3, scope: !17255, file: !17256, line: 105, type: !3538)
!17263 = !DILocation(line: 0, scope: !17255)
!17264 = !DILocation(line: 107, column: 9, scope: !17255)
!17265 = !DILocation(line: 107, column: 2, scope: !17255)
!17266 = distinct !DISubprogram(name: "z_thread_malloc", scope: !16471, file: !16471, line: 102, type: !17267, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17268)
!17267 = !DISubroutineType(types: !4030)
!17268 = !{!17269}
!17269 = !DILocalVariable(name: "size", arg: 1, scope: !17266, file: !16471, line: 102, type: !153)
!17270 = !DILocation(line: 0, scope: !17266)
!17271 = !DILocation(line: 104, column: 9, scope: !17266)
!17272 = !DILocation(line: 104, column: 2, scope: !17266)
!17273 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !16471, file: !16471, line: 87, type: !17274, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!17274 = !DISubroutineType(types: !17275)
!17275 = !{!102, !153, !153}
!17276 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !17161, file: !17161, line: 95, type: !17277, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17279)
!17277 = !DISubroutineType(types: !17278)
!17278 = !{!103, !17164}
!17279 = !{!17280}
!17280 = !DILocalVariable(name: "msgq", arg: 1, scope: !17276, file: !17161, line: 95, type: !17164)
!17281 = !DILocation(line: 0, scope: !17276)
!17282 = !DILocation(line: 99, column: 2, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17276, file: !17161, line: 99, column: 2)
!17284 = !DILocation(line: 99, column: 2, scope: !17276)
!17285 = !DILocation(line: 105, column: 13, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17276, file: !17161, line: 105, column: 6)
!17287 = !DILocation(line: 105, column: 19, scope: !17286)
!17288 = !DILocation(line: 105, column: 40, scope: !17286)
!17289 = !DILocation(line: 105, column: 6, scope: !17276)
!17290 = !DILocation(line: 106, column: 16, scope: !17291)
!17291 = distinct !DILexicalBlock(scope: !17286, file: !17161, line: 105, column: 47)
!17292 = !DILocation(line: 106, column: 3, scope: !17291)
!17293 = !DILocation(line: 107, column: 15, scope: !17291)
!17294 = !DILocation(line: 108, column: 2, scope: !17291)
!17295 = !DILocation(line: 113, column: 1, scope: !17276)
!17296 = distinct !DISubprogram(name: "z_waitq_head", scope: !16240, file: !16240, line: 52, type: !17297, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17299)
!17297 = !DISubroutineType(types: !17298)
!17298 = !{!4069, !4086}
!17299 = !{!17300}
!17300 = !DILocalVariable(name: "w", arg: 1, scope: !17296, file: !16240, line: 52, type: !4086)
!17301 = !DILocation(line: 0, scope: !17296)
!17302 = !DILocation(line: 54, column: 52, scope: !17296)
!17303 = !DILocation(line: 54, column: 28, scope: !17296)
!17304 = !DILocation(line: 54, column: 9, scope: !17296)
!17305 = !DILocation(line: 54, column: 2, scope: !17296)
!17306 = !DISubprogram(name: "k_free", scope: !124, file: !124, line: 5272, type: !8243, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!17307 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !17308, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17310)
!17308 = !DISubroutineType(types: !17309)
!17309 = !{!4054, !17217}
!17310 = !{!17311}
!17311 = !DILocalVariable(name: "list", arg: 1, scope: !17307, file: !133, line: 294, type: !17217)
!17312 = !DILocation(line: 0, scope: !17307)
!17313 = !DILocation(line: 296, column: 9, scope: !17307)
!17314 = !DILocation(line: 296, column: 49, scope: !17307)
!17315 = !DILocation(line: 296, column: 2, scope: !17307)
!17316 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !17317, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17319)
!17317 = !DISubroutineType(types: !17318)
!17318 = !{!119, !17217}
!17319 = !{!17320}
!17320 = !DILocalVariable(name: "list", arg: 1, scope: !17316, file: !133, line: 266, type: !17217)
!17321 = !DILocation(line: 0, scope: !17316)
!17322 = !DILocation(line: 268, column: 15, scope: !17316)
!17323 = !DILocation(line: 268, column: 20, scope: !17316)
!17324 = !DILocation(line: 268, column: 2, scope: !17316)
!17325 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !17161, file: !17161, line: 116, type: !17326, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17332)
!17326 = !DISubroutineType(types: !17327)
!17327 = !{!103, !17164, !13, !17328}
!17328 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17329)
!17329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17330)
!17330 = !{!17331}
!17331 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17329, file: !105, line: 66, baseType: !104, size: 64)
!17332 = !{!17333, !17334, !17335, !17336, !17337, !17342}
!17333 = !DILocalVariable(name: "msgq", arg: 1, scope: !17325, file: !17161, line: 116, type: !17164)
!17334 = !DILocalVariable(name: "data", arg: 2, scope: !17325, file: !17161, line: 116, type: !13)
!17335 = !DILocalVariable(name: "timeout", arg: 3, scope: !17325, file: !17161, line: 116, type: !17328)
!17336 = !DILocalVariable(name: "pending_thread", scope: !17325, file: !17161, line: 120, type: !4069)
!17337 = !DILocalVariable(name: "key", scope: !17325, file: !17161, line: 121, type: !17338)
!17338 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !17339)
!17339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !17340)
!17340 = !{!17341}
!17341 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17339, file: !149, line: 33, baseType: !103, size: 32)
!17342 = !DILocalVariable(name: "result", scope: !17325, file: !17161, line: 122, type: !103)
!17343 = !DILocation(line: 0, scope: !17325)
!17344 = !DILocation(line: 1031, column: 3, scope: !17345, inlinedAt: !17348)
!17345 = distinct !DISubprogram(name: "__get_IPSR", scope: !8306, file: !8306, line: 1027, type: !8393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17346)
!17346 = !{!17347}
!17347 = !DILocalVariable(name: "result", scope: !17345, file: !8306, line: 1029, type: !108)
!17348 = distinct !DILocation(line: 48, column: 10, scope: !17349, inlinedAt: !17350)
!17349 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9356, file: !9356, line: 46, type: !9357, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !2953)
!17350 = distinct !DILocation(line: 118, column: 2, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17352, file: !17161, line: 118, column: 2)
!17352 = distinct !DILexicalBlock(scope: !17325, file: !17161, line: 118, column: 2)
!17353 = !{i64 3734572}
!17354 = !DILocation(line: 0, scope: !17345, inlinedAt: !17348)
!17355 = !DILocation(line: 48, column: 9, scope: !17349, inlinedAt: !17350)
!17356 = !DILocation(line: 118, column: 2, scope: !17351)
!17357 = !DILocation(line: 118, column: 2, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17351, file: !17161, line: 118, column: 2)
!17359 = !DILocation(line: 124, column: 27, scope: !17325)
!17360 = !DILocalVariable(name: "l", arg: 1, scope: !17361, file: !149, line: 136, type: !17364)
!17361 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !17362, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17365)
!17362 = !DISubroutineType(types: !17363)
!17363 = !{!17338, !17364}
!17364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 32)
!17365 = !{!17360, !17366}
!17366 = !DILocalVariable(name: "k", scope: !17361, file: !149, line: 139, type: !17338)
!17367 = !DILocation(line: 0, scope: !17361, inlinedAt: !17368)
!17368 = distinct !DILocation(line: 124, column: 8, scope: !17325)
!17369 = !DILocation(line: 55, column: 2, scope: !17370, inlinedAt: !17374)
!17370 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17371)
!17371 = !{!17372, !17373}
!17372 = !DILocalVariable(name: "key", scope: !17370, file: !7985, line: 44, type: !32)
!17373 = !DILocalVariable(name: "tmp", scope: !17370, file: !7985, line: 53, type: !32)
!17374 = distinct !DILocation(line: 145, column: 10, scope: !17361, inlinedAt: !17368)
!17375 = !{i64 2288138}
!17376 = !DILocation(line: 0, scope: !17370, inlinedAt: !17374)
!17377 = !DILocation(line: 148, column: 2, scope: !17378, inlinedAt: !17368)
!17378 = distinct !DILexicalBlock(scope: !17379, file: !149, line: 148, column: 2)
!17379 = distinct !DILexicalBlock(scope: !17361, file: !149, line: 148, column: 2)
!17380 = !DILocation(line: 148, column: 2, scope: !17379, inlinedAt: !17368)
!17381 = !DILocation(line: 148, column: 2, scope: !17382, inlinedAt: !17368)
!17382 = distinct !DILexicalBlock(scope: !17378, file: !149, line: 148, column: 2)
!17383 = !DILocation(line: 160, column: 2, scope: !17361, inlinedAt: !17368)
!17384 = !DILocation(line: 128, column: 12, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17325, file: !17161, line: 128, column: 6)
!17386 = !DILocation(line: 128, column: 30, scope: !17385)
!17387 = !DILocation(line: 128, column: 22, scope: !17385)
!17388 = !DILocation(line: 128, column: 6, scope: !17325)
!17389 = !DILocation(line: 130, column: 49, scope: !17390)
!17390 = distinct !DILexicalBlock(scope: !17385, file: !17161, line: 128, column: 40)
!17391 = !DILocation(line: 130, column: 20, scope: !17390)
!17392 = !DILocation(line: 131, column: 22, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17390, file: !17161, line: 131, column: 7)
!17394 = !DILocation(line: 131, column: 7, scope: !17390)
!17395 = !DILocation(line: 135, column: 38, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17393, file: !17161, line: 131, column: 31)
!17397 = !DILocation(line: 136, column: 17, scope: !17396)
!17398 = !DILocation(line: 135, column: 10, scope: !17396)
!17399 = !DILocalVariable(name: "thread", arg: 1, scope: !17400, file: !16000, line: 65, type: !4069)
!17400 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !16000, file: !16000, line: 65, type: !17401, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17403)
!17401 = !DISubroutineType(types: !17402)
!17402 = !{null, !4069, !32}
!17403 = !{!17399, !17404}
!17404 = !DILocalVariable(name: "value", arg: 2, scope: !17400, file: !16000, line: 65, type: !32)
!17405 = !DILocation(line: 0, scope: !17400, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 138, column: 4, scope: !17396)
!17407 = !DILocation(line: 67, column: 15, scope: !17400, inlinedAt: !17406)
!17408 = !DILocation(line: 67, column: 33, scope: !17400, inlinedAt: !17406)
!17409 = !DILocation(line: 139, column: 4, scope: !17396)
!17410 = !DILocation(line: 140, column: 4, scope: !17396)
!17411 = !DILocation(line: 141, column: 4, scope: !17396)
!17412 = !DILocation(line: 144, column: 23, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17393, file: !17161, line: 142, column: 10)
!17414 = !DILocation(line: 144, column: 46, scope: !17413)
!17415 = !DILocation(line: 144, column: 10, scope: !17413)
!17416 = !DILocation(line: 145, column: 29, scope: !17413)
!17417 = !DILocation(line: 145, column: 20, scope: !17413)
!17418 = !DILocation(line: 146, column: 33, scope: !17419)
!17419 = distinct !DILexicalBlock(scope: !17413, file: !17161, line: 146, column: 8)
!17420 = !DILocation(line: 146, column: 24, scope: !17419)
!17421 = !DILocation(line: 146, column: 8, scope: !17413)
!17422 = !DILocation(line: 147, column: 29, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17419, file: !17161, line: 146, column: 45)
!17424 = !DILocation(line: 147, column: 21, scope: !17423)
!17425 = !DILocation(line: 148, column: 4, scope: !17423)
!17426 = !DILocation(line: 149, column: 19, scope: !17413)
!17427 = !DILocation(line: 155, column: 2, scope: !17390)
!17428 = !DILocation(line: 155, column: 13, scope: !17385)
!17429 = !DILocation(line: 162, column: 3, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17431, file: !17161, line: 158, column: 9)
!17431 = distinct !DILexicalBlock(scope: !17385, file: !17161, line: 155, column: 13)
!17432 = !DILocation(line: 162, column: 18, scope: !17430)
!17433 = !DILocation(line: 162, column: 28, scope: !17430)
!17434 = !DILocation(line: 164, column: 49, scope: !17430)
!17435 = !DILocation(line: 164, column: 12, scope: !17430)
!17436 = !DILocation(line: 166, column: 3, scope: !17430)
!17437 = !DILocation(line: 0, scope: !17385)
!17438 = !DILocalVariable(name: "key", arg: 2, scope: !17439, file: !149, line: 190, type: !17338)
!17439 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !17440, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17442)
!17440 = !DISubroutineType(types: !17441)
!17441 = !{null, !17364, !17338}
!17442 = !{!17443, !17438}
!17443 = !DILocalVariable(name: "l", arg: 1, scope: !17439, file: !149, line: 189, type: !17364)
!17444 = !DILocation(line: 0, scope: !17439, inlinedAt: !17445)
!17445 = distinct !DILocation(line: 171, column: 2, scope: !17325)
!17446 = !DILocation(line: 194, column: 2, scope: !17447, inlinedAt: !17445)
!17447 = distinct !DILexicalBlock(scope: !17448, file: !149, line: 194, column: 2)
!17448 = distinct !DILexicalBlock(scope: !17439, file: !149, line: 194, column: 2)
!17449 = !DILocation(line: 194, column: 2, scope: !17448, inlinedAt: !17445)
!17450 = !DILocation(line: 194, column: 2, scope: !17451, inlinedAt: !17445)
!17451 = distinct !DILexicalBlock(scope: !17447, file: !149, line: 194, column: 2)
!17452 = !DILocalVariable(name: "key", arg: 1, scope: !17453, file: !7985, line: 84, type: !32)
!17453 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17454)
!17454 = !{!17452}
!17455 = !DILocation(line: 0, scope: !17453, inlinedAt: !17456)
!17456 = distinct !DILocation(line: 215, column: 2, scope: !17439, inlinedAt: !17445)
!17457 = !DILocation(line: 95, column: 2, scope: !17453, inlinedAt: !17456)
!17458 = !{i64 2288955}
!17459 = !DILocation(line: 173, column: 2, scope: !17325)
!17460 = !DILocation(line: 174, column: 1, scope: !17325)
!17461 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !17161, file: !17161, line: 188, type: !17462, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17470)
!17462 = !DISubroutineType(types: !17463)
!17463 = !{null, !17164, !17464}
!17464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17465, size: 32)
!17465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !124, line: 4259, size: 96, elements: !17466)
!17466 = !{!17467, !17468, !17469}
!17467 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !17465, file: !124, line: 4261, baseType: !153, size: 32)
!17468 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !17465, file: !124, line: 4263, baseType: !108, size: 32, offset: 32)
!17469 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !17465, file: !124, line: 4265, baseType: !108, size: 32, offset: 64)
!17470 = !{!17471, !17472}
!17471 = !DILocalVariable(name: "msgq", arg: 1, scope: !17461, file: !17161, line: 188, type: !17164)
!17472 = !DILocalVariable(name: "attrs", arg: 2, scope: !17461, file: !17161, line: 188, type: !17464)
!17473 = !DILocation(line: 0, scope: !17461)
!17474 = !DILocation(line: 190, column: 26, scope: !17461)
!17475 = !DILocation(line: 190, column: 9, scope: !17461)
!17476 = !DILocation(line: 190, column: 18, scope: !17461)
!17477 = !DILocation(line: 191, column: 26, scope: !17461)
!17478 = !DILocation(line: 191, column: 9, scope: !17461)
!17479 = !DILocation(line: 191, column: 18, scope: !17461)
!17480 = !DILocation(line: 192, column: 27, scope: !17461)
!17481 = !DILocation(line: 192, column: 9, scope: !17461)
!17482 = !DILocation(line: 192, column: 19, scope: !17461)
!17483 = !DILocation(line: 193, column: 1, scope: !17461)
!17484 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !17161, file: !17161, line: 206, type: !17485, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17487)
!17485 = !DISubroutineType(types: !17486)
!17486 = !{!103, !17164, !102, !17328}
!17487 = !{!17488, !17489, !17490, !17491, !17492, !17493}
!17488 = !DILocalVariable(name: "msgq", arg: 1, scope: !17484, file: !17161, line: 206, type: !17164)
!17489 = !DILocalVariable(name: "data", arg: 2, scope: !17484, file: !17161, line: 206, type: !102)
!17490 = !DILocalVariable(name: "timeout", arg: 3, scope: !17484, file: !17161, line: 206, type: !17328)
!17491 = !DILocalVariable(name: "key", scope: !17484, file: !17161, line: 210, type: !17338)
!17492 = !DILocalVariable(name: "pending_thread", scope: !17484, file: !17161, line: 211, type: !4069)
!17493 = !DILocalVariable(name: "result", scope: !17484, file: !17161, line: 212, type: !103)
!17494 = !DILocation(line: 0, scope: !17484)
!17495 = !DILocation(line: 1031, column: 3, scope: !17345, inlinedAt: !17496)
!17496 = distinct !DILocation(line: 48, column: 10, scope: !17349, inlinedAt: !17497)
!17497 = distinct !DILocation(line: 208, column: 2, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17499, file: !17161, line: 208, column: 2)
!17499 = distinct !DILexicalBlock(scope: !17484, file: !17161, line: 208, column: 2)
!17500 = !DILocation(line: 0, scope: !17345, inlinedAt: !17496)
!17501 = !DILocation(line: 48, column: 9, scope: !17349, inlinedAt: !17497)
!17502 = !DILocation(line: 208, column: 2, scope: !17498)
!17503 = !DILocation(line: 208, column: 2, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17498, file: !17161, line: 208, column: 2)
!17505 = !DILocation(line: 214, column: 27, scope: !17484)
!17506 = !DILocation(line: 0, scope: !17361, inlinedAt: !17507)
!17507 = distinct !DILocation(line: 214, column: 8, scope: !17484)
!17508 = !DILocation(line: 55, column: 2, scope: !17370, inlinedAt: !17509)
!17509 = distinct !DILocation(line: 145, column: 10, scope: !17361, inlinedAt: !17507)
!17510 = !DILocation(line: 0, scope: !17370, inlinedAt: !17509)
!17511 = !DILocation(line: 148, column: 2, scope: !17378, inlinedAt: !17507)
!17512 = !DILocation(line: 148, column: 2, scope: !17379, inlinedAt: !17507)
!17513 = !DILocation(line: 148, column: 2, scope: !17382, inlinedAt: !17507)
!17514 = !DILocation(line: 160, column: 2, scope: !17361, inlinedAt: !17507)
!17515 = !DILocation(line: 218, column: 12, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17484, file: !17161, line: 218, column: 6)
!17517 = !DILocation(line: 218, column: 22, scope: !17516)
!17518 = !DILocation(line: 218, column: 6, scope: !17484)
!17519 = !DILocation(line: 220, column: 28, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17516, file: !17161, line: 218, column: 28)
!17521 = !DILocation(line: 220, column: 44, scope: !17520)
!17522 = !DILocation(line: 220, column: 9, scope: !17520)
!17523 = !DILocation(line: 221, column: 27, scope: !17520)
!17524 = !DILocation(line: 221, column: 18, scope: !17520)
!17525 = !DILocation(line: 222, column: 31, scope: !17526)
!17526 = distinct !DILexicalBlock(scope: !17520, file: !17161, line: 222, column: 7)
!17527 = !DILocation(line: 222, column: 22, scope: !17526)
!17528 = !DILocation(line: 222, column: 7, scope: !17520)
!17529 = !DILocation(line: 223, column: 27, scope: !17530)
!17530 = distinct !DILexicalBlock(scope: !17526, file: !17161, line: 222, column: 43)
!17531 = !DILocation(line: 223, column: 19, scope: !17530)
!17532 = !DILocation(line: 224, column: 3, scope: !17530)
!17533 = !DILocation(line: 225, column: 18, scope: !17520)
!17534 = !DILocation(line: 228, column: 49, scope: !17520)
!17535 = !DILocation(line: 228, column: 20, scope: !17520)
!17536 = !DILocation(line: 229, column: 22, scope: !17537)
!17537 = distinct !DILexicalBlock(scope: !17520, file: !17161, line: 229, column: 7)
!17538 = !DILocation(line: 229, column: 7, scope: !17520)
!17539 = !DILocation(line: 233, column: 23, scope: !17540)
!17540 = distinct !DILexicalBlock(scope: !17537, file: !17161, line: 229, column: 31)
!17541 = !DILocation(line: 233, column: 55, scope: !17540)
!17542 = !DILocation(line: 234, column: 17, scope: !17540)
!17543 = !DILocation(line: 233, column: 10, scope: !17540)
!17544 = !DILocation(line: 235, column: 29, scope: !17540)
!17545 = !DILocation(line: 235, column: 20, scope: !17540)
!17546 = !DILocation(line: 236, column: 33, scope: !17547)
!17547 = distinct !DILexicalBlock(scope: !17540, file: !17161, line: 236, column: 8)
!17548 = !DILocation(line: 236, column: 24, scope: !17547)
!17549 = !DILocation(line: 236, column: 8, scope: !17540)
!17550 = !DILocation(line: 237, column: 29, scope: !17551)
!17551 = distinct !DILexicalBlock(scope: !17547, file: !17161, line: 236, column: 45)
!17552 = !DILocation(line: 237, column: 21, scope: !17551)
!17553 = !DILocation(line: 238, column: 4, scope: !17551)
!17554 = !DILocation(line: 239, column: 19, scope: !17540)
!17555 = !DILocation(line: 0, scope: !17400, inlinedAt: !17556)
!17556 = distinct !DILocation(line: 242, column: 4, scope: !17540)
!17557 = !DILocation(line: 67, column: 15, scope: !17400, inlinedAt: !17556)
!17558 = !DILocation(line: 67, column: 33, scope: !17400, inlinedAt: !17556)
!17559 = !DILocation(line: 243, column: 4, scope: !17540)
!17560 = !DILocation(line: 244, column: 4, scope: !17540)
!17561 = !DILocation(line: 248, column: 4, scope: !17540)
!17562 = !DILocation(line: 251, column: 13, scope: !17516)
!17563 = !DILocation(line: 258, column: 3, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17565, file: !17161, line: 254, column: 9)
!17565 = distinct !DILexicalBlock(scope: !17516, file: !17161, line: 251, column: 13)
!17566 = !DILocation(line: 258, column: 18, scope: !17564)
!17567 = !DILocation(line: 258, column: 28, scope: !17564)
!17568 = !DILocation(line: 260, column: 49, scope: !17564)
!17569 = !DILocation(line: 260, column: 12, scope: !17564)
!17570 = !DILocation(line: 262, column: 3, scope: !17564)
!17571 = !DILocation(line: 0, scope: !17516)
!17572 = !DILocation(line: 0, scope: !17439, inlinedAt: !17573)
!17573 = distinct !DILocation(line: 267, column: 2, scope: !17484)
!17574 = !DILocation(line: 194, column: 2, scope: !17447, inlinedAt: !17573)
!17575 = !DILocation(line: 194, column: 2, scope: !17448, inlinedAt: !17573)
!17576 = !DILocation(line: 194, column: 2, scope: !17451, inlinedAt: !17573)
!17577 = !DILocation(line: 0, scope: !17453, inlinedAt: !17578)
!17578 = distinct !DILocation(line: 215, column: 2, scope: !17439, inlinedAt: !17573)
!17579 = !DILocation(line: 95, column: 2, scope: !17453, inlinedAt: !17578)
!17580 = !DILocation(line: 269, column: 2, scope: !17484)
!17581 = !DILocation(line: 270, column: 1, scope: !17484)
!17582 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !17161, file: !17161, line: 284, type: !17583, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17585)
!17583 = !DISubroutineType(types: !17584)
!17584 = !{!103, !17164, !102}
!17585 = !{!17586, !17587, !17588, !17589}
!17586 = !DILocalVariable(name: "msgq", arg: 1, scope: !17582, file: !17161, line: 284, type: !17164)
!17587 = !DILocalVariable(name: "data", arg: 2, scope: !17582, file: !17161, line: 284, type: !102)
!17588 = !DILocalVariable(name: "key", scope: !17582, file: !17161, line: 286, type: !17338)
!17589 = !DILocalVariable(name: "result", scope: !17582, file: !17161, line: 287, type: !103)
!17590 = !DILocation(line: 0, scope: !17582)
!17591 = !DILocation(line: 289, column: 27, scope: !17582)
!17592 = !DILocation(line: 0, scope: !17361, inlinedAt: !17593)
!17593 = distinct !DILocation(line: 289, column: 8, scope: !17582)
!17594 = !DILocation(line: 55, column: 2, scope: !17370, inlinedAt: !17595)
!17595 = distinct !DILocation(line: 145, column: 10, scope: !17361, inlinedAt: !17593)
!17596 = !DILocation(line: 0, scope: !17370, inlinedAt: !17595)
!17597 = !DILocation(line: 148, column: 2, scope: !17378, inlinedAt: !17593)
!17598 = !DILocation(line: 148, column: 2, scope: !17379, inlinedAt: !17593)
!17599 = !DILocation(line: 148, column: 2, scope: !17382, inlinedAt: !17593)
!17600 = !DILocation(line: 160, column: 2, scope: !17361, inlinedAt: !17593)
!17601 = !DILocation(line: 291, column: 12, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17582, file: !17161, line: 291, column: 6)
!17603 = !DILocation(line: 291, column: 22, scope: !17602)
!17604 = !DILocation(line: 291, column: 6, scope: !17582)
!17605 = !DILocation(line: 293, column: 28, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17602, file: !17161, line: 291, column: 28)
!17607 = !DILocation(line: 293, column: 44, scope: !17606)
!17608 = !DILocation(line: 293, column: 9, scope: !17606)
!17609 = !DILocation(line: 295, column: 2, scope: !17606)
!17610 = !DILocation(line: 0, scope: !17602)
!17611 = !DILocation(line: 0, scope: !17439, inlinedAt: !17612)
!17612 = distinct !DILocation(line: 302, column: 2, scope: !17582)
!17613 = !DILocation(line: 194, column: 2, scope: !17447, inlinedAt: !17612)
!17614 = !DILocation(line: 194, column: 2, scope: !17448, inlinedAt: !17612)
!17615 = !DILocation(line: 194, column: 2, scope: !17451, inlinedAt: !17612)
!17616 = !DILocation(line: 0, scope: !17453, inlinedAt: !17617)
!17617 = distinct !DILocation(line: 215, column: 2, scope: !17439, inlinedAt: !17612)
!17618 = !DILocation(line: 95, column: 2, scope: !17453, inlinedAt: !17617)
!17619 = !DILocation(line: 304, column: 2, scope: !17582)
!17620 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !17161, file: !17161, line: 318, type: !17621, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4051, retainedNodes: !17623)
!17621 = !DISubroutineType(types: !17622)
!17622 = !{null, !17164}
!17623 = !{!17624, !17625, !17626}
!17624 = !DILocalVariable(name: "msgq", arg: 1, scope: !17620, file: !17161, line: 318, type: !17164)
!17625 = !DILocalVariable(name: "key", scope: !17620, file: !17161, line: 320, type: !17338)
!17626 = !DILocalVariable(name: "pending_thread", scope: !17620, file: !17161, line: 321, type: !4069)
!17627 = !DILocation(line: 0, scope: !17620)
!17628 = !DILocation(line: 323, column: 27, scope: !17620)
!17629 = !DILocation(line: 0, scope: !17361, inlinedAt: !17630)
!17630 = distinct !DILocation(line: 323, column: 8, scope: !17620)
!17631 = !DILocation(line: 55, column: 2, scope: !17370, inlinedAt: !17632)
!17632 = distinct !DILocation(line: 145, column: 10, scope: !17361, inlinedAt: !17630)
!17633 = !DILocation(line: 0, scope: !17370, inlinedAt: !17632)
!17634 = !DILocation(line: 148, column: 2, scope: !17378, inlinedAt: !17630)
!17635 = !DILocation(line: 148, column: 2, scope: !17379, inlinedAt: !17630)
!17636 = !DILocation(line: 148, column: 2, scope: !17382, inlinedAt: !17630)
!17637 = !DILocation(line: 160, column: 2, scope: !17361, inlinedAt: !17630)
!17638 = !DILocation(line: 328, column: 27, scope: !17620)
!17639 = !DILocation(line: 328, column: 65, scope: !17620)
!17640 = !DILocation(line: 328, column: 2, scope: !17620)
!17641 = !DILocation(line: 0, scope: !17400, inlinedAt: !17642)
!17642 = distinct !DILocation(line: 329, column: 3, scope: !17643)
!17643 = distinct !DILexicalBlock(scope: !17620, file: !17161, line: 328, column: 74)
!17644 = !DILocation(line: 67, column: 15, scope: !17400, inlinedAt: !17642)
!17645 = !DILocation(line: 67, column: 33, scope: !17400, inlinedAt: !17642)
!17646 = !DILocation(line: 330, column: 3, scope: !17643)
!17647 = distinct !{!17647, !17640, !17648}
!17648 = !DILocation(line: 331, column: 2, scope: !17620)
!17649 = !DILocation(line: 333, column: 8, scope: !17620)
!17650 = !DILocation(line: 333, column: 18, scope: !17620)
!17651 = !DILocation(line: 334, column: 25, scope: !17620)
!17652 = !DILocation(line: 334, column: 8, scope: !17620)
!17653 = !DILocation(line: 334, column: 17, scope: !17620)
!17654 = !DILocation(line: 336, column: 2, scope: !17620)
!17655 = !DILocation(line: 337, column: 1, scope: !17620)
!17656 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !3284, file: !3284, line: 49, type: !17657, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17666)
!17657 = !DISubroutineType(types: !17658)
!17658 = !{!103, !17659}
!17659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17660, size: 32)
!17660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !17661)
!17661 = !{!17662, !17663, !17664, !17665}
!17662 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17660, file: !124, line: 2722, baseType: !3213, size: 64)
!17663 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !17660, file: !124, line: 2724, baseType: !3195, size: 32, offset: 64)
!17664 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !17660, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!17665 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !17660, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!17666 = !{!17667}
!17667 = !DILocalVariable(name: "mutex", arg: 1, scope: !17656, file: !3284, line: 49, type: !17659)
!17668 = !DILocation(line: 0, scope: !17656)
!17669 = !DILocation(line: 51, column: 9, scope: !17656)
!17670 = !DILocation(line: 51, column: 15, scope: !17656)
!17671 = !DILocation(line: 52, column: 9, scope: !17656)
!17672 = !DILocation(line: 52, column: 20, scope: !17656)
!17673 = !DILocation(line: 54, column: 23, scope: !17656)
!17674 = !DILocation(line: 54, column: 2, scope: !17656)
!17675 = !DILocation(line: 60, column: 2, scope: !17656)
!17676 = distinct !DISubprogram(name: "z_waitq_init", scope: !16240, file: !16240, line: 47, type: !17677, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17679)
!17677 = !DISubroutineType(types: !17678)
!17678 = !{null, !3212}
!17679 = !{!17680}
!17680 = !DILocalVariable(name: "w", arg: 1, scope: !17676, file: !16240, line: 47, type: !3212)
!17681 = !DILocation(line: 0, scope: !17676)
!17682 = !DILocation(line: 49, column: 21, scope: !17676)
!17683 = !DILocation(line: 49, column: 2, scope: !17676)
!17684 = !DILocation(line: 50, column: 1, scope: !17676)
!17685 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !17686, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17689)
!17686 = !DISubroutineType(types: !17687)
!17687 = !{null, !17688}
!17688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!17689 = !{!17690}
!17690 = !DILocalVariable(name: "list", arg: 1, scope: !17685, file: !133, line: 197, type: !17688)
!17691 = !DILocation(line: 0, scope: !17685)
!17692 = !DILocation(line: 199, column: 8, scope: !17685)
!17693 = !DILocation(line: 199, column: 13, scope: !17685)
!17694 = !DILocation(line: 200, column: 8, scope: !17685)
!17695 = !DILocation(line: 200, column: 13, scope: !17685)
!17696 = !DILocation(line: 201, column: 1, scope: !17685)
!17697 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !3284, file: !3284, line: 95, type: !17698, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17704)
!17698 = !DISubroutineType(types: !17699)
!17699 = !{!103, !17659, !17700}
!17700 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17701)
!17701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17702)
!17702 = !{!17703}
!17703 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17701, file: !105, line: 66, baseType: !104, size: 64)
!17704 = !{!17705, !17706, !17707, !17708, !17713, !17714, !17715}
!17705 = !DILocalVariable(name: "mutex", arg: 1, scope: !17697, file: !3284, line: 95, type: !17659)
!17706 = !DILocalVariable(name: "timeout", arg: 2, scope: !17697, file: !3284, line: 95, type: !17700)
!17707 = !DILocalVariable(name: "new_prio", scope: !17697, file: !3284, line: 97, type: !103)
!17708 = !DILocalVariable(name: "key", scope: !17697, file: !3284, line: 98, type: !17709)
!17709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !17710)
!17710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !17711)
!17711 = !{!17712}
!17712 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17710, file: !149, line: 33, baseType: !103, size: 32)
!17713 = !DILocalVariable(name: "resched", scope: !17697, file: !3284, line: 99, type: !119)
!17714 = !DILocalVariable(name: "got_mutex", scope: !17697, file: !3284, line: 146, type: !103)
!17715 = !DILocalVariable(name: "waiter", scope: !17716, file: !3284, line: 169, type: !3195)
!17716 = distinct !DILexicalBlock(scope: !17717, file: !3284, line: 168, column: 36)
!17717 = distinct !DILexicalBlock(scope: !17697, file: !3284, line: 168, column: 6)
!17718 = !DILocation(line: 0, scope: !17697)
!17719 = !DILocation(line: 1031, column: 3, scope: !17720, inlinedAt: !17723)
!17720 = distinct !DISubprogram(name: "__get_IPSR", scope: !8306, file: !8306, line: 1027, type: !8393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17721)
!17721 = !{!17722}
!17722 = !DILocalVariable(name: "result", scope: !17720, file: !8306, line: 1029, type: !108)
!17723 = distinct !DILocation(line: 48, column: 10, scope: !17724, inlinedAt: !17725)
!17724 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9356, file: !9356, line: 46, type: !9357, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !2953)
!17725 = distinct !DILocation(line: 101, column: 2, scope: !17726)
!17726 = distinct !DILexicalBlock(scope: !17727, file: !3284, line: 101, column: 2)
!17727 = distinct !DILexicalBlock(scope: !17697, file: !3284, line: 101, column: 2)
!17728 = !{i64 3732843}
!17729 = !DILocation(line: 0, scope: !17720, inlinedAt: !17723)
!17730 = !DILocation(line: 48, column: 9, scope: !17724, inlinedAt: !17725)
!17731 = !DILocation(line: 101, column: 2, scope: !17727)
!17732 = !DILocation(line: 101, column: 2, scope: !17733)
!17733 = distinct !DILexicalBlock(scope: !17726, file: !3284, line: 101, column: 2)
!17734 = !DILocalVariable(name: "l", arg: 1, scope: !17735, file: !149, line: 136, type: !17738)
!17735 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !17736, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17739)
!17736 = !DISubroutineType(types: !17737)
!17737 = !{!17709, !17738}
!17738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 32)
!17739 = !{!17734, !17740}
!17740 = !DILocalVariable(name: "k", scope: !17735, file: !149, line: 139, type: !17709)
!17741 = !DILocation(line: 0, scope: !17735, inlinedAt: !17742)
!17742 = distinct !DILocation(line: 105, column: 8, scope: !17697)
!17743 = !DILocation(line: 55, column: 2, scope: !17744, inlinedAt: !17748)
!17744 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17745)
!17745 = !{!17746, !17747}
!17746 = !DILocalVariable(name: "key", scope: !17744, file: !7985, line: 44, type: !32)
!17747 = !DILocalVariable(name: "tmp", scope: !17744, file: !7985, line: 53, type: !32)
!17748 = distinct !DILocation(line: 145, column: 10, scope: !17735, inlinedAt: !17742)
!17749 = !{i64 2286409}
!17750 = !DILocation(line: 0, scope: !17744, inlinedAt: !17748)
!17751 = !DILocation(line: 148, column: 2, scope: !17752, inlinedAt: !17742)
!17752 = distinct !DILexicalBlock(scope: !17753, file: !149, line: 148, column: 2)
!17753 = distinct !DILexicalBlock(scope: !17735, file: !149, line: 148, column: 2)
!17754 = !DILocation(line: 148, column: 2, scope: !17753, inlinedAt: !17742)
!17755 = !DILocation(line: 148, column: 2, scope: !17756, inlinedAt: !17742)
!17756 = distinct !DILexicalBlock(scope: !17752, file: !149, line: 148, column: 2)
!17757 = !DILocation(line: 160, column: 2, scope: !17735, inlinedAt: !17742)
!17758 = !DILocation(line: 107, column: 6, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17697, file: !3284, line: 107, column: 6)
!17760 = !DILocation(line: 107, column: 6, scope: !17697)
!17761 = !{!"branch_weights", i32 2000, i32 1}
!17762 = !DILocation(line: 110, column: 6, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17759, file: !3284, line: 107, column: 71)
!17764 = !DILocation(line: 110, column: 21, scope: !17763)
!17765 = !DILocation(line: 109, column: 28, scope: !17763)
!17766 = !DILocation(line: 111, column: 13, scope: !17763)
!17767 = !DILocation(line: 114, column: 18, scope: !17763)
!17768 = !DILocation(line: 109, column: 10, scope: !17763)
!17769 = !DILocation(line: 109, column: 26, scope: !17763)
!17770 = !DILocation(line: 113, column: 20, scope: !17763)
!17771 = !DILocation(line: 114, column: 10, scope: !17763)
!17772 = !DILocation(line: 114, column: 16, scope: !17763)
!17773 = !DILocalVariable(name: "key", arg: 2, scope: !17774, file: !149, line: 190, type: !17709)
!17774 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !17775, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17777)
!17775 = !DISubroutineType(types: !17776)
!17776 = !{null, !17738, !17709}
!17777 = !{!17778, !17773}
!17778 = !DILocalVariable(name: "l", arg: 1, scope: !17774, file: !149, line: 189, type: !17738)
!17779 = !DILocation(line: 0, scope: !17774, inlinedAt: !17780)
!17780 = distinct !DILocation(line: 120, column: 3, scope: !17763)
!17781 = !DILocation(line: 194, column: 2, scope: !17782, inlinedAt: !17780)
!17782 = distinct !DILexicalBlock(scope: !17783, file: !149, line: 194, column: 2)
!17783 = distinct !DILexicalBlock(scope: !17774, file: !149, line: 194, column: 2)
!17784 = !DILocation(line: 194, column: 2, scope: !17783, inlinedAt: !17780)
!17785 = !DILocation(line: 194, column: 2, scope: !17786, inlinedAt: !17780)
!17786 = distinct !DILexicalBlock(scope: !17782, file: !149, line: 194, column: 2)
!17787 = !DILocalVariable(name: "key", arg: 1, scope: !17788, file: !7985, line: 84, type: !32)
!17788 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17789)
!17789 = !{!17787}
!17790 = !DILocation(line: 0, scope: !17788, inlinedAt: !17791)
!17791 = distinct !DILocation(line: 215, column: 2, scope: !17774, inlinedAt: !17780)
!17792 = !DILocation(line: 95, column: 2, scope: !17788, inlinedAt: !17791)
!17793 = !{i64 2287226}
!17794 = !DILocation(line: 124, column: 3, scope: !17763)
!17795 = !DILocation(line: 127, column: 6, scope: !17796)
!17796 = distinct !DILexicalBlock(scope: !17697, file: !3284, line: 127, column: 6)
!17797 = !DILocation(line: 127, column: 6, scope: !17697)
!17798 = !{!"branch_weights", i32 1, i32 2000}
!17799 = !DILocation(line: 0, scope: !17774, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 128, column: 3, scope: !17801)
!17801 = distinct !DILexicalBlock(scope: !17796, file: !3284, line: 127, column: 50)
!17802 = !DILocation(line: 194, column: 2, scope: !17782, inlinedAt: !17800)
!17803 = !DILocation(line: 194, column: 2, scope: !17783, inlinedAt: !17800)
!17804 = !DILocation(line: 194, column: 2, scope: !17786, inlinedAt: !17800)
!17805 = !DILocation(line: 0, scope: !17788, inlinedAt: !17806)
!17806 = distinct !DILocation(line: 215, column: 2, scope: !17774, inlinedAt: !17800)
!17807 = !DILocation(line: 95, column: 2, scope: !17788, inlinedAt: !17806)
!17808 = !DILocation(line: 132, column: 3, scope: !17801)
!17809 = !DILocation(line: 137, column: 53, scope: !17697)
!17810 = !DILocation(line: 137, column: 38, scope: !17697)
!17811 = !DILocation(line: 138, column: 29, scope: !17697)
!17812 = !DILocation(line: 138, column: 10, scope: !17697)
!17813 = !DILocation(line: 137, column: 13, scope: !17697)
!17814 = !DILocation(line: 142, column: 6, scope: !17815)
!17815 = distinct !DILexicalBlock(scope: !17697, file: !3284, line: 142, column: 6)
!17816 = !DILocation(line: 142, column: 6, scope: !17697)
!17817 = !DILocation(line: 143, column: 13, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17815, file: !3284, line: 142, column: 59)
!17819 = !DILocation(line: 144, column: 2, scope: !17818)
!17820 = !DILocation(line: 146, column: 50, scope: !17697)
!17821 = !DILocation(line: 146, column: 18, scope: !17697)
!17822 = !DILocation(line: 153, column: 16, scope: !17823)
!17823 = distinct !DILexicalBlock(scope: !17697, file: !3284, line: 153, column: 6)
!17824 = !DILocation(line: 153, column: 6, scope: !17697)
!17825 = !DILocation(line: 0, scope: !17735, inlinedAt: !17826)
!17826 = distinct !DILocation(line: 162, column: 8, scope: !17697)
!17827 = !DILocation(line: 55, column: 2, scope: !17744, inlinedAt: !17828)
!17828 = distinct !DILocation(line: 145, column: 10, scope: !17735, inlinedAt: !17826)
!17829 = !DILocation(line: 0, scope: !17744, inlinedAt: !17828)
!17830 = !DILocation(line: 148, column: 2, scope: !17752, inlinedAt: !17826)
!17831 = !DILocation(line: 148, column: 2, scope: !17753, inlinedAt: !17826)
!17832 = !DILocation(line: 148, column: 2, scope: !17756, inlinedAt: !17826)
!17833 = !DILocation(line: 160, column: 2, scope: !17735, inlinedAt: !17826)
!17834 = !DILocation(line: 168, column: 6, scope: !17717)
!17835 = !DILocation(line: 168, column: 6, scope: !17697)
!17836 = !DILocation(line: 169, column: 29, scope: !17716)
!17837 = !DILocation(line: 0, scope: !17716)
!17838 = !DILocation(line: 171, column: 22, scope: !17716)
!17839 = !DILocation(line: 171, column: 14, scope: !17716)
!17840 = !DILocation(line: 172, column: 42, scope: !17716)
!17841 = !DILocation(line: 172, column: 29, scope: !17716)
!17842 = !DILocation(line: 172, column: 55, scope: !17716)
!17843 = !DILocation(line: 172, column: 4, scope: !17716)
!17844 = !DILocation(line: 173, column: 11, scope: !17716)
!17845 = !DILocation(line: 177, column: 13, scope: !17716)
!17846 = !DILocation(line: 177, column: 48, scope: !17716)
!17847 = !DILocation(line: 180, column: 6, scope: !17697)
!17848 = !DILocation(line: 181, column: 3, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17850, file: !3284, line: 180, column: 15)
!17850 = distinct !DILexicalBlock(scope: !17697, file: !3284, line: 180, column: 6)
!17851 = !DILocation(line: 182, column: 2, scope: !17849)
!17852 = !DILocation(line: 0, scope: !17774, inlinedAt: !17853)
!17853 = distinct !DILocation(line: 183, column: 3, scope: !17854)
!17854 = distinct !DILexicalBlock(scope: !17850, file: !3284, line: 182, column: 9)
!17855 = !DILocation(line: 194, column: 2, scope: !17782, inlinedAt: !17853)
!17856 = !DILocation(line: 194, column: 2, scope: !17783, inlinedAt: !17853)
!17857 = !DILocation(line: 194, column: 2, scope: !17786, inlinedAt: !17853)
!17858 = !DILocation(line: 0, scope: !17788, inlinedAt: !17859)
!17859 = distinct !DILocation(line: 215, column: 2, scope: !17774, inlinedAt: !17853)
!17860 = !DILocation(line: 95, column: 2, scope: !17788, inlinedAt: !17859)
!17861 = !DILocation(line: 189, column: 1, scope: !17697)
!17862 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !3284, file: !3284, line: 72, type: !17863, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17865)
!17863 = !DISubroutineType(types: !17864)
!17864 = !{!330, !330, !330}
!17865 = !{!17866, !17867, !17868}
!17866 = !DILocalVariable(name: "target", arg: 1, scope: !17862, file: !3284, line: 72, type: !330)
!17867 = !DILocalVariable(name: "limit", arg: 2, scope: !17862, file: !3284, line: 72, type: !330)
!17868 = !DILocalVariable(name: "new_prio", scope: !17862, file: !3284, line: 74, type: !103)
!17869 = !DILocation(line: 0, scope: !17862)
!17870 = !DILocation(line: 74, column: 17, scope: !17862)
!17871 = !DILocation(line: 76, column: 13, scope: !17862)
!17872 = !DILocation(line: 78, column: 2, scope: !17862)
!17873 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15980, file: !15980, line: 211, type: !17874, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17876)
!17874 = !DISubroutineType(types: !17875)
!17875 = !{!119, !103, !103}
!17876 = !{!17877, !17878}
!17877 = !DILocalVariable(name: "prio", arg: 1, scope: !17873, file: !15980, line: 211, type: !103)
!17878 = !DILocalVariable(name: "test_prio", arg: 2, scope: !17873, file: !15980, line: 211, type: !103)
!17879 = !DILocation(line: 0, scope: !17873)
!17880 = !DILocation(line: 213, column: 9, scope: !17873)
!17881 = !DILocation(line: 213, column: 2, scope: !17873)
!17882 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !3284, file: !3284, line: 81, type: !17883, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17885)
!17883 = !DISubroutineType(types: !17884)
!17884 = !{!119, !17659, !330}
!17885 = !{!17886, !17887}
!17886 = !DILocalVariable(name: "mutex", arg: 1, scope: !17882, file: !3284, line: 81, type: !17659)
!17887 = !DILocalVariable(name: "new_prio", arg: 2, scope: !17882, file: !3284, line: 81, type: !330)
!17888 = !DILocation(line: 0, scope: !17882)
!17889 = !DILocation(line: 83, column: 13, scope: !17890)
!17890 = distinct !DILexicalBlock(scope: !17882, file: !3284, line: 83, column: 6)
!17891 = !DILocation(line: 83, column: 25, scope: !17890)
!17892 = !DILocation(line: 83, column: 6, scope: !17890)
!17893 = !DILocation(line: 83, column: 30, scope: !17890)
!17894 = !DILocation(line: 83, column: 6, scope: !17882)
!17895 = !DILocation(line: 90, column: 10, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17890, file: !3284, line: 83, column: 43)
!17897 = !DILocation(line: 90, column: 3, scope: !17896)
!17898 = !DILocation(line: 93, column: 1, scope: !17882)
!17899 = distinct !DISubprogram(name: "z_waitq_head", scope: !16240, file: !16240, line: 52, type: !17900, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17902)
!17900 = !DISubroutineType(types: !17901)
!17901 = !{!3195, !3212}
!17902 = !{!17903}
!17903 = !DILocalVariable(name: "w", arg: 1, scope: !17899, file: !16240, line: 52, type: !3212)
!17904 = !DILocation(line: 0, scope: !17899)
!17905 = !DILocation(line: 54, column: 52, scope: !17899)
!17906 = !DILocation(line: 54, column: 28, scope: !17899)
!17907 = !DILocation(line: 54, column: 9, scope: !17899)
!17908 = !DILocation(line: 54, column: 2, scope: !17899)
!17909 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !17910, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17912)
!17910 = !DISubroutineType(types: !17911)
!17911 = !{!3180, !17688}
!17912 = !{!17913}
!17913 = !DILocalVariable(name: "list", arg: 1, scope: !17909, file: !133, line: 294, type: !17688)
!17914 = !DILocation(line: 0, scope: !17909)
!17915 = !DILocation(line: 296, column: 9, scope: !17909)
!17916 = !DILocation(line: 296, column: 49, scope: !17909)
!17917 = !DILocation(line: 296, column: 2, scope: !17909)
!17918 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !17919, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17921)
!17919 = !DISubroutineType(types: !17920)
!17920 = !{!119, !17688}
!17921 = !{!17922}
!17922 = !DILocalVariable(name: "list", arg: 1, scope: !17918, file: !133, line: 266, type: !17688)
!17923 = !DILocation(line: 0, scope: !17918)
!17924 = !DILocation(line: 268, column: 15, scope: !17918)
!17925 = !DILocation(line: 268, column: 20, scope: !17918)
!17926 = !DILocation(line: 268, column: 2, scope: !17918)
!17927 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15980, file: !15980, line: 206, type: !17874, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17928)
!17928 = !{!17929, !17930}
!17929 = !DILocalVariable(name: "prio1", arg: 1, scope: !17927, file: !15980, line: 206, type: !103)
!17930 = !DILocalVariable(name: "prio2", arg: 2, scope: !17927, file: !15980, line: 206, type: !103)
!17931 = !DILocation(line: 0, scope: !17927)
!17932 = !DILocation(line: 208, column: 15, scope: !17927)
!17933 = !DILocation(line: 208, column: 2, scope: !17927)
!17934 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !15980, file: !15980, line: 186, type: !800, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17935)
!17935 = !{!17936}
!17936 = !DILocalVariable(name: "prio", arg: 1, scope: !17934, file: !15980, line: 186, type: !103)
!17937 = !DILocation(line: 0, scope: !17934)
!17938 = !DILocation(line: 188, column: 9, scope: !17934)
!17939 = !DILocation(line: 188, column: 2, scope: !17934)
!17940 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !15980, file: !15980, line: 181, type: !17941, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17943)
!17941 = !DISubroutineType(types: !17942)
!17942 = !{!119, !103}
!17943 = !{!17944}
!17944 = !DILocalVariable(name: "prio", arg: 1, scope: !17940, file: !15980, line: 181, type: !103)
!17945 = !DILocation(line: 0, scope: !17940)
!17946 = !DILocation(line: 183, column: 14, scope: !17940)
!17947 = !DILocation(line: 183, column: 2, scope: !17940)
!17948 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !3284, file: !3284, line: 201, type: !17657, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !17949)
!17949 = !{!17950, !17951, !17952, !17953}
!17950 = !DILocalVariable(name: "mutex", arg: 1, scope: !17948, file: !3284, line: 201, type: !17659)
!17951 = !DILocalVariable(name: "new_owner", scope: !17948, file: !3284, line: 203, type: !3195)
!17952 = !DILocalVariable(name: "key", scope: !17948, file: !3284, line: 242, type: !17709)
!17953 = !DILabel(scope: !17948, name: "k_mutex_unlock_return", file: !3284, line: 270)
!17954 = !DILocation(line: 0, scope: !17948)
!17955 = !DILocation(line: 1031, column: 3, scope: !17720, inlinedAt: !17956)
!17956 = distinct !DILocation(line: 48, column: 10, scope: !17724, inlinedAt: !17957)
!17957 = distinct !DILocation(line: 205, column: 2, scope: !17958)
!17958 = distinct !DILexicalBlock(scope: !17959, file: !3284, line: 205, column: 2)
!17959 = distinct !DILexicalBlock(scope: !17948, file: !3284, line: 205, column: 2)
!17960 = !DILocation(line: 0, scope: !17720, inlinedAt: !17956)
!17961 = !DILocation(line: 48, column: 9, scope: !17724, inlinedAt: !17957)
!17962 = !DILocation(line: 205, column: 2, scope: !17959)
!17963 = !DILocation(line: 205, column: 2, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17958, file: !3284, line: 205, column: 2)
!17965 = !DILocation(line: 209, column: 2, scope: !17966)
!17966 = distinct !DILexicalBlock(scope: !17948, file: !3284, line: 209, column: 2)
!17967 = !DILocation(line: 209, column: 2, scope: !17948)
!17968 = !DILocation(line: 217, column: 2, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17948, file: !3284, line: 217, column: 2)
!17970 = !DILocation(line: 217, column: 2, scope: !17948)
!17971 = !DILocation(line: 229, column: 2, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17973, file: !3284, line: 229, column: 2)
!17973 = distinct !DILexicalBlock(scope: !17948, file: !3284, line: 229, column: 2)
!17974 = !DILocation(line: 229, column: 2, scope: !17973)
!17975 = !DILocation(line: 229, column: 2, scope: !17976)
!17976 = distinct !DILexicalBlock(scope: !17972, file: !3284, line: 229, column: 2)
!17977 = !DILocation(line: 238, column: 20, scope: !17978)
!17978 = distinct !DILexicalBlock(scope: !17979, file: !3284, line: 237, column: 30)
!17979 = distinct !DILexicalBlock(scope: !17948, file: !3284, line: 237, column: 6)
!17980 = !DILocation(line: 239, column: 3, scope: !17978)
!17981 = !DILocation(line: 0, scope: !17735, inlinedAt: !17982)
!17982 = distinct !DILocation(line: 242, column: 25, scope: !17948)
!17983 = !DILocation(line: 55, column: 2, scope: !17744, inlinedAt: !17984)
!17984 = distinct !DILocation(line: 145, column: 10, scope: !17735, inlinedAt: !17982)
!17985 = !DILocation(line: 0, scope: !17744, inlinedAt: !17984)
!17986 = !DILocation(line: 148, column: 2, scope: !17752, inlinedAt: !17982)
!17987 = !DILocation(line: 148, column: 2, scope: !17753, inlinedAt: !17982)
!17988 = !DILocation(line: 148, column: 2, scope: !17756, inlinedAt: !17982)
!17989 = !DILocation(line: 160, column: 2, scope: !17735, inlinedAt: !17982)
!17990 = !DILocation(line: 244, column: 34, scope: !17948)
!17991 = !DILocation(line: 244, column: 2, scope: !17948)
!17992 = !DILocation(line: 247, column: 44, scope: !17948)
!17993 = !DILocation(line: 247, column: 14, scope: !17948)
!17994 = !DILocation(line: 249, column: 15, scope: !17948)
!17995 = !DILocation(line: 254, column: 16, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17948, file: !3284, line: 254, column: 6)
!17997 = !DILocation(line: 254, column: 6, scope: !17948)
!17998 = !DILocation(line: 260, column: 44, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17996, file: !3284, line: 254, column: 25)
!18000 = !DILocation(line: 260, column: 28, scope: !17999)
!18001 = !DILocation(line: 260, column: 26, scope: !17999)
!18002 = !DILocalVariable(name: "thread", arg: 1, scope: !18003, file: !16000, line: 65, type: !3195)
!18003 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !16000, file: !16000, line: 65, type: !18004, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !18006)
!18004 = !DISubroutineType(types: !18005)
!18005 = !{null, !3195, !32}
!18006 = !{!18002, !18007}
!18007 = !DILocalVariable(name: "value", arg: 2, scope: !18003, file: !16000, line: 65, type: !32)
!18008 = !DILocation(line: 0, scope: !18003, inlinedAt: !18009)
!18009 = distinct !DILocation(line: 261, column: 3, scope: !17999)
!18010 = !DILocation(line: 67, column: 15, scope: !18003, inlinedAt: !18009)
!18011 = !DILocation(line: 67, column: 33, scope: !18003, inlinedAt: !18009)
!18012 = !DILocation(line: 262, column: 3, scope: !17999)
!18013 = !DILocation(line: 263, column: 3, scope: !17999)
!18014 = !DILocation(line: 264, column: 2, scope: !17999)
!18015 = !DILocation(line: 265, column: 21, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !17996, file: !3284, line: 264, column: 9)
!18017 = !DILocation(line: 0, scope: !17774, inlinedAt: !18018)
!18018 = distinct !DILocation(line: 266, column: 3, scope: !18016)
!18019 = !DILocation(line: 194, column: 2, scope: !17782, inlinedAt: !18018)
!18020 = !DILocation(line: 194, column: 2, scope: !17783, inlinedAt: !18018)
!18021 = !DILocation(line: 194, column: 2, scope: !17786, inlinedAt: !18018)
!18022 = !DILocation(line: 0, scope: !17788, inlinedAt: !18023)
!18023 = distinct !DILocation(line: 215, column: 2, scope: !17774, inlinedAt: !18018)
!18024 = !DILocation(line: 95, column: 2, scope: !17788, inlinedAt: !18023)
!18025 = !DILocation(line: 274, column: 1, scope: !17948)
!18026 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3397, file: !3397, line: 93, type: !18027, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18029)
!18027 = !DISubroutineType(types: !18028)
!18028 = !{!330, !3290, !3290}
!18029 = !{!18030, !18031, !18032, !18033}
!18030 = !DILocalVariable(name: "thread_1", arg: 1, scope: !18026, file: !3397, line: 93, type: !3290)
!18031 = !DILocalVariable(name: "thread_2", arg: 2, scope: !18026, file: !3397, line: 94, type: !3290)
!18032 = !DILocalVariable(name: "b1", scope: !18026, file: !3397, line: 97, type: !330)
!18033 = !DILocalVariable(name: "b2", scope: !18026, file: !3397, line: 98, type: !330)
!18034 = !DILocation(line: 0, scope: !18026)
!18035 = !DILocation(line: 97, column: 30, scope: !18026)
!18036 = !DILocation(line: 98, column: 30, scope: !18026)
!18037 = !DILocation(line: 100, column: 9, scope: !18038)
!18038 = distinct !DILexicalBlock(scope: !18026, file: !3397, line: 100, column: 6)
!18039 = !DILocation(line: 100, column: 6, scope: !18026)
!18040 = !DILocation(line: 125, column: 1, scope: !18026)
!18041 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3397, file: !3397, line: 428, type: !18042, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18044)
!18042 = !DISubroutineType(types: !18043)
!18043 = !{null, !3290}
!18044 = !{!18045}
!18045 = !DILocalVariable(name: "curr", arg: 1, scope: !18041, file: !3397, line: 428, type: !3290)
!18046 = !DILocation(line: 0, scope: !18041)
!18047 = !DILocation(line: 434, column: 6, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18041, file: !3397, line: 434, column: 6)
!18049 = !DILocation(line: 434, column: 23, scope: !18048)
!18050 = !DILocation(line: 434, column: 6, scope: !18041)
!18051 = !DILocation(line: 435, column: 50, scope: !18052)
!18052 = distinct !DILexicalBlock(scope: !18048, file: !3397, line: 434, column: 29)
!18053 = !DILocation(line: 435, column: 48, scope: !18052)
!18054 = !DILocation(line: 435, column: 29, scope: !18052)
!18055 = !DILocation(line: 436, column: 24, scope: !18052)
!18056 = !DILocation(line: 436, column: 3, scope: !18052)
!18057 = !DILocation(line: 437, column: 2, scope: !18052)
!18058 = !DILocation(line: 438, column: 1, scope: !18041)
!18059 = distinct !DISubprogram(name: "slice_time", scope: !3397, file: !3397, line: 407, type: !18060, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18062)
!18060 = !DISubroutineType(types: !18061)
!18061 = !{!103, !3290}
!18062 = !{!18063, !18064}
!18063 = !DILocalVariable(name: "curr", arg: 1, scope: !18059, file: !3397, line: 407, type: !3290)
!18064 = !DILocalVariable(name: "ret", scope: !18059, file: !3397, line: 409, type: !103)
!18065 = !DILocation(line: 0, scope: !18059)
!18066 = !DILocation(line: 409, column: 12, scope: !18059)
!18067 = !DILocation(line: 416, column: 2, scope: !18059)
!18068 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3397, file: !3397, line: 440, type: !18069, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18071)
!18069 = !DISubroutineType(types: !18070)
!18070 = !{null, !330, !103}
!18071 = !{!18072, !18073, !18074, !18080}
!18072 = !DILocalVariable(name: "slice", arg: 1, scope: !18068, file: !3397, line: 440, type: !330)
!18073 = !DILocalVariable(name: "prio", arg: 2, scope: !18068, file: !3397, line: 440, type: !103)
!18074 = !DILocalVariable(name: "__i", scope: !18075, file: !3397, line: 442, type: !18076)
!18075 = distinct !DILexicalBlock(scope: !18068, file: !3397, line: 442, column: 2)
!18076 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !18077)
!18077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !18078)
!18078 = !{!18079}
!18079 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18077, file: !149, line: 33, baseType: !103, size: 32)
!18080 = !DILocalVariable(name: "__key", scope: !18075, file: !3397, line: 442, type: !18076)
!18081 = !DILocation(line: 0, scope: !18068)
!18082 = !DILocation(line: 0, scope: !18075)
!18083 = !DILocalVariable(name: "l", arg: 1, scope: !18084, file: !149, line: 136, type: !18087)
!18084 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !18085, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18088)
!18085 = !DISubroutineType(types: !18086)
!18086 = !{!18076, !18087}
!18087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 32)
!18088 = !{!18083, !18089}
!18089 = !DILocalVariable(name: "k", scope: !18084, file: !149, line: 139, type: !18076)
!18090 = !DILocation(line: 0, scope: !18084, inlinedAt: !18091)
!18091 = distinct !DILocation(line: 442, column: 2, scope: !18075)
!18092 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18097)
!18093 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18094)
!18094 = !{!18095, !18096}
!18095 = !DILocalVariable(name: "key", scope: !18093, file: !7985, line: 44, type: !32)
!18096 = !DILocalVariable(name: "tmp", scope: !18093, file: !7985, line: 53, type: !32)
!18097 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18091)
!18098 = !{i64 2325972}
!18099 = !DILocation(line: 0, scope: !18093, inlinedAt: !18097)
!18100 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18091)
!18101 = distinct !DILexicalBlock(scope: !18102, file: !149, line: 148, column: 2)
!18102 = distinct !DILexicalBlock(scope: !18084, file: !149, line: 148, column: 2)
!18103 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18091)
!18104 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18091)
!18105 = distinct !DILexicalBlock(scope: !18101, file: !149, line: 148, column: 2)
!18106 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18091)
!18107 = !DILocation(line: 443, column: 29, scope: !18108)
!18108 = distinct !DILexicalBlock(scope: !18109, file: !3397, line: 442, column: 26)
!18109 = distinct !DILexicalBlock(scope: !18075, file: !3397, line: 442, column: 2)
!18110 = !DILocation(line: 444, column: 17, scope: !18108)
!18111 = !DILocation(line: 445, column: 51, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !18108, file: !3397, line: 445, column: 7)
!18113 = !DILocation(line: 445, column: 7, scope: !18108)
!18114 = !DILocation(line: 0, scope: !18108)
!18115 = !DILocation(line: 451, column: 18, scope: !18108)
!18116 = !DILocation(line: 452, column: 3, scope: !18108)
!18117 = !DILocalVariable(name: "key", arg: 2, scope: !18118, file: !149, line: 190, type: !18076)
!18118 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !18119, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18121)
!18119 = !DISubroutineType(types: !18120)
!18120 = !{null, !18087, !18076}
!18121 = !{!18122, !18117}
!18122 = !DILocalVariable(name: "l", arg: 1, scope: !18118, file: !149, line: 189, type: !18087)
!18123 = !DILocation(line: 0, scope: !18118, inlinedAt: !18124)
!18124 = distinct !DILocation(line: 442, column: 2, scope: !18109)
!18125 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18124)
!18126 = distinct !DILexicalBlock(scope: !18127, file: !149, line: 194, column: 2)
!18127 = distinct !DILexicalBlock(scope: !18118, file: !149, line: 194, column: 2)
!18128 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18124)
!18129 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18124)
!18130 = distinct !DILexicalBlock(scope: !18126, file: !149, line: 194, column: 2)
!18131 = !DILocalVariable(name: "key", arg: 1, scope: !18132, file: !7985, line: 84, type: !32)
!18132 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18133)
!18133 = !{!18131}
!18134 = !DILocation(line: 0, scope: !18132, inlinedAt: !18135)
!18135 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18124)
!18136 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18135)
!18137 = !{i64 2326789}
!18138 = !DILocation(line: 454, column: 1, scope: !18068)
!18139 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !4443, file: !4443, line: 389, type: !9590, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18140)
!18140 = !{!18141}
!18141 = !DILocalVariable(name: "t", arg: 1, scope: !18139, file: !4443, line: 389, type: !108)
!18142 = !DILocation(line: 0, scope: !18139)
!18143 = !DILocalVariable(name: "t", arg: 1, scope: !18144, file: !4443, line: 102, type: !109)
!18144 = distinct !DISubprogram(name: "z_tmcvt", scope: !4443, file: !4443, line: 102, type: !4451, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18145)
!18145 = !{!18143, !18146, !18147, !18148, !18149, !18150, !18151, !18152, !18153, !18154, !18155}
!18146 = !DILocalVariable(name: "from_hz", arg: 2, scope: !18144, file: !4443, line: 102, type: !108)
!18147 = !DILocalVariable(name: "to_hz", arg: 3, scope: !18144, file: !4443, line: 103, type: !108)
!18148 = !DILocalVariable(name: "const_hz", arg: 4, scope: !18144, file: !4443, line: 103, type: !119)
!18149 = !DILocalVariable(name: "result32", arg: 5, scope: !18144, file: !4443, line: 104, type: !119)
!18150 = !DILocalVariable(name: "round_up", arg: 6, scope: !18144, file: !4443, line: 104, type: !119)
!18151 = !DILocalVariable(name: "round_off", arg: 7, scope: !18144, file: !4443, line: 105, type: !119)
!18152 = !DILocalVariable(name: "mul_ratio", scope: !18144, file: !4443, line: 107, type: !119)
!18153 = !DILocalVariable(name: "div_ratio", scope: !18144, file: !4443, line: 109, type: !119)
!18154 = !DILocalVariable(name: "off", scope: !18144, file: !4443, line: 116, type: !109)
!18155 = !DILocalVariable(name: "rdivisor", scope: !18156, file: !4443, line: 119, type: !108)
!18156 = distinct !DILexicalBlock(scope: !18157, file: !4443, line: 118, column: 18)
!18157 = distinct !DILexicalBlock(scope: !18144, file: !4443, line: 118, column: 6)
!18158 = !DILocation(line: 0, scope: !18144, inlinedAt: !18159)
!18159 = distinct !DILocation(line: 392, column: 9, scope: !18139)
!18160 = !DILocation(line: 143, column: 25, scope: !18161, inlinedAt: !18159)
!18161 = distinct !DILexicalBlock(scope: !18162, file: !4443, line: 142, column: 17)
!18162 = distinct !DILexicalBlock(scope: !18163, file: !4443, line: 142, column: 7)
!18163 = distinct !DILexicalBlock(scope: !18164, file: !4443, line: 141, column: 24)
!18164 = distinct !DILexicalBlock(scope: !18165, file: !4443, line: 141, column: 13)
!18165 = distinct !DILexicalBlock(scope: !18144, file: !4443, line: 134, column: 6)
!18166 = !DILocation(line: 392, column: 2, scope: !18139)
!18167 = distinct !DISubprogram(name: "z_time_slice", scope: !3397, file: !3397, line: 502, type: !10933, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18168)
!18168 = !{!18169, !18170}
!18169 = !DILocalVariable(name: "ticks", arg: 1, scope: !18167, file: !3397, line: 502, type: !103)
!18170 = !DILocalVariable(name: "key", scope: !18167, file: !3397, line: 511, type: !18076)
!18171 = !DILocation(line: 0, scope: !18167)
!18172 = !DILocation(line: 0, scope: !18084, inlinedAt: !18173)
!18173 = distinct !DILocation(line: 511, column: 25, scope: !18167)
!18174 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18175)
!18175 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18173)
!18176 = !DILocation(line: 0, scope: !18093, inlinedAt: !18175)
!18177 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18173)
!18178 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18173)
!18179 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18173)
!18180 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18173)
!18181 = !DILocation(line: 514, column: 6, scope: !18182)
!18182 = distinct !DILexicalBlock(scope: !18167, file: !3397, line: 514, column: 6)
!18183 = !DILocation(line: 514, column: 25, scope: !18182)
!18184 = !DILocation(line: 514, column: 22, scope: !18182)
!18185 = !DILocation(line: 514, column: 6, scope: !18167)
!18186 = !DILocation(line: 515, column: 3, scope: !18187)
!18187 = distinct !DILexicalBlock(scope: !18182, file: !3397, line: 514, column: 35)
!18188 = !DILocation(line: 0, scope: !18118, inlinedAt: !18189)
!18189 = distinct !DILocation(line: 516, column: 3, scope: !18187)
!18190 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18189)
!18191 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18189)
!18192 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18189)
!18193 = !DILocation(line: 0, scope: !18132, inlinedAt: !18194)
!18194 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18189)
!18195 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18194)
!18196 = !DILocation(line: 517, column: 3, scope: !18187)
!18197 = !DILocation(line: 519, column: 18, scope: !18167)
!18198 = !DILocation(line: 522, column: 6, scope: !18199)
!18199 = distinct !DILexicalBlock(scope: !18167, file: !3397, line: 522, column: 6)
!18200 = !DILocation(line: 522, column: 27, scope: !18199)
!18201 = !DILocation(line: 522, column: 30, scope: !18199)
!18202 = !DILocation(line: 522, column: 6, scope: !18167)
!18203 = !DILocation(line: 523, column: 30, scope: !18204)
!18204 = distinct !DILexicalBlock(scope: !18205, file: !3397, line: 523, column: 7)
!18205 = distinct !DILexicalBlock(scope: !18199, file: !3397, line: 522, column: 51)
!18206 = !DILocation(line: 523, column: 13, scope: !18204)
!18207 = !DILocation(line: 523, column: 7, scope: !18205)
!18208 = !DILocation(line: 530, column: 10, scope: !18209)
!18209 = distinct !DILexicalBlock(scope: !18204, file: !3397, line: 523, column: 43)
!18210 = !DILocation(line: 531, column: 3, scope: !18209)
!18211 = !DILocation(line: 532, column: 30, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18204, file: !3397, line: 531, column: 10)
!18213 = !DILocation(line: 535, column: 29, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18199, file: !3397, line: 534, column: 9)
!18215 = !DILocation(line: 0, scope: !18118, inlinedAt: !18216)
!18216 = distinct !DILocation(line: 537, column: 2, scope: !18167)
!18217 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18216)
!18218 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18216)
!18219 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18216)
!18220 = !DILocation(line: 0, scope: !18132, inlinedAt: !18221)
!18221 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18216)
!18222 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18221)
!18223 = !DILocation(line: 538, column: 1, scope: !18167)
!18224 = distinct !DISubprogram(name: "sliceable", scope: !3397, file: !3397, line: 468, type: !18225, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18227)
!18225 = !DISubroutineType(types: !18226)
!18226 = !{!119, !3290}
!18227 = !{!18228, !18229}
!18228 = !DILocalVariable(name: "thread", arg: 1, scope: !18224, file: !3397, line: 468, type: !3290)
!18229 = !DILocalVariable(name: "ret", scope: !18224, file: !3397, line: 470, type: !119)
!18230 = !DILocation(line: 0, scope: !18224)
!18231 = !DILocation(line: 470, column: 13, scope: !18224)
!18232 = !DILocation(line: 471, column: 3, scope: !18224)
!18233 = !DILocation(line: 471, column: 7, scope: !18224)
!18234 = !DILocation(line: 472, column: 3, scope: !18224)
!18235 = !DILocation(line: 472, column: 37, scope: !18224)
!18236 = !DILocation(line: 472, column: 24, scope: !18224)
!18237 = !DILocation(line: 472, column: 43, scope: !18224)
!18238 = !DILocation(line: 472, column: 7, scope: !18224)
!18239 = !DILocation(line: 473, column: 3, scope: !18224)
!18240 = !DILocation(line: 473, column: 7, scope: !18224)
!18241 = !DILocation(line: 473, column: 6, scope: !18224)
!18242 = !DILocation(line: 479, column: 2, scope: !18224)
!18243 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3397, file: !3397, line: 482, type: !18244, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18246)
!18244 = !DISubroutineType(types: !18245)
!18245 = !{!18076, !18076}
!18246 = !{!18247, !18248}
!18247 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !18243, file: !3397, line: 482, type: !18076)
!18248 = !DILocalVariable(name: "curr", scope: !18243, file: !3397, line: 484, type: !3290)
!18249 = !DILocation(line: 0, scope: !18243)
!18250 = !DILocation(line: 484, column: 26, scope: !18243)
!18251 = !DILocation(line: 493, column: 7, scope: !18252)
!18252 = distinct !DILexicalBlock(scope: !18243, file: !3397, line: 493, column: 6)
!18253 = !DILocation(line: 493, column: 6, scope: !18243)
!18254 = !DILocation(line: 494, column: 3, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !18252, file: !3397, line: 493, column: 49)
!18256 = !DILocation(line: 495, column: 2, scope: !18255)
!18257 = !DILocation(line: 496, column: 2, scope: !18243)
!18258 = !DILocation(line: 499, column: 1, scope: !18243)
!18259 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15980, file: !15980, line: 106, type: !18225, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18260)
!18260 = !{!18261, !18262}
!18261 = !DILocalVariable(name: "thread", arg: 1, scope: !18259, file: !15980, line: 106, type: !3290)
!18262 = !DILocalVariable(name: "state", scope: !18259, file: !15980, line: 108, type: !164)
!18263 = !DILocation(line: 0, scope: !18259)
!18264 = !DILocation(line: 108, column: 31, scope: !18259)
!18265 = !DILocation(line: 110, column: 16, scope: !18259)
!18266 = !DILocation(line: 111, column: 41, scope: !18259)
!18267 = !DILocation(line: 110, column: 2, scope: !18259)
!18268 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3397, file: !3397, line: 393, type: !18042, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18269)
!18269 = !{!18270}
!18270 = !DILocalVariable(name: "thread", arg: 1, scope: !18268, file: !3397, line: 393, type: !3290)
!18271 = !DILocation(line: 0, scope: !18268)
!18272 = !DILocation(line: 395, column: 6, scope: !18273)
!18273 = distinct !DILexicalBlock(scope: !18268, file: !3397, line: 395, column: 6)
!18274 = !DILocation(line: 395, column: 6, scope: !18268)
!18275 = !DILocalVariable(name: "thread", arg: 1, scope: !18276, file: !3397, line: 264, type: !3290)
!18276 = distinct !DISubprogram(name: "dequeue_thread", scope: !3397, file: !3397, line: 264, type: !18042, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18277)
!18277 = !{!18275}
!18278 = !DILocation(line: 0, scope: !18276, inlinedAt: !18279)
!18279 = distinct !DILocation(line: 396, column: 3, scope: !18280)
!18280 = distinct !DILexicalBlock(scope: !18273, file: !3397, line: 395, column: 34)
!18281 = !DILocation(line: 266, column: 15, scope: !18276, inlinedAt: !18279)
!18282 = !DILocation(line: 266, column: 28, scope: !18276, inlinedAt: !18279)
!18283 = !DILocalVariable(name: "thread", arg: 1, scope: !18284, file: !3397, line: 232, type: !3290)
!18284 = distinct !DISubprogram(name: "runq_remove", scope: !3397, file: !3397, line: 232, type: !18042, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18285)
!18285 = !{!18283}
!18286 = !DILocation(line: 0, scope: !18284, inlinedAt: !18287)
!18287 = distinct !DILocation(line: 268, column: 3, scope: !18288, inlinedAt: !18279)
!18288 = distinct !DILexicalBlock(scope: !18289, file: !3397, line: 267, column: 35)
!18289 = distinct !DILexicalBlock(scope: !18276, file: !3397, line: 267, column: 6)
!18290 = !DILocation(line: 234, column: 2, scope: !18284, inlinedAt: !18287)
!18291 = !DILocation(line: 397, column: 2, scope: !18280)
!18292 = !DILocalVariable(name: "thread", arg: 1, scope: !18293, file: !3397, line: 250, type: !3290)
!18293 = distinct !DISubprogram(name: "queue_thread", scope: !3397, file: !3397, line: 250, type: !18042, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18294)
!18294 = !{!18292}
!18295 = !DILocation(line: 0, scope: !18293, inlinedAt: !18296)
!18296 = distinct !DILocation(line: 398, column: 2, scope: !18268)
!18297 = !DILocation(line: 252, column: 15, scope: !18293, inlinedAt: !18296)
!18298 = !DILocation(line: 252, column: 28, scope: !18293, inlinedAt: !18296)
!18299 = !DILocalVariable(name: "thread", arg: 1, scope: !18300, file: !3397, line: 227, type: !3290)
!18300 = distinct !DISubprogram(name: "runq_add", scope: !3397, file: !3397, line: 227, type: !18042, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18301)
!18301 = !{!18299}
!18302 = !DILocation(line: 0, scope: !18300, inlinedAt: !18303)
!18303 = distinct !DILocation(line: 254, column: 3, scope: !18304, inlinedAt: !18296)
!18304 = distinct !DILexicalBlock(scope: !18305, file: !3397, line: 253, column: 35)
!18305 = distinct !DILexicalBlock(scope: !18293, file: !3397, line: 253, column: 6)
!18306 = !DILocalVariable(name: "pq", arg: 1, scope: !18307, file: !3397, line: 181, type: !18310)
!18307 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3397, file: !3397, line: 181, type: !18308, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18311)
!18308 = !DISubroutineType(types: !18309)
!18309 = !{null, !18310, !3290}
!18310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 32)
!18311 = !{!18306, !18312, !18313}
!18312 = !DILocalVariable(name: "thread", arg: 2, scope: !18307, file: !3397, line: 182, type: !3290)
!18313 = !DILocalVariable(name: "t", scope: !18307, file: !3397, line: 184, type: !3290)
!18314 = !DILocation(line: 0, scope: !18307, inlinedAt: !18315)
!18315 = distinct !DILocation(line: 229, column: 2, scope: !18300, inlinedAt: !18303)
!18316 = !DILocation(line: 186, column: 2, scope: !18317, inlinedAt: !18315)
!18317 = distinct !DILexicalBlock(scope: !18318, file: !3397, line: 186, column: 2)
!18318 = distinct !DILexicalBlock(scope: !18307, file: !3397, line: 186, column: 2)
!18319 = !DILocation(line: 186, column: 2, scope: !18318, inlinedAt: !18315)
!18320 = !DILocation(line: 186, column: 2, scope: !18321, inlinedAt: !18315)
!18321 = distinct !DILexicalBlock(scope: !18317, file: !3397, line: 186, column: 2)
!18322 = !DILocation(line: 188, column: 2, scope: !18323, inlinedAt: !18315)
!18323 = distinct !DILexicalBlock(scope: !18307, file: !3397, line: 188, column: 2)
!18324 = !DILocation(line: 188, column: 2, scope: !18325, inlinedAt: !18315)
!18325 = distinct !DILexicalBlock(scope: !18323, file: !3397, line: 188, column: 2)
!18326 = !DILocation(line: 0, scope: !18323, inlinedAt: !18315)
!18327 = !DILocation(line: 189, column: 7, scope: !18328, inlinedAt: !18315)
!18328 = distinct !DILexicalBlock(scope: !18329, file: !3397, line: 189, column: 7)
!18329 = distinct !DILexicalBlock(scope: !18325, file: !3397, line: 188, column: 56)
!18330 = !DILocation(line: 189, column: 35, scope: !18328, inlinedAt: !18315)
!18331 = !DILocation(line: 189, column: 7, scope: !18329, inlinedAt: !18315)
!18332 = !DILocation(line: 191, column: 21, scope: !18333, inlinedAt: !18315)
!18333 = distinct !DILexicalBlock(scope: !18328, file: !3397, line: 189, column: 40)
!18334 = !DILocation(line: 190, column: 4, scope: !18333, inlinedAt: !18315)
!18335 = !DILocation(line: 192, column: 4, scope: !18333, inlinedAt: !18315)
!18336 = distinct !{!18336, !18322, !18337}
!18337 = !DILocation(line: 194, column: 2, scope: !18323, inlinedAt: !18315)
!18338 = !DILocation(line: 196, column: 37, scope: !18307, inlinedAt: !18315)
!18339 = !DILocation(line: 196, column: 2, scope: !18307, inlinedAt: !18315)
!18340 = !DILocation(line: 197, column: 1, scope: !18307, inlinedAt: !18315)
!18341 = !DILocation(line: 399, column: 25, scope: !18268)
!18342 = !DILocation(line: 399, column: 22, scope: !18268)
!18343 = !DILocation(line: 399, column: 2, scope: !18268)
!18344 = !DILocation(line: 400, column: 1, scope: !18268)
!18345 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15980, file: !15980, line: 136, type: !18225, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18346)
!18346 = !{!18347}
!18347 = !DILocalVariable(name: "thread", arg: 1, scope: !18345, file: !15980, line: 136, type: !3290)
!18348 = !DILocation(line: 0, scope: !18345)
!18349 = !DILocation(line: 138, column: 9, scope: !18345)
!18350 = !DILocation(line: 138, column: 2, scope: !18345)
!18351 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3397, file: !3397, line: 1137, type: !18308, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18352)
!18352 = !{!18353, !18354}
!18353 = !DILocalVariable(name: "pq", arg: 1, scope: !18351, file: !3397, line: 1137, type: !18310)
!18354 = !DILocalVariable(name: "thread", arg: 2, scope: !18351, file: !3397, line: 1137, type: !3290)
!18355 = !DILocation(line: 0, scope: !18351)
!18356 = !DILocation(line: 1139, column: 2, scope: !18357)
!18357 = distinct !DILexicalBlock(scope: !18358, file: !3397, line: 1139, column: 2)
!18358 = distinct !DILexicalBlock(scope: !18351, file: !3397, line: 1139, column: 2)
!18359 = !DILocation(line: 1139, column: 2, scope: !18358)
!18360 = !DILocation(line: 1139, column: 2, scope: !18361)
!18361 = distinct !DILexicalBlock(scope: !18357, file: !3397, line: 1139, column: 2)
!18362 = !DILocation(line: 1141, column: 33, scope: !18351)
!18363 = !DILocation(line: 1141, column: 2, scope: !18351)
!18364 = !DILocation(line: 1142, column: 1, scope: !18351)
!18365 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15980, file: !15980, line: 83, type: !18225, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18366)
!18366 = !{!18367}
!18367 = !DILocalVariable(name: "thread", arg: 1, scope: !18365, file: !15980, line: 83, type: !3290)
!18368 = !DILocation(line: 0, scope: !18365)
!18369 = !DILocation(line: 89, column: 16, scope: !18365)
!18370 = !DILocation(line: 89, column: 2, scope: !18365)
!18371 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !18372, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18374)
!18372 = !DISubroutineType(types: !18373)
!18373 = !{!3393, !18310}
!18374 = !{!18375}
!18375 = !DILocalVariable(name: "list", arg: 1, scope: !18371, file: !133, line: 294, type: !18310)
!18376 = !DILocation(line: 0, scope: !18371)
!18377 = !DILocation(line: 296, column: 9, scope: !18371)
!18378 = !DILocation(line: 296, column: 49, scope: !18371)
!18379 = !DILocation(line: 296, column: 2, scope: !18371)
!18380 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !133, file: !133, line: 443, type: !18381, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18383)
!18381 = !DISubroutineType(types: !18382)
!18382 = !{null, !3393, !3393}
!18383 = !{!18384, !18385, !18386}
!18384 = !DILocalVariable(name: "successor", arg: 1, scope: !18380, file: !133, line: 443, type: !3393)
!18385 = !DILocalVariable(name: "node", arg: 2, scope: !18380, file: !133, line: 443, type: !3393)
!18386 = !DILocalVariable(name: "prev", scope: !18380, file: !133, line: 445, type: !18387)
!18387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3393)
!18388 = !DILocation(line: 0, scope: !18380)
!18389 = !DILocation(line: 445, column: 39, scope: !18380)
!18390 = !DILocation(line: 447, column: 8, scope: !18380)
!18391 = !DILocation(line: 447, column: 13, scope: !18380)
!18392 = !DILocation(line: 448, column: 8, scope: !18380)
!18393 = !DILocation(line: 448, column: 13, scope: !18380)
!18394 = !DILocation(line: 449, column: 8, scope: !18380)
!18395 = !DILocation(line: 449, column: 13, scope: !18380)
!18396 = !DILocation(line: 450, column: 18, scope: !18380)
!18397 = !DILocation(line: 451, column: 1, scope: !18380)
!18398 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !133, file: !133, line: 341, type: !18399, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18401)
!18399 = !DISubroutineType(types: !18400)
!18400 = !{!3393, !18310, !3393}
!18401 = !{!18402, !18403}
!18402 = !DILocalVariable(name: "list", arg: 1, scope: !18398, file: !133, line: 341, type: !18310)
!18403 = !DILocalVariable(name: "node", arg: 2, scope: !18398, file: !133, line: 342, type: !3393)
!18404 = !DILocation(line: 0, scope: !18398)
!18405 = !DILocation(line: 344, column: 15, scope: !18398)
!18406 = !DILocation(line: 344, column: 9, scope: !18398)
!18407 = !DILocation(line: 344, column: 26, scope: !18398)
!18408 = !DILocation(line: 344, column: 2, scope: !18398)
!18409 = distinct !DISubprogram(name: "sys_dlist_append", scope: !133, file: !133, line: 404, type: !18410, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18412)
!18410 = !DISubroutineType(types: !18411)
!18411 = !{null, !18310, !3393}
!18412 = !{!18413, !18414, !18415}
!18413 = !DILocalVariable(name: "list", arg: 1, scope: !18409, file: !133, line: 404, type: !18310)
!18414 = !DILocalVariable(name: "node", arg: 2, scope: !18409, file: !133, line: 404, type: !3393)
!18415 = !DILocalVariable(name: "tail", scope: !18409, file: !133, line: 406, type: !18387)
!18416 = !DILocation(line: 0, scope: !18409)
!18417 = !DILocation(line: 406, column: 34, scope: !18409)
!18418 = !DILocation(line: 408, column: 8, scope: !18409)
!18419 = !DILocation(line: 408, column: 13, scope: !18409)
!18420 = !DILocation(line: 409, column: 8, scope: !18409)
!18421 = !DILocation(line: 409, column: 13, scope: !18409)
!18422 = !DILocation(line: 411, column: 8, scope: !18409)
!18423 = !DILocation(line: 411, column: 13, scope: !18409)
!18424 = !DILocation(line: 412, column: 13, scope: !18409)
!18425 = !DILocation(line: 413, column: 1, scope: !18409)
!18426 = distinct !DISubprogram(name: "update_cache", scope: !3397, file: !3397, line: 559, type: !10933, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18427)
!18427 = !{!18428, !18429}
!18428 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !18426, file: !3397, line: 559, type: !103)
!18429 = !DILocalVariable(name: "thread", scope: !18426, file: !3397, line: 562, type: !3290)
!18430 = !DILocation(line: 0, scope: !18426)
!18431 = !DILocation(line: 239, column: 9, scope: !18432, inlinedAt: !18435)
!18432 = distinct !DISubprogram(name: "runq_best", scope: !3397, file: !3397, line: 237, type: !18433, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!18433 = !DISubroutineType(types: !18434)
!18434 = !{!3290}
!18435 = distinct !DILocation(line: 314, column: 28, scope: !18436, inlinedAt: !18439)
!18436 = distinct !DISubprogram(name: "next_up", scope: !3397, file: !3397, line: 312, type: !18433, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18437)
!18437 = !{!18438}
!18438 = !DILocalVariable(name: "thread", scope: !18436, file: !3397, line: 314, type: !3290)
!18439 = distinct !DILocation(line: 562, column: 28, scope: !18426)
!18440 = !DILocation(line: 0, scope: !18436, inlinedAt: !18439)
!18441 = !DILocation(line: 340, column: 17, scope: !18436, inlinedAt: !18439)
!18442 = !DILocation(line: 340, column: 9, scope: !18436, inlinedAt: !18439)
!18443 = !DILocalVariable(name: "thread", arg: 1, scope: !18444, file: !3397, line: 127, type: !3290)
!18444 = distinct !DISubprogram(name: "should_preempt", scope: !3397, file: !3397, line: 127, type: !18445, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18447)
!18445 = !DISubroutineType(types: !18446)
!18446 = !{!119, !3290, !103}
!18447 = !{!18443, !18448}
!18448 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !18444, file: !3397, line: 128, type: !103)
!18449 = !DILocation(line: 0, scope: !18444, inlinedAt: !18450)
!18450 = distinct !DILocation(line: 564, column: 6, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18426, file: !3397, line: 564, column: 6)
!18452 = !DILocation(line: 133, column: 17, scope: !18453, inlinedAt: !18450)
!18453 = distinct !DILexicalBlock(scope: !18444, file: !3397, line: 133, column: 6)
!18454 = !DILocation(line: 0, scope: !18451)
!18455 = !DILocation(line: 133, column: 6, scope: !18444, inlinedAt: !18450)
!18456 = !DILocation(line: 137, column: 2, scope: !18457, inlinedAt: !18450)
!18457 = distinct !DILexicalBlock(scope: !18458, file: !3397, line: 137, column: 2)
!18458 = distinct !DILexicalBlock(scope: !18444, file: !3397, line: 137, column: 2)
!18459 = !DILocation(line: 137, column: 2, scope: !18458, inlinedAt: !18450)
!18460 = !DILocation(line: 137, column: 2, scope: !18461, inlinedAt: !18450)
!18461 = distinct !DILexicalBlock(scope: !18457, file: !3397, line: 137, column: 2)
!18462 = !DILocation(line: 140, column: 6, scope: !18463, inlinedAt: !18450)
!18463 = distinct !DILexicalBlock(scope: !18444, file: !3397, line: 140, column: 6)
!18464 = !DILocation(line: 140, column: 6, scope: !18444, inlinedAt: !18450)
!18465 = !DILocation(line: 150, column: 9, scope: !18466, inlinedAt: !18450)
!18466 = distinct !DILexicalBlock(scope: !18444, file: !3397, line: 149, column: 6)
!18467 = !DILocation(line: 149, column: 6, scope: !18444, inlinedAt: !18450)
!18468 = !DILocation(line: 157, column: 6, scope: !18469, inlinedAt: !18450)
!18469 = distinct !DILexicalBlock(scope: !18444, file: !3397, line: 157, column: 6)
!18470 = !DILocation(line: 564, column: 6, scope: !18426)
!18471 = !DILocation(line: 566, column: 14, scope: !18472)
!18472 = distinct !DILexicalBlock(scope: !18473, file: !3397, line: 566, column: 7)
!18473 = distinct !DILexicalBlock(scope: !18451, file: !3397, line: 564, column: 42)
!18474 = !DILocation(line: 566, column: 7, scope: !18473)
!18475 = !DILocation(line: 567, column: 4, scope: !18476)
!18476 = distinct !DILexicalBlock(scope: !18472, file: !3397, line: 566, column: 27)
!18477 = !DILocation(line: 568, column: 3, scope: !18476)
!18478 = !DILocation(line: 585, column: 1, scope: !18426)
!18479 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3397, file: !3397, line: 1144, type: !18480, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18482)
!18480 = !DISubroutineType(types: !18481)
!18481 = !{!3290, !18310}
!18482 = !{!18483, !18484, !18485}
!18483 = !DILocalVariable(name: "pq", arg: 1, scope: !18479, file: !3397, line: 1144, type: !18310)
!18484 = !DILocalVariable(name: "thread", scope: !18479, file: !3397, line: 1146, type: !3290)
!18485 = !DILocalVariable(name: "n", scope: !18479, file: !3397, line: 1147, type: !3393)
!18486 = !DILocation(line: 0, scope: !18479)
!18487 = !DILocation(line: 1147, column: 19, scope: !18479)
!18488 = !DILocation(line: 1152, column: 2, scope: !18479)
!18489 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15980, file: !15980, line: 115, type: !18225, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18490)
!18490 = !{!18491}
!18491 = !DILocalVariable(name: "thread", arg: 1, scope: !18489, file: !15980, line: 115, type: !3290)
!18492 = !DILocation(line: 0, scope: !18489)
!18493 = !DILocation(line: 117, column: 46, scope: !18489)
!18494 = !DILocation(line: 117, column: 10, scope: !18489)
!18495 = !DILocation(line: 117, column: 9, scope: !18489)
!18496 = !DILocation(line: 117, column: 2, scope: !18489)
!18497 = distinct !DISubprogram(name: "is_preempt", scope: !3397, file: !3397, line: 62, type: !18060, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18498)
!18498 = !{!18499}
!18499 = !DILocalVariable(name: "thread", arg: 1, scope: !18497, file: !3397, line: 62, type: !3290)
!18500 = !DILocation(line: 0, scope: !18497)
!18501 = !DILocation(line: 65, column: 22, scope: !18497)
!18502 = !DILocation(line: 65, column: 30, scope: !18497)
!18503 = !DILocation(line: 65, column: 2, scope: !18497)
!18504 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !16811, file: !16811, line: 35, type: !18505, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18509)
!18505 = !DISubroutineType(types: !18506)
!18506 = !{!119, !18507}
!18507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18508, size: 32)
!18508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3341)
!18509 = !{!18510}
!18510 = !DILocalVariable(name: "to", arg: 1, scope: !18504, file: !16811, line: 35, type: !18507)
!18511 = !DILocation(line: 0, scope: !18504)
!18512 = !DILocation(line: 37, column: 35, scope: !18504)
!18513 = !DILocation(line: 37, column: 10, scope: !18504)
!18514 = !DILocation(line: 37, column: 9, scope: !18504)
!18515 = !DILocation(line: 37, column: 2, scope: !18504)
!18516 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !133, file: !133, line: 225, type: !18517, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18521)
!18517 = !DISubroutineType(types: !18518)
!18518 = !{!119, !18519}
!18519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18520, size: 32)
!18520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3300)
!18521 = !{!18522}
!18522 = !DILocalVariable(name: "node", arg: 1, scope: !18516, file: !133, line: 225, type: !18519)
!18523 = !DILocation(line: 0, scope: !18516)
!18524 = !DILocation(line: 227, column: 15, scope: !18516)
!18525 = !DILocation(line: 227, column: 20, scope: !18516)
!18526 = !DILocation(line: 227, column: 2, scope: !18516)
!18527 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !133, file: !133, line: 325, type: !18399, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18528)
!18528 = !{!18529, !18530}
!18529 = !DILocalVariable(name: "list", arg: 1, scope: !18527, file: !133, line: 325, type: !18310)
!18530 = !DILocalVariable(name: "node", arg: 2, scope: !18527, file: !133, line: 326, type: !3393)
!18531 = !DILocation(line: 0, scope: !18527)
!18532 = !DILocation(line: 328, column: 24, scope: !18527)
!18533 = !DILocation(line: 328, column: 15, scope: !18527)
!18534 = !DILocation(line: 328, column: 9, scope: !18527)
!18535 = !DILocation(line: 328, column: 45, scope: !18527)
!18536 = !DILocation(line: 328, column: 2, scope: !18527)
!18537 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !18538, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18540)
!18538 = !DISubroutineType(types: !18539)
!18539 = !{!119, !18310}
!18540 = !{!18541}
!18541 = !DILocalVariable(name: "list", arg: 1, scope: !18537, file: !133, line: 266, type: !18310)
!18542 = !DILocation(line: 0, scope: !18537)
!18543 = !DILocation(line: 268, column: 15, scope: !18537)
!18544 = !DILocation(line: 268, column: 20, scope: !18537)
!18545 = !DILocation(line: 268, column: 2, scope: !18537)
!18546 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !133, file: !133, line: 496, type: !18547, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18549)
!18547 = !DISubroutineType(types: !18548)
!18548 = !{null, !3393}
!18549 = !{!18550, !18551, !18552}
!18550 = !DILocalVariable(name: "node", arg: 1, scope: !18546, file: !133, line: 496, type: !3393)
!18551 = !DILocalVariable(name: "prev", scope: !18546, file: !133, line: 498, type: !18387)
!18552 = !DILocalVariable(name: "next", scope: !18546, file: !133, line: 499, type: !18387)
!18553 = !DILocation(line: 0, scope: !18546)
!18554 = !DILocation(line: 498, column: 34, scope: !18546)
!18555 = !DILocation(line: 499, column: 34, scope: !18546)
!18556 = !DILocation(line: 501, column: 8, scope: !18546)
!18557 = !DILocation(line: 501, column: 13, scope: !18546)
!18558 = !DILocation(line: 502, column: 8, scope: !18546)
!18559 = !DILocation(line: 502, column: 13, scope: !18546)
!18560 = !DILocation(line: 503, column: 2, scope: !18546)
!18561 = !DILocation(line: 504, column: 1, scope: !18546)
!18562 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !18547, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18563)
!18563 = !{!18564}
!18564 = !DILocalVariable(name: "node", arg: 1, scope: !18562, file: !133, line: 211, type: !3393)
!18565 = !DILocation(line: 0, scope: !18562)
!18566 = !DILocation(line: 213, column: 8, scope: !18562)
!18567 = !DILocation(line: 213, column: 13, scope: !18562)
!18568 = !DILocation(line: 214, column: 8, scope: !18562)
!18569 = !DILocation(line: 214, column: 13, scope: !18562)
!18570 = !DILocation(line: 215, column: 1, scope: !18562)
!18571 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15980, file: !15980, line: 131, type: !18572, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18574)
!18572 = !DISubroutineType(types: !18573)
!18573 = !{!119, !3290, !108}
!18574 = !{!18575, !18576}
!18575 = !DILocalVariable(name: "thread", arg: 1, scope: !18571, file: !15980, line: 131, type: !3290)
!18576 = !DILocalVariable(name: "state", arg: 2, scope: !18571, file: !15980, line: 131, type: !108)
!18577 = !DILocation(line: 0, scope: !18571)
!18578 = !DILocation(line: 133, column: 23, scope: !18571)
!18579 = !DILocation(line: 133, column: 10, scope: !18571)
!18580 = !DILocation(line: 133, column: 36, scope: !18571)
!18581 = !DILocation(line: 133, column: 45, scope: !18571)
!18582 = !DILocation(line: 133, column: 2, scope: !18571)
!18583 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15980, file: !15980, line: 211, type: !17874, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18584)
!18584 = !{!18585, !18586}
!18585 = !DILocalVariable(name: "prio", arg: 1, scope: !18583, file: !15980, line: 211, type: !103)
!18586 = !DILocalVariable(name: "test_prio", arg: 2, scope: !18583, file: !15980, line: 211, type: !103)
!18587 = !DILocation(line: 0, scope: !18583)
!18588 = !DILocation(line: 213, column: 9, scope: !18583)
!18589 = !DILocation(line: 213, column: 2, scope: !18583)
!18590 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15980, file: !15980, line: 206, type: !17874, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18591)
!18591 = !{!18592, !18593}
!18592 = !DILocalVariable(name: "prio1", arg: 1, scope: !18590, file: !15980, line: 206, type: !103)
!18593 = !DILocalVariable(name: "prio2", arg: 2, scope: !18590, file: !15980, line: 206, type: !103)
!18594 = !DILocation(line: 0, scope: !18590)
!18595 = !DILocation(line: 208, column: 15, scope: !18590)
!18596 = !DILocation(line: 208, column: 2, scope: !18590)
!18597 = distinct !DISubprogram(name: "z_ready_thread", scope: !3397, file: !3397, line: 635, type: !18042, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18598)
!18598 = !{!18599, !18600, !18602}
!18599 = !DILocalVariable(name: "thread", arg: 1, scope: !18597, file: !3397, line: 635, type: !3290)
!18600 = !DILocalVariable(name: "__i", scope: !18601, file: !3397, line: 637, type: !18076)
!18601 = distinct !DILexicalBlock(scope: !18597, file: !3397, line: 637, column: 2)
!18602 = !DILocalVariable(name: "__key", scope: !18601, file: !3397, line: 637, type: !18076)
!18603 = !DILocation(line: 0, scope: !18597)
!18604 = !DILocation(line: 0, scope: !18601)
!18605 = !DILocation(line: 0, scope: !18084, inlinedAt: !18606)
!18606 = distinct !DILocation(line: 637, column: 2, scope: !18601)
!18607 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18608)
!18608 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18606)
!18609 = !DILocation(line: 0, scope: !18093, inlinedAt: !18608)
!18610 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18606)
!18611 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18606)
!18612 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18606)
!18613 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18606)
!18614 = !DILocation(line: 639, column: 4, scope: !18615)
!18615 = distinct !DILexicalBlock(scope: !18616, file: !3397, line: 638, column: 41)
!18616 = distinct !DILexicalBlock(scope: !18617, file: !3397, line: 638, column: 7)
!18617 = distinct !DILexicalBlock(scope: !18618, file: !3397, line: 637, column: 26)
!18618 = distinct !DILexicalBlock(scope: !18601, file: !3397, line: 637, column: 2)
!18619 = !DILocation(line: 0, scope: !18118, inlinedAt: !18620)
!18620 = distinct !DILocation(line: 637, column: 2, scope: !18618)
!18621 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18620)
!18622 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18620)
!18623 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18620)
!18624 = !DILocation(line: 0, scope: !18132, inlinedAt: !18625)
!18625 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18620)
!18626 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18625)
!18627 = !DILocation(line: 642, column: 1, scope: !18597)
!18628 = distinct !DISubprogram(name: "ready_thread", scope: !3397, file: !3397, line: 617, type: !18042, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18629)
!18629 = !{!18630}
!18630 = !DILocalVariable(name: "thread", arg: 1, scope: !18628, file: !3397, line: 617, type: !3290)
!18631 = !DILocation(line: 0, scope: !18628)
!18632 = !DILocation(line: 626, column: 7, scope: !18633)
!18633 = distinct !DILexicalBlock(scope: !18628, file: !3397, line: 626, column: 6)
!18634 = !DILocation(line: 626, column: 34, scope: !18633)
!18635 = !DILocation(line: 626, column: 37, scope: !18633)
!18636 = !DILocation(line: 626, column: 6, scope: !18628)
!18637 = !DILocation(line: 0, scope: !18293, inlinedAt: !18638)
!18638 = distinct !DILocation(line: 629, column: 3, scope: !18639)
!18639 = distinct !DILexicalBlock(scope: !18633, file: !3397, line: 626, column: 64)
!18640 = !DILocation(line: 252, column: 15, scope: !18293, inlinedAt: !18638)
!18641 = !DILocation(line: 252, column: 28, scope: !18293, inlinedAt: !18638)
!18642 = !DILocation(line: 0, scope: !18300, inlinedAt: !18643)
!18643 = distinct !DILocation(line: 254, column: 3, scope: !18304, inlinedAt: !18638)
!18644 = !DILocation(line: 0, scope: !18307, inlinedAt: !18645)
!18645 = distinct !DILocation(line: 229, column: 2, scope: !18300, inlinedAt: !18643)
!18646 = !DILocation(line: 186, column: 2, scope: !18317, inlinedAt: !18645)
!18647 = !DILocation(line: 186, column: 2, scope: !18318, inlinedAt: !18645)
!18648 = !DILocation(line: 186, column: 2, scope: !18321, inlinedAt: !18645)
!18649 = !DILocation(line: 188, column: 2, scope: !18323, inlinedAt: !18645)
!18650 = !DILocation(line: 188, column: 2, scope: !18325, inlinedAt: !18645)
!18651 = !DILocation(line: 0, scope: !18323, inlinedAt: !18645)
!18652 = !DILocation(line: 189, column: 7, scope: !18328, inlinedAt: !18645)
!18653 = !DILocation(line: 189, column: 35, scope: !18328, inlinedAt: !18645)
!18654 = !DILocation(line: 189, column: 7, scope: !18329, inlinedAt: !18645)
!18655 = !DILocation(line: 191, column: 21, scope: !18333, inlinedAt: !18645)
!18656 = !DILocation(line: 190, column: 4, scope: !18333, inlinedAt: !18645)
!18657 = !DILocation(line: 192, column: 4, scope: !18333, inlinedAt: !18645)
!18658 = distinct !{!18658, !18649, !18659}
!18659 = !DILocation(line: 194, column: 2, scope: !18323, inlinedAt: !18645)
!18660 = !DILocation(line: 196, column: 37, scope: !18307, inlinedAt: !18645)
!18661 = !DILocation(line: 196, column: 2, scope: !18307, inlinedAt: !18645)
!18662 = !DILocation(line: 197, column: 1, scope: !18307, inlinedAt: !18645)
!18663 = !DILocation(line: 630, column: 3, scope: !18639)
!18664 = !DILocation(line: 632, column: 2, scope: !18639)
!18665 = !DILocation(line: 633, column: 1, scope: !18628)
!18666 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15980, file: !15980, line: 120, type: !18225, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18667)
!18667 = !{!18668}
!18668 = !DILocalVariable(name: "thread", arg: 1, scope: !18666, file: !15980, line: 120, type: !3290)
!18669 = !DILocation(line: 0, scope: !18666)
!18670 = !DILocation(line: 122, column: 12, scope: !18666)
!18671 = !DILocation(line: 122, column: 62, scope: !18666)
!18672 = !DILocation(line: 123, column: 4, scope: !18666)
!18673 = !DILocation(line: 122, column: 2, scope: !18666)
!18674 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3397, file: !3397, line: 644, type: !18042, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18675)
!18675 = !{!18676, !18677, !18679}
!18676 = !DILocalVariable(name: "thread", arg: 1, scope: !18674, file: !3397, line: 644, type: !3290)
!18677 = !DILocalVariable(name: "__i", scope: !18678, file: !3397, line: 646, type: !18076)
!18678 = distinct !DILexicalBlock(scope: !18674, file: !3397, line: 646, column: 2)
!18679 = !DILocalVariable(name: "__key", scope: !18678, file: !3397, line: 646, type: !18076)
!18680 = !DILocation(line: 0, scope: !18674)
!18681 = !DILocation(line: 0, scope: !18678)
!18682 = !DILocation(line: 0, scope: !18084, inlinedAt: !18683)
!18683 = distinct !DILocation(line: 646, column: 2, scope: !18678)
!18684 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18685)
!18685 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18683)
!18686 = !DILocation(line: 0, scope: !18093, inlinedAt: !18685)
!18687 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18683)
!18688 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18683)
!18689 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18683)
!18690 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18683)
!18691 = !DILocation(line: 647, column: 3, scope: !18692)
!18692 = distinct !DILexicalBlock(scope: !18693, file: !3397, line: 646, column: 26)
!18693 = distinct !DILexicalBlock(scope: !18678, file: !3397, line: 646, column: 2)
!18694 = !DILocation(line: 0, scope: !18118, inlinedAt: !18695)
!18695 = distinct !DILocation(line: 646, column: 2, scope: !18693)
!18696 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18695)
!18697 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18695)
!18698 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18695)
!18699 = !DILocation(line: 0, scope: !18132, inlinedAt: !18700)
!18700 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18695)
!18701 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18700)
!18702 = !DILocation(line: 649, column: 1, scope: !18674)
!18703 = distinct !DISubprogram(name: "z_sched_start", scope: !3397, file: !3397, line: 651, type: !18042, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18704)
!18704 = !{!18705, !18706}
!18705 = !DILocalVariable(name: "thread", arg: 1, scope: !18703, file: !3397, line: 651, type: !3290)
!18706 = !DILocalVariable(name: "key", scope: !18703, file: !3397, line: 653, type: !18076)
!18707 = !DILocation(line: 0, scope: !18703)
!18708 = !DILocation(line: 0, scope: !18084, inlinedAt: !18709)
!18709 = distinct !DILocation(line: 653, column: 25, scope: !18703)
!18710 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18711)
!18711 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18709)
!18712 = !DILocation(line: 0, scope: !18093, inlinedAt: !18711)
!18713 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18709)
!18714 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18709)
!18715 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18709)
!18716 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18709)
!18717 = !DILocation(line: 655, column: 6, scope: !18718)
!18718 = distinct !DILexicalBlock(scope: !18703, file: !3397, line: 655, column: 6)
!18719 = !DILocation(line: 655, column: 6, scope: !18703)
!18720 = !DILocation(line: 0, scope: !18118, inlinedAt: !18721)
!18721 = distinct !DILocation(line: 656, column: 3, scope: !18722)
!18722 = distinct !DILexicalBlock(scope: !18718, file: !3397, line: 655, column: 36)
!18723 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18721)
!18724 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18721)
!18725 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18721)
!18726 = !DILocation(line: 0, scope: !18132, inlinedAt: !18727)
!18727 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18721)
!18728 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18727)
!18729 = !DILocation(line: 657, column: 3, scope: !18722)
!18730 = !DILocation(line: 660, column: 2, scope: !18703)
!18731 = !DILocation(line: 661, column: 2, scope: !18703)
!18732 = !DILocation(line: 662, column: 2, scope: !18703)
!18733 = !DILocation(line: 663, column: 1, scope: !18703)
!18734 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15980, file: !15980, line: 126, type: !18225, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18735)
!18735 = !{!18736}
!18736 = !DILocalVariable(name: "thread", arg: 1, scope: !18734, file: !15980, line: 126, type: !3290)
!18737 = !DILocation(line: 0, scope: !18734)
!18738 = !DILocation(line: 128, column: 23, scope: !18734)
!18739 = !DILocation(line: 128, column: 36, scope: !18734)
!18740 = !DILocation(line: 128, column: 56, scope: !18734)
!18741 = !DILocation(line: 128, column: 2, scope: !18734)
!18742 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15980, file: !15980, line: 155, type: !18042, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18743)
!18743 = !{!18744}
!18744 = !DILocalVariable(name: "thread", arg: 1, scope: !18742, file: !15980, line: 155, type: !3290)
!18745 = !DILocation(line: 0, scope: !18742)
!18746 = !DILocation(line: 157, column: 15, scope: !18742)
!18747 = !DILocation(line: 157, column: 28, scope: !18742)
!18748 = !DILocation(line: 158, column: 1, scope: !18742)
!18749 = distinct !DISubprogram(name: "z_reschedule", scope: !3397, file: !3397, line: 967, type: !18119, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18750)
!18750 = !{!18751, !18752}
!18751 = !DILocalVariable(name: "lock", arg: 1, scope: !18749, file: !3397, line: 967, type: !18087)
!18752 = !DILocalVariable(name: "key", arg: 2, scope: !18749, file: !3397, line: 967, type: !18076)
!18753 = !DILocation(line: 0, scope: !18749)
!18754 = !DILocation(line: 969, column: 6, scope: !18755)
!18755 = distinct !DILexicalBlock(scope: !18749, file: !3397, line: 969, column: 6)
!18756 = !DILocation(line: 969, column: 23, scope: !18755)
!18757 = !DILocation(line: 969, column: 26, scope: !18755)
!18758 = !DILocation(line: 969, column: 6, scope: !18749)
!18759 = !DILocalVariable(name: "key", arg: 2, scope: !18760, file: !16084, line: 193, type: !18076)
!18760 = distinct !DISubprogram(name: "z_swap", scope: !16084, file: !16084, line: 193, type: !18761, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18763)
!18761 = !DISubroutineType(types: !18762)
!18762 = !{!103, !18087, !18076}
!18763 = !{!18764, !18759}
!18764 = !DILocalVariable(name: "lock", arg: 1, scope: !18760, file: !16084, line: 193, type: !18087)
!18765 = !DILocation(line: 0, scope: !18760, inlinedAt: !18766)
!18766 = distinct !DILocation(line: 970, column: 3, scope: !18767)
!18767 = distinct !DILexicalBlock(scope: !18755, file: !3397, line: 969, column: 39)
!18768 = !DILocalVariable(name: "l", arg: 1, scope: !18769, file: !149, line: 221, type: !18087)
!18769 = distinct !DISubprogram(name: "k_spin_release", scope: !149, file: !149, line: 221, type: !18770, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18772)
!18770 = !DISubroutineType(types: !18771)
!18771 = !{null, !18087}
!18772 = !{!18768}
!18773 = !DILocation(line: 0, scope: !18769, inlinedAt: !18774)
!18774 = distinct !DILocation(line: 195, column: 2, scope: !18760, inlinedAt: !18766)
!18775 = !DILocation(line: 225, column: 2, scope: !18776, inlinedAt: !18774)
!18776 = distinct !DILexicalBlock(scope: !18777, file: !149, line: 225, column: 2)
!18777 = distinct !DILexicalBlock(scope: !18769, file: !149, line: 225, column: 2)
!18778 = !DILocation(line: 225, column: 2, scope: !18777, inlinedAt: !18774)
!18779 = !DILocation(line: 225, column: 2, scope: !18780, inlinedAt: !18774)
!18780 = distinct !DILexicalBlock(scope: !18776, file: !149, line: 225, column: 2)
!18781 = !DILocation(line: 196, column: 9, scope: !18760, inlinedAt: !18766)
!18782 = !DILocation(line: 971, column: 2, scope: !18767)
!18783 = !DILocation(line: 0, scope: !18118, inlinedAt: !18784)
!18784 = distinct !DILocation(line: 972, column: 3, scope: !18785)
!18785 = distinct !DILexicalBlock(scope: !18755, file: !3397, line: 971, column: 9)
!18786 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18784)
!18787 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18784)
!18788 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18784)
!18789 = !DILocation(line: 0, scope: !18132, inlinedAt: !18790)
!18790 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18784)
!18791 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18790)
!18792 = !DILocation(line: 975, column: 1, scope: !18749)
!18793 = distinct !DISubprogram(name: "resched", scope: !3397, file: !3397, line: 940, type: !18794, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18796)
!18794 = !DISubroutineType(types: !18795)
!18795 = !{!119, !108}
!18796 = !{!18797}
!18797 = !DILocalVariable(name: "key", arg: 1, scope: !18793, file: !3397, line: 940, type: !108)
!18798 = !DILocation(line: 0, scope: !18793)
!18799 = !DILocalVariable(name: "key", arg: 1, scope: !18800, file: !7985, line: 112, type: !32)
!18800 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7985, file: !7985, line: 112, type: !18801, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18803)
!18801 = !DISubroutineType(types: !18802)
!18802 = !{!119, !32}
!18803 = !{!18799}
!18804 = !DILocation(line: 0, scope: !18800, inlinedAt: !18805)
!18805 = distinct !DILocation(line: 946, column: 9, scope: !18793)
!18806 = !DILocation(line: 115, column: 13, scope: !18800, inlinedAt: !18805)
!18807 = !DILocation(line: 946, column: 32, scope: !18793)
!18808 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !18812)
!18809 = distinct !DISubprogram(name: "__get_IPSR", scope: !8306, file: !8306, line: 1027, type: !8393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18810)
!18810 = !{!18811}
!18811 = !DILocalVariable(name: "result", scope: !18809, file: !8306, line: 1029, type: !108)
!18812 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !18814)
!18813 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9356, file: !9356, line: 46, type: !9357, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!18814 = distinct !DILocation(line: 946, column: 36, scope: !18793)
!18815 = !{i64 3772406}
!18816 = !DILocation(line: 0, scope: !18809, inlinedAt: !18812)
!18817 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !18814)
!18818 = !DILocation(line: 946, column: 2, scope: !18793)
!18819 = distinct !DISubprogram(name: "need_swap", scope: !3397, file: !3397, line: 953, type: !9357, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18820)
!18820 = !{!18821}
!18821 = !DILocalVariable(name: "new_thread", scope: !18819, file: !3397, line: 959, type: !3290)
!18822 = !DILocation(line: 962, column: 31, scope: !18819)
!18823 = !DILocation(line: 0, scope: !18819)
!18824 = !DILocation(line: 963, column: 23, scope: !18819)
!18825 = !DILocation(line: 963, column: 20, scope: !18819)
!18826 = !DILocation(line: 963, column: 2, scope: !18819)
!18827 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !16084, file: !16084, line: 181, type: !8316, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18828)
!18828 = !{!18829, !18830}
!18829 = !DILocalVariable(name: "key", arg: 1, scope: !18827, file: !16084, line: 181, type: !32)
!18830 = !DILocalVariable(name: "ret", scope: !18827, file: !16084, line: 183, type: !103)
!18831 = !DILocation(line: 0, scope: !18827)
!18832 = !DILocation(line: 185, column: 8, scope: !18827)
!18833 = !DILocation(line: 186, column: 2, scope: !18827)
!18834 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3397, file: !3397, line: 665, type: !18042, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18835)
!18835 = !{!18836, !18837, !18839}
!18836 = !DILocalVariable(name: "thread", arg: 1, scope: !18834, file: !3397, line: 665, type: !3290)
!18837 = !DILocalVariable(name: "__i", scope: !18838, file: !3397, line: 671, type: !18076)
!18838 = distinct !DILexicalBlock(scope: !18834, file: !3397, line: 671, column: 2)
!18839 = !DILocalVariable(name: "__key", scope: !18838, file: !3397, line: 671, type: !18076)
!18840 = !DILocation(line: 0, scope: !18834)
!18841 = !DILocation(line: 669, column: 8, scope: !18834)
!18842 = !DILocation(line: 0, scope: !18838)
!18843 = !DILocation(line: 0, scope: !18084, inlinedAt: !18844)
!18844 = distinct !DILocation(line: 671, column: 2, scope: !18838)
!18845 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18846)
!18846 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18844)
!18847 = !DILocation(line: 0, scope: !18093, inlinedAt: !18846)
!18848 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18844)
!18849 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18844)
!18850 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18844)
!18851 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18844)
!18852 = !DILocation(line: 672, column: 7, scope: !18853)
!18853 = distinct !DILexicalBlock(scope: !18854, file: !3397, line: 672, column: 7)
!18854 = distinct !DILexicalBlock(scope: !18855, file: !3397, line: 671, column: 26)
!18855 = distinct !DILexicalBlock(scope: !18838, file: !3397, line: 671, column: 2)
!18856 = !DILocation(line: 672, column: 7, scope: !18854)
!18857 = !DILocation(line: 0, scope: !18276, inlinedAt: !18858)
!18858 = distinct !DILocation(line: 673, column: 4, scope: !18859)
!18859 = distinct !DILexicalBlock(scope: !18853, file: !3397, line: 672, column: 35)
!18860 = !DILocation(line: 266, column: 15, scope: !18276, inlinedAt: !18858)
!18861 = !DILocation(line: 266, column: 28, scope: !18276, inlinedAt: !18858)
!18862 = !DILocation(line: 0, scope: !18284, inlinedAt: !18863)
!18863 = distinct !DILocation(line: 268, column: 3, scope: !18288, inlinedAt: !18858)
!18864 = !DILocation(line: 234, column: 2, scope: !18284, inlinedAt: !18863)
!18865 = !DILocation(line: 674, column: 3, scope: !18859)
!18866 = !DILocation(line: 675, column: 3, scope: !18854)
!18867 = !DILocation(line: 676, column: 26, scope: !18854)
!18868 = !DILocation(line: 676, column: 23, scope: !18854)
!18869 = !DILocation(line: 676, column: 3, scope: !18854)
!18870 = !DILocation(line: 0, scope: !18118, inlinedAt: !18871)
!18871 = distinct !DILocation(line: 671, column: 2, scope: !18855)
!18872 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18871)
!18873 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18871)
!18874 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18871)
!18875 = !DILocation(line: 0, scope: !18132, inlinedAt: !18876)
!18876 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18871)
!18877 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18876)
!18878 = !DILocation(line: 679, column: 16, scope: !18879)
!18879 = distinct !DILexicalBlock(scope: !18834, file: !3397, line: 679, column: 6)
!18880 = !DILocation(line: 679, column: 13, scope: !18879)
!18881 = !DILocation(line: 679, column: 6, scope: !18834)
!18882 = !DILocation(line: 680, column: 3, scope: !18883)
!18883 = distinct !DILexicalBlock(scope: !18879, file: !3397, line: 679, column: 26)
!18884 = !DILocation(line: 681, column: 2, scope: !18883)
!18885 = !DILocation(line: 684, column: 1, scope: !18834)
!18886 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !16811, file: !16811, line: 52, type: !18060, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18887)
!18887 = !{!18888}
!18888 = !DILocalVariable(name: "thread", arg: 1, scope: !18886, file: !16811, line: 52, type: !3290)
!18889 = !DILocation(line: 0, scope: !18886)
!18890 = !DILocation(line: 54, column: 39, scope: !18886)
!18891 = !DILocation(line: 54, column: 9, scope: !18886)
!18892 = !DILocation(line: 54, column: 2, scope: !18886)
!18893 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15980, file: !15980, line: 141, type: !18042, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18894)
!18894 = !{!18895}
!18895 = !DILocalVariable(name: "thread", arg: 1, scope: !18893, file: !15980, line: 141, type: !3290)
!18896 = !DILocation(line: 0, scope: !18893)
!18897 = !DILocation(line: 143, column: 15, scope: !18893)
!18898 = !DILocation(line: 143, column: 28, scope: !18893)
!18899 = !DILocation(line: 146, column: 1, scope: !18893)
!18900 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15980, file: !15980, line: 73, type: !333, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!18901 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18902)
!18902 = distinct !DILocation(line: 75, column: 30, scope: !18900)
!18903 = !DILocation(line: 0, scope: !18093, inlinedAt: !18902)
!18904 = !DILocation(line: 75, column: 9, scope: !18900)
!18905 = !DILocation(line: 76, column: 1, scope: !18900)
!18906 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3397, file: !3397, line: 977, type: !8403, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18907)
!18907 = !{!18908}
!18908 = !DILocalVariable(name: "key", arg: 1, scope: !18906, file: !3397, line: 977, type: !108)
!18909 = !DILocation(line: 0, scope: !18906)
!18910 = !DILocation(line: 979, column: 6, scope: !18911)
!18911 = distinct !DILexicalBlock(scope: !18906, file: !3397, line: 979, column: 6)
!18912 = !DILocation(line: 979, column: 6, scope: !18906)
!18913 = !DILocation(line: 980, column: 3, scope: !18914)
!18914 = distinct !DILexicalBlock(scope: !18911, file: !3397, line: 979, column: 20)
!18915 = !DILocation(line: 981, column: 2, scope: !18914)
!18916 = !DILocation(line: 0, scope: !18132, inlinedAt: !18917)
!18917 = distinct !DILocation(line: 982, column: 3, scope: !18918)
!18918 = distinct !DILexicalBlock(scope: !18911, file: !3397, line: 981, column: 9)
!18919 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18917)
!18920 = !DILocation(line: 985, column: 1, scope: !18906)
!18921 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3397, file: !3397, line: 695, type: !18042, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18922)
!18922 = !{!18923, !18924}
!18923 = !DILocalVariable(name: "thread", arg: 1, scope: !18921, file: !3397, line: 695, type: !3290)
!18924 = !DILocalVariable(name: "key", scope: !18921, file: !3397, line: 699, type: !18076)
!18925 = !DILocation(line: 0, scope: !18921)
!18926 = !DILocation(line: 0, scope: !18084, inlinedAt: !18927)
!18927 = distinct !DILocation(line: 699, column: 25, scope: !18921)
!18928 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18929)
!18929 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18927)
!18930 = !DILocation(line: 0, scope: !18093, inlinedAt: !18929)
!18931 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18927)
!18932 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18927)
!18933 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18927)
!18934 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18927)
!18935 = !DILocation(line: 702, column: 7, scope: !18936)
!18936 = distinct !DILexicalBlock(scope: !18921, file: !3397, line: 702, column: 6)
!18937 = !DILocation(line: 702, column: 6, scope: !18921)
!18938 = !DILocation(line: 0, scope: !18118, inlinedAt: !18939)
!18939 = distinct !DILocation(line: 703, column: 3, scope: !18940)
!18940 = distinct !DILexicalBlock(scope: !18936, file: !3397, line: 702, column: 38)
!18941 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !18939)
!18942 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !18939)
!18943 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !18939)
!18944 = !DILocation(line: 0, scope: !18132, inlinedAt: !18945)
!18945 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !18939)
!18946 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !18945)
!18947 = !DILocation(line: 704, column: 3, scope: !18940)
!18948 = !DILocation(line: 707, column: 2, scope: !18921)
!18949 = !DILocation(line: 708, column: 2, scope: !18921)
!18950 = !DILocation(line: 710, column: 2, scope: !18921)
!18951 = !DILocation(line: 713, column: 1, scope: !18921)
!18952 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15980, file: !15980, line: 96, type: !18225, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18953)
!18953 = !{!18954}
!18954 = !DILocalVariable(name: "thread", arg: 1, scope: !18952, file: !15980, line: 96, type: !3290)
!18955 = !DILocation(line: 0, scope: !18952)
!18956 = !DILocation(line: 98, column: 23, scope: !18952)
!18957 = !DILocation(line: 98, column: 36, scope: !18952)
!18958 = !DILocation(line: 98, column: 57, scope: !18952)
!18959 = !DILocation(line: 98, column: 2, scope: !18952)
!18960 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15980, file: !15980, line: 148, type: !18042, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18961)
!18961 = !{!18962}
!18962 = !DILocalVariable(name: "thread", arg: 1, scope: !18960, file: !15980, line: 148, type: !3290)
!18963 = !DILocation(line: 0, scope: !18960)
!18964 = !DILocation(line: 150, column: 15, scope: !18960)
!18965 = !DILocation(line: 150, column: 28, scope: !18960)
!18966 = !DILocation(line: 153, column: 1, scope: !18960)
!18967 = distinct !DISubprogram(name: "z_pend_thread", scope: !3397, file: !3397, line: 770, type: !18968, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !18974)
!18968 = !DISubroutineType(types: !18969)
!18969 = !{null, !3290, !3321, !18970}
!18970 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18971)
!18971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18972)
!18972 = !{!18973}
!18973 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18971, file: !105, line: 66, baseType: !104, size: 64)
!18974 = !{!18975, !18976, !18977, !18978, !18980}
!18975 = !DILocalVariable(name: "thread", arg: 1, scope: !18967, file: !3397, line: 770, type: !3290)
!18976 = !DILocalVariable(name: "wait_q", arg: 2, scope: !18967, file: !3397, line: 770, type: !3321)
!18977 = !DILocalVariable(name: "timeout", arg: 3, scope: !18967, file: !3397, line: 771, type: !18970)
!18978 = !DILocalVariable(name: "__i", scope: !18979, file: !3397, line: 774, type: !18076)
!18979 = distinct !DILexicalBlock(scope: !18967, file: !3397, line: 774, column: 2)
!18980 = !DILocalVariable(name: "__key", scope: !18979, file: !3397, line: 774, type: !18076)
!18981 = !DILocation(line: 0, scope: !18967)
!18982 = !DILocation(line: 773, column: 2, scope: !18983)
!18983 = distinct !DILexicalBlock(scope: !18984, file: !3397, line: 773, column: 2)
!18984 = distinct !DILexicalBlock(scope: !18967, file: !3397, line: 773, column: 2)
!18985 = !DILocation(line: 773, column: 2, scope: !18984)
!18986 = !DILocation(line: 773, column: 2, scope: !18987)
!18987 = distinct !DILexicalBlock(scope: !18983, file: !3397, line: 773, column: 2)
!18988 = !DILocation(line: 0, scope: !18979)
!18989 = !DILocation(line: 0, scope: !18084, inlinedAt: !18990)
!18990 = distinct !DILocation(line: 774, column: 2, scope: !18979)
!18991 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !18992)
!18992 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !18990)
!18993 = !DILocation(line: 0, scope: !18093, inlinedAt: !18992)
!18994 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !18990)
!18995 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !18990)
!18996 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !18990)
!18997 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !18990)
!18998 = !DILocation(line: 775, column: 3, scope: !18999)
!18999 = distinct !DILexicalBlock(scope: !19000, file: !3397, line: 774, column: 26)
!19000 = distinct !DILexicalBlock(scope: !18979, file: !3397, line: 774, column: 2)
!19001 = !DILocation(line: 0, scope: !18118, inlinedAt: !19002)
!19002 = distinct !DILocation(line: 774, column: 2, scope: !19000)
!19003 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19002)
!19004 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19002)
!19005 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19002)
!19006 = !DILocation(line: 0, scope: !18132, inlinedAt: !19007)
!19007 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19002)
!19008 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19007)
!19009 = !DILocation(line: 777, column: 1, scope: !18967)
!19010 = distinct !DISubprogram(name: "is_thread_dummy", scope: !3397, file: !3397, line: 79, type: !18225, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19011)
!19011 = !{!19012}
!19012 = !DILocalVariable(name: "thread", arg: 1, scope: !19010, file: !3397, line: 79, type: !3290)
!19013 = !DILocation(line: 0, scope: !19010)
!19014 = !DILocation(line: 81, column: 23, scope: !19010)
!19015 = !DILocation(line: 81, column: 36, scope: !19010)
!19016 = !DILocation(line: 81, column: 53, scope: !19010)
!19017 = !DILocation(line: 81, column: 2, scope: !19010)
!19018 = distinct !DISubprogram(name: "pend_locked", scope: !3397, file: !3397, line: 760, type: !18968, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19019)
!19019 = !{!19020, !19021, !19022}
!19020 = !DILocalVariable(name: "thread", arg: 1, scope: !19018, file: !3397, line: 760, type: !3290)
!19021 = !DILocalVariable(name: "wait_q", arg: 2, scope: !19018, file: !3397, line: 760, type: !3321)
!19022 = !DILocalVariable(name: "timeout", arg: 3, scope: !19018, file: !3397, line: 761, type: !18970)
!19023 = !DILocation(line: 0, scope: !19018)
!19024 = !DILocation(line: 766, column: 2, scope: !19018)
!19025 = !DILocation(line: 767, column: 2, scope: !19018)
!19026 = !DILocation(line: 768, column: 1, scope: !19018)
!19027 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3397, file: !3397, line: 740, type: !19028, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19030)
!19028 = !DISubroutineType(types: !19029)
!19029 = !{null, !3290, !3321}
!19030 = !{!19031, !19032}
!19031 = !DILocalVariable(name: "thread", arg: 1, scope: !19027, file: !3397, line: 740, type: !3290)
!19032 = !DILocalVariable(name: "wait_q", arg: 2, scope: !19027, file: !3397, line: 740, type: !3321)
!19033 = !DILocation(line: 0, scope: !19027)
!19034 = !DILocation(line: 742, column: 2, scope: !19027)
!19035 = !DILocation(line: 743, column: 2, scope: !19027)
!19036 = !DILocation(line: 747, column: 13, scope: !19037)
!19037 = distinct !DILexicalBlock(scope: !19027, file: !3397, line: 747, column: 6)
!19038 = !DILocation(line: 747, column: 6, scope: !19027)
!19039 = !DILocation(line: 748, column: 16, scope: !19040)
!19040 = distinct !DILexicalBlock(scope: !19037, file: !3397, line: 747, column: 22)
!19041 = !DILocation(line: 748, column: 26, scope: !19040)
!19042 = !DILocation(line: 749, column: 28, scope: !19040)
!19043 = !DILocation(line: 0, scope: !18307, inlinedAt: !19044)
!19044 = distinct !DILocation(line: 749, column: 3, scope: !19040)
!19045 = !DILocation(line: 186, column: 2, scope: !18317, inlinedAt: !19044)
!19046 = !DILocation(line: 186, column: 2, scope: !18318, inlinedAt: !19044)
!19047 = !DILocation(line: 186, column: 2, scope: !18321, inlinedAt: !19044)
!19048 = !DILocation(line: 188, column: 2, scope: !18323, inlinedAt: !19044)
!19049 = !DILocation(line: 188, column: 2, scope: !18325, inlinedAt: !19044)
!19050 = !DILocation(line: 0, scope: !18323, inlinedAt: !19044)
!19051 = !DILocation(line: 189, column: 7, scope: !18328, inlinedAt: !19044)
!19052 = !DILocation(line: 189, column: 35, scope: !18328, inlinedAt: !19044)
!19053 = !DILocation(line: 189, column: 7, scope: !18329, inlinedAt: !19044)
!19054 = !DILocation(line: 191, column: 21, scope: !18333, inlinedAt: !19044)
!19055 = !DILocation(line: 190, column: 4, scope: !18333, inlinedAt: !19044)
!19056 = !DILocation(line: 192, column: 4, scope: !18333, inlinedAt: !19044)
!19057 = distinct !{!19057, !19048, !19058}
!19058 = !DILocation(line: 194, column: 2, scope: !18323, inlinedAt: !19044)
!19059 = !DILocation(line: 196, column: 37, scope: !18307, inlinedAt: !19044)
!19060 = !DILocation(line: 196, column: 2, scope: !18307, inlinedAt: !19044)
!19061 = !DILocation(line: 197, column: 1, scope: !18307, inlinedAt: !19044)
!19062 = !DILocation(line: 751, column: 1, scope: !19027)
!19063 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3397, file: !3397, line: 753, type: !19064, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19066)
!19064 = !DISubroutineType(types: !19065)
!19065 = !{null, !3290, !18970}
!19066 = !{!19067, !19068}
!19067 = !DILocalVariable(name: "thread", arg: 1, scope: !19063, file: !3397, line: 753, type: !3290)
!19068 = !DILocalVariable(name: "timeout", arg: 2, scope: !19063, file: !3397, line: 753, type: !18970)
!19069 = !DILocation(line: 0, scope: !19063)
!19070 = !DILocation(line: 755, column: 7, scope: !19071)
!19071 = distinct !DILexicalBlock(scope: !19063, file: !3397, line: 755, column: 6)
!19072 = !DILocation(line: 755, column: 6, scope: !19063)
!19073 = !DILocation(line: 756, column: 3, scope: !19074)
!19074 = distinct !DILexicalBlock(scope: !19071, file: !3397, line: 755, column: 41)
!19075 = !DILocation(line: 757, column: 2, scope: !19074)
!19076 = !DILocation(line: 758, column: 1, scope: !19063)
!19077 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !16811, file: !16811, line: 47, type: !19064, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19078)
!19078 = !{!19079, !19080}
!19079 = !DILocalVariable(name: "thread", arg: 1, scope: !19077, file: !16811, line: 47, type: !3290)
!19080 = !DILocalVariable(name: "ticks", arg: 2, scope: !19077, file: !16811, line: 47, type: !18970)
!19081 = !DILocation(line: 0, scope: !19077)
!19082 = !DILocation(line: 49, column: 30, scope: !19077)
!19083 = !DILocation(line: 49, column: 2, scope: !19077)
!19084 = !DILocation(line: 50, column: 1, scope: !19077)
!19085 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3397, file: !3397, line: 795, type: !3347, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19086)
!19086 = !{!19087, !19088, !19089, !19091, !19092}
!19087 = !DILocalVariable(name: "timeout", arg: 1, scope: !19085, file: !3397, line: 795, type: !3349)
!19088 = !DILocalVariable(name: "thread", scope: !19085, file: !3397, line: 797, type: !3290)
!19089 = !DILocalVariable(name: "__i", scope: !19090, file: !3397, line: 800, type: !18076)
!19090 = distinct !DILexicalBlock(scope: !19085, file: !3397, line: 800, column: 2)
!19091 = !DILocalVariable(name: "__key", scope: !19090, file: !3397, line: 800, type: !18076)
!19092 = !DILocalVariable(name: "killed", scope: !19093, file: !3397, line: 801, type: !119)
!19093 = distinct !DILexicalBlock(scope: !19094, file: !3397, line: 800, column: 26)
!19094 = distinct !DILexicalBlock(scope: !19090, file: !3397, line: 800, column: 2)
!19095 = !DILocation(line: 0, scope: !19085)
!19096 = !DILocation(line: 797, column: 28, scope: !19085)
!19097 = !DILocation(line: 0, scope: !19090)
!19098 = !DILocation(line: 0, scope: !18084, inlinedAt: !19099)
!19099 = distinct !DILocation(line: 800, column: 2, scope: !19090)
!19100 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19101)
!19101 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19099)
!19102 = !DILocation(line: 0, scope: !18093, inlinedAt: !19101)
!19103 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19099)
!19104 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19099)
!19105 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19099)
!19106 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19099)
!19107 = !DILocation(line: 801, column: 27, scope: !19093)
!19108 = !DILocation(line: 801, column: 32, scope: !19093)
!19109 = !DILocation(line: 801, column: 61, scope: !19093)
!19110 = !DILocation(line: 0, scope: !19093)
!19111 = !DILocation(line: 804, column: 7, scope: !19093)
!19112 = !DILocation(line: 805, column: 21, scope: !19113)
!19113 = distinct !DILexicalBlock(scope: !19114, file: !3397, line: 805, column: 8)
!19114 = distinct !DILexicalBlock(scope: !19115, file: !3397, line: 804, column: 16)
!19115 = distinct !DILexicalBlock(scope: !19093, file: !3397, line: 804, column: 7)
!19116 = !DILocation(line: 805, column: 31, scope: !19113)
!19117 = !DILocation(line: 805, column: 8, scope: !19114)
!19118 = !DILocation(line: 806, column: 5, scope: !19119)
!19119 = distinct !DILexicalBlock(scope: !19113, file: !3397, line: 805, column: 40)
!19120 = !DILocation(line: 807, column: 4, scope: !19119)
!19121 = !DILocation(line: 808, column: 4, scope: !19114)
!19122 = !DILocation(line: 809, column: 4, scope: !19114)
!19123 = !DILocation(line: 810, column: 4, scope: !19114)
!19124 = !DILocation(line: 811, column: 3, scope: !19114)
!19125 = !DILocation(line: 0, scope: !18118, inlinedAt: !19126)
!19126 = distinct !DILocation(line: 800, column: 2, scope: !19094)
!19127 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19126)
!19128 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19126)
!19129 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19126)
!19130 = !DILocation(line: 0, scope: !18132, inlinedAt: !19131)
!19131 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19126)
!19132 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19131)
!19133 = !DILocation(line: 813, column: 1, scope: !19085)
!19134 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3397, file: !3397, line: 779, type: !18042, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19135)
!19135 = !{!19136}
!19136 = !DILocalVariable(name: "thread", arg: 1, scope: !19134, file: !3397, line: 779, type: !3290)
!19137 = !DILocation(line: 0, scope: !19134)
!19138 = !DILocation(line: 781, column: 21, scope: !19134)
!19139 = !DILocation(line: 781, column: 2, scope: !19134)
!19140 = !DILocation(line: 782, column: 2, scope: !19134)
!19141 = !DILocation(line: 783, column: 15, scope: !19134)
!19142 = !DILocation(line: 783, column: 25, scope: !19134)
!19143 = !DILocation(line: 784, column: 1, scope: !19134)
!19144 = distinct !DISubprogram(name: "pended_on_thread", scope: !3397, file: !3397, line: 724, type: !19145, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19147)
!19145 = !DISubroutineType(types: !19146)
!19146 = !{!3321, !3290}
!19147 = !{!19148}
!19148 = !DILocalVariable(name: "thread", arg: 1, scope: !19144, file: !3397, line: 724, type: !3290)
!19149 = !DILocation(line: 0, scope: !19144)
!19150 = !DILocation(line: 726, column: 2, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19152, file: !3397, line: 726, column: 2)
!19152 = distinct !DILexicalBlock(scope: !19144, file: !3397, line: 726, column: 2)
!19153 = !DILocation(line: 726, column: 2, scope: !19152)
!19154 = !DILocation(line: 726, column: 2, scope: !19155)
!19155 = distinct !DILexicalBlock(scope: !19151, file: !3397, line: 726, column: 2)
!19156 = !DILocation(line: 728, column: 2, scope: !19144)
!19157 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15980, file: !15980, line: 165, type: !18042, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19158)
!19158 = !{!19159}
!19159 = !DILocalVariable(name: "thread", arg: 1, scope: !19157, file: !15980, line: 165, type: !3290)
!19160 = !DILocation(line: 0, scope: !19157)
!19161 = !DILocation(line: 167, column: 15, scope: !19157)
!19162 = !DILocation(line: 167, column: 28, scope: !19157)
!19163 = !DILocation(line: 168, column: 1, scope: !19157)
!19164 = distinct !DISubprogram(name: "unready_thread", scope: !3397, file: !3397, line: 731, type: !18042, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19165)
!19165 = !{!19166}
!19166 = !DILocalVariable(name: "thread", arg: 1, scope: !19164, file: !3397, line: 731, type: !3290)
!19167 = !DILocation(line: 0, scope: !19164)
!19168 = !DILocation(line: 733, column: 6, scope: !19169)
!19169 = distinct !DILexicalBlock(scope: !19164, file: !3397, line: 733, column: 6)
!19170 = !DILocation(line: 733, column: 6, scope: !19164)
!19171 = !DILocation(line: 0, scope: !18276, inlinedAt: !19172)
!19172 = distinct !DILocation(line: 734, column: 3, scope: !19173)
!19173 = distinct !DILexicalBlock(scope: !19169, file: !3397, line: 733, column: 34)
!19174 = !DILocation(line: 266, column: 15, scope: !18276, inlinedAt: !19172)
!19175 = !DILocation(line: 266, column: 28, scope: !18276, inlinedAt: !19172)
!19176 = !DILocation(line: 0, scope: !18284, inlinedAt: !19177)
!19177 = distinct !DILocation(line: 268, column: 3, scope: !18288, inlinedAt: !19172)
!19178 = !DILocation(line: 234, column: 2, scope: !18284, inlinedAt: !19177)
!19179 = !DILocation(line: 735, column: 2, scope: !19173)
!19180 = !DILocation(line: 736, column: 25, scope: !19164)
!19181 = !DILocation(line: 736, column: 22, scope: !19164)
!19182 = !DILocation(line: 736, column: 2, scope: !19164)
!19183 = !DILocation(line: 737, column: 1, scope: !19164)
!19184 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15980, file: !15980, line: 160, type: !18042, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19185)
!19185 = !{!19186}
!19186 = !DILocalVariable(name: "thread", arg: 1, scope: !19184, file: !15980, line: 160, type: !3290)
!19187 = !DILocation(line: 0, scope: !19184)
!19188 = !DILocation(line: 162, column: 15, scope: !19184)
!19189 = !DILocation(line: 162, column: 28, scope: !19184)
!19190 = !DILocation(line: 163, column: 1, scope: !19184)
!19191 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3397, file: !3397, line: 786, type: !18042, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19192)
!19192 = !{!19193, !19194, !19196}
!19193 = !DILocalVariable(name: "thread", arg: 1, scope: !19191, file: !3397, line: 786, type: !3290)
!19194 = !DILocalVariable(name: "__i", scope: !19195, file: !3397, line: 788, type: !18076)
!19195 = distinct !DILexicalBlock(scope: !19191, file: !3397, line: 788, column: 2)
!19196 = !DILocalVariable(name: "__key", scope: !19195, file: !3397, line: 788, type: !18076)
!19197 = !DILocation(line: 0, scope: !19191)
!19198 = !DILocation(line: 0, scope: !19195)
!19199 = !DILocation(line: 0, scope: !18084, inlinedAt: !19200)
!19200 = distinct !DILocation(line: 788, column: 2, scope: !19195)
!19201 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19202)
!19202 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19200)
!19203 = !DILocation(line: 0, scope: !18093, inlinedAt: !19202)
!19204 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19200)
!19205 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19200)
!19206 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19200)
!19207 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19200)
!19208 = !DILocation(line: 789, column: 3, scope: !19209)
!19209 = distinct !DILexicalBlock(scope: !19210, file: !3397, line: 788, column: 26)
!19210 = distinct !DILexicalBlock(scope: !19195, file: !3397, line: 788, column: 2)
!19211 = !DILocation(line: 0, scope: !18118, inlinedAt: !19212)
!19212 = distinct !DILocation(line: 788, column: 2, scope: !19210)
!19213 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19212)
!19214 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19212)
!19215 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19212)
!19216 = !DILocation(line: 0, scope: !18132, inlinedAt: !19217)
!19217 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19212)
!19218 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19217)
!19219 = !DILocation(line: 791, column: 1, scope: !19191)
!19220 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3397, file: !3397, line: 816, type: !19221, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19223)
!19221 = !DISubroutineType(types: !19222)
!19222 = !{!103, !108, !3321, !18970}
!19223 = !{!19224, !19225, !19226, !19227, !19228, !19230}
!19224 = !DILocalVariable(name: "key", arg: 1, scope: !19220, file: !3397, line: 816, type: !108)
!19225 = !DILocalVariable(name: "wait_q", arg: 2, scope: !19220, file: !3397, line: 816, type: !3321)
!19226 = !DILocalVariable(name: "timeout", arg: 3, scope: !19220, file: !3397, line: 816, type: !18970)
!19227 = !DILocalVariable(name: "ret", scope: !19220, file: !3397, line: 828, type: !103)
!19228 = !DILocalVariable(name: "__i", scope: !19229, file: !3397, line: 829, type: !18076)
!19229 = distinct !DILexicalBlock(scope: !19220, file: !3397, line: 829, column: 2)
!19230 = !DILocalVariable(name: "__key", scope: !19229, file: !3397, line: 829, type: !18076)
!19231 = !DILocation(line: 0, scope: !19220)
!19232 = !DILocation(line: 823, column: 14, scope: !19220)
!19233 = !DILocation(line: 823, column: 2, scope: !19220)
!19234 = !DILocation(line: 826, column: 20, scope: !19220)
!19235 = !DILocation(line: 826, column: 18, scope: !19220)
!19236 = !DILocation(line: 828, column: 12, scope: !19220)
!19237 = !DILocation(line: 0, scope: !19229)
!19238 = !DILocation(line: 0, scope: !18084, inlinedAt: !19239)
!19239 = distinct !DILocation(line: 829, column: 2, scope: !19229)
!19240 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19241)
!19241 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19239)
!19242 = !DILocation(line: 0, scope: !18093, inlinedAt: !19241)
!19243 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19239)
!19244 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19239)
!19245 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19239)
!19246 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19239)
!19247 = !DILocation(line: 830, column: 7, scope: !19248)
!19248 = distinct !DILexicalBlock(scope: !19249, file: !3397, line: 830, column: 7)
!19249 = distinct !DILexicalBlock(scope: !19250, file: !3397, line: 829, column: 26)
!19250 = distinct !DILexicalBlock(scope: !19229, file: !3397, line: 829, column: 2)
!19251 = !DILocation(line: 830, column: 26, scope: !19248)
!19252 = !DILocation(line: 830, column: 23, scope: !19248)
!19253 = !DILocation(line: 830, column: 7, scope: !19249)
!19254 = !DILocation(line: 831, column: 20, scope: !19255)
!19255 = distinct !DILexicalBlock(scope: !19248, file: !3397, line: 830, column: 36)
!19256 = !DILocation(line: 832, column: 3, scope: !19255)
!19257 = !DILocation(line: 0, scope: !18118, inlinedAt: !19258)
!19258 = distinct !DILocation(line: 829, column: 2, scope: !19250)
!19259 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19258)
!19260 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19258)
!19261 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19258)
!19262 = !DILocation(line: 0, scope: !18132, inlinedAt: !19263)
!19263 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19258)
!19264 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19263)
!19265 = !DILocation(line: 834, column: 2, scope: !19220)
!19266 = distinct !DISubprogram(name: "z_pend_curr", scope: !3397, file: !3397, line: 840, type: !19267, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19269)
!19267 = !DISubroutineType(types: !19268)
!19268 = !{!103, !18087, !18076, !3321, !18970}
!19269 = !{!19270, !19271, !19272, !19273}
!19270 = !DILocalVariable(name: "lock", arg: 1, scope: !19266, file: !3397, line: 840, type: !18087)
!19271 = !DILocalVariable(name: "key", arg: 2, scope: !19266, file: !3397, line: 840, type: !18076)
!19272 = !DILocalVariable(name: "wait_q", arg: 3, scope: !19266, file: !3397, line: 841, type: !3321)
!19273 = !DILocalVariable(name: "timeout", arg: 4, scope: !19266, file: !3397, line: 841, type: !18970)
!19274 = !DILocation(line: 0, scope: !19266)
!19275 = !DILocation(line: 844, column: 20, scope: !19266)
!19276 = !DILocation(line: 844, column: 18, scope: !19266)
!19277 = !DILocation(line: 846, column: 2, scope: !19278)
!19278 = distinct !DILexicalBlock(scope: !19279, file: !3397, line: 846, column: 2)
!19279 = distinct !DILexicalBlock(scope: !19266, file: !3397, line: 846, column: 2)
!19280 = !DILocation(line: 846, column: 2, scope: !19279)
!19281 = !DILocation(line: 846, column: 2, scope: !19282)
!19282 = distinct !DILexicalBlock(scope: !19278, file: !3397, line: 846, column: 2)
!19283 = !DILocation(line: 0, scope: !18084, inlinedAt: !19284)
!19284 = distinct !DILocation(line: 856, column: 9, scope: !19266)
!19285 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19286)
!19286 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19284)
!19287 = !DILocation(line: 0, scope: !18093, inlinedAt: !19286)
!19288 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19284)
!19289 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19284)
!19290 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19284)
!19291 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19284)
!19292 = !DILocation(line: 857, column: 14, scope: !19266)
!19293 = !DILocation(line: 857, column: 2, scope: !19266)
!19294 = !DILocation(line: 0, scope: !18769, inlinedAt: !19295)
!19295 = distinct !DILocation(line: 858, column: 2, scope: !19266)
!19296 = !DILocation(line: 225, column: 2, scope: !18776, inlinedAt: !19295)
!19297 = !DILocation(line: 225, column: 2, scope: !18777, inlinedAt: !19295)
!19298 = !DILocation(line: 225, column: 2, scope: !18780, inlinedAt: !19295)
!19299 = !DILocation(line: 0, scope: !18760, inlinedAt: !19300)
!19300 = distinct !DILocation(line: 859, column: 9, scope: !19266)
!19301 = !DILocation(line: 0, scope: !18769, inlinedAt: !19302)
!19302 = distinct !DILocation(line: 195, column: 2, scope: !18760, inlinedAt: !19300)
!19303 = !DILocation(line: 225, column: 2, scope: !18776, inlinedAt: !19302)
!19304 = !DILocation(line: 225, column: 2, scope: !18777, inlinedAt: !19302)
!19305 = !DILocation(line: 225, column: 2, scope: !18780, inlinedAt: !19302)
!19306 = !DILocation(line: 196, column: 9, scope: !18760, inlinedAt: !19300)
!19307 = !DILocation(line: 859, column: 2, scope: !19266)
!19308 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3397, file: !3397, line: 862, type: !19309, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19311)
!19309 = !DISubroutineType(types: !19310)
!19310 = !{!3290, !3321}
!19311 = !{!19312, !19313, !19314, !19316}
!19312 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19308, file: !3397, line: 862, type: !3321)
!19313 = !DILocalVariable(name: "thread", scope: !19308, file: !3397, line: 864, type: !3290)
!19314 = !DILocalVariable(name: "__i", scope: !19315, file: !3397, line: 866, type: !18076)
!19315 = distinct !DILexicalBlock(scope: !19308, file: !3397, line: 866, column: 2)
!19316 = !DILocalVariable(name: "__key", scope: !19315, file: !3397, line: 866, type: !18076)
!19317 = !DILocation(line: 0, scope: !19308)
!19318 = !DILocation(line: 0, scope: !19315)
!19319 = !DILocation(line: 0, scope: !18084, inlinedAt: !19320)
!19320 = distinct !DILocation(line: 866, column: 2, scope: !19315)
!19321 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19322)
!19322 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19320)
!19323 = !DILocation(line: 0, scope: !18093, inlinedAt: !19322)
!19324 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19320)
!19325 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19320)
!19326 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19320)
!19327 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19320)
!19328 = !DILocation(line: 867, column: 12, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19330, file: !3397, line: 866, column: 26)
!19330 = distinct !DILexicalBlock(scope: !19315, file: !3397, line: 866, column: 2)
!19331 = !DILocation(line: 869, column: 14, scope: !19332)
!19332 = distinct !DILexicalBlock(scope: !19329, file: !3397, line: 869, column: 7)
!19333 = !DILocation(line: 869, column: 7, scope: !19329)
!19334 = !DILocation(line: 870, column: 4, scope: !19335)
!19335 = distinct !DILexicalBlock(scope: !19332, file: !3397, line: 869, column: 23)
!19336 = !DILocation(line: 871, column: 3, scope: !19335)
!19337 = !DILocation(line: 0, scope: !18118, inlinedAt: !19338)
!19338 = distinct !DILocation(line: 866, column: 2, scope: !19330)
!19339 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19338)
!19340 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19338)
!19341 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19338)
!19342 = !DILocation(line: 0, scope: !18132, inlinedAt: !19343)
!19343 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19338)
!19344 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19343)
!19345 = !DILocation(line: 874, column: 2, scope: !19308)
!19346 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3397, file: !3397, line: 877, type: !19309, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19347)
!19347 = !{!19348, !19349, !19350, !19352}
!19348 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19346, file: !3397, line: 877, type: !3321)
!19349 = !DILocalVariable(name: "thread", scope: !19346, file: !3397, line: 879, type: !3290)
!19350 = !DILocalVariable(name: "__i", scope: !19351, file: !3397, line: 881, type: !18076)
!19351 = distinct !DILexicalBlock(scope: !19346, file: !3397, line: 881, column: 2)
!19352 = !DILocalVariable(name: "__key", scope: !19351, file: !3397, line: 881, type: !18076)
!19353 = !DILocation(line: 0, scope: !19346)
!19354 = !DILocation(line: 0, scope: !19351)
!19355 = !DILocation(line: 0, scope: !18084, inlinedAt: !19356)
!19356 = distinct !DILocation(line: 881, column: 2, scope: !19351)
!19357 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19358)
!19358 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19356)
!19359 = !DILocation(line: 0, scope: !18093, inlinedAt: !19358)
!19360 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19356)
!19361 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19356)
!19362 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19356)
!19363 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19356)
!19364 = !DILocation(line: 882, column: 12, scope: !19365)
!19365 = distinct !DILexicalBlock(scope: !19366, file: !3397, line: 881, column: 26)
!19366 = distinct !DILexicalBlock(scope: !19351, file: !3397, line: 881, column: 2)
!19367 = !DILocation(line: 884, column: 14, scope: !19368)
!19368 = distinct !DILexicalBlock(scope: !19365, file: !3397, line: 884, column: 7)
!19369 = !DILocation(line: 884, column: 7, scope: !19365)
!19370 = !DILocation(line: 885, column: 4, scope: !19371)
!19371 = distinct !DILexicalBlock(scope: !19368, file: !3397, line: 884, column: 23)
!19372 = !DILocation(line: 886, column: 10, scope: !19371)
!19373 = !DILocation(line: 887, column: 3, scope: !19371)
!19374 = !DILocation(line: 0, scope: !18118, inlinedAt: !19375)
!19375 = distinct !DILocation(line: 881, column: 2, scope: !19366)
!19376 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19375)
!19377 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19375)
!19378 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19375)
!19379 = !DILocation(line: 0, scope: !18132, inlinedAt: !19380)
!19380 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19375)
!19381 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19380)
!19382 = !DILocation(line: 890, column: 2, scope: !19346)
!19383 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3397, file: !3397, line: 893, type: !18042, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19384)
!19384 = !{!19385}
!19385 = !DILocalVariable(name: "thread", arg: 1, scope: !19383, file: !3397, line: 893, type: !3290)
!19386 = !DILocation(line: 0, scope: !19383)
!19387 = !DILocation(line: 0, scope: !19191, inlinedAt: !19388)
!19388 = distinct !DILocation(line: 895, column: 2, scope: !19383)
!19389 = !DILocation(line: 0, scope: !19195, inlinedAt: !19388)
!19390 = !DILocation(line: 0, scope: !18084, inlinedAt: !19391)
!19391 = distinct !DILocation(line: 788, column: 2, scope: !19195, inlinedAt: !19388)
!19392 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19393)
!19393 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19391)
!19394 = !DILocation(line: 0, scope: !18093, inlinedAt: !19393)
!19395 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19391)
!19396 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19391)
!19397 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19391)
!19398 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19391)
!19399 = !DILocation(line: 789, column: 3, scope: !19209, inlinedAt: !19388)
!19400 = !DILocation(line: 0, scope: !18118, inlinedAt: !19401)
!19401 = distinct !DILocation(line: 788, column: 2, scope: !19210, inlinedAt: !19388)
!19402 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19401)
!19403 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19401)
!19404 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19401)
!19405 = !DILocation(line: 0, scope: !18132, inlinedAt: !19406)
!19406 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19401)
!19407 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19406)
!19408 = !DILocation(line: 896, column: 8, scope: !19383)
!19409 = !DILocation(line: 897, column: 1, scope: !19383)
!19410 = distinct !DISubprogram(name: "z_set_prio", scope: !3397, file: !3397, line: 902, type: !18445, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19411)
!19411 = !{!19412, !19413, !19414, !19415, !19417}
!19412 = !DILocalVariable(name: "thread", arg: 1, scope: !19410, file: !3397, line: 902, type: !3290)
!19413 = !DILocalVariable(name: "prio", arg: 2, scope: !19410, file: !3397, line: 902, type: !103)
!19414 = !DILocalVariable(name: "need_sched", scope: !19410, file: !3397, line: 904, type: !119)
!19415 = !DILocalVariable(name: "__i", scope: !19416, file: !3397, line: 906, type: !18076)
!19416 = distinct !DILexicalBlock(scope: !19410, file: !3397, line: 906, column: 2)
!19417 = !DILocalVariable(name: "__key", scope: !19416, file: !3397, line: 906, type: !18076)
!19418 = !DILocation(line: 0, scope: !19410)
!19419 = !DILocation(line: 0, scope: !19416)
!19420 = !DILocation(line: 0, scope: !18084, inlinedAt: !19421)
!19421 = distinct !DILocation(line: 906, column: 2, scope: !19416)
!19422 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19423)
!19423 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19421)
!19424 = !DILocation(line: 0, scope: !18093, inlinedAt: !19423)
!19425 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19421)
!19426 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19421)
!19427 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19421)
!19428 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19421)
!19429 = !DILocation(line: 907, column: 16, scope: !19430)
!19430 = distinct !DILexicalBlock(scope: !19431, file: !3397, line: 906, column: 26)
!19431 = distinct !DILexicalBlock(scope: !19416, file: !3397, line: 906, column: 2)
!19432 = !DILocation(line: 909, column: 7, scope: !19430)
!19433 = !DILocation(line: 0, scope: !18276, inlinedAt: !19434)
!19434 = distinct !DILocation(line: 912, column: 5, scope: !19435)
!19435 = distinct !DILexicalBlock(scope: !19436, file: !3397, line: 911, column: 63)
!19436 = distinct !DILexicalBlock(scope: !19437, file: !3397, line: 911, column: 8)
!19437 = distinct !DILexicalBlock(scope: !19438, file: !3397, line: 909, column: 19)
!19438 = distinct !DILexicalBlock(scope: !19430, file: !3397, line: 909, column: 7)
!19439 = !DILocation(line: 266, column: 28, scope: !18276, inlinedAt: !19434)
!19440 = !DILocation(line: 0, scope: !18284, inlinedAt: !19441)
!19441 = distinct !DILocation(line: 268, column: 3, scope: !18288, inlinedAt: !19434)
!19442 = !DILocation(line: 234, column: 2, scope: !18284, inlinedAt: !19441)
!19443 = !DILocation(line: 913, column: 23, scope: !19435)
!19444 = !DILocation(line: 0, scope: !18293, inlinedAt: !19445)
!19445 = distinct !DILocation(line: 914, column: 5, scope: !19435)
!19446 = !DILocation(line: 252, column: 28, scope: !18293, inlinedAt: !19445)
!19447 = !DILocation(line: 0, scope: !18300, inlinedAt: !19448)
!19448 = distinct !DILocation(line: 254, column: 3, scope: !18304, inlinedAt: !19445)
!19449 = !DILocation(line: 0, scope: !18307, inlinedAt: !19450)
!19450 = distinct !DILocation(line: 229, column: 2, scope: !18300, inlinedAt: !19448)
!19451 = !DILocation(line: 186, column: 2, scope: !18317, inlinedAt: !19450)
!19452 = !DILocation(line: 186, column: 2, scope: !18318, inlinedAt: !19450)
!19453 = !DILocation(line: 186, column: 2, scope: !18321, inlinedAt: !19450)
!19454 = !DILocation(line: 188, column: 2, scope: !18323, inlinedAt: !19450)
!19455 = !DILocation(line: 188, column: 2, scope: !18325, inlinedAt: !19450)
!19456 = !DILocation(line: 0, scope: !18323, inlinedAt: !19450)
!19457 = !DILocation(line: 189, column: 7, scope: !18328, inlinedAt: !19450)
!19458 = !DILocation(line: 189, column: 35, scope: !18328, inlinedAt: !19450)
!19459 = !DILocation(line: 189, column: 7, scope: !18329, inlinedAt: !19450)
!19460 = !DILocation(line: 190, column: 4, scope: !18333, inlinedAt: !19450)
!19461 = !DILocation(line: 192, column: 4, scope: !18333, inlinedAt: !19450)
!19462 = distinct !{!19462, !19454, !19463}
!19463 = !DILocation(line: 194, column: 2, scope: !18323, inlinedAt: !19450)
!19464 = !DILocation(line: 196, column: 2, scope: !18307, inlinedAt: !19450)
!19465 = !DILocation(line: 197, column: 1, scope: !18307, inlinedAt: !19450)
!19466 = !DILocation(line: 918, column: 4, scope: !19437)
!19467 = !DILocation(line: 919, column: 3, scope: !19437)
!19468 = !DILocation(line: 920, column: 22, scope: !19469)
!19469 = distinct !DILexicalBlock(scope: !19438, file: !3397, line: 919, column: 10)
!19470 = !DILocation(line: 0, scope: !18118, inlinedAt: !19471)
!19471 = distinct !DILocation(line: 906, column: 2, scope: !19431)
!19472 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19471)
!19473 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19471)
!19474 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19471)
!19475 = !DILocation(line: 0, scope: !18132, inlinedAt: !19476)
!19476 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19471)
!19477 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19476)
!19478 = !DILocation(line: 926, column: 2, scope: !19410)
!19479 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3397, file: !3397, line: 929, type: !19480, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19482)
!19480 = !DISubroutineType(types: !19481)
!19481 = !{null, !3290, !103}
!19482 = !{!19483, !19484, !19485}
!19483 = !DILocalVariable(name: "thread", arg: 1, scope: !19479, file: !3397, line: 929, type: !3290)
!19484 = !DILocalVariable(name: "prio", arg: 2, scope: !19479, file: !3397, line: 929, type: !103)
!19485 = !DILocalVariable(name: "need_sched", scope: !19479, file: !3397, line: 931, type: !119)
!19486 = !DILocation(line: 0, scope: !19479)
!19487 = !DILocation(line: 931, column: 20, scope: !19479)
!19488 = !DILocation(line: 935, column: 17, scope: !19489)
!19489 = distinct !DILexicalBlock(scope: !19479, file: !3397, line: 935, column: 6)
!19490 = !DILocation(line: 935, column: 20, scope: !19489)
!19491 = !DILocation(line: 935, column: 35, scope: !19489)
!19492 = !DILocation(line: 935, column: 48, scope: !19489)
!19493 = !DILocation(line: 935, column: 6, scope: !19479)
!19494 = !DILocation(line: 936, column: 3, scope: !19495)
!19495 = distinct !DILexicalBlock(scope: !19489, file: !3397, line: 935, column: 55)
!19496 = !DILocation(line: 937, column: 2, scope: !19495)
!19497 = !DILocation(line: 938, column: 1, scope: !19479)
!19498 = distinct !DISubprogram(name: "k_sched_lock", scope: !3397, file: !3397, line: 987, type: !333, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19499)
!19499 = !{!19500, !19502}
!19500 = !DILocalVariable(name: "__i", scope: !19501, file: !3397, line: 989, type: !18076)
!19501 = distinct !DILexicalBlock(scope: !19498, file: !3397, line: 989, column: 2)
!19502 = !DILocalVariable(name: "__key", scope: !19501, file: !3397, line: 989, type: !18076)
!19503 = !DILocation(line: 0, scope: !19501)
!19504 = !DILocation(line: 0, scope: !18084, inlinedAt: !19505)
!19505 = distinct !DILocation(line: 989, column: 2, scope: !19501)
!19506 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19507)
!19507 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19505)
!19508 = !DILocation(line: 0, scope: !18093, inlinedAt: !19507)
!19509 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19505)
!19510 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19505)
!19511 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19505)
!19512 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19505)
!19513 = !DILocation(line: 992, column: 3, scope: !19514)
!19514 = distinct !DILexicalBlock(scope: !19515, file: !3397, line: 989, column: 26)
!19515 = distinct !DILexicalBlock(scope: !19501, file: !3397, line: 989, column: 2)
!19516 = !DILocation(line: 0, scope: !18118, inlinedAt: !19517)
!19517 = distinct !DILocation(line: 989, column: 2, scope: !19515)
!19518 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19517)
!19519 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19517)
!19520 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19517)
!19521 = !DILocation(line: 0, scope: !18132, inlinedAt: !19522)
!19522 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19517)
!19523 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19522)
!19524 = !DILocation(line: 994, column: 1, scope: !19498)
!19525 = distinct !DISubprogram(name: "z_sched_lock", scope: !15980, file: !15980, line: 251, type: !333, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!19526 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !19527)
!19527 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !19528)
!19528 = distinct !DILocation(line: 253, column: 2, scope: !19529)
!19529 = distinct !DILexicalBlock(scope: !19530, file: !15980, line: 253, column: 2)
!19530 = distinct !DILexicalBlock(scope: !19525, file: !15980, line: 253, column: 2)
!19531 = !DILocation(line: 0, scope: !18809, inlinedAt: !19527)
!19532 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !19528)
!19533 = !DILocation(line: 253, column: 2, scope: !19530)
!19534 = !DILocation(line: 253, column: 2, scope: !19535)
!19535 = distinct !DILexicalBlock(scope: !19529, file: !15980, line: 253, column: 2)
!19536 = !DILocation(line: 254, column: 2, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19538, file: !15980, line: 254, column: 2)
!19538 = distinct !DILexicalBlock(scope: !19525, file: !15980, line: 254, column: 2)
!19539 = !DILocation(line: 254, column: 2, scope: !19538)
!19540 = !DILocation(line: 254, column: 2, scope: !19541)
!19541 = distinct !DILexicalBlock(scope: !19537, file: !15980, line: 254, column: 2)
!19542 = !DILocation(line: 256, column: 2, scope: !19525)
!19543 = !DILocation(line: 258, column: 2, scope: !19544)
!19544 = distinct !DILexicalBlock(scope: !19525, file: !15980, line: 258, column: 2)
!19545 = !{i64 2155196451}
!19546 = !DILocation(line: 259, column: 1, scope: !19525)
!19547 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3397, file: !3397, line: 996, type: !333, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19548)
!19548 = !{!19549, !19551}
!19549 = !DILocalVariable(name: "__i", scope: !19550, file: !3397, line: 998, type: !18076)
!19550 = distinct !DILexicalBlock(scope: !19547, file: !3397, line: 998, column: 2)
!19551 = !DILocalVariable(name: "__key", scope: !19550, file: !3397, line: 998, type: !18076)
!19552 = !DILocation(line: 0, scope: !19550)
!19553 = !DILocation(line: 0, scope: !18084, inlinedAt: !19554)
!19554 = distinct !DILocation(line: 998, column: 2, scope: !19550)
!19555 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19556)
!19556 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19554)
!19557 = !DILocation(line: 0, scope: !18093, inlinedAt: !19556)
!19558 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19554)
!19559 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19554)
!19560 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19554)
!19561 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19554)
!19562 = !DILocation(line: 999, column: 3, scope: !19563)
!19563 = distinct !DILexicalBlock(scope: !19564, file: !3397, line: 999, column: 3)
!19564 = distinct !DILexicalBlock(scope: !19565, file: !3397, line: 999, column: 3)
!19565 = distinct !DILexicalBlock(scope: !19566, file: !3397, line: 998, column: 26)
!19566 = distinct !DILexicalBlock(scope: !19550, file: !3397, line: 998, column: 2)
!19567 = !DILocation(line: 999, column: 3, scope: !19564)
!19568 = !DILocation(line: 999, column: 3, scope: !19569)
!19569 = distinct !DILexicalBlock(scope: !19563, file: !3397, line: 999, column: 3)
!19570 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !19571)
!19571 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !19572)
!19572 = distinct !DILocation(line: 1000, column: 3, scope: !19573)
!19573 = distinct !DILexicalBlock(scope: !19574, file: !3397, line: 1000, column: 3)
!19574 = distinct !DILexicalBlock(scope: !19565, file: !3397, line: 1000, column: 3)
!19575 = !DILocation(line: 0, scope: !18809, inlinedAt: !19571)
!19576 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !19572)
!19577 = !DILocation(line: 1000, column: 3, scope: !19574)
!19578 = !DILocation(line: 1000, column: 3, scope: !19579)
!19579 = distinct !DILexicalBlock(scope: !19573, file: !3397, line: 1000, column: 3)
!19580 = !DILocation(line: 1002, column: 5, scope: !19565)
!19581 = !DILocation(line: 1002, column: 20, scope: !19565)
!19582 = !DILocation(line: 1002, column: 3, scope: !19565)
!19583 = !DILocation(line: 1003, column: 3, scope: !19565)
!19584 = !DILocation(line: 0, scope: !18118, inlinedAt: !19585)
!19585 = distinct !DILocation(line: 998, column: 2, scope: !19566)
!19586 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !19585)
!19587 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !19585)
!19588 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !19585)
!19589 = !DILocation(line: 0, scope: !18132, inlinedAt: !19590)
!19590 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !19585)
!19591 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !19590)
!19592 = !DILocation(line: 1011, column: 2, scope: !19547)
!19593 = !DILocation(line: 1012, column: 1, scope: !19547)
!19594 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3397, file: !3397, line: 1014, type: !18433, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!19595 = !DILocation(line: 1028, column: 25, scope: !19594)
!19596 = !DILocation(line: 1028, column: 2, scope: !19594)
!19597 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3397, file: !3397, line: 1155, type: !19598, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19600)
!19598 = !DISubroutineType(types: !19599)
!19599 = !{!119, !3319, !3319}
!19600 = !{!19601, !19602, !19603, !19604, !19605}
!19601 = !DILocalVariable(name: "a", arg: 1, scope: !19597, file: !3397, line: 1155, type: !3319)
!19602 = !DILocalVariable(name: "b", arg: 2, scope: !19597, file: !3397, line: 1155, type: !3319)
!19603 = !DILocalVariable(name: "thread_a", scope: !19597, file: !3397, line: 1157, type: !3290)
!19604 = !DILocalVariable(name: "thread_b", scope: !19597, file: !3397, line: 1157, type: !3290)
!19605 = !DILocalVariable(name: "cmp", scope: !19597, file: !3397, line: 1158, type: !330)
!19606 = !DILocation(line: 0, scope: !19597)
!19607 = !DILocation(line: 1160, column: 13, scope: !19597)
!19608 = !DILocation(line: 1161, column: 13, scope: !19597)
!19609 = !DILocation(line: 1163, column: 8, scope: !19597)
!19610 = !DILocation(line: 1165, column: 10, scope: !19611)
!19611 = distinct !DILexicalBlock(scope: !19597, file: !3397, line: 1165, column: 6)
!19612 = !DILocation(line: 1165, column: 6, scope: !19597)
!19613 = !DILocation(line: 1167, column: 17, scope: !19614)
!19614 = distinct !DILexicalBlock(scope: !19611, file: !3397, line: 1167, column: 13)
!19615 = !DILocation(line: 1167, column: 13, scope: !19611)
!19616 = !DILocation(line: 1170, column: 25, scope: !19617)
!19617 = distinct !DILexicalBlock(scope: !19614, file: !3397, line: 1169, column: 9)
!19618 = !DILocation(line: 1170, column: 52, scope: !19617)
!19619 = !DILocation(line: 1170, column: 35, scope: !19617)
!19620 = !DILocation(line: 1170, column: 3, scope: !19617)
!19621 = !DILocation(line: 0, scope: !19611)
!19622 = !DILocation(line: 1173, column: 1, scope: !19597)
!19623 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3397, file: !3397, line: 1175, type: !19624, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19639)
!19624 = !DISubroutineType(types: !19625)
!19625 = !{null, !19626, !3290}
!19626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19627, size: 32)
!19627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !19628, line: 37, size: 128, elements: !19629)
!19628 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19629 = !{!19630, !19638}
!19630 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !19627, file: !19628, line: 38, baseType: !19631, size: 96)
!19631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !207, line: 83, size: 96, elements: !19632)
!19632 = !{!19633, !19634, !19637}
!19633 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !19631, file: !207, line: 84, baseType: !3319, size: 32)
!19634 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !19631, file: !207, line: 85, baseType: !19635, size: 32, offset: 32)
!19635 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !207, line: 81, baseType: !19636)
!19636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19598, size: 32)
!19637 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !19631, file: !207, line: 86, baseType: !103, size: 32, offset: 64)
!19638 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !19627, file: !19628, line: 39, baseType: !103, size: 32, offset: 96)
!19639 = !{!19640, !19641, !19642, !19643, !19652}
!19640 = !DILocalVariable(name: "pq", arg: 1, scope: !19623, file: !3397, line: 1175, type: !19626)
!19641 = !DILocalVariable(name: "thread", arg: 2, scope: !19623, file: !3397, line: 1175, type: !3290)
!19642 = !DILocalVariable(name: "t", scope: !19623, file: !3397, line: 1177, type: !3290)
!19643 = !DILocalVariable(name: "__f", scope: !19644, file: !3397, line: 1190, type: !19647)
!19644 = distinct !DILexicalBlock(scope: !19645, file: !3397, line: 1190, column: 3)
!19645 = distinct !DILexicalBlock(scope: !19646, file: !3397, line: 1189, column: 27)
!19646 = distinct !DILexicalBlock(scope: !19623, file: !3397, line: 1189, column: 6)
!19647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !207, line: 155, size: 96, elements: !19648)
!19648 = !{!19649, !19650, !19651}
!19649 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !19647, file: !207, line: 156, baseType: !3392, size: 32)
!19650 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !19647, file: !207, line: 157, baseType: !783, size: 32, offset: 32)
!19651 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !19647, file: !207, line: 158, baseType: !330, size: 32, offset: 64)
!19652 = !DILocalVariable(name: "n", scope: !19653, file: !3397, line: 1190, type: !3319)
!19653 = distinct !DILexicalBlock(scope: !19654, file: !3397, line: 1190, column: 3)
!19654 = distinct !DILexicalBlock(scope: !19644, file: !3397, line: 1190, column: 3)
!19655 = !DILocation(line: 0, scope: !19623)
!19656 = !DILocation(line: 1179, column: 2, scope: !19657)
!19657 = distinct !DILexicalBlock(scope: !19658, file: !3397, line: 1179, column: 2)
!19658 = distinct !DILexicalBlock(scope: !19623, file: !3397, line: 1179, column: 2)
!19659 = !DILocation(line: 1179, column: 2, scope: !19658)
!19660 = !DILocation(line: 1179, column: 2, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !19657, file: !3397, line: 1179, column: 2)
!19662 = !DILocation(line: 1181, column: 31, scope: !19623)
!19663 = !DILocation(line: 1181, column: 45, scope: !19623)
!19664 = !DILocation(line: 1181, column: 15, scope: !19623)
!19665 = !DILocation(line: 1181, column: 25, scope: !19623)
!19666 = !DILocation(line: 1189, column: 11, scope: !19646)
!19667 = !DILocation(line: 1189, column: 7, scope: !19646)
!19668 = !DILocation(line: 1189, column: 6, scope: !19623)
!19669 = !DILocation(line: 1190, column: 3, scope: !19644)
!19670 = !DILocation(line: 1190, column: 3, scope: !19653)
!19671 = !DILocation(line: 0, scope: !19653)
!19672 = !DILocation(line: 1190, column: 3, scope: !19654)
!19673 = !DILocation(line: 1193, column: 2, scope: !19645)
!19674 = !DILocation(line: 1191, column: 42, scope: !19675)
!19675 = distinct !DILexicalBlock(scope: !19654, file: !3397, line: 1190, column: 54)
!19676 = !DILocation(line: 1191, column: 12, scope: !19675)
!19677 = !DILocation(line: 1191, column: 22, scope: !19675)
!19678 = distinct !{!19678, !19669, !19679}
!19679 = !DILocation(line: 1192, column: 3, scope: !19644)
!19680 = !DILocation(line: 1195, column: 17, scope: !19623)
!19681 = !DILocation(line: 1195, column: 37, scope: !19623)
!19682 = !DILocation(line: 1195, column: 2, scope: !19623)
!19683 = !DILocation(line: 1196, column: 1, scope: !19623)
!19684 = !DISubprogram(name: "z_rb_foreach_next", scope: !207, file: !207, line: 176, type: !19685, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!19685 = !DISubroutineType(types: !19686)
!19686 = !{!3319, !19687, !19688}
!19687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19631, size: 32)
!19688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19647, size: 32)
!19689 = !DISubprogram(name: "rb_insert", scope: !207, file: !207, line: 105, type: !19690, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!19690 = !DISubroutineType(types: !19691)
!19691 = !{null, !19687, !3319}
!19692 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3397, file: !3397, line: 1198, type: !19624, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19693)
!19693 = !{!19694, !19695}
!19694 = !DILocalVariable(name: "pq", arg: 1, scope: !19692, file: !3397, line: 1198, type: !19626)
!19695 = !DILocalVariable(name: "thread", arg: 2, scope: !19692, file: !3397, line: 1198, type: !3290)
!19696 = !DILocation(line: 0, scope: !19692)
!19697 = !DILocation(line: 1200, column: 2, scope: !19698)
!19698 = distinct !DILexicalBlock(scope: !19699, file: !3397, line: 1200, column: 2)
!19699 = distinct !DILexicalBlock(scope: !19692, file: !3397, line: 1200, column: 2)
!19700 = !DILocation(line: 1200, column: 2, scope: !19699)
!19701 = !DILocation(line: 1200, column: 2, scope: !19702)
!19702 = distinct !DILexicalBlock(scope: !19698, file: !3397, line: 1200, column: 2)
!19703 = !DILocation(line: 1202, column: 17, scope: !19692)
!19704 = !DILocation(line: 1202, column: 37, scope: !19692)
!19705 = !DILocation(line: 1202, column: 2, scope: !19692)
!19706 = !DILocation(line: 1204, column: 16, scope: !19707)
!19707 = distinct !DILexicalBlock(scope: !19692, file: !3397, line: 1204, column: 6)
!19708 = !DILocation(line: 1204, column: 7, scope: !19707)
!19709 = !DILocation(line: 1204, column: 6, scope: !19692)
!19710 = !DILocation(line: 1205, column: 7, scope: !19711)
!19711 = distinct !DILexicalBlock(scope: !19707, file: !3397, line: 1204, column: 22)
!19712 = !DILocation(line: 1205, column: 22, scope: !19711)
!19713 = !DILocation(line: 1206, column: 2, scope: !19711)
!19714 = !DILocation(line: 1207, column: 1, scope: !19692)
!19715 = !DISubprogram(name: "rb_remove", scope: !207, file: !207, line: 110, type: !19690, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!19716 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3397, file: !3397, line: 1209, type: !19717, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19719)
!19717 = !DISubroutineType(types: !19718)
!19718 = !{!3290, !19626}
!19719 = !{!19720, !19721, !19722}
!19720 = !DILocalVariable(name: "pq", arg: 1, scope: !19716, file: !3397, line: 1209, type: !19626)
!19721 = !DILocalVariable(name: "thread", scope: !19716, file: !3397, line: 1211, type: !3290)
!19722 = !DILocalVariable(name: "n", scope: !19716, file: !3397, line: 1212, type: !3319)
!19723 = !DILocation(line: 0, scope: !19716)
!19724 = !DILocation(line: 1212, column: 37, scope: !19716)
!19725 = !DILocation(line: 1212, column: 21, scope: !19716)
!19726 = !DILocation(line: 1217, column: 2, scope: !19716)
!19727 = distinct !DISubprogram(name: "rb_get_min", scope: !207, file: !207, line: 115, type: !19728, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19730)
!19728 = !DISubroutineType(types: !19729)
!19729 = !{!3319, !19687}
!19730 = !{!19731}
!19731 = !DILocalVariable(name: "tree", arg: 1, scope: !19727, file: !207, line: 115, type: !19687)
!19732 = !DILocation(line: 0, scope: !19727)
!19733 = !DILocation(line: 117, column: 9, scope: !19727)
!19734 = !DILocation(line: 117, column: 2, scope: !19727)
!19735 = !DISubprogram(name: "z_rb_get_minmax", scope: !207, file: !207, line: 100, type: !19736, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2953)
!19736 = !DISubroutineType(types: !19737)
!19737 = !{!3319, !19687, !164}
!19738 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3397, file: !3397, line: 1246, type: !19739, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19749)
!19739 = !DISubroutineType(types: !19740)
!19740 = !{!3290, !19741}
!19741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19742, size: 32)
!19742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !19628, line: 53, size: 2080, elements: !19743)
!19743 = !{!19744, !19748}
!19744 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !19742, file: !19628, line: 54, baseType: !19745, size: 2048)
!19745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3326, size: 2048, elements: !19746)
!19746 = !{!19747}
!19747 = !DISubrange(count: 32)
!19748 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !19742, file: !19628, line: 55, baseType: !32, size: 32, offset: 2048)
!19749 = !{!19750, !19751, !19752, !19753}
!19750 = !DILocalVariable(name: "pq", arg: 1, scope: !19738, file: !3397, line: 1246, type: !19741)
!19751 = !DILocalVariable(name: "thread", scope: !19738, file: !3397, line: 1252, type: !3290)
!19752 = !DILocalVariable(name: "l", scope: !19738, file: !3397, line: 1253, type: !18310)
!19753 = !DILocalVariable(name: "n", scope: !19738, file: !3397, line: 1254, type: !3393)
!19754 = !DILocation(line: 0, scope: !19738)
!19755 = !DILocation(line: 1248, column: 11, scope: !19756)
!19756 = distinct !DILexicalBlock(scope: !19738, file: !3397, line: 1248, column: 6)
!19757 = !DILocation(line: 1248, column: 7, scope: !19756)
!19758 = !DILocation(line: 1248, column: 6, scope: !19738)
!19759 = !DILocation(line: 1253, column: 31, scope: !19738)
!19760 = !DILocation(line: 1253, column: 20, scope: !19738)
!19761 = !DILocation(line: 1254, column: 19, scope: !19738)
!19762 = !DILocation(line: 1260, column: 1, scope: !19738)
!19763 = distinct !DISubprogram(name: "z_unpend_all", scope: !3397, file: !3397, line: 1262, type: !19764, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19766)
!19764 = !DISubroutineType(types: !19765)
!19765 = !{!103, !3321}
!19766 = !{!19767, !19768, !19769}
!19767 = !DILocalVariable(name: "wait_q", arg: 1, scope: !19763, file: !3397, line: 1262, type: !3321)
!19768 = !DILocalVariable(name: "need_sched", scope: !19763, file: !3397, line: 1264, type: !103)
!19769 = !DILocalVariable(name: "thread", scope: !19763, file: !3397, line: 1265, type: !3290)
!19770 = !DILocation(line: 0, scope: !19763)
!19771 = !DILocation(line: 1267, column: 19, scope: !19763)
!19772 = !DILocation(line: 1267, column: 41, scope: !19763)
!19773 = !DILocation(line: 1267, column: 2, scope: !19763)
!19774 = !DILocation(line: 1268, column: 3, scope: !19775)
!19775 = distinct !DILexicalBlock(scope: !19763, file: !3397, line: 1267, column: 50)
!19776 = !DILocation(line: 1269, column: 3, scope: !19775)
!19777 = distinct !{!19777, !19773, !19778}
!19778 = !DILocation(line: 1271, column: 2, scope: !19763)
!19779 = !DILocation(line: 1273, column: 2, scope: !19763)
!19780 = distinct !DISubprogram(name: "z_waitq_head", scope: !16240, file: !16240, line: 52, type: !19309, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19781)
!19781 = !{!19782}
!19782 = !DILocalVariable(name: "w", arg: 1, scope: !19780, file: !16240, line: 52, type: !3321)
!19783 = !DILocation(line: 0, scope: !19780)
!19784 = !DILocation(line: 54, column: 52, scope: !19780)
!19785 = !DILocation(line: 54, column: 28, scope: !19780)
!19786 = !DILocation(line: 54, column: 9, scope: !19780)
!19787 = !DILocation(line: 54, column: 2, scope: !19780)
!19788 = distinct !DISubprogram(name: "init_ready_q", scope: !3397, file: !3397, line: 1276, type: !19789, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19796)
!19789 = !DISubroutineType(types: !19790)
!19790 = !{null, !19791}
!19791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19792, size: 32)
!19792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !128, line: 83, size: 96, elements: !19793)
!19793 = !{!19794, !19795}
!19794 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !19792, file: !128, line: 86, baseType: !3290, size: 32)
!19795 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !19792, file: !128, line: 90, baseType: !3326, size: 64, offset: 32)
!19796 = !{!19797}
!19797 = !DILocalVariable(name: "rq", arg: 1, scope: !19788, file: !3397, line: 1276, type: !19791)
!19798 = !DILocation(line: 0, scope: !19788)
!19799 = !DILocation(line: 1289, column: 22, scope: !19788)
!19800 = !DILocation(line: 1289, column: 2, scope: !19788)
!19801 = !DILocation(line: 1291, column: 1, scope: !19788)
!19802 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !19803, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19805)
!19803 = !DISubroutineType(types: !19804)
!19804 = !{null, !18310}
!19805 = !{!19806}
!19806 = !DILocalVariable(name: "list", arg: 1, scope: !19802, file: !133, line: 197, type: !18310)
!19807 = !DILocation(line: 0, scope: !19802)
!19808 = !DILocation(line: 199, column: 8, scope: !19802)
!19809 = !DILocation(line: 199, column: 13, scope: !19802)
!19810 = !DILocation(line: 200, column: 8, scope: !19802)
!19811 = !DILocation(line: 200, column: 13, scope: !19802)
!19812 = !DILocation(line: 201, column: 1, scope: !19802)
!19813 = distinct !DISubprogram(name: "z_sched_init", scope: !3397, file: !3397, line: 1293, type: !333, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!19814 = !DILocation(line: 1302, column: 2, scope: !19813)
!19815 = !DILocation(line: 1306, column: 2, scope: !19813)
!19816 = !DILocation(line: 1309, column: 1, scope: !19813)
!19817 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3397, file: !3397, line: 1311, type: !19818, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19821)
!19818 = !DISubroutineType(types: !19819)
!19819 = !{!103, !19820}
!19820 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !3290)
!19821 = !{!19822}
!19822 = !DILocalVariable(name: "thread", arg: 1, scope: !19817, file: !3397, line: 1311, type: !19820)
!19823 = !DILocation(line: 0, scope: !19817)
!19824 = !DILocation(line: 1313, column: 22, scope: !19817)
!19825 = !DILocation(line: 1313, column: 9, scope: !19817)
!19826 = !DILocation(line: 1313, column: 2, scope: !19817)
!19827 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3397, file: !3397, line: 1325, type: !19828, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19830)
!19828 = !DISubroutineType(types: !19829)
!19829 = !{null, !19820, !103}
!19830 = !{!19831, !19832, !19833}
!19831 = !DILocalVariable(name: "thread", arg: 1, scope: !19827, file: !3397, line: 1325, type: !19820)
!19832 = !DILocalVariable(name: "prio", arg: 2, scope: !19827, file: !3397, line: 1325, type: !103)
!19833 = !DILocalVariable(name: "th", scope: !19827, file: !3397, line: 1334, type: !3290)
!19834 = !DILocation(line: 0, scope: !19827)
!19835 = !DILocation(line: 1331, column: 2, scope: !19836)
!19836 = distinct !DILexicalBlock(scope: !19837, file: !3397, line: 1331, column: 2)
!19837 = distinct !DILexicalBlock(scope: !19838, file: !3397, line: 1331, column: 2)
!19838 = distinct !DILexicalBlock(scope: !19827, file: !3397, line: 1331, column: 2)
!19839 = !DILocation(line: 1331, column: 2, scope: !19840)
!19840 = distinct !DILexicalBlock(scope: !19836, file: !3397, line: 1331, column: 2)
!19841 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !19842)
!19842 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !19843)
!19843 = distinct !DILocation(line: 1332, column: 2, scope: !19844)
!19844 = distinct !DILexicalBlock(scope: !19845, file: !3397, line: 1332, column: 2)
!19845 = distinct !DILexicalBlock(scope: !19827, file: !3397, line: 1332, column: 2)
!19846 = !DILocation(line: 0, scope: !18809, inlinedAt: !19842)
!19847 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !19843)
!19848 = !DILocation(line: 1332, column: 2, scope: !19845)
!19849 = !DILocation(line: 1332, column: 2, scope: !19850)
!19850 = distinct !DILexicalBlock(scope: !19844, file: !3397, line: 1332, column: 2)
!19851 = !DILocation(line: 1336, column: 2, scope: !19827)
!19852 = !DILocation(line: 1337, column: 1, scope: !19827)
!19853 = distinct !DISubprogram(name: "k_can_yield", scope: !3397, file: !3397, line: 1384, type: !9357, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!19854 = !DILocation(line: 1386, column: 11, scope: !19853)
!19855 = !DILocation(line: 1386, column: 29, scope: !19853)
!19856 = !DILocation(line: 1386, column: 32, scope: !19853)
!19857 = !DILocation(line: 1386, column: 46, scope: !19853)
!19858 = !DILocation(line: 1387, column: 28, scope: !19853)
!19859 = !DILocation(line: 1387, column: 4, scope: !19853)
!19860 = !DILocation(line: 1386, column: 2, scope: !19853)
!19861 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !124, file: !124, line: 989, type: !9357, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!19862 = !DILocation(line: 993, column: 10, scope: !19861)
!19863 = !DILocation(line: 993, column: 2, scope: !19861)
!19864 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3397, file: !3397, line: 1390, type: !333, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19865)
!19865 = !{!19866}
!19866 = !DILocalVariable(name: "key", scope: !19864, file: !3397, line: 1396, type: !18076)
!19867 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !19868)
!19868 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !19869)
!19869 = distinct !DILocation(line: 1392, column: 2, scope: !19870)
!19870 = distinct !DILexicalBlock(scope: !19871, file: !3397, line: 1392, column: 2)
!19871 = distinct !DILexicalBlock(scope: !19864, file: !3397, line: 1392, column: 2)
!19872 = !DILocation(line: 0, scope: !18809, inlinedAt: !19868)
!19873 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !19869)
!19874 = !DILocation(line: 1392, column: 2, scope: !19871)
!19875 = !DILocation(line: 1392, column: 2, scope: !19876)
!19876 = distinct !DILexicalBlock(scope: !19870, file: !3397, line: 1392, column: 2)
!19877 = !DILocation(line: 0, scope: !18084, inlinedAt: !19878)
!19878 = distinct !DILocation(line: 1396, column: 25, scope: !19864)
!19879 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !19880)
!19880 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !19878)
!19881 = !DILocation(line: 0, scope: !18093, inlinedAt: !19880)
!19882 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !19878)
!19883 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !19878)
!19884 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !19878)
!19885 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !19878)
!19886 = !DILocation(line: 0, scope: !19864)
!19887 = !DILocation(line: 1400, column: 18, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19889, file: !3397, line: 1399, column: 36)
!19889 = distinct !DILexicalBlock(scope: !19864, file: !3397, line: 1398, column: 6)
!19890 = !DILocation(line: 0, scope: !18276, inlinedAt: !19891)
!19891 = distinct !DILocation(line: 1400, column: 3, scope: !19888)
!19892 = !DILocation(line: 266, column: 15, scope: !18276, inlinedAt: !19891)
!19893 = !DILocation(line: 266, column: 28, scope: !18276, inlinedAt: !19891)
!19894 = !DILocation(line: 0, scope: !18284, inlinedAt: !19895)
!19895 = distinct !DILocation(line: 268, column: 3, scope: !18288, inlinedAt: !19891)
!19896 = !DILocation(line: 234, column: 2, scope: !18284, inlinedAt: !19895)
!19897 = !DILocation(line: 1402, column: 15, scope: !19864)
!19898 = !DILocation(line: 0, scope: !18293, inlinedAt: !19899)
!19899 = distinct !DILocation(line: 1402, column: 2, scope: !19864)
!19900 = !DILocation(line: 252, column: 15, scope: !18293, inlinedAt: !19899)
!19901 = !DILocation(line: 252, column: 28, scope: !18293, inlinedAt: !19899)
!19902 = !DILocation(line: 0, scope: !18300, inlinedAt: !19903)
!19903 = distinct !DILocation(line: 254, column: 3, scope: !18304, inlinedAt: !19899)
!19904 = !DILocation(line: 0, scope: !18307, inlinedAt: !19905)
!19905 = distinct !DILocation(line: 229, column: 2, scope: !18300, inlinedAt: !19903)
!19906 = !DILocation(line: 186, column: 2, scope: !18317, inlinedAt: !19905)
!19907 = !DILocation(line: 186, column: 2, scope: !18318, inlinedAt: !19905)
!19908 = !DILocation(line: 186, column: 2, scope: !18321, inlinedAt: !19905)
!19909 = !DILocation(line: 188, column: 2, scope: !18323, inlinedAt: !19905)
!19910 = !DILocation(line: 188, column: 2, scope: !18325, inlinedAt: !19905)
!19911 = !DILocation(line: 0, scope: !18323, inlinedAt: !19905)
!19912 = !DILocation(line: 189, column: 7, scope: !18328, inlinedAt: !19905)
!19913 = !DILocation(line: 189, column: 35, scope: !18328, inlinedAt: !19905)
!19914 = !DILocation(line: 189, column: 7, scope: !18329, inlinedAt: !19905)
!19915 = !DILocation(line: 191, column: 21, scope: !18333, inlinedAt: !19905)
!19916 = !DILocation(line: 190, column: 4, scope: !18333, inlinedAt: !19905)
!19917 = !DILocation(line: 192, column: 4, scope: !18333, inlinedAt: !19905)
!19918 = distinct !{!19918, !19909, !19919}
!19919 = !DILocation(line: 194, column: 2, scope: !18323, inlinedAt: !19905)
!19920 = !DILocation(line: 196, column: 37, scope: !18307, inlinedAt: !19905)
!19921 = !DILocation(line: 196, column: 2, scope: !18307, inlinedAt: !19905)
!19922 = !DILocation(line: 197, column: 1, scope: !18307, inlinedAt: !19905)
!19923 = !DILocation(line: 1403, column: 2, scope: !19864)
!19924 = !DILocation(line: 0, scope: !18760, inlinedAt: !19925)
!19925 = distinct !DILocation(line: 1404, column: 2, scope: !19864)
!19926 = !DILocation(line: 0, scope: !18769, inlinedAt: !19927)
!19927 = distinct !DILocation(line: 195, column: 2, scope: !18760, inlinedAt: !19925)
!19928 = !DILocation(line: 225, column: 2, scope: !18776, inlinedAt: !19927)
!19929 = !DILocation(line: 225, column: 2, scope: !18777, inlinedAt: !19927)
!19930 = !DILocation(line: 225, column: 2, scope: !18780, inlinedAt: !19927)
!19931 = !DILocation(line: 196, column: 9, scope: !18760, inlinedAt: !19925)
!19932 = !DILocation(line: 1405, column: 1, scope: !19864)
!19933 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3397, file: !3397, line: 1459, type: !19934, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19936)
!19934 = !DISubroutineType(types: !19935)
!19935 = !{!330, !18970}
!19936 = !{!19937, !19938, !19939}
!19937 = !DILocalVariable(name: "timeout", arg: 1, scope: !19933, file: !3397, line: 1459, type: !18970)
!19938 = !DILocalVariable(name: "ticks", scope: !19933, file: !3397, line: 1461, type: !104)
!19939 = !DILocalVariable(name: "ret", scope: !19933, file: !3397, line: 1480, type: !330)
!19940 = !DILocation(line: 0, scope: !19933)
!19941 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !19942)
!19942 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !19943)
!19943 = distinct !DILocation(line: 1463, column: 2, scope: !19944)
!19944 = distinct !DILexicalBlock(scope: !19945, file: !3397, line: 1463, column: 2)
!19945 = distinct !DILexicalBlock(scope: !19933, file: !3397, line: 1463, column: 2)
!19946 = !DILocation(line: 0, scope: !18809, inlinedAt: !19942)
!19947 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !19943)
!19948 = !DILocation(line: 1463, column: 2, scope: !19945)
!19949 = !DILocation(line: 1463, column: 2, scope: !19950)
!19950 = distinct !DILexicalBlock(scope: !19944, file: !3397, line: 1463, column: 2)
!19951 = !DILocation(line: 1468, column: 6, scope: !19952)
!19952 = distinct !DILexicalBlock(scope: !19933, file: !3397, line: 1468, column: 6)
!19953 = !DILocation(line: 1468, column: 6, scope: !19933)
!19954 = !DILocation(line: 1469, column: 20, scope: !19955)
!19955 = distinct !DILexicalBlock(scope: !19952, file: !3397, line: 1468, column: 40)
!19956 = !DILocation(line: 1469, column: 3, scope: !19955)
!19957 = !DILocation(line: 1473, column: 3, scope: !19955)
!19958 = !DILocation(line: 1478, column: 10, scope: !19933)
!19959 = !DILocation(line: 1480, column: 16, scope: !19933)
!19960 = !DILocation(line: 1485, column: 1, scope: !19933)
!19961 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4485, file: !4485, line: 310, type: !19962, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19964)
!19962 = !DISubroutineType(types: !19963)
!19963 = !{null, !19820}
!19964 = !{!19965}
!19965 = !DILocalVariable(name: "thread", arg: 1, scope: !19961, file: !4485, line: 310, type: !19820)
!19966 = !DILocation(line: 0, scope: !19961)
!19967 = !DILocation(line: 319, column: 2, scope: !19968)
!19968 = distinct !DILexicalBlock(scope: !19961, file: !4485, line: 319, column: 2)
!19969 = !{i64 2155112609}
!19970 = !DILocation(line: 320, column: 2, scope: !19961)
!19971 = !DILocation(line: 321, column: 1, scope: !19961)
!19972 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3397, file: !3397, line: 1415, type: !19973, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !19975)
!19973 = !DISubroutineType(types: !19974)
!19974 = !{!330, !104}
!19975 = !{!19976, !19977, !19978, !19979}
!19976 = !DILocalVariable(name: "ticks", arg: 1, scope: !19972, file: !3397, line: 1415, type: !104)
!19977 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !19972, file: !3397, line: 1418, type: !108)
!19978 = !DILocalVariable(name: "timeout", scope: !19972, file: !3397, line: 1430, type: !18970)
!19979 = !DILocalVariable(name: "key", scope: !19972, file: !3397, line: 1437, type: !18076)
!19980 = !DILocation(line: 0, scope: !19972)
!19981 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !19982)
!19982 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !19983)
!19983 = distinct !DILocation(line: 1420, column: 2, scope: !19984)
!19984 = distinct !DILexicalBlock(scope: !19985, file: !3397, line: 1420, column: 2)
!19985 = distinct !DILexicalBlock(scope: !19972, file: !3397, line: 1420, column: 2)
!19986 = !DILocation(line: 0, scope: !18809, inlinedAt: !19982)
!19987 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !19983)
!19988 = !DILocation(line: 1420, column: 2, scope: !19985)
!19989 = !DILocation(line: 1420, column: 2, scope: !19990)
!19990 = distinct !DILexicalBlock(scope: !19984, file: !3397, line: 1420, column: 2)
!19991 = !DILocation(line: 1425, column: 12, scope: !19992)
!19992 = distinct !DILexicalBlock(scope: !19972, file: !3397, line: 1425, column: 6)
!19993 = !DILocation(line: 1425, column: 6, scope: !19972)
!19994 = !DILocation(line: 1426, column: 3, scope: !19995)
!19995 = distinct !DILexicalBlock(scope: !19992, file: !3397, line: 1425, column: 18)
!19996 = !DILocation(line: 1427, column: 3, scope: !19995)
!19997 = !DILocation(line: 1431, column: 24, scope: !19998)
!19998 = distinct !DILexicalBlock(scope: !19972, file: !3397, line: 1431, column: 6)
!19999 = !DILocation(line: 1431, column: 6, scope: !19972)
!20000 = !DILocation(line: 1432, column: 35, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19998, file: !3397, line: 1431, column: 30)
!20002 = !DILocation(line: 1432, column: 27, scope: !20001)
!20003 = !DILocation(line: 1433, column: 2, scope: !20001)
!20004 = !DILocation(line: 1434, column: 27, scope: !20005)
!20005 = distinct !DILexicalBlock(scope: !19998, file: !3397, line: 1433, column: 9)
!20006 = !DILocation(line: 0, scope: !19998)
!20007 = !DILocation(line: 0, scope: !18084, inlinedAt: !20008)
!20008 = distinct !DILocation(line: 1437, column: 25, scope: !19972)
!20009 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !20010)
!20010 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !20008)
!20011 = !DILocation(line: 0, scope: !18093, inlinedAt: !20010)
!20012 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !20008)
!20013 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !20008)
!20014 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !20008)
!20015 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !20008)
!20016 = !DILocation(line: 1440, column: 20, scope: !19972)
!20017 = !DILocation(line: 1440, column: 18, scope: !19972)
!20018 = !DILocation(line: 1442, column: 2, scope: !19972)
!20019 = !DILocation(line: 1443, column: 23, scope: !19972)
!20020 = !DILocation(line: 1443, column: 2, scope: !19972)
!20021 = !DILocation(line: 1444, column: 29, scope: !19972)
!20022 = !DILocation(line: 1444, column: 2, scope: !19972)
!20023 = !DILocation(line: 0, scope: !18760, inlinedAt: !20024)
!20024 = distinct !DILocation(line: 1446, column: 8, scope: !19972)
!20025 = !DILocation(line: 0, scope: !18769, inlinedAt: !20026)
!20026 = distinct !DILocation(line: 195, column: 2, scope: !18760, inlinedAt: !20024)
!20027 = !DILocation(line: 225, column: 2, scope: !18776, inlinedAt: !20026)
!20028 = !DILocation(line: 225, column: 2, scope: !18777, inlinedAt: !20026)
!20029 = !DILocation(line: 225, column: 2, scope: !18780, inlinedAt: !20026)
!20030 = !DILocation(line: 196, column: 9, scope: !18760, inlinedAt: !20024)
!20031 = !DILocation(line: 1448, column: 2, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20033, file: !3397, line: 1448, column: 2)
!20033 = distinct !DILexicalBlock(scope: !19972, file: !3397, line: 1448, column: 2)
!20034 = !DILocation(line: 1448, column: 2, scope: !20033)
!20035 = !DILocation(line: 1448, column: 2, scope: !20036)
!20036 = distinct !DILexicalBlock(scope: !20032, file: !3397, line: 1448, column: 2)
!20037 = !DILocation(line: 1450, column: 10, scope: !19972)
!20038 = !DILocation(line: 1450, column: 45, scope: !19972)
!20039 = !DILocation(line: 1450, column: 43, scope: !19972)
!20040 = !DILocation(line: 1451, column: 6, scope: !19972)
!20041 = !DILocation(line: 1457, column: 1, scope: !19972)
!20042 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !4443, file: !4443, line: 1103, type: !4444, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20043)
!20043 = !{!20044}
!20044 = !DILocalVariable(name: "t", arg: 1, scope: !20042, file: !4443, line: 1103, type: !109)
!20045 = !DILocation(line: 0, scope: !20042)
!20046 = !DILocation(line: 0, scope: !18144, inlinedAt: !20047)
!20047 = distinct !DILocation(line: 1106, column: 9, scope: !20042)
!20048 = !DILocation(line: 139, column: 13, scope: !20049, inlinedAt: !20047)
!20049 = distinct !DILexicalBlock(scope: !20050, file: !4443, line: 138, column: 10)
!20050 = distinct !DILexicalBlock(scope: !20051, file: !4443, line: 136, column: 7)
!20051 = distinct !DILexicalBlock(scope: !18165, file: !4443, line: 134, column: 17)
!20052 = !DILocation(line: 1106, column: 2, scope: !20042)
!20053 = distinct !DISubprogram(name: "k_yield", scope: !4485, file: !4485, line: 140, type: !333, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!20054 = !DILocation(line: 148, column: 2, scope: !20055)
!20055 = distinct !DILexicalBlock(scope: !20053, file: !4485, line: 148, column: 2)
!20056 = !{i64 2155111929}
!20057 = !DILocation(line: 149, column: 2, scope: !20053)
!20058 = !DILocation(line: 150, column: 1, scope: !20053)
!20059 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3397, file: !3397, line: 1495, type: !20060, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20062)
!20060 = !DISubroutineType(types: !20061)
!20061 = !{!330, !103}
!20062 = !{!20063, !20064}
!20063 = !DILocalVariable(name: "us", arg: 1, scope: !20059, file: !3397, line: 1495, type: !103)
!20064 = !DILocalVariable(name: "ticks", scope: !20059, file: !3397, line: 1497, type: !330)
!20065 = !DILocation(line: 0, scope: !20059)
!20066 = !DILocation(line: 1501, column: 31, scope: !20059)
!20067 = !DILocation(line: 1501, column: 10, scope: !20059)
!20068 = !DILocation(line: 1502, column: 23, scope: !20059)
!20069 = !DILocation(line: 1502, column: 10, scope: !20059)
!20070 = !DILocation(line: 1506, column: 31, scope: !20059)
!20071 = !DILocation(line: 1506, column: 9, scope: !20059)
!20072 = !DILocation(line: 1506, column: 2, scope: !20059)
!20073 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !4443, file: !4443, line: 571, type: !4444, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20074)
!20074 = !{!20075}
!20075 = !DILocalVariable(name: "t", arg: 1, scope: !20073, file: !4443, line: 571, type: !109)
!20076 = !DILocation(line: 0, scope: !20073)
!20077 = !DILocation(line: 0, scope: !18144, inlinedAt: !20078)
!20078 = distinct !DILocation(line: 574, column: 9, scope: !20073)
!20079 = !DILocation(line: 135, column: 5, scope: !20051, inlinedAt: !20078)
!20080 = !DILocation(line: 139, column: 13, scope: !20049, inlinedAt: !20078)
!20081 = !DILocation(line: 574, column: 2, scope: !20073)
!20082 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !4443, file: !4443, line: 1187, type: !4444, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20083)
!20083 = !{!20084}
!20084 = !DILocalVariable(name: "t", arg: 1, scope: !20082, file: !4443, line: 1187, type: !109)
!20085 = !DILocation(line: 0, scope: !20082)
!20086 = !DILocation(line: 0, scope: !18144, inlinedAt: !20087)
!20087 = distinct !DILocation(line: 1190, column: 9, scope: !20082)
!20088 = !DILocation(line: 145, column: 13, scope: !20089, inlinedAt: !20087)
!20089 = distinct !DILexicalBlock(scope: !18162, file: !4443, line: 144, column: 10)
!20090 = !DILocation(line: 1190, column: 2, scope: !20082)
!20091 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3397, file: !3397, line: 1517, type: !19962, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20092)
!20092 = !{!20093}
!20093 = !DILocalVariable(name: "thread", arg: 1, scope: !20091, file: !3397, line: 1517, type: !19820)
!20094 = !DILocation(line: 0, scope: !20091)
!20095 = !DILocation(line: 1521, column: 6, scope: !20096)
!20096 = distinct !DILexicalBlock(scope: !20091, file: !3397, line: 1521, column: 6)
!20097 = !DILocation(line: 1521, column: 6, scope: !20091)
!20098 = !DILocation(line: 1525, column: 6, scope: !20099)
!20099 = distinct !DILexicalBlock(scope: !20091, file: !3397, line: 1525, column: 6)
!20100 = !DILocation(line: 1525, column: 37, scope: !20099)
!20101 = !DILocation(line: 1525, column: 6, scope: !20091)
!20102 = !DILocation(line: 1527, column: 20, scope: !20103)
!20103 = distinct !DILexicalBlock(scope: !20104, file: !3397, line: 1527, column: 7)
!20104 = distinct !DILexicalBlock(scope: !20099, file: !3397, line: 1525, column: 42)
!20105 = !DILocation(line: 1527, column: 33, scope: !20103)
!20106 = !DILocation(line: 1527, column: 7, scope: !20104)
!20107 = !DILocation(line: 1532, column: 2, scope: !20091)
!20108 = !DILocation(line: 1533, column: 2, scope: !20091)
!20109 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !20110)
!20110 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !20111)
!20111 = distinct !DILocation(line: 1537, column: 7, scope: !20112)
!20112 = distinct !DILexicalBlock(scope: !20091, file: !3397, line: 1537, column: 6)
!20113 = !DILocation(line: 0, scope: !18809, inlinedAt: !20110)
!20114 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !20111)
!20115 = !DILocation(line: 1537, column: 6, scope: !20091)
!20116 = !DILocation(line: 1538, column: 3, scope: !20117)
!20117 = distinct !DILexicalBlock(scope: !20112, file: !3397, line: 1537, column: 25)
!20118 = !DILocation(line: 1539, column: 2, scope: !20117)
!20119 = !DILocation(line: 1540, column: 1, scope: !20091)
!20120 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15980, file: !15980, line: 101, type: !18225, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20121)
!20121 = !{!20122}
!20122 = !DILocalVariable(name: "thread", arg: 1, scope: !20120, file: !15980, line: 101, type: !3290)
!20123 = !DILocation(line: 0, scope: !20120)
!20124 = !DILocation(line: 103, column: 23, scope: !20120)
!20125 = !DILocation(line: 103, column: 36, scope: !20120)
!20126 = !DILocation(line: 103, column: 55, scope: !20120)
!20127 = !DILocation(line: 103, column: 2, scope: !20120)
!20128 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3397, file: !3397, line: 1567, type: !20129, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20131)
!20129 = !DISubroutineType(types: !20130)
!20130 = !{!19820}
!20131 = !{!20132}
!20132 = !DILocalVariable(name: "ret", scope: !20128, file: !3397, line: 1577, type: !19820)
!20133 = !DILocation(line: 1577, column: 30, scope: !20128)
!20134 = !DILocation(line: 0, scope: !20128)
!20135 = !DILocation(line: 1582, column: 2, scope: !20128)
!20136 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3397, file: !3397, line: 1593, type: !9659, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !2953)
!20137 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !20138)
!20138 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !20139)
!20139 = distinct !DILocation(line: 1595, column: 10, scope: !20136)
!20140 = !DILocation(line: 0, scope: !18809, inlinedAt: !20138)
!20141 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !20139)
!20142 = !DILocation(line: 1595, column: 27, scope: !20136)
!20143 = !DILocation(line: 1595, column: 41, scope: !20136)
!20144 = !DILocation(line: 1595, column: 30, scope: !20136)
!20145 = !DILocation(line: 1595, column: 2, scope: !20136)
!20146 = distinct !DISubprogram(name: "z_thread_abort", scope: !3397, file: !3397, line: 1725, type: !18042, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20147)
!20147 = !{!20148, !20149}
!20148 = !DILocalVariable(name: "thread", arg: 1, scope: !20146, file: !3397, line: 1725, type: !3290)
!20149 = !DILocalVariable(name: "key", scope: !20146, file: !3397, line: 1727, type: !18076)
!20150 = !DILocation(line: 0, scope: !20146)
!20151 = !DILocation(line: 0, scope: !18084, inlinedAt: !20152)
!20152 = distinct !DILocation(line: 1727, column: 25, scope: !20146)
!20153 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !20154)
!20154 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !20152)
!20155 = !DILocation(line: 0, scope: !18093, inlinedAt: !20154)
!20156 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !20152)
!20157 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !20152)
!20158 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !20152)
!20159 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !20152)
!20160 = !DILocation(line: 1729, column: 20, scope: !20161)
!20161 = distinct !DILexicalBlock(scope: !20146, file: !3397, line: 1729, column: 6)
!20162 = !DILocation(line: 1729, column: 33, scope: !20161)
!20163 = !DILocation(line: 1729, column: 48, scope: !20161)
!20164 = !DILocation(line: 1729, column: 6, scope: !20146)
!20165 = !DILocation(line: 0, scope: !18118, inlinedAt: !20166)
!20166 = distinct !DILocation(line: 1730, column: 3, scope: !20167)
!20167 = distinct !DILexicalBlock(scope: !20161, file: !3397, line: 1729, column: 54)
!20168 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !20166)
!20169 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !20166)
!20170 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !20166)
!20171 = !DILocation(line: 0, scope: !18132, inlinedAt: !20172)
!20172 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !20166)
!20173 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !20172)
!20174 = !DILocation(line: 1731, column: 3, scope: !20175)
!20175 = distinct !DILexicalBlock(scope: !20176, file: !3397, line: 1731, column: 3)
!20176 = distinct !DILexicalBlock(scope: !20177, file: !3397, line: 1731, column: 3)
!20177 = distinct !DILexicalBlock(scope: !20167, file: !3397, line: 1731, column: 3)
!20178 = !DILocation(line: 1736, column: 20, scope: !20179)
!20179 = distinct !DILexicalBlock(scope: !20146, file: !3397, line: 1736, column: 6)
!20180 = !DILocation(line: 1736, column: 33, scope: !20179)
!20181 = !DILocation(line: 1736, column: 49, scope: !20179)
!20182 = !DILocation(line: 1736, column: 6, scope: !20146)
!20183 = !DILocation(line: 0, scope: !18118, inlinedAt: !20184)
!20184 = distinct !DILocation(line: 1737, column: 3, scope: !20185)
!20185 = distinct !DILexicalBlock(scope: !20179, file: !3397, line: 1736, column: 56)
!20186 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !20184)
!20187 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !20184)
!20188 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !20184)
!20189 = !DILocation(line: 0, scope: !18132, inlinedAt: !20190)
!20190 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !20184)
!20191 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !20190)
!20192 = !DILocation(line: 1738, column: 3, scope: !20185)
!20193 = !DILocation(line: 1775, column: 2, scope: !20146)
!20194 = !DILocation(line: 1776, column: 16, scope: !20195)
!20195 = distinct !DILexicalBlock(scope: !20146, file: !3397, line: 1776, column: 6)
!20196 = !DILocation(line: 1776, column: 13, scope: !20195)
!20197 = !DILocation(line: 1776, column: 25, scope: !20195)
!20198 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !20199)
!20199 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !20200)
!20200 = distinct !DILocation(line: 1776, column: 29, scope: !20195)
!20201 = !DILocation(line: 0, scope: !18809, inlinedAt: !20199)
!20202 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !20200)
!20203 = !DILocation(line: 1776, column: 6, scope: !20146)
!20204 = !DILocation(line: 0, scope: !18760, inlinedAt: !20205)
!20205 = distinct !DILocation(line: 1777, column: 3, scope: !20206)
!20206 = distinct !DILexicalBlock(scope: !20195, file: !3397, line: 1776, column: 47)
!20207 = !DILocation(line: 0, scope: !18769, inlinedAt: !20208)
!20208 = distinct !DILocation(line: 195, column: 2, scope: !18760, inlinedAt: !20205)
!20209 = !DILocation(line: 225, column: 2, scope: !18776, inlinedAt: !20208)
!20210 = !DILocation(line: 225, column: 2, scope: !18777, inlinedAt: !20208)
!20211 = !DILocation(line: 225, column: 2, scope: !18780, inlinedAt: !20208)
!20212 = !DILocation(line: 196, column: 9, scope: !18760, inlinedAt: !20205)
!20213 = !DILocation(line: 1778, column: 3, scope: !20214)
!20214 = distinct !DILexicalBlock(scope: !20215, file: !3397, line: 1778, column: 3)
!20215 = distinct !DILexicalBlock(scope: !20216, file: !3397, line: 1778, column: 3)
!20216 = distinct !DILexicalBlock(scope: !20206, file: !3397, line: 1778, column: 3)
!20217 = !DILocation(line: 0, scope: !18118, inlinedAt: !20218)
!20218 = distinct !DILocation(line: 1780, column: 2, scope: !20146)
!20219 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !20218)
!20220 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !20218)
!20221 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !20218)
!20222 = !DILocation(line: 0, scope: !18132, inlinedAt: !20223)
!20223 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !20218)
!20224 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !20223)
!20225 = !DILocation(line: 1781, column: 1, scope: !20146)
!20226 = distinct !DISubprogram(name: "end_thread", scope: !3397, file: !3397, line: 1690, type: !18042, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20227)
!20227 = !{!20228}
!20228 = !DILocalVariable(name: "thread", arg: 1, scope: !20226, file: !3397, line: 1690, type: !3290)
!20229 = !DILocation(line: 0, scope: !20226)
!20230 = !DILocation(line: 1695, column: 20, scope: !20231)
!20231 = distinct !DILexicalBlock(scope: !20226, file: !3397, line: 1695, column: 6)
!20232 = !DILocation(line: 1695, column: 33, scope: !20231)
!20233 = !DILocation(line: 1695, column: 49, scope: !20231)
!20234 = !DILocation(line: 1695, column: 6, scope: !20226)
!20235 = !DILocation(line: 1697, column: 29, scope: !20236)
!20236 = distinct !DILexicalBlock(scope: !20231, file: !3397, line: 1695, column: 56)
!20237 = !DILocation(line: 1698, column: 7, scope: !20238)
!20238 = distinct !DILexicalBlock(scope: !20236, file: !3397, line: 1698, column: 7)
!20239 = !DILocation(line: 1698, column: 7, scope: !20236)
!20240 = !DILocation(line: 0, scope: !18276, inlinedAt: !20241)
!20241 = distinct !DILocation(line: 1699, column: 4, scope: !20242)
!20242 = distinct !DILexicalBlock(scope: !20238, file: !3397, line: 1698, column: 35)
!20243 = !DILocation(line: 266, column: 28, scope: !18276, inlinedAt: !20241)
!20244 = !DILocation(line: 0, scope: !18284, inlinedAt: !20245)
!20245 = distinct !DILocation(line: 268, column: 3, scope: !18288, inlinedAt: !20241)
!20246 = !DILocation(line: 234, column: 2, scope: !18284, inlinedAt: !20245)
!20247 = !DILocation(line: 1700, column: 3, scope: !20242)
!20248 = !DILocation(line: 1701, column: 20, scope: !20249)
!20249 = distinct !DILexicalBlock(scope: !20236, file: !3397, line: 1701, column: 7)
!20250 = !DILocation(line: 1701, column: 30, scope: !20249)
!20251 = !DILocation(line: 1701, column: 7, scope: !20236)
!20252 = !DILocation(line: 1702, column: 4, scope: !20253)
!20253 = distinct !DILexicalBlock(scope: !20249, file: !3397, line: 1701, column: 39)
!20254 = !DILocation(line: 1703, column: 3, scope: !20253)
!20255 = !DILocation(line: 1704, column: 9, scope: !20236)
!20256 = !DILocation(line: 1705, column: 23, scope: !20236)
!20257 = !DILocation(line: 1705, column: 3, scope: !20236)
!20258 = !DILocation(line: 1706, column: 3, scope: !20236)
!20259 = !DILocation(line: 1722, column: 2, scope: !20236)
!20260 = !DILocation(line: 1723, column: 1, scope: !20226)
!20261 = distinct !DISubprogram(name: "unpend_all", scope: !3397, file: !3397, line: 1674, type: !20262, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20264)
!20262 = !DISubroutineType(types: !20263)
!20263 = !{null, !3321}
!20264 = !{!20265, !20266}
!20265 = !DILocalVariable(name: "wait_q", arg: 1, scope: !20261, file: !3397, line: 1674, type: !3321)
!20266 = !DILocalVariable(name: "thread", scope: !20261, file: !3397, line: 1676, type: !3290)
!20267 = !DILocation(line: 0, scope: !20261)
!20268 = !DILocation(line: 1678, column: 19, scope: !20261)
!20269 = !DILocation(line: 1678, column: 41, scope: !20261)
!20270 = !DILocation(line: 1678, column: 2, scope: !20261)
!20271 = !DILocation(line: 1679, column: 3, scope: !20272)
!20272 = distinct !DILexicalBlock(scope: !20261, file: !3397, line: 1678, column: 50)
!20273 = !DILocation(line: 1680, column: 9, scope: !20272)
!20274 = !DILocalVariable(name: "thread", arg: 1, scope: !20275, file: !16000, line: 65, type: !3290)
!20275 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !16000, file: !16000, line: 65, type: !20276, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20278)
!20276 = !DISubroutineType(types: !20277)
!20277 = !{null, !3290, !32}
!20278 = !{!20274, !20279}
!20279 = !DILocalVariable(name: "value", arg: 2, scope: !20275, file: !16000, line: 65, type: !32)
!20280 = !DILocation(line: 0, scope: !20275, inlinedAt: !20281)
!20281 = distinct !DILocation(line: 1681, column: 3, scope: !20272)
!20282 = !DILocation(line: 67, column: 15, scope: !20275, inlinedAt: !20281)
!20283 = !DILocation(line: 67, column: 33, scope: !20275, inlinedAt: !20281)
!20284 = !DILocation(line: 1682, column: 3, scope: !20272)
!20285 = distinct !{!20285, !20270, !20286}
!20286 = !DILocation(line: 1683, column: 2, scope: !20261)
!20287 = !DILocation(line: 1684, column: 1, scope: !20261)
!20288 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3397, file: !3397, line: 1794, type: !20289, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20291)
!20289 = !DISubroutineType(types: !20290)
!20290 = !{!103, !3290, !18970}
!20291 = !{!20292, !20293, !20294, !20295}
!20292 = !DILocalVariable(name: "thread", arg: 1, scope: !20288, file: !3397, line: 1794, type: !3290)
!20293 = !DILocalVariable(name: "timeout", arg: 2, scope: !20288, file: !3397, line: 1794, type: !18970)
!20294 = !DILocalVariable(name: "key", scope: !20288, file: !3397, line: 1796, type: !18076)
!20295 = !DILocalVariable(name: "ret", scope: !20288, file: !3397, line: 1797, type: !103)
!20296 = !DILocation(line: 0, scope: !20288)
!20297 = !DILocation(line: 0, scope: !18084, inlinedAt: !20298)
!20298 = distinct !DILocation(line: 1796, column: 25, scope: !20288)
!20299 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !20300)
!20300 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !20298)
!20301 = !DILocation(line: 0, scope: !18093, inlinedAt: !20300)
!20302 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !20298)
!20303 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !20298)
!20304 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !20298)
!20305 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !20298)
!20306 = !DILocation(line: 1801, column: 20, scope: !20307)
!20307 = distinct !DILexicalBlock(scope: !20288, file: !3397, line: 1801, column: 6)
!20308 = !DILocation(line: 1801, column: 33, scope: !20307)
!20309 = !DILocation(line: 1801, column: 49, scope: !20307)
!20310 = !DILocation(line: 1801, column: 6, scope: !20288)
!20311 = !DILocation(line: 1803, column: 13, scope: !20312)
!20312 = distinct !DILexicalBlock(scope: !20307, file: !3397, line: 1803, column: 13)
!20313 = !DILocation(line: 1803, column: 13, scope: !20307)
!20314 = !DILocation(line: 1805, column: 24, scope: !20315)
!20315 = distinct !DILexicalBlock(scope: !20312, file: !3397, line: 1805, column: 13)
!20316 = !DILocation(line: 1805, column: 21, scope: !20315)
!20317 = !DILocation(line: 1805, column: 34, scope: !20315)
!20318 = !DILocation(line: 1806, column: 20, scope: !20315)
!20319 = !DILocation(line: 1806, column: 44, scope: !20315)
!20320 = !DILocation(line: 1806, column: 30, scope: !20315)
!20321 = !DILocation(line: 1805, column: 13, scope: !20312)
!20322 = !DILocation(line: 1031, column: 3, scope: !18809, inlinedAt: !20323)
!20323 = distinct !DILocation(line: 48, column: 10, scope: !18813, inlinedAt: !20324)
!20324 = distinct !DILocation(line: 1809, column: 3, scope: !20325)
!20325 = distinct !DILexicalBlock(scope: !20326, file: !3397, line: 1809, column: 3)
!20326 = distinct !DILexicalBlock(scope: !20327, file: !3397, line: 1809, column: 3)
!20327 = distinct !DILexicalBlock(scope: !20315, file: !3397, line: 1808, column: 9)
!20328 = !DILocation(line: 0, scope: !18809, inlinedAt: !20323)
!20329 = !DILocation(line: 48, column: 9, scope: !18813, inlinedAt: !20324)
!20330 = !DILocation(line: 1809, column: 3, scope: !20326)
!20331 = !DILocation(line: 1809, column: 3, scope: !20332)
!20332 = distinct !DILexicalBlock(scope: !20325, file: !3397, line: 1809, column: 3)
!20333 = !DILocation(line: 1810, column: 23, scope: !20327)
!20334 = !DILocation(line: 1810, column: 42, scope: !20327)
!20335 = !DILocation(line: 1810, column: 3, scope: !20327)
!20336 = !DILocation(line: 1811, column: 22, scope: !20327)
!20337 = !DILocation(line: 1811, column: 3, scope: !20327)
!20338 = !DILocation(line: 0, scope: !18760, inlinedAt: !20339)
!20339 = distinct !DILocation(line: 1814, column: 9, scope: !20327)
!20340 = !DILocation(line: 0, scope: !18769, inlinedAt: !20341)
!20341 = distinct !DILocation(line: 195, column: 2, scope: !18760, inlinedAt: !20339)
!20342 = !DILocation(line: 225, column: 2, scope: !18776, inlinedAt: !20341)
!20343 = !DILocation(line: 225, column: 2, scope: !18777, inlinedAt: !20341)
!20344 = !DILocation(line: 225, column: 2, scope: !18780, inlinedAt: !20341)
!20345 = !DILocation(line: 196, column: 9, scope: !18760, inlinedAt: !20339)
!20346 = !DILocation(line: 1817, column: 3, scope: !20327)
!20347 = !DILocation(line: 0, scope: !20307)
!20348 = !DILocation(line: 0, scope: !18118, inlinedAt: !20349)
!20349 = distinct !DILocation(line: 1822, column: 2, scope: !20288)
!20350 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !20349)
!20351 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !20349)
!20352 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !20349)
!20353 = !DILocation(line: 0, scope: !18132, inlinedAt: !20354)
!20354 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !20349)
!20355 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !20354)
!20356 = !DILocation(line: 1823, column: 2, scope: !20288)
!20357 = !DILocation(line: 1824, column: 1, scope: !20288)
!20358 = distinct !DISubprogram(name: "z_sched_wake", scope: !3397, file: !3397, line: 1882, type: !20359, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20361)
!20359 = !DISubroutineType(types: !20360)
!20360 = !{!119, !3321, !103, !102}
!20361 = !{!20362, !20363, !20364, !20365, !20366, !20367, !20369}
!20362 = !DILocalVariable(name: "wait_q", arg: 1, scope: !20358, file: !3397, line: 1882, type: !3321)
!20363 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !20358, file: !3397, line: 1882, type: !103)
!20364 = !DILocalVariable(name: "swap_data", arg: 3, scope: !20358, file: !3397, line: 1882, type: !102)
!20365 = !DILocalVariable(name: "thread", scope: !20358, file: !3397, line: 1884, type: !3290)
!20366 = !DILocalVariable(name: "ret", scope: !20358, file: !3397, line: 1885, type: !119)
!20367 = !DILocalVariable(name: "__i", scope: !20368, file: !3397, line: 1887, type: !18076)
!20368 = distinct !DILexicalBlock(scope: !20358, file: !3397, line: 1887, column: 2)
!20369 = !DILocalVariable(name: "__key", scope: !20368, file: !3397, line: 1887, type: !18076)
!20370 = !DILocation(line: 0, scope: !20358)
!20371 = !DILocation(line: 0, scope: !20368)
!20372 = !DILocation(line: 0, scope: !18084, inlinedAt: !20373)
!20373 = distinct !DILocation(line: 1887, column: 2, scope: !20368)
!20374 = !DILocation(line: 55, column: 2, scope: !18093, inlinedAt: !20375)
!20375 = distinct !DILocation(line: 145, column: 10, scope: !18084, inlinedAt: !20373)
!20376 = !DILocation(line: 0, scope: !18093, inlinedAt: !20375)
!20377 = !DILocation(line: 148, column: 2, scope: !18101, inlinedAt: !20373)
!20378 = !DILocation(line: 148, column: 2, scope: !18102, inlinedAt: !20373)
!20379 = !DILocation(line: 148, column: 2, scope: !18105, inlinedAt: !20373)
!20380 = !DILocation(line: 160, column: 2, scope: !18084, inlinedAt: !20373)
!20381 = !DILocation(line: 1888, column: 12, scope: !20382)
!20382 = distinct !DILexicalBlock(scope: !20383, file: !3397, line: 1887, column: 26)
!20383 = distinct !DILexicalBlock(scope: !20368, file: !3397, line: 1887, column: 2)
!20384 = !DILocation(line: 1890, column: 14, scope: !20385)
!20385 = distinct !DILexicalBlock(scope: !20382, file: !3397, line: 1890, column: 7)
!20386 = !DILocation(line: 1890, column: 7, scope: !20382)
!20387 = !DILocalVariable(name: "thread", arg: 1, scope: !20388, file: !16471, line: 134, type: !3290)
!20388 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16471, file: !16471, line: 134, type: !20389, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20391)
!20389 = !DISubroutineType(types: !20390)
!20390 = !{null, !3290, !32, !102}
!20391 = !{!20387, !20392, !20393}
!20392 = !DILocalVariable(name: "value", arg: 2, scope: !20388, file: !16471, line: 135, type: !32)
!20393 = !DILocalVariable(name: "data", arg: 3, scope: !20388, file: !16471, line: 136, type: !102)
!20394 = !DILocation(line: 0, scope: !20388, inlinedAt: !20395)
!20395 = distinct !DILocation(line: 1891, column: 4, scope: !20396)
!20396 = distinct !DILexicalBlock(scope: !20385, file: !3397, line: 1890, column: 23)
!20397 = !DILocation(line: 0, scope: !20275, inlinedAt: !20398)
!20398 = distinct !DILocation(line: 138, column: 2, scope: !20388, inlinedAt: !20395)
!20399 = !DILocation(line: 67, column: 15, scope: !20275, inlinedAt: !20398)
!20400 = !DILocation(line: 67, column: 33, scope: !20275, inlinedAt: !20398)
!20401 = !DILocation(line: 139, column: 15, scope: !20388, inlinedAt: !20395)
!20402 = !DILocation(line: 139, column: 25, scope: !20388, inlinedAt: !20395)
!20403 = !DILocation(line: 1894, column: 4, scope: !20396)
!20404 = !DILocation(line: 1895, column: 10, scope: !20396)
!20405 = !DILocation(line: 1896, column: 4, scope: !20396)
!20406 = !DILocation(line: 1898, column: 3, scope: !20396)
!20407 = !DILocation(line: 0, scope: !18118, inlinedAt: !20408)
!20408 = distinct !DILocation(line: 1887, column: 2, scope: !20383)
!20409 = !DILocation(line: 194, column: 2, scope: !18126, inlinedAt: !20408)
!20410 = !DILocation(line: 194, column: 2, scope: !18127, inlinedAt: !20408)
!20411 = !DILocation(line: 194, column: 2, scope: !18130, inlinedAt: !20408)
!20412 = !DILocation(line: 0, scope: !18132, inlinedAt: !20413)
!20413 = distinct !DILocation(line: 215, column: 2, scope: !18118, inlinedAt: !20408)
!20414 = !DILocation(line: 95, column: 2, scope: !18132, inlinedAt: !20413)
!20415 = !DILocation(line: 1901, column: 2, scope: !20358)
!20416 = distinct !DISubprogram(name: "z_sched_wait", scope: !3397, file: !3397, line: 1904, type: !20417, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3287, retainedNodes: !20419)
!20417 = !DISubroutineType(types: !20418)
!20418 = !{!103, !18087, !18076, !3321, !18970, !1437}
!20419 = !{!20420, !20421, !20422, !20423, !20424, !20425}
!20420 = !DILocalVariable(name: "lock", arg: 1, scope: !20416, file: !3397, line: 1904, type: !18087)
!20421 = !DILocalVariable(name: "key", arg: 2, scope: !20416, file: !3397, line: 1904, type: !18076)
!20422 = !DILocalVariable(name: "wait_q", arg: 3, scope: !20416, file: !3397, line: 1905, type: !3321)
!20423 = !DILocalVariable(name: "timeout", arg: 4, scope: !20416, file: !3397, line: 1905, type: !18970)
!20424 = !DILocalVariable(name: "data", arg: 5, scope: !20416, file: !3397, line: 1905, type: !1437)
!20425 = !DILocalVariable(name: "ret", scope: !20416, file: !3397, line: 1907, type: !103)
!20426 = !DILocation(line: 0, scope: !20416)
!20427 = !DILocation(line: 1907, column: 12, scope: !20416)
!20428 = !DILocation(line: 1909, column: 11, scope: !20429)
!20429 = distinct !DILexicalBlock(scope: !20416, file: !3397, line: 1909, column: 6)
!20430 = !DILocation(line: 1909, column: 6, scope: !20416)
!20431 = !DILocation(line: 1910, column: 11, scope: !20432)
!20432 = distinct !DILexicalBlock(scope: !20429, file: !3397, line: 1909, column: 20)
!20433 = !DILocation(line: 1910, column: 26, scope: !20432)
!20434 = !DILocation(line: 1910, column: 9, scope: !20432)
!20435 = !DILocation(line: 1911, column: 2, scope: !20432)
!20436 = !DILocation(line: 1912, column: 2, scope: !20416)
!20437 = distinct !DISubprogram(name: "z_data_copy", scope: !20438, file: !20438, line: 22, type: !333, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4157, retainedNodes: !2953)
!20438 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!20439 = !DILocation(line: 24, column: 2, scope: !20437)
!20440 = !DILocation(line: 27, column: 2, scope: !20437)
!20441 = !DILocation(line: 71, column: 1, scope: !20437)
!20442 = distinct !DISubprogram(name: "z_add_timeout", scope: !3434, file: !3434, line: 88, type: !20443, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20449)
!20443 = !DISubroutineType(types: !20444)
!20444 = !{null, !3407, !3426, !20445}
!20445 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !20446)
!20446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !20447)
!20447 = !{!20448}
!20448 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !20446, file: !105, line: 66, baseType: !104, size: 64)
!20449 = !{!20450, !20451, !20452, !20453, !20459, !20460, !20463, !20466}
!20450 = !DILocalVariable(name: "to", arg: 1, scope: !20442, file: !3434, line: 88, type: !3407)
!20451 = !DILocalVariable(name: "fn", arg: 2, scope: !20442, file: !3434, line: 88, type: !3426)
!20452 = !DILocalVariable(name: "timeout", arg: 3, scope: !20442, file: !3434, line: 89, type: !20445)
!20453 = !DILocalVariable(name: "__i", scope: !20454, file: !3434, line: 102, type: !20455)
!20454 = distinct !DILexicalBlock(scope: !20442, file: !3434, line: 102, column: 2)
!20455 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !20456)
!20456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !20457)
!20457 = !{!20458}
!20458 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !20456, file: !149, line: 33, baseType: !103, size: 32)
!20459 = !DILocalVariable(name: "__key", scope: !20454, file: !3434, line: 102, type: !20455)
!20460 = !DILocalVariable(name: "t", scope: !20461, file: !3434, line: 103, type: !3407)
!20461 = distinct !DILexicalBlock(scope: !20462, file: !3434, line: 102, column: 24)
!20462 = distinct !DILexicalBlock(scope: !20454, file: !3434, line: 102, column: 2)
!20463 = !DILocalVariable(name: "ticks", scope: !20464, file: !3434, line: 107, type: !104)
!20464 = distinct !DILexicalBlock(scope: !20465, file: !3434, line: 106, column: 39)
!20465 = distinct !DILexicalBlock(scope: !20461, file: !3434, line: 105, column: 7)
!20466 = !DILocalVariable(name: "next_time", scope: !20467, file: !3434, line: 137, type: !330)
!20467 = distinct !DILexicalBlock(scope: !20468, file: !3434, line: 127, column: 22)
!20468 = distinct !DILexicalBlock(scope: !20461, file: !3434, line: 127, column: 7)
!20469 = !DILocation(line: 0, scope: !20442)
!20470 = !DILocation(line: 91, column: 6, scope: !20471)
!20471 = distinct !DILexicalBlock(scope: !20442, file: !3434, line: 91, column: 6)
!20472 = !DILocation(line: 91, column: 6, scope: !20442)
!20473 = !DILocation(line: 99, column: 2, scope: !20474)
!20474 = distinct !DILexicalBlock(scope: !20475, file: !3434, line: 99, column: 2)
!20475 = distinct !DILexicalBlock(scope: !20442, file: !3434, line: 99, column: 2)
!20476 = !DILocation(line: 99, column: 2, scope: !20475)
!20477 = !DILocation(line: 99, column: 2, scope: !20478)
!20478 = distinct !DILexicalBlock(scope: !20474, file: !3434, line: 99, column: 2)
!20479 = !DILocation(line: 100, column: 6, scope: !20442)
!20480 = !DILocation(line: 100, column: 9, scope: !20442)
!20481 = !DILocation(line: 0, scope: !20454)
!20482 = !DILocalVariable(name: "l", arg: 1, scope: !20483, file: !149, line: 136, type: !20486)
!20483 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !20484, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20487)
!20484 = !DISubroutineType(types: !20485)
!20485 = !{!20455, !20486}
!20486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 32)
!20487 = !{!20482, !20488}
!20488 = !DILocalVariable(name: "k", scope: !20483, file: !149, line: 139, type: !20455)
!20489 = !DILocation(line: 0, scope: !20483, inlinedAt: !20490)
!20490 = distinct !DILocation(line: 102, column: 2, scope: !20454)
!20491 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !20496)
!20492 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20493)
!20493 = !{!20494, !20495}
!20494 = !DILocalVariable(name: "key", scope: !20492, file: !7985, line: 44, type: !32)
!20495 = !DILocalVariable(name: "tmp", scope: !20492, file: !7985, line: 53, type: !32)
!20496 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !20490)
!20497 = !{i64 2287514}
!20498 = !DILocation(line: 0, scope: !20492, inlinedAt: !20496)
!20499 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !20490)
!20500 = distinct !DILexicalBlock(scope: !20501, file: !149, line: 148, column: 2)
!20501 = distinct !DILexicalBlock(scope: !20483, file: !149, line: 148, column: 2)
!20502 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !20490)
!20503 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !20490)
!20504 = distinct !DILexicalBlock(scope: !20500, file: !149, line: 148, column: 2)
!20505 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !20490)
!20506 = !DILocation(line: 106, column: 33, scope: !20465)
!20507 = !DILocation(line: 105, column: 7, scope: !20461)
!20508 = !DILocation(line: 107, column: 50, scope: !20464)
!20509 = !DILocation(line: 107, column: 48, scope: !20464)
!20510 = !DILocation(line: 0, scope: !20464)
!20511 = !DILocation(line: 109, column: 17, scope: !20464)
!20512 = !DILocation(line: 110, column: 3, scope: !20464)
!20513 = !DILocation(line: 111, column: 31, scope: !20514)
!20514 = distinct !DILexicalBlock(scope: !20465, file: !3434, line: 110, column: 10)
!20515 = !DILocation(line: 111, column: 37, scope: !20514)
!20516 = !DILocation(line: 111, column: 35, scope: !20514)
!20517 = !DILocation(line: 0, scope: !20465)
!20518 = !DILocation(line: 109, column: 8, scope: !20464)
!20519 = !DILocation(line: 109, column: 15, scope: !20464)
!20520 = !DILocation(line: 114, column: 12, scope: !20521)
!20521 = distinct !DILexicalBlock(scope: !20461, file: !3434, line: 114, column: 3)
!20522 = !DILocation(line: 0, scope: !20461)
!20523 = !DILocation(line: 114, column: 3, scope: !20521)
!20524 = !DILocation(line: 115, column: 24, scope: !20525)
!20525 = distinct !DILexicalBlock(scope: !20526, file: !3434, line: 115, column: 8)
!20526 = distinct !DILexicalBlock(scope: !20527, file: !3434, line: 114, column: 45)
!20527 = distinct !DILexicalBlock(scope: !20521, file: !3434, line: 114, column: 3)
!20528 = !DILocation(line: 115, column: 11, scope: !20525)
!20529 = !DILocation(line: 115, column: 18, scope: !20525)
!20530 = !DILocation(line: 115, column: 8, scope: !20526)
!20531 = !DILocation(line: 116, column: 15, scope: !20532)
!20532 = distinct !DILexicalBlock(scope: !20525, file: !3434, line: 115, column: 32)
!20533 = !DILocation(line: 117, column: 26, scope: !20532)
!20534 = !DILocation(line: 117, column: 5, scope: !20532)
!20535 = !DILocation(line: 123, column: 7, scope: !20461)
!20536 = !DILocation(line: 120, column: 15, scope: !20526)
!20537 = !DILocation(line: 114, column: 36, scope: !20527)
!20538 = distinct !{!20538, !20523, !20539}
!20539 = !DILocation(line: 121, column: 3, scope: !20521)
!20540 = !DILocation(line: 124, column: 4, scope: !20541)
!20541 = distinct !DILexicalBlock(scope: !20542, file: !3434, line: 123, column: 18)
!20542 = distinct !DILexicalBlock(scope: !20461, file: !3434, line: 123, column: 7)
!20543 = !DILocation(line: 125, column: 3, scope: !20541)
!20544 = !DILocation(line: 127, column: 13, scope: !20468)
!20545 = !DILocation(line: 127, column: 10, scope: !20468)
!20546 = !DILocation(line: 127, column: 7, scope: !20461)
!20547 = !DILocation(line: 137, column: 24, scope: !20467)
!20548 = !DILocation(line: 0, scope: !20467)
!20549 = !DILocation(line: 139, column: 18, scope: !20550)
!20550 = distinct !DILexicalBlock(scope: !20467, file: !3434, line: 139, column: 8)
!20551 = !DILocation(line: 139, column: 23, scope: !20550)
!20552 = !DILocation(line: 141, column: 5, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20550, file: !3434, line: 140, column: 48)
!20554 = !DILocation(line: 142, column: 4, scope: !20553)
!20555 = !DILocalVariable(name: "key", arg: 2, scope: !20556, file: !149, line: 190, type: !20455)
!20556 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !20557, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20559)
!20557 = !DISubroutineType(types: !20558)
!20558 = !{null, !20486, !20455}
!20559 = !{!20560, !20555}
!20560 = !DILocalVariable(name: "l", arg: 1, scope: !20556, file: !149, line: 189, type: !20486)
!20561 = !DILocation(line: 0, scope: !20556, inlinedAt: !20562)
!20562 = distinct !DILocation(line: 102, column: 2, scope: !20462)
!20563 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !20562)
!20564 = distinct !DILexicalBlock(scope: !20565, file: !149, line: 194, column: 2)
!20565 = distinct !DILexicalBlock(scope: !20556, file: !149, line: 194, column: 2)
!20566 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !20562)
!20567 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !20562)
!20568 = distinct !DILexicalBlock(scope: !20564, file: !149, line: 194, column: 2)
!20569 = !DILocalVariable(name: "key", arg: 1, scope: !20570, file: !7985, line: 84, type: !32)
!20570 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20571)
!20571 = !{!20569}
!20572 = !DILocation(line: 0, scope: !20570, inlinedAt: !20573)
!20573 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !20562)
!20574 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !20573)
!20575 = !{i64 2288331}
!20576 = !DILocation(line: 148, column: 1, scope: !20442)
!20577 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !133, file: !133, line: 225, type: !20578, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20582)
!20578 = !DISubroutineType(types: !20579)
!20579 = !{!119, !20580}
!20580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20581, size: 32)
!20581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3411)
!20582 = !{!20583}
!20583 = !DILocalVariable(name: "node", arg: 1, scope: !20577, file: !133, line: 225, type: !20580)
!20584 = !DILocation(line: 0, scope: !20577)
!20585 = !DILocation(line: 227, column: 15, scope: !20577)
!20586 = !DILocation(line: 227, column: 20, scope: !20577)
!20587 = !DILocation(line: 227, column: 2, scope: !20577)
!20588 = distinct !DISubprogram(name: "elapsed", scope: !3434, file: !3434, line: 62, type: !20589, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !2953)
!20589 = !DISubroutineType(types: !20590)
!20590 = !{!330}
!20591 = !DILocation(line: 64, column: 9, scope: !20588)
!20592 = !DILocation(line: 64, column: 28, scope: !20588)
!20593 = !DILocation(line: 64, column: 35, scope: !20588)
!20594 = !DILocation(line: 64, column: 2, scope: !20588)
!20595 = distinct !DISubprogram(name: "first", scope: !3434, file: !3434, line: 39, type: !20596, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20598)
!20596 = !DISubroutineType(types: !20597)
!20597 = !{!3407}
!20598 = !{!20599}
!20599 = !DILocalVariable(name: "t", scope: !20595, file: !3434, line: 41, type: !20600)
!20600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 32)
!20601 = !DILocation(line: 41, column: 19, scope: !20595)
!20602 = !DILocation(line: 0, scope: !20595)
!20603 = !DILocation(line: 43, column: 9, scope: !20595)
!20604 = !DILocation(line: 43, column: 2, scope: !20595)
!20605 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !133, file: !133, line: 443, type: !20606, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20608)
!20606 = !DISubroutineType(types: !20607)
!20607 = !{null, !20600, !20600}
!20608 = !{!20609, !20610, !20611}
!20609 = !DILocalVariable(name: "successor", arg: 1, scope: !20605, file: !133, line: 443, type: !20600)
!20610 = !DILocalVariable(name: "node", arg: 2, scope: !20605, file: !133, line: 443, type: !20600)
!20611 = !DILocalVariable(name: "prev", scope: !20605, file: !133, line: 445, type: !20612)
!20612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20600)
!20613 = !DILocation(line: 0, scope: !20605)
!20614 = !DILocation(line: 445, column: 39, scope: !20605)
!20615 = !DILocation(line: 447, column: 8, scope: !20605)
!20616 = !DILocation(line: 447, column: 13, scope: !20605)
!20617 = !DILocation(line: 448, column: 8, scope: !20605)
!20618 = !DILocation(line: 448, column: 13, scope: !20605)
!20619 = !DILocation(line: 449, column: 8, scope: !20605)
!20620 = !DILocation(line: 449, column: 13, scope: !20605)
!20621 = !DILocation(line: 450, column: 18, scope: !20605)
!20622 = !DILocation(line: 451, column: 1, scope: !20605)
!20623 = distinct !DISubprogram(name: "next", scope: !3434, file: !3434, line: 46, type: !20624, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20626)
!20624 = !DISubroutineType(types: !20625)
!20625 = !{!3407, !3407}
!20626 = !{!20627, !20628}
!20627 = !DILocalVariable(name: "t", arg: 1, scope: !20623, file: !3434, line: 46, type: !3407)
!20628 = !DILocalVariable(name: "n", scope: !20623, file: !3434, line: 48, type: !20600)
!20629 = !DILocation(line: 0, scope: !20623)
!20630 = !DILocation(line: 48, column: 58, scope: !20623)
!20631 = !DILocation(line: 48, column: 19, scope: !20623)
!20632 = !DILocation(line: 50, column: 9, scope: !20623)
!20633 = !DILocation(line: 50, column: 2, scope: !20623)
!20634 = distinct !DISubprogram(name: "sys_dlist_append", scope: !133, file: !133, line: 404, type: !20635, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20638)
!20635 = !DISubroutineType(types: !20636)
!20636 = !{null, !20637, !20600}
!20637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 32)
!20638 = !{!20639, !20640, !20641}
!20639 = !DILocalVariable(name: "list", arg: 1, scope: !20634, file: !133, line: 404, type: !20637)
!20640 = !DILocalVariable(name: "node", arg: 2, scope: !20634, file: !133, line: 404, type: !20600)
!20641 = !DILocalVariable(name: "tail", scope: !20634, file: !133, line: 406, type: !20612)
!20642 = !DILocation(line: 0, scope: !20634)
!20643 = !DILocation(line: 406, column: 34, scope: !20634)
!20644 = !DILocation(line: 408, column: 8, scope: !20634)
!20645 = !DILocation(line: 408, column: 13, scope: !20634)
!20646 = !DILocation(line: 409, column: 8, scope: !20634)
!20647 = !DILocation(line: 409, column: 13, scope: !20634)
!20648 = !DILocation(line: 411, column: 8, scope: !20634)
!20649 = !DILocation(line: 411, column: 13, scope: !20634)
!20650 = !DILocation(line: 412, column: 13, scope: !20634)
!20651 = !DILocation(line: 413, column: 1, scope: !20634)
!20652 = distinct !DISubprogram(name: "next_timeout", scope: !3434, file: !3434, line: 67, type: !20589, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20653)
!20653 = !{!20654, !20655, !20656}
!20654 = !DILocalVariable(name: "to", scope: !20652, file: !3434, line: 69, type: !3407)
!20655 = !DILocalVariable(name: "ticks_elapsed", scope: !20652, file: !3434, line: 70, type: !330)
!20656 = !DILocalVariable(name: "ret", scope: !20652, file: !3434, line: 71, type: !330)
!20657 = !DILocation(line: 69, column: 24, scope: !20652)
!20658 = !DILocation(line: 0, scope: !20652)
!20659 = !DILocation(line: 70, column: 26, scope: !20652)
!20660 = !DILocation(line: 73, column: 10, scope: !20661)
!20661 = distinct !DILexicalBlock(scope: !20652, file: !3434, line: 73, column: 6)
!20662 = !DILocation(line: 73, column: 19, scope: !20661)
!20663 = !DILocation(line: 74, column: 21, scope: !20661)
!20664 = !DILocation(line: 74, column: 30, scope: !20661)
!20665 = !DILocation(line: 74, column: 28, scope: !20661)
!20666 = !DILocation(line: 74, column: 45, scope: !20661)
!20667 = !DILocation(line: 73, column: 6, scope: !20652)
!20668 = !DILocation(line: 77, column: 9, scope: !20669)
!20669 = distinct !DILexicalBlock(scope: !20661, file: !3434, line: 76, column: 9)
!20670 = !DILocation(line: 0, scope: !20661)
!20671 = !DILocation(line: 81, column: 20, scope: !20672)
!20672 = distinct !DILexicalBlock(scope: !20652, file: !3434, line: 81, column: 6)
!20673 = !DILocation(line: 81, column: 6, scope: !20672)
!20674 = !DILocation(line: 81, column: 32, scope: !20672)
!20675 = !DILocation(line: 85, column: 2, scope: !20652)
!20676 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !133, file: !133, line: 341, type: !20677, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20679)
!20677 = !DISubroutineType(types: !20678)
!20678 = !{!20600, !20637, !20600}
!20679 = !{!20680, !20681}
!20680 = !DILocalVariable(name: "list", arg: 1, scope: !20676, file: !133, line: 341, type: !20637)
!20681 = !DILocalVariable(name: "node", arg: 2, scope: !20676, file: !133, line: 342, type: !20600)
!20682 = !DILocation(line: 0, scope: !20676)
!20683 = !DILocation(line: 344, column: 15, scope: !20676)
!20684 = !DILocation(line: 344, column: 9, scope: !20676)
!20685 = !DILocation(line: 344, column: 26, scope: !20676)
!20686 = !DILocation(line: 344, column: 2, scope: !20676)
!20687 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !133, file: !133, line: 325, type: !20677, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20688)
!20688 = !{!20689, !20690}
!20689 = !DILocalVariable(name: "list", arg: 1, scope: !20687, file: !133, line: 325, type: !20637)
!20690 = !DILocalVariable(name: "node", arg: 2, scope: !20687, file: !133, line: 326, type: !20600)
!20691 = !DILocation(line: 0, scope: !20687)
!20692 = !DILocation(line: 328, column: 24, scope: !20687)
!20693 = !DILocation(line: 328, column: 15, scope: !20687)
!20694 = !DILocation(line: 328, column: 9, scope: !20687)
!20695 = !DILocation(line: 328, column: 45, scope: !20687)
!20696 = !DILocation(line: 328, column: 2, scope: !20687)
!20697 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !20698, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20700)
!20698 = !DISubroutineType(types: !20699)
!20699 = !{!20600, !20637}
!20700 = !{!20701}
!20701 = !DILocalVariable(name: "list", arg: 1, scope: !20697, file: !133, line: 294, type: !20637)
!20702 = !DILocation(line: 0, scope: !20697)
!20703 = !DILocation(line: 296, column: 9, scope: !20697)
!20704 = !DILocation(line: 296, column: 2, scope: !20697)
!20705 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !20706, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20708)
!20706 = !DISubroutineType(types: !20707)
!20707 = !{!119, !20637}
!20708 = !{!20709}
!20709 = !DILocalVariable(name: "list", arg: 1, scope: !20705, file: !133, line: 266, type: !20637)
!20710 = !DILocation(line: 0, scope: !20705)
!20711 = !DILocation(line: 268, column: 15, scope: !20705)
!20712 = !DILocation(line: 268, column: 20, scope: !20705)
!20713 = !DILocation(line: 268, column: 2, scope: !20705)
!20714 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3434, file: !3434, line: 150, type: !20715, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20717)
!20715 = !DISubroutineType(types: !20716)
!20716 = !{!103, !3407}
!20717 = !{!20718, !20719, !20720, !20722}
!20718 = !DILocalVariable(name: "to", arg: 1, scope: !20714, file: !3434, line: 150, type: !3407)
!20719 = !DILocalVariable(name: "ret", scope: !20714, file: !3434, line: 152, type: !103)
!20720 = !DILocalVariable(name: "__i", scope: !20721, file: !3434, line: 154, type: !20455)
!20721 = distinct !DILexicalBlock(scope: !20714, file: !3434, line: 154, column: 2)
!20722 = !DILocalVariable(name: "__key", scope: !20721, file: !3434, line: 154, type: !20455)
!20723 = !DILocation(line: 0, scope: !20714)
!20724 = !DILocation(line: 0, scope: !20721)
!20725 = !DILocation(line: 0, scope: !20483, inlinedAt: !20726)
!20726 = distinct !DILocation(line: 154, column: 2, scope: !20721)
!20727 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !20728)
!20728 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !20726)
!20729 = !DILocation(line: 0, scope: !20492, inlinedAt: !20728)
!20730 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !20726)
!20731 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !20726)
!20732 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !20726)
!20733 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !20726)
!20734 = !DILocation(line: 155, column: 7, scope: !20735)
!20735 = distinct !DILexicalBlock(scope: !20736, file: !3434, line: 155, column: 7)
!20736 = distinct !DILexicalBlock(scope: !20737, file: !3434, line: 154, column: 24)
!20737 = distinct !DILexicalBlock(scope: !20721, file: !3434, line: 154, column: 2)
!20738 = !DILocation(line: 155, column: 7, scope: !20736)
!20739 = !DILocation(line: 156, column: 4, scope: !20740)
!20740 = distinct !DILexicalBlock(scope: !20735, file: !3434, line: 155, column: 39)
!20741 = !DILocation(line: 158, column: 3, scope: !20740)
!20742 = !DILocation(line: 0, scope: !20556, inlinedAt: !20743)
!20743 = distinct !DILocation(line: 154, column: 2, scope: !20737)
!20744 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !20743)
!20745 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !20743)
!20746 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !20743)
!20747 = !DILocation(line: 0, scope: !20570, inlinedAt: !20748)
!20748 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !20743)
!20749 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !20748)
!20750 = !DILocation(line: 161, column: 2, scope: !20714)
!20751 = distinct !DISubprogram(name: "remove_timeout", scope: !3434, file: !3434, line: 53, type: !3428, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20752)
!20752 = !{!20753}
!20753 = !DILocalVariable(name: "t", arg: 1, scope: !20751, file: !3434, line: 53, type: !3407)
!20754 = !DILocation(line: 0, scope: !20751)
!20755 = !DILocation(line: 55, column: 6, scope: !20756)
!20756 = distinct !DILexicalBlock(scope: !20751, file: !3434, line: 55, column: 6)
!20757 = !DILocation(line: 55, column: 14, scope: !20756)
!20758 = !DILocation(line: 55, column: 6, scope: !20751)
!20759 = !DILocation(line: 56, column: 25, scope: !20760)
!20760 = distinct !DILexicalBlock(scope: !20756, file: !3434, line: 55, column: 23)
!20761 = !DILocation(line: 56, column: 12, scope: !20760)
!20762 = !DILocation(line: 56, column: 19, scope: !20760)
!20763 = !DILocation(line: 57, column: 2, scope: !20760)
!20764 = !DILocation(line: 59, column: 23, scope: !20751)
!20765 = !DILocation(line: 59, column: 2, scope: !20751)
!20766 = !DILocation(line: 60, column: 1, scope: !20751)
!20767 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !133, file: !133, line: 496, type: !20768, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20770)
!20768 = !DISubroutineType(types: !20769)
!20769 = !{null, !20600}
!20770 = !{!20771, !20772, !20773}
!20771 = !DILocalVariable(name: "node", arg: 1, scope: !20767, file: !133, line: 496, type: !20600)
!20772 = !DILocalVariable(name: "prev", scope: !20767, file: !133, line: 498, type: !20612)
!20773 = !DILocalVariable(name: "next", scope: !20767, file: !133, line: 499, type: !20612)
!20774 = !DILocation(line: 0, scope: !20767)
!20775 = !DILocation(line: 498, column: 34, scope: !20767)
!20776 = !DILocation(line: 499, column: 34, scope: !20767)
!20777 = !DILocation(line: 501, column: 8, scope: !20767)
!20778 = !DILocation(line: 501, column: 13, scope: !20767)
!20779 = !DILocation(line: 502, column: 8, scope: !20767)
!20780 = !DILocation(line: 502, column: 13, scope: !20767)
!20781 = !DILocation(line: 503, column: 2, scope: !20767)
!20782 = !DILocation(line: 504, column: 1, scope: !20767)
!20783 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !20768, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20784)
!20784 = !{!20785}
!20785 = !DILocalVariable(name: "node", arg: 1, scope: !20783, file: !133, line: 211, type: !20600)
!20786 = !DILocation(line: 0, scope: !20783)
!20787 = !DILocation(line: 213, column: 8, scope: !20783)
!20788 = !DILocation(line: 213, column: 13, scope: !20783)
!20789 = !DILocation(line: 214, column: 8, scope: !20783)
!20790 = !DILocation(line: 214, column: 13, scope: !20783)
!20791 = !DILocation(line: 215, column: 1, scope: !20783)
!20792 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3434, file: !3434, line: 183, type: !20793, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20797)
!20793 = !DISubroutineType(types: !20794)
!20794 = !{!104, !20795}
!20795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20796, size: 32)
!20796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3408)
!20797 = !{!20798, !20799, !20800, !20802}
!20798 = !DILocalVariable(name: "timeout", arg: 1, scope: !20792, file: !3434, line: 183, type: !20795)
!20799 = !DILocalVariable(name: "ticks", scope: !20792, file: !3434, line: 185, type: !104)
!20800 = !DILocalVariable(name: "__i", scope: !20801, file: !3434, line: 187, type: !20455)
!20801 = distinct !DILexicalBlock(scope: !20792, file: !3434, line: 187, column: 2)
!20802 = !DILocalVariable(name: "__key", scope: !20801, file: !3434, line: 187, type: !20455)
!20803 = !DILocation(line: 0, scope: !20792)
!20804 = !DILocation(line: 0, scope: !20801)
!20805 = !DILocation(line: 0, scope: !20483, inlinedAt: !20806)
!20806 = distinct !DILocation(line: 187, column: 2, scope: !20801)
!20807 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !20808)
!20808 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !20806)
!20809 = !DILocation(line: 0, scope: !20492, inlinedAt: !20808)
!20810 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !20806)
!20811 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !20806)
!20812 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !20806)
!20813 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !20806)
!20814 = !DILocation(line: 188, column: 11, scope: !20815)
!20815 = distinct !DILexicalBlock(scope: !20816, file: !3434, line: 187, column: 24)
!20816 = distinct !DILexicalBlock(scope: !20801, file: !3434, line: 187, column: 2)
!20817 = !DILocation(line: 0, scope: !20556, inlinedAt: !20818)
!20818 = distinct !DILocation(line: 187, column: 2, scope: !20816)
!20819 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !20818)
!20820 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !20818)
!20821 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !20818)
!20822 = !DILocation(line: 0, scope: !20570, inlinedAt: !20823)
!20823 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !20818)
!20824 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !20823)
!20825 = !DILocation(line: 191, column: 2, scope: !20792)
!20826 = distinct !DISubprogram(name: "timeout_rem", scope: !3434, file: !3434, line: 165, type: !20793, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20827)
!20827 = !{!20828, !20829, !20830}
!20828 = !DILocalVariable(name: "timeout", arg: 1, scope: !20826, file: !3434, line: 165, type: !20795)
!20829 = !DILocalVariable(name: "ticks", scope: !20826, file: !3434, line: 167, type: !104)
!20830 = !DILocalVariable(name: "t", scope: !20831, file: !3434, line: 173, type: !3407)
!20831 = distinct !DILexicalBlock(scope: !20826, file: !3434, line: 173, column: 2)
!20832 = !DILocation(line: 0, scope: !20826)
!20833 = !DILocation(line: 169, column: 6, scope: !20834)
!20834 = distinct !DILexicalBlock(scope: !20826, file: !3434, line: 169, column: 6)
!20835 = !DILocation(line: 169, column: 6, scope: !20826)
!20836 = !DILocation(line: 173, column: 28, scope: !20831)
!20837 = !DILocation(line: 0, scope: !20831)
!20838 = !DILocation(line: 173, column: 39, scope: !20839)
!20839 = distinct !DILexicalBlock(scope: !20831, file: !3434, line: 173, column: 2)
!20840 = !DILocation(line: 173, column: 2, scope: !20831)
!20841 = !DILocation(line: 174, column: 15, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20839, file: !3434, line: 173, column: 61)
!20843 = !DILocation(line: 174, column: 9, scope: !20842)
!20844 = !DILocation(line: 175, column: 15, scope: !20845)
!20845 = distinct !DILexicalBlock(scope: !20842, file: !3434, line: 175, column: 7)
!20846 = !DILocation(line: 175, column: 7, scope: !20842)
!20847 = !DILocation(line: 173, column: 52, scope: !20839)
!20848 = distinct !{!20848, !20840, !20849}
!20849 = !DILocation(line: 178, column: 2, scope: !20831)
!20850 = !DILocation(line: 180, column: 17, scope: !20826)
!20851 = !DILocation(line: 180, column: 15, scope: !20826)
!20852 = !DILocation(line: 180, column: 2, scope: !20826)
!20853 = !DILocation(line: 181, column: 1, scope: !20826)
!20854 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !16811, file: !16811, line: 35, type: !20855, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20857)
!20855 = !DISubroutineType(types: !20856)
!20856 = !{!119, !20795}
!20857 = !{!20858}
!20858 = !DILocalVariable(name: "to", arg: 1, scope: !20854, file: !16811, line: 35, type: !20795)
!20859 = !DILocation(line: 0, scope: !20854)
!20860 = !DILocation(line: 37, column: 35, scope: !20854)
!20861 = !DILocation(line: 37, column: 10, scope: !20854)
!20862 = !DILocation(line: 37, column: 9, scope: !20854)
!20863 = !DILocation(line: 37, column: 2, scope: !20854)
!20864 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3434, file: !3434, line: 194, type: !20793, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20865)
!20865 = !{!20866, !20867, !20868, !20870}
!20866 = !DILocalVariable(name: "timeout", arg: 1, scope: !20864, file: !3434, line: 194, type: !20795)
!20867 = !DILocalVariable(name: "ticks", scope: !20864, file: !3434, line: 196, type: !104)
!20868 = !DILocalVariable(name: "__i", scope: !20869, file: !3434, line: 198, type: !20455)
!20869 = distinct !DILexicalBlock(scope: !20864, file: !3434, line: 198, column: 2)
!20870 = !DILocalVariable(name: "__key", scope: !20869, file: !3434, line: 198, type: !20455)
!20871 = !DILocation(line: 0, scope: !20864)
!20872 = !DILocation(line: 0, scope: !20869)
!20873 = !DILocation(line: 0, scope: !20483, inlinedAt: !20874)
!20874 = distinct !DILocation(line: 198, column: 2, scope: !20869)
!20875 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !20876)
!20876 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !20874)
!20877 = !DILocation(line: 0, scope: !20492, inlinedAt: !20876)
!20878 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !20874)
!20879 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !20874)
!20880 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !20874)
!20881 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !20874)
!20882 = !DILocation(line: 199, column: 11, scope: !20883)
!20883 = distinct !DILexicalBlock(scope: !20884, file: !3434, line: 198, column: 24)
!20884 = distinct !DILexicalBlock(scope: !20869, file: !3434, line: 198, column: 2)
!20885 = !DILocation(line: 199, column: 23, scope: !20883)
!20886 = !DILocation(line: 0, scope: !20556, inlinedAt: !20887)
!20887 = distinct !DILocation(line: 198, column: 2, scope: !20884)
!20888 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !20887)
!20889 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !20887)
!20890 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !20887)
!20891 = !DILocation(line: 0, scope: !20570, inlinedAt: !20892)
!20892 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !20887)
!20893 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !20892)
!20894 = !DILocation(line: 199, column: 21, scope: !20883)
!20895 = !DILocation(line: 202, column: 2, scope: !20864)
!20896 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3434, file: !3434, line: 205, type: !20589, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20897)
!20897 = !{!20898, !20899, !20901}
!20898 = !DILocalVariable(name: "ret", scope: !20896, file: !3434, line: 207, type: !330)
!20899 = !DILocalVariable(name: "__i", scope: !20900, file: !3434, line: 209, type: !20455)
!20900 = distinct !DILexicalBlock(scope: !20896, file: !3434, line: 209, column: 2)
!20901 = !DILocalVariable(name: "__key", scope: !20900, file: !3434, line: 209, type: !20455)
!20902 = !DILocation(line: 0, scope: !20896)
!20903 = !DILocation(line: 0, scope: !20900)
!20904 = !DILocation(line: 0, scope: !20483, inlinedAt: !20905)
!20905 = distinct !DILocation(line: 209, column: 2, scope: !20900)
!20906 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !20907)
!20907 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !20905)
!20908 = !DILocation(line: 0, scope: !20492, inlinedAt: !20907)
!20909 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !20905)
!20910 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !20905)
!20911 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !20905)
!20912 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !20905)
!20913 = !DILocation(line: 210, column: 9, scope: !20914)
!20914 = distinct !DILexicalBlock(scope: !20915, file: !3434, line: 209, column: 24)
!20915 = distinct !DILexicalBlock(scope: !20900, file: !3434, line: 209, column: 2)
!20916 = !DILocation(line: 0, scope: !20556, inlinedAt: !20917)
!20917 = distinct !DILocation(line: 209, column: 2, scope: !20915)
!20918 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !20917)
!20919 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !20917)
!20920 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !20917)
!20921 = !DILocation(line: 0, scope: !20570, inlinedAt: !20922)
!20922 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !20917)
!20923 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !20922)
!20924 = !DILocation(line: 212, column: 2, scope: !20896)
!20925 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3434, file: !3434, line: 215, type: !13308, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20926)
!20926 = !{!20927, !20928, !20929, !20931, !20932, !20935, !20936}
!20927 = !DILocalVariable(name: "ticks", arg: 1, scope: !20925, file: !3434, line: 215, type: !330)
!20928 = !DILocalVariable(name: "is_idle", arg: 2, scope: !20925, file: !3434, line: 215, type: !119)
!20929 = !DILocalVariable(name: "__i", scope: !20930, file: !3434, line: 217, type: !20455)
!20930 = distinct !DILexicalBlock(scope: !20925, file: !3434, line: 217, column: 2)
!20931 = !DILocalVariable(name: "__key", scope: !20930, file: !3434, line: 217, type: !20455)
!20932 = !DILocalVariable(name: "next_to", scope: !20933, file: !3434, line: 218, type: !103)
!20933 = distinct !DILexicalBlock(scope: !20934, file: !3434, line: 217, column: 24)
!20934 = distinct !DILexicalBlock(scope: !20930, file: !3434, line: 217, column: 2)
!20935 = !DILocalVariable(name: "sooner", scope: !20933, file: !3434, line: 219, type: !119)
!20936 = !DILocalVariable(name: "imminent", scope: !20933, file: !3434, line: 221, type: !119)
!20937 = !DILocation(line: 0, scope: !20925)
!20938 = !DILocation(line: 0, scope: !20930)
!20939 = !DILocation(line: 0, scope: !20483, inlinedAt: !20940)
!20940 = distinct !DILocation(line: 217, column: 2, scope: !20930)
!20941 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !20942)
!20942 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !20940)
!20943 = !DILocation(line: 0, scope: !20492, inlinedAt: !20942)
!20944 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !20940)
!20945 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !20940)
!20946 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !20940)
!20947 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !20940)
!20948 = !DILocation(line: 218, column: 17, scope: !20933)
!20949 = !DILocation(line: 0, scope: !20933)
!20950 = !DILocation(line: 221, column: 27, scope: !20933)
!20951 = !DILocation(line: 233, column: 17, scope: !20952)
!20952 = distinct !DILexicalBlock(scope: !20933, file: !3434, line: 233, column: 7)
!20953 = !DILocation(line: 234, column: 26, scope: !20954)
!20954 = distinct !DILexicalBlock(scope: !20952, file: !3434, line: 233, column: 56)
!20955 = !DILocation(line: 234, column: 4, scope: !20954)
!20956 = !DILocation(line: 235, column: 3, scope: !20954)
!20957 = !DILocation(line: 0, scope: !20556, inlinedAt: !20958)
!20958 = distinct !DILocation(line: 217, column: 2, scope: !20934)
!20959 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !20958)
!20960 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !20958)
!20961 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !20958)
!20962 = !DILocation(line: 0, scope: !20570, inlinedAt: !20963)
!20963 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !20958)
!20964 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !20963)
!20965 = !DILocation(line: 237, column: 1, scope: !20925)
!20966 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3434, file: !3434, line: 239, type: !20967, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !20969)
!20967 = !DISubroutineType(types: !20968)
!20968 = !{null, !330}
!20969 = !{!20970, !20971, !20972, !20974}
!20970 = !DILocalVariable(name: "ticks", arg: 1, scope: !20966, file: !3434, line: 239, type: !330)
!20971 = !DILocalVariable(name: "key", scope: !20966, file: !3434, line: 245, type: !20455)
!20972 = !DILocalVariable(name: "t", scope: !20973, file: !3434, line: 262, type: !3407)
!20973 = distinct !DILexicalBlock(scope: !20966, file: !3434, line: 261, column: 67)
!20974 = !DILocalVariable(name: "dt", scope: !20973, file: !3434, line: 263, type: !103)
!20975 = !DILocation(line: 0, scope: !20966)
!20976 = !DILocation(line: 242, column: 2, scope: !20966)
!20977 = !DILocation(line: 0, scope: !20483, inlinedAt: !20978)
!20978 = distinct !DILocation(line: 245, column: 25, scope: !20966)
!20979 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !20980)
!20980 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !20978)
!20981 = !DILocation(line: 0, scope: !20492, inlinedAt: !20980)
!20982 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !20978)
!20983 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !20978)
!20984 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !20978)
!20985 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !20978)
!20986 = !DILocation(line: 261, column: 9, scope: !20966)
!20987 = !DILocation(line: 261, column: 17, scope: !20966)
!20988 = !DILocation(line: 261, column: 25, scope: !20966)
!20989 = !DILocation(line: 261, column: 37, scope: !20966)
!20990 = !DILocation(line: 261, column: 47, scope: !20966)
!20991 = !DILocation(line: 261, column: 44, scope: !20966)
!20992 = !DILocation(line: 261, column: 2, scope: !20966)
!20993 = !DILocation(line: 0, scope: !20973)
!20994 = !DILocation(line: 263, column: 12, scope: !20973)
!20995 = !DILocation(line: 265, column: 16, scope: !20973)
!20996 = !DILocation(line: 265, column: 13, scope: !20973)
!20997 = !DILocation(line: 266, column: 13, scope: !20973)
!20998 = !DILocation(line: 267, column: 3, scope: !20973)
!20999 = !DILocation(line: 0, scope: !20556, inlinedAt: !21000)
!21000 = distinct !DILocation(line: 269, column: 3, scope: !20973)
!21001 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !21000)
!21002 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !21000)
!21003 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !21000)
!21004 = !DILocation(line: 0, scope: !20570, inlinedAt: !21005)
!21005 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !21000)
!21006 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !21005)
!21007 = !DILocation(line: 270, column: 6, scope: !20973)
!21008 = !DILocation(line: 270, column: 3, scope: !20973)
!21009 = !DILocation(line: 0, scope: !20483, inlinedAt: !21010)
!21010 = distinct !DILocation(line: 271, column: 9, scope: !20973)
!21011 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !21012)
!21012 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !21010)
!21013 = !DILocation(line: 0, scope: !20492, inlinedAt: !21012)
!21014 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !21010)
!21015 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !21010)
!21016 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !21010)
!21017 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !21010)
!21018 = !DILocation(line: 272, column: 22, scope: !20973)
!21019 = distinct !{!21019, !20992, !21020}
!21020 = !DILocation(line: 273, column: 2, scope: !20966)
!21021 = !DILocation(line: 276, column: 19, scope: !21022)
!21022 = distinct !DILexicalBlock(scope: !21023, file: !3434, line: 275, column: 23)
!21023 = distinct !DILexicalBlock(scope: !20966, file: !3434, line: 275, column: 6)
!21024 = !DILocation(line: 277, column: 2, scope: !21022)
!21025 = !DILocation(line: 279, column: 15, scope: !20966)
!21026 = !DILocation(line: 279, column: 12, scope: !20966)
!21027 = !DILocation(line: 280, column: 21, scope: !20966)
!21028 = !DILocation(line: 282, column: 24, scope: !20966)
!21029 = !DILocation(line: 282, column: 2, scope: !20966)
!21030 = !DILocation(line: 0, scope: !20556, inlinedAt: !21031)
!21031 = distinct !DILocation(line: 284, column: 2, scope: !20966)
!21032 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !21031)
!21033 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !21031)
!21034 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !21031)
!21035 = !DILocation(line: 0, scope: !20570, inlinedAt: !21036)
!21036 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !21031)
!21037 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !21036)
!21038 = !DILocation(line: 285, column: 1, scope: !20966)
!21039 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3434, file: !3434, line: 287, type: !21040, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !21042)
!21040 = !DISubroutineType(types: !21041)
!21041 = !{!106}
!21042 = !{!21043, !21044, !21046}
!21043 = !DILocalVariable(name: "t", scope: !21039, file: !3434, line: 289, type: !109)
!21044 = !DILocalVariable(name: "__i", scope: !21045, file: !3434, line: 291, type: !20455)
!21045 = distinct !DILexicalBlock(scope: !21039, file: !3434, line: 291, column: 2)
!21046 = !DILocalVariable(name: "__key", scope: !21045, file: !3434, line: 291, type: !20455)
!21047 = !DILocation(line: 0, scope: !21039)
!21048 = !DILocation(line: 0, scope: !21045)
!21049 = !DILocation(line: 0, scope: !20483, inlinedAt: !21050)
!21050 = distinct !DILocation(line: 291, column: 2, scope: !21045)
!21051 = !DILocation(line: 55, column: 2, scope: !20492, inlinedAt: !21052)
!21052 = distinct !DILocation(line: 145, column: 10, scope: !20483, inlinedAt: !21050)
!21053 = !DILocation(line: 0, scope: !20492, inlinedAt: !21052)
!21054 = !DILocation(line: 148, column: 2, scope: !20500, inlinedAt: !21050)
!21055 = !DILocation(line: 148, column: 2, scope: !20501, inlinedAt: !21050)
!21056 = !DILocation(line: 148, column: 2, scope: !20504, inlinedAt: !21050)
!21057 = !DILocation(line: 160, column: 2, scope: !20483, inlinedAt: !21050)
!21058 = !DILocation(line: 292, column: 7, scope: !21059)
!21059 = distinct !DILexicalBlock(scope: !21060, file: !3434, line: 291, column: 24)
!21060 = distinct !DILexicalBlock(scope: !21045, file: !3434, line: 291, column: 2)
!21061 = !DILocation(line: 292, column: 19, scope: !21059)
!21062 = !DILocation(line: 0, scope: !20556, inlinedAt: !21063)
!21063 = distinct !DILocation(line: 291, column: 2, scope: !21060)
!21064 = !DILocation(line: 194, column: 2, scope: !20564, inlinedAt: !21063)
!21065 = !DILocation(line: 194, column: 2, scope: !20565, inlinedAt: !21063)
!21066 = !DILocation(line: 194, column: 2, scope: !20568, inlinedAt: !21063)
!21067 = !DILocation(line: 0, scope: !20570, inlinedAt: !21068)
!21068 = distinct !DILocation(line: 215, column: 2, scope: !20556, inlinedAt: !21063)
!21069 = !DILocation(line: 95, column: 2, scope: !20570, inlinedAt: !21068)
!21070 = !DILocation(line: 292, column: 17, scope: !21059)
!21071 = !DILocation(line: 294, column: 2, scope: !21039)
!21072 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3434, file: !3434, line: 297, type: !8393, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !2953)
!21073 = !DILocation(line: 300, column: 19, scope: !21072)
!21074 = !DILocation(line: 300, column: 9, scope: !21072)
!21075 = !DILocation(line: 300, column: 2, scope: !21072)
!21076 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3434, file: !3434, line: 306, type: !21040, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !2953)
!21077 = !DILocation(line: 308, column: 9, scope: !21076)
!21078 = !DILocation(line: 308, column: 2, scope: !21076)
!21079 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3434, file: !3434, line: 319, type: !8403, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !21080)
!21080 = !{!21081, !21082, !21083, !21084}
!21081 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !21079, file: !3434, line: 319, type: !108)
!21082 = !DILocalVariable(name: "start_cycles", scope: !21079, file: !3434, line: 328, type: !108)
!21083 = !DILocalVariable(name: "cycles_to_wait", scope: !21079, file: !3434, line: 331, type: !108)
!21084 = !DILocalVariable(name: "current_cycles", scope: !21085, file: !3434, line: 338, type: !108)
!21085 = distinct !DILexicalBlock(scope: !21086, file: !3434, line: 337, column: 11)
!21086 = distinct !DILexicalBlock(scope: !21087, file: !3434, line: 337, column: 2)
!21087 = distinct !DILexicalBlock(scope: !21079, file: !3434, line: 337, column: 2)
!21088 = !DILocation(line: 0, scope: !21079)
!21089 = !DILocation(line: 322, column: 19, scope: !21090)
!21090 = distinct !DILexicalBlock(scope: !21079, file: !3434, line: 322, column: 6)
!21091 = !DILocation(line: 322, column: 6, scope: !21079)
!21092 = !DILocation(line: 328, column: 26, scope: !21079)
!21093 = !DILocation(line: 333, column: 43, scope: !21079)
!21094 = !DILocation(line: 337, column: 2, scope: !21079)
!21095 = !DILocation(line: 338, column: 29, scope: !21085)
!21096 = !DILocation(line: 0, scope: !21085)
!21097 = !DILocation(line: 341, column: 23, scope: !21098)
!21098 = distinct !DILexicalBlock(scope: !21085, file: !3434, line: 341, column: 7)
!21099 = !DILocation(line: 341, column: 39, scope: !21098)
!21100 = !DILocation(line: 349, column: 1, scope: !21079)
!21101 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !124, file: !124, line: 1675, type: !8393, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !2953)
!21102 = !DILocation(line: 1677, column: 9, scope: !21101)
!21103 = !DILocation(line: 1677, column: 2, scope: !21101)
!21104 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !21105, file: !21105, line: 24, type: !8393, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !2953)
!21105 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!21106 = !DILocation(line: 26, column: 9, scope: !21104)
!21107 = !DILocation(line: 26, column: 2, scope: !21104)
!21108 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3434, file: !3434, line: 364, type: !21109, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3404, retainedNodes: !21111)
!21109 = !DISubroutineType(types: !21110)
!21110 = !{!109, !20445}
!21111 = !{!21112, !21113}
!21112 = !DILocalVariable(name: "timeout", arg: 1, scope: !21108, file: !3434, line: 364, type: !20445)
!21113 = !DILocalVariable(name: "dt", scope: !21108, file: !3434, line: 366, type: !104)
!21114 = !DILocation(line: 0, scope: !21108)
!21115 = !DILocation(line: 368, column: 6, scope: !21108)
!21116 = !DILocation(line: 371, column: 10, scope: !21117)
!21117 = distinct !DILexicalBlock(scope: !21118, file: !3434, line: 370, column: 47)
!21118 = distinct !DILexicalBlock(scope: !21119, file: !3434, line: 370, column: 13)
!21119 = distinct !DILexicalBlock(scope: !21108, file: !3434, line: 368, column: 6)
!21120 = !DILocation(line: 371, column: 3, scope: !21117)
!21121 = !DILocation(line: 376, column: 58, scope: !21122)
!21122 = distinct !DILexicalBlock(scope: !21123, file: !3434, line: 376, column: 7)
!21123 = distinct !DILexicalBlock(scope: !21118, file: !3434, line: 372, column: 9)
!21124 = !DILocation(line: 376, column: 7, scope: !21123)
!21125 = !DILocation(line: 376, column: 43, scope: !21122)
!21126 = !DILocation(line: 377, column: 4, scope: !21127)
!21127 = distinct !DILexicalBlock(scope: !21122, file: !3434, line: 376, column: 64)
!21128 = !DILocation(line: 379, column: 10, scope: !21123)
!21129 = !DILocation(line: 379, column: 33, scope: !21123)
!21130 = !DILocation(line: 379, column: 31, scope: !21123)
!21131 = !DILocation(line: 379, column: 3, scope: !21123)
!21132 = !DILocation(line: 0, scope: !21119)
!21133 = !DILocation(line: 381, column: 1, scope: !21108)
!21134 = distinct !DISubprogram(name: "boot_banner", scope: !21135, file: !21135, line: 26, type: !333, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !4160, retainedNodes: !2953)
!21135 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!21136 = !DILocation(line: 36, column: 1, scope: !21134)
!21137 = distinct !DISubprogram(name: "statics_init", scope: !3464, file: !3464, line: 21, type: !3042, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21138)
!21138 = !{!21139, !21140}
!21139 = !DILocalVariable(name: "unused", arg: 1, scope: !21137, file: !3464, line: 21, type: !3044)
!21140 = !DILocalVariable(name: "h", scope: !21141, file: !3464, line: 24, type: !21142)
!21141 = distinct !DILexicalBlock(scope: !21137, file: !3464, line: 24, column: 2)
!21142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21143, size: 32)
!21143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !21144)
!21144 = !{!21145, !21151, !21157}
!21145 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !21143, file: !124, line: 5074, baseType: !21146, size: 96)
!21146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !270, line: 56, size: 96, elements: !21147)
!21147 = !{!21148, !21149, !21150}
!21148 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !21146, file: !270, line: 57, baseType: !273, size: 32)
!21149 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !21146, file: !270, line: 58, baseType: !102, size: 32, offset: 32)
!21150 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !21146, file: !270, line: 59, baseType: !153, size: 32, offset: 64)
!21151 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !21143, file: !124, line: 5075, baseType: !21152, size: 64, offset: 96)
!21152 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !21153)
!21153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !21154)
!21154 = !{!21155}
!21155 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !21153, file: !128, line: 232, baseType: !21156, size: 64)
!21156 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3450)
!21157 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !21143, file: !124, line: 5076, baseType: !21158, size: 32, offset: 160)
!21158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !21159)
!21159 = !{!21160}
!21160 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !21158, file: !149, line: 52, baseType: !22, size: 32)
!21161 = !DILocation(line: 0, scope: !21137)
!21162 = !DILocation(line: 0, scope: !21141)
!21163 = !DILocation(line: 24, column: 2, scope: !21164)
!21164 = distinct !DILexicalBlock(scope: !21165, file: !3464, line: 24, column: 2)
!21165 = distinct !DILexicalBlock(scope: !21166, file: !3464, line: 24, column: 2)
!21166 = distinct !DILexicalBlock(scope: !21141, file: !3464, line: 24, column: 2)
!21167 = !DILocation(line: 24, column: 2, scope: !21168)
!21168 = distinct !DILexicalBlock(scope: !21169, file: !3464, line: 24, column: 2)
!21169 = distinct !DILexicalBlock(scope: !21164, file: !3464, line: 24, column: 2)
!21170 = !DILocation(line: 24, column: 2, scope: !21165)
!21171 = !DILocation(line: 24, column: 2, scope: !21141)
!21172 = !DILocation(line: 52, column: 2, scope: !21137)
!21173 = !DILocation(line: 49, column: 27, scope: !21174)
!21174 = distinct !DILexicalBlock(scope: !21175, file: !3464, line: 48, column: 3)
!21175 = distinct !DILexicalBlock(scope: !21166, file: !3464, line: 24, column: 36)
!21176 = !DILocation(line: 49, column: 45, scope: !21174)
!21177 = !DILocation(line: 49, column: 4, scope: !21174)
!21178 = !DILocation(line: 24, column: 2, scope: !21166)
!21179 = !DILocation(line: 24, column: 2, scope: !21169)
!21180 = distinct !{!21180, !21171, !21181}
!21181 = !DILocation(line: 51, column: 2, scope: !21141)
!21182 = distinct !DISubprogram(name: "k_heap_init", scope: !3464, file: !3464, line: 13, type: !21183, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21185)
!21183 = !DISubroutineType(types: !21184)
!21184 = !{null, !21142, !102, !153}
!21185 = !{!21186, !21187, !21188}
!21186 = !DILocalVariable(name: "h", arg: 1, scope: !21182, file: !3464, line: 13, type: !21142)
!21187 = !DILocalVariable(name: "mem", arg: 2, scope: !21182, file: !3464, line: 13, type: !102)
!21188 = !DILocalVariable(name: "bytes", arg: 3, scope: !21182, file: !3464, line: 13, type: !153)
!21189 = !DILocation(line: 0, scope: !21182)
!21190 = !DILocation(line: 15, column: 19, scope: !21182)
!21191 = !DILocation(line: 15, column: 2, scope: !21182)
!21192 = !DILocation(line: 16, column: 20, scope: !21182)
!21193 = !DILocation(line: 16, column: 2, scope: !21182)
!21194 = !DILocation(line: 19, column: 1, scope: !21182)
!21195 = distinct !DISubprogram(name: "z_waitq_init", scope: !16240, file: !16240, line: 47, type: !21196, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21199)
!21196 = !DISubroutineType(types: !21197)
!21197 = !{null, !21198}
!21198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21152, size: 32)
!21199 = !{!21200}
!21200 = !DILocalVariable(name: "w", arg: 1, scope: !21195, file: !16240, line: 47, type: !21198)
!21201 = !DILocation(line: 0, scope: !21195)
!21202 = !DILocation(line: 49, column: 21, scope: !21195)
!21203 = !DILocation(line: 49, column: 2, scope: !21195)
!21204 = !DILocation(line: 50, column: 1, scope: !21195)
!21205 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !21206, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21209)
!21206 = !DISubroutineType(types: !21207)
!21207 = !{null, !21208}
!21208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21156, size: 32)
!21209 = !{!21210}
!21210 = !DILocalVariable(name: "list", arg: 1, scope: !21205, file: !133, line: 197, type: !21208)
!21211 = !DILocation(line: 0, scope: !21205)
!21212 = !DILocation(line: 199, column: 8, scope: !21205)
!21213 = !DILocation(line: 199, column: 13, scope: !21205)
!21214 = !DILocation(line: 200, column: 8, scope: !21205)
!21215 = !DILocation(line: 200, column: 13, scope: !21205)
!21216 = !DILocation(line: 201, column: 1, scope: !21205)
!21217 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !3464, file: !3464, line: 64, type: !21218, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21224)
!21218 = !DISubroutineType(types: !21219)
!21219 = !{!102, !21142, !153, !153, !21220}
!21220 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !21221)
!21221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !21222)
!21222 = !{!21223}
!21223 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !21221, file: !105, line: 66, baseType: !104, size: 64)
!21224 = !{!21225, !21226, !21227, !21228, !21229, !21230, !21231, !21232, !21237}
!21225 = !DILocalVariable(name: "h", arg: 1, scope: !21217, file: !3464, line: 64, type: !21142)
!21226 = !DILocalVariable(name: "align", arg: 2, scope: !21217, file: !3464, line: 64, type: !153)
!21227 = !DILocalVariable(name: "bytes", arg: 3, scope: !21217, file: !3464, line: 64, type: !153)
!21228 = !DILocalVariable(name: "timeout", arg: 4, scope: !21217, file: !3464, line: 65, type: !21220)
!21229 = !DILocalVariable(name: "now", scope: !21217, file: !3464, line: 67, type: !106)
!21230 = !DILocalVariable(name: "end", scope: !21217, file: !3464, line: 67, type: !106)
!21231 = !DILocalVariable(name: "ret", scope: !21217, file: !3464, line: 68, type: !102)
!21232 = !DILocalVariable(name: "key", scope: !21217, file: !3464, line: 72, type: !21233)
!21233 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !21234)
!21234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !21235)
!21235 = !{!21236}
!21236 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !21234, file: !149, line: 33, baseType: !103, size: 32)
!21237 = !DILocalVariable(name: "blocked_alloc", scope: !21217, file: !3464, line: 78, type: !119)
!21238 = !DILocation(line: 0, scope: !21217)
!21239 = !DILocation(line: 67, column: 21, scope: !21217)
!21240 = !DILocation(line: 70, column: 8, scope: !21217)
!21241 = !DILocation(line: 72, column: 41, scope: !21217)
!21242 = !DILocalVariable(name: "l", arg: 1, scope: !21243, file: !149, line: 136, type: !21246)
!21243 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !21244, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21247)
!21244 = !DISubroutineType(types: !21245)
!21245 = !{!21233, !21246}
!21246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21158, size: 32)
!21247 = !{!21242, !21248}
!21248 = !DILocalVariable(name: "k", scope: !21243, file: !149, line: 139, type: !21233)
!21249 = !DILocation(line: 0, scope: !21243, inlinedAt: !21250)
!21250 = distinct !DILocation(line: 72, column: 25, scope: !21217)
!21251 = !DILocation(line: 55, column: 2, scope: !21252, inlinedAt: !21256)
!21252 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7985, file: !7985, line: 42, type: !7986, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21253)
!21253 = !{!21254, !21255}
!21254 = !DILocalVariable(name: "key", scope: !21252, file: !7985, line: 44, type: !32)
!21255 = !DILocalVariable(name: "tmp", scope: !21252, file: !7985, line: 53, type: !32)
!21256 = distinct !DILocation(line: 145, column: 10, scope: !21243, inlinedAt: !21250)
!21257 = !{i64 2282568}
!21258 = !DILocation(line: 0, scope: !21252, inlinedAt: !21256)
!21259 = !DILocation(line: 148, column: 2, scope: !21260, inlinedAt: !21250)
!21260 = distinct !DILexicalBlock(scope: !21261, file: !149, line: 148, column: 2)
!21261 = distinct !DILexicalBlock(scope: !21243, file: !149, line: 148, column: 2)
!21262 = !DILocation(line: 148, column: 2, scope: !21261, inlinedAt: !21250)
!21263 = !DILocation(line: 148, column: 2, scope: !21264, inlinedAt: !21250)
!21264 = distinct !DILexicalBlock(scope: !21260, file: !149, line: 148, column: 2)
!21265 = !DILocation(line: 160, column: 2, scope: !21243, inlinedAt: !21250)
!21266 = !DILocation(line: 1031, column: 3, scope: !21267, inlinedAt: !21270)
!21267 = distinct !DISubprogram(name: "__get_IPSR", scope: !8306, file: !8306, line: 1027, type: !8393, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21268)
!21268 = !{!21269}
!21269 = !DILocalVariable(name: "result", scope: !21267, file: !8306, line: 1029, type: !108)
!21270 = distinct !DILocation(line: 48, column: 10, scope: !21271, inlinedAt: !21272)
!21271 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9356, file: !9356, line: 46, type: !9357, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !2953)
!21272 = distinct !DILocation(line: 76, column: 2, scope: !21273)
!21273 = distinct !DILexicalBlock(scope: !21274, file: !3464, line: 76, column: 2)
!21274 = distinct !DILexicalBlock(scope: !21217, file: !3464, line: 76, column: 2)
!21275 = !{i64 3729002}
!21276 = !DILocation(line: 0, scope: !21267, inlinedAt: !21270)
!21277 = !DILocation(line: 48, column: 9, scope: !21271, inlinedAt: !21272)
!21278 = !DILocation(line: 76, column: 2, scope: !21273)
!21279 = !DILocation(line: 81, column: 9, scope: !21280)
!21280 = distinct !DILexicalBlock(scope: !21217, file: !3464, line: 80, column: 22)
!21281 = !DILocation(line: 83, column: 9, scope: !21280)
!21282 = !DILocation(line: 85, column: 12, scope: !21283)
!21283 = distinct !DILexicalBlock(scope: !21280, file: !3464, line: 84, column: 7)
!21284 = !DILocation(line: 85, column: 21, scope: !21283)
!21285 = !DILocation(line: 76, column: 2, scope: !21286)
!21286 = distinct !DILexicalBlock(scope: !21273, file: !3464, line: 76, column: 2)
!21287 = !DILocation(line: 85, column: 30, scope: !21283)
!21288 = !DILocation(line: 85, column: 37, scope: !21283)
!21289 = !DILocation(line: 84, column: 7, scope: !21280)
!21290 = !DILocation(line: 99, column: 10, scope: !21280)
!21291 = !DILocation(line: 0, scope: !21243, inlinedAt: !21292)
!21292 = distinct !DILocation(line: 101, column: 9, scope: !21280)
!21293 = !DILocation(line: 55, column: 2, scope: !21252, inlinedAt: !21294)
!21294 = distinct !DILocation(line: 145, column: 10, scope: !21243, inlinedAt: !21292)
!21295 = !DILocation(line: 0, scope: !21252, inlinedAt: !21294)
!21296 = !DILocation(line: 148, column: 2, scope: !21260, inlinedAt: !21292)
!21297 = !DILocation(line: 148, column: 2, scope: !21261, inlinedAt: !21292)
!21298 = !DILocation(line: 148, column: 2, scope: !21264, inlinedAt: !21292)
!21299 = !DILocation(line: 160, column: 2, scope: !21243, inlinedAt: !21292)
!21300 = distinct !{!21300, !21301, !21302}
!21301 = !DILocation(line: 80, column: 2, scope: !21217)
!21302 = !DILocation(line: 102, column: 2, scope: !21217)
!21303 = !DILocalVariable(name: "key", arg: 2, scope: !21304, file: !149, line: 190, type: !21233)
!21304 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !21305, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21307)
!21305 = !DISubroutineType(types: !21306)
!21306 = !{null, !21246, !21233}
!21307 = !{!21308, !21303}
!21308 = !DILocalVariable(name: "l", arg: 1, scope: !21304, file: !149, line: 189, type: !21246)
!21309 = !DILocation(line: 0, scope: !21304, inlinedAt: !21310)
!21310 = distinct !DILocation(line: 106, column: 2, scope: !21217)
!21311 = !DILocation(line: 194, column: 2, scope: !21312, inlinedAt: !21310)
!21312 = distinct !DILexicalBlock(scope: !21313, file: !149, line: 194, column: 2)
!21313 = distinct !DILexicalBlock(scope: !21304, file: !149, line: 194, column: 2)
!21314 = !DILocation(line: 194, column: 2, scope: !21313, inlinedAt: !21310)
!21315 = !DILocation(line: 194, column: 2, scope: !21316, inlinedAt: !21310)
!21316 = distinct !DILexicalBlock(scope: !21312, file: !149, line: 194, column: 2)
!21317 = !DILocalVariable(name: "key", arg: 1, scope: !21318, file: !7985, line: 84, type: !32)
!21318 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7985, file: !7985, line: 84, type: !7996, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21319)
!21319 = !{!21317}
!21320 = !DILocation(line: 0, scope: !21318, inlinedAt: !21321)
!21321 = distinct !DILocation(line: 215, column: 2, scope: !21304, inlinedAt: !21310)
!21322 = !DILocation(line: 95, column: 2, scope: !21318, inlinedAt: !21321)
!21323 = !{i64 2283385}
!21324 = !DILocation(line: 107, column: 2, scope: !21217)
!21325 = distinct !DISubprogram(name: "k_heap_alloc", scope: !3464, file: !3464, line: 110, type: !21326, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21328)
!21326 = !DISubroutineType(types: !21327)
!21327 = !{!102, !21142, !153, !21220}
!21328 = !{!21329, !21330, !21331, !21332}
!21329 = !DILocalVariable(name: "h", arg: 1, scope: !21325, file: !3464, line: 110, type: !21142)
!21330 = !DILocalVariable(name: "bytes", arg: 2, scope: !21325, file: !3464, line: 110, type: !153)
!21331 = !DILocalVariable(name: "timeout", arg: 3, scope: !21325, file: !3464, line: 110, type: !21220)
!21332 = !DILocalVariable(name: "ret", scope: !21325, file: !3464, line: 114, type: !102)
!21333 = !DILocation(line: 0, scope: !21325)
!21334 = !DILocation(line: 114, column: 14, scope: !21325)
!21335 = !DILocation(line: 118, column: 2, scope: !21325)
!21336 = distinct !DISubprogram(name: "k_heap_free", scope: !3464, file: !3464, line: 121, type: !21337, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !21339)
!21337 = !DISubroutineType(types: !21338)
!21338 = !{null, !21142, !102}
!21339 = !{!21340, !21341, !21342}
!21340 = !DILocalVariable(name: "h", arg: 1, scope: !21336, file: !3464, line: 121, type: !21142)
!21341 = !DILocalVariable(name: "mem", arg: 2, scope: !21336, file: !3464, line: 121, type: !102)
!21342 = !DILocalVariable(name: "key", scope: !21336, file: !3464, line: 123, type: !21233)
!21343 = !DILocation(line: 0, scope: !21336)
!21344 = !DILocation(line: 123, column: 41, scope: !21336)
!21345 = !DILocation(line: 0, scope: !21243, inlinedAt: !21346)
!21346 = distinct !DILocation(line: 123, column: 25, scope: !21336)
!21347 = !DILocation(line: 55, column: 2, scope: !21252, inlinedAt: !21348)
!21348 = distinct !DILocation(line: 145, column: 10, scope: !21243, inlinedAt: !21346)
!21349 = !DILocation(line: 0, scope: !21252, inlinedAt: !21348)
!21350 = !DILocation(line: 148, column: 2, scope: !21260, inlinedAt: !21346)
!21351 = !DILocation(line: 148, column: 2, scope: !21261, inlinedAt: !21346)
!21352 = !DILocation(line: 148, column: 2, scope: !21264, inlinedAt: !21346)
!21353 = !DILocation(line: 160, column: 2, scope: !21243, inlinedAt: !21346)
!21354 = !DILocation(line: 125, column: 20, scope: !21336)
!21355 = !DILocation(line: 125, column: 2, scope: !21336)
!21356 = !DILocation(line: 128, column: 60, scope: !21357)
!21357 = distinct !DILexicalBlock(scope: !21336, file: !3464, line: 128, column: 6)
!21358 = !DILocation(line: 128, column: 43, scope: !21357)
!21359 = !DILocation(line: 128, column: 68, scope: !21357)
!21360 = !DILocation(line: 128, column: 6, scope: !21336)
!21361 = !DILocation(line: 129, column: 3, scope: !21362)
!21362 = distinct !DILexicalBlock(scope: !21357, file: !3464, line: 128, column: 74)
!21363 = !DILocation(line: 130, column: 2, scope: !21362)
!21364 = !DILocation(line: 0, scope: !21304, inlinedAt: !21365)
!21365 = distinct !DILocation(line: 131, column: 3, scope: !21366)
!21366 = distinct !DILexicalBlock(scope: !21357, file: !3464, line: 130, column: 9)
!21367 = !DILocation(line: 194, column: 2, scope: !21312, inlinedAt: !21365)
!21368 = !DILocation(line: 194, column: 2, scope: !21313, inlinedAt: !21365)
!21369 = !DILocation(line: 194, column: 2, scope: !21316, inlinedAt: !21365)
!21370 = !DILocation(line: 0, scope: !21318, inlinedAt: !21371)
!21371 = distinct !DILocation(line: 215, column: 2, scope: !21304, inlinedAt: !21365)
!21372 = !DILocation(line: 95, column: 2, scope: !21318, inlinedAt: !21371)
!21373 = !DILocation(line: 133, column: 1, scope: !21336)
